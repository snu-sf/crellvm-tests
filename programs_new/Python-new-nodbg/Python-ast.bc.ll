; ModuleID = './Python-ast.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type opaque
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct._mod = type { i32, %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { %struct.asdl_seq* }
%struct.asdl_seq = type { i64, [1 x i8*] }
%struct._arena = type opaque
%struct.anon.0 = type { %struct.asdl_seq* }
%struct._expr = type { i32, %union.anon.2, i32, i32 }
%union.anon.2 = type { %struct.anon.17 }
%struct.anon.17 = type { %struct._expr*, %struct.asdl_seq*, %struct.asdl_seq*, %struct._expr*, %struct._expr* }
%struct.anon.1 = type { %struct._expr* }
%struct.anon.32 = type { %struct.asdl_seq* }
%struct._stmt = type { i32, %union.anon.33, i32, i32 }
%union.anon.33 = type { %struct.anon.35 }
%struct.anon.35 = type { %struct._object*, %struct.asdl_seq*, %struct.asdl_seq*, %struct._expr*, %struct._expr*, %struct.asdl_seq*, %struct.asdl_seq* }
%struct._arguments = type { %struct.asdl_seq*, %struct._arg*, %struct.asdl_seq*, %struct.asdl_seq*, %struct._arg*, %struct.asdl_seq* }
%struct._arg = type { %struct._object*, %struct._expr*, i32, i32 }
%struct.anon.34 = type { %struct._object*, %struct._arguments*, %struct.asdl_seq*, %struct.asdl_seq*, %struct._expr* }
%struct.anon.36 = type { %struct._expr* }
%struct.anon.37 = type { %struct.asdl_seq* }
%struct.anon.38 = type { %struct.asdl_seq*, %struct._expr* }
%struct.anon.39 = type { %struct._expr*, i32, %struct._expr* }
%struct.anon.40 = type { %struct._expr*, %struct._expr*, %struct.asdl_seq*, %struct.asdl_seq* }
%struct.anon.41 = type { %struct._expr*, %struct.asdl_seq*, %struct.asdl_seq* }
%struct.anon.42 = type { %struct._expr*, %struct.asdl_seq*, %struct.asdl_seq* }
%struct.anon.43 = type { %struct.asdl_seq*, %struct.asdl_seq* }
%struct.anon.44 = type { %struct._expr*, %struct._expr* }
%struct.anon.45 = type { %struct.asdl_seq*, %struct.asdl_seq*, %struct.asdl_seq*, %struct.asdl_seq* }
%struct.anon.46 = type { %struct._expr*, %struct._expr* }
%struct.anon.47 = type { %struct.asdl_seq* }
%struct.anon.48 = type { %struct._object*, %struct.asdl_seq*, i32 }
%struct.anon.49 = type { %struct.asdl_seq* }
%struct.anon.50 = type { %struct.asdl_seq* }
%struct.anon.51 = type { %struct._expr* }
%struct.anon.3 = type { i32, %struct.asdl_seq* }
%struct.anon.4 = type { %struct._expr*, i32, %struct._expr* }
%struct.anon.5 = type { i32, %struct._expr* }
%struct.anon.6 = type { %struct._arguments*, %struct._expr* }
%struct.anon.7 = type { %struct._expr*, %struct._expr*, %struct._expr* }
%struct.anon.8 = type { %struct.asdl_seq*, %struct.asdl_seq* }
%struct.anon.9 = type { %struct.asdl_seq* }
%struct.anon.10 = type { %struct._expr*, %struct.asdl_seq* }
%struct.anon.11 = type { %struct._expr*, %struct.asdl_seq* }
%struct.anon.12 = type { %struct._expr*, %struct._expr*, %struct.asdl_seq* }
%struct.anon.13 = type { %struct._expr*, %struct.asdl_seq* }
%struct.anon.14 = type { %struct._expr* }
%struct.anon.15 = type { %struct._expr* }
%struct.asdl_int_seq = type { i64, [1 x i32] }
%struct.anon.16 = type { %struct._expr*, %struct.asdl_int_seq*, %struct.asdl_seq* }
%struct.anon.18 = type { %struct._object* }
%struct.anon.19 = type { %struct._object* }
%struct.anon.20 = type { %struct._object* }
%struct.anon.21 = type { %struct._object* }
%struct.anon.22 = type { %struct._expr*, %struct._object*, i32 }
%struct._slice = type { i32, %union.anon.24 }
%union.anon.24 = type { %struct.anon.25 }
%struct.anon.25 = type { %struct._expr*, %struct._expr*, %struct._expr* }
%struct.anon.23 = type { %struct._expr*, %struct._slice*, i32 }
%struct.anon.28 = type { %struct._expr*, i32 }
%struct.anon.29 = type { %struct._object*, i32 }
%struct.anon.30 = type { %struct.asdl_seq*, i32 }
%struct.anon.31 = type { %struct.asdl_seq*, i32 }
%struct.anon.26 = type { %struct.asdl_seq* }
%struct.anon.27 = type { %struct._expr* }
%struct._comprehension = type { %struct._expr*, %struct._expr*, %struct.asdl_seq* }
%struct._excepthandler = type { i32, %union.anon.52, i32, i32 }
%union.anon.52 = type { %struct.anon.53 }
%struct.anon.53 = type { %struct._expr*, %struct._object*, %struct.asdl_seq* }
%struct._keyword = type { %struct._object*, %struct._expr* }
%struct._alias = type { %struct._object*, %struct._object* }
%struct._withitem = type { %struct._expr*, %struct._expr* }
%struct.PyListObject = type { %struct.PyVarObject, %struct._object**, i64 }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.AST_object = type { %struct._object, %struct._object* }

@PyExc_ValueError = external global %struct._object*, align 8
@.str = private unnamed_addr constant [38 x i8] c"field body is required for Expression\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"field name is required for FunctionDef\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"field args is required for FunctionDef\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"field name is required for ClassDef\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"field value is required for Assign\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"field target is required for AugAssign\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"field op is required for AugAssign\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"field value is required for AugAssign\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"field target is required for For\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"field iter is required for For\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"field test is required for While\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"field test is required for If\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"field test is required for Assert\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"field value is required for Expr\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"field op is required for BoolOp\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"field left is required for BinOp\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"field op is required for BinOp\00", align 1
@.str.17 = private unnamed_addr constant [34 x i8] c"field right is required for BinOp\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"field op is required for UnaryOp\00", align 1
@.str.19 = private unnamed_addr constant [38 x i8] c"field operand is required for UnaryOp\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"field args is required for Lambda\00", align 1
@.str.21 = private unnamed_addr constant [34 x i8] c"field body is required for Lambda\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"field test is required for IfExp\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"field body is required for IfExp\00", align 1
@.str.24 = private unnamed_addr constant [35 x i8] c"field orelse is required for IfExp\00", align 1
@.str.25 = private unnamed_addr constant [35 x i8] c"field elt is required for ListComp\00", align 1
@.str.26 = private unnamed_addr constant [34 x i8] c"field elt is required for SetComp\00", align 1
@.str.27 = private unnamed_addr constant [35 x i8] c"field key is required for DictComp\00", align 1
@.str.28 = private unnamed_addr constant [37 x i8] c"field value is required for DictComp\00", align 1
@.str.29 = private unnamed_addr constant [39 x i8] c"field elt is required for GeneratorExp\00", align 1
@.str.30 = private unnamed_addr constant [38 x i8] c"field value is required for YieldFrom\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"field left is required for Compare\00", align 1
@.str.32 = private unnamed_addr constant [32 x i8] c"field func is required for Call\00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"field n is required for Num\00", align 1
@.str.34 = private unnamed_addr constant [28 x i8] c"field s is required for Str\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"field s is required for Bytes\00", align 1
@.str.36 = private unnamed_addr constant [41 x i8] c"field value is required for NameConstant\00", align 1
@.str.37 = private unnamed_addr constant [38 x i8] c"field value is required for Attribute\00", align 1
@.str.38 = private unnamed_addr constant [37 x i8] c"field attr is required for Attribute\00", align 1
@.str.39 = private unnamed_addr constant [36 x i8] c"field ctx is required for Attribute\00", align 1
@.str.40 = private unnamed_addr constant [38 x i8] c"field value is required for Subscript\00", align 1
@.str.41 = private unnamed_addr constant [38 x i8] c"field slice is required for Subscript\00", align 1
@.str.42 = private unnamed_addr constant [36 x i8] c"field ctx is required for Subscript\00", align 1
@.str.43 = private unnamed_addr constant [36 x i8] c"field value is required for Starred\00", align 1
@.str.44 = private unnamed_addr constant [34 x i8] c"field ctx is required for Starred\00", align 1
@.str.45 = private unnamed_addr constant [30 x i8] c"field id is required for Name\00", align 1
@.str.46 = private unnamed_addr constant [31 x i8] c"field ctx is required for Name\00", align 1
@.str.47 = private unnamed_addr constant [31 x i8] c"field ctx is required for List\00", align 1
@.str.48 = private unnamed_addr constant [32 x i8] c"field ctx is required for Tuple\00", align 1
@.str.49 = private unnamed_addr constant [34 x i8] c"field value is required for Index\00", align 1
@.str.50 = private unnamed_addr constant [43 x i8] c"field target is required for comprehension\00", align 1
@.str.51 = private unnamed_addr constant [41 x i8] c"field iter is required for comprehension\00", align 1
@.str.52 = private unnamed_addr constant [30 x i8] c"field arg is required for arg\00", align 1
@.str.53 = private unnamed_addr constant [34 x i8] c"field arg is required for keyword\00", align 1
@.str.54 = private unnamed_addr constant [36 x i8] c"field value is required for keyword\00", align 1
@.str.55 = private unnamed_addr constant [33 x i8] c"field name is required for alias\00", align 1
@.str.56 = private unnamed_addr constant [44 x i8] c"field context_expr is required for withitem\00", align 1
@_astmodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0), i8* null, i64 0, %struct.PyMethodDef* null, i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, void (i8*)* null }, align 8
@.str.57 = private unnamed_addr constant [4 x i8] c"AST\00", align 1
@AST_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* @PyType_Type }, i64 0 }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.229, i32 0, i32 0), i64 24, i64 0, void (%struct._object*)* bitcast (void (%struct.AST_object*)* @ast_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* @PyObject_GenericSetAttr, %struct.PyBufferProcs* null, i64 279552, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.AST_object*, i32 (%struct._object*, i8*)*, i8*)* @ast_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (void (%struct.AST_object*)* @ast_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @ast_type_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @ast_type_getsets, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* @ast_type_init, %struct._object* (%struct._typeobject*, i64)* @PyType_GenericAlloc, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyType_GenericNew, void (i8*)* @PyObject_GC_Del, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.58 = private unnamed_addr constant [14 x i8] c"PyCF_ONLY_AST\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"mod\00", align 1
@mod_type = internal global %struct._typeobject* null, align 8
@.str.60 = private unnamed_addr constant [7 x i8] c"Module\00", align 1
@Module_type = internal global %struct._typeobject* null, align 8
@.str.61 = private unnamed_addr constant [12 x i8] c"Interactive\00", align 1
@Interactive_type = internal global %struct._typeobject* null, align 8
@.str.62 = private unnamed_addr constant [11 x i8] c"Expression\00", align 1
@Expression_type = internal global %struct._typeobject* null, align 8
@.str.63 = private unnamed_addr constant [6 x i8] c"Suite\00", align 1
@Suite_type = internal global %struct._typeobject* null, align 8
@.str.64 = private unnamed_addr constant [5 x i8] c"stmt\00", align 1
@stmt_type = internal global %struct._typeobject* null, align 8
@.str.65 = private unnamed_addr constant [12 x i8] c"FunctionDef\00", align 1
@FunctionDef_type = internal global %struct._typeobject* null, align 8
@.str.66 = private unnamed_addr constant [9 x i8] c"ClassDef\00", align 1
@ClassDef_type = internal global %struct._typeobject* null, align 8
@.str.67 = private unnamed_addr constant [7 x i8] c"Return\00", align 1
@Return_type = internal global %struct._typeobject* null, align 8
@.str.68 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@Delete_type = internal global %struct._typeobject* null, align 8
@.str.69 = private unnamed_addr constant [7 x i8] c"Assign\00", align 1
@Assign_type = internal global %struct._typeobject* null, align 8
@.str.70 = private unnamed_addr constant [10 x i8] c"AugAssign\00", align 1
@AugAssign_type = internal global %struct._typeobject* null, align 8
@.str.71 = private unnamed_addr constant [4 x i8] c"For\00", align 1
@For_type = internal global %struct._typeobject* null, align 8
@.str.72 = private unnamed_addr constant [6 x i8] c"While\00", align 1
@While_type = internal global %struct._typeobject* null, align 8
@.str.73 = private unnamed_addr constant [3 x i8] c"If\00", align 1
@If_type = internal global %struct._typeobject* null, align 8
@.str.74 = private unnamed_addr constant [5 x i8] c"With\00", align 1
@With_type = internal global %struct._typeobject* null, align 8
@.str.75 = private unnamed_addr constant [6 x i8] c"Raise\00", align 1
@Raise_type = internal global %struct._typeobject* null, align 8
@.str.76 = private unnamed_addr constant [4 x i8] c"Try\00", align 1
@Try_type = internal global %struct._typeobject* null, align 8
@.str.77 = private unnamed_addr constant [7 x i8] c"Assert\00", align 1
@Assert_type = internal global %struct._typeobject* null, align 8
@.str.78 = private unnamed_addr constant [7 x i8] c"Import\00", align 1
@Import_type = internal global %struct._typeobject* null, align 8
@.str.79 = private unnamed_addr constant [11 x i8] c"ImportFrom\00", align 1
@ImportFrom_type = internal global %struct._typeobject* null, align 8
@.str.80 = private unnamed_addr constant [7 x i8] c"Global\00", align 1
@Global_type = internal global %struct._typeobject* null, align 8
@.str.81 = private unnamed_addr constant [9 x i8] c"Nonlocal\00", align 1
@Nonlocal_type = internal global %struct._typeobject* null, align 8
@.str.82 = private unnamed_addr constant [5 x i8] c"Expr\00", align 1
@Expr_type = internal global %struct._typeobject* null, align 8
@.str.83 = private unnamed_addr constant [5 x i8] c"Pass\00", align 1
@Pass_type = internal global %struct._typeobject* null, align 8
@.str.84 = private unnamed_addr constant [6 x i8] c"Break\00", align 1
@Break_type = internal global %struct._typeobject* null, align 8
@.str.85 = private unnamed_addr constant [9 x i8] c"Continue\00", align 1
@Continue_type = internal global %struct._typeobject* null, align 8
@.str.86 = private unnamed_addr constant [5 x i8] c"expr\00", align 1
@expr_type = internal global %struct._typeobject* null, align 8
@.str.87 = private unnamed_addr constant [7 x i8] c"BoolOp\00", align 1
@BoolOp_type = internal global %struct._typeobject* null, align 8
@.str.88 = private unnamed_addr constant [6 x i8] c"BinOp\00", align 1
@BinOp_type = internal global %struct._typeobject* null, align 8
@.str.89 = private unnamed_addr constant [8 x i8] c"UnaryOp\00", align 1
@UnaryOp_type = internal global %struct._typeobject* null, align 8
@.str.90 = private unnamed_addr constant [7 x i8] c"Lambda\00", align 1
@Lambda_type = internal global %struct._typeobject* null, align 8
@.str.91 = private unnamed_addr constant [6 x i8] c"IfExp\00", align 1
@IfExp_type = internal global %struct._typeobject* null, align 8
@.str.92 = private unnamed_addr constant [5 x i8] c"Dict\00", align 1
@Dict_type = internal global %struct._typeobject* null, align 8
@.str.93 = private unnamed_addr constant [4 x i8] c"Set\00", align 1
@Set_type = internal global %struct._typeobject* null, align 8
@.str.94 = private unnamed_addr constant [9 x i8] c"ListComp\00", align 1
@ListComp_type = internal global %struct._typeobject* null, align 8
@.str.95 = private unnamed_addr constant [8 x i8] c"SetComp\00", align 1
@SetComp_type = internal global %struct._typeobject* null, align 8
@.str.96 = private unnamed_addr constant [9 x i8] c"DictComp\00", align 1
@DictComp_type = internal global %struct._typeobject* null, align 8
@.str.97 = private unnamed_addr constant [13 x i8] c"GeneratorExp\00", align 1
@GeneratorExp_type = internal global %struct._typeobject* null, align 8
@.str.98 = private unnamed_addr constant [6 x i8] c"Yield\00", align 1
@Yield_type = internal global %struct._typeobject* null, align 8
@.str.99 = private unnamed_addr constant [10 x i8] c"YieldFrom\00", align 1
@YieldFrom_type = internal global %struct._typeobject* null, align 8
@.str.100 = private unnamed_addr constant [8 x i8] c"Compare\00", align 1
@Compare_type = internal global %struct._typeobject* null, align 8
@.str.101 = private unnamed_addr constant [5 x i8] c"Call\00", align 1
@Call_type = internal global %struct._typeobject* null, align 8
@.str.102 = private unnamed_addr constant [4 x i8] c"Num\00", align 1
@Num_type = internal global %struct._typeobject* null, align 8
@.str.103 = private unnamed_addr constant [4 x i8] c"Str\00", align 1
@Str_type = internal global %struct._typeobject* null, align 8
@.str.104 = private unnamed_addr constant [6 x i8] c"Bytes\00", align 1
@Bytes_type = internal global %struct._typeobject* null, align 8
@.str.105 = private unnamed_addr constant [13 x i8] c"NameConstant\00", align 1
@NameConstant_type = internal global %struct._typeobject* null, align 8
@.str.106 = private unnamed_addr constant [9 x i8] c"Ellipsis\00", align 1
@Ellipsis_type = internal global %struct._typeobject* null, align 8
@.str.107 = private unnamed_addr constant [10 x i8] c"Attribute\00", align 1
@Attribute_type = internal global %struct._typeobject* null, align 8
@.str.108 = private unnamed_addr constant [10 x i8] c"Subscript\00", align 1
@Subscript_type = internal global %struct._typeobject* null, align 8
@.str.109 = private unnamed_addr constant [8 x i8] c"Starred\00", align 1
@Starred_type = internal global %struct._typeobject* null, align 8
@.str.110 = private unnamed_addr constant [5 x i8] c"Name\00", align 1
@Name_type = internal global %struct._typeobject* null, align 8
@.str.111 = private unnamed_addr constant [5 x i8] c"List\00", align 1
@List_type = internal global %struct._typeobject* null, align 8
@.str.112 = private unnamed_addr constant [6 x i8] c"Tuple\00", align 1
@Tuple_type = internal global %struct._typeobject* null, align 8
@.str.113 = private unnamed_addr constant [13 x i8] c"expr_context\00", align 1
@expr_context_type = internal global %struct._typeobject* null, align 8
@.str.114 = private unnamed_addr constant [5 x i8] c"Load\00", align 1
@Load_type = internal global %struct._typeobject* null, align 8
@.str.115 = private unnamed_addr constant [6 x i8] c"Store\00", align 1
@Store_type = internal global %struct._typeobject* null, align 8
@.str.116 = private unnamed_addr constant [4 x i8] c"Del\00", align 1
@Del_type = internal global %struct._typeobject* null, align 8
@.str.117 = private unnamed_addr constant [8 x i8] c"AugLoad\00", align 1
@AugLoad_type = internal global %struct._typeobject* null, align 8
@.str.118 = private unnamed_addr constant [9 x i8] c"AugStore\00", align 1
@AugStore_type = internal global %struct._typeobject* null, align 8
@.str.119 = private unnamed_addr constant [6 x i8] c"Param\00", align 1
@Param_type = internal global %struct._typeobject* null, align 8
@.str.120 = private unnamed_addr constant [6 x i8] c"slice\00", align 1
@slice_type = internal global %struct._typeobject* null, align 8
@.str.121 = private unnamed_addr constant [6 x i8] c"Slice\00", align 1
@Slice_type = internal global %struct._typeobject* null, align 8
@.str.122 = private unnamed_addr constant [9 x i8] c"ExtSlice\00", align 1
@ExtSlice_type = internal global %struct._typeobject* null, align 8
@.str.123 = private unnamed_addr constant [6 x i8] c"Index\00", align 1
@Index_type = internal global %struct._typeobject* null, align 8
@.str.124 = private unnamed_addr constant [7 x i8] c"boolop\00", align 1
@boolop_type = internal global %struct._typeobject* null, align 8
@.str.125 = private unnamed_addr constant [4 x i8] c"And\00", align 1
@And_type = internal global %struct._typeobject* null, align 8
@.str.126 = private unnamed_addr constant [3 x i8] c"Or\00", align 1
@Or_type = internal global %struct._typeobject* null, align 8
@.str.127 = private unnamed_addr constant [9 x i8] c"operator\00", align 1
@operator_type = internal global %struct._typeobject* null, align 8
@.str.128 = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@Add_type = internal global %struct._typeobject* null, align 8
@.str.129 = private unnamed_addr constant [4 x i8] c"Sub\00", align 1
@Sub_type = internal global %struct._typeobject* null, align 8
@.str.130 = private unnamed_addr constant [5 x i8] c"Mult\00", align 1
@Mult_type = internal global %struct._typeobject* null, align 8
@.str.131 = private unnamed_addr constant [4 x i8] c"Div\00", align 1
@Div_type = internal global %struct._typeobject* null, align 8
@.str.132 = private unnamed_addr constant [4 x i8] c"Mod\00", align 1
@Mod_type = internal global %struct._typeobject* null, align 8
@.str.133 = private unnamed_addr constant [4 x i8] c"Pow\00", align 1
@Pow_type = internal global %struct._typeobject* null, align 8
@.str.134 = private unnamed_addr constant [7 x i8] c"LShift\00", align 1
@LShift_type = internal global %struct._typeobject* null, align 8
@.str.135 = private unnamed_addr constant [7 x i8] c"RShift\00", align 1
@RShift_type = internal global %struct._typeobject* null, align 8
@.str.136 = private unnamed_addr constant [6 x i8] c"BitOr\00", align 1
@BitOr_type = internal global %struct._typeobject* null, align 8
@.str.137 = private unnamed_addr constant [7 x i8] c"BitXor\00", align 1
@BitXor_type = internal global %struct._typeobject* null, align 8
@.str.138 = private unnamed_addr constant [7 x i8] c"BitAnd\00", align 1
@BitAnd_type = internal global %struct._typeobject* null, align 8
@.str.139 = private unnamed_addr constant [9 x i8] c"FloorDiv\00", align 1
@FloorDiv_type = internal global %struct._typeobject* null, align 8
@.str.140 = private unnamed_addr constant [8 x i8] c"unaryop\00", align 1
@unaryop_type = internal global %struct._typeobject* null, align 8
@.str.141 = private unnamed_addr constant [7 x i8] c"Invert\00", align 1
@Invert_type = internal global %struct._typeobject* null, align 8
@.str.142 = private unnamed_addr constant [4 x i8] c"Not\00", align 1
@Not_type = internal global %struct._typeobject* null, align 8
@.str.143 = private unnamed_addr constant [5 x i8] c"UAdd\00", align 1
@UAdd_type = internal global %struct._typeobject* null, align 8
@.str.144 = private unnamed_addr constant [5 x i8] c"USub\00", align 1
@USub_type = internal global %struct._typeobject* null, align 8
@.str.145 = private unnamed_addr constant [6 x i8] c"cmpop\00", align 1
@cmpop_type = internal global %struct._typeobject* null, align 8
@.str.146 = private unnamed_addr constant [3 x i8] c"Eq\00", align 1
@Eq_type = internal global %struct._typeobject* null, align 8
@.str.147 = private unnamed_addr constant [6 x i8] c"NotEq\00", align 1
@NotEq_type = internal global %struct._typeobject* null, align 8
@.str.148 = private unnamed_addr constant [3 x i8] c"Lt\00", align 1
@Lt_type = internal global %struct._typeobject* null, align 8
@.str.149 = private unnamed_addr constant [4 x i8] c"LtE\00", align 1
@LtE_type = internal global %struct._typeobject* null, align 8
@.str.150 = private unnamed_addr constant [3 x i8] c"Gt\00", align 1
@Gt_type = internal global %struct._typeobject* null, align 8
@.str.151 = private unnamed_addr constant [4 x i8] c"GtE\00", align 1
@GtE_type = internal global %struct._typeobject* null, align 8
@.str.152 = private unnamed_addr constant [3 x i8] c"Is\00", align 1
@Is_type = internal global %struct._typeobject* null, align 8
@.str.153 = private unnamed_addr constant [6 x i8] c"IsNot\00", align 1
@IsNot_type = internal global %struct._typeobject* null, align 8
@.str.154 = private unnamed_addr constant [3 x i8] c"In\00", align 1
@In_type = internal global %struct._typeobject* null, align 8
@.str.155 = private unnamed_addr constant [6 x i8] c"NotIn\00", align 1
@NotIn_type = internal global %struct._typeobject* null, align 8
@.str.156 = private unnamed_addr constant [14 x i8] c"comprehension\00", align 1
@comprehension_type = internal global %struct._typeobject* null, align 8
@.str.157 = private unnamed_addr constant [14 x i8] c"excepthandler\00", align 1
@excepthandler_type = internal global %struct._typeobject* null, align 8
@.str.158 = private unnamed_addr constant [14 x i8] c"ExceptHandler\00", align 1
@ExceptHandler_type = internal global %struct._typeobject* null, align 8
@.str.159 = private unnamed_addr constant [10 x i8] c"arguments\00", align 1
@arguments_type = internal global %struct._typeobject* null, align 8
@.str.160 = private unnamed_addr constant [4 x i8] c"arg\00", align 1
@arg_type = internal global %struct._typeobject* null, align 8
@.str.161 = private unnamed_addr constant [8 x i8] c"keyword\00", align 1
@keyword_type = internal global %struct._typeobject* null, align 8
@.str.162 = private unnamed_addr constant [6 x i8] c"alias\00", align 1
@alias_type = internal global %struct._typeobject* null, align 8
@.str.163 = private unnamed_addr constant [9 x i8] c"withitem\00", align 1
@withitem_type = internal global %struct._typeobject* null, align 8
@PyAST_obj2mod.req_name = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i32 0, i32 0)], align 16
@PyExc_TypeError = external global %struct._object*, align 8
@.str.164 = private unnamed_addr constant [29 x i8] c"expected %s node, got %.400s\00", align 1
@init_types.initialized = internal global i32 0, align 4
@Module_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0)], align 8
@Interactive_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0)], align 8
@Expression_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0)], align 8
@Suite_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0)], align 8
@stmt_attributes = internal global [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.172, i32 0, i32 0)], align 16
@FunctionDef_fields = internal global [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.176, i32 0, i32 0)], align 16
@ClassDef_fields = internal global [7 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.175, i32 0, i32 0)], align 16
@Return_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0)], align 8
@Delete_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.182, i32 0, i32 0)], align 8
@Assign_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0)], align 16
@AugAssign_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0)], align 16
@For_fields = internal global [4 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.186, i32 0, i32 0)], align 16
@While_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.186, i32 0, i32 0)], align 16
@If_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.186, i32 0, i32 0)], align 16
@With_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0)], align 16
@Raise_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.190, i32 0, i32 0)], align 16
@Try_fields = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.192, i32 0, i32 0)], align 16
@Assert_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.193, i32 0, i32 0)], align 16
@Import_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i32 0, i32 0)], align 8
@ImportFrom_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.196, i32 0, i32 0)], align 16
@Global_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i32 0, i32 0)], align 8
@Nonlocal_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i32 0, i32 0)], align 8
@Expr_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0)], align 8
@expr_attributes = internal global [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.172, i32 0, i32 0)], align 16
@BoolOp_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i32 0, i32 0)], align 16
@BinOp_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0)], align 16
@UnaryOp_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.200, i32 0, i32 0)], align 16
@Lambda_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0)], align 16
@IfExp_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.186, i32 0, i32 0)], align 16
@Dict_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i32 0, i32 0)], align 16
@Set_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.202, i32 0, i32 0)], align 8
@ListComp_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.204, i32 0, i32 0)], align 16
@SetComp_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.204, i32 0, i32 0)], align 16
@DictComp_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.204, i32 0, i32 0)], align 16
@GeneratorExp_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.204, i32 0, i32 0)], align 16
@Yield_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0)], align 8
@YieldFrom_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0)], align 8
@Compare_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.207, i32 0, i32 0)], align 16
@Call_fields = internal global [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.180, i32 0, i32 0)], align 16
@Num_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0)], align 8
@Str_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.210, i32 0, i32 0)], align 8
@Bytes_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.210, i32 0, i32 0)], align 8
@NameConstant_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0)], align 8
@Attribute_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.212, i32 0, i32 0)], align 16
@Subscript_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.212, i32 0, i32 0)], align 16
@Starred_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.212, i32 0, i32 0)], align 16
@Name_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.212, i32 0, i32 0)], align 16
@List_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.212, i32 0, i32 0)], align 16
@Tuple_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.212, i32 0, i32 0)], align 16
@Load_singleton = internal global %struct._object* null, align 8
@Store_singleton = internal global %struct._object* null, align 8
@Del_singleton = internal global %struct._object* null, align 8
@AugLoad_singleton = internal global %struct._object* null, align 8
@AugStore_singleton = internal global %struct._object* null, align 8
@Param_singleton = internal global %struct._object* null, align 8
@Slice_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.216, i32 0, i32 0)], align 16
@ExtSlice_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.217, i32 0, i32 0)], align 8
@Index_fields = internal global [1 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0)], align 8
@And_singleton = internal global %struct._object* null, align 8
@Or_singleton = internal global %struct._object* null, align 8
@Add_singleton = internal global %struct._object* null, align 8
@Sub_singleton = internal global %struct._object* null, align 8
@Mult_singleton = internal global %struct._object* null, align 8
@Div_singleton = internal global %struct._object* null, align 8
@Mod_singleton = internal global %struct._object* null, align 8
@Pow_singleton = internal global %struct._object* null, align 8
@LShift_singleton = internal global %struct._object* null, align 8
@RShift_singleton = internal global %struct._object* null, align 8
@BitOr_singleton = internal global %struct._object* null, align 8
@BitXor_singleton = internal global %struct._object* null, align 8
@BitAnd_singleton = internal global %struct._object* null, align 8
@FloorDiv_singleton = internal global %struct._object* null, align 8
@Invert_singleton = internal global %struct._object* null, align 8
@Not_singleton = internal global %struct._object* null, align 8
@UAdd_singleton = internal global %struct._object* null, align 8
@USub_singleton = internal global %struct._object* null, align 8
@Eq_singleton = internal global %struct._object* null, align 8
@NotEq_singleton = internal global %struct._object* null, align 8
@Lt_singleton = internal global %struct._object* null, align 8
@LtE_singleton = internal global %struct._object* null, align 8
@Gt_singleton = internal global %struct._object* null, align 8
@GtE_singleton = internal global %struct._object* null, align 8
@Is_singleton = internal global %struct._object* null, align 8
@IsNot_singleton = internal global %struct._object* null, align 8
@In_singleton = internal global %struct._object* null, align 8
@NotIn_singleton = internal global %struct._object* null, align 8
@comprehension_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.218, i32 0, i32 0)], align 16
@excepthandler_attributes = internal global [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.172, i32 0, i32 0)], align 16
@ExceptHandler_fields = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0)], align 16
@arguments_fields = internal global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.223, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.224, i32 0, i32 0)], align 16
@arg_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.225, i32 0, i32 0)], align 16
@arg_attributes = internal global [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.172, i32 0, i32 0)], align 16
@keyword_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0)], align 16
@alias_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.226, i32 0, i32 0)], align 16
@withitem_fields = internal global [2 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.228, i32 0, i32 0)], align 16
@.str.165 = private unnamed_addr constant [8 x i8] c"_fields\00", align 1
@.str.166 = private unnamed_addr constant [12 x i8] c"_attributes\00", align 1
@PyType_Type = external global %struct._typeobject, align 8
@.str.167 = private unnamed_addr constant [11 x i8] c"s(O){sOss}\00", align 1
@.str.168 = private unnamed_addr constant [11 x i8] c"__module__\00", align 1
@.str.169 = private unnamed_addr constant [5 x i8] c"_ast\00", align 1
@add_attributes.PyId__attributes = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.166, i32 0, i32 0), %struct._object* null }, align 8
@.str.170 = private unnamed_addr constant [5 x i8] c"body\00", align 1
@.str.171 = private unnamed_addr constant [7 x i8] c"lineno\00", align 1
@.str.172 = private unnamed_addr constant [11 x i8] c"col_offset\00", align 1
@.str.173 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.174 = private unnamed_addr constant [5 x i8] c"args\00", align 1
@.str.175 = private unnamed_addr constant [15 x i8] c"decorator_list\00", align 1
@.str.176 = private unnamed_addr constant [8 x i8] c"returns\00", align 1
@.str.177 = private unnamed_addr constant [6 x i8] c"bases\00", align 1
@.str.178 = private unnamed_addr constant [9 x i8] c"keywords\00", align 1
@.str.179 = private unnamed_addr constant [9 x i8] c"starargs\00", align 1
@.str.180 = private unnamed_addr constant [7 x i8] c"kwargs\00", align 1
@.str.181 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.182 = private unnamed_addr constant [8 x i8] c"targets\00", align 1
@.str.183 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.184 = private unnamed_addr constant [3 x i8] c"op\00", align 1
@.str.185 = private unnamed_addr constant [5 x i8] c"iter\00", align 1
@.str.186 = private unnamed_addr constant [7 x i8] c"orelse\00", align 1
@.str.187 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.188 = private unnamed_addr constant [6 x i8] c"items\00", align 1
@.str.189 = private unnamed_addr constant [4 x i8] c"exc\00", align 1
@.str.190 = private unnamed_addr constant [6 x i8] c"cause\00", align 1
@.str.191 = private unnamed_addr constant [9 x i8] c"handlers\00", align 1
@.str.192 = private unnamed_addr constant [10 x i8] c"finalbody\00", align 1
@.str.193 = private unnamed_addr constant [4 x i8] c"msg\00", align 1
@.str.194 = private unnamed_addr constant [6 x i8] c"names\00", align 1
@.str.195 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str.196 = private unnamed_addr constant [6 x i8] c"level\00", align 1
@.str.197 = private unnamed_addr constant [7 x i8] c"values\00", align 1
@.str.198 = private unnamed_addr constant [5 x i8] c"left\00", align 1
@.str.199 = private unnamed_addr constant [6 x i8] c"right\00", align 1
@.str.200 = private unnamed_addr constant [8 x i8] c"operand\00", align 1
@.str.201 = private unnamed_addr constant [5 x i8] c"keys\00", align 1
@.str.202 = private unnamed_addr constant [5 x i8] c"elts\00", align 1
@.str.203 = private unnamed_addr constant [4 x i8] c"elt\00", align 1
@.str.204 = private unnamed_addr constant [11 x i8] c"generators\00", align 1
@.str.205 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.206 = private unnamed_addr constant [4 x i8] c"ops\00", align 1
@.str.207 = private unnamed_addr constant [12 x i8] c"comparators\00", align 1
@.str.208 = private unnamed_addr constant [5 x i8] c"func\00", align 1
@.str.209 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str.210 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.211 = private unnamed_addr constant [5 x i8] c"attr\00", align 1
@.str.212 = private unnamed_addr constant [4 x i8] c"ctx\00", align 1
@.str.213 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.214 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str.215 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@.str.216 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.217 = private unnamed_addr constant [5 x i8] c"dims\00", align 1
@.str.218 = private unnamed_addr constant [4 x i8] c"ifs\00", align 1
@.str.219 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.220 = private unnamed_addr constant [7 x i8] c"vararg\00", align 1
@.str.221 = private unnamed_addr constant [11 x i8] c"kwonlyargs\00", align 1
@.str.222 = private unnamed_addr constant [12 x i8] c"kw_defaults\00", align 1
@.str.223 = private unnamed_addr constant [6 x i8] c"kwarg\00", align 1
@.str.224 = private unnamed_addr constant [9 x i8] c"defaults\00", align 1
@.str.225 = private unnamed_addr constant [11 x i8] c"annotation\00", align 1
@.str.226 = private unnamed_addr constant [7 x i8] c"asname\00", align 1
@.str.227 = private unnamed_addr constant [13 x i8] c"context_expr\00", align 1
@.str.228 = private unnamed_addr constant [14 x i8] c"optional_vars\00", align 1
@.str.229 = private unnamed_addr constant [9 x i8] c"_ast.AST\00", align 1
@ast_type_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.230, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @ast_type_reduce, i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@ast_type_getsets = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.231, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* @PyObject_GenericGetDict, i32 (%struct._object*, %struct._object*, i8*)* @PyObject_GenericSetDict, i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.230 = private unnamed_addr constant [11 x i8] c"__reduce__\00", align 1
@ast_type_reduce.PyId___dict__ = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.231, i32 0, i32 0), %struct._object* null }, align 8
@.str.231 = private unnamed_addr constant [9 x i8] c"__dict__\00", align 1
@PyExc_AttributeError = external global %struct._object*, align 8
@.str.232 = private unnamed_addr constant [5 x i8] c"O()O\00", align 1
@.str.233 = private unnamed_addr constant [4 x i8] c"O()\00", align 1
@ast_type_init.PyId__fields = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.165, i32 0, i32 0), %struct._object* null }, align 8
@.str.234 = private unnamed_addr constant [53 x i8] c"%.400s constructor takes %s%zd positional argument%s\00", align 1
@.str.235 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.236 = private unnamed_addr constant [13 x i8] c"either 0 or \00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@PyId_body = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0), %struct._object* null }, align 8
@PyId_name = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i32 0, i32 0), %struct._object* null }, align 8
@PyId_args = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.174, i32 0, i32 0), %struct._object* null }, align 8
@PyId_decorator_list = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.175, i32 0, i32 0), %struct._object* null }, align 8
@PyId_returns = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.176, i32 0, i32 0), %struct._object* null }, align 8
@PyId_bases = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.177, i32 0, i32 0), %struct._object* null }, align 8
@PyId_keywords = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.178, i32 0, i32 0), %struct._object* null }, align 8
@PyId_starargs = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), %struct._object* null }, align 8
@PyId_kwargs = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.180, i32 0, i32 0), %struct._object* null }, align 8
@PyId_value = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), %struct._object* null }, align 8
@PyId_targets = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.182, i32 0, i32 0), %struct._object* null }, align 8
@PyId_target = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.183, i32 0, i32 0), %struct._object* null }, align 8
@PyId_op = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i32 0, i32 0), %struct._object* null }, align 8
@PyId_iter = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.185, i32 0, i32 0), %struct._object* null }, align 8
@PyId_orelse = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.186, i32 0, i32 0), %struct._object* null }, align 8
@PyId_test = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.187, i32 0, i32 0), %struct._object* null }, align 8
@PyId_items = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.188, i32 0, i32 0), %struct._object* null }, align 8
@PyId_exc = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.189, i32 0, i32 0), %struct._object* null }, align 8
@PyId_cause = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.190, i32 0, i32 0), %struct._object* null }, align 8
@PyId_handlers = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.191, i32 0, i32 0), %struct._object* null }, align 8
@PyId_finalbody = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.192, i32 0, i32 0), %struct._object* null }, align 8
@PyId_msg = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.193, i32 0, i32 0), %struct._object* null }, align 8
@PyId_names = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i32 0, i32 0), %struct._object* null }, align 8
@PyId_module = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.195, i32 0, i32 0), %struct._object* null }, align 8
@PyId_level = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.196, i32 0, i32 0), %struct._object* null }, align 8
@PyId_lineno = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.171, i32 0, i32 0), %struct._object* null }, align 8
@PyId_col_offset = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.172, i32 0, i32 0), %struct._object* null }, align 8
@PyId_vararg = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.220, i32 0, i32 0), %struct._object* null }, align 8
@PyId_kwonlyargs = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.221, i32 0, i32 0), %struct._object* null }, align 8
@PyId_kw_defaults = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.222, i32 0, i32 0), %struct._object* null }, align 8
@PyId_kwarg = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.223, i32 0, i32 0), %struct._object* null }, align 8
@PyId_defaults = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.224, i32 0, i32 0), %struct._object* null }, align 8
@PyId_arg = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i32 0, i32 0), %struct._object* null }, align 8
@PyId_annotation = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.225, i32 0, i32 0), %struct._object* null }, align 8
@PyExc_SystemError = external global %struct._object*, align 8
@.str.237 = private unnamed_addr constant [23 x i8] c"unknown operator found\00", align 1
@PyId_context_expr = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.227, i32 0, i32 0), %struct._object* null }, align 8
@PyId_optional_vars = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.228, i32 0, i32 0), %struct._object* null }, align 8
@PyId_type = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.219, i32 0, i32 0), %struct._object* null }, align 8
@PyId_asname = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.226, i32 0, i32 0), %struct._object* null }, align 8
@PyId_values = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i32 0, i32 0), %struct._object* null }, align 8
@PyId_left = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.198, i32 0, i32 0), %struct._object* null }, align 8
@PyId_right = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), %struct._object* null }, align 8
@PyId_operand = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.200, i32 0, i32 0), %struct._object* null }, align 8
@PyId_keys = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.201, i32 0, i32 0), %struct._object* null }, align 8
@PyId_elts = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.202, i32 0, i32 0), %struct._object* null }, align 8
@PyId_elt = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.203, i32 0, i32 0), %struct._object* null }, align 8
@PyId_generators = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.204, i32 0, i32 0), %struct._object* null }, align 8
@PyId_key = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.205, i32 0, i32 0), %struct._object* null }, align 8
@PyId_ops = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.206, i32 0, i32 0), %struct._object* null }, align 8
@PyId_comparators = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.207, i32 0, i32 0), %struct._object* null }, align 8
@PyId_func = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.208, i32 0, i32 0), %struct._object* null }, align 8
@PyId_n = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0), %struct._object* null }, align 8
@PyId_s = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.210, i32 0, i32 0), %struct._object* null }, align 8
@PyId_attr = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0), %struct._object* null }, align 8
@PyId_ctx = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.212, i32 0, i32 0), %struct._object* null }, align 8
@PyId_slice = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), %struct._object* null }, align 8
@PyId_id = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0), %struct._object* null }, align 8
@.str.238 = private unnamed_addr constant [21 x i8] c"unknown boolop found\00", align 1
@.str.239 = private unnamed_addr constant [22 x i8] c"unknown unaryop found\00", align 1
@PyId_ifs = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.218, i32 0, i32 0), %struct._object* null }, align 8
@.str.240 = private unnamed_addr constant [20 x i8] c"unknown cmpop found\00", align 1
@.str.241 = private unnamed_addr constant [27 x i8] c"unknown expr_context found\00", align 1
@PyId_lower = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.214, i32 0, i32 0), %struct._object* null }, align 8
@PyId_upper = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.215, i32 0, i32 0), %struct._object* null }, align 8
@PyId_step = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.216, i32 0, i32 0), %struct._object* null }, align 8
@PyId_dims = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.217, i32 0, i32 0), %struct._object* null }, align 8
@.str.242 = private unnamed_addr constant [49 x i8] c"Module field \22body\22 must be a list, not a %.200s\00", align 1
@.str.243 = private unnamed_addr constant [42 x i8] c"required field \22body\22 missing from Module\00", align 1
@.str.244 = private unnamed_addr constant [54 x i8] c"Interactive field \22body\22 must be a list, not a %.200s\00", align 1
@.str.245 = private unnamed_addr constant [47 x i8] c"required field \22body\22 missing from Interactive\00", align 1
@.str.246 = private unnamed_addr constant [46 x i8] c"required field \22body\22 missing from Expression\00", align 1
@.str.247 = private unnamed_addr constant [48 x i8] c"Suite field \22body\22 must be a list, not a %.200s\00", align 1
@.str.248 = private unnamed_addr constant [41 x i8] c"required field \22body\22 missing from Suite\00", align 1
@.str.249 = private unnamed_addr constant [38 x i8] c"expected some sort of mod, but got %R\00", align 1
@.str.250 = private unnamed_addr constant [42 x i8] c"required field \22lineno\22 missing from stmt\00", align 1
@.str.251 = private unnamed_addr constant [46 x i8] c"required field \22col_offset\22 missing from stmt\00", align 1
@.str.252 = private unnamed_addr constant [47 x i8] c"required field \22name\22 missing from FunctionDef\00", align 1
@.str.253 = private unnamed_addr constant [47 x i8] c"required field \22args\22 missing from FunctionDef\00", align 1
@.str.254 = private unnamed_addr constant [54 x i8] c"FunctionDef field \22body\22 must be a list, not a %.200s\00", align 1
@.str.255 = private unnamed_addr constant [47 x i8] c"required field \22body\22 missing from FunctionDef\00", align 1
@.str.256 = private unnamed_addr constant [64 x i8] c"FunctionDef field \22decorator_list\22 must be a list, not a %.200s\00", align 1
@.str.257 = private unnamed_addr constant [57 x i8] c"required field \22decorator_list\22 missing from FunctionDef\00", align 1
@.str.258 = private unnamed_addr constant [44 x i8] c"required field \22name\22 missing from ClassDef\00", align 1
@.str.259 = private unnamed_addr constant [52 x i8] c"ClassDef field \22bases\22 must be a list, not a %.200s\00", align 1
@.str.260 = private unnamed_addr constant [45 x i8] c"required field \22bases\22 missing from ClassDef\00", align 1
@.str.261 = private unnamed_addr constant [55 x i8] c"ClassDef field \22keywords\22 must be a list, not a %.200s\00", align 1
@.str.262 = private unnamed_addr constant [48 x i8] c"required field \22keywords\22 missing from ClassDef\00", align 1
@.str.263 = private unnamed_addr constant [51 x i8] c"ClassDef field \22body\22 must be a list, not a %.200s\00", align 1
@.str.264 = private unnamed_addr constant [44 x i8] c"required field \22body\22 missing from ClassDef\00", align 1
@.str.265 = private unnamed_addr constant [61 x i8] c"ClassDef field \22decorator_list\22 must be a list, not a %.200s\00", align 1
@.str.266 = private unnamed_addr constant [54 x i8] c"required field \22decorator_list\22 missing from ClassDef\00", align 1
@.str.267 = private unnamed_addr constant [52 x i8] c"Delete field \22targets\22 must be a list, not a %.200s\00", align 1
@.str.268 = private unnamed_addr constant [45 x i8] c"required field \22targets\22 missing from Delete\00", align 1
@.str.269 = private unnamed_addr constant [52 x i8] c"Assign field \22targets\22 must be a list, not a %.200s\00", align 1
@.str.270 = private unnamed_addr constant [45 x i8] c"required field \22targets\22 missing from Assign\00", align 1
@.str.271 = private unnamed_addr constant [43 x i8] c"required field \22value\22 missing from Assign\00", align 1
@.str.272 = private unnamed_addr constant [47 x i8] c"required field \22target\22 missing from AugAssign\00", align 1
@.str.273 = private unnamed_addr constant [43 x i8] c"required field \22op\22 missing from AugAssign\00", align 1
@.str.274 = private unnamed_addr constant [46 x i8] c"required field \22value\22 missing from AugAssign\00", align 1
@.str.275 = private unnamed_addr constant [41 x i8] c"required field \22target\22 missing from For\00", align 1
@.str.276 = private unnamed_addr constant [39 x i8] c"required field \22iter\22 missing from For\00", align 1
@.str.277 = private unnamed_addr constant [46 x i8] c"For field \22body\22 must be a list, not a %.200s\00", align 1
@.str.278 = private unnamed_addr constant [39 x i8] c"required field \22body\22 missing from For\00", align 1
@.str.279 = private unnamed_addr constant [48 x i8] c"For field \22orelse\22 must be a list, not a %.200s\00", align 1
@.str.280 = private unnamed_addr constant [41 x i8] c"required field \22orelse\22 missing from For\00", align 1
@.str.281 = private unnamed_addr constant [41 x i8] c"required field \22test\22 missing from While\00", align 1
@.str.282 = private unnamed_addr constant [48 x i8] c"While field \22body\22 must be a list, not a %.200s\00", align 1
@.str.283 = private unnamed_addr constant [41 x i8] c"required field \22body\22 missing from While\00", align 1
@.str.284 = private unnamed_addr constant [50 x i8] c"While field \22orelse\22 must be a list, not a %.200s\00", align 1
@.str.285 = private unnamed_addr constant [43 x i8] c"required field \22orelse\22 missing from While\00", align 1
@.str.286 = private unnamed_addr constant [38 x i8] c"required field \22test\22 missing from If\00", align 1
@.str.287 = private unnamed_addr constant [45 x i8] c"If field \22body\22 must be a list, not a %.200s\00", align 1
@.str.288 = private unnamed_addr constant [38 x i8] c"required field \22body\22 missing from If\00", align 1
@.str.289 = private unnamed_addr constant [47 x i8] c"If field \22orelse\22 must be a list, not a %.200s\00", align 1
@.str.290 = private unnamed_addr constant [40 x i8] c"required field \22orelse\22 missing from If\00", align 1
@.str.291 = private unnamed_addr constant [48 x i8] c"With field \22items\22 must be a list, not a %.200s\00", align 1
@.str.292 = private unnamed_addr constant [41 x i8] c"required field \22items\22 missing from With\00", align 1
@.str.293 = private unnamed_addr constant [47 x i8] c"With field \22body\22 must be a list, not a %.200s\00", align 1
@.str.294 = private unnamed_addr constant [40 x i8] c"required field \22body\22 missing from With\00", align 1
@.str.295 = private unnamed_addr constant [46 x i8] c"Try field \22body\22 must be a list, not a %.200s\00", align 1
@.str.296 = private unnamed_addr constant [39 x i8] c"required field \22body\22 missing from Try\00", align 1
@.str.297 = private unnamed_addr constant [50 x i8] c"Try field \22handlers\22 must be a list, not a %.200s\00", align 1
@.str.298 = private unnamed_addr constant [43 x i8] c"required field \22handlers\22 missing from Try\00", align 1
@.str.299 = private unnamed_addr constant [48 x i8] c"Try field \22orelse\22 must be a list, not a %.200s\00", align 1
@.str.300 = private unnamed_addr constant [41 x i8] c"required field \22orelse\22 missing from Try\00", align 1
@.str.301 = private unnamed_addr constant [51 x i8] c"Try field \22finalbody\22 must be a list, not a %.200s\00", align 1
@.str.302 = private unnamed_addr constant [44 x i8] c"required field \22finalbody\22 missing from Try\00", align 1
@.str.303 = private unnamed_addr constant [42 x i8] c"required field \22test\22 missing from Assert\00", align 1
@.str.304 = private unnamed_addr constant [50 x i8] c"Import field \22names\22 must be a list, not a %.200s\00", align 1
@.str.305 = private unnamed_addr constant [43 x i8] c"required field \22names\22 missing from Import\00", align 1
@.str.306 = private unnamed_addr constant [54 x i8] c"ImportFrom field \22names\22 must be a list, not a %.200s\00", align 1
@.str.307 = private unnamed_addr constant [47 x i8] c"required field \22names\22 missing from ImportFrom\00", align 1
@.str.308 = private unnamed_addr constant [50 x i8] c"Global field \22names\22 must be a list, not a %.200s\00", align 1
@.str.309 = private unnamed_addr constant [43 x i8] c"required field \22names\22 missing from Global\00", align 1
@.str.310 = private unnamed_addr constant [52 x i8] c"Nonlocal field \22names\22 must be a list, not a %.200s\00", align 1
@.str.311 = private unnamed_addr constant [45 x i8] c"required field \22names\22 missing from Nonlocal\00", align 1
@.str.312 = private unnamed_addr constant [41 x i8] c"required field \22value\22 missing from Expr\00", align 1
@.str.313 = private unnamed_addr constant [39 x i8] c"expected some sort of stmt, but got %R\00", align 1
@.str.314 = private unnamed_addr constant [26 x i8] c"invalid integer value: %R\00", align 1
@PyUnicode_Type = external global %struct._typeobject, align 8
@.str.315 = private unnamed_addr constant [35 x i8] c"AST identifier must be of type str\00", align 1
@.str.316 = private unnamed_addr constant [52 x i8] c"arguments field \22args\22 must be a list, not a %.200s\00", align 1
@.str.317 = private unnamed_addr constant [45 x i8] c"required field \22args\22 missing from arguments\00", align 1
@.str.318 = private unnamed_addr constant [58 x i8] c"arguments field \22kwonlyargs\22 must be a list, not a %.200s\00", align 1
@.str.319 = private unnamed_addr constant [51 x i8] c"required field \22kwonlyargs\22 missing from arguments\00", align 1
@.str.320 = private unnamed_addr constant [59 x i8] c"arguments field \22kw_defaults\22 must be a list, not a %.200s\00", align 1
@.str.321 = private unnamed_addr constant [52 x i8] c"required field \22kw_defaults\22 missing from arguments\00", align 1
@.str.322 = private unnamed_addr constant [56 x i8] c"arguments field \22defaults\22 must be a list, not a %.200s\00", align 1
@.str.323 = private unnamed_addr constant [49 x i8] c"required field \22defaults\22 missing from arguments\00", align 1
@.str.324 = private unnamed_addr constant [38 x i8] c"required field \22arg\22 missing from arg\00", align 1
@.str.325 = private unnamed_addr constant [42 x i8] c"required field \22arg\22 missing from keyword\00", align 1
@.str.326 = private unnamed_addr constant [44 x i8] c"required field \22value\22 missing from keyword\00", align 1
@.str.327 = private unnamed_addr constant [43 x i8] c"expected some sort of operator, but got %R\00", align 1
@.str.328 = private unnamed_addr constant [52 x i8] c"required field \22context_expr\22 missing from withitem\00", align 1
@.str.329 = private unnamed_addr constant [51 x i8] c"required field \22lineno\22 missing from excepthandler\00", align 1
@.str.330 = private unnamed_addr constant [55 x i8] c"required field \22col_offset\22 missing from excepthandler\00", align 1
@.str.331 = private unnamed_addr constant [56 x i8] c"ExceptHandler field \22body\22 must be a list, not a %.200s\00", align 1
@.str.332 = private unnamed_addr constant [49 x i8] c"required field \22body\22 missing from ExceptHandler\00", align 1
@.str.333 = private unnamed_addr constant [48 x i8] c"expected some sort of excepthandler, but got %R\00", align 1
@.str.334 = private unnamed_addr constant [41 x i8] c"required field \22name\22 missing from alias\00", align 1
@.str.335 = private unnamed_addr constant [42 x i8] c"required field \22lineno\22 missing from expr\00", align 1
@.str.336 = private unnamed_addr constant [46 x i8] c"required field \22col_offset\22 missing from expr\00", align 1
@.str.337 = private unnamed_addr constant [40 x i8] c"required field \22op\22 missing from BoolOp\00", align 1
@.str.338 = private unnamed_addr constant [51 x i8] c"BoolOp field \22values\22 must be a list, not a %.200s\00", align 1
@.str.339 = private unnamed_addr constant [44 x i8] c"required field \22values\22 missing from BoolOp\00", align 1
@.str.340 = private unnamed_addr constant [41 x i8] c"required field \22left\22 missing from BinOp\00", align 1
@.str.341 = private unnamed_addr constant [39 x i8] c"required field \22op\22 missing from BinOp\00", align 1
@.str.342 = private unnamed_addr constant [42 x i8] c"required field \22right\22 missing from BinOp\00", align 1
@.str.343 = private unnamed_addr constant [41 x i8] c"required field \22op\22 missing from UnaryOp\00", align 1
@.str.344 = private unnamed_addr constant [46 x i8] c"required field \22operand\22 missing from UnaryOp\00", align 1
@.str.345 = private unnamed_addr constant [42 x i8] c"required field \22args\22 missing from Lambda\00", align 1
@.str.346 = private unnamed_addr constant [42 x i8] c"required field \22body\22 missing from Lambda\00", align 1
@.str.347 = private unnamed_addr constant [41 x i8] c"required field \22test\22 missing from IfExp\00", align 1
@.str.348 = private unnamed_addr constant [41 x i8] c"required field \22body\22 missing from IfExp\00", align 1
@.str.349 = private unnamed_addr constant [43 x i8] c"required field \22orelse\22 missing from IfExp\00", align 1
@.str.350 = private unnamed_addr constant [47 x i8] c"Dict field \22keys\22 must be a list, not a %.200s\00", align 1
@.str.351 = private unnamed_addr constant [40 x i8] c"required field \22keys\22 missing from Dict\00", align 1
@.str.352 = private unnamed_addr constant [49 x i8] c"Dict field \22values\22 must be a list, not a %.200s\00", align 1
@.str.353 = private unnamed_addr constant [42 x i8] c"required field \22values\22 missing from Dict\00", align 1
@.str.354 = private unnamed_addr constant [46 x i8] c"Set field \22elts\22 must be a list, not a %.200s\00", align 1
@.str.355 = private unnamed_addr constant [39 x i8] c"required field \22elts\22 missing from Set\00", align 1
@.str.356 = private unnamed_addr constant [43 x i8] c"required field \22elt\22 missing from ListComp\00", align 1
@.str.357 = private unnamed_addr constant [57 x i8] c"ListComp field \22generators\22 must be a list, not a %.200s\00", align 1
@.str.358 = private unnamed_addr constant [50 x i8] c"required field \22generators\22 missing from ListComp\00", align 1
@.str.359 = private unnamed_addr constant [42 x i8] c"required field \22elt\22 missing from SetComp\00", align 1
@.str.360 = private unnamed_addr constant [56 x i8] c"SetComp field \22generators\22 must be a list, not a %.200s\00", align 1
@.str.361 = private unnamed_addr constant [49 x i8] c"required field \22generators\22 missing from SetComp\00", align 1
@.str.362 = private unnamed_addr constant [43 x i8] c"required field \22key\22 missing from DictComp\00", align 1
@.str.363 = private unnamed_addr constant [45 x i8] c"required field \22value\22 missing from DictComp\00", align 1
@.str.364 = private unnamed_addr constant [57 x i8] c"DictComp field \22generators\22 must be a list, not a %.200s\00", align 1
@.str.365 = private unnamed_addr constant [50 x i8] c"required field \22generators\22 missing from DictComp\00", align 1
@.str.366 = private unnamed_addr constant [47 x i8] c"required field \22elt\22 missing from GeneratorExp\00", align 1
@.str.367 = private unnamed_addr constant [61 x i8] c"GeneratorExp field \22generators\22 must be a list, not a %.200s\00", align 1
@.str.368 = private unnamed_addr constant [54 x i8] c"required field \22generators\22 missing from GeneratorExp\00", align 1
@.str.369 = private unnamed_addr constant [46 x i8] c"required field \22value\22 missing from YieldFrom\00", align 1
@.str.370 = private unnamed_addr constant [43 x i8] c"required field \22left\22 missing from Compare\00", align 1
@.str.371 = private unnamed_addr constant [49 x i8] c"Compare field \22ops\22 must be a list, not a %.200s\00", align 1
@.str.372 = private unnamed_addr constant [42 x i8] c"required field \22ops\22 missing from Compare\00", align 1
@.str.373 = private unnamed_addr constant [57 x i8] c"Compare field \22comparators\22 must be a list, not a %.200s\00", align 1
@.str.374 = private unnamed_addr constant [50 x i8] c"required field \22comparators\22 missing from Compare\00", align 1
@.str.375 = private unnamed_addr constant [40 x i8] c"required field \22func\22 missing from Call\00", align 1
@.str.376 = private unnamed_addr constant [47 x i8] c"Call field \22args\22 must be a list, not a %.200s\00", align 1
@.str.377 = private unnamed_addr constant [40 x i8] c"required field \22args\22 missing from Call\00", align 1
@.str.378 = private unnamed_addr constant [51 x i8] c"Call field \22keywords\22 must be a list, not a %.200s\00", align 1
@.str.379 = private unnamed_addr constant [44 x i8] c"required field \22keywords\22 missing from Call\00", align 1
@.str.380 = private unnamed_addr constant [36 x i8] c"required field \22n\22 missing from Num\00", align 1
@.str.381 = private unnamed_addr constant [36 x i8] c"required field \22s\22 missing from Str\00", align 1
@.str.382 = private unnamed_addr constant [38 x i8] c"required field \22s\22 missing from Bytes\00", align 1
@.str.383 = private unnamed_addr constant [49 x i8] c"required field \22value\22 missing from NameConstant\00", align 1
@.str.384 = private unnamed_addr constant [46 x i8] c"required field \22value\22 missing from Attribute\00", align 1
@.str.385 = private unnamed_addr constant [45 x i8] c"required field \22attr\22 missing from Attribute\00", align 1
@.str.386 = private unnamed_addr constant [44 x i8] c"required field \22ctx\22 missing from Attribute\00", align 1
@.str.387 = private unnamed_addr constant [46 x i8] c"required field \22value\22 missing from Subscript\00", align 1
@.str.388 = private unnamed_addr constant [46 x i8] c"required field \22slice\22 missing from Subscript\00", align 1
@.str.389 = private unnamed_addr constant [44 x i8] c"required field \22ctx\22 missing from Subscript\00", align 1
@.str.390 = private unnamed_addr constant [44 x i8] c"required field \22value\22 missing from Starred\00", align 1
@.str.391 = private unnamed_addr constant [42 x i8] c"required field \22ctx\22 missing from Starred\00", align 1
@.str.392 = private unnamed_addr constant [38 x i8] c"required field \22id\22 missing from Name\00", align 1
@.str.393 = private unnamed_addr constant [39 x i8] c"required field \22ctx\22 missing from Name\00", align 1
@.str.394 = private unnamed_addr constant [47 x i8] c"List field \22elts\22 must be a list, not a %.200s\00", align 1
@.str.395 = private unnamed_addr constant [40 x i8] c"required field \22elts\22 missing from List\00", align 1
@.str.396 = private unnamed_addr constant [39 x i8] c"required field \22ctx\22 missing from List\00", align 1
@.str.397 = private unnamed_addr constant [48 x i8] c"Tuple field \22elts\22 must be a list, not a %.200s\00", align 1
@.str.398 = private unnamed_addr constant [41 x i8] c"required field \22elts\22 missing from Tuple\00", align 1
@.str.399 = private unnamed_addr constant [40 x i8] c"required field \22ctx\22 missing from Tuple\00", align 1
@.str.400 = private unnamed_addr constant [39 x i8] c"expected some sort of expr, but got %R\00", align 1
@.str.401 = private unnamed_addr constant [41 x i8] c"expected some sort of boolop, but got %R\00", align 1
@.str.402 = private unnamed_addr constant [42 x i8] c"expected some sort of unaryop, but got %R\00", align 1
@.str.403 = private unnamed_addr constant [51 x i8] c"required field \22target\22 missing from comprehension\00", align 1
@.str.404 = private unnamed_addr constant [49 x i8] c"required field \22iter\22 missing from comprehension\00", align 1
@.str.405 = private unnamed_addr constant [55 x i8] c"comprehension field \22ifs\22 must be a list, not a %.200s\00", align 1
@.str.406 = private unnamed_addr constant [48 x i8] c"required field \22ifs\22 missing from comprehension\00", align 1
@.str.407 = private unnamed_addr constant [40 x i8] c"expected some sort of cmpop, but got %R\00", align 1
@PyBytes_Type = external global %struct._typeobject, align 8
@.str.408 = private unnamed_addr constant [31 x i8] c"AST string must be of type str\00", align 1
@.str.409 = private unnamed_addr constant [32 x i8] c"AST bytes must be of type bytes\00", align 1
@_Py_TrueStruct = external global %struct._longobject, align 8
@_Py_FalseStruct = external global %struct._longobject, align 8
@.str.410 = private unnamed_addr constant [43 x i8] c"AST singleton must be True, False, or None\00", align 1
@.str.411 = private unnamed_addr constant [47 x i8] c"expected some sort of expr_context, but got %R\00", align 1
@.str.412 = private unnamed_addr constant [51 x i8] c"ExtSlice field \22dims\22 must be a list, not a %.200s\00", align 1
@.str.413 = private unnamed_addr constant [44 x i8] c"required field \22dims\22 missing from ExtSlice\00", align 1
@.str.414 = private unnamed_addr constant [42 x i8] c"required field \22value\22 missing from Index\00", align 1
@.str.415 = private unnamed_addr constant [40 x i8] c"expected some sort of slice, but got %R\00", align 1

; Function Attrs: nounwind uwtable
define %struct._mod* @_Py_Module(%struct.asdl_seq* %body, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._mod*, align 8
  %body.addr = alloca %struct.asdl_seq*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._mod*, align 8
  store %struct.asdl_seq* %body, %struct.asdl_seq** %body.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 16)
  %1 = bitcast i8* %call to %struct._mod*
  store %struct._mod* %1, %struct._mod** %p, align 8
  %2 = load %struct._mod*, %struct._mod** %p, align 8
  %tobool = icmp ne %struct._mod* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._mod* null, %struct._mod** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._mod*, %struct._mod** %p, align 8
  %kind = getelementptr inbounds %struct._mod, %struct._mod* %3, i32 0, i32 0
  store i32 1, i32* %kind, align 4
  %4 = load %struct.asdl_seq*, %struct.asdl_seq** %body.addr, align 8
  %5 = load %struct._mod*, %struct._mod** %p, align 8
  %v = getelementptr inbounds %struct._mod, %struct._mod* %5, i32 0, i32 1
  %Module = bitcast %union.anon* %v to %struct.anon*
  %body1 = getelementptr inbounds %struct.anon, %struct.anon* %Module, i32 0, i32 0
  store %struct.asdl_seq* %4, %struct.asdl_seq** %body1, align 8
  %6 = load %struct._mod*, %struct._mod** %p, align 8
  store %struct._mod* %6, %struct._mod** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct._mod*, %struct._mod** %retval
  ret %struct._mod* %7
}

declare i8* @PyArena_Malloc(%struct._arena*, i64) #1

; Function Attrs: nounwind uwtable
define %struct._mod* @_Py_Interactive(%struct.asdl_seq* %body, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._mod*, align 8
  %body.addr = alloca %struct.asdl_seq*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._mod*, align 8
  store %struct.asdl_seq* %body, %struct.asdl_seq** %body.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 16)
  %1 = bitcast i8* %call to %struct._mod*
  store %struct._mod* %1, %struct._mod** %p, align 8
  %2 = load %struct._mod*, %struct._mod** %p, align 8
  %tobool = icmp ne %struct._mod* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._mod* null, %struct._mod** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._mod*, %struct._mod** %p, align 8
  %kind = getelementptr inbounds %struct._mod, %struct._mod* %3, i32 0, i32 0
  store i32 2, i32* %kind, align 4
  %4 = load %struct.asdl_seq*, %struct.asdl_seq** %body.addr, align 8
  %5 = load %struct._mod*, %struct._mod** %p, align 8
  %v = getelementptr inbounds %struct._mod, %struct._mod* %5, i32 0, i32 1
  %Interactive = bitcast %union.anon* %v to %struct.anon.0*
  %body1 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %Interactive, i32 0, i32 0
  store %struct.asdl_seq* %4, %struct.asdl_seq** %body1, align 8
  %6 = load %struct._mod*, %struct._mod** %p, align 8
  store %struct._mod* %6, %struct._mod** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct._mod*, %struct._mod** %retval
  ret %struct._mod* %7
}

; Function Attrs: nounwind uwtable
define %struct._mod* @_Py_Expression(%struct._expr* %body, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._mod*, align 8
  %body.addr = alloca %struct._expr*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._mod*, align 8
  store %struct._expr* %body, %struct._expr** %body.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %body.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i32 0, i32 0))
  store %struct._mod* null, %struct._mod** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 16)
  %3 = bitcast i8* %call to %struct._mod*
  store %struct._mod* %3, %struct._mod** %p, align 8
  %4 = load %struct._mod*, %struct._mod** %p, align 8
  %tobool1 = icmp ne %struct._mod* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._mod* null, %struct._mod** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._mod*, %struct._mod** %p, align 8
  %kind = getelementptr inbounds %struct._mod, %struct._mod* %5, i32 0, i32 0
  store i32 3, i32* %kind, align 4
  %6 = load %struct._expr*, %struct._expr** %body.addr, align 8
  %7 = load %struct._mod*, %struct._mod** %p, align 8
  %v = getelementptr inbounds %struct._mod, %struct._mod* %7, i32 0, i32 1
  %Expression = bitcast %union.anon* %v to %struct.anon.1*
  %body4 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %Expression, i32 0, i32 0
  store %struct._expr* %6, %struct._expr** %body4, align 8
  %8 = load %struct._mod*, %struct._mod** %p, align 8
  store %struct._mod* %8, %struct._mod** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %9 = load %struct._mod*, %struct._mod** %retval
  ret %struct._mod* %9
}

declare void @PyErr_SetString(%struct._object*, i8*) #1

; Function Attrs: nounwind uwtable
define %struct._mod* @_Py_Suite(%struct.asdl_seq* %body, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._mod*, align 8
  %body.addr = alloca %struct.asdl_seq*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._mod*, align 8
  store %struct.asdl_seq* %body, %struct.asdl_seq** %body.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 16)
  %1 = bitcast i8* %call to %struct._mod*
  store %struct._mod* %1, %struct._mod** %p, align 8
  %2 = load %struct._mod*, %struct._mod** %p, align 8
  %tobool = icmp ne %struct._mod* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._mod* null, %struct._mod** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._mod*, %struct._mod** %p, align 8
  %kind = getelementptr inbounds %struct._mod, %struct._mod* %3, i32 0, i32 0
  store i32 4, i32* %kind, align 4
  %4 = load %struct.asdl_seq*, %struct.asdl_seq** %body.addr, align 8
  %5 = load %struct._mod*, %struct._mod** %p, align 8
  %v = getelementptr inbounds %struct._mod, %struct._mod* %5, i32 0, i32 1
  %Suite = bitcast %union.anon* %v to %struct.anon.32*
  %body1 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %Suite, i32 0, i32 0
  store %struct.asdl_seq* %4, %struct.asdl_seq** %body1, align 8
  %6 = load %struct._mod*, %struct._mod** %p, align 8
  store %struct._mod* %6, %struct._mod** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct._mod*, %struct._mod** %retval
  ret %struct._mod* %7
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_FunctionDef(%struct._object* %name, %struct._arguments* %args, %struct.asdl_seq* %body, %struct.asdl_seq* %decorator_list, %struct._expr* %returns, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %name.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._arguments*, align 8
  %body.addr = alloca %struct.asdl_seq*, align 8
  %decorator_list.addr = alloca %struct.asdl_seq*, align 8
  %returns.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct._object* %name, %struct._object** %name.addr, align 8
  store %struct._arguments* %args, %struct._arguments** %args.addr, align 8
  store %struct.asdl_seq* %body, %struct.asdl_seq** %body.addr, align 8
  store %struct.asdl_seq* %decorator_list, %struct.asdl_seq** %decorator_list.addr, align 8
  store %struct._expr* %returns, %struct._expr** %returns.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %name.addr, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arguments*, %struct._arguments** %args.addr, align 8
  %tobool1 = icmp ne %struct._arguments* %2, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %4, i64 72)
  %5 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %5, %struct._stmt** %p, align 8
  %6 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool4 = icmp ne %struct._stmt* %6, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 0
  store i32 1, i32* %kind, align 4
  %8 = load %struct._object*, %struct._object** %name.addr, align 8
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 1
  %FunctionDef = bitcast %union.anon.33* %v to %struct.anon.34*
  %name7 = getelementptr inbounds %struct.anon.34, %struct.anon.34* %FunctionDef, i32 0, i32 0
  store %struct._object* %8, %struct._object** %name7, align 8
  %10 = load %struct._arguments*, %struct._arguments** %args.addr, align 8
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v8 = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 1
  %FunctionDef9 = bitcast %union.anon.33* %v8 to %struct.anon.34*
  %args10 = getelementptr inbounds %struct.anon.34, %struct.anon.34* %FunctionDef9, i32 0, i32 1
  store %struct._arguments* %10, %struct._arguments** %args10, align 8
  %12 = load %struct.asdl_seq*, %struct.asdl_seq** %body.addr, align 8
  %13 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v11 = getelementptr inbounds %struct._stmt, %struct._stmt* %13, i32 0, i32 1
  %FunctionDef12 = bitcast %union.anon.33* %v11 to %struct.anon.34*
  %body13 = getelementptr inbounds %struct.anon.34, %struct.anon.34* %FunctionDef12, i32 0, i32 2
  store %struct.asdl_seq* %12, %struct.asdl_seq** %body13, align 8
  %14 = load %struct.asdl_seq*, %struct.asdl_seq** %decorator_list.addr, align 8
  %15 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v14 = getelementptr inbounds %struct._stmt, %struct._stmt* %15, i32 0, i32 1
  %FunctionDef15 = bitcast %union.anon.33* %v14 to %struct.anon.34*
  %decorator_list16 = getelementptr inbounds %struct.anon.34, %struct.anon.34* %FunctionDef15, i32 0, i32 3
  store %struct.asdl_seq* %14, %struct.asdl_seq** %decorator_list16, align 8
  %16 = load %struct._expr*, %struct._expr** %returns.addr, align 8
  %17 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v17 = getelementptr inbounds %struct._stmt, %struct._stmt* %17, i32 0, i32 1
  %FunctionDef18 = bitcast %union.anon.33* %v17 to %struct.anon.34*
  %returns19 = getelementptr inbounds %struct.anon.34, %struct.anon.34* %FunctionDef18, i32 0, i32 4
  store %struct._expr* %16, %struct._expr** %returns19, align 8
  %18 = load i32, i32* %lineno.addr, align 4
  %19 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno20 = getelementptr inbounds %struct._stmt, %struct._stmt* %19, i32 0, i32 2
  store i32 %18, i32* %lineno20, align 4
  %20 = load i32, i32* %col_offset.addr, align 4
  %21 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset21 = getelementptr inbounds %struct._stmt, %struct._stmt* %21, i32 0, i32 3
  store i32 %20, i32* %col_offset21, align 4
  %22 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %22, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then.2, %if.then
  %23 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %23
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_ClassDef(%struct._object* %name, %struct.asdl_seq* %bases, %struct.asdl_seq* %keywords, %struct._expr* %starargs, %struct._expr* %kwargs, %struct.asdl_seq* %body, %struct.asdl_seq* %decorator_list, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %name.addr = alloca %struct._object*, align 8
  %bases.addr = alloca %struct.asdl_seq*, align 8
  %keywords.addr = alloca %struct.asdl_seq*, align 8
  %starargs.addr = alloca %struct._expr*, align 8
  %kwargs.addr = alloca %struct._expr*, align 8
  %body.addr = alloca %struct.asdl_seq*, align 8
  %decorator_list.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct._object* %name, %struct._object** %name.addr, align 8
  store %struct.asdl_seq* %bases, %struct.asdl_seq** %bases.addr, align 8
  store %struct.asdl_seq* %keywords, %struct.asdl_seq** %keywords.addr, align 8
  store %struct._expr* %starargs, %struct._expr** %starargs.addr, align 8
  store %struct._expr* %kwargs, %struct._expr** %kwargs.addr, align 8
  store %struct.asdl_seq* %body, %struct.asdl_seq** %body.addr, align 8
  store %struct.asdl_seq* %decorator_list, %struct.asdl_seq** %decorator_list.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %name.addr, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 72)
  %3 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %3, %struct._stmt** %p, align 8
  %4 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool1 = icmp ne %struct._stmt* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 0
  store i32 2, i32* %kind, align 4
  %6 = load %struct._object*, %struct._object** %name.addr, align 8
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 1
  %ClassDef = bitcast %union.anon.33* %v to %struct.anon.35*
  %name4 = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef, i32 0, i32 0
  store %struct._object* %6, %struct._object** %name4, align 8
  %8 = load %struct.asdl_seq*, %struct.asdl_seq** %bases.addr, align 8
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v5 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 1
  %ClassDef6 = bitcast %union.anon.33* %v5 to %struct.anon.35*
  %bases7 = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef6, i32 0, i32 1
  store %struct.asdl_seq* %8, %struct.asdl_seq** %bases7, align 8
  %10 = load %struct.asdl_seq*, %struct.asdl_seq** %keywords.addr, align 8
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v8 = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 1
  %ClassDef9 = bitcast %union.anon.33* %v8 to %struct.anon.35*
  %keywords10 = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef9, i32 0, i32 2
  store %struct.asdl_seq* %10, %struct.asdl_seq** %keywords10, align 8
  %12 = load %struct._expr*, %struct._expr** %starargs.addr, align 8
  %13 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v11 = getelementptr inbounds %struct._stmt, %struct._stmt* %13, i32 0, i32 1
  %ClassDef12 = bitcast %union.anon.33* %v11 to %struct.anon.35*
  %starargs13 = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef12, i32 0, i32 3
  store %struct._expr* %12, %struct._expr** %starargs13, align 8
  %14 = load %struct._expr*, %struct._expr** %kwargs.addr, align 8
  %15 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v14 = getelementptr inbounds %struct._stmt, %struct._stmt* %15, i32 0, i32 1
  %ClassDef15 = bitcast %union.anon.33* %v14 to %struct.anon.35*
  %kwargs16 = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef15, i32 0, i32 4
  store %struct._expr* %14, %struct._expr** %kwargs16, align 8
  %16 = load %struct.asdl_seq*, %struct.asdl_seq** %body.addr, align 8
  %17 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v17 = getelementptr inbounds %struct._stmt, %struct._stmt* %17, i32 0, i32 1
  %ClassDef18 = bitcast %union.anon.33* %v17 to %struct.anon.35*
  %body19 = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef18, i32 0, i32 5
  store %struct.asdl_seq* %16, %struct.asdl_seq** %body19, align 8
  %18 = load %struct.asdl_seq*, %struct.asdl_seq** %decorator_list.addr, align 8
  %19 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v20 = getelementptr inbounds %struct._stmt, %struct._stmt* %19, i32 0, i32 1
  %ClassDef21 = bitcast %union.anon.33* %v20 to %struct.anon.35*
  %decorator_list22 = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef21, i32 0, i32 6
  store %struct.asdl_seq* %18, %struct.asdl_seq** %decorator_list22, align 8
  %20 = load i32, i32* %lineno.addr, align 4
  %21 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno23 = getelementptr inbounds %struct._stmt, %struct._stmt* %21, i32 0, i32 2
  store i32 %20, i32* %lineno23, align 4
  %22 = load i32, i32* %col_offset.addr, align 4
  %23 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset24 = getelementptr inbounds %struct._stmt, %struct._stmt* %23, i32 0, i32 3
  store i32 %22, i32* %col_offset24, align 4
  %24 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %24, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %25 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %25
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Return(%struct._expr* %value, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %value.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct._expr* %value, %struct._expr** %value.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 72)
  %1 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %p, align 8
  %2 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %3, i32 0, i32 0
  store i32 3, i32* %kind, align 4
  %4 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 1
  %Return = bitcast %union.anon.33* %v to %struct.anon.36*
  %value1 = getelementptr inbounds %struct.anon.36, %struct.anon.36* %Return, i32 0, i32 0
  store %struct._expr* %4, %struct._expr** %value1, align 8
  %6 = load i32, i32* %lineno.addr, align 4
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno2 = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 2
  store i32 %6, i32* %lineno2, align 4
  %8 = load i32, i32* %col_offset.addr, align 4
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset3 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 3
  store i32 %8, i32* %col_offset3, align 4
  %10 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %10, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %11
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Delete(%struct.asdl_seq* %targets, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %targets.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct.asdl_seq* %targets, %struct.asdl_seq** %targets.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 72)
  %1 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %p, align 8
  %2 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %3, i32 0, i32 0
  store i32 4, i32* %kind, align 4
  %4 = load %struct.asdl_seq*, %struct.asdl_seq** %targets.addr, align 8
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 1
  %Delete = bitcast %union.anon.33* %v to %struct.anon.37*
  %targets1 = getelementptr inbounds %struct.anon.37, %struct.anon.37* %Delete, i32 0, i32 0
  store %struct.asdl_seq* %4, %struct.asdl_seq** %targets1, align 8
  %6 = load i32, i32* %lineno.addr, align 4
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno2 = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 2
  store i32 %6, i32* %lineno2, align 4
  %8 = load i32, i32* %col_offset.addr, align 4
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset3 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 3
  store i32 %8, i32* %col_offset3, align 4
  %10 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %10, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %11
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Assign(%struct.asdl_seq* %targets, %struct._expr* %value, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %targets.addr = alloca %struct.asdl_seq*, align 8
  %value.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct.asdl_seq* %targets, %struct.asdl_seq** %targets.addr, align 8
  store %struct._expr* %value, %struct._expr** %value.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 72)
  %3 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %3, %struct._stmt** %p, align 8
  %4 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool1 = icmp ne %struct._stmt* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 0
  store i32 5, i32* %kind, align 4
  %6 = load %struct.asdl_seq*, %struct.asdl_seq** %targets.addr, align 8
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 1
  %Assign = bitcast %union.anon.33* %v to %struct.anon.38*
  %targets4 = getelementptr inbounds %struct.anon.38, %struct.anon.38* %Assign, i32 0, i32 0
  store %struct.asdl_seq* %6, %struct.asdl_seq** %targets4, align 8
  %8 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v5 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 1
  %Assign6 = bitcast %union.anon.33* %v5 to %struct.anon.38*
  %value7 = getelementptr inbounds %struct.anon.38, %struct.anon.38* %Assign6, i32 0, i32 1
  store %struct._expr* %8, %struct._expr** %value7, align 8
  %10 = load i32, i32* %lineno.addr, align 4
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno8 = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 2
  store i32 %10, i32* %lineno8, align 4
  %12 = load i32, i32* %col_offset.addr, align 4
  %13 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset9 = getelementptr inbounds %struct._stmt, %struct._stmt* %13, i32 0, i32 3
  store i32 %12, i32* %col_offset9, align 4
  %14 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %14, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %15 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %15
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_AugAssign(%struct._expr* %target, i32 %op, %struct._expr* %value, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %target.addr = alloca %struct._expr*, align 8
  %op.addr = alloca i32, align 4
  %value.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct._expr* %target, %struct._expr** %target.addr, align 8
  store i32 %op, i32* %op.addr, align 4
  store %struct._expr* %value, %struct._expr** %value.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %target.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %op.addr, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %tobool4 = icmp ne %struct._expr* %4, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %6 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %6, i64 72)
  %7 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %7, %struct._stmt** %p, align 8
  %8 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool7 = icmp ne %struct._stmt* %8, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.6
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 0
  store i32 6, i32* %kind, align 4
  %10 = load %struct._expr*, %struct._expr** %target.addr, align 8
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 1
  %AugAssign = bitcast %union.anon.33* %v to %struct.anon.39*
  %target10 = getelementptr inbounds %struct.anon.39, %struct.anon.39* %AugAssign, i32 0, i32 0
  store %struct._expr* %10, %struct._expr** %target10, align 8
  %12 = load i32, i32* %op.addr, align 4
  %13 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v11 = getelementptr inbounds %struct._stmt, %struct._stmt* %13, i32 0, i32 1
  %AugAssign12 = bitcast %union.anon.33* %v11 to %struct.anon.39*
  %op13 = getelementptr inbounds %struct.anon.39, %struct.anon.39* %AugAssign12, i32 0, i32 1
  store i32 %12, i32* %op13, align 4
  %14 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %15 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v14 = getelementptr inbounds %struct._stmt, %struct._stmt* %15, i32 0, i32 1
  %AugAssign15 = bitcast %union.anon.33* %v14 to %struct.anon.39*
  %value16 = getelementptr inbounds %struct.anon.39, %struct.anon.39* %AugAssign15, i32 0, i32 2
  store %struct._expr* %14, %struct._expr** %value16, align 8
  %16 = load i32, i32* %lineno.addr, align 4
  %17 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno17 = getelementptr inbounds %struct._stmt, %struct._stmt* %17, i32 0, i32 2
  store i32 %16, i32* %lineno17, align 4
  %18 = load i32, i32* %col_offset.addr, align 4
  %19 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset18 = getelementptr inbounds %struct._stmt, %struct._stmt* %19, i32 0, i32 3
  store i32 %18, i32* %col_offset18, align 4
  %20 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %20, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end.9, %if.then.8, %if.then.5, %if.then.2, %if.then
  %21 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %21
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_For(%struct._expr* %target, %struct._expr* %iter, %struct.asdl_seq* %body, %struct.asdl_seq* %orelse, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %target.addr = alloca %struct._expr*, align 8
  %iter.addr = alloca %struct._expr*, align 8
  %body.addr = alloca %struct.asdl_seq*, align 8
  %orelse.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct._expr* %target, %struct._expr** %target.addr, align 8
  store %struct._expr* %iter, %struct._expr** %iter.addr, align 8
  store %struct.asdl_seq* %body, %struct.asdl_seq** %body.addr, align 8
  store %struct.asdl_seq* %orelse, %struct.asdl_seq** %orelse.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %target.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._expr*, %struct._expr** %iter.addr, align 8
  %tobool1 = icmp ne %struct._expr* %2, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %4, i64 72)
  %5 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %5, %struct._stmt** %p, align 8
  %6 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool4 = icmp ne %struct._stmt* %6, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 0
  store i32 7, i32* %kind, align 4
  %8 = load %struct._expr*, %struct._expr** %target.addr, align 8
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 1
  %For = bitcast %union.anon.33* %v to %struct.anon.40*
  %target7 = getelementptr inbounds %struct.anon.40, %struct.anon.40* %For, i32 0, i32 0
  store %struct._expr* %8, %struct._expr** %target7, align 8
  %10 = load %struct._expr*, %struct._expr** %iter.addr, align 8
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v8 = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 1
  %For9 = bitcast %union.anon.33* %v8 to %struct.anon.40*
  %iter10 = getelementptr inbounds %struct.anon.40, %struct.anon.40* %For9, i32 0, i32 1
  store %struct._expr* %10, %struct._expr** %iter10, align 8
  %12 = load %struct.asdl_seq*, %struct.asdl_seq** %body.addr, align 8
  %13 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v11 = getelementptr inbounds %struct._stmt, %struct._stmt* %13, i32 0, i32 1
  %For12 = bitcast %union.anon.33* %v11 to %struct.anon.40*
  %body13 = getelementptr inbounds %struct.anon.40, %struct.anon.40* %For12, i32 0, i32 2
  store %struct.asdl_seq* %12, %struct.asdl_seq** %body13, align 8
  %14 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse.addr, align 8
  %15 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v14 = getelementptr inbounds %struct._stmt, %struct._stmt* %15, i32 0, i32 1
  %For15 = bitcast %union.anon.33* %v14 to %struct.anon.40*
  %orelse16 = getelementptr inbounds %struct.anon.40, %struct.anon.40* %For15, i32 0, i32 3
  store %struct.asdl_seq* %14, %struct.asdl_seq** %orelse16, align 8
  %16 = load i32, i32* %lineno.addr, align 4
  %17 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno17 = getelementptr inbounds %struct._stmt, %struct._stmt* %17, i32 0, i32 2
  store i32 %16, i32* %lineno17, align 4
  %18 = load i32, i32* %col_offset.addr, align 4
  %19 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset18 = getelementptr inbounds %struct._stmt, %struct._stmt* %19, i32 0, i32 3
  store i32 %18, i32* %col_offset18, align 4
  %20 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %20, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then.2, %if.then
  %21 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %21
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_While(%struct._expr* %test, %struct.asdl_seq* %body, %struct.asdl_seq* %orelse, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %test.addr = alloca %struct._expr*, align 8
  %body.addr = alloca %struct.asdl_seq*, align 8
  %orelse.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct._expr* %test, %struct._expr** %test.addr, align 8
  store %struct.asdl_seq* %body, %struct.asdl_seq** %body.addr, align 8
  store %struct.asdl_seq* %orelse, %struct.asdl_seq** %orelse.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %test.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 72)
  %3 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %3, %struct._stmt** %p, align 8
  %4 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool1 = icmp ne %struct._stmt* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 0
  store i32 8, i32* %kind, align 4
  %6 = load %struct._expr*, %struct._expr** %test.addr, align 8
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 1
  %While = bitcast %union.anon.33* %v to %struct.anon.41*
  %test4 = getelementptr inbounds %struct.anon.41, %struct.anon.41* %While, i32 0, i32 0
  store %struct._expr* %6, %struct._expr** %test4, align 8
  %8 = load %struct.asdl_seq*, %struct.asdl_seq** %body.addr, align 8
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v5 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 1
  %While6 = bitcast %union.anon.33* %v5 to %struct.anon.41*
  %body7 = getelementptr inbounds %struct.anon.41, %struct.anon.41* %While6, i32 0, i32 1
  store %struct.asdl_seq* %8, %struct.asdl_seq** %body7, align 8
  %10 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse.addr, align 8
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v8 = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 1
  %While9 = bitcast %union.anon.33* %v8 to %struct.anon.41*
  %orelse10 = getelementptr inbounds %struct.anon.41, %struct.anon.41* %While9, i32 0, i32 2
  store %struct.asdl_seq* %10, %struct.asdl_seq** %orelse10, align 8
  %12 = load i32, i32* %lineno.addr, align 4
  %13 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno11 = getelementptr inbounds %struct._stmt, %struct._stmt* %13, i32 0, i32 2
  store i32 %12, i32* %lineno11, align 4
  %14 = load i32, i32* %col_offset.addr, align 4
  %15 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset12 = getelementptr inbounds %struct._stmt, %struct._stmt* %15, i32 0, i32 3
  store i32 %14, i32* %col_offset12, align 4
  %16 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %16, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %17 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %17
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_If(%struct._expr* %test, %struct.asdl_seq* %body, %struct.asdl_seq* %orelse, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %test.addr = alloca %struct._expr*, align 8
  %body.addr = alloca %struct.asdl_seq*, align 8
  %orelse.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct._expr* %test, %struct._expr** %test.addr, align 8
  store %struct.asdl_seq* %body, %struct.asdl_seq** %body.addr, align 8
  store %struct.asdl_seq* %orelse, %struct.asdl_seq** %orelse.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %test.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 72)
  %3 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %3, %struct._stmt** %p, align 8
  %4 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool1 = icmp ne %struct._stmt* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 0
  store i32 9, i32* %kind, align 4
  %6 = load %struct._expr*, %struct._expr** %test.addr, align 8
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 1
  %If = bitcast %union.anon.33* %v to %struct.anon.42*
  %test4 = getelementptr inbounds %struct.anon.42, %struct.anon.42* %If, i32 0, i32 0
  store %struct._expr* %6, %struct._expr** %test4, align 8
  %8 = load %struct.asdl_seq*, %struct.asdl_seq** %body.addr, align 8
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v5 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 1
  %If6 = bitcast %union.anon.33* %v5 to %struct.anon.42*
  %body7 = getelementptr inbounds %struct.anon.42, %struct.anon.42* %If6, i32 0, i32 1
  store %struct.asdl_seq* %8, %struct.asdl_seq** %body7, align 8
  %10 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse.addr, align 8
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v8 = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 1
  %If9 = bitcast %union.anon.33* %v8 to %struct.anon.42*
  %orelse10 = getelementptr inbounds %struct.anon.42, %struct.anon.42* %If9, i32 0, i32 2
  store %struct.asdl_seq* %10, %struct.asdl_seq** %orelse10, align 8
  %12 = load i32, i32* %lineno.addr, align 4
  %13 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno11 = getelementptr inbounds %struct._stmt, %struct._stmt* %13, i32 0, i32 2
  store i32 %12, i32* %lineno11, align 4
  %14 = load i32, i32* %col_offset.addr, align 4
  %15 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset12 = getelementptr inbounds %struct._stmt, %struct._stmt* %15, i32 0, i32 3
  store i32 %14, i32* %col_offset12, align 4
  %16 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %16, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %17 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %17
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_With(%struct.asdl_seq* %items, %struct.asdl_seq* %body, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %items.addr = alloca %struct.asdl_seq*, align 8
  %body.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct.asdl_seq* %items, %struct.asdl_seq** %items.addr, align 8
  store %struct.asdl_seq* %body, %struct.asdl_seq** %body.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 72)
  %1 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %p, align 8
  %2 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %3, i32 0, i32 0
  store i32 10, i32* %kind, align 4
  %4 = load %struct.asdl_seq*, %struct.asdl_seq** %items.addr, align 8
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 1
  %With = bitcast %union.anon.33* %v to %struct.anon.43*
  %items1 = getelementptr inbounds %struct.anon.43, %struct.anon.43* %With, i32 0, i32 0
  store %struct.asdl_seq* %4, %struct.asdl_seq** %items1, align 8
  %6 = load %struct.asdl_seq*, %struct.asdl_seq** %body.addr, align 8
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v2 = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 1
  %With3 = bitcast %union.anon.33* %v2 to %struct.anon.43*
  %body4 = getelementptr inbounds %struct.anon.43, %struct.anon.43* %With3, i32 0, i32 1
  store %struct.asdl_seq* %6, %struct.asdl_seq** %body4, align 8
  %8 = load i32, i32* %lineno.addr, align 4
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno5 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 2
  store i32 %8, i32* %lineno5, align 4
  %10 = load i32, i32* %col_offset.addr, align 4
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset6 = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 3
  store i32 %10, i32* %col_offset6, align 4
  %12 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %12, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %13 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %13
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Raise(%struct._expr* %exc, %struct._expr* %cause, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %exc.addr = alloca %struct._expr*, align 8
  %cause.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct._expr* %exc, %struct._expr** %exc.addr, align 8
  store %struct._expr* %cause, %struct._expr** %cause.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 72)
  %1 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %p, align 8
  %2 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %3, i32 0, i32 0
  store i32 11, i32* %kind, align 4
  %4 = load %struct._expr*, %struct._expr** %exc.addr, align 8
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 1
  %Raise = bitcast %union.anon.33* %v to %struct.anon.44*
  %exc1 = getelementptr inbounds %struct.anon.44, %struct.anon.44* %Raise, i32 0, i32 0
  store %struct._expr* %4, %struct._expr** %exc1, align 8
  %6 = load %struct._expr*, %struct._expr** %cause.addr, align 8
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v2 = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 1
  %Raise3 = bitcast %union.anon.33* %v2 to %struct.anon.44*
  %cause4 = getelementptr inbounds %struct.anon.44, %struct.anon.44* %Raise3, i32 0, i32 1
  store %struct._expr* %6, %struct._expr** %cause4, align 8
  %8 = load i32, i32* %lineno.addr, align 4
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno5 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 2
  store i32 %8, i32* %lineno5, align 4
  %10 = load i32, i32* %col_offset.addr, align 4
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset6 = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 3
  store i32 %10, i32* %col_offset6, align 4
  %12 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %12, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %13 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %13
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Try(%struct.asdl_seq* %body, %struct.asdl_seq* %handlers, %struct.asdl_seq* %orelse, %struct.asdl_seq* %finalbody, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %body.addr = alloca %struct.asdl_seq*, align 8
  %handlers.addr = alloca %struct.asdl_seq*, align 8
  %orelse.addr = alloca %struct.asdl_seq*, align 8
  %finalbody.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct.asdl_seq* %body, %struct.asdl_seq** %body.addr, align 8
  store %struct.asdl_seq* %handlers, %struct.asdl_seq** %handlers.addr, align 8
  store %struct.asdl_seq* %orelse, %struct.asdl_seq** %orelse.addr, align 8
  store %struct.asdl_seq* %finalbody, %struct.asdl_seq** %finalbody.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 72)
  %1 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %p, align 8
  %2 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %3, i32 0, i32 0
  store i32 12, i32* %kind, align 4
  %4 = load %struct.asdl_seq*, %struct.asdl_seq** %body.addr, align 8
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 1
  %Try = bitcast %union.anon.33* %v to %struct.anon.45*
  %body1 = getelementptr inbounds %struct.anon.45, %struct.anon.45* %Try, i32 0, i32 0
  store %struct.asdl_seq* %4, %struct.asdl_seq** %body1, align 8
  %6 = load %struct.asdl_seq*, %struct.asdl_seq** %handlers.addr, align 8
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v2 = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 1
  %Try3 = bitcast %union.anon.33* %v2 to %struct.anon.45*
  %handlers4 = getelementptr inbounds %struct.anon.45, %struct.anon.45* %Try3, i32 0, i32 1
  store %struct.asdl_seq* %6, %struct.asdl_seq** %handlers4, align 8
  %8 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse.addr, align 8
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v5 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 1
  %Try6 = bitcast %union.anon.33* %v5 to %struct.anon.45*
  %orelse7 = getelementptr inbounds %struct.anon.45, %struct.anon.45* %Try6, i32 0, i32 2
  store %struct.asdl_seq* %8, %struct.asdl_seq** %orelse7, align 8
  %10 = load %struct.asdl_seq*, %struct.asdl_seq** %finalbody.addr, align 8
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v8 = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 1
  %Try9 = bitcast %union.anon.33* %v8 to %struct.anon.45*
  %finalbody10 = getelementptr inbounds %struct.anon.45, %struct.anon.45* %Try9, i32 0, i32 3
  store %struct.asdl_seq* %10, %struct.asdl_seq** %finalbody10, align 8
  %12 = load i32, i32* %lineno.addr, align 4
  %13 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno11 = getelementptr inbounds %struct._stmt, %struct._stmt* %13, i32 0, i32 2
  store i32 %12, i32* %lineno11, align 4
  %14 = load i32, i32* %col_offset.addr, align 4
  %15 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset12 = getelementptr inbounds %struct._stmt, %struct._stmt* %15, i32 0, i32 3
  store i32 %14, i32* %col_offset12, align 4
  %16 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %16, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %17 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %17
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Assert(%struct._expr* %test, %struct._expr* %msg, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %test.addr = alloca %struct._expr*, align 8
  %msg.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct._expr* %test, %struct._expr** %test.addr, align 8
  store %struct._expr* %msg, %struct._expr** %msg.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %test.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 72)
  %3 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %3, %struct._stmt** %p, align 8
  %4 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool1 = icmp ne %struct._stmt* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 0
  store i32 13, i32* %kind, align 4
  %6 = load %struct._expr*, %struct._expr** %test.addr, align 8
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 1
  %Assert = bitcast %union.anon.33* %v to %struct.anon.46*
  %test4 = getelementptr inbounds %struct.anon.46, %struct.anon.46* %Assert, i32 0, i32 0
  store %struct._expr* %6, %struct._expr** %test4, align 8
  %8 = load %struct._expr*, %struct._expr** %msg.addr, align 8
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v5 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 1
  %Assert6 = bitcast %union.anon.33* %v5 to %struct.anon.46*
  %msg7 = getelementptr inbounds %struct.anon.46, %struct.anon.46* %Assert6, i32 0, i32 1
  store %struct._expr* %8, %struct._expr** %msg7, align 8
  %10 = load i32, i32* %lineno.addr, align 4
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno8 = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 2
  store i32 %10, i32* %lineno8, align 4
  %12 = load i32, i32* %col_offset.addr, align 4
  %13 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset9 = getelementptr inbounds %struct._stmt, %struct._stmt* %13, i32 0, i32 3
  store i32 %12, i32* %col_offset9, align 4
  %14 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %14, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %15 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %15
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Import(%struct.asdl_seq* %names, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %names.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct.asdl_seq* %names, %struct.asdl_seq** %names.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 72)
  %1 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %p, align 8
  %2 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %3, i32 0, i32 0
  store i32 14, i32* %kind, align 4
  %4 = load %struct.asdl_seq*, %struct.asdl_seq** %names.addr, align 8
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 1
  %Import = bitcast %union.anon.33* %v to %struct.anon.47*
  %names1 = getelementptr inbounds %struct.anon.47, %struct.anon.47* %Import, i32 0, i32 0
  store %struct.asdl_seq* %4, %struct.asdl_seq** %names1, align 8
  %6 = load i32, i32* %lineno.addr, align 4
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno2 = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 2
  store i32 %6, i32* %lineno2, align 4
  %8 = load i32, i32* %col_offset.addr, align 4
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset3 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 3
  store i32 %8, i32* %col_offset3, align 4
  %10 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %10, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %11
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_ImportFrom(%struct._object* %module, %struct.asdl_seq* %names, i32 %level, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %module.addr = alloca %struct._object*, align 8
  %names.addr = alloca %struct.asdl_seq*, align 8
  %level.addr = alloca i32, align 4
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct._object* %module, %struct._object** %module.addr, align 8
  store %struct.asdl_seq* %names, %struct.asdl_seq** %names.addr, align 8
  store i32 %level, i32* %level.addr, align 4
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 72)
  %1 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %p, align 8
  %2 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %3, i32 0, i32 0
  store i32 15, i32* %kind, align 4
  %4 = load %struct._object*, %struct._object** %module.addr, align 8
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 1
  %ImportFrom = bitcast %union.anon.33* %v to %struct.anon.48*
  %module1 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %ImportFrom, i32 0, i32 0
  store %struct._object* %4, %struct._object** %module1, align 8
  %6 = load %struct.asdl_seq*, %struct.asdl_seq** %names.addr, align 8
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v2 = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 1
  %ImportFrom3 = bitcast %union.anon.33* %v2 to %struct.anon.48*
  %names4 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %ImportFrom3, i32 0, i32 1
  store %struct.asdl_seq* %6, %struct.asdl_seq** %names4, align 8
  %8 = load i32, i32* %level.addr, align 4
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v5 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 1
  %ImportFrom6 = bitcast %union.anon.33* %v5 to %struct.anon.48*
  %level7 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %ImportFrom6, i32 0, i32 2
  store i32 %8, i32* %level7, align 4
  %10 = load i32, i32* %lineno.addr, align 4
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno8 = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 2
  store i32 %10, i32* %lineno8, align 4
  %12 = load i32, i32* %col_offset.addr, align 4
  %13 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset9 = getelementptr inbounds %struct._stmt, %struct._stmt* %13, i32 0, i32 3
  store i32 %12, i32* %col_offset9, align 4
  %14 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %14, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %15 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %15
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Global(%struct.asdl_seq* %names, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %names.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct.asdl_seq* %names, %struct.asdl_seq** %names.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 72)
  %1 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %p, align 8
  %2 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %3, i32 0, i32 0
  store i32 16, i32* %kind, align 4
  %4 = load %struct.asdl_seq*, %struct.asdl_seq** %names.addr, align 8
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 1
  %Global = bitcast %union.anon.33* %v to %struct.anon.49*
  %names1 = getelementptr inbounds %struct.anon.49, %struct.anon.49* %Global, i32 0, i32 0
  store %struct.asdl_seq* %4, %struct.asdl_seq** %names1, align 8
  %6 = load i32, i32* %lineno.addr, align 4
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno2 = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 2
  store i32 %6, i32* %lineno2, align 4
  %8 = load i32, i32* %col_offset.addr, align 4
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset3 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 3
  store i32 %8, i32* %col_offset3, align 4
  %10 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %10, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %11
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Nonlocal(%struct.asdl_seq* %names, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %names.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct.asdl_seq* %names, %struct.asdl_seq** %names.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 72)
  %1 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %p, align 8
  %2 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %3, i32 0, i32 0
  store i32 17, i32* %kind, align 4
  %4 = load %struct.asdl_seq*, %struct.asdl_seq** %names.addr, align 8
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 1
  %Nonlocal = bitcast %union.anon.33* %v to %struct.anon.50*
  %names1 = getelementptr inbounds %struct.anon.50, %struct.anon.50* %Nonlocal, i32 0, i32 0
  store %struct.asdl_seq* %4, %struct.asdl_seq** %names1, align 8
  %6 = load i32, i32* %lineno.addr, align 4
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno2 = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 2
  store i32 %6, i32* %lineno2, align 4
  %8 = load i32, i32* %col_offset.addr, align 4
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset3 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 3
  store i32 %8, i32* %col_offset3, align 4
  %10 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %10, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %11
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Expr(%struct._expr* %value, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %value.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store %struct._expr* %value, %struct._expr** %value.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i32 0, i32 0))
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 72)
  %3 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %3, %struct._stmt** %p, align 8
  %4 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool1 = icmp ne %struct._stmt* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 0
  store i32 18, i32* %kind, align 4
  %6 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 1
  %Expr = bitcast %union.anon.33* %v to %struct.anon.51*
  %value4 = getelementptr inbounds %struct.anon.51, %struct.anon.51* %Expr, i32 0, i32 0
  store %struct._expr* %6, %struct._expr** %value4, align 8
  %8 = load i32, i32* %lineno.addr, align 4
  %9 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno5 = getelementptr inbounds %struct._stmt, %struct._stmt* %9, i32 0, i32 2
  store i32 %8, i32* %lineno5, align 4
  %10 = load i32, i32* %col_offset.addr, align 4
  %11 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset6 = getelementptr inbounds %struct._stmt, %struct._stmt* %11, i32 0, i32 3
  store i32 %10, i32* %col_offset6, align 4
  %12 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %12, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %13 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %13
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Pass(i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 72)
  %1 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %p, align 8
  %2 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %3, i32 0, i32 0
  store i32 19, i32* %kind, align 4
  %4 = load i32, i32* %lineno.addr, align 4
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno1 = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 2
  store i32 %4, i32* %lineno1, align 4
  %6 = load i32, i32* %col_offset.addr, align 4
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset2 = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 3
  store i32 %6, i32* %col_offset2, align 4
  %8 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %8, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %9
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Break(i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 72)
  %1 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %p, align 8
  %2 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %3, i32 0, i32 0
  store i32 20, i32* %kind, align 4
  %4 = load i32, i32* %lineno.addr, align 4
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno1 = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 2
  store i32 %4, i32* %lineno1, align 4
  %6 = load i32, i32* %col_offset.addr, align 4
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset2 = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 3
  store i32 %6, i32* %col_offset2, align 4
  %8 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %8, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %9
}

; Function Attrs: nounwind uwtable
define %struct._stmt* @_Py_Continue(i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._stmt*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._stmt*, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 72)
  %1 = bitcast i8* %call to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %p, align 8
  %2 = load %struct._stmt*, %struct._stmt** %p, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._stmt* null, %struct._stmt** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._stmt*, %struct._stmt** %p, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %3, i32 0, i32 0
  store i32 21, i32* %kind, align 4
  %4 = load i32, i32* %lineno.addr, align 4
  %5 = load %struct._stmt*, %struct._stmt** %p, align 8
  %lineno1 = getelementptr inbounds %struct._stmt, %struct._stmt* %5, i32 0, i32 2
  store i32 %4, i32* %lineno1, align 4
  %6 = load i32, i32* %col_offset.addr, align 4
  %7 = load %struct._stmt*, %struct._stmt** %p, align 8
  %col_offset2 = getelementptr inbounds %struct._stmt, %struct._stmt* %7, i32 0, i32 3
  store i32 %6, i32* %col_offset2, align 4
  %8 = load %struct._stmt*, %struct._stmt** %p, align 8
  store %struct._stmt* %8, %struct._stmt** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct._stmt*, %struct._stmt** %retval
  ret %struct._stmt* %9
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_BoolOp(i32 %op, %struct.asdl_seq* %values, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %op.addr = alloca i32, align 4
  %values.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store i32 %op, i32* %op.addr, align 4
  store %struct.asdl_seq* %values, %struct.asdl_seq** %values.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load i32, i32* %op.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 1, i32* %kind, align 4
  %6 = load i32, i32* %op.addr, align 4
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %BoolOp = bitcast %union.anon.2* %v to %struct.anon.3*
  %op4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %BoolOp, i32 0, i32 0
  store i32 %6, i32* %op4, align 4
  %8 = load %struct.asdl_seq*, %struct.asdl_seq** %values.addr, align 8
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %BoolOp6 = bitcast %union.anon.2* %v5 to %struct.anon.3*
  %values7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %BoolOp6, i32 0, i32 1
  store %struct.asdl_seq* %8, %struct.asdl_seq** %values7, align 8
  %10 = load i32, i32* %lineno.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 2
  store i32 %10, i32* %lineno8, align 4
  %12 = load i32, i32* %col_offset.addr, align 4
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset9 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 3
  store i32 %12, i32* %col_offset9, align 4
  %14 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %14, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %15 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %15
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_BinOp(%struct._expr* %left, i32 %op, %struct._expr* %right, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %left.addr = alloca %struct._expr*, align 8
  %op.addr = alloca i32, align 4
  %right.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %left, %struct._expr** %left.addr, align 8
  store i32 %op, i32* %op.addr, align 4
  store %struct._expr* %right, %struct._expr** %right.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %left.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %op.addr, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %struct._expr*, %struct._expr** %right.addr, align 8
  %tobool4 = icmp ne %struct._expr* %4, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %6 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %6, i64 56)
  %7 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %7, %struct._expr** %p, align 8
  %8 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool7 = icmp ne %struct._expr* %8, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.6
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 0
  store i32 2, i32* %kind, align 4
  %10 = load %struct._expr*, %struct._expr** %left.addr, align 8
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 1
  %BinOp = bitcast %union.anon.2* %v to %struct.anon.4*
  %left10 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %BinOp, i32 0, i32 0
  store %struct._expr* %10, %struct._expr** %left10, align 8
  %12 = load i32, i32* %op.addr, align 4
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %v11 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 1
  %BinOp12 = bitcast %union.anon.2* %v11 to %struct.anon.4*
  %op13 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %BinOp12, i32 0, i32 1
  store i32 %12, i32* %op13, align 4
  %14 = load %struct._expr*, %struct._expr** %right.addr, align 8
  %15 = load %struct._expr*, %struct._expr** %p, align 8
  %v14 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 1
  %BinOp15 = bitcast %union.anon.2* %v14 to %struct.anon.4*
  %right16 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %BinOp15, i32 0, i32 2
  store %struct._expr* %14, %struct._expr** %right16, align 8
  %16 = load i32, i32* %lineno.addr, align 4
  %17 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno17 = getelementptr inbounds %struct._expr, %struct._expr* %17, i32 0, i32 2
  store i32 %16, i32* %lineno17, align 4
  %18 = load i32, i32* %col_offset.addr, align 4
  %19 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset18 = getelementptr inbounds %struct._expr, %struct._expr* %19, i32 0, i32 3
  store i32 %18, i32* %col_offset18, align 4
  %20 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %20, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.9, %if.then.8, %if.then.5, %if.then.2, %if.then
  %21 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %21
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_UnaryOp(i32 %op, %struct._expr* %operand, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %op.addr = alloca i32, align 4
  %operand.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store i32 %op, i32* %op.addr, align 4
  store %struct._expr* %operand, %struct._expr** %operand.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load i32, i32* %op.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._expr*, %struct._expr** %operand.addr, align 8
  %tobool1 = icmp ne %struct._expr* %2, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %4, i64 56)
  %5 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %5, %struct._expr** %p, align 8
  %6 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool4 = icmp ne %struct._expr* %6, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 0
  store i32 3, i32* %kind, align 4
  %8 = load i32, i32* %op.addr, align 4
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %UnaryOp = bitcast %union.anon.2* %v to %struct.anon.5*
  %op7 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %UnaryOp, i32 0, i32 0
  store i32 %8, i32* %op7, align 4
  %10 = load %struct._expr*, %struct._expr** %operand.addr, align 8
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %v8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 1
  %UnaryOp9 = bitcast %union.anon.2* %v8 to %struct.anon.5*
  %operand10 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %UnaryOp9, i32 0, i32 1
  store %struct._expr* %10, %struct._expr** %operand10, align 8
  %12 = load i32, i32* %lineno.addr, align 4
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno11 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 2
  store i32 %12, i32* %lineno11, align 4
  %14 = load i32, i32* %col_offset.addr, align 4
  %15 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset12 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 3
  store i32 %14, i32* %col_offset12, align 4
  %16 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %16, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then.2, %if.then
  %17 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %17
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Lambda(%struct._arguments* %args, %struct._expr* %body, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %args.addr = alloca %struct._arguments*, align 8
  %body.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._arguments* %args, %struct._arguments** %args.addr, align 8
  store %struct._expr* %body, %struct._expr** %body.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arguments*, %struct._arguments** %args.addr, align 8
  %tobool = icmp ne %struct._arguments* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._expr*, %struct._expr** %body.addr, align 8
  %tobool1 = icmp ne %struct._expr* %2, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.21, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %4, i64 56)
  %5 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %5, %struct._expr** %p, align 8
  %6 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool4 = icmp ne %struct._expr* %6, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 0
  store i32 4, i32* %kind, align 4
  %8 = load %struct._arguments*, %struct._arguments** %args.addr, align 8
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %Lambda = bitcast %union.anon.2* %v to %struct.anon.6*
  %args7 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %Lambda, i32 0, i32 0
  store %struct._arguments* %8, %struct._arguments** %args7, align 8
  %10 = load %struct._expr*, %struct._expr** %body.addr, align 8
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %v8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 1
  %Lambda9 = bitcast %union.anon.2* %v8 to %struct.anon.6*
  %body10 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %Lambda9, i32 0, i32 1
  store %struct._expr* %10, %struct._expr** %body10, align 8
  %12 = load i32, i32* %lineno.addr, align 4
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno11 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 2
  store i32 %12, i32* %lineno11, align 4
  %14 = load i32, i32* %col_offset.addr, align 4
  %15 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset12 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 3
  store i32 %14, i32* %col_offset12, align 4
  %16 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %16, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then.2, %if.then
  %17 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %17
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_IfExp(%struct._expr* %test, %struct._expr* %body, %struct._expr* %orelse, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %test.addr = alloca %struct._expr*, align 8
  %body.addr = alloca %struct._expr*, align 8
  %orelse.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %test, %struct._expr** %test.addr, align 8
  store %struct._expr* %body, %struct._expr** %body.addr, align 8
  store %struct._expr* %orelse, %struct._expr** %orelse.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %test.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._expr*, %struct._expr** %body.addr, align 8
  %tobool1 = icmp ne %struct._expr* %2, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %struct._expr*, %struct._expr** %orelse.addr, align 8
  %tobool4 = icmp ne %struct._expr* %4, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %6 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %6, i64 56)
  %7 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %7, %struct._expr** %p, align 8
  %8 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool7 = icmp ne %struct._expr* %8, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.6
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 0
  store i32 5, i32* %kind, align 4
  %10 = load %struct._expr*, %struct._expr** %test.addr, align 8
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 1
  %IfExp = bitcast %union.anon.2* %v to %struct.anon.7*
  %test10 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %IfExp, i32 0, i32 0
  store %struct._expr* %10, %struct._expr** %test10, align 8
  %12 = load %struct._expr*, %struct._expr** %body.addr, align 8
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %v11 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 1
  %IfExp12 = bitcast %union.anon.2* %v11 to %struct.anon.7*
  %body13 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %IfExp12, i32 0, i32 1
  store %struct._expr* %12, %struct._expr** %body13, align 8
  %14 = load %struct._expr*, %struct._expr** %orelse.addr, align 8
  %15 = load %struct._expr*, %struct._expr** %p, align 8
  %v14 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 1
  %IfExp15 = bitcast %union.anon.2* %v14 to %struct.anon.7*
  %orelse16 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %IfExp15, i32 0, i32 2
  store %struct._expr* %14, %struct._expr** %orelse16, align 8
  %16 = load i32, i32* %lineno.addr, align 4
  %17 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno17 = getelementptr inbounds %struct._expr, %struct._expr* %17, i32 0, i32 2
  store i32 %16, i32* %lineno17, align 4
  %18 = load i32, i32* %col_offset.addr, align 4
  %19 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset18 = getelementptr inbounds %struct._expr, %struct._expr* %19, i32 0, i32 3
  store i32 %18, i32* %col_offset18, align 4
  %20 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %20, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.9, %if.then.8, %if.then.5, %if.then.2, %if.then
  %21 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %21
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Dict(%struct.asdl_seq* %keys, %struct.asdl_seq* %values, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %keys.addr = alloca %struct.asdl_seq*, align 8
  %values.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct.asdl_seq* %keys, %struct.asdl_seq** %keys.addr, align 8
  store %struct.asdl_seq* %values, %struct.asdl_seq** %values.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 56)
  %1 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %1, %struct._expr** %p, align 8
  %2 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool = icmp ne %struct._expr* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %3, i32 0, i32 0
  store i32 6, i32* %kind, align 4
  %4 = load %struct.asdl_seq*, %struct.asdl_seq** %keys.addr, align 8
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 1
  %Dict = bitcast %union.anon.2* %v to %struct.anon.8*
  %keys1 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %Dict, i32 0, i32 0
  store %struct.asdl_seq* %4, %struct.asdl_seq** %keys1, align 8
  %6 = load %struct.asdl_seq*, %struct.asdl_seq** %values.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v2 = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %Dict3 = bitcast %union.anon.2* %v2 to %struct.anon.8*
  %values4 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %Dict3, i32 0, i32 1
  store %struct.asdl_seq* %6, %struct.asdl_seq** %values4, align 8
  %8 = load i32, i32* %lineno.addr, align 4
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 2
  store i32 %8, i32* %lineno5, align 4
  %10 = load i32, i32* %col_offset.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset6 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 3
  store i32 %10, i32* %col_offset6, align 4
  %12 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %12, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %13 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %13
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Set(%struct.asdl_seq* %elts, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %elts.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct.asdl_seq* %elts, %struct.asdl_seq** %elts.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 56)
  %1 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %1, %struct._expr** %p, align 8
  %2 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool = icmp ne %struct._expr* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %3, i32 0, i32 0
  store i32 7, i32* %kind, align 4
  %4 = load %struct.asdl_seq*, %struct.asdl_seq** %elts.addr, align 8
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 1
  %Set = bitcast %union.anon.2* %v to %struct.anon.9*
  %elts1 = getelementptr inbounds %struct.anon.9, %struct.anon.9* %Set, i32 0, i32 0
  store %struct.asdl_seq* %4, %struct.asdl_seq** %elts1, align 8
  %6 = load i32, i32* %lineno.addr, align 4
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno2 = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 2
  store i32 %6, i32* %lineno2, align 4
  %8 = load i32, i32* %col_offset.addr, align 4
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset3 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 3
  store i32 %8, i32* %col_offset3, align 4
  %10 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %10, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %11
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_ListComp(%struct._expr* %elt, %struct.asdl_seq* %generators, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %elt.addr = alloca %struct._expr*, align 8
  %generators.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %elt, %struct._expr** %elt.addr, align 8
  store %struct.asdl_seq* %generators, %struct.asdl_seq** %generators.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %elt.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.25, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 8, i32* %kind, align 4
  %6 = load %struct._expr*, %struct._expr** %elt.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %ListComp = bitcast %union.anon.2* %v to %struct.anon.10*
  %elt4 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %ListComp, i32 0, i32 0
  store %struct._expr* %6, %struct._expr** %elt4, align 8
  %8 = load %struct.asdl_seq*, %struct.asdl_seq** %generators.addr, align 8
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %ListComp6 = bitcast %union.anon.2* %v5 to %struct.anon.10*
  %generators7 = getelementptr inbounds %struct.anon.10, %struct.anon.10* %ListComp6, i32 0, i32 1
  store %struct.asdl_seq* %8, %struct.asdl_seq** %generators7, align 8
  %10 = load i32, i32* %lineno.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 2
  store i32 %10, i32* %lineno8, align 4
  %12 = load i32, i32* %col_offset.addr, align 4
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset9 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 3
  store i32 %12, i32* %col_offset9, align 4
  %14 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %14, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %15 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %15
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_SetComp(%struct._expr* %elt, %struct.asdl_seq* %generators, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %elt.addr = alloca %struct._expr*, align 8
  %generators.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %elt, %struct._expr** %elt.addr, align 8
  store %struct.asdl_seq* %generators, %struct.asdl_seq** %generators.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %elt.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 9, i32* %kind, align 4
  %6 = load %struct._expr*, %struct._expr** %elt.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %SetComp = bitcast %union.anon.2* %v to %struct.anon.11*
  %elt4 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %SetComp, i32 0, i32 0
  store %struct._expr* %6, %struct._expr** %elt4, align 8
  %8 = load %struct.asdl_seq*, %struct.asdl_seq** %generators.addr, align 8
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %SetComp6 = bitcast %union.anon.2* %v5 to %struct.anon.11*
  %generators7 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %SetComp6, i32 0, i32 1
  store %struct.asdl_seq* %8, %struct.asdl_seq** %generators7, align 8
  %10 = load i32, i32* %lineno.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 2
  store i32 %10, i32* %lineno8, align 4
  %12 = load i32, i32* %col_offset.addr, align 4
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset9 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 3
  store i32 %12, i32* %col_offset9, align 4
  %14 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %14, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %15 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %15
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_DictComp(%struct._expr* %key, %struct._expr* %value, %struct.asdl_seq* %generators, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %key.addr = alloca %struct._expr*, align 8
  %value.addr = alloca %struct._expr*, align 8
  %generators.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %key, %struct._expr** %key.addr, align 8
  store %struct._expr* %value, %struct._expr** %value.addr, align 8
  store %struct.asdl_seq* %generators, %struct.asdl_seq** %generators.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %key.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %tobool1 = icmp ne %struct._expr* %2, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.28, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %4, i64 56)
  %5 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %5, %struct._expr** %p, align 8
  %6 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool4 = icmp ne %struct._expr* %6, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 0
  store i32 10, i32* %kind, align 4
  %8 = load %struct._expr*, %struct._expr** %key.addr, align 8
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %DictComp = bitcast %union.anon.2* %v to %struct.anon.12*
  %key7 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %DictComp, i32 0, i32 0
  store %struct._expr* %8, %struct._expr** %key7, align 8
  %10 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %v8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 1
  %DictComp9 = bitcast %union.anon.2* %v8 to %struct.anon.12*
  %value10 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %DictComp9, i32 0, i32 1
  store %struct._expr* %10, %struct._expr** %value10, align 8
  %12 = load %struct.asdl_seq*, %struct.asdl_seq** %generators.addr, align 8
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %v11 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 1
  %DictComp12 = bitcast %union.anon.2* %v11 to %struct.anon.12*
  %generators13 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %DictComp12, i32 0, i32 2
  store %struct.asdl_seq* %12, %struct.asdl_seq** %generators13, align 8
  %14 = load i32, i32* %lineno.addr, align 4
  %15 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno14 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 2
  store i32 %14, i32* %lineno14, align 4
  %16 = load i32, i32* %col_offset.addr, align 4
  %17 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset15 = getelementptr inbounds %struct._expr, %struct._expr* %17, i32 0, i32 3
  store i32 %16, i32* %col_offset15, align 4
  %18 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %18, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then.2, %if.then
  %19 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %19
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_GeneratorExp(%struct._expr* %elt, %struct.asdl_seq* %generators, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %elt.addr = alloca %struct._expr*, align 8
  %generators.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %elt, %struct._expr** %elt.addr, align 8
  store %struct.asdl_seq* %generators, %struct.asdl_seq** %generators.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %elt.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.29, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 11, i32* %kind, align 4
  %6 = load %struct._expr*, %struct._expr** %elt.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %GeneratorExp = bitcast %union.anon.2* %v to %struct.anon.13*
  %elt4 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %GeneratorExp, i32 0, i32 0
  store %struct._expr* %6, %struct._expr** %elt4, align 8
  %8 = load %struct.asdl_seq*, %struct.asdl_seq** %generators.addr, align 8
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %GeneratorExp6 = bitcast %union.anon.2* %v5 to %struct.anon.13*
  %generators7 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %GeneratorExp6, i32 0, i32 1
  store %struct.asdl_seq* %8, %struct.asdl_seq** %generators7, align 8
  %10 = load i32, i32* %lineno.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 2
  store i32 %10, i32* %lineno8, align 4
  %12 = load i32, i32* %col_offset.addr, align 4
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset9 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 3
  store i32 %12, i32* %col_offset9, align 4
  %14 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %14, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %15 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %15
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Yield(%struct._expr* %value, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %value.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %value, %struct._expr** %value.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 56)
  %1 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %1, %struct._expr** %p, align 8
  %2 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool = icmp ne %struct._expr* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %3, i32 0, i32 0
  store i32 12, i32* %kind, align 4
  %4 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 1
  %Yield = bitcast %union.anon.2* %v to %struct.anon.14*
  %value1 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %Yield, i32 0, i32 0
  store %struct._expr* %4, %struct._expr** %value1, align 8
  %6 = load i32, i32* %lineno.addr, align 4
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno2 = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 2
  store i32 %6, i32* %lineno2, align 4
  %8 = load i32, i32* %col_offset.addr, align 4
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset3 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 3
  store i32 %8, i32* %col_offset3, align 4
  %10 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %10, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %11
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_YieldFrom(%struct._expr* %value, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %value.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %value, %struct._expr** %value.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.30, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 13, i32* %kind, align 4
  %6 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %YieldFrom = bitcast %union.anon.2* %v to %struct.anon.15*
  %value4 = getelementptr inbounds %struct.anon.15, %struct.anon.15* %YieldFrom, i32 0, i32 0
  store %struct._expr* %6, %struct._expr** %value4, align 8
  %8 = load i32, i32* %lineno.addr, align 4
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 2
  store i32 %8, i32* %lineno5, align 4
  %10 = load i32, i32* %col_offset.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset6 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 3
  store i32 %10, i32* %col_offset6, align 4
  %12 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %12, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %13 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %13
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Compare(%struct._expr* %left, %struct.asdl_int_seq* %ops, %struct.asdl_seq* %comparators, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %left.addr = alloca %struct._expr*, align 8
  %ops.addr = alloca %struct.asdl_int_seq*, align 8
  %comparators.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %left, %struct._expr** %left.addr, align 8
  store %struct.asdl_int_seq* %ops, %struct.asdl_int_seq** %ops.addr, align 8
  store %struct.asdl_seq* %comparators, %struct.asdl_seq** %comparators.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %left.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 14, i32* %kind, align 4
  %6 = load %struct._expr*, %struct._expr** %left.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %Compare = bitcast %union.anon.2* %v to %struct.anon.16*
  %left4 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %Compare, i32 0, i32 0
  store %struct._expr* %6, %struct._expr** %left4, align 8
  %8 = load %struct.asdl_int_seq*, %struct.asdl_int_seq** %ops.addr, align 8
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %Compare6 = bitcast %union.anon.2* %v5 to %struct.anon.16*
  %ops7 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %Compare6, i32 0, i32 1
  store %struct.asdl_int_seq* %8, %struct.asdl_int_seq** %ops7, align 8
  %10 = load %struct.asdl_seq*, %struct.asdl_seq** %comparators.addr, align 8
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %v8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 1
  %Compare9 = bitcast %union.anon.2* %v8 to %struct.anon.16*
  %comparators10 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %Compare9, i32 0, i32 2
  store %struct.asdl_seq* %10, %struct.asdl_seq** %comparators10, align 8
  %12 = load i32, i32* %lineno.addr, align 4
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno11 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 2
  store i32 %12, i32* %lineno11, align 4
  %14 = load i32, i32* %col_offset.addr, align 4
  %15 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset12 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 3
  store i32 %14, i32* %col_offset12, align 4
  %16 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %16, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %17 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %17
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Call(%struct._expr* %func, %struct.asdl_seq* %args, %struct.asdl_seq* %keywords, %struct._expr* %starargs, %struct._expr* %kwargs, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %func.addr = alloca %struct._expr*, align 8
  %args.addr = alloca %struct.asdl_seq*, align 8
  %keywords.addr = alloca %struct.asdl_seq*, align 8
  %starargs.addr = alloca %struct._expr*, align 8
  %kwargs.addr = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %func, %struct._expr** %func.addr, align 8
  store %struct.asdl_seq* %args, %struct.asdl_seq** %args.addr, align 8
  store %struct.asdl_seq* %keywords, %struct.asdl_seq** %keywords.addr, align 8
  store %struct._expr* %starargs, %struct._expr** %starargs.addr, align 8
  store %struct._expr* %kwargs, %struct._expr** %kwargs.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %func.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.32, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 15, i32* %kind, align 4
  %6 = load %struct._expr*, %struct._expr** %func.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %Call = bitcast %union.anon.2* %v to %struct.anon.17*
  %func4 = getelementptr inbounds %struct.anon.17, %struct.anon.17* %Call, i32 0, i32 0
  store %struct._expr* %6, %struct._expr** %func4, align 8
  %8 = load %struct.asdl_seq*, %struct.asdl_seq** %args.addr, align 8
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %Call6 = bitcast %union.anon.2* %v5 to %struct.anon.17*
  %args7 = getelementptr inbounds %struct.anon.17, %struct.anon.17* %Call6, i32 0, i32 1
  store %struct.asdl_seq* %8, %struct.asdl_seq** %args7, align 8
  %10 = load %struct.asdl_seq*, %struct.asdl_seq** %keywords.addr, align 8
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %v8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 1
  %Call9 = bitcast %union.anon.2* %v8 to %struct.anon.17*
  %keywords10 = getelementptr inbounds %struct.anon.17, %struct.anon.17* %Call9, i32 0, i32 2
  store %struct.asdl_seq* %10, %struct.asdl_seq** %keywords10, align 8
  %12 = load %struct._expr*, %struct._expr** %starargs.addr, align 8
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %v11 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 1
  %Call12 = bitcast %union.anon.2* %v11 to %struct.anon.17*
  %starargs13 = getelementptr inbounds %struct.anon.17, %struct.anon.17* %Call12, i32 0, i32 3
  store %struct._expr* %12, %struct._expr** %starargs13, align 8
  %14 = load %struct._expr*, %struct._expr** %kwargs.addr, align 8
  %15 = load %struct._expr*, %struct._expr** %p, align 8
  %v14 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 1
  %Call15 = bitcast %union.anon.2* %v14 to %struct.anon.17*
  %kwargs16 = getelementptr inbounds %struct.anon.17, %struct.anon.17* %Call15, i32 0, i32 4
  store %struct._expr* %14, %struct._expr** %kwargs16, align 8
  %16 = load i32, i32* %lineno.addr, align 4
  %17 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno17 = getelementptr inbounds %struct._expr, %struct._expr* %17, i32 0, i32 2
  store i32 %16, i32* %lineno17, align 4
  %18 = load i32, i32* %col_offset.addr, align 4
  %19 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset18 = getelementptr inbounds %struct._expr, %struct._expr* %19, i32 0, i32 3
  store i32 %18, i32* %col_offset18, align 4
  %20 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %20, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %21 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %21
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Num(%struct._object* %n, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %n.addr = alloca %struct._object*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._object* %n, %struct._object** %n.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %n.addr, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 16, i32* %kind, align 4
  %6 = load %struct._object*, %struct._object** %n.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %Num = bitcast %union.anon.2* %v to %struct.anon.18*
  %n4 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %Num, i32 0, i32 0
  store %struct._object* %6, %struct._object** %n4, align 8
  %8 = load i32, i32* %lineno.addr, align 4
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 2
  store i32 %8, i32* %lineno5, align 4
  %10 = load i32, i32* %col_offset.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset6 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 3
  store i32 %10, i32* %col_offset6, align 4
  %12 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %12, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %13 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %13
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Str(%struct._object* %s, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %s.addr = alloca %struct._object*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._object* %s, %struct._object** %s.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %s.addr, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.34, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 17, i32* %kind, align 4
  %6 = load %struct._object*, %struct._object** %s.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %Str = bitcast %union.anon.2* %v to %struct.anon.19*
  %s4 = getelementptr inbounds %struct.anon.19, %struct.anon.19* %Str, i32 0, i32 0
  store %struct._object* %6, %struct._object** %s4, align 8
  %8 = load i32, i32* %lineno.addr, align 4
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 2
  store i32 %8, i32* %lineno5, align 4
  %10 = load i32, i32* %col_offset.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset6 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 3
  store i32 %10, i32* %col_offset6, align 4
  %12 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %12, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %13 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %13
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Bytes(%struct._object* %s, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %s.addr = alloca %struct._object*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._object* %s, %struct._object** %s.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %s.addr, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 18, i32* %kind, align 4
  %6 = load %struct._object*, %struct._object** %s.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %Bytes = bitcast %union.anon.2* %v to %struct.anon.20*
  %s4 = getelementptr inbounds %struct.anon.20, %struct.anon.20* %Bytes, i32 0, i32 0
  store %struct._object* %6, %struct._object** %s4, align 8
  %8 = load i32, i32* %lineno.addr, align 4
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 2
  store i32 %8, i32* %lineno5, align 4
  %10 = load i32, i32* %col_offset.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset6 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 3
  store i32 %10, i32* %col_offset6, align 4
  %12 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %12, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %13 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %13
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_NameConstant(%struct._object* %value, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %value.addr = alloca %struct._object*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._object* %value, %struct._object** %value.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %value.addr, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.36, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 19, i32* %kind, align 4
  %6 = load %struct._object*, %struct._object** %value.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %NameConstant = bitcast %union.anon.2* %v to %struct.anon.21*
  %value4 = getelementptr inbounds %struct.anon.21, %struct.anon.21* %NameConstant, i32 0, i32 0
  store %struct._object* %6, %struct._object** %value4, align 8
  %8 = load i32, i32* %lineno.addr, align 4
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 2
  store i32 %8, i32* %lineno5, align 4
  %10 = load i32, i32* %col_offset.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset6 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 3
  store i32 %10, i32* %col_offset6, align 4
  %12 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %12, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %13 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %13
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Ellipsis(i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 56)
  %1 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %1, %struct._expr** %p, align 8
  %2 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool = icmp ne %struct._expr* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %3, i32 0, i32 0
  store i32 20, i32* %kind, align 4
  %4 = load i32, i32* %lineno.addr, align 4
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno1 = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 2
  store i32 %4, i32* %lineno1, align 4
  %6 = load i32, i32* %col_offset.addr, align 4
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset2 = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 3
  store i32 %6, i32* %col_offset2, align 4
  %8 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %8, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %9
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Attribute(%struct._expr* %value, %struct._object* %attr, i32 %ctx, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %value.addr = alloca %struct._expr*, align 8
  %attr.addr = alloca %struct._object*, align 8
  %ctx.addr = alloca i32, align 4
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %value, %struct._expr** %value.addr, align 8
  store %struct._object* %attr, %struct._object** %attr.addr, align 8
  store i32 %ctx, i32* %ctx.addr, align 4
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %attr.addr, align 8
  %tobool1 = icmp ne %struct._object* %2, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.38, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load i32, i32* %ctx.addr, align 4
  %tobool4 = icmp ne i32 %4, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.39, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %6 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %6, i64 56)
  %7 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %7, %struct._expr** %p, align 8
  %8 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool7 = icmp ne %struct._expr* %8, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.6
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 0
  store i32 21, i32* %kind, align 4
  %10 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 1
  %Attribute = bitcast %union.anon.2* %v to %struct.anon.22*
  %value10 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %Attribute, i32 0, i32 0
  store %struct._expr* %10, %struct._expr** %value10, align 8
  %12 = load %struct._object*, %struct._object** %attr.addr, align 8
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %v11 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 1
  %Attribute12 = bitcast %union.anon.2* %v11 to %struct.anon.22*
  %attr13 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %Attribute12, i32 0, i32 1
  store %struct._object* %12, %struct._object** %attr13, align 8
  %14 = load i32, i32* %ctx.addr, align 4
  %15 = load %struct._expr*, %struct._expr** %p, align 8
  %v14 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 1
  %Attribute15 = bitcast %union.anon.2* %v14 to %struct.anon.22*
  %ctx16 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %Attribute15, i32 0, i32 2
  store i32 %14, i32* %ctx16, align 4
  %16 = load i32, i32* %lineno.addr, align 4
  %17 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno17 = getelementptr inbounds %struct._expr, %struct._expr* %17, i32 0, i32 2
  store i32 %16, i32* %lineno17, align 4
  %18 = load i32, i32* %col_offset.addr, align 4
  %19 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset18 = getelementptr inbounds %struct._expr, %struct._expr* %19, i32 0, i32 3
  store i32 %18, i32* %col_offset18, align 4
  %20 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %20, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.9, %if.then.8, %if.then.5, %if.then.2, %if.then
  %21 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %21
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Subscript(%struct._expr* %value, %struct._slice* %slice, i32 %ctx, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %value.addr = alloca %struct._expr*, align 8
  %slice.addr = alloca %struct._slice*, align 8
  %ctx.addr = alloca i32, align 4
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %value, %struct._expr** %value.addr, align 8
  store %struct._slice* %slice, %struct._slice** %slice.addr, align 8
  store i32 %ctx, i32* %ctx.addr, align 4
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.40, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._slice*, %struct._slice** %slice.addr, align 8
  %tobool1 = icmp ne %struct._slice* %2, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load i32, i32* %ctx.addr, align 4
  %tobool4 = icmp ne i32 %4, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.42, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %6 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %6, i64 56)
  %7 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %7, %struct._expr** %p, align 8
  %8 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool7 = icmp ne %struct._expr* %8, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.6
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 0
  store i32 22, i32* %kind, align 4
  %10 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 1
  %Subscript = bitcast %union.anon.2* %v to %struct.anon.23*
  %value10 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %Subscript, i32 0, i32 0
  store %struct._expr* %10, %struct._expr** %value10, align 8
  %12 = load %struct._slice*, %struct._slice** %slice.addr, align 8
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %v11 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 1
  %Subscript12 = bitcast %union.anon.2* %v11 to %struct.anon.23*
  %slice13 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %Subscript12, i32 0, i32 1
  store %struct._slice* %12, %struct._slice** %slice13, align 8
  %14 = load i32, i32* %ctx.addr, align 4
  %15 = load %struct._expr*, %struct._expr** %p, align 8
  %v14 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 1
  %Subscript15 = bitcast %union.anon.2* %v14 to %struct.anon.23*
  %ctx16 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %Subscript15, i32 0, i32 2
  store i32 %14, i32* %ctx16, align 4
  %16 = load i32, i32* %lineno.addr, align 4
  %17 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno17 = getelementptr inbounds %struct._expr, %struct._expr* %17, i32 0, i32 2
  store i32 %16, i32* %lineno17, align 4
  %18 = load i32, i32* %col_offset.addr, align 4
  %19 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset18 = getelementptr inbounds %struct._expr, %struct._expr* %19, i32 0, i32 3
  store i32 %18, i32* %col_offset18, align 4
  %20 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %20, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.9, %if.then.8, %if.then.5, %if.then.2, %if.then
  %21 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %21
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Starred(%struct._expr* %value, i32 %ctx, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %value.addr = alloca %struct._expr*, align 8
  %ctx.addr = alloca i32, align 4
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._expr* %value, %struct._expr** %value.addr, align 8
  store i32 %ctx, i32* %ctx.addr, align 4
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.43, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %ctx.addr, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.44, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %4, i64 56)
  %5 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %5, %struct._expr** %p, align 8
  %6 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool4 = icmp ne %struct._expr* %6, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 0
  store i32 23, i32* %kind, align 4
  %8 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %Starred = bitcast %union.anon.2* %v to %struct.anon.28*
  %value7 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %Starred, i32 0, i32 0
  store %struct._expr* %8, %struct._expr** %value7, align 8
  %10 = load i32, i32* %ctx.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %v8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 1
  %Starred9 = bitcast %union.anon.2* %v8 to %struct.anon.28*
  %ctx10 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %Starred9, i32 0, i32 1
  store i32 %10, i32* %ctx10, align 4
  %12 = load i32, i32* %lineno.addr, align 4
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno11 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 2
  store i32 %12, i32* %lineno11, align 4
  %14 = load i32, i32* %col_offset.addr, align 4
  %15 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset12 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 3
  store i32 %14, i32* %col_offset12, align 4
  %16 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %16, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then.2, %if.then
  %17 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %17
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Name(%struct._object* %id, i32 %ctx, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %id.addr = alloca %struct._object*, align 8
  %ctx.addr = alloca i32, align 4
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct._object* %id, %struct._object** %id.addr, align 8
  store i32 %ctx, i32* %ctx.addr, align 4
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %id.addr, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.45, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %ctx.addr, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.46, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %4, i64 56)
  %5 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %5, %struct._expr** %p, align 8
  %6 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool4 = icmp ne %struct._expr* %6, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 0
  store i32 24, i32* %kind, align 4
  %8 = load %struct._object*, %struct._object** %id.addr, align 8
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %Name = bitcast %union.anon.2* %v to %struct.anon.29*
  %id7 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %Name, i32 0, i32 0
  store %struct._object* %8, %struct._object** %id7, align 8
  %10 = load i32, i32* %ctx.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %v8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 1
  %Name9 = bitcast %union.anon.2* %v8 to %struct.anon.29*
  %ctx10 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %Name9, i32 0, i32 1
  store i32 %10, i32* %ctx10, align 4
  %12 = load i32, i32* %lineno.addr, align 4
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno11 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 2
  store i32 %12, i32* %lineno11, align 4
  %14 = load i32, i32* %col_offset.addr, align 4
  %15 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset12 = getelementptr inbounds %struct._expr, %struct._expr* %15, i32 0, i32 3
  store i32 %14, i32* %col_offset12, align 4
  %16 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %16, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then.2, %if.then
  %17 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %17
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_List(%struct.asdl_seq* %elts, i32 %ctx, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %elts.addr = alloca %struct.asdl_seq*, align 8
  %ctx.addr = alloca i32, align 4
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct.asdl_seq* %elts, %struct.asdl_seq** %elts.addr, align 8
  store i32 %ctx, i32* %ctx.addr, align 4
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load i32, i32* %ctx.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.47, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 25, i32* %kind, align 4
  %6 = load %struct.asdl_seq*, %struct.asdl_seq** %elts.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %List = bitcast %union.anon.2* %v to %struct.anon.30*
  %elts4 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %List, i32 0, i32 0
  store %struct.asdl_seq* %6, %struct.asdl_seq** %elts4, align 8
  %8 = load i32, i32* %ctx.addr, align 4
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %List6 = bitcast %union.anon.2* %v5 to %struct.anon.30*
  %ctx7 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %List6, i32 0, i32 1
  store i32 %8, i32* %ctx7, align 4
  %10 = load i32, i32* %lineno.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 2
  store i32 %10, i32* %lineno8, align 4
  %12 = load i32, i32* %col_offset.addr, align 4
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset9 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 3
  store i32 %12, i32* %col_offset9, align 4
  %14 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %14, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %15 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %15
}

; Function Attrs: nounwind uwtable
define %struct._expr* @_Py_Tuple(%struct.asdl_seq* %elts, i32 %ctx, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._expr*, align 8
  %elts.addr = alloca %struct.asdl_seq*, align 8
  %ctx.addr = alloca i32, align 4
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._expr*, align 8
  store %struct.asdl_seq* %elts, %struct.asdl_seq** %elts.addr, align 8
  store i32 %ctx, i32* %ctx.addr, align 4
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load i32, i32* %ctx.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48, i32 0, i32 0))
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 56)
  %3 = bitcast i8* %call to %struct._expr*
  store %struct._expr* %3, %struct._expr** %p, align 8
  %4 = load %struct._expr*, %struct._expr** %p, align 8
  %tobool1 = icmp ne %struct._expr* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._expr* null, %struct._expr** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %p, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %5, i32 0, i32 0
  store i32 26, i32* %kind, align 4
  %6 = load %struct.asdl_seq*, %struct.asdl_seq** %elts.addr, align 8
  %7 = load %struct._expr*, %struct._expr** %p, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %7, i32 0, i32 1
  %Tuple = bitcast %union.anon.2* %v to %struct.anon.31*
  %elts4 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %Tuple, i32 0, i32 0
  store %struct.asdl_seq* %6, %struct.asdl_seq** %elts4, align 8
  %8 = load i32, i32* %ctx.addr, align 4
  %9 = load %struct._expr*, %struct._expr** %p, align 8
  %v5 = getelementptr inbounds %struct._expr, %struct._expr* %9, i32 0, i32 1
  %Tuple6 = bitcast %union.anon.2* %v5 to %struct.anon.31*
  %ctx7 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %Tuple6, i32 0, i32 1
  store i32 %8, i32* %ctx7, align 4
  %10 = load i32, i32* %lineno.addr, align 4
  %11 = load %struct._expr*, %struct._expr** %p, align 8
  %lineno8 = getelementptr inbounds %struct._expr, %struct._expr* %11, i32 0, i32 2
  store i32 %10, i32* %lineno8, align 4
  %12 = load i32, i32* %col_offset.addr, align 4
  %13 = load %struct._expr*, %struct._expr** %p, align 8
  %col_offset9 = getelementptr inbounds %struct._expr, %struct._expr* %13, i32 0, i32 3
  store i32 %12, i32* %col_offset9, align 4
  %14 = load %struct._expr*, %struct._expr** %p, align 8
  store %struct._expr* %14, %struct._expr** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %15 = load %struct._expr*, %struct._expr** %retval
  ret %struct._expr* %15
}

; Function Attrs: nounwind uwtable
define %struct._slice* @_Py_Slice(%struct._expr* %lower, %struct._expr* %upper, %struct._expr* %step, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._slice*, align 8
  %lower.addr = alloca %struct._expr*, align 8
  %upper.addr = alloca %struct._expr*, align 8
  %step.addr = alloca %struct._expr*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._slice*, align 8
  store %struct._expr* %lower, %struct._expr** %lower.addr, align 8
  store %struct._expr* %upper, %struct._expr** %upper.addr, align 8
  store %struct._expr* %step, %struct._expr** %step.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 32)
  %1 = bitcast i8* %call to %struct._slice*
  store %struct._slice* %1, %struct._slice** %p, align 8
  %2 = load %struct._slice*, %struct._slice** %p, align 8
  %tobool = icmp ne %struct._slice* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._slice* null, %struct._slice** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._slice*, %struct._slice** %p, align 8
  %kind = getelementptr inbounds %struct._slice, %struct._slice* %3, i32 0, i32 0
  store i32 1, i32* %kind, align 4
  %4 = load %struct._expr*, %struct._expr** %lower.addr, align 8
  %5 = load %struct._slice*, %struct._slice** %p, align 8
  %v = getelementptr inbounds %struct._slice, %struct._slice* %5, i32 0, i32 1
  %Slice = bitcast %union.anon.24* %v to %struct.anon.25*
  %lower1 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %Slice, i32 0, i32 0
  store %struct._expr* %4, %struct._expr** %lower1, align 8
  %6 = load %struct._expr*, %struct._expr** %upper.addr, align 8
  %7 = load %struct._slice*, %struct._slice** %p, align 8
  %v2 = getelementptr inbounds %struct._slice, %struct._slice* %7, i32 0, i32 1
  %Slice3 = bitcast %union.anon.24* %v2 to %struct.anon.25*
  %upper4 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %Slice3, i32 0, i32 1
  store %struct._expr* %6, %struct._expr** %upper4, align 8
  %8 = load %struct._expr*, %struct._expr** %step.addr, align 8
  %9 = load %struct._slice*, %struct._slice** %p, align 8
  %v5 = getelementptr inbounds %struct._slice, %struct._slice* %9, i32 0, i32 1
  %Slice6 = bitcast %union.anon.24* %v5 to %struct.anon.25*
  %step7 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %Slice6, i32 0, i32 2
  store %struct._expr* %8, %struct._expr** %step7, align 8
  %10 = load %struct._slice*, %struct._slice** %p, align 8
  store %struct._slice* %10, %struct._slice** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct._slice*, %struct._slice** %retval
  ret %struct._slice* %11
}

; Function Attrs: nounwind uwtable
define %struct._slice* @_Py_ExtSlice(%struct.asdl_seq* %dims, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._slice*, align 8
  %dims.addr = alloca %struct.asdl_seq*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._slice*, align 8
  store %struct.asdl_seq* %dims, %struct.asdl_seq** %dims.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 32)
  %1 = bitcast i8* %call to %struct._slice*
  store %struct._slice* %1, %struct._slice** %p, align 8
  %2 = load %struct._slice*, %struct._slice** %p, align 8
  %tobool = icmp ne %struct._slice* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._slice* null, %struct._slice** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._slice*, %struct._slice** %p, align 8
  %kind = getelementptr inbounds %struct._slice, %struct._slice* %3, i32 0, i32 0
  store i32 2, i32* %kind, align 4
  %4 = load %struct.asdl_seq*, %struct.asdl_seq** %dims.addr, align 8
  %5 = load %struct._slice*, %struct._slice** %p, align 8
  %v = getelementptr inbounds %struct._slice, %struct._slice* %5, i32 0, i32 1
  %ExtSlice = bitcast %union.anon.24* %v to %struct.anon.26*
  %dims1 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %ExtSlice, i32 0, i32 0
  store %struct.asdl_seq* %4, %struct.asdl_seq** %dims1, align 8
  %6 = load %struct._slice*, %struct._slice** %p, align 8
  store %struct._slice* %6, %struct._slice** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct._slice*, %struct._slice** %retval
  ret %struct._slice* %7
}

; Function Attrs: nounwind uwtable
define %struct._slice* @_Py_Index(%struct._expr* %value, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._slice*, align 8
  %value.addr = alloca %struct._expr*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._slice*, align 8
  store %struct._expr* %value, %struct._expr** %value.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.49, i32 0, i32 0))
  store %struct._slice* null, %struct._slice** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 32)
  %3 = bitcast i8* %call to %struct._slice*
  store %struct._slice* %3, %struct._slice** %p, align 8
  %4 = load %struct._slice*, %struct._slice** %p, align 8
  %tobool1 = icmp ne %struct._slice* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._slice* null, %struct._slice** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._slice*, %struct._slice** %p, align 8
  %kind = getelementptr inbounds %struct._slice, %struct._slice* %5, i32 0, i32 0
  store i32 3, i32* %kind, align 4
  %6 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %7 = load %struct._slice*, %struct._slice** %p, align 8
  %v = getelementptr inbounds %struct._slice, %struct._slice* %7, i32 0, i32 1
  %Index = bitcast %union.anon.24* %v to %struct.anon.27*
  %value4 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %Index, i32 0, i32 0
  store %struct._expr* %6, %struct._expr** %value4, align 8
  %8 = load %struct._slice*, %struct._slice** %p, align 8
  store %struct._slice* %8, %struct._slice** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %9 = load %struct._slice*, %struct._slice** %retval
  ret %struct._slice* %9
}

; Function Attrs: nounwind uwtable
define %struct._comprehension* @_Py_comprehension(%struct._expr* %target, %struct._expr* %iter, %struct.asdl_seq* %ifs, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._comprehension*, align 8
  %target.addr = alloca %struct._expr*, align 8
  %iter.addr = alloca %struct._expr*, align 8
  %ifs.addr = alloca %struct.asdl_seq*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._comprehension*, align 8
  store %struct._expr* %target, %struct._expr** %target.addr, align 8
  store %struct._expr* %iter, %struct._expr** %iter.addr, align 8
  store %struct.asdl_seq* %ifs, %struct.asdl_seq** %ifs.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %target.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.50, i32 0, i32 0))
  store %struct._comprehension* null, %struct._comprehension** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._expr*, %struct._expr** %iter.addr, align 8
  %tobool1 = icmp ne %struct._expr* %2, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.51, i32 0, i32 0))
  store %struct._comprehension* null, %struct._comprehension** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %4, i64 24)
  %5 = bitcast i8* %call to %struct._comprehension*
  store %struct._comprehension* %5, %struct._comprehension** %p, align 8
  %6 = load %struct._comprehension*, %struct._comprehension** %p, align 8
  %tobool4 = icmp ne %struct._comprehension* %6, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  store %struct._comprehension* null, %struct._comprehension** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %7 = load %struct._expr*, %struct._expr** %target.addr, align 8
  %8 = load %struct._comprehension*, %struct._comprehension** %p, align 8
  %target7 = getelementptr inbounds %struct._comprehension, %struct._comprehension* %8, i32 0, i32 0
  store %struct._expr* %7, %struct._expr** %target7, align 8
  %9 = load %struct._expr*, %struct._expr** %iter.addr, align 8
  %10 = load %struct._comprehension*, %struct._comprehension** %p, align 8
  %iter8 = getelementptr inbounds %struct._comprehension, %struct._comprehension* %10, i32 0, i32 1
  store %struct._expr* %9, %struct._expr** %iter8, align 8
  %11 = load %struct.asdl_seq*, %struct.asdl_seq** %ifs.addr, align 8
  %12 = load %struct._comprehension*, %struct._comprehension** %p, align 8
  %ifs9 = getelementptr inbounds %struct._comprehension, %struct._comprehension* %12, i32 0, i32 2
  store %struct.asdl_seq* %11, %struct.asdl_seq** %ifs9, align 8
  %13 = load %struct._comprehension*, %struct._comprehension** %p, align 8
  store %struct._comprehension* %13, %struct._comprehension** %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then.2, %if.then
  %14 = load %struct._comprehension*, %struct._comprehension** %retval
  ret %struct._comprehension* %14
}

; Function Attrs: nounwind uwtable
define %struct._excepthandler* @_Py_ExceptHandler(%struct._expr* %type, %struct._object* %name, %struct.asdl_seq* %body, i32 %lineno, i32 %col_offset, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._excepthandler*, align 8
  %type.addr = alloca %struct._expr*, align 8
  %name.addr = alloca %struct._object*, align 8
  %body.addr = alloca %struct.asdl_seq*, align 8
  %lineno.addr = alloca i32, align 4
  %col_offset.addr = alloca i32, align 4
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._excepthandler*, align 8
  store %struct._expr* %type, %struct._expr** %type.addr, align 8
  store %struct._object* %name, %struct._object** %name.addr, align 8
  store %struct.asdl_seq* %body, %struct.asdl_seq** %body.addr, align 8
  store i32 %lineno, i32* %lineno.addr, align 4
  store i32 %col_offset, i32* %col_offset.addr, align 4
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 40)
  %1 = bitcast i8* %call to %struct._excepthandler*
  store %struct._excepthandler* %1, %struct._excepthandler** %p, align 8
  %2 = load %struct._excepthandler*, %struct._excepthandler** %p, align 8
  %tobool = icmp ne %struct._excepthandler* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._excepthandler* null, %struct._excepthandler** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._excepthandler*, %struct._excepthandler** %p, align 8
  %kind = getelementptr inbounds %struct._excepthandler, %struct._excepthandler* %3, i32 0, i32 0
  store i32 1, i32* %kind, align 4
  %4 = load %struct._expr*, %struct._expr** %type.addr, align 8
  %5 = load %struct._excepthandler*, %struct._excepthandler** %p, align 8
  %v = getelementptr inbounds %struct._excepthandler, %struct._excepthandler* %5, i32 0, i32 1
  %ExceptHandler = bitcast %union.anon.52* %v to %struct.anon.53*
  %type1 = getelementptr inbounds %struct.anon.53, %struct.anon.53* %ExceptHandler, i32 0, i32 0
  store %struct._expr* %4, %struct._expr** %type1, align 8
  %6 = load %struct._object*, %struct._object** %name.addr, align 8
  %7 = load %struct._excepthandler*, %struct._excepthandler** %p, align 8
  %v2 = getelementptr inbounds %struct._excepthandler, %struct._excepthandler* %7, i32 0, i32 1
  %ExceptHandler3 = bitcast %union.anon.52* %v2 to %struct.anon.53*
  %name4 = getelementptr inbounds %struct.anon.53, %struct.anon.53* %ExceptHandler3, i32 0, i32 1
  store %struct._object* %6, %struct._object** %name4, align 8
  %8 = load %struct.asdl_seq*, %struct.asdl_seq** %body.addr, align 8
  %9 = load %struct._excepthandler*, %struct._excepthandler** %p, align 8
  %v5 = getelementptr inbounds %struct._excepthandler, %struct._excepthandler* %9, i32 0, i32 1
  %ExceptHandler6 = bitcast %union.anon.52* %v5 to %struct.anon.53*
  %body7 = getelementptr inbounds %struct.anon.53, %struct.anon.53* %ExceptHandler6, i32 0, i32 2
  store %struct.asdl_seq* %8, %struct.asdl_seq** %body7, align 8
  %10 = load i32, i32* %lineno.addr, align 4
  %11 = load %struct._excepthandler*, %struct._excepthandler** %p, align 8
  %lineno8 = getelementptr inbounds %struct._excepthandler, %struct._excepthandler* %11, i32 0, i32 2
  store i32 %10, i32* %lineno8, align 4
  %12 = load i32, i32* %col_offset.addr, align 4
  %13 = load %struct._excepthandler*, %struct._excepthandler** %p, align 8
  %col_offset9 = getelementptr inbounds %struct._excepthandler, %struct._excepthandler* %13, i32 0, i32 3
  store i32 %12, i32* %col_offset9, align 4
  %14 = load %struct._excepthandler*, %struct._excepthandler** %p, align 8
  store %struct._excepthandler* %14, %struct._excepthandler** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %15 = load %struct._excepthandler*, %struct._excepthandler** %retval
  ret %struct._excepthandler* %15
}

; Function Attrs: nounwind uwtable
define %struct._arguments* @_Py_arguments(%struct.asdl_seq* %args, %struct._arg* %vararg, %struct.asdl_seq* %kwonlyargs, %struct.asdl_seq* %kw_defaults, %struct._arg* %kwarg, %struct.asdl_seq* %defaults, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._arguments*, align 8
  %args.addr = alloca %struct.asdl_seq*, align 8
  %vararg.addr = alloca %struct._arg*, align 8
  %kwonlyargs.addr = alloca %struct.asdl_seq*, align 8
  %kw_defaults.addr = alloca %struct.asdl_seq*, align 8
  %kwarg.addr = alloca %struct._arg*, align 8
  %defaults.addr = alloca %struct.asdl_seq*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._arguments*, align 8
  store %struct.asdl_seq* %args, %struct.asdl_seq** %args.addr, align 8
  store %struct._arg* %vararg, %struct._arg** %vararg.addr, align 8
  store %struct.asdl_seq* %kwonlyargs, %struct.asdl_seq** %kwonlyargs.addr, align 8
  store %struct.asdl_seq* %kw_defaults, %struct.asdl_seq** %kw_defaults.addr, align 8
  store %struct._arg* %kwarg, %struct._arg** %kwarg.addr, align 8
  store %struct.asdl_seq* %defaults, %struct.asdl_seq** %defaults.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %0, i64 48)
  %1 = bitcast i8* %call to %struct._arguments*
  store %struct._arguments* %1, %struct._arguments** %p, align 8
  %2 = load %struct._arguments*, %struct._arguments** %p, align 8
  %tobool = icmp ne %struct._arguments* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._arguments* null, %struct._arguments** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.asdl_seq*, %struct.asdl_seq** %args.addr, align 8
  %4 = load %struct._arguments*, %struct._arguments** %p, align 8
  %args1 = getelementptr inbounds %struct._arguments, %struct._arguments* %4, i32 0, i32 0
  store %struct.asdl_seq* %3, %struct.asdl_seq** %args1, align 8
  %5 = load %struct._arg*, %struct._arg** %vararg.addr, align 8
  %6 = load %struct._arguments*, %struct._arguments** %p, align 8
  %vararg2 = getelementptr inbounds %struct._arguments, %struct._arguments* %6, i32 0, i32 1
  store %struct._arg* %5, %struct._arg** %vararg2, align 8
  %7 = load %struct.asdl_seq*, %struct.asdl_seq** %kwonlyargs.addr, align 8
  %8 = load %struct._arguments*, %struct._arguments** %p, align 8
  %kwonlyargs3 = getelementptr inbounds %struct._arguments, %struct._arguments* %8, i32 0, i32 2
  store %struct.asdl_seq* %7, %struct.asdl_seq** %kwonlyargs3, align 8
  %9 = load %struct.asdl_seq*, %struct.asdl_seq** %kw_defaults.addr, align 8
  %10 = load %struct._arguments*, %struct._arguments** %p, align 8
  %kw_defaults4 = getelementptr inbounds %struct._arguments, %struct._arguments* %10, i32 0, i32 3
  store %struct.asdl_seq* %9, %struct.asdl_seq** %kw_defaults4, align 8
  %11 = load %struct._arg*, %struct._arg** %kwarg.addr, align 8
  %12 = load %struct._arguments*, %struct._arguments** %p, align 8
  %kwarg5 = getelementptr inbounds %struct._arguments, %struct._arguments* %12, i32 0, i32 4
  store %struct._arg* %11, %struct._arg** %kwarg5, align 8
  %13 = load %struct.asdl_seq*, %struct.asdl_seq** %defaults.addr, align 8
  %14 = load %struct._arguments*, %struct._arguments** %p, align 8
  %defaults6 = getelementptr inbounds %struct._arguments, %struct._arguments* %14, i32 0, i32 5
  store %struct.asdl_seq* %13, %struct.asdl_seq** %defaults6, align 8
  %15 = load %struct._arguments*, %struct._arguments** %p, align 8
  store %struct._arguments* %15, %struct._arguments** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %16 = load %struct._arguments*, %struct._arguments** %retval
  ret %struct._arguments* %16
}

; Function Attrs: nounwind uwtable
define %struct._arg* @_Py_arg(%struct._object* %arg, %struct._expr* %annotation, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._arg*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %annotation.addr = alloca %struct._expr*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._arg*, align 8
  store %struct._object* %arg, %struct._object** %arg.addr, align 8
  store %struct._expr* %annotation, %struct._expr** %annotation.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %arg.addr, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.52, i32 0, i32 0))
  store %struct._arg* null, %struct._arg** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 24)
  %3 = bitcast i8* %call to %struct._arg*
  store %struct._arg* %3, %struct._arg** %p, align 8
  %4 = load %struct._arg*, %struct._arg** %p, align 8
  %tobool1 = icmp ne %struct._arg* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._arg* null, %struct._arg** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %arg.addr, align 8
  %6 = load %struct._arg*, %struct._arg** %p, align 8
  %arg4 = getelementptr inbounds %struct._arg, %struct._arg* %6, i32 0, i32 0
  store %struct._object* %5, %struct._object** %arg4, align 8
  %7 = load %struct._expr*, %struct._expr** %annotation.addr, align 8
  %8 = load %struct._arg*, %struct._arg** %p, align 8
  %annotation5 = getelementptr inbounds %struct._arg, %struct._arg* %8, i32 0, i32 1
  store %struct._expr* %7, %struct._expr** %annotation5, align 8
  %9 = load %struct._arg*, %struct._arg** %p, align 8
  store %struct._arg* %9, %struct._arg** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %10 = load %struct._arg*, %struct._arg** %retval
  ret %struct._arg* %10
}

; Function Attrs: nounwind uwtable
define %struct._keyword* @_Py_keyword(%struct._object* %arg, %struct._expr* %value, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._keyword*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._expr*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._keyword*, align 8
  store %struct._object* %arg, %struct._object** %arg.addr, align 8
  store %struct._expr* %value, %struct._expr** %value.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %arg.addr, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i32 0, i32 0))
  store %struct._keyword* null, %struct._keyword** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %tobool1 = icmp ne %struct._expr* %2, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.54, i32 0, i32 0))
  store %struct._keyword* null, %struct._keyword** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %4, i64 16)
  %5 = bitcast i8* %call to %struct._keyword*
  store %struct._keyword* %5, %struct._keyword** %p, align 8
  %6 = load %struct._keyword*, %struct._keyword** %p, align 8
  %tobool4 = icmp ne %struct._keyword* %6, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.3
  store %struct._keyword* null, %struct._keyword** %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %7 = load %struct._object*, %struct._object** %arg.addr, align 8
  %8 = load %struct._keyword*, %struct._keyword** %p, align 8
  %arg7 = getelementptr inbounds %struct._keyword, %struct._keyword* %8, i32 0, i32 0
  store %struct._object* %7, %struct._object** %arg7, align 8
  %9 = load %struct._expr*, %struct._expr** %value.addr, align 8
  %10 = load %struct._keyword*, %struct._keyword** %p, align 8
  %value8 = getelementptr inbounds %struct._keyword, %struct._keyword* %10, i32 0, i32 1
  store %struct._expr* %9, %struct._expr** %value8, align 8
  %11 = load %struct._keyword*, %struct._keyword** %p, align 8
  store %struct._keyword* %11, %struct._keyword** %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then.2, %if.then
  %12 = load %struct._keyword*, %struct._keyword** %retval
  ret %struct._keyword* %12
}

; Function Attrs: nounwind uwtable
define %struct._alias* @_Py_alias(%struct._object* %name, %struct._object* %asname, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._alias*, align 8
  %name.addr = alloca %struct._object*, align 8
  %asname.addr = alloca %struct._object*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._alias*, align 8
  store %struct._object* %name, %struct._object** %name.addr, align 8
  store %struct._object* %asname, %struct._object** %asname.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %name.addr, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.55, i32 0, i32 0))
  store %struct._alias* null, %struct._alias** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 16)
  %3 = bitcast i8* %call to %struct._alias*
  store %struct._alias* %3, %struct._alias** %p, align 8
  %4 = load %struct._alias*, %struct._alias** %p, align 8
  %tobool1 = icmp ne %struct._alias* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._alias* null, %struct._alias** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %name.addr, align 8
  %6 = load %struct._alias*, %struct._alias** %p, align 8
  %name4 = getelementptr inbounds %struct._alias, %struct._alias* %6, i32 0, i32 0
  store %struct._object* %5, %struct._object** %name4, align 8
  %7 = load %struct._object*, %struct._object** %asname.addr, align 8
  %8 = load %struct._alias*, %struct._alias** %p, align 8
  %asname5 = getelementptr inbounds %struct._alias, %struct._alias* %8, i32 0, i32 1
  store %struct._object* %7, %struct._object** %asname5, align 8
  %9 = load %struct._alias*, %struct._alias** %p, align 8
  store %struct._alias* %9, %struct._alias** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %10 = load %struct._alias*, %struct._alias** %retval
  ret %struct._alias* %10
}

; Function Attrs: nounwind uwtable
define %struct._withitem* @_Py_withitem(%struct._expr* %context_expr, %struct._expr* %optional_vars, %struct._arena* %arena) #0 {
entry:
  %retval = alloca %struct._withitem*, align 8
  %context_expr.addr = alloca %struct._expr*, align 8
  %optional_vars.addr = alloca %struct._expr*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %p = alloca %struct._withitem*, align 8
  store %struct._expr* %context_expr, %struct._expr** %context_expr.addr, align 8
  store %struct._expr* %optional_vars, %struct._expr** %optional_vars.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._expr*, %struct._expr** %context_expr.addr, align 8
  %tobool = icmp ne %struct._expr* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.56, i32 0, i32 0))
  store %struct._withitem* null, %struct._withitem** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i8* @PyArena_Malloc(%struct._arena* %2, i64 16)
  %3 = bitcast i8* %call to %struct._withitem*
  store %struct._withitem* %3, %struct._withitem** %p, align 8
  %4 = load %struct._withitem*, %struct._withitem** %p, align 8
  %tobool1 = icmp ne %struct._withitem* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._withitem* null, %struct._withitem** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._expr*, %struct._expr** %context_expr.addr, align 8
  %6 = load %struct._withitem*, %struct._withitem** %p, align 8
  %context_expr4 = getelementptr inbounds %struct._withitem, %struct._withitem* %6, i32 0, i32 0
  store %struct._expr* %5, %struct._expr** %context_expr4, align 8
  %7 = load %struct._expr*, %struct._expr** %optional_vars.addr, align 8
  %8 = load %struct._withitem*, %struct._withitem** %p, align 8
  %optional_vars5 = getelementptr inbounds %struct._withitem, %struct._withitem* %8, i32 0, i32 1
  store %struct._expr* %7, %struct._expr** %optional_vars5, align 8
  %9 = load %struct._withitem*, %struct._withitem** %p, align 8
  store %struct._withitem* %9, %struct._withitem** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %10 = load %struct._withitem*, %struct._withitem** %retval
  ret %struct._withitem* %10
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit__ast() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %m = alloca %struct._object*, align 8
  %d = alloca %struct._object*, align 8
  %call = call i32 @init_types()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyModule_Create2(%struct.PyModuleDef* @_astmodule, i32 1013)
  store %struct._object* %call1, %struct._object** %m, align 8
  %0 = load %struct._object*, %struct._object** %m, align 8
  %tobool2 = icmp ne %struct._object* %0, null
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  %1 = load %struct._object*, %struct._object** %m, align 8
  %call5 = call %struct._object* @PyModule_GetDict(%struct._object* %1)
  store %struct._object* %call5, %struct._object** %d, align 8
  %2 = load %struct._object*, %struct._object** %d, align 8
  %call6 = call i32 @PyDict_SetItemString(%struct._object* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @AST_type, i32 0, i32 0, i32 0))
  %cmp = icmp slt i32 %call6, 0
  br i1 %cmp, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.8:                                         ; preds = %if.end.4
  %3 = load %struct._object*, %struct._object** %m, align 8
  %call9 = call i32 @PyModule_AddIntConstant(%struct._object* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i32 0, i32 0), i64 1024)
  %cmp10 = icmp slt i32 %call9, 0
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.8
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.12:                                        ; preds = %if.end.8
  %4 = load %struct._object*, %struct._object** %d, align 8
  %5 = load %struct._typeobject*, %struct._typeobject** @mod_type, align 8
  %6 = bitcast %struct._typeobject* %5 to %struct._object*
  %call13 = call i32 @PyDict_SetItemString(%struct._object* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i32 0, i32 0), %struct._object* %6)
  %cmp14 = icmp slt i32 %call13, 0
  br i1 %cmp14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.12
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.16:                                        ; preds = %if.end.12
  %7 = load %struct._object*, %struct._object** %d, align 8
  %8 = load %struct._typeobject*, %struct._typeobject** @Module_type, align 8
  %9 = bitcast %struct._typeobject* %8 to %struct._object*
  %call17 = call i32 @PyDict_SetItemString(%struct._object* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i32 0, i32 0), %struct._object* %9)
  %cmp18 = icmp slt i32 %call17, 0
  br i1 %cmp18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.16
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.20:                                        ; preds = %if.end.16
  %10 = load %struct._object*, %struct._object** %d, align 8
  %11 = load %struct._typeobject*, %struct._typeobject** @Interactive_type, align 8
  %12 = bitcast %struct._typeobject* %11 to %struct._object*
  %call21 = call i32 @PyDict_SetItemString(%struct._object* %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i32 0, i32 0), %struct._object* %12)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.end.20
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.24:                                        ; preds = %if.end.20
  %13 = load %struct._object*, %struct._object** %d, align 8
  %14 = load %struct._typeobject*, %struct._typeobject** @Expression_type, align 8
  %15 = bitcast %struct._typeobject* %14 to %struct._object*
  %call25 = call i32 @PyDict_SetItemString(%struct._object* %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i32 0, i32 0), %struct._object* %15)
  %cmp26 = icmp slt i32 %call25, 0
  br i1 %cmp26, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %if.end.24
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.28:                                        ; preds = %if.end.24
  %16 = load %struct._object*, %struct._object** %d, align 8
  %17 = load %struct._typeobject*, %struct._typeobject** @Suite_type, align 8
  %18 = bitcast %struct._typeobject* %17 to %struct._object*
  %call29 = call i32 @PyDict_SetItemString(%struct._object* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), %struct._object* %18)
  %cmp30 = icmp slt i32 %call29, 0
  br i1 %cmp30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.32:                                        ; preds = %if.end.28
  %19 = load %struct._object*, %struct._object** %d, align 8
  %20 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %21 = bitcast %struct._typeobject* %20 to %struct._object*
  %call33 = call i32 @PyDict_SetItemString(%struct._object* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), %struct._object* %21)
  %cmp34 = icmp slt i32 %call33, 0
  br i1 %cmp34, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %if.end.32
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.36:                                        ; preds = %if.end.32
  %22 = load %struct._object*, %struct._object** %d, align 8
  %23 = load %struct._typeobject*, %struct._typeobject** @FunctionDef_type, align 8
  %24 = bitcast %struct._typeobject* %23 to %struct._object*
  %call37 = call i32 @PyDict_SetItemString(%struct._object* %22, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.65, i32 0, i32 0), %struct._object* %24)
  %cmp38 = icmp slt i32 %call37, 0
  br i1 %cmp38, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %if.end.36
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.40:                                        ; preds = %if.end.36
  %25 = load %struct._object*, %struct._object** %d, align 8
  %26 = load %struct._typeobject*, %struct._typeobject** @ClassDef_type, align 8
  %27 = bitcast %struct._typeobject* %26 to %struct._object*
  %call41 = call i32 @PyDict_SetItemString(%struct._object* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i32 0, i32 0), %struct._object* %27)
  %cmp42 = icmp slt i32 %call41, 0
  br i1 %cmp42, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.end.40
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.44:                                        ; preds = %if.end.40
  %28 = load %struct._object*, %struct._object** %d, align 8
  %29 = load %struct._typeobject*, %struct._typeobject** @Return_type, align 8
  %30 = bitcast %struct._typeobject* %29 to %struct._object*
  %call45 = call i32 @PyDict_SetItemString(%struct._object* %28, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i32 0, i32 0), %struct._object* %30)
  %cmp46 = icmp slt i32 %call45, 0
  br i1 %cmp46, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %if.end.44
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.48:                                        ; preds = %if.end.44
  %31 = load %struct._object*, %struct._object** %d, align 8
  %32 = load %struct._typeobject*, %struct._typeobject** @Delete_type, align 8
  %33 = bitcast %struct._typeobject* %32 to %struct._object*
  %call49 = call i32 @PyDict_SetItemString(%struct._object* %31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), %struct._object* %33)
  %cmp50 = icmp slt i32 %call49, 0
  br i1 %cmp50, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %if.end.48
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.52:                                        ; preds = %if.end.48
  %34 = load %struct._object*, %struct._object** %d, align 8
  %35 = load %struct._typeobject*, %struct._typeobject** @Assign_type, align 8
  %36 = bitcast %struct._typeobject* %35 to %struct._object*
  %call53 = call i32 @PyDict_SetItemString(%struct._object* %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0), %struct._object* %36)
  %cmp54 = icmp slt i32 %call53, 0
  br i1 %cmp54, label %if.then.55, label %if.end.56

if.then.55:                                       ; preds = %if.end.52
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.56:                                        ; preds = %if.end.52
  %37 = load %struct._object*, %struct._object** %d, align 8
  %38 = load %struct._typeobject*, %struct._typeobject** @AugAssign_type, align 8
  %39 = bitcast %struct._typeobject* %38 to %struct._object*
  %call57 = call i32 @PyDict_SetItemString(%struct._object* %37, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i32 0, i32 0), %struct._object* %39)
  %cmp58 = icmp slt i32 %call57, 0
  br i1 %cmp58, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.end.56
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.60:                                        ; preds = %if.end.56
  %40 = load %struct._object*, %struct._object** %d, align 8
  %41 = load %struct._typeobject*, %struct._typeobject** @For_type, align 8
  %42 = bitcast %struct._typeobject* %41 to %struct._object*
  %call61 = call i32 @PyDict_SetItemString(%struct._object* %40, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), %struct._object* %42)
  %cmp62 = icmp slt i32 %call61, 0
  br i1 %cmp62, label %if.then.63, label %if.end.64

if.then.63:                                       ; preds = %if.end.60
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.64:                                        ; preds = %if.end.60
  %43 = load %struct._object*, %struct._object** %d, align 8
  %44 = load %struct._typeobject*, %struct._typeobject** @While_type, align 8
  %45 = bitcast %struct._typeobject* %44 to %struct._object*
  %call65 = call i32 @PyDict_SetItemString(%struct._object* %43, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i32 0, i32 0), %struct._object* %45)
  %cmp66 = icmp slt i32 %call65, 0
  br i1 %cmp66, label %if.then.67, label %if.end.68

if.then.67:                                       ; preds = %if.end.64
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.68:                                        ; preds = %if.end.64
  %46 = load %struct._object*, %struct._object** %d, align 8
  %47 = load %struct._typeobject*, %struct._typeobject** @If_type, align 8
  %48 = bitcast %struct._typeobject* %47 to %struct._object*
  %call69 = call i32 @PyDict_SetItemString(%struct._object* %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), %struct._object* %48)
  %cmp70 = icmp slt i32 %call69, 0
  br i1 %cmp70, label %if.then.71, label %if.end.72

if.then.71:                                       ; preds = %if.end.68
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.72:                                        ; preds = %if.end.68
  %49 = load %struct._object*, %struct._object** %d, align 8
  %50 = load %struct._typeobject*, %struct._typeobject** @With_type, align 8
  %51 = bitcast %struct._typeobject* %50 to %struct._object*
  %call73 = call i32 @PyDict_SetItemString(%struct._object* %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0), %struct._object* %51)
  %cmp74 = icmp slt i32 %call73, 0
  br i1 %cmp74, label %if.then.75, label %if.end.76

if.then.75:                                       ; preds = %if.end.72
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.76:                                        ; preds = %if.end.72
  %52 = load %struct._object*, %struct._object** %d, align 8
  %53 = load %struct._typeobject*, %struct._typeobject** @Raise_type, align 8
  %54 = bitcast %struct._typeobject* %53 to %struct._object*
  %call77 = call i32 @PyDict_SetItemString(%struct._object* %52, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), %struct._object* %54)
  %cmp78 = icmp slt i32 %call77, 0
  br i1 %cmp78, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %if.end.76
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.80:                                        ; preds = %if.end.76
  %55 = load %struct._object*, %struct._object** %d, align 8
  %56 = load %struct._typeobject*, %struct._typeobject** @Try_type, align 8
  %57 = bitcast %struct._typeobject* %56 to %struct._object*
  %call81 = call i32 @PyDict_SetItemString(%struct._object* %55, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct._object* %57)
  %cmp82 = icmp slt i32 %call81, 0
  br i1 %cmp82, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %if.end.80
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.84:                                        ; preds = %if.end.80
  %58 = load %struct._object*, %struct._object** %d, align 8
  %59 = load %struct._typeobject*, %struct._typeobject** @Assert_type, align 8
  %60 = bitcast %struct._typeobject* %59 to %struct._object*
  %call85 = call i32 @PyDict_SetItemString(%struct._object* %58, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i32 0, i32 0), %struct._object* %60)
  %cmp86 = icmp slt i32 %call85, 0
  br i1 %cmp86, label %if.then.87, label %if.end.88

if.then.87:                                       ; preds = %if.end.84
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.88:                                        ; preds = %if.end.84
  %61 = load %struct._object*, %struct._object** %d, align 8
  %62 = load %struct._typeobject*, %struct._typeobject** @Import_type, align 8
  %63 = bitcast %struct._typeobject* %62 to %struct._object*
  %call89 = call i32 @PyDict_SetItemString(%struct._object* %61, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i32 0, i32 0), %struct._object* %63)
  %cmp90 = icmp slt i32 %call89, 0
  br i1 %cmp90, label %if.then.91, label %if.end.92

if.then.91:                                       ; preds = %if.end.88
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.92:                                        ; preds = %if.end.88
  %64 = load %struct._object*, %struct._object** %d, align 8
  %65 = load %struct._typeobject*, %struct._typeobject** @ImportFrom_type, align 8
  %66 = bitcast %struct._typeobject* %65 to %struct._object*
  %call93 = call i32 @PyDict_SetItemString(%struct._object* %64, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.79, i32 0, i32 0), %struct._object* %66)
  %cmp94 = icmp slt i32 %call93, 0
  br i1 %cmp94, label %if.then.95, label %if.end.96

if.then.95:                                       ; preds = %if.end.92
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.96:                                        ; preds = %if.end.92
  %67 = load %struct._object*, %struct._object** %d, align 8
  %68 = load %struct._typeobject*, %struct._typeobject** @Global_type, align 8
  %69 = bitcast %struct._typeobject* %68 to %struct._object*
  %call97 = call i32 @PyDict_SetItemString(%struct._object* %67, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), %struct._object* %69)
  %cmp98 = icmp slt i32 %call97, 0
  br i1 %cmp98, label %if.then.99, label %if.end.100

if.then.99:                                       ; preds = %if.end.96
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.100:                                       ; preds = %if.end.96
  %70 = load %struct._object*, %struct._object** %d, align 8
  %71 = load %struct._typeobject*, %struct._typeobject** @Nonlocal_type, align 8
  %72 = bitcast %struct._typeobject* %71 to %struct._object*
  %call101 = call i32 @PyDict_SetItemString(%struct._object* %70, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), %struct._object* %72)
  %cmp102 = icmp slt i32 %call101, 0
  br i1 %cmp102, label %if.then.103, label %if.end.104

if.then.103:                                      ; preds = %if.end.100
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.104:                                       ; preds = %if.end.100
  %73 = load %struct._object*, %struct._object** %d, align 8
  %74 = load %struct._typeobject*, %struct._typeobject** @Expr_type, align 8
  %75 = bitcast %struct._typeobject* %74 to %struct._object*
  %call105 = call i32 @PyDict_SetItemString(%struct._object* %73, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i32 0, i32 0), %struct._object* %75)
  %cmp106 = icmp slt i32 %call105, 0
  br i1 %cmp106, label %if.then.107, label %if.end.108

if.then.107:                                      ; preds = %if.end.104
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.108:                                       ; preds = %if.end.104
  %76 = load %struct._object*, %struct._object** %d, align 8
  %77 = load %struct._typeobject*, %struct._typeobject** @Pass_type, align 8
  %78 = bitcast %struct._typeobject* %77 to %struct._object*
  %call109 = call i32 @PyDict_SetItemString(%struct._object* %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0), %struct._object* %78)
  %cmp110 = icmp slt i32 %call109, 0
  br i1 %cmp110, label %if.then.111, label %if.end.112

if.then.111:                                      ; preds = %if.end.108
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.112:                                       ; preds = %if.end.108
  %79 = load %struct._object*, %struct._object** %d, align 8
  %80 = load %struct._typeobject*, %struct._typeobject** @Break_type, align 8
  %81 = bitcast %struct._typeobject* %80 to %struct._object*
  %call113 = call i32 @PyDict_SetItemString(%struct._object* %79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), %struct._object* %81)
  %cmp114 = icmp slt i32 %call113, 0
  br i1 %cmp114, label %if.then.115, label %if.end.116

if.then.115:                                      ; preds = %if.end.112
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.116:                                       ; preds = %if.end.112
  %82 = load %struct._object*, %struct._object** %d, align 8
  %83 = load %struct._typeobject*, %struct._typeobject** @Continue_type, align 8
  %84 = bitcast %struct._typeobject* %83 to %struct._object*
  %call117 = call i32 @PyDict_SetItemString(%struct._object* %82, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0), %struct._object* %84)
  %cmp118 = icmp slt i32 %call117, 0
  br i1 %cmp118, label %if.then.119, label %if.end.120

if.then.119:                                      ; preds = %if.end.116
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.120:                                       ; preds = %if.end.116
  %85 = load %struct._object*, %struct._object** %d, align 8
  %86 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %87 = bitcast %struct._typeobject* %86 to %struct._object*
  %call121 = call i32 @PyDict_SetItemString(%struct._object* %85, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i32 0, i32 0), %struct._object* %87)
  %cmp122 = icmp slt i32 %call121, 0
  br i1 %cmp122, label %if.then.123, label %if.end.124

if.then.123:                                      ; preds = %if.end.120
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.124:                                       ; preds = %if.end.120
  %88 = load %struct._object*, %struct._object** %d, align 8
  %89 = load %struct._typeobject*, %struct._typeobject** @BoolOp_type, align 8
  %90 = bitcast %struct._typeobject* %89 to %struct._object*
  %call125 = call i32 @PyDict_SetItemString(%struct._object* %88, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), %struct._object* %90)
  %cmp126 = icmp slt i32 %call125, 0
  br i1 %cmp126, label %if.then.127, label %if.end.128

if.then.127:                                      ; preds = %if.end.124
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.128:                                       ; preds = %if.end.124
  %91 = load %struct._object*, %struct._object** %d, align 8
  %92 = load %struct._typeobject*, %struct._typeobject** @BinOp_type, align 8
  %93 = bitcast %struct._typeobject* %92 to %struct._object*
  %call129 = call i32 @PyDict_SetItemString(%struct._object* %91, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i32 0, i32 0), %struct._object* %93)
  %cmp130 = icmp slt i32 %call129, 0
  br i1 %cmp130, label %if.then.131, label %if.end.132

if.then.131:                                      ; preds = %if.end.128
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.132:                                       ; preds = %if.end.128
  %94 = load %struct._object*, %struct._object** %d, align 8
  %95 = load %struct._typeobject*, %struct._typeobject** @UnaryOp_type, align 8
  %96 = bitcast %struct._typeobject* %95 to %struct._object*
  %call133 = call i32 @PyDict_SetItemString(%struct._object* %94, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89, i32 0, i32 0), %struct._object* %96)
  %cmp134 = icmp slt i32 %call133, 0
  br i1 %cmp134, label %if.then.135, label %if.end.136

if.then.135:                                      ; preds = %if.end.132
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.136:                                       ; preds = %if.end.132
  %97 = load %struct._object*, %struct._object** %d, align 8
  %98 = load %struct._typeobject*, %struct._typeobject** @Lambda_type, align 8
  %99 = bitcast %struct._typeobject* %98 to %struct._object*
  %call137 = call i32 @PyDict_SetItemString(%struct._object* %97, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i32 0, i32 0), %struct._object* %99)
  %cmp138 = icmp slt i32 %call137, 0
  br i1 %cmp138, label %if.then.139, label %if.end.140

if.then.139:                                      ; preds = %if.end.136
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.140:                                       ; preds = %if.end.136
  %100 = load %struct._object*, %struct._object** %d, align 8
  %101 = load %struct._typeobject*, %struct._typeobject** @IfExp_type, align 8
  %102 = bitcast %struct._typeobject* %101 to %struct._object*
  %call141 = call i32 @PyDict_SetItemString(%struct._object* %100, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i32 0, i32 0), %struct._object* %102)
  %cmp142 = icmp slt i32 %call141, 0
  br i1 %cmp142, label %if.then.143, label %if.end.144

if.then.143:                                      ; preds = %if.end.140
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.144:                                       ; preds = %if.end.140
  %103 = load %struct._object*, %struct._object** %d, align 8
  %104 = load %struct._typeobject*, %struct._typeobject** @Dict_type, align 8
  %105 = bitcast %struct._typeobject* %104 to %struct._object*
  %call145 = call i32 @PyDict_SetItemString(%struct._object* %103, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i32 0, i32 0), %struct._object* %105)
  %cmp146 = icmp slt i32 %call145, 0
  br i1 %cmp146, label %if.then.147, label %if.end.148

if.then.147:                                      ; preds = %if.end.144
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.148:                                       ; preds = %if.end.144
  %106 = load %struct._object*, %struct._object** %d, align 8
  %107 = load %struct._typeobject*, %struct._typeobject** @Set_type, align 8
  %108 = bitcast %struct._typeobject* %107 to %struct._object*
  %call149 = call i32 @PyDict_SetItemString(%struct._object* %106, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.93, i32 0, i32 0), %struct._object* %108)
  %cmp150 = icmp slt i32 %call149, 0
  br i1 %cmp150, label %if.then.151, label %if.end.152

if.then.151:                                      ; preds = %if.end.148
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.152:                                       ; preds = %if.end.148
  %109 = load %struct._object*, %struct._object** %d, align 8
  %110 = load %struct._typeobject*, %struct._typeobject** @ListComp_type, align 8
  %111 = bitcast %struct._typeobject* %110 to %struct._object*
  %call153 = call i32 @PyDict_SetItemString(%struct._object* %109, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.94, i32 0, i32 0), %struct._object* %111)
  %cmp154 = icmp slt i32 %call153, 0
  br i1 %cmp154, label %if.then.155, label %if.end.156

if.then.155:                                      ; preds = %if.end.152
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.156:                                       ; preds = %if.end.152
  %112 = load %struct._object*, %struct._object** %d, align 8
  %113 = load %struct._typeobject*, %struct._typeobject** @SetComp_type, align 8
  %114 = bitcast %struct._typeobject* %113 to %struct._object*
  %call157 = call i32 @PyDict_SetItemString(%struct._object* %112, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i32 0, i32 0), %struct._object* %114)
  %cmp158 = icmp slt i32 %call157, 0
  br i1 %cmp158, label %if.then.159, label %if.end.160

if.then.159:                                      ; preds = %if.end.156
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.160:                                       ; preds = %if.end.156
  %115 = load %struct._object*, %struct._object** %d, align 8
  %116 = load %struct._typeobject*, %struct._typeobject** @DictComp_type, align 8
  %117 = bitcast %struct._typeobject* %116 to %struct._object*
  %call161 = call i32 @PyDict_SetItemString(%struct._object* %115, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.96, i32 0, i32 0), %struct._object* %117)
  %cmp162 = icmp slt i32 %call161, 0
  br i1 %cmp162, label %if.then.163, label %if.end.164

if.then.163:                                      ; preds = %if.end.160
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.164:                                       ; preds = %if.end.160
  %118 = load %struct._object*, %struct._object** %d, align 8
  %119 = load %struct._typeobject*, %struct._typeobject** @GeneratorExp_type, align 8
  %120 = bitcast %struct._typeobject* %119 to %struct._object*
  %call165 = call i32 @PyDict_SetItemString(%struct._object* %118, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), %struct._object* %120)
  %cmp166 = icmp slt i32 %call165, 0
  br i1 %cmp166, label %if.then.167, label %if.end.168

if.then.167:                                      ; preds = %if.end.164
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.168:                                       ; preds = %if.end.164
  %121 = load %struct._object*, %struct._object** %d, align 8
  %122 = load %struct._typeobject*, %struct._typeobject** @Yield_type, align 8
  %123 = bitcast %struct._typeobject* %122 to %struct._object*
  %call169 = call i32 @PyDict_SetItemString(%struct._object* %121, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.98, i32 0, i32 0), %struct._object* %123)
  %cmp170 = icmp slt i32 %call169, 0
  br i1 %cmp170, label %if.then.171, label %if.end.172

if.then.171:                                      ; preds = %if.end.168
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.172:                                       ; preds = %if.end.168
  %124 = load %struct._object*, %struct._object** %d, align 8
  %125 = load %struct._typeobject*, %struct._typeobject** @YieldFrom_type, align 8
  %126 = bitcast %struct._typeobject* %125 to %struct._object*
  %call173 = call i32 @PyDict_SetItemString(%struct._object* %124, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.99, i32 0, i32 0), %struct._object* %126)
  %cmp174 = icmp slt i32 %call173, 0
  br i1 %cmp174, label %if.then.175, label %if.end.176

if.then.175:                                      ; preds = %if.end.172
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.176:                                       ; preds = %if.end.172
  %127 = load %struct._object*, %struct._object** %d, align 8
  %128 = load %struct._typeobject*, %struct._typeobject** @Compare_type, align 8
  %129 = bitcast %struct._typeobject* %128 to %struct._object*
  %call177 = call i32 @PyDict_SetItemString(%struct._object* %127, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.100, i32 0, i32 0), %struct._object* %129)
  %cmp178 = icmp slt i32 %call177, 0
  br i1 %cmp178, label %if.then.179, label %if.end.180

if.then.179:                                      ; preds = %if.end.176
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.180:                                       ; preds = %if.end.176
  %130 = load %struct._object*, %struct._object** %d, align 8
  %131 = load %struct._typeobject*, %struct._typeobject** @Call_type, align 8
  %132 = bitcast %struct._typeobject* %131 to %struct._object*
  %call181 = call i32 @PyDict_SetItemString(%struct._object* %130, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), %struct._object* %132)
  %cmp182 = icmp slt i32 %call181, 0
  br i1 %cmp182, label %if.then.183, label %if.end.184

if.then.183:                                      ; preds = %if.end.180
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.184:                                       ; preds = %if.end.180
  %133 = load %struct._object*, %struct._object** %d, align 8
  %134 = load %struct._typeobject*, %struct._typeobject** @Num_type, align 8
  %135 = bitcast %struct._typeobject* %134 to %struct._object*
  %call185 = call i32 @PyDict_SetItemString(%struct._object* %133, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.102, i32 0, i32 0), %struct._object* %135)
  %cmp186 = icmp slt i32 %call185, 0
  br i1 %cmp186, label %if.then.187, label %if.end.188

if.then.187:                                      ; preds = %if.end.184
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.188:                                       ; preds = %if.end.184
  %136 = load %struct._object*, %struct._object** %d, align 8
  %137 = load %struct._typeobject*, %struct._typeobject** @Str_type, align 8
  %138 = bitcast %struct._typeobject* %137 to %struct._object*
  %call189 = call i32 @PyDict_SetItemString(%struct._object* %136, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0), %struct._object* %138)
  %cmp190 = icmp slt i32 %call189, 0
  br i1 %cmp190, label %if.then.191, label %if.end.192

if.then.191:                                      ; preds = %if.end.188
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.192:                                       ; preds = %if.end.188
  %139 = load %struct._object*, %struct._object** %d, align 8
  %140 = load %struct._typeobject*, %struct._typeobject** @Bytes_type, align 8
  %141 = bitcast %struct._typeobject* %140 to %struct._object*
  %call193 = call i32 @PyDict_SetItemString(%struct._object* %139, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i32 0, i32 0), %struct._object* %141)
  %cmp194 = icmp slt i32 %call193, 0
  br i1 %cmp194, label %if.then.195, label %if.end.196

if.then.195:                                      ; preds = %if.end.192
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.196:                                       ; preds = %if.end.192
  %142 = load %struct._object*, %struct._object** %d, align 8
  %143 = load %struct._typeobject*, %struct._typeobject** @NameConstant_type, align 8
  %144 = bitcast %struct._typeobject* %143 to %struct._object*
  %call197 = call i32 @PyDict_SetItemString(%struct._object* %142, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0), %struct._object* %144)
  %cmp198 = icmp slt i32 %call197, 0
  br i1 %cmp198, label %if.then.199, label %if.end.200

if.then.199:                                      ; preds = %if.end.196
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.200:                                       ; preds = %if.end.196
  %145 = load %struct._object*, %struct._object** %d, align 8
  %146 = load %struct._typeobject*, %struct._typeobject** @Ellipsis_type, align 8
  %147 = bitcast %struct._typeobject* %146 to %struct._object*
  %call201 = call i32 @PyDict_SetItemString(%struct._object* %145, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i32 0, i32 0), %struct._object* %147)
  %cmp202 = icmp slt i32 %call201, 0
  br i1 %cmp202, label %if.then.203, label %if.end.204

if.then.203:                                      ; preds = %if.end.200
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.204:                                       ; preds = %if.end.200
  %148 = load %struct._object*, %struct._object** %d, align 8
  %149 = load %struct._typeobject*, %struct._typeobject** @Attribute_type, align 8
  %150 = bitcast %struct._typeobject* %149 to %struct._object*
  %call205 = call i32 @PyDict_SetItemString(%struct._object* %148, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), %struct._object* %150)
  %cmp206 = icmp slt i32 %call205, 0
  br i1 %cmp206, label %if.then.207, label %if.end.208

if.then.207:                                      ; preds = %if.end.204
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.208:                                       ; preds = %if.end.204
  %151 = load %struct._object*, %struct._object** %d, align 8
  %152 = load %struct._typeobject*, %struct._typeobject** @Subscript_type, align 8
  %153 = bitcast %struct._typeobject* %152 to %struct._object*
  %call209 = call i32 @PyDict_SetItemString(%struct._object* %151, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), %struct._object* %153)
  %cmp210 = icmp slt i32 %call209, 0
  br i1 %cmp210, label %if.then.211, label %if.end.212

if.then.211:                                      ; preds = %if.end.208
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.212:                                       ; preds = %if.end.208
  %154 = load %struct._object*, %struct._object** %d, align 8
  %155 = load %struct._typeobject*, %struct._typeobject** @Starred_type, align 8
  %156 = bitcast %struct._typeobject* %155 to %struct._object*
  %call213 = call i32 @PyDict_SetItemString(%struct._object* %154, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.109, i32 0, i32 0), %struct._object* %156)
  %cmp214 = icmp slt i32 %call213, 0
  br i1 %cmp214, label %if.then.215, label %if.end.216

if.then.215:                                      ; preds = %if.end.212
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.216:                                       ; preds = %if.end.212
  %157 = load %struct._object*, %struct._object** %d, align 8
  %158 = load %struct._typeobject*, %struct._typeobject** @Name_type, align 8
  %159 = bitcast %struct._typeobject* %158 to %struct._object*
  %call217 = call i32 @PyDict_SetItemString(%struct._object* %157, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0), %struct._object* %159)
  %cmp218 = icmp slt i32 %call217, 0
  br i1 %cmp218, label %if.then.219, label %if.end.220

if.then.219:                                      ; preds = %if.end.216
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.220:                                       ; preds = %if.end.216
  %160 = load %struct._object*, %struct._object** %d, align 8
  %161 = load %struct._typeobject*, %struct._typeobject** @List_type, align 8
  %162 = bitcast %struct._typeobject* %161 to %struct._object*
  %call221 = call i32 @PyDict_SetItemString(%struct._object* %160, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.111, i32 0, i32 0), %struct._object* %162)
  %cmp222 = icmp slt i32 %call221, 0
  br i1 %cmp222, label %if.then.223, label %if.end.224

if.then.223:                                      ; preds = %if.end.220
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.224:                                       ; preds = %if.end.220
  %163 = load %struct._object*, %struct._object** %d, align 8
  %164 = load %struct._typeobject*, %struct._typeobject** @Tuple_type, align 8
  %165 = bitcast %struct._typeobject* %164 to %struct._object*
  %call225 = call i32 @PyDict_SetItemString(%struct._object* %163, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), %struct._object* %165)
  %cmp226 = icmp slt i32 %call225, 0
  br i1 %cmp226, label %if.then.227, label %if.end.228

if.then.227:                                      ; preds = %if.end.224
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.228:                                       ; preds = %if.end.224
  %166 = load %struct._object*, %struct._object** %d, align 8
  %167 = load %struct._typeobject*, %struct._typeobject** @expr_context_type, align 8
  %168 = bitcast %struct._typeobject* %167 to %struct._object*
  %call229 = call i32 @PyDict_SetItemString(%struct._object* %166, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.113, i32 0, i32 0), %struct._object* %168)
  %cmp230 = icmp slt i32 %call229, 0
  br i1 %cmp230, label %if.then.231, label %if.end.232

if.then.231:                                      ; preds = %if.end.228
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.232:                                       ; preds = %if.end.228
  %169 = load %struct._object*, %struct._object** %d, align 8
  %170 = load %struct._typeobject*, %struct._typeobject** @Load_type, align 8
  %171 = bitcast %struct._typeobject* %170 to %struct._object*
  %call233 = call i32 @PyDict_SetItemString(%struct._object* %169, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i32 0, i32 0), %struct._object* %171)
  %cmp234 = icmp slt i32 %call233, 0
  br i1 %cmp234, label %if.then.235, label %if.end.236

if.then.235:                                      ; preds = %if.end.232
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.236:                                       ; preds = %if.end.232
  %172 = load %struct._object*, %struct._object** %d, align 8
  %173 = load %struct._typeobject*, %struct._typeobject** @Store_type, align 8
  %174 = bitcast %struct._typeobject* %173 to %struct._object*
  %call237 = call i32 @PyDict_SetItemString(%struct._object* %172, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0), %struct._object* %174)
  %cmp238 = icmp slt i32 %call237, 0
  br i1 %cmp238, label %if.then.239, label %if.end.240

if.then.239:                                      ; preds = %if.end.236
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.240:                                       ; preds = %if.end.236
  %175 = load %struct._object*, %struct._object** %d, align 8
  %176 = load %struct._typeobject*, %struct._typeobject** @Del_type, align 8
  %177 = bitcast %struct._typeobject* %176 to %struct._object*
  %call241 = call i32 @PyDict_SetItemString(%struct._object* %175, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i32 0, i32 0), %struct._object* %177)
  %cmp242 = icmp slt i32 %call241, 0
  br i1 %cmp242, label %if.then.243, label %if.end.244

if.then.243:                                      ; preds = %if.end.240
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.244:                                       ; preds = %if.end.240
  %178 = load %struct._object*, %struct._object** %d, align 8
  %179 = load %struct._typeobject*, %struct._typeobject** @AugLoad_type, align 8
  %180 = bitcast %struct._typeobject* %179 to %struct._object*
  %call245 = call i32 @PyDict_SetItemString(%struct._object* %178, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.117, i32 0, i32 0), %struct._object* %180)
  %cmp246 = icmp slt i32 %call245, 0
  br i1 %cmp246, label %if.then.247, label %if.end.248

if.then.247:                                      ; preds = %if.end.244
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.248:                                       ; preds = %if.end.244
  %181 = load %struct._object*, %struct._object** %d, align 8
  %182 = load %struct._typeobject*, %struct._typeobject** @AugStore_type, align 8
  %183 = bitcast %struct._typeobject* %182 to %struct._object*
  %call249 = call i32 @PyDict_SetItemString(%struct._object* %181, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.118, i32 0, i32 0), %struct._object* %183)
  %cmp250 = icmp slt i32 %call249, 0
  br i1 %cmp250, label %if.then.251, label %if.end.252

if.then.251:                                      ; preds = %if.end.248
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.252:                                       ; preds = %if.end.248
  %184 = load %struct._object*, %struct._object** %d, align 8
  %185 = load %struct._typeobject*, %struct._typeobject** @Param_type, align 8
  %186 = bitcast %struct._typeobject* %185 to %struct._object*
  %call253 = call i32 @PyDict_SetItemString(%struct._object* %184, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i32 0, i32 0), %struct._object* %186)
  %cmp254 = icmp slt i32 %call253, 0
  br i1 %cmp254, label %if.then.255, label %if.end.256

if.then.255:                                      ; preds = %if.end.252
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.256:                                       ; preds = %if.end.252
  %187 = load %struct._object*, %struct._object** %d, align 8
  %188 = load %struct._typeobject*, %struct._typeobject** @slice_type, align 8
  %189 = bitcast %struct._typeobject* %188 to %struct._object*
  %call257 = call i32 @PyDict_SetItemString(%struct._object* %187, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), %struct._object* %189)
  %cmp258 = icmp slt i32 %call257, 0
  br i1 %cmp258, label %if.then.259, label %if.end.260

if.then.259:                                      ; preds = %if.end.256
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.260:                                       ; preds = %if.end.256
  %190 = load %struct._object*, %struct._object** %d, align 8
  %191 = load %struct._typeobject*, %struct._typeobject** @Slice_type, align 8
  %192 = bitcast %struct._typeobject* %191 to %struct._object*
  %call261 = call i32 @PyDict_SetItemString(%struct._object* %190, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.121, i32 0, i32 0), %struct._object* %192)
  %cmp262 = icmp slt i32 %call261, 0
  br i1 %cmp262, label %if.then.263, label %if.end.264

if.then.263:                                      ; preds = %if.end.260
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.264:                                       ; preds = %if.end.260
  %193 = load %struct._object*, %struct._object** %d, align 8
  %194 = load %struct._typeobject*, %struct._typeobject** @ExtSlice_type, align 8
  %195 = bitcast %struct._typeobject* %194 to %struct._object*
  %call265 = call i32 @PyDict_SetItemString(%struct._object* %193, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.122, i32 0, i32 0), %struct._object* %195)
  %cmp266 = icmp slt i32 %call265, 0
  br i1 %cmp266, label %if.then.267, label %if.end.268

if.then.267:                                      ; preds = %if.end.264
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.268:                                       ; preds = %if.end.264
  %196 = load %struct._object*, %struct._object** %d, align 8
  %197 = load %struct._typeobject*, %struct._typeobject** @Index_type, align 8
  %198 = bitcast %struct._typeobject* %197 to %struct._object*
  %call269 = call i32 @PyDict_SetItemString(%struct._object* %196, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i32 0, i32 0), %struct._object* %198)
  %cmp270 = icmp slt i32 %call269, 0
  br i1 %cmp270, label %if.then.271, label %if.end.272

if.then.271:                                      ; preds = %if.end.268
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.272:                                       ; preds = %if.end.268
  %199 = load %struct._object*, %struct._object** %d, align 8
  %200 = load %struct._typeobject*, %struct._typeobject** @boolop_type, align 8
  %201 = bitcast %struct._typeobject* %200 to %struct._object*
  %call273 = call i32 @PyDict_SetItemString(%struct._object* %199, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.124, i32 0, i32 0), %struct._object* %201)
  %cmp274 = icmp slt i32 %call273, 0
  br i1 %cmp274, label %if.then.275, label %if.end.276

if.then.275:                                      ; preds = %if.end.272
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.276:                                       ; preds = %if.end.272
  %202 = load %struct._object*, %struct._object** %d, align 8
  %203 = load %struct._typeobject*, %struct._typeobject** @And_type, align 8
  %204 = bitcast %struct._typeobject* %203 to %struct._object*
  %call277 = call i32 @PyDict_SetItemString(%struct._object* %202, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.125, i32 0, i32 0), %struct._object* %204)
  %cmp278 = icmp slt i32 %call277, 0
  br i1 %cmp278, label %if.then.279, label %if.end.280

if.then.279:                                      ; preds = %if.end.276
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.280:                                       ; preds = %if.end.276
  %205 = load %struct._object*, %struct._object** %d, align 8
  %206 = load %struct._typeobject*, %struct._typeobject** @Or_type, align 8
  %207 = bitcast %struct._typeobject* %206 to %struct._object*
  %call281 = call i32 @PyDict_SetItemString(%struct._object* %205, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.126, i32 0, i32 0), %struct._object* %207)
  %cmp282 = icmp slt i32 %call281, 0
  br i1 %cmp282, label %if.then.283, label %if.end.284

if.then.283:                                      ; preds = %if.end.280
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.284:                                       ; preds = %if.end.280
  %208 = load %struct._object*, %struct._object** %d, align 8
  %209 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %210 = bitcast %struct._typeobject* %209 to %struct._object*
  %call285 = call i32 @PyDict_SetItemString(%struct._object* %208, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), %struct._object* %210)
  %cmp286 = icmp slt i32 %call285, 0
  br i1 %cmp286, label %if.then.287, label %if.end.288

if.then.287:                                      ; preds = %if.end.284
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.288:                                       ; preds = %if.end.284
  %211 = load %struct._object*, %struct._object** %d, align 8
  %212 = load %struct._typeobject*, %struct._typeobject** @Add_type, align 8
  %213 = bitcast %struct._typeobject* %212 to %struct._object*
  %call289 = call i32 @PyDict_SetItemString(%struct._object* %211, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.128, i32 0, i32 0), %struct._object* %213)
  %cmp290 = icmp slt i32 %call289, 0
  br i1 %cmp290, label %if.then.291, label %if.end.292

if.then.291:                                      ; preds = %if.end.288
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.292:                                       ; preds = %if.end.288
  %214 = load %struct._object*, %struct._object** %d, align 8
  %215 = load %struct._typeobject*, %struct._typeobject** @Sub_type, align 8
  %216 = bitcast %struct._typeobject* %215 to %struct._object*
  %call293 = call i32 @PyDict_SetItemString(%struct._object* %214, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.129, i32 0, i32 0), %struct._object* %216)
  %cmp294 = icmp slt i32 %call293, 0
  br i1 %cmp294, label %if.then.295, label %if.end.296

if.then.295:                                      ; preds = %if.end.292
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.296:                                       ; preds = %if.end.292
  %217 = load %struct._object*, %struct._object** %d, align 8
  %218 = load %struct._typeobject*, %struct._typeobject** @Mult_type, align 8
  %219 = bitcast %struct._typeobject* %218 to %struct._object*
  %call297 = call i32 @PyDict_SetItemString(%struct._object* %217, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i32 0, i32 0), %struct._object* %219)
  %cmp298 = icmp slt i32 %call297, 0
  br i1 %cmp298, label %if.then.299, label %if.end.300

if.then.299:                                      ; preds = %if.end.296
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.300:                                       ; preds = %if.end.296
  %220 = load %struct._object*, %struct._object** %d, align 8
  %221 = load %struct._typeobject*, %struct._typeobject** @Div_type, align 8
  %222 = bitcast %struct._typeobject* %221 to %struct._object*
  %call301 = call i32 @PyDict_SetItemString(%struct._object* %220, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.131, i32 0, i32 0), %struct._object* %222)
  %cmp302 = icmp slt i32 %call301, 0
  br i1 %cmp302, label %if.then.303, label %if.end.304

if.then.303:                                      ; preds = %if.end.300
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.304:                                       ; preds = %if.end.300
  %223 = load %struct._object*, %struct._object** %d, align 8
  %224 = load %struct._typeobject*, %struct._typeobject** @Mod_type, align 8
  %225 = bitcast %struct._typeobject* %224 to %struct._object*
  %call305 = call i32 @PyDict_SetItemString(%struct._object* %223, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.132, i32 0, i32 0), %struct._object* %225)
  %cmp306 = icmp slt i32 %call305, 0
  br i1 %cmp306, label %if.then.307, label %if.end.308

if.then.307:                                      ; preds = %if.end.304
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.308:                                       ; preds = %if.end.304
  %226 = load %struct._object*, %struct._object** %d, align 8
  %227 = load %struct._typeobject*, %struct._typeobject** @Pow_type, align 8
  %228 = bitcast %struct._typeobject* %227 to %struct._object*
  %call309 = call i32 @PyDict_SetItemString(%struct._object* %226, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.133, i32 0, i32 0), %struct._object* %228)
  %cmp310 = icmp slt i32 %call309, 0
  br i1 %cmp310, label %if.then.311, label %if.end.312

if.then.311:                                      ; preds = %if.end.308
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.312:                                       ; preds = %if.end.308
  %229 = load %struct._object*, %struct._object** %d, align 8
  %230 = load %struct._typeobject*, %struct._typeobject** @LShift_type, align 8
  %231 = bitcast %struct._typeobject* %230 to %struct._object*
  %call313 = call i32 @PyDict_SetItemString(%struct._object* %229, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.134, i32 0, i32 0), %struct._object* %231)
  %cmp314 = icmp slt i32 %call313, 0
  br i1 %cmp314, label %if.then.315, label %if.end.316

if.then.315:                                      ; preds = %if.end.312
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.316:                                       ; preds = %if.end.312
  %232 = load %struct._object*, %struct._object** %d, align 8
  %233 = load %struct._typeobject*, %struct._typeobject** @RShift_type, align 8
  %234 = bitcast %struct._typeobject* %233 to %struct._object*
  %call317 = call i32 @PyDict_SetItemString(%struct._object* %232, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.135, i32 0, i32 0), %struct._object* %234)
  %cmp318 = icmp slt i32 %call317, 0
  br i1 %cmp318, label %if.then.319, label %if.end.320

if.then.319:                                      ; preds = %if.end.316
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.320:                                       ; preds = %if.end.316
  %235 = load %struct._object*, %struct._object** %d, align 8
  %236 = load %struct._typeobject*, %struct._typeobject** @BitOr_type, align 8
  %237 = bitcast %struct._typeobject* %236 to %struct._object*
  %call321 = call i32 @PyDict_SetItemString(%struct._object* %235, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), %struct._object* %237)
  %cmp322 = icmp slt i32 %call321, 0
  br i1 %cmp322, label %if.then.323, label %if.end.324

if.then.323:                                      ; preds = %if.end.320
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.324:                                       ; preds = %if.end.320
  %238 = load %struct._object*, %struct._object** %d, align 8
  %239 = load %struct._typeobject*, %struct._typeobject** @BitXor_type, align 8
  %240 = bitcast %struct._typeobject* %239 to %struct._object*
  %call325 = call i32 @PyDict_SetItemString(%struct._object* %238, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.137, i32 0, i32 0), %struct._object* %240)
  %cmp326 = icmp slt i32 %call325, 0
  br i1 %cmp326, label %if.then.327, label %if.end.328

if.then.327:                                      ; preds = %if.end.324
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.328:                                       ; preds = %if.end.324
  %241 = load %struct._object*, %struct._object** %d, align 8
  %242 = load %struct._typeobject*, %struct._typeobject** @BitAnd_type, align 8
  %243 = bitcast %struct._typeobject* %242 to %struct._object*
  %call329 = call i32 @PyDict_SetItemString(%struct._object* %241, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.138, i32 0, i32 0), %struct._object* %243)
  %cmp330 = icmp slt i32 %call329, 0
  br i1 %cmp330, label %if.then.331, label %if.end.332

if.then.331:                                      ; preds = %if.end.328
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.332:                                       ; preds = %if.end.328
  %244 = load %struct._object*, %struct._object** %d, align 8
  %245 = load %struct._typeobject*, %struct._typeobject** @FloorDiv_type, align 8
  %246 = bitcast %struct._typeobject* %245 to %struct._object*
  %call333 = call i32 @PyDict_SetItemString(%struct._object* %244, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.139, i32 0, i32 0), %struct._object* %246)
  %cmp334 = icmp slt i32 %call333, 0
  br i1 %cmp334, label %if.then.335, label %if.end.336

if.then.335:                                      ; preds = %if.end.332
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.336:                                       ; preds = %if.end.332
  %247 = load %struct._object*, %struct._object** %d, align 8
  %248 = load %struct._typeobject*, %struct._typeobject** @unaryop_type, align 8
  %249 = bitcast %struct._typeobject* %248 to %struct._object*
  %call337 = call i32 @PyDict_SetItemString(%struct._object* %247, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.140, i32 0, i32 0), %struct._object* %249)
  %cmp338 = icmp slt i32 %call337, 0
  br i1 %cmp338, label %if.then.339, label %if.end.340

if.then.339:                                      ; preds = %if.end.336
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.340:                                       ; preds = %if.end.336
  %250 = load %struct._object*, %struct._object** %d, align 8
  %251 = load %struct._typeobject*, %struct._typeobject** @Invert_type, align 8
  %252 = bitcast %struct._typeobject* %251 to %struct._object*
  %call341 = call i32 @PyDict_SetItemString(%struct._object* %250, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0), %struct._object* %252)
  %cmp342 = icmp slt i32 %call341, 0
  br i1 %cmp342, label %if.then.343, label %if.end.344

if.then.343:                                      ; preds = %if.end.340
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.344:                                       ; preds = %if.end.340
  %253 = load %struct._object*, %struct._object** %d, align 8
  %254 = load %struct._typeobject*, %struct._typeobject** @Not_type, align 8
  %255 = bitcast %struct._typeobject* %254 to %struct._object*
  %call345 = call i32 @PyDict_SetItemString(%struct._object* %253, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.142, i32 0, i32 0), %struct._object* %255)
  %cmp346 = icmp slt i32 %call345, 0
  br i1 %cmp346, label %if.then.347, label %if.end.348

if.then.347:                                      ; preds = %if.end.344
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.348:                                       ; preds = %if.end.344
  %256 = load %struct._object*, %struct._object** %d, align 8
  %257 = load %struct._typeobject*, %struct._typeobject** @UAdd_type, align 8
  %258 = bitcast %struct._typeobject* %257 to %struct._object*
  %call349 = call i32 @PyDict_SetItemString(%struct._object* %256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), %struct._object* %258)
  %cmp350 = icmp slt i32 %call349, 0
  br i1 %cmp350, label %if.then.351, label %if.end.352

if.then.351:                                      ; preds = %if.end.348
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.352:                                       ; preds = %if.end.348
  %259 = load %struct._object*, %struct._object** %d, align 8
  %260 = load %struct._typeobject*, %struct._typeobject** @USub_type, align 8
  %261 = bitcast %struct._typeobject* %260 to %struct._object*
  %call353 = call i32 @PyDict_SetItemString(%struct._object* %259, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.144, i32 0, i32 0), %struct._object* %261)
  %cmp354 = icmp slt i32 %call353, 0
  br i1 %cmp354, label %if.then.355, label %if.end.356

if.then.355:                                      ; preds = %if.end.352
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.356:                                       ; preds = %if.end.352
  %262 = load %struct._object*, %struct._object** %d, align 8
  %263 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %264 = bitcast %struct._typeobject* %263 to %struct._object*
  %call357 = call i32 @PyDict_SetItemString(%struct._object* %262, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i32 0, i32 0), %struct._object* %264)
  %cmp358 = icmp slt i32 %call357, 0
  br i1 %cmp358, label %if.then.359, label %if.end.360

if.then.359:                                      ; preds = %if.end.356
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.360:                                       ; preds = %if.end.356
  %265 = load %struct._object*, %struct._object** %d, align 8
  %266 = load %struct._typeobject*, %struct._typeobject** @Eq_type, align 8
  %267 = bitcast %struct._typeobject* %266 to %struct._object*
  %call361 = call i32 @PyDict_SetItemString(%struct._object* %265, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i32 0, i32 0), %struct._object* %267)
  %cmp362 = icmp slt i32 %call361, 0
  br i1 %cmp362, label %if.then.363, label %if.end.364

if.then.363:                                      ; preds = %if.end.360
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.364:                                       ; preds = %if.end.360
  %268 = load %struct._object*, %struct._object** %d, align 8
  %269 = load %struct._typeobject*, %struct._typeobject** @NotEq_type, align 8
  %270 = bitcast %struct._typeobject* %269 to %struct._object*
  %call365 = call i32 @PyDict_SetItemString(%struct._object* %268, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i32 0, i32 0), %struct._object* %270)
  %cmp366 = icmp slt i32 %call365, 0
  br i1 %cmp366, label %if.then.367, label %if.end.368

if.then.367:                                      ; preds = %if.end.364
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.368:                                       ; preds = %if.end.364
  %271 = load %struct._object*, %struct._object** %d, align 8
  %272 = load %struct._typeobject*, %struct._typeobject** @Lt_type, align 8
  %273 = bitcast %struct._typeobject* %272 to %struct._object*
  %call369 = call i32 @PyDict_SetItemString(%struct._object* %271, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.148, i32 0, i32 0), %struct._object* %273)
  %cmp370 = icmp slt i32 %call369, 0
  br i1 %cmp370, label %if.then.371, label %if.end.372

if.then.371:                                      ; preds = %if.end.368
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.372:                                       ; preds = %if.end.368
  %274 = load %struct._object*, %struct._object** %d, align 8
  %275 = load %struct._typeobject*, %struct._typeobject** @LtE_type, align 8
  %276 = bitcast %struct._typeobject* %275 to %struct._object*
  %call373 = call i32 @PyDict_SetItemString(%struct._object* %274, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.149, i32 0, i32 0), %struct._object* %276)
  %cmp374 = icmp slt i32 %call373, 0
  br i1 %cmp374, label %if.then.375, label %if.end.376

if.then.375:                                      ; preds = %if.end.372
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.376:                                       ; preds = %if.end.372
  %277 = load %struct._object*, %struct._object** %d, align 8
  %278 = load %struct._typeobject*, %struct._typeobject** @Gt_type, align 8
  %279 = bitcast %struct._typeobject* %278 to %struct._object*
  %call377 = call i32 @PyDict_SetItemString(%struct._object* %277, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.150, i32 0, i32 0), %struct._object* %279)
  %cmp378 = icmp slt i32 %call377, 0
  br i1 %cmp378, label %if.then.379, label %if.end.380

if.then.379:                                      ; preds = %if.end.376
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.380:                                       ; preds = %if.end.376
  %280 = load %struct._object*, %struct._object** %d, align 8
  %281 = load %struct._typeobject*, %struct._typeobject** @GtE_type, align 8
  %282 = bitcast %struct._typeobject* %281 to %struct._object*
  %call381 = call i32 @PyDict_SetItemString(%struct._object* %280, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.151, i32 0, i32 0), %struct._object* %282)
  %cmp382 = icmp slt i32 %call381, 0
  br i1 %cmp382, label %if.then.383, label %if.end.384

if.then.383:                                      ; preds = %if.end.380
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.384:                                       ; preds = %if.end.380
  %283 = load %struct._object*, %struct._object** %d, align 8
  %284 = load %struct._typeobject*, %struct._typeobject** @Is_type, align 8
  %285 = bitcast %struct._typeobject* %284 to %struct._object*
  %call385 = call i32 @PyDict_SetItemString(%struct._object* %283, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.152, i32 0, i32 0), %struct._object* %285)
  %cmp386 = icmp slt i32 %call385, 0
  br i1 %cmp386, label %if.then.387, label %if.end.388

if.then.387:                                      ; preds = %if.end.384
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.388:                                       ; preds = %if.end.384
  %286 = load %struct._object*, %struct._object** %d, align 8
  %287 = load %struct._typeobject*, %struct._typeobject** @IsNot_type, align 8
  %288 = bitcast %struct._typeobject* %287 to %struct._object*
  %call389 = call i32 @PyDict_SetItemString(%struct._object* %286, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.153, i32 0, i32 0), %struct._object* %288)
  %cmp390 = icmp slt i32 %call389, 0
  br i1 %cmp390, label %if.then.391, label %if.end.392

if.then.391:                                      ; preds = %if.end.388
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.392:                                       ; preds = %if.end.388
  %289 = load %struct._object*, %struct._object** %d, align 8
  %290 = load %struct._typeobject*, %struct._typeobject** @In_type, align 8
  %291 = bitcast %struct._typeobject* %290 to %struct._object*
  %call393 = call i32 @PyDict_SetItemString(%struct._object* %289, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.154, i32 0, i32 0), %struct._object* %291)
  %cmp394 = icmp slt i32 %call393, 0
  br i1 %cmp394, label %if.then.395, label %if.end.396

if.then.395:                                      ; preds = %if.end.392
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.396:                                       ; preds = %if.end.392
  %292 = load %struct._object*, %struct._object** %d, align 8
  %293 = load %struct._typeobject*, %struct._typeobject** @NotIn_type, align 8
  %294 = bitcast %struct._typeobject* %293 to %struct._object*
  %call397 = call i32 @PyDict_SetItemString(%struct._object* %292, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.155, i32 0, i32 0), %struct._object* %294)
  %cmp398 = icmp slt i32 %call397, 0
  br i1 %cmp398, label %if.then.399, label %if.end.400

if.then.399:                                      ; preds = %if.end.396
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.400:                                       ; preds = %if.end.396
  %295 = load %struct._object*, %struct._object** %d, align 8
  %296 = load %struct._typeobject*, %struct._typeobject** @comprehension_type, align 8
  %297 = bitcast %struct._typeobject* %296 to %struct._object*
  %call401 = call i32 @PyDict_SetItemString(%struct._object* %295, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.156, i32 0, i32 0), %struct._object* %297)
  %cmp402 = icmp slt i32 %call401, 0
  br i1 %cmp402, label %if.then.403, label %if.end.404

if.then.403:                                      ; preds = %if.end.400
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.404:                                       ; preds = %if.end.400
  %298 = load %struct._object*, %struct._object** %d, align 8
  %299 = load %struct._typeobject*, %struct._typeobject** @excepthandler_type, align 8
  %300 = bitcast %struct._typeobject* %299 to %struct._object*
  %call405 = call i32 @PyDict_SetItemString(%struct._object* %298, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.157, i32 0, i32 0), %struct._object* %300)
  %cmp406 = icmp slt i32 %call405, 0
  br i1 %cmp406, label %if.then.407, label %if.end.408

if.then.407:                                      ; preds = %if.end.404
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.408:                                       ; preds = %if.end.404
  %301 = load %struct._object*, %struct._object** %d, align 8
  %302 = load %struct._typeobject*, %struct._typeobject** @ExceptHandler_type, align 8
  %303 = bitcast %struct._typeobject* %302 to %struct._object*
  %call409 = call i32 @PyDict_SetItemString(%struct._object* %301, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.158, i32 0, i32 0), %struct._object* %303)
  %cmp410 = icmp slt i32 %call409, 0
  br i1 %cmp410, label %if.then.411, label %if.end.412

if.then.411:                                      ; preds = %if.end.408
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.412:                                       ; preds = %if.end.408
  %304 = load %struct._object*, %struct._object** %d, align 8
  %305 = load %struct._typeobject*, %struct._typeobject** @arguments_type, align 8
  %306 = bitcast %struct._typeobject* %305 to %struct._object*
  %call413 = call i32 @PyDict_SetItemString(%struct._object* %304, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.159, i32 0, i32 0), %struct._object* %306)
  %cmp414 = icmp slt i32 %call413, 0
  br i1 %cmp414, label %if.then.415, label %if.end.416

if.then.415:                                      ; preds = %if.end.412
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.416:                                       ; preds = %if.end.412
  %307 = load %struct._object*, %struct._object** %d, align 8
  %308 = load %struct._typeobject*, %struct._typeobject** @arg_type, align 8
  %309 = bitcast %struct._typeobject* %308 to %struct._object*
  %call417 = call i32 @PyDict_SetItemString(%struct._object* %307, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i32 0, i32 0), %struct._object* %309)
  %cmp418 = icmp slt i32 %call417, 0
  br i1 %cmp418, label %if.then.419, label %if.end.420

if.then.419:                                      ; preds = %if.end.416
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.420:                                       ; preds = %if.end.416
  %310 = load %struct._object*, %struct._object** %d, align 8
  %311 = load %struct._typeobject*, %struct._typeobject** @keyword_type, align 8
  %312 = bitcast %struct._typeobject* %311 to %struct._object*
  %call421 = call i32 @PyDict_SetItemString(%struct._object* %310, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0), %struct._object* %312)
  %cmp422 = icmp slt i32 %call421, 0
  br i1 %cmp422, label %if.then.423, label %if.end.424

if.then.423:                                      ; preds = %if.end.420
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.424:                                       ; preds = %if.end.420
  %313 = load %struct._object*, %struct._object** %d, align 8
  %314 = load %struct._typeobject*, %struct._typeobject** @alias_type, align 8
  %315 = bitcast %struct._typeobject* %314 to %struct._object*
  %call425 = call i32 @PyDict_SetItemString(%struct._object* %313, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.162, i32 0, i32 0), %struct._object* %315)
  %cmp426 = icmp slt i32 %call425, 0
  br i1 %cmp426, label %if.then.427, label %if.end.428

if.then.427:                                      ; preds = %if.end.424
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.428:                                       ; preds = %if.end.424
  %316 = load %struct._object*, %struct._object** %d, align 8
  %317 = load %struct._typeobject*, %struct._typeobject** @withitem_type, align 8
  %318 = bitcast %struct._typeobject* %317 to %struct._object*
  %call429 = call i32 @PyDict_SetItemString(%struct._object* %316, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.163, i32 0, i32 0), %struct._object* %318)
  %cmp430 = icmp slt i32 %call429, 0
  br i1 %cmp430, label %if.then.431, label %if.end.432

if.then.431:                                      ; preds = %if.end.428
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.432:                                       ; preds = %if.end.428
  %319 = load %struct._object*, %struct._object** %m, align 8
  store %struct._object* %319, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.432, %if.then.431, %if.then.427, %if.then.423, %if.then.419, %if.then.415, %if.then.411, %if.then.407, %if.then.403, %if.then.399, %if.then.395, %if.then.391, %if.then.387, %if.then.383, %if.then.379, %if.then.375, %if.then.371, %if.then.367, %if.then.363, %if.then.359, %if.then.355, %if.then.351, %if.then.347, %if.then.343, %if.then.339, %if.then.335, %if.then.331, %if.then.327, %if.then.323, %if.then.319, %if.then.315, %if.then.311, %if.then.307, %if.then.303, %if.then.299, %if.then.295, %if.then.291, %if.then.287, %if.then.283, %if.then.279, %if.then.275, %if.then.271, %if.then.267, %if.then.263, %if.then.259, %if.then.255, %if.then.251, %if.then.247, %if.then.243, %if.then.239, %if.then.235, %if.then.231, %if.then.227, %if.then.223, %if.then.219, %if.then.215, %if.then.211, %if.then.207, %if.then.203, %if.then.199, %if.then.195, %if.then.191, %if.then.187, %if.then.183, %if.then.179, %if.then.175, %if.then.171, %if.then.167, %if.then.163, %if.then.159, %if.then.155, %if.then.151, %if.then.147, %if.then.143, %if.then.139, %if.then.135, %if.then.131, %if.then.127, %if.then.123, %if.then.119, %if.then.115, %if.then.111, %if.then.107, %if.then.103, %if.then.99, %if.then.95, %if.then.91, %if.then.87, %if.then.83, %if.then.79, %if.then.75, %if.then.71, %if.then.67, %if.then.63, %if.then.59, %if.then.55, %if.then.51, %if.then.47, %if.then.43, %if.then.39, %if.then.35, %if.then.31, %if.then.27, %if.then.23, %if.then.19, %if.then.15, %if.then.11, %if.then.7, %if.then.3, %if.then
  %320 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %320
}

; Function Attrs: nounwind uwtable
define internal i32 @init_types() #0 {
entry:
  %retval = alloca i32, align 4
  %0 = load i32, i32* @init_types.initialized, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %call = call i32 @add_ast_fields()
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.2:                                         ; preds = %if.end
  %call3 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i32 0, i32 0), %struct._typeobject* @AST_type, i8** null, i32 0)
  store %struct._typeobject* %call3, %struct._typeobject** @mod_type, align 8
  %1 = load %struct._typeobject*, %struct._typeobject** @mod_type, align 8
  %tobool4 = icmp ne %struct._typeobject* %1, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.end.2
  store i32 0, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.end.2
  %2 = load %struct._typeobject*, %struct._typeobject** @mod_type, align 8
  %call7 = call i32 @add_attributes(%struct._typeobject* %2, i8** null, i32 0)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.6
  store i32 0, i32* %retval
  br label %return

if.end.10:                                        ; preds = %if.end.6
  %3 = load %struct._typeobject*, %struct._typeobject** @mod_type, align 8
  %call11 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i32 0, i32 0), %struct._typeobject* %3, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Module_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call11, %struct._typeobject** @Module_type, align 8
  %4 = load %struct._typeobject*, %struct._typeobject** @Module_type, align 8
  %tobool12 = icmp ne %struct._typeobject* %4, null
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.end.10
  store i32 0, i32* %retval
  br label %return

if.end.14:                                        ; preds = %if.end.10
  %5 = load %struct._typeobject*, %struct._typeobject** @mod_type, align 8
  %call15 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i32 0, i32 0), %struct._typeobject* %5, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Interactive_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call15, %struct._typeobject** @Interactive_type, align 8
  %6 = load %struct._typeobject*, %struct._typeobject** @Interactive_type, align 8
  %tobool16 = icmp ne %struct._typeobject* %6, null
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %if.end.14
  store i32 0, i32* %retval
  br label %return

if.end.18:                                        ; preds = %if.end.14
  %7 = load %struct._typeobject*, %struct._typeobject** @mod_type, align 8
  %call19 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i32 0, i32 0), %struct._typeobject* %7, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Expression_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call19, %struct._typeobject** @Expression_type, align 8
  %8 = load %struct._typeobject*, %struct._typeobject** @Expression_type, align 8
  %tobool20 = icmp ne %struct._typeobject* %8, null
  br i1 %tobool20, label %if.end.22, label %if.then.21

if.then.21:                                       ; preds = %if.end.18
  store i32 0, i32* %retval
  br label %return

if.end.22:                                        ; preds = %if.end.18
  %9 = load %struct._typeobject*, %struct._typeobject** @mod_type, align 8
  %call23 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), %struct._typeobject* %9, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Suite_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call23, %struct._typeobject** @Suite_type, align 8
  %10 = load %struct._typeobject*, %struct._typeobject** @Suite_type, align 8
  %tobool24 = icmp ne %struct._typeobject* %10, null
  br i1 %tobool24, label %if.end.26, label %if.then.25

if.then.25:                                       ; preds = %if.end.22
  store i32 0, i32* %retval
  br label %return

if.end.26:                                        ; preds = %if.end.22
  %call27 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), %struct._typeobject* @AST_type, i8** null, i32 0)
  store %struct._typeobject* %call27, %struct._typeobject** @stmt_type, align 8
  %11 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %tobool28 = icmp ne %struct._typeobject* %11, null
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %if.end.26
  store i32 0, i32* %retval
  br label %return

if.end.30:                                        ; preds = %if.end.26
  %12 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call31 = call i32 @add_attributes(%struct._typeobject* %12, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @stmt_attributes, i32 0, i32 0), i32 2)
  %tobool32 = icmp ne i32 %call31, 0
  br i1 %tobool32, label %if.end.34, label %if.then.33

if.then.33:                                       ; preds = %if.end.30
  store i32 0, i32* %retval
  br label %return

if.end.34:                                        ; preds = %if.end.30
  %13 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call35 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.65, i32 0, i32 0), %struct._typeobject* %13, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @FunctionDef_fields, i32 0, i32 0), i32 5)
  store %struct._typeobject* %call35, %struct._typeobject** @FunctionDef_type, align 8
  %14 = load %struct._typeobject*, %struct._typeobject** @FunctionDef_type, align 8
  %tobool36 = icmp ne %struct._typeobject* %14, null
  br i1 %tobool36, label %if.end.38, label %if.then.37

if.then.37:                                       ; preds = %if.end.34
  store i32 0, i32* %retval
  br label %return

if.end.38:                                        ; preds = %if.end.34
  %15 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call39 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i32 0, i32 0), %struct._typeobject* %15, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @ClassDef_fields, i32 0, i32 0), i32 7)
  store %struct._typeobject* %call39, %struct._typeobject** @ClassDef_type, align 8
  %16 = load %struct._typeobject*, %struct._typeobject** @ClassDef_type, align 8
  %tobool40 = icmp ne %struct._typeobject* %16, null
  br i1 %tobool40, label %if.end.42, label %if.then.41

if.then.41:                                       ; preds = %if.end.38
  store i32 0, i32* %retval
  br label %return

if.end.42:                                        ; preds = %if.end.38
  %17 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call43 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i32 0, i32 0), %struct._typeobject* %17, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Return_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call43, %struct._typeobject** @Return_type, align 8
  %18 = load %struct._typeobject*, %struct._typeobject** @Return_type, align 8
  %tobool44 = icmp ne %struct._typeobject* %18, null
  br i1 %tobool44, label %if.end.46, label %if.then.45

if.then.45:                                       ; preds = %if.end.42
  store i32 0, i32* %retval
  br label %return

if.end.46:                                        ; preds = %if.end.42
  %19 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call47 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), %struct._typeobject* %19, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Delete_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call47, %struct._typeobject** @Delete_type, align 8
  %20 = load %struct._typeobject*, %struct._typeobject** @Delete_type, align 8
  %tobool48 = icmp ne %struct._typeobject* %20, null
  br i1 %tobool48, label %if.end.50, label %if.then.49

if.then.49:                                       ; preds = %if.end.46
  store i32 0, i32* %retval
  br label %return

if.end.50:                                        ; preds = %if.end.46
  %21 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call51 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0), %struct._typeobject* %21, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @Assign_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call51, %struct._typeobject** @Assign_type, align 8
  %22 = load %struct._typeobject*, %struct._typeobject** @Assign_type, align 8
  %tobool52 = icmp ne %struct._typeobject* %22, null
  br i1 %tobool52, label %if.end.54, label %if.then.53

if.then.53:                                       ; preds = %if.end.50
  store i32 0, i32* %retval
  br label %return

if.end.54:                                        ; preds = %if.end.50
  %23 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call55 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i32 0, i32 0), %struct._typeobject* %23, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @AugAssign_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call55, %struct._typeobject** @AugAssign_type, align 8
  %24 = load %struct._typeobject*, %struct._typeobject** @AugAssign_type, align 8
  %tobool56 = icmp ne %struct._typeobject* %24, null
  br i1 %tobool56, label %if.end.58, label %if.then.57

if.then.57:                                       ; preds = %if.end.54
  store i32 0, i32* %retval
  br label %return

if.end.58:                                        ; preds = %if.end.54
  %25 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call59 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), %struct._typeobject* %25, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @For_fields, i32 0, i32 0), i32 4)
  store %struct._typeobject* %call59, %struct._typeobject** @For_type, align 8
  %26 = load %struct._typeobject*, %struct._typeobject** @For_type, align 8
  %tobool60 = icmp ne %struct._typeobject* %26, null
  br i1 %tobool60, label %if.end.62, label %if.then.61

if.then.61:                                       ; preds = %if.end.58
  store i32 0, i32* %retval
  br label %return

if.end.62:                                        ; preds = %if.end.58
  %27 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call63 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i32 0, i32 0), %struct._typeobject* %27, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @While_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call63, %struct._typeobject** @While_type, align 8
  %28 = load %struct._typeobject*, %struct._typeobject** @While_type, align 8
  %tobool64 = icmp ne %struct._typeobject* %28, null
  br i1 %tobool64, label %if.end.66, label %if.then.65

if.then.65:                                       ; preds = %if.end.62
  store i32 0, i32* %retval
  br label %return

if.end.66:                                        ; preds = %if.end.62
  %29 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call67 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), %struct._typeobject* %29, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @If_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call67, %struct._typeobject** @If_type, align 8
  %30 = load %struct._typeobject*, %struct._typeobject** @If_type, align 8
  %tobool68 = icmp ne %struct._typeobject* %30, null
  br i1 %tobool68, label %if.end.70, label %if.then.69

if.then.69:                                       ; preds = %if.end.66
  store i32 0, i32* %retval
  br label %return

if.end.70:                                        ; preds = %if.end.66
  %31 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call71 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0), %struct._typeobject* %31, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @With_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call71, %struct._typeobject** @With_type, align 8
  %32 = load %struct._typeobject*, %struct._typeobject** @With_type, align 8
  %tobool72 = icmp ne %struct._typeobject* %32, null
  br i1 %tobool72, label %if.end.74, label %if.then.73

if.then.73:                                       ; preds = %if.end.70
  store i32 0, i32* %retval
  br label %return

if.end.74:                                        ; preds = %if.end.70
  %33 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call75 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), %struct._typeobject* %33, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @Raise_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call75, %struct._typeobject** @Raise_type, align 8
  %34 = load %struct._typeobject*, %struct._typeobject** @Raise_type, align 8
  %tobool76 = icmp ne %struct._typeobject* %34, null
  br i1 %tobool76, label %if.end.78, label %if.then.77

if.then.77:                                       ; preds = %if.end.74
  store i32 0, i32* %retval
  br label %return

if.end.78:                                        ; preds = %if.end.74
  %35 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call79 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct._typeobject* %35, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @Try_fields, i32 0, i32 0), i32 4)
  store %struct._typeobject* %call79, %struct._typeobject** @Try_type, align 8
  %36 = load %struct._typeobject*, %struct._typeobject** @Try_type, align 8
  %tobool80 = icmp ne %struct._typeobject* %36, null
  br i1 %tobool80, label %if.end.82, label %if.then.81

if.then.81:                                       ; preds = %if.end.78
  store i32 0, i32* %retval
  br label %return

if.end.82:                                        ; preds = %if.end.78
  %37 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call83 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i32 0, i32 0), %struct._typeobject* %37, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @Assert_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call83, %struct._typeobject** @Assert_type, align 8
  %38 = load %struct._typeobject*, %struct._typeobject** @Assert_type, align 8
  %tobool84 = icmp ne %struct._typeobject* %38, null
  br i1 %tobool84, label %if.end.86, label %if.then.85

if.then.85:                                       ; preds = %if.end.82
  store i32 0, i32* %retval
  br label %return

if.end.86:                                        ; preds = %if.end.82
  %39 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call87 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i32 0, i32 0), %struct._typeobject* %39, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Import_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call87, %struct._typeobject** @Import_type, align 8
  %40 = load %struct._typeobject*, %struct._typeobject** @Import_type, align 8
  %tobool88 = icmp ne %struct._typeobject* %40, null
  br i1 %tobool88, label %if.end.90, label %if.then.89

if.then.89:                                       ; preds = %if.end.86
  store i32 0, i32* %retval
  br label %return

if.end.90:                                        ; preds = %if.end.86
  %41 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call91 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.79, i32 0, i32 0), %struct._typeobject* %41, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @ImportFrom_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call91, %struct._typeobject** @ImportFrom_type, align 8
  %42 = load %struct._typeobject*, %struct._typeobject** @ImportFrom_type, align 8
  %tobool92 = icmp ne %struct._typeobject* %42, null
  br i1 %tobool92, label %if.end.94, label %if.then.93

if.then.93:                                       ; preds = %if.end.90
  store i32 0, i32* %retval
  br label %return

if.end.94:                                        ; preds = %if.end.90
  %43 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call95 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), %struct._typeobject* %43, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Global_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call95, %struct._typeobject** @Global_type, align 8
  %44 = load %struct._typeobject*, %struct._typeobject** @Global_type, align 8
  %tobool96 = icmp ne %struct._typeobject* %44, null
  br i1 %tobool96, label %if.end.98, label %if.then.97

if.then.97:                                       ; preds = %if.end.94
  store i32 0, i32* %retval
  br label %return

if.end.98:                                        ; preds = %if.end.94
  %45 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call99 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), %struct._typeobject* %45, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Nonlocal_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call99, %struct._typeobject** @Nonlocal_type, align 8
  %46 = load %struct._typeobject*, %struct._typeobject** @Nonlocal_type, align 8
  %tobool100 = icmp ne %struct._typeobject* %46, null
  br i1 %tobool100, label %if.end.102, label %if.then.101

if.then.101:                                      ; preds = %if.end.98
  store i32 0, i32* %retval
  br label %return

if.end.102:                                       ; preds = %if.end.98
  %47 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call103 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i32 0, i32 0), %struct._typeobject* %47, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Expr_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call103, %struct._typeobject** @Expr_type, align 8
  %48 = load %struct._typeobject*, %struct._typeobject** @Expr_type, align 8
  %tobool104 = icmp ne %struct._typeobject* %48, null
  br i1 %tobool104, label %if.end.106, label %if.then.105

if.then.105:                                      ; preds = %if.end.102
  store i32 0, i32* %retval
  br label %return

if.end.106:                                       ; preds = %if.end.102
  %49 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call107 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0), %struct._typeobject* %49, i8** null, i32 0)
  store %struct._typeobject* %call107, %struct._typeobject** @Pass_type, align 8
  %50 = load %struct._typeobject*, %struct._typeobject** @Pass_type, align 8
  %tobool108 = icmp ne %struct._typeobject* %50, null
  br i1 %tobool108, label %if.end.110, label %if.then.109

if.then.109:                                      ; preds = %if.end.106
  store i32 0, i32* %retval
  br label %return

if.end.110:                                       ; preds = %if.end.106
  %51 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call111 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), %struct._typeobject* %51, i8** null, i32 0)
  store %struct._typeobject* %call111, %struct._typeobject** @Break_type, align 8
  %52 = load %struct._typeobject*, %struct._typeobject** @Break_type, align 8
  %tobool112 = icmp ne %struct._typeobject* %52, null
  br i1 %tobool112, label %if.end.114, label %if.then.113

if.then.113:                                      ; preds = %if.end.110
  store i32 0, i32* %retval
  br label %return

if.end.114:                                       ; preds = %if.end.110
  %53 = load %struct._typeobject*, %struct._typeobject** @stmt_type, align 8
  %call115 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0), %struct._typeobject* %53, i8** null, i32 0)
  store %struct._typeobject* %call115, %struct._typeobject** @Continue_type, align 8
  %54 = load %struct._typeobject*, %struct._typeobject** @Continue_type, align 8
  %tobool116 = icmp ne %struct._typeobject* %54, null
  br i1 %tobool116, label %if.end.118, label %if.then.117

if.then.117:                                      ; preds = %if.end.114
  store i32 0, i32* %retval
  br label %return

if.end.118:                                       ; preds = %if.end.114
  %call119 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i32 0, i32 0), %struct._typeobject* @AST_type, i8** null, i32 0)
  store %struct._typeobject* %call119, %struct._typeobject** @expr_type, align 8
  %55 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %tobool120 = icmp ne %struct._typeobject* %55, null
  br i1 %tobool120, label %if.end.122, label %if.then.121

if.then.121:                                      ; preds = %if.end.118
  store i32 0, i32* %retval
  br label %return

if.end.122:                                       ; preds = %if.end.118
  %56 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call123 = call i32 @add_attributes(%struct._typeobject* %56, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @expr_attributes, i32 0, i32 0), i32 2)
  %tobool124 = icmp ne i32 %call123, 0
  br i1 %tobool124, label %if.end.126, label %if.then.125

if.then.125:                                      ; preds = %if.end.122
  store i32 0, i32* %retval
  br label %return

if.end.126:                                       ; preds = %if.end.122
  %57 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call127 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), %struct._typeobject* %57, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @BoolOp_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call127, %struct._typeobject** @BoolOp_type, align 8
  %58 = load %struct._typeobject*, %struct._typeobject** @BoolOp_type, align 8
  %tobool128 = icmp ne %struct._typeobject* %58, null
  br i1 %tobool128, label %if.end.130, label %if.then.129

if.then.129:                                      ; preds = %if.end.126
  store i32 0, i32* %retval
  br label %return

if.end.130:                                       ; preds = %if.end.126
  %59 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call131 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i32 0, i32 0), %struct._typeobject* %59, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @BinOp_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call131, %struct._typeobject** @BinOp_type, align 8
  %60 = load %struct._typeobject*, %struct._typeobject** @BinOp_type, align 8
  %tobool132 = icmp ne %struct._typeobject* %60, null
  br i1 %tobool132, label %if.end.134, label %if.then.133

if.then.133:                                      ; preds = %if.end.130
  store i32 0, i32* %retval
  br label %return

if.end.134:                                       ; preds = %if.end.130
  %61 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call135 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89, i32 0, i32 0), %struct._typeobject* %61, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @UnaryOp_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call135, %struct._typeobject** @UnaryOp_type, align 8
  %62 = load %struct._typeobject*, %struct._typeobject** @UnaryOp_type, align 8
  %tobool136 = icmp ne %struct._typeobject* %62, null
  br i1 %tobool136, label %if.end.138, label %if.then.137

if.then.137:                                      ; preds = %if.end.134
  store i32 0, i32* %retval
  br label %return

if.end.138:                                       ; preds = %if.end.134
  %63 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call139 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i32 0, i32 0), %struct._typeobject* %63, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @Lambda_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call139, %struct._typeobject** @Lambda_type, align 8
  %64 = load %struct._typeobject*, %struct._typeobject** @Lambda_type, align 8
  %tobool140 = icmp ne %struct._typeobject* %64, null
  br i1 %tobool140, label %if.end.142, label %if.then.141

if.then.141:                                      ; preds = %if.end.138
  store i32 0, i32* %retval
  br label %return

if.end.142:                                       ; preds = %if.end.138
  %65 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call143 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i32 0, i32 0), %struct._typeobject* %65, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @IfExp_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call143, %struct._typeobject** @IfExp_type, align 8
  %66 = load %struct._typeobject*, %struct._typeobject** @IfExp_type, align 8
  %tobool144 = icmp ne %struct._typeobject* %66, null
  br i1 %tobool144, label %if.end.146, label %if.then.145

if.then.145:                                      ; preds = %if.end.142
  store i32 0, i32* %retval
  br label %return

if.end.146:                                       ; preds = %if.end.142
  %67 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call147 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i32 0, i32 0), %struct._typeobject* %67, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @Dict_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call147, %struct._typeobject** @Dict_type, align 8
  %68 = load %struct._typeobject*, %struct._typeobject** @Dict_type, align 8
  %tobool148 = icmp ne %struct._typeobject* %68, null
  br i1 %tobool148, label %if.end.150, label %if.then.149

if.then.149:                                      ; preds = %if.end.146
  store i32 0, i32* %retval
  br label %return

if.end.150:                                       ; preds = %if.end.146
  %69 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call151 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.93, i32 0, i32 0), %struct._typeobject* %69, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Set_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call151, %struct._typeobject** @Set_type, align 8
  %70 = load %struct._typeobject*, %struct._typeobject** @Set_type, align 8
  %tobool152 = icmp ne %struct._typeobject* %70, null
  br i1 %tobool152, label %if.end.154, label %if.then.153

if.then.153:                                      ; preds = %if.end.150
  store i32 0, i32* %retval
  br label %return

if.end.154:                                       ; preds = %if.end.150
  %71 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call155 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.94, i32 0, i32 0), %struct._typeobject* %71, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @ListComp_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call155, %struct._typeobject** @ListComp_type, align 8
  %72 = load %struct._typeobject*, %struct._typeobject** @ListComp_type, align 8
  %tobool156 = icmp ne %struct._typeobject* %72, null
  br i1 %tobool156, label %if.end.158, label %if.then.157

if.then.157:                                      ; preds = %if.end.154
  store i32 0, i32* %retval
  br label %return

if.end.158:                                       ; preds = %if.end.154
  %73 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call159 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i32 0, i32 0), %struct._typeobject* %73, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @SetComp_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call159, %struct._typeobject** @SetComp_type, align 8
  %74 = load %struct._typeobject*, %struct._typeobject** @SetComp_type, align 8
  %tobool160 = icmp ne %struct._typeobject* %74, null
  br i1 %tobool160, label %if.end.162, label %if.then.161

if.then.161:                                      ; preds = %if.end.158
  store i32 0, i32* %retval
  br label %return

if.end.162:                                       ; preds = %if.end.158
  %75 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call163 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.96, i32 0, i32 0), %struct._typeobject* %75, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @DictComp_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call163, %struct._typeobject** @DictComp_type, align 8
  %76 = load %struct._typeobject*, %struct._typeobject** @DictComp_type, align 8
  %tobool164 = icmp ne %struct._typeobject* %76, null
  br i1 %tobool164, label %if.end.166, label %if.then.165

if.then.165:                                      ; preds = %if.end.162
  store i32 0, i32* %retval
  br label %return

if.end.166:                                       ; preds = %if.end.162
  %77 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call167 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), %struct._typeobject* %77, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @GeneratorExp_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call167, %struct._typeobject** @GeneratorExp_type, align 8
  %78 = load %struct._typeobject*, %struct._typeobject** @GeneratorExp_type, align 8
  %tobool168 = icmp ne %struct._typeobject* %78, null
  br i1 %tobool168, label %if.end.170, label %if.then.169

if.then.169:                                      ; preds = %if.end.166
  store i32 0, i32* %retval
  br label %return

if.end.170:                                       ; preds = %if.end.166
  %79 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call171 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.98, i32 0, i32 0), %struct._typeobject* %79, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Yield_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call171, %struct._typeobject** @Yield_type, align 8
  %80 = load %struct._typeobject*, %struct._typeobject** @Yield_type, align 8
  %tobool172 = icmp ne %struct._typeobject* %80, null
  br i1 %tobool172, label %if.end.174, label %if.then.173

if.then.173:                                      ; preds = %if.end.170
  store i32 0, i32* %retval
  br label %return

if.end.174:                                       ; preds = %if.end.170
  %81 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call175 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.99, i32 0, i32 0), %struct._typeobject* %81, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @YieldFrom_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call175, %struct._typeobject** @YieldFrom_type, align 8
  %82 = load %struct._typeobject*, %struct._typeobject** @YieldFrom_type, align 8
  %tobool176 = icmp ne %struct._typeobject* %82, null
  br i1 %tobool176, label %if.end.178, label %if.then.177

if.then.177:                                      ; preds = %if.end.174
  store i32 0, i32* %retval
  br label %return

if.end.178:                                       ; preds = %if.end.174
  %83 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call179 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.100, i32 0, i32 0), %struct._typeobject* %83, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @Compare_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call179, %struct._typeobject** @Compare_type, align 8
  %84 = load %struct._typeobject*, %struct._typeobject** @Compare_type, align 8
  %tobool180 = icmp ne %struct._typeobject* %84, null
  br i1 %tobool180, label %if.end.182, label %if.then.181

if.then.181:                                      ; preds = %if.end.178
  store i32 0, i32* %retval
  br label %return

if.end.182:                                       ; preds = %if.end.178
  %85 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call183 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), %struct._typeobject* %85, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @Call_fields, i32 0, i32 0), i32 5)
  store %struct._typeobject* %call183, %struct._typeobject** @Call_type, align 8
  %86 = load %struct._typeobject*, %struct._typeobject** @Call_type, align 8
  %tobool184 = icmp ne %struct._typeobject* %86, null
  br i1 %tobool184, label %if.end.186, label %if.then.185

if.then.185:                                      ; preds = %if.end.182
  store i32 0, i32* %retval
  br label %return

if.end.186:                                       ; preds = %if.end.182
  %87 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call187 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.102, i32 0, i32 0), %struct._typeobject* %87, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Num_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call187, %struct._typeobject** @Num_type, align 8
  %88 = load %struct._typeobject*, %struct._typeobject** @Num_type, align 8
  %tobool188 = icmp ne %struct._typeobject* %88, null
  br i1 %tobool188, label %if.end.190, label %if.then.189

if.then.189:                                      ; preds = %if.end.186
  store i32 0, i32* %retval
  br label %return

if.end.190:                                       ; preds = %if.end.186
  %89 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call191 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0), %struct._typeobject* %89, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Str_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call191, %struct._typeobject** @Str_type, align 8
  %90 = load %struct._typeobject*, %struct._typeobject** @Str_type, align 8
  %tobool192 = icmp ne %struct._typeobject* %90, null
  br i1 %tobool192, label %if.end.194, label %if.then.193

if.then.193:                                      ; preds = %if.end.190
  store i32 0, i32* %retval
  br label %return

if.end.194:                                       ; preds = %if.end.190
  %91 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call195 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i32 0, i32 0), %struct._typeobject* %91, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Bytes_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call195, %struct._typeobject** @Bytes_type, align 8
  %92 = load %struct._typeobject*, %struct._typeobject** @Bytes_type, align 8
  %tobool196 = icmp ne %struct._typeobject* %92, null
  br i1 %tobool196, label %if.end.198, label %if.then.197

if.then.197:                                      ; preds = %if.end.194
  store i32 0, i32* %retval
  br label %return

if.end.198:                                       ; preds = %if.end.194
  %93 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call199 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0), %struct._typeobject* %93, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @NameConstant_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call199, %struct._typeobject** @NameConstant_type, align 8
  %94 = load %struct._typeobject*, %struct._typeobject** @NameConstant_type, align 8
  %tobool200 = icmp ne %struct._typeobject* %94, null
  br i1 %tobool200, label %if.end.202, label %if.then.201

if.then.201:                                      ; preds = %if.end.198
  store i32 0, i32* %retval
  br label %return

if.end.202:                                       ; preds = %if.end.198
  %95 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call203 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i32 0, i32 0), %struct._typeobject* %95, i8** null, i32 0)
  store %struct._typeobject* %call203, %struct._typeobject** @Ellipsis_type, align 8
  %96 = load %struct._typeobject*, %struct._typeobject** @Ellipsis_type, align 8
  %tobool204 = icmp ne %struct._typeobject* %96, null
  br i1 %tobool204, label %if.end.206, label %if.then.205

if.then.205:                                      ; preds = %if.end.202
  store i32 0, i32* %retval
  br label %return

if.end.206:                                       ; preds = %if.end.202
  %97 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call207 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), %struct._typeobject* %97, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @Attribute_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call207, %struct._typeobject** @Attribute_type, align 8
  %98 = load %struct._typeobject*, %struct._typeobject** @Attribute_type, align 8
  %tobool208 = icmp ne %struct._typeobject* %98, null
  br i1 %tobool208, label %if.end.210, label %if.then.209

if.then.209:                                      ; preds = %if.end.206
  store i32 0, i32* %retval
  br label %return

if.end.210:                                       ; preds = %if.end.206
  %99 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call211 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), %struct._typeobject* %99, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @Subscript_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call211, %struct._typeobject** @Subscript_type, align 8
  %100 = load %struct._typeobject*, %struct._typeobject** @Subscript_type, align 8
  %tobool212 = icmp ne %struct._typeobject* %100, null
  br i1 %tobool212, label %if.end.214, label %if.then.213

if.then.213:                                      ; preds = %if.end.210
  store i32 0, i32* %retval
  br label %return

if.end.214:                                       ; preds = %if.end.210
  %101 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call215 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.109, i32 0, i32 0), %struct._typeobject* %101, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @Starred_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call215, %struct._typeobject** @Starred_type, align 8
  %102 = load %struct._typeobject*, %struct._typeobject** @Starred_type, align 8
  %tobool216 = icmp ne %struct._typeobject* %102, null
  br i1 %tobool216, label %if.end.218, label %if.then.217

if.then.217:                                      ; preds = %if.end.214
  store i32 0, i32* %retval
  br label %return

if.end.218:                                       ; preds = %if.end.214
  %103 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call219 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0), %struct._typeobject* %103, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @Name_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call219, %struct._typeobject** @Name_type, align 8
  %104 = load %struct._typeobject*, %struct._typeobject** @Name_type, align 8
  %tobool220 = icmp ne %struct._typeobject* %104, null
  br i1 %tobool220, label %if.end.222, label %if.then.221

if.then.221:                                      ; preds = %if.end.218
  store i32 0, i32* %retval
  br label %return

if.end.222:                                       ; preds = %if.end.218
  %105 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call223 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.111, i32 0, i32 0), %struct._typeobject* %105, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @List_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call223, %struct._typeobject** @List_type, align 8
  %106 = load %struct._typeobject*, %struct._typeobject** @List_type, align 8
  %tobool224 = icmp ne %struct._typeobject* %106, null
  br i1 %tobool224, label %if.end.226, label %if.then.225

if.then.225:                                      ; preds = %if.end.222
  store i32 0, i32* %retval
  br label %return

if.end.226:                                       ; preds = %if.end.222
  %107 = load %struct._typeobject*, %struct._typeobject** @expr_type, align 8
  %call227 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), %struct._typeobject* %107, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @Tuple_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call227, %struct._typeobject** @Tuple_type, align 8
  %108 = load %struct._typeobject*, %struct._typeobject** @Tuple_type, align 8
  %tobool228 = icmp ne %struct._typeobject* %108, null
  br i1 %tobool228, label %if.end.230, label %if.then.229

if.then.229:                                      ; preds = %if.end.226
  store i32 0, i32* %retval
  br label %return

if.end.230:                                       ; preds = %if.end.226
  %call231 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.113, i32 0, i32 0), %struct._typeobject* @AST_type, i8** null, i32 0)
  store %struct._typeobject* %call231, %struct._typeobject** @expr_context_type, align 8
  %109 = load %struct._typeobject*, %struct._typeobject** @expr_context_type, align 8
  %tobool232 = icmp ne %struct._typeobject* %109, null
  br i1 %tobool232, label %if.end.234, label %if.then.233

if.then.233:                                      ; preds = %if.end.230
  store i32 0, i32* %retval
  br label %return

if.end.234:                                       ; preds = %if.end.230
  %110 = load %struct._typeobject*, %struct._typeobject** @expr_context_type, align 8
  %call235 = call i32 @add_attributes(%struct._typeobject* %110, i8** null, i32 0)
  %tobool236 = icmp ne i32 %call235, 0
  br i1 %tobool236, label %if.end.238, label %if.then.237

if.then.237:                                      ; preds = %if.end.234
  store i32 0, i32* %retval
  br label %return

if.end.238:                                       ; preds = %if.end.234
  %111 = load %struct._typeobject*, %struct._typeobject** @expr_context_type, align 8
  %call239 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i32 0, i32 0), %struct._typeobject* %111, i8** null, i32 0)
  store %struct._typeobject* %call239, %struct._typeobject** @Load_type, align 8
  %112 = load %struct._typeobject*, %struct._typeobject** @Load_type, align 8
  %tobool240 = icmp ne %struct._typeobject* %112, null
  br i1 %tobool240, label %if.end.242, label %if.then.241

if.then.241:                                      ; preds = %if.end.238
  store i32 0, i32* %retval
  br label %return

if.end.242:                                       ; preds = %if.end.238
  %113 = load %struct._typeobject*, %struct._typeobject** @Load_type, align 8
  %call243 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %113, %struct._object* null, %struct._object* null)
  store %struct._object* %call243, %struct._object** @Load_singleton, align 8
  %114 = load %struct._object*, %struct._object** @Load_singleton, align 8
  %tobool244 = icmp ne %struct._object* %114, null
  br i1 %tobool244, label %if.end.246, label %if.then.245

if.then.245:                                      ; preds = %if.end.242
  store i32 0, i32* %retval
  br label %return

if.end.246:                                       ; preds = %if.end.242
  %115 = load %struct._typeobject*, %struct._typeobject** @expr_context_type, align 8
  %call247 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0), %struct._typeobject* %115, i8** null, i32 0)
  store %struct._typeobject* %call247, %struct._typeobject** @Store_type, align 8
  %116 = load %struct._typeobject*, %struct._typeobject** @Store_type, align 8
  %tobool248 = icmp ne %struct._typeobject* %116, null
  br i1 %tobool248, label %if.end.250, label %if.then.249

if.then.249:                                      ; preds = %if.end.246
  store i32 0, i32* %retval
  br label %return

if.end.250:                                       ; preds = %if.end.246
  %117 = load %struct._typeobject*, %struct._typeobject** @Store_type, align 8
  %call251 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %117, %struct._object* null, %struct._object* null)
  store %struct._object* %call251, %struct._object** @Store_singleton, align 8
  %118 = load %struct._object*, %struct._object** @Store_singleton, align 8
  %tobool252 = icmp ne %struct._object* %118, null
  br i1 %tobool252, label %if.end.254, label %if.then.253

if.then.253:                                      ; preds = %if.end.250
  store i32 0, i32* %retval
  br label %return

if.end.254:                                       ; preds = %if.end.250
  %119 = load %struct._typeobject*, %struct._typeobject** @expr_context_type, align 8
  %call255 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i32 0, i32 0), %struct._typeobject* %119, i8** null, i32 0)
  store %struct._typeobject* %call255, %struct._typeobject** @Del_type, align 8
  %120 = load %struct._typeobject*, %struct._typeobject** @Del_type, align 8
  %tobool256 = icmp ne %struct._typeobject* %120, null
  br i1 %tobool256, label %if.end.258, label %if.then.257

if.then.257:                                      ; preds = %if.end.254
  store i32 0, i32* %retval
  br label %return

if.end.258:                                       ; preds = %if.end.254
  %121 = load %struct._typeobject*, %struct._typeobject** @Del_type, align 8
  %call259 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %121, %struct._object* null, %struct._object* null)
  store %struct._object* %call259, %struct._object** @Del_singleton, align 8
  %122 = load %struct._object*, %struct._object** @Del_singleton, align 8
  %tobool260 = icmp ne %struct._object* %122, null
  br i1 %tobool260, label %if.end.262, label %if.then.261

if.then.261:                                      ; preds = %if.end.258
  store i32 0, i32* %retval
  br label %return

if.end.262:                                       ; preds = %if.end.258
  %123 = load %struct._typeobject*, %struct._typeobject** @expr_context_type, align 8
  %call263 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.117, i32 0, i32 0), %struct._typeobject* %123, i8** null, i32 0)
  store %struct._typeobject* %call263, %struct._typeobject** @AugLoad_type, align 8
  %124 = load %struct._typeobject*, %struct._typeobject** @AugLoad_type, align 8
  %tobool264 = icmp ne %struct._typeobject* %124, null
  br i1 %tobool264, label %if.end.266, label %if.then.265

if.then.265:                                      ; preds = %if.end.262
  store i32 0, i32* %retval
  br label %return

if.end.266:                                       ; preds = %if.end.262
  %125 = load %struct._typeobject*, %struct._typeobject** @AugLoad_type, align 8
  %call267 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %125, %struct._object* null, %struct._object* null)
  store %struct._object* %call267, %struct._object** @AugLoad_singleton, align 8
  %126 = load %struct._object*, %struct._object** @AugLoad_singleton, align 8
  %tobool268 = icmp ne %struct._object* %126, null
  br i1 %tobool268, label %if.end.270, label %if.then.269

if.then.269:                                      ; preds = %if.end.266
  store i32 0, i32* %retval
  br label %return

if.end.270:                                       ; preds = %if.end.266
  %127 = load %struct._typeobject*, %struct._typeobject** @expr_context_type, align 8
  %call271 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.118, i32 0, i32 0), %struct._typeobject* %127, i8** null, i32 0)
  store %struct._typeobject* %call271, %struct._typeobject** @AugStore_type, align 8
  %128 = load %struct._typeobject*, %struct._typeobject** @AugStore_type, align 8
  %tobool272 = icmp ne %struct._typeobject* %128, null
  br i1 %tobool272, label %if.end.274, label %if.then.273

if.then.273:                                      ; preds = %if.end.270
  store i32 0, i32* %retval
  br label %return

if.end.274:                                       ; preds = %if.end.270
  %129 = load %struct._typeobject*, %struct._typeobject** @AugStore_type, align 8
  %call275 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %129, %struct._object* null, %struct._object* null)
  store %struct._object* %call275, %struct._object** @AugStore_singleton, align 8
  %130 = load %struct._object*, %struct._object** @AugStore_singleton, align 8
  %tobool276 = icmp ne %struct._object* %130, null
  br i1 %tobool276, label %if.end.278, label %if.then.277

if.then.277:                                      ; preds = %if.end.274
  store i32 0, i32* %retval
  br label %return

if.end.278:                                       ; preds = %if.end.274
  %131 = load %struct._typeobject*, %struct._typeobject** @expr_context_type, align 8
  %call279 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i32 0, i32 0), %struct._typeobject* %131, i8** null, i32 0)
  store %struct._typeobject* %call279, %struct._typeobject** @Param_type, align 8
  %132 = load %struct._typeobject*, %struct._typeobject** @Param_type, align 8
  %tobool280 = icmp ne %struct._typeobject* %132, null
  br i1 %tobool280, label %if.end.282, label %if.then.281

if.then.281:                                      ; preds = %if.end.278
  store i32 0, i32* %retval
  br label %return

if.end.282:                                       ; preds = %if.end.278
  %133 = load %struct._typeobject*, %struct._typeobject** @Param_type, align 8
  %call283 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %133, %struct._object* null, %struct._object* null)
  store %struct._object* %call283, %struct._object** @Param_singleton, align 8
  %134 = load %struct._object*, %struct._object** @Param_singleton, align 8
  %tobool284 = icmp ne %struct._object* %134, null
  br i1 %tobool284, label %if.end.286, label %if.then.285

if.then.285:                                      ; preds = %if.end.282
  store i32 0, i32* %retval
  br label %return

if.end.286:                                       ; preds = %if.end.282
  %call287 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i32 0, i32 0), %struct._typeobject* @AST_type, i8** null, i32 0)
  store %struct._typeobject* %call287, %struct._typeobject** @slice_type, align 8
  %135 = load %struct._typeobject*, %struct._typeobject** @slice_type, align 8
  %tobool288 = icmp ne %struct._typeobject* %135, null
  br i1 %tobool288, label %if.end.290, label %if.then.289

if.then.289:                                      ; preds = %if.end.286
  store i32 0, i32* %retval
  br label %return

if.end.290:                                       ; preds = %if.end.286
  %136 = load %struct._typeobject*, %struct._typeobject** @slice_type, align 8
  %call291 = call i32 @add_attributes(%struct._typeobject* %136, i8** null, i32 0)
  %tobool292 = icmp ne i32 %call291, 0
  br i1 %tobool292, label %if.end.294, label %if.then.293

if.then.293:                                      ; preds = %if.end.290
  store i32 0, i32* %retval
  br label %return

if.end.294:                                       ; preds = %if.end.290
  %137 = load %struct._typeobject*, %struct._typeobject** @slice_type, align 8
  %call295 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.121, i32 0, i32 0), %struct._typeobject* %137, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @Slice_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call295, %struct._typeobject** @Slice_type, align 8
  %138 = load %struct._typeobject*, %struct._typeobject** @Slice_type, align 8
  %tobool296 = icmp ne %struct._typeobject* %138, null
  br i1 %tobool296, label %if.end.298, label %if.then.297

if.then.297:                                      ; preds = %if.end.294
  store i32 0, i32* %retval
  br label %return

if.end.298:                                       ; preds = %if.end.294
  %139 = load %struct._typeobject*, %struct._typeobject** @slice_type, align 8
  %call299 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.122, i32 0, i32 0), %struct._typeobject* %139, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @ExtSlice_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call299, %struct._typeobject** @ExtSlice_type, align 8
  %140 = load %struct._typeobject*, %struct._typeobject** @ExtSlice_type, align 8
  %tobool300 = icmp ne %struct._typeobject* %140, null
  br i1 %tobool300, label %if.end.302, label %if.then.301

if.then.301:                                      ; preds = %if.end.298
  store i32 0, i32* %retval
  br label %return

if.end.302:                                       ; preds = %if.end.298
  %141 = load %struct._typeobject*, %struct._typeobject** @slice_type, align 8
  %call303 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i32 0, i32 0), %struct._typeobject* %141, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @Index_fields, i32 0, i32 0), i32 1)
  store %struct._typeobject* %call303, %struct._typeobject** @Index_type, align 8
  %142 = load %struct._typeobject*, %struct._typeobject** @Index_type, align 8
  %tobool304 = icmp ne %struct._typeobject* %142, null
  br i1 %tobool304, label %if.end.306, label %if.then.305

if.then.305:                                      ; preds = %if.end.302
  store i32 0, i32* %retval
  br label %return

if.end.306:                                       ; preds = %if.end.302
  %call307 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.124, i32 0, i32 0), %struct._typeobject* @AST_type, i8** null, i32 0)
  store %struct._typeobject* %call307, %struct._typeobject** @boolop_type, align 8
  %143 = load %struct._typeobject*, %struct._typeobject** @boolop_type, align 8
  %tobool308 = icmp ne %struct._typeobject* %143, null
  br i1 %tobool308, label %if.end.310, label %if.then.309

if.then.309:                                      ; preds = %if.end.306
  store i32 0, i32* %retval
  br label %return

if.end.310:                                       ; preds = %if.end.306
  %144 = load %struct._typeobject*, %struct._typeobject** @boolop_type, align 8
  %call311 = call i32 @add_attributes(%struct._typeobject* %144, i8** null, i32 0)
  %tobool312 = icmp ne i32 %call311, 0
  br i1 %tobool312, label %if.end.314, label %if.then.313

if.then.313:                                      ; preds = %if.end.310
  store i32 0, i32* %retval
  br label %return

if.end.314:                                       ; preds = %if.end.310
  %145 = load %struct._typeobject*, %struct._typeobject** @boolop_type, align 8
  %call315 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.125, i32 0, i32 0), %struct._typeobject* %145, i8** null, i32 0)
  store %struct._typeobject* %call315, %struct._typeobject** @And_type, align 8
  %146 = load %struct._typeobject*, %struct._typeobject** @And_type, align 8
  %tobool316 = icmp ne %struct._typeobject* %146, null
  br i1 %tobool316, label %if.end.318, label %if.then.317

if.then.317:                                      ; preds = %if.end.314
  store i32 0, i32* %retval
  br label %return

if.end.318:                                       ; preds = %if.end.314
  %147 = load %struct._typeobject*, %struct._typeobject** @And_type, align 8
  %call319 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %147, %struct._object* null, %struct._object* null)
  store %struct._object* %call319, %struct._object** @And_singleton, align 8
  %148 = load %struct._object*, %struct._object** @And_singleton, align 8
  %tobool320 = icmp ne %struct._object* %148, null
  br i1 %tobool320, label %if.end.322, label %if.then.321

if.then.321:                                      ; preds = %if.end.318
  store i32 0, i32* %retval
  br label %return

if.end.322:                                       ; preds = %if.end.318
  %149 = load %struct._typeobject*, %struct._typeobject** @boolop_type, align 8
  %call323 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.126, i32 0, i32 0), %struct._typeobject* %149, i8** null, i32 0)
  store %struct._typeobject* %call323, %struct._typeobject** @Or_type, align 8
  %150 = load %struct._typeobject*, %struct._typeobject** @Or_type, align 8
  %tobool324 = icmp ne %struct._typeobject* %150, null
  br i1 %tobool324, label %if.end.326, label %if.then.325

if.then.325:                                      ; preds = %if.end.322
  store i32 0, i32* %retval
  br label %return

if.end.326:                                       ; preds = %if.end.322
  %151 = load %struct._typeobject*, %struct._typeobject** @Or_type, align 8
  %call327 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %151, %struct._object* null, %struct._object* null)
  store %struct._object* %call327, %struct._object** @Or_singleton, align 8
  %152 = load %struct._object*, %struct._object** @Or_singleton, align 8
  %tobool328 = icmp ne %struct._object* %152, null
  br i1 %tobool328, label %if.end.330, label %if.then.329

if.then.329:                                      ; preds = %if.end.326
  store i32 0, i32* %retval
  br label %return

if.end.330:                                       ; preds = %if.end.326
  %call331 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), %struct._typeobject* @AST_type, i8** null, i32 0)
  store %struct._typeobject* %call331, %struct._typeobject** @operator_type, align 8
  %153 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %tobool332 = icmp ne %struct._typeobject* %153, null
  br i1 %tobool332, label %if.end.334, label %if.then.333

if.then.333:                                      ; preds = %if.end.330
  store i32 0, i32* %retval
  br label %return

if.end.334:                                       ; preds = %if.end.330
  %154 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call335 = call i32 @add_attributes(%struct._typeobject* %154, i8** null, i32 0)
  %tobool336 = icmp ne i32 %call335, 0
  br i1 %tobool336, label %if.end.338, label %if.then.337

if.then.337:                                      ; preds = %if.end.334
  store i32 0, i32* %retval
  br label %return

if.end.338:                                       ; preds = %if.end.334
  %155 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call339 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.128, i32 0, i32 0), %struct._typeobject* %155, i8** null, i32 0)
  store %struct._typeobject* %call339, %struct._typeobject** @Add_type, align 8
  %156 = load %struct._typeobject*, %struct._typeobject** @Add_type, align 8
  %tobool340 = icmp ne %struct._typeobject* %156, null
  br i1 %tobool340, label %if.end.342, label %if.then.341

if.then.341:                                      ; preds = %if.end.338
  store i32 0, i32* %retval
  br label %return

if.end.342:                                       ; preds = %if.end.338
  %157 = load %struct._typeobject*, %struct._typeobject** @Add_type, align 8
  %call343 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %157, %struct._object* null, %struct._object* null)
  store %struct._object* %call343, %struct._object** @Add_singleton, align 8
  %158 = load %struct._object*, %struct._object** @Add_singleton, align 8
  %tobool344 = icmp ne %struct._object* %158, null
  br i1 %tobool344, label %if.end.346, label %if.then.345

if.then.345:                                      ; preds = %if.end.342
  store i32 0, i32* %retval
  br label %return

if.end.346:                                       ; preds = %if.end.342
  %159 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call347 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.129, i32 0, i32 0), %struct._typeobject* %159, i8** null, i32 0)
  store %struct._typeobject* %call347, %struct._typeobject** @Sub_type, align 8
  %160 = load %struct._typeobject*, %struct._typeobject** @Sub_type, align 8
  %tobool348 = icmp ne %struct._typeobject* %160, null
  br i1 %tobool348, label %if.end.350, label %if.then.349

if.then.349:                                      ; preds = %if.end.346
  store i32 0, i32* %retval
  br label %return

if.end.350:                                       ; preds = %if.end.346
  %161 = load %struct._typeobject*, %struct._typeobject** @Sub_type, align 8
  %call351 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %161, %struct._object* null, %struct._object* null)
  store %struct._object* %call351, %struct._object** @Sub_singleton, align 8
  %162 = load %struct._object*, %struct._object** @Sub_singleton, align 8
  %tobool352 = icmp ne %struct._object* %162, null
  br i1 %tobool352, label %if.end.354, label %if.then.353

if.then.353:                                      ; preds = %if.end.350
  store i32 0, i32* %retval
  br label %return

if.end.354:                                       ; preds = %if.end.350
  %163 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call355 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i32 0, i32 0), %struct._typeobject* %163, i8** null, i32 0)
  store %struct._typeobject* %call355, %struct._typeobject** @Mult_type, align 8
  %164 = load %struct._typeobject*, %struct._typeobject** @Mult_type, align 8
  %tobool356 = icmp ne %struct._typeobject* %164, null
  br i1 %tobool356, label %if.end.358, label %if.then.357

if.then.357:                                      ; preds = %if.end.354
  store i32 0, i32* %retval
  br label %return

if.end.358:                                       ; preds = %if.end.354
  %165 = load %struct._typeobject*, %struct._typeobject** @Mult_type, align 8
  %call359 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %165, %struct._object* null, %struct._object* null)
  store %struct._object* %call359, %struct._object** @Mult_singleton, align 8
  %166 = load %struct._object*, %struct._object** @Mult_singleton, align 8
  %tobool360 = icmp ne %struct._object* %166, null
  br i1 %tobool360, label %if.end.362, label %if.then.361

if.then.361:                                      ; preds = %if.end.358
  store i32 0, i32* %retval
  br label %return

if.end.362:                                       ; preds = %if.end.358
  %167 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call363 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.131, i32 0, i32 0), %struct._typeobject* %167, i8** null, i32 0)
  store %struct._typeobject* %call363, %struct._typeobject** @Div_type, align 8
  %168 = load %struct._typeobject*, %struct._typeobject** @Div_type, align 8
  %tobool364 = icmp ne %struct._typeobject* %168, null
  br i1 %tobool364, label %if.end.366, label %if.then.365

if.then.365:                                      ; preds = %if.end.362
  store i32 0, i32* %retval
  br label %return

if.end.366:                                       ; preds = %if.end.362
  %169 = load %struct._typeobject*, %struct._typeobject** @Div_type, align 8
  %call367 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %169, %struct._object* null, %struct._object* null)
  store %struct._object* %call367, %struct._object** @Div_singleton, align 8
  %170 = load %struct._object*, %struct._object** @Div_singleton, align 8
  %tobool368 = icmp ne %struct._object* %170, null
  br i1 %tobool368, label %if.end.370, label %if.then.369

if.then.369:                                      ; preds = %if.end.366
  store i32 0, i32* %retval
  br label %return

if.end.370:                                       ; preds = %if.end.366
  %171 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call371 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.132, i32 0, i32 0), %struct._typeobject* %171, i8** null, i32 0)
  store %struct._typeobject* %call371, %struct._typeobject** @Mod_type, align 8
  %172 = load %struct._typeobject*, %struct._typeobject** @Mod_type, align 8
  %tobool372 = icmp ne %struct._typeobject* %172, null
  br i1 %tobool372, label %if.end.374, label %if.then.373

if.then.373:                                      ; preds = %if.end.370
  store i32 0, i32* %retval
  br label %return

if.end.374:                                       ; preds = %if.end.370
  %173 = load %struct._typeobject*, %struct._typeobject** @Mod_type, align 8
  %call375 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %173, %struct._object* null, %struct._object* null)
  store %struct._object* %call375, %struct._object** @Mod_singleton, align 8
  %174 = load %struct._object*, %struct._object** @Mod_singleton, align 8
  %tobool376 = icmp ne %struct._object* %174, null
  br i1 %tobool376, label %if.end.378, label %if.then.377

if.then.377:                                      ; preds = %if.end.374
  store i32 0, i32* %retval
  br label %return

if.end.378:                                       ; preds = %if.end.374
  %175 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call379 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.133, i32 0, i32 0), %struct._typeobject* %175, i8** null, i32 0)
  store %struct._typeobject* %call379, %struct._typeobject** @Pow_type, align 8
  %176 = load %struct._typeobject*, %struct._typeobject** @Pow_type, align 8
  %tobool380 = icmp ne %struct._typeobject* %176, null
  br i1 %tobool380, label %if.end.382, label %if.then.381

if.then.381:                                      ; preds = %if.end.378
  store i32 0, i32* %retval
  br label %return

if.end.382:                                       ; preds = %if.end.378
  %177 = load %struct._typeobject*, %struct._typeobject** @Pow_type, align 8
  %call383 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %177, %struct._object* null, %struct._object* null)
  store %struct._object* %call383, %struct._object** @Pow_singleton, align 8
  %178 = load %struct._object*, %struct._object** @Pow_singleton, align 8
  %tobool384 = icmp ne %struct._object* %178, null
  br i1 %tobool384, label %if.end.386, label %if.then.385

if.then.385:                                      ; preds = %if.end.382
  store i32 0, i32* %retval
  br label %return

if.end.386:                                       ; preds = %if.end.382
  %179 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call387 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.134, i32 0, i32 0), %struct._typeobject* %179, i8** null, i32 0)
  store %struct._typeobject* %call387, %struct._typeobject** @LShift_type, align 8
  %180 = load %struct._typeobject*, %struct._typeobject** @LShift_type, align 8
  %tobool388 = icmp ne %struct._typeobject* %180, null
  br i1 %tobool388, label %if.end.390, label %if.then.389

if.then.389:                                      ; preds = %if.end.386
  store i32 0, i32* %retval
  br label %return

if.end.390:                                       ; preds = %if.end.386
  %181 = load %struct._typeobject*, %struct._typeobject** @LShift_type, align 8
  %call391 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %181, %struct._object* null, %struct._object* null)
  store %struct._object* %call391, %struct._object** @LShift_singleton, align 8
  %182 = load %struct._object*, %struct._object** @LShift_singleton, align 8
  %tobool392 = icmp ne %struct._object* %182, null
  br i1 %tobool392, label %if.end.394, label %if.then.393

if.then.393:                                      ; preds = %if.end.390
  store i32 0, i32* %retval
  br label %return

if.end.394:                                       ; preds = %if.end.390
  %183 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call395 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.135, i32 0, i32 0), %struct._typeobject* %183, i8** null, i32 0)
  store %struct._typeobject* %call395, %struct._typeobject** @RShift_type, align 8
  %184 = load %struct._typeobject*, %struct._typeobject** @RShift_type, align 8
  %tobool396 = icmp ne %struct._typeobject* %184, null
  br i1 %tobool396, label %if.end.398, label %if.then.397

if.then.397:                                      ; preds = %if.end.394
  store i32 0, i32* %retval
  br label %return

if.end.398:                                       ; preds = %if.end.394
  %185 = load %struct._typeobject*, %struct._typeobject** @RShift_type, align 8
  %call399 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %185, %struct._object* null, %struct._object* null)
  store %struct._object* %call399, %struct._object** @RShift_singleton, align 8
  %186 = load %struct._object*, %struct._object** @RShift_singleton, align 8
  %tobool400 = icmp ne %struct._object* %186, null
  br i1 %tobool400, label %if.end.402, label %if.then.401

if.then.401:                                      ; preds = %if.end.398
  store i32 0, i32* %retval
  br label %return

if.end.402:                                       ; preds = %if.end.398
  %187 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call403 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), %struct._typeobject* %187, i8** null, i32 0)
  store %struct._typeobject* %call403, %struct._typeobject** @BitOr_type, align 8
  %188 = load %struct._typeobject*, %struct._typeobject** @BitOr_type, align 8
  %tobool404 = icmp ne %struct._typeobject* %188, null
  br i1 %tobool404, label %if.end.406, label %if.then.405

if.then.405:                                      ; preds = %if.end.402
  store i32 0, i32* %retval
  br label %return

if.end.406:                                       ; preds = %if.end.402
  %189 = load %struct._typeobject*, %struct._typeobject** @BitOr_type, align 8
  %call407 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %189, %struct._object* null, %struct._object* null)
  store %struct._object* %call407, %struct._object** @BitOr_singleton, align 8
  %190 = load %struct._object*, %struct._object** @BitOr_singleton, align 8
  %tobool408 = icmp ne %struct._object* %190, null
  br i1 %tobool408, label %if.end.410, label %if.then.409

if.then.409:                                      ; preds = %if.end.406
  store i32 0, i32* %retval
  br label %return

if.end.410:                                       ; preds = %if.end.406
  %191 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call411 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.137, i32 0, i32 0), %struct._typeobject* %191, i8** null, i32 0)
  store %struct._typeobject* %call411, %struct._typeobject** @BitXor_type, align 8
  %192 = load %struct._typeobject*, %struct._typeobject** @BitXor_type, align 8
  %tobool412 = icmp ne %struct._typeobject* %192, null
  br i1 %tobool412, label %if.end.414, label %if.then.413

if.then.413:                                      ; preds = %if.end.410
  store i32 0, i32* %retval
  br label %return

if.end.414:                                       ; preds = %if.end.410
  %193 = load %struct._typeobject*, %struct._typeobject** @BitXor_type, align 8
  %call415 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %193, %struct._object* null, %struct._object* null)
  store %struct._object* %call415, %struct._object** @BitXor_singleton, align 8
  %194 = load %struct._object*, %struct._object** @BitXor_singleton, align 8
  %tobool416 = icmp ne %struct._object* %194, null
  br i1 %tobool416, label %if.end.418, label %if.then.417

if.then.417:                                      ; preds = %if.end.414
  store i32 0, i32* %retval
  br label %return

if.end.418:                                       ; preds = %if.end.414
  %195 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call419 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.138, i32 0, i32 0), %struct._typeobject* %195, i8** null, i32 0)
  store %struct._typeobject* %call419, %struct._typeobject** @BitAnd_type, align 8
  %196 = load %struct._typeobject*, %struct._typeobject** @BitAnd_type, align 8
  %tobool420 = icmp ne %struct._typeobject* %196, null
  br i1 %tobool420, label %if.end.422, label %if.then.421

if.then.421:                                      ; preds = %if.end.418
  store i32 0, i32* %retval
  br label %return

if.end.422:                                       ; preds = %if.end.418
  %197 = load %struct._typeobject*, %struct._typeobject** @BitAnd_type, align 8
  %call423 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %197, %struct._object* null, %struct._object* null)
  store %struct._object* %call423, %struct._object** @BitAnd_singleton, align 8
  %198 = load %struct._object*, %struct._object** @BitAnd_singleton, align 8
  %tobool424 = icmp ne %struct._object* %198, null
  br i1 %tobool424, label %if.end.426, label %if.then.425

if.then.425:                                      ; preds = %if.end.422
  store i32 0, i32* %retval
  br label %return

if.end.426:                                       ; preds = %if.end.422
  %199 = load %struct._typeobject*, %struct._typeobject** @operator_type, align 8
  %call427 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.139, i32 0, i32 0), %struct._typeobject* %199, i8** null, i32 0)
  store %struct._typeobject* %call427, %struct._typeobject** @FloorDiv_type, align 8
  %200 = load %struct._typeobject*, %struct._typeobject** @FloorDiv_type, align 8
  %tobool428 = icmp ne %struct._typeobject* %200, null
  br i1 %tobool428, label %if.end.430, label %if.then.429

if.then.429:                                      ; preds = %if.end.426
  store i32 0, i32* %retval
  br label %return

if.end.430:                                       ; preds = %if.end.426
  %201 = load %struct._typeobject*, %struct._typeobject** @FloorDiv_type, align 8
  %call431 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %201, %struct._object* null, %struct._object* null)
  store %struct._object* %call431, %struct._object** @FloorDiv_singleton, align 8
  %202 = load %struct._object*, %struct._object** @FloorDiv_singleton, align 8
  %tobool432 = icmp ne %struct._object* %202, null
  br i1 %tobool432, label %if.end.434, label %if.then.433

if.then.433:                                      ; preds = %if.end.430
  store i32 0, i32* %retval
  br label %return

if.end.434:                                       ; preds = %if.end.430
  %call435 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.140, i32 0, i32 0), %struct._typeobject* @AST_type, i8** null, i32 0)
  store %struct._typeobject* %call435, %struct._typeobject** @unaryop_type, align 8
  %203 = load %struct._typeobject*, %struct._typeobject** @unaryop_type, align 8
  %tobool436 = icmp ne %struct._typeobject* %203, null
  br i1 %tobool436, label %if.end.438, label %if.then.437

if.then.437:                                      ; preds = %if.end.434
  store i32 0, i32* %retval
  br label %return

if.end.438:                                       ; preds = %if.end.434
  %204 = load %struct._typeobject*, %struct._typeobject** @unaryop_type, align 8
  %call439 = call i32 @add_attributes(%struct._typeobject* %204, i8** null, i32 0)
  %tobool440 = icmp ne i32 %call439, 0
  br i1 %tobool440, label %if.end.442, label %if.then.441

if.then.441:                                      ; preds = %if.end.438
  store i32 0, i32* %retval
  br label %return

if.end.442:                                       ; preds = %if.end.438
  %205 = load %struct._typeobject*, %struct._typeobject** @unaryop_type, align 8
  %call443 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0), %struct._typeobject* %205, i8** null, i32 0)
  store %struct._typeobject* %call443, %struct._typeobject** @Invert_type, align 8
  %206 = load %struct._typeobject*, %struct._typeobject** @Invert_type, align 8
  %tobool444 = icmp ne %struct._typeobject* %206, null
  br i1 %tobool444, label %if.end.446, label %if.then.445

if.then.445:                                      ; preds = %if.end.442
  store i32 0, i32* %retval
  br label %return

if.end.446:                                       ; preds = %if.end.442
  %207 = load %struct._typeobject*, %struct._typeobject** @Invert_type, align 8
  %call447 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %207, %struct._object* null, %struct._object* null)
  store %struct._object* %call447, %struct._object** @Invert_singleton, align 8
  %208 = load %struct._object*, %struct._object** @Invert_singleton, align 8
  %tobool448 = icmp ne %struct._object* %208, null
  br i1 %tobool448, label %if.end.450, label %if.then.449

if.then.449:                                      ; preds = %if.end.446
  store i32 0, i32* %retval
  br label %return

if.end.450:                                       ; preds = %if.end.446
  %209 = load %struct._typeobject*, %struct._typeobject** @unaryop_type, align 8
  %call451 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.142, i32 0, i32 0), %struct._typeobject* %209, i8** null, i32 0)
  store %struct._typeobject* %call451, %struct._typeobject** @Not_type, align 8
  %210 = load %struct._typeobject*, %struct._typeobject** @Not_type, align 8
  %tobool452 = icmp ne %struct._typeobject* %210, null
  br i1 %tobool452, label %if.end.454, label %if.then.453

if.then.453:                                      ; preds = %if.end.450
  store i32 0, i32* %retval
  br label %return

if.end.454:                                       ; preds = %if.end.450
  %211 = load %struct._typeobject*, %struct._typeobject** @Not_type, align 8
  %call455 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %211, %struct._object* null, %struct._object* null)
  store %struct._object* %call455, %struct._object** @Not_singleton, align 8
  %212 = load %struct._object*, %struct._object** @Not_singleton, align 8
  %tobool456 = icmp ne %struct._object* %212, null
  br i1 %tobool456, label %if.end.458, label %if.then.457

if.then.457:                                      ; preds = %if.end.454
  store i32 0, i32* %retval
  br label %return

if.end.458:                                       ; preds = %if.end.454
  %213 = load %struct._typeobject*, %struct._typeobject** @unaryop_type, align 8
  %call459 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), %struct._typeobject* %213, i8** null, i32 0)
  store %struct._typeobject* %call459, %struct._typeobject** @UAdd_type, align 8
  %214 = load %struct._typeobject*, %struct._typeobject** @UAdd_type, align 8
  %tobool460 = icmp ne %struct._typeobject* %214, null
  br i1 %tobool460, label %if.end.462, label %if.then.461

if.then.461:                                      ; preds = %if.end.458
  store i32 0, i32* %retval
  br label %return

if.end.462:                                       ; preds = %if.end.458
  %215 = load %struct._typeobject*, %struct._typeobject** @UAdd_type, align 8
  %call463 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %215, %struct._object* null, %struct._object* null)
  store %struct._object* %call463, %struct._object** @UAdd_singleton, align 8
  %216 = load %struct._object*, %struct._object** @UAdd_singleton, align 8
  %tobool464 = icmp ne %struct._object* %216, null
  br i1 %tobool464, label %if.end.466, label %if.then.465

if.then.465:                                      ; preds = %if.end.462
  store i32 0, i32* %retval
  br label %return

if.end.466:                                       ; preds = %if.end.462
  %217 = load %struct._typeobject*, %struct._typeobject** @unaryop_type, align 8
  %call467 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.144, i32 0, i32 0), %struct._typeobject* %217, i8** null, i32 0)
  store %struct._typeobject* %call467, %struct._typeobject** @USub_type, align 8
  %218 = load %struct._typeobject*, %struct._typeobject** @USub_type, align 8
  %tobool468 = icmp ne %struct._typeobject* %218, null
  br i1 %tobool468, label %if.end.470, label %if.then.469

if.then.469:                                      ; preds = %if.end.466
  store i32 0, i32* %retval
  br label %return

if.end.470:                                       ; preds = %if.end.466
  %219 = load %struct._typeobject*, %struct._typeobject** @USub_type, align 8
  %call471 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %219, %struct._object* null, %struct._object* null)
  store %struct._object* %call471, %struct._object** @USub_singleton, align 8
  %220 = load %struct._object*, %struct._object** @USub_singleton, align 8
  %tobool472 = icmp ne %struct._object* %220, null
  br i1 %tobool472, label %if.end.474, label %if.then.473

if.then.473:                                      ; preds = %if.end.470
  store i32 0, i32* %retval
  br label %return

if.end.474:                                       ; preds = %if.end.470
  %call475 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i32 0, i32 0), %struct._typeobject* @AST_type, i8** null, i32 0)
  store %struct._typeobject* %call475, %struct._typeobject** @cmpop_type, align 8
  %221 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %tobool476 = icmp ne %struct._typeobject* %221, null
  br i1 %tobool476, label %if.end.478, label %if.then.477

if.then.477:                                      ; preds = %if.end.474
  store i32 0, i32* %retval
  br label %return

if.end.478:                                       ; preds = %if.end.474
  %222 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %call479 = call i32 @add_attributes(%struct._typeobject* %222, i8** null, i32 0)
  %tobool480 = icmp ne i32 %call479, 0
  br i1 %tobool480, label %if.end.482, label %if.then.481

if.then.481:                                      ; preds = %if.end.478
  store i32 0, i32* %retval
  br label %return

if.end.482:                                       ; preds = %if.end.478
  %223 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %call483 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i32 0, i32 0), %struct._typeobject* %223, i8** null, i32 0)
  store %struct._typeobject* %call483, %struct._typeobject** @Eq_type, align 8
  %224 = load %struct._typeobject*, %struct._typeobject** @Eq_type, align 8
  %tobool484 = icmp ne %struct._typeobject* %224, null
  br i1 %tobool484, label %if.end.486, label %if.then.485

if.then.485:                                      ; preds = %if.end.482
  store i32 0, i32* %retval
  br label %return

if.end.486:                                       ; preds = %if.end.482
  %225 = load %struct._typeobject*, %struct._typeobject** @Eq_type, align 8
  %call487 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %225, %struct._object* null, %struct._object* null)
  store %struct._object* %call487, %struct._object** @Eq_singleton, align 8
  %226 = load %struct._object*, %struct._object** @Eq_singleton, align 8
  %tobool488 = icmp ne %struct._object* %226, null
  br i1 %tobool488, label %if.end.490, label %if.then.489

if.then.489:                                      ; preds = %if.end.486
  store i32 0, i32* %retval
  br label %return

if.end.490:                                       ; preds = %if.end.486
  %227 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %call491 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i32 0, i32 0), %struct._typeobject* %227, i8** null, i32 0)
  store %struct._typeobject* %call491, %struct._typeobject** @NotEq_type, align 8
  %228 = load %struct._typeobject*, %struct._typeobject** @NotEq_type, align 8
  %tobool492 = icmp ne %struct._typeobject* %228, null
  br i1 %tobool492, label %if.end.494, label %if.then.493

if.then.493:                                      ; preds = %if.end.490
  store i32 0, i32* %retval
  br label %return

if.end.494:                                       ; preds = %if.end.490
  %229 = load %struct._typeobject*, %struct._typeobject** @NotEq_type, align 8
  %call495 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %229, %struct._object* null, %struct._object* null)
  store %struct._object* %call495, %struct._object** @NotEq_singleton, align 8
  %230 = load %struct._object*, %struct._object** @NotEq_singleton, align 8
  %tobool496 = icmp ne %struct._object* %230, null
  br i1 %tobool496, label %if.end.498, label %if.then.497

if.then.497:                                      ; preds = %if.end.494
  store i32 0, i32* %retval
  br label %return

if.end.498:                                       ; preds = %if.end.494
  %231 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %call499 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.148, i32 0, i32 0), %struct._typeobject* %231, i8** null, i32 0)
  store %struct._typeobject* %call499, %struct._typeobject** @Lt_type, align 8
  %232 = load %struct._typeobject*, %struct._typeobject** @Lt_type, align 8
  %tobool500 = icmp ne %struct._typeobject* %232, null
  br i1 %tobool500, label %if.end.502, label %if.then.501

if.then.501:                                      ; preds = %if.end.498
  store i32 0, i32* %retval
  br label %return

if.end.502:                                       ; preds = %if.end.498
  %233 = load %struct._typeobject*, %struct._typeobject** @Lt_type, align 8
  %call503 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %233, %struct._object* null, %struct._object* null)
  store %struct._object* %call503, %struct._object** @Lt_singleton, align 8
  %234 = load %struct._object*, %struct._object** @Lt_singleton, align 8
  %tobool504 = icmp ne %struct._object* %234, null
  br i1 %tobool504, label %if.end.506, label %if.then.505

if.then.505:                                      ; preds = %if.end.502
  store i32 0, i32* %retval
  br label %return

if.end.506:                                       ; preds = %if.end.502
  %235 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %call507 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.149, i32 0, i32 0), %struct._typeobject* %235, i8** null, i32 0)
  store %struct._typeobject* %call507, %struct._typeobject** @LtE_type, align 8
  %236 = load %struct._typeobject*, %struct._typeobject** @LtE_type, align 8
  %tobool508 = icmp ne %struct._typeobject* %236, null
  br i1 %tobool508, label %if.end.510, label %if.then.509

if.then.509:                                      ; preds = %if.end.506
  store i32 0, i32* %retval
  br label %return

if.end.510:                                       ; preds = %if.end.506
  %237 = load %struct._typeobject*, %struct._typeobject** @LtE_type, align 8
  %call511 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %237, %struct._object* null, %struct._object* null)
  store %struct._object* %call511, %struct._object** @LtE_singleton, align 8
  %238 = load %struct._object*, %struct._object** @LtE_singleton, align 8
  %tobool512 = icmp ne %struct._object* %238, null
  br i1 %tobool512, label %if.end.514, label %if.then.513

if.then.513:                                      ; preds = %if.end.510
  store i32 0, i32* %retval
  br label %return

if.end.514:                                       ; preds = %if.end.510
  %239 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %call515 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.150, i32 0, i32 0), %struct._typeobject* %239, i8** null, i32 0)
  store %struct._typeobject* %call515, %struct._typeobject** @Gt_type, align 8
  %240 = load %struct._typeobject*, %struct._typeobject** @Gt_type, align 8
  %tobool516 = icmp ne %struct._typeobject* %240, null
  br i1 %tobool516, label %if.end.518, label %if.then.517

if.then.517:                                      ; preds = %if.end.514
  store i32 0, i32* %retval
  br label %return

if.end.518:                                       ; preds = %if.end.514
  %241 = load %struct._typeobject*, %struct._typeobject** @Gt_type, align 8
  %call519 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %241, %struct._object* null, %struct._object* null)
  store %struct._object* %call519, %struct._object** @Gt_singleton, align 8
  %242 = load %struct._object*, %struct._object** @Gt_singleton, align 8
  %tobool520 = icmp ne %struct._object* %242, null
  br i1 %tobool520, label %if.end.522, label %if.then.521

if.then.521:                                      ; preds = %if.end.518
  store i32 0, i32* %retval
  br label %return

if.end.522:                                       ; preds = %if.end.518
  %243 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %call523 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.151, i32 0, i32 0), %struct._typeobject* %243, i8** null, i32 0)
  store %struct._typeobject* %call523, %struct._typeobject** @GtE_type, align 8
  %244 = load %struct._typeobject*, %struct._typeobject** @GtE_type, align 8
  %tobool524 = icmp ne %struct._typeobject* %244, null
  br i1 %tobool524, label %if.end.526, label %if.then.525

if.then.525:                                      ; preds = %if.end.522
  store i32 0, i32* %retval
  br label %return

if.end.526:                                       ; preds = %if.end.522
  %245 = load %struct._typeobject*, %struct._typeobject** @GtE_type, align 8
  %call527 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %245, %struct._object* null, %struct._object* null)
  store %struct._object* %call527, %struct._object** @GtE_singleton, align 8
  %246 = load %struct._object*, %struct._object** @GtE_singleton, align 8
  %tobool528 = icmp ne %struct._object* %246, null
  br i1 %tobool528, label %if.end.530, label %if.then.529

if.then.529:                                      ; preds = %if.end.526
  store i32 0, i32* %retval
  br label %return

if.end.530:                                       ; preds = %if.end.526
  %247 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %call531 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.152, i32 0, i32 0), %struct._typeobject* %247, i8** null, i32 0)
  store %struct._typeobject* %call531, %struct._typeobject** @Is_type, align 8
  %248 = load %struct._typeobject*, %struct._typeobject** @Is_type, align 8
  %tobool532 = icmp ne %struct._typeobject* %248, null
  br i1 %tobool532, label %if.end.534, label %if.then.533

if.then.533:                                      ; preds = %if.end.530
  store i32 0, i32* %retval
  br label %return

if.end.534:                                       ; preds = %if.end.530
  %249 = load %struct._typeobject*, %struct._typeobject** @Is_type, align 8
  %call535 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %249, %struct._object* null, %struct._object* null)
  store %struct._object* %call535, %struct._object** @Is_singleton, align 8
  %250 = load %struct._object*, %struct._object** @Is_singleton, align 8
  %tobool536 = icmp ne %struct._object* %250, null
  br i1 %tobool536, label %if.end.538, label %if.then.537

if.then.537:                                      ; preds = %if.end.534
  store i32 0, i32* %retval
  br label %return

if.end.538:                                       ; preds = %if.end.534
  %251 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %call539 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.153, i32 0, i32 0), %struct._typeobject* %251, i8** null, i32 0)
  store %struct._typeobject* %call539, %struct._typeobject** @IsNot_type, align 8
  %252 = load %struct._typeobject*, %struct._typeobject** @IsNot_type, align 8
  %tobool540 = icmp ne %struct._typeobject* %252, null
  br i1 %tobool540, label %if.end.542, label %if.then.541

if.then.541:                                      ; preds = %if.end.538
  store i32 0, i32* %retval
  br label %return

if.end.542:                                       ; preds = %if.end.538
  %253 = load %struct._typeobject*, %struct._typeobject** @IsNot_type, align 8
  %call543 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %253, %struct._object* null, %struct._object* null)
  store %struct._object* %call543, %struct._object** @IsNot_singleton, align 8
  %254 = load %struct._object*, %struct._object** @IsNot_singleton, align 8
  %tobool544 = icmp ne %struct._object* %254, null
  br i1 %tobool544, label %if.end.546, label %if.then.545

if.then.545:                                      ; preds = %if.end.542
  store i32 0, i32* %retval
  br label %return

if.end.546:                                       ; preds = %if.end.542
  %255 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %call547 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.154, i32 0, i32 0), %struct._typeobject* %255, i8** null, i32 0)
  store %struct._typeobject* %call547, %struct._typeobject** @In_type, align 8
  %256 = load %struct._typeobject*, %struct._typeobject** @In_type, align 8
  %tobool548 = icmp ne %struct._typeobject* %256, null
  br i1 %tobool548, label %if.end.550, label %if.then.549

if.then.549:                                      ; preds = %if.end.546
  store i32 0, i32* %retval
  br label %return

if.end.550:                                       ; preds = %if.end.546
  %257 = load %struct._typeobject*, %struct._typeobject** @In_type, align 8
  %call551 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %257, %struct._object* null, %struct._object* null)
  store %struct._object* %call551, %struct._object** @In_singleton, align 8
  %258 = load %struct._object*, %struct._object** @In_singleton, align 8
  %tobool552 = icmp ne %struct._object* %258, null
  br i1 %tobool552, label %if.end.554, label %if.then.553

if.then.553:                                      ; preds = %if.end.550
  store i32 0, i32* %retval
  br label %return

if.end.554:                                       ; preds = %if.end.550
  %259 = load %struct._typeobject*, %struct._typeobject** @cmpop_type, align 8
  %call555 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.155, i32 0, i32 0), %struct._typeobject* %259, i8** null, i32 0)
  store %struct._typeobject* %call555, %struct._typeobject** @NotIn_type, align 8
  %260 = load %struct._typeobject*, %struct._typeobject** @NotIn_type, align 8
  %tobool556 = icmp ne %struct._typeobject* %260, null
  br i1 %tobool556, label %if.end.558, label %if.then.557

if.then.557:                                      ; preds = %if.end.554
  store i32 0, i32* %retval
  br label %return

if.end.558:                                       ; preds = %if.end.554
  %261 = load %struct._typeobject*, %struct._typeobject** @NotIn_type, align 8
  %call559 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %261, %struct._object* null, %struct._object* null)
  store %struct._object* %call559, %struct._object** @NotIn_singleton, align 8
  %262 = load %struct._object*, %struct._object** @NotIn_singleton, align 8
  %tobool560 = icmp ne %struct._object* %262, null
  br i1 %tobool560, label %if.end.562, label %if.then.561

if.then.561:                                      ; preds = %if.end.558
  store i32 0, i32* %retval
  br label %return

if.end.562:                                       ; preds = %if.end.558
  %call563 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.156, i32 0, i32 0), %struct._typeobject* @AST_type, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @comprehension_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call563, %struct._typeobject** @comprehension_type, align 8
  %263 = load %struct._typeobject*, %struct._typeobject** @comprehension_type, align 8
  %tobool564 = icmp ne %struct._typeobject* %263, null
  br i1 %tobool564, label %if.end.566, label %if.then.565

if.then.565:                                      ; preds = %if.end.562
  store i32 0, i32* %retval
  br label %return

if.end.566:                                       ; preds = %if.end.562
  %264 = load %struct._typeobject*, %struct._typeobject** @comprehension_type, align 8
  %call567 = call i32 @add_attributes(%struct._typeobject* %264, i8** null, i32 0)
  %tobool568 = icmp ne i32 %call567, 0
  br i1 %tobool568, label %if.end.570, label %if.then.569

if.then.569:                                      ; preds = %if.end.566
  store i32 0, i32* %retval
  br label %return

if.end.570:                                       ; preds = %if.end.566
  %call571 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.157, i32 0, i32 0), %struct._typeobject* @AST_type, i8** null, i32 0)
  store %struct._typeobject* %call571, %struct._typeobject** @excepthandler_type, align 8
  %265 = load %struct._typeobject*, %struct._typeobject** @excepthandler_type, align 8
  %tobool572 = icmp ne %struct._typeobject* %265, null
  br i1 %tobool572, label %if.end.574, label %if.then.573

if.then.573:                                      ; preds = %if.end.570
  store i32 0, i32* %retval
  br label %return

if.end.574:                                       ; preds = %if.end.570
  %266 = load %struct._typeobject*, %struct._typeobject** @excepthandler_type, align 8
  %call575 = call i32 @add_attributes(%struct._typeobject* %266, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @excepthandler_attributes, i32 0, i32 0), i32 2)
  %tobool576 = icmp ne i32 %call575, 0
  br i1 %tobool576, label %if.end.578, label %if.then.577

if.then.577:                                      ; preds = %if.end.574
  store i32 0, i32* %retval
  br label %return

if.end.578:                                       ; preds = %if.end.574
  %267 = load %struct._typeobject*, %struct._typeobject** @excepthandler_type, align 8
  %call579 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.158, i32 0, i32 0), %struct._typeobject* %267, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @ExceptHandler_fields, i32 0, i32 0), i32 3)
  store %struct._typeobject* %call579, %struct._typeobject** @ExceptHandler_type, align 8
  %268 = load %struct._typeobject*, %struct._typeobject** @ExceptHandler_type, align 8
  %tobool580 = icmp ne %struct._typeobject* %268, null
  br i1 %tobool580, label %if.end.582, label %if.then.581

if.then.581:                                      ; preds = %if.end.578
  store i32 0, i32* %retval
  br label %return

if.end.582:                                       ; preds = %if.end.578
  %call583 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.159, i32 0, i32 0), %struct._typeobject* @AST_type, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @arguments_fields, i32 0, i32 0), i32 6)
  store %struct._typeobject* %call583, %struct._typeobject** @arguments_type, align 8
  %269 = load %struct._typeobject*, %struct._typeobject** @arguments_type, align 8
  %tobool584 = icmp ne %struct._typeobject* %269, null
  br i1 %tobool584, label %if.end.586, label %if.then.585

if.then.585:                                      ; preds = %if.end.582
  store i32 0, i32* %retval
  br label %return

if.end.586:                                       ; preds = %if.end.582
  %270 = load %struct._typeobject*, %struct._typeobject** @arguments_type, align 8
  %call587 = call i32 @add_attributes(%struct._typeobject* %270, i8** null, i32 0)
  %tobool588 = icmp ne i32 %call587, 0
  br i1 %tobool588, label %if.end.590, label %if.then.589

if.then.589:                                      ; preds = %if.end.586
  store i32 0, i32* %retval
  br label %return

if.end.590:                                       ; preds = %if.end.586
  %call591 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i32 0, i32 0), %struct._typeobject* @AST_type, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @arg_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call591, %struct._typeobject** @arg_type, align 8
  %271 = load %struct._typeobject*, %struct._typeobject** @arg_type, align 8
  %tobool592 = icmp ne %struct._typeobject* %271, null
  br i1 %tobool592, label %if.end.594, label %if.then.593

if.then.593:                                      ; preds = %if.end.590
  store i32 0, i32* %retval
  br label %return

if.end.594:                                       ; preds = %if.end.590
  %272 = load %struct._typeobject*, %struct._typeobject** @arg_type, align 8
  %call595 = call i32 @add_attributes(%struct._typeobject* %272, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @arg_attributes, i32 0, i32 0), i32 2)
  %tobool596 = icmp ne i32 %call595, 0
  br i1 %tobool596, label %if.end.598, label %if.then.597

if.then.597:                                      ; preds = %if.end.594
  store i32 0, i32* %retval
  br label %return

if.end.598:                                       ; preds = %if.end.594
  %call599 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0), %struct._typeobject* @AST_type, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @keyword_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call599, %struct._typeobject** @keyword_type, align 8
  %273 = load %struct._typeobject*, %struct._typeobject** @keyword_type, align 8
  %tobool600 = icmp ne %struct._typeobject* %273, null
  br i1 %tobool600, label %if.end.602, label %if.then.601

if.then.601:                                      ; preds = %if.end.598
  store i32 0, i32* %retval
  br label %return

if.end.602:                                       ; preds = %if.end.598
  %274 = load %struct._typeobject*, %struct._typeobject** @keyword_type, align 8
  %call603 = call i32 @add_attributes(%struct._typeobject* %274, i8** null, i32 0)
  %tobool604 = icmp ne i32 %call603, 0
  br i1 %tobool604, label %if.end.606, label %if.then.605

if.then.605:                                      ; preds = %if.end.602
  store i32 0, i32* %retval
  br label %return

if.end.606:                                       ; preds = %if.end.602
  %call607 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.162, i32 0, i32 0), %struct._typeobject* @AST_type, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @alias_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call607, %struct._typeobject** @alias_type, align 8
  %275 = load %struct._typeobject*, %struct._typeobject** @alias_type, align 8
  %tobool608 = icmp ne %struct._typeobject* %275, null
  br i1 %tobool608, label %if.end.610, label %if.then.609

if.then.609:                                      ; preds = %if.end.606
  store i32 0, i32* %retval
  br label %return

if.end.610:                                       ; preds = %if.end.606
  %276 = load %struct._typeobject*, %struct._typeobject** @alias_type, align 8
  %call611 = call i32 @add_attributes(%struct._typeobject* %276, i8** null, i32 0)
  %tobool612 = icmp ne i32 %call611, 0
  br i1 %tobool612, label %if.end.614, label %if.then.613

if.then.613:                                      ; preds = %if.end.610
  store i32 0, i32* %retval
  br label %return

if.end.614:                                       ; preds = %if.end.610
  %call615 = call %struct._typeobject* @make_type(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.163, i32 0, i32 0), %struct._typeobject* @AST_type, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @withitem_fields, i32 0, i32 0), i32 2)
  store %struct._typeobject* %call615, %struct._typeobject** @withitem_type, align 8
  %277 = load %struct._typeobject*, %struct._typeobject** @withitem_type, align 8
  %tobool616 = icmp ne %struct._typeobject* %277, null
  br i1 %tobool616, label %if.end.618, label %if.then.617

if.then.617:                                      ; preds = %if.end.614
  store i32 0, i32* %retval
  br label %return

if.end.618:                                       ; preds = %if.end.614
  %278 = load %struct._typeobject*, %struct._typeobject** @withitem_type, align 8
  %call619 = call i32 @add_attributes(%struct._typeobject* %278, i8** null, i32 0)
  %tobool620 = icmp ne i32 %call619, 0
  br i1 %tobool620, label %if.end.622, label %if.then.621

if.then.621:                                      ; preds = %if.end.618
  store i32 0, i32* %retval
  br label %return

if.end.622:                                       ; preds = %if.end.618
  store i32 1, i32* @init_types.initialized, align 4
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.622, %if.then.621, %if.then.617, %if.then.613, %if.then.609, %if.then.605, %if.then.601, %if.then.597, %if.then.593, %if.then.589, %if.then.585, %if.then.581, %if.then.577, %if.then.573, %if.then.569, %if.then.565, %if.then.561, %if.then.557, %if.then.553, %if.then.549, %if.then.545, %if.then.541, %if.then.537, %if.then.533, %if.then.529, %if.then.525, %if.then.521, %if.then.517, %if.then.513, %if.then.509, %if.then.505, %if.then.501, %if.then.497, %if.then.493, %if.then.489, %if.then.485, %if.then.481, %if.then.477, %if.then.473, %if.then.469, %if.then.465, %if.then.461, %if.then.457, %if.then.453, %if.then.449, %if.then.445, %if.then.441, %if.then.437, %if.then.433, %if.then.429, %if.then.425, %if.then.421, %if.then.417, %if.then.413, %if.then.409, %if.then.405, %if.then.401, %if.then.397, %if.then.393, %if.then.389, %if.then.385, %if.then.381, %if.then.377, %if.then.373, %if.then.369, %if.then.365, %if.then.361, %if.then.357, %if.then.353, %if.then.349, %if.then.345, %if.then.341, %if.then.337, %if.then.333, %if.then.329, %if.then.325, %if.then.321, %if.then.317, %if.then.313, %if.then.309, %if.then.305, %if.then.301, %if.then.297, %if.then.293, %if.then.289, %if.then.285, %if.then.281, %if.then.277, %if.then.273, %if.then.269, %if.then.265, %if.then.261, %if.then.257, %if.then.253, %if.then.249, %if.then.245, %if.then.241, %if.then.237, %if.then.233, %if.then.229, %if.then.225, %if.then.221, %if.then.217, %if.then.213, %if.then.209, %if.then.205, %if.then.201, %if.then.197, %if.then.193, %if.then.189, %if.then.185, %if.then.181, %if.then.177, %if.then.173, %if.then.169, %if.then.165, %if.then.161, %if.then.157, %if.then.153, %if.then.149, %if.then.145, %if.then.141, %if.then.137, %if.then.133, %if.then.129, %if.then.125, %if.then.121, %if.then.117, %if.then.113, %if.then.109, %if.then.105, %if.then.101, %if.then.97, %if.then.93, %if.then.89, %if.then.85, %if.then.81, %if.then.77, %if.then.73, %if.then.69, %if.then.65, %if.then.61, %if.then.57, %if.then.53, %if.then.49, %if.then.45, %if.then.41, %if.then.37, %if.then.33, %if.then.29, %if.then.25, %if.then.21, %if.then.17, %if.then.13, %if.then.9, %if.then.5, %if.then.1, %if.then
  %279 = load i32, i32* %retval
  ret i32 %279
}

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #1

declare %struct._object* @PyModule_GetDict(%struct._object*) #1

declare i32 @PyDict_SetItemString(%struct._object*, i8*, %struct._object*) #1

declare i32 @PyModule_AddIntConstant(%struct._object*, i8*, i64) #1

; Function Attrs: nounwind uwtable
define %struct._object* @PyAST_mod2obj(%struct._mod* %t) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %t.addr = alloca %struct._mod*, align 8
  store %struct._mod* %t, %struct._mod** %t.addr, align 8
  %call = call i32 @init_types()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %0 = load %struct._mod*, %struct._mod** %t.addr, align 8
  %1 = bitcast %struct._mod* %0 to i8*
  %call1 = call %struct._object* @ast2obj_mod(i8* %1)
  store %struct._object* %call1, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %2
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_mod(i8* %_o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %_o.addr = alloca i8*, align 8
  %o = alloca %struct._mod*, align 8
  %result = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp30 = alloca %struct._object*, align 8
  %_py_decref_tmp56 = alloca %struct._object*, align 8
  %_py_decref_tmp82 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp96 = alloca %struct._object*, align 8
  %_py_xdecref_tmp109 = alloca %struct._object*, align 8
  %_py_decref_tmp113 = alloca %struct._object*, align 8
  store i8* %_o, i8** %_o.addr, align 8
  %0 = load i8*, i8** %_o.addr, align 8
  %1 = bitcast i8* %0 to %struct._mod*
  store %struct._mod* %1, %struct._mod** %o, align 8
  store %struct._object* null, %struct._object** %result, align 8
  store %struct._object* null, %struct._object** %value, align 8
  %2 = load %struct._mod*, %struct._mod** %o, align 8
  %tobool = icmp ne %struct._mod* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._mod*, %struct._mod** %o, align 8
  %kind = getelementptr inbounds %struct._mod, %struct._mod* %4, i32 0, i32 0
  %5 = load i32, i32* %kind, align 4
  switch i32 %5, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.14
    i32 3, label %sw.bb.40
    i32 4, label %sw.bb.66
  ]

sw.bb:                                            ; preds = %if.end
  %6 = load %struct._typeobject*, %struct._typeobject** @Module_type, align 8
  %call = call %struct._object* @PyType_GenericNew(%struct._typeobject* %6, %struct._object* null, %struct._object* null)
  store %struct._object* %call, %struct._object** %result, align 8
  %7 = load %struct._object*, %struct._object** %result, align 8
  %tobool1 = icmp ne %struct._object* %7, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %sw.bb
  br label %failed

if.end.3:                                         ; preds = %sw.bb
  %8 = load %struct._mod*, %struct._mod** %o, align 8
  %v = getelementptr inbounds %struct._mod, %struct._mod* %8, i32 0, i32 1
  %Module = bitcast %union.anon* %v to %struct.anon*
  %body = getelementptr inbounds %struct.anon, %struct.anon* %Module, i32 0, i32 0
  %9 = load %struct.asdl_seq*, %struct.asdl_seq** %body, align 8
  %call4 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %9, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call4, %struct._object** %value, align 8
  %10 = load %struct._object*, %struct._object** %value, align 8
  %tobool5 = icmp ne %struct._object* %10, null
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %failed

if.end.7:                                         ; preds = %if.end.3
  %11 = load %struct._object*, %struct._object** %result, align 8
  %12 = load %struct._object*, %struct._object** %value, align 8
  %call8 = call i32 @_PyObject_SetAttrId(%struct._object* %11, %struct._Py_Identifier* @PyId_body, %struct._object* %12)
  %cmp = icmp eq i32 %call8, -1
  br i1 %cmp, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.7
  br label %failed

if.end.10:                                        ; preds = %if.end.7
  br label %do.body

do.body:                                          ; preds = %if.end.10
  %13 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0
  %15 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %15, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %18(%struct._object* %19)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  br label %sw.epilog

sw.bb.14:                                         ; preds = %if.end
  %20 = load %struct._typeobject*, %struct._typeobject** @Interactive_type, align 8
  %call15 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %20, %struct._object* null, %struct._object* null)
  store %struct._object* %call15, %struct._object** %result, align 8
  %21 = load %struct._object*, %struct._object** %result, align 8
  %tobool16 = icmp ne %struct._object* %21, null
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %sw.bb.14
  br label %failed

if.end.18:                                        ; preds = %sw.bb.14
  %22 = load %struct._mod*, %struct._mod** %o, align 8
  %v19 = getelementptr inbounds %struct._mod, %struct._mod* %22, i32 0, i32 1
  %Interactive = bitcast %union.anon* %v19 to %struct.anon.0*
  %body20 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %Interactive, i32 0, i32 0
  %23 = load %struct.asdl_seq*, %struct.asdl_seq** %body20, align 8
  %call21 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %23, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call21, %struct._object** %value, align 8
  %24 = load %struct._object*, %struct._object** %value, align 8
  %tobool22 = icmp ne %struct._object* %24, null
  br i1 %tobool22, label %if.end.24, label %if.then.23

if.then.23:                                       ; preds = %if.end.18
  br label %failed

if.end.24:                                        ; preds = %if.end.18
  %25 = load %struct._object*, %struct._object** %result, align 8
  %26 = load %struct._object*, %struct._object** %value, align 8
  %call25 = call i32 @_PyObject_SetAttrId(%struct._object* %25, %struct._Py_Identifier* @PyId_body, %struct._object* %26)
  %cmp26 = icmp eq i32 %call25, -1
  br i1 %cmp26, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %if.end.24
  br label %failed

if.end.28:                                        ; preds = %if.end.24
  br label %do.body.29

do.body.29:                                       ; preds = %if.end.28
  %27 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %27, %struct._object** %_py_decref_tmp30, align 8
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0
  %29 = load i64, i64* %ob_refcnt31, align 8
  %dec32 = add i64 %29, -1
  store i64 %dec32, i64* %ob_refcnt31, align 8
  %cmp33 = icmp ne i64 %dec32, 0
  br i1 %cmp33, label %if.then.34, label %if.else.35

if.then.34:                                       ; preds = %do.body.29
  br label %if.end.38

if.else.35:                                       ; preds = %do.body.29
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8
  %tp_dealloc37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc37, align 8
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8
  call void %32(%struct._object* %33)
  br label %if.end.38

if.end.38:                                        ; preds = %if.else.35, %if.then.34
  br label %do.end.39

do.end.39:                                        ; preds = %if.end.38
  br label %sw.epilog

sw.bb.40:                                         ; preds = %if.end
  %34 = load %struct._typeobject*, %struct._typeobject** @Expression_type, align 8
  %call41 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %34, %struct._object* null, %struct._object* null)
  store %struct._object* %call41, %struct._object** %result, align 8
  %35 = load %struct._object*, %struct._object** %result, align 8
  %tobool42 = icmp ne %struct._object* %35, null
  br i1 %tobool42, label %if.end.44, label %if.then.43

if.then.43:                                       ; preds = %sw.bb.40
  br label %failed

if.end.44:                                        ; preds = %sw.bb.40
  %36 = load %struct._mod*, %struct._mod** %o, align 8
  %v45 = getelementptr inbounds %struct._mod, %struct._mod* %36, i32 0, i32 1
  %Expression = bitcast %union.anon* %v45 to %struct.anon.1*
  %body46 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %Expression, i32 0, i32 0
  %37 = load %struct._expr*, %struct._expr** %body46, align 8
  %38 = bitcast %struct._expr* %37 to i8*
  %call47 = call %struct._object* @ast2obj_expr(i8* %38)
  store %struct._object* %call47, %struct._object** %value, align 8
  %39 = load %struct._object*, %struct._object** %value, align 8
  %tobool48 = icmp ne %struct._object* %39, null
  br i1 %tobool48, label %if.end.50, label %if.then.49

if.then.49:                                       ; preds = %if.end.44
  br label %failed

if.end.50:                                        ; preds = %if.end.44
  %40 = load %struct._object*, %struct._object** %result, align 8
  %41 = load %struct._object*, %struct._object** %value, align 8
  %call51 = call i32 @_PyObject_SetAttrId(%struct._object* %40, %struct._Py_Identifier* @PyId_body, %struct._object* %41)
  %cmp52 = icmp eq i32 %call51, -1
  br i1 %cmp52, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.end.50
  br label %failed

if.end.54:                                        ; preds = %if.end.50
  br label %do.body.55

do.body.55:                                       ; preds = %if.end.54
  %42 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %42, %struct._object** %_py_decref_tmp56, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0
  %44 = load i64, i64* %ob_refcnt57, align 8
  %dec58 = add i64 %44, -1
  store i64 %dec58, i64* %ob_refcnt57, align 8
  %cmp59 = icmp ne i64 %dec58, 0
  br i1 %cmp59, label %if.then.60, label %if.else.61

if.then.60:                                       ; preds = %do.body.55
  br label %if.end.64

if.else.61:                                       ; preds = %do.body.55
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8
  call void %47(%struct._object* %48)
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  br label %do.end.65

do.end.65:                                        ; preds = %if.end.64
  br label %sw.epilog

sw.bb.66:                                         ; preds = %if.end
  %49 = load %struct._typeobject*, %struct._typeobject** @Suite_type, align 8
  %call67 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %49, %struct._object* null, %struct._object* null)
  store %struct._object* %call67, %struct._object** %result, align 8
  %50 = load %struct._object*, %struct._object** %result, align 8
  %tobool68 = icmp ne %struct._object* %50, null
  br i1 %tobool68, label %if.end.70, label %if.then.69

if.then.69:                                       ; preds = %sw.bb.66
  br label %failed

if.end.70:                                        ; preds = %sw.bb.66
  %51 = load %struct._mod*, %struct._mod** %o, align 8
  %v71 = getelementptr inbounds %struct._mod, %struct._mod* %51, i32 0, i32 1
  %Suite = bitcast %union.anon* %v71 to %struct.anon.32*
  %body72 = getelementptr inbounds %struct.anon.32, %struct.anon.32* %Suite, i32 0, i32 0
  %52 = load %struct.asdl_seq*, %struct.asdl_seq** %body72, align 8
  %call73 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %52, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call73, %struct._object** %value, align 8
  %53 = load %struct._object*, %struct._object** %value, align 8
  %tobool74 = icmp ne %struct._object* %53, null
  br i1 %tobool74, label %if.end.76, label %if.then.75

if.then.75:                                       ; preds = %if.end.70
  br label %failed

if.end.76:                                        ; preds = %if.end.70
  %54 = load %struct._object*, %struct._object** %result, align 8
  %55 = load %struct._object*, %struct._object** %value, align 8
  %call77 = call i32 @_PyObject_SetAttrId(%struct._object* %54, %struct._Py_Identifier* @PyId_body, %struct._object* %55)
  %cmp78 = icmp eq i32 %call77, -1
  br i1 %cmp78, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %if.end.76
  br label %failed

if.end.80:                                        ; preds = %if.end.76
  br label %do.body.81

do.body.81:                                       ; preds = %if.end.80
  %56 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %56, %struct._object** %_py_decref_tmp82, align 8
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8
  %ob_refcnt83 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0
  %58 = load i64, i64* %ob_refcnt83, align 8
  %dec84 = add i64 %58, -1
  store i64 %dec84, i64* %ob_refcnt83, align 8
  %cmp85 = icmp ne i64 %dec84, 0
  br i1 %cmp85, label %if.then.86, label %if.else.87

if.then.86:                                       ; preds = %do.body.81
  br label %if.end.90

if.else.87:                                       ; preds = %do.body.81
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8
  %tp_dealloc89 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc89, align 8
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8
  call void %61(%struct._object* %62)
  br label %if.end.90

if.end.90:                                        ; preds = %if.else.87, %if.then.86
  br label %do.end.91

do.end.91:                                        ; preds = %if.end.90
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %do.end.91, %do.end.65, %do.end.39, %do.end
  %63 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %63, %struct._object** %retval
  br label %return

failed:                                           ; preds = %if.then.79, %if.then.75, %if.then.69, %if.then.53, %if.then.49, %if.then.43, %if.then.27, %if.then.23, %if.then.17, %if.then.9, %if.then.6, %if.then.2
  br label %do.body.92

do.body.92:                                       ; preds = %failed
  %64 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %64, %struct._object** %_py_xdecref_tmp, align 8
  %65 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp93 = icmp ne %struct._object* %65, null
  br i1 %cmp93, label %if.then.94, label %if.end.106

if.then.94:                                       ; preds = %do.body.92
  br label %do.body.95

do.body.95:                                       ; preds = %if.then.94
  %66 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %66, %struct._object** %_py_decref_tmp96, align 8
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp96, align 8
  %ob_refcnt97 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 0
  %68 = load i64, i64* %ob_refcnt97, align 8
  %dec98 = add i64 %68, -1
  store i64 %dec98, i64* %ob_refcnt97, align 8
  %cmp99 = icmp ne i64 %dec98, 0
  br i1 %cmp99, label %if.then.100, label %if.else.101

if.then.100:                                      ; preds = %do.body.95
  br label %if.end.104

if.else.101:                                      ; preds = %do.body.95
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp96, align 8
  %ob_type102 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 1
  %70 = load %struct._typeobject*, %struct._typeobject** %ob_type102, align 8
  %tp_dealloc103 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %70, i32 0, i32 4
  %71 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc103, align 8
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp96, align 8
  call void %71(%struct._object* %72)
  br label %if.end.104

if.end.104:                                       ; preds = %if.else.101, %if.then.100
  br label %do.end.105

do.end.105:                                       ; preds = %if.end.104
  br label %if.end.106

if.end.106:                                       ; preds = %do.end.105, %do.body.92
  br label %do.end.107

do.end.107:                                       ; preds = %if.end.106
  br label %do.body.108

do.body.108:                                      ; preds = %do.end.107
  %73 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %73, %struct._object** %_py_xdecref_tmp109, align 8
  %74 = load %struct._object*, %struct._object** %_py_xdecref_tmp109, align 8
  %cmp110 = icmp ne %struct._object* %74, null
  br i1 %cmp110, label %if.then.111, label %if.end.123

if.then.111:                                      ; preds = %do.body.108
  br label %do.body.112

do.body.112:                                      ; preds = %if.then.111
  %75 = load %struct._object*, %struct._object** %_py_xdecref_tmp109, align 8
  store %struct._object* %75, %struct._object** %_py_decref_tmp113, align 8
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8
  %ob_refcnt114 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0
  %77 = load i64, i64* %ob_refcnt114, align 8
  %dec115 = add i64 %77, -1
  store i64 %dec115, i64* %ob_refcnt114, align 8
  %cmp116 = icmp ne i64 %dec115, 0
  br i1 %cmp116, label %if.then.117, label %if.else.118

if.then.117:                                      ; preds = %do.body.112
  br label %if.end.121

if.else.118:                                      ; preds = %do.body.112
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8
  %ob_type119 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 1
  %79 = load %struct._typeobject*, %struct._typeobject** %ob_type119, align 8
  %tp_dealloc120 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %79, i32 0, i32 4
  %80 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc120, align 8
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8
  call void %80(%struct._object* %81)
  br label %if.end.121

if.end.121:                                       ; preds = %if.else.118, %if.then.117
  br label %do.end.122

do.end.122:                                       ; preds = %if.end.121
  br label %if.end.123

if.end.123:                                       ; preds = %do.end.122, %do.body.108
  br label %do.end.124

do.end.124:                                       ; preds = %if.end.123
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.124, %sw.epilog, %if.then
  %82 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %82
}

; Function Attrs: nounwind uwtable
define %struct._mod* @PyAST_obj2mod(%struct._object* %ast, %struct._arena* %arena, i32 %mode) #0 {
entry:
  %retval = alloca %struct._mod*, align 8
  %ast.addr = alloca %struct._object*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %mode.addr = alloca i32, align 4
  %res = alloca %struct._mod*, align 8
  %req_type = alloca [3 x %struct._object*], align 16
  %req_name = alloca [3 x i8*], align 16
  %isinstance = alloca i32, align 4
  store %struct._object* %ast, %struct._object** %ast.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  store i32 %mode, i32* %mode.addr, align 4
  %0 = bitcast [3 x i8*]* %req_name to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([3 x i8*]* @PyAST_obj2mod.req_name to i8*), i64 24, i32 16, i1 false)
  %1 = load %struct._typeobject*, %struct._typeobject** @Module_type, align 8
  %2 = bitcast %struct._typeobject* %1 to %struct._object*
  %arrayidx = getelementptr [3 x %struct._object*], [3 x %struct._object*]* %req_type, i32 0, i64 0
  store %struct._object* %2, %struct._object** %arrayidx, align 8
  %3 = load %struct._typeobject*, %struct._typeobject** @Expression_type, align 8
  %4 = bitcast %struct._typeobject* %3 to %struct._object*
  %arrayidx1 = getelementptr [3 x %struct._object*], [3 x %struct._object*]* %req_type, i32 0, i64 1
  store %struct._object* %4, %struct._object** %arrayidx1, align 8
  %5 = load %struct._typeobject*, %struct._typeobject** @Interactive_type, align 8
  %6 = bitcast %struct._typeobject* %5 to %struct._object*
  %arrayidx2 = getelementptr [3 x %struct._object*], [3 x %struct._object*]* %req_type, i32 0, i64 2
  store %struct._object* %6, %struct._object** %arrayidx2, align 8
  %call = call i32 @init_types()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._mod* null, %struct._mod** %retval
  br label %return

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %ast.addr, align 8
  %8 = load i32, i32* %mode.addr, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx3 = getelementptr [3 x %struct._object*], [3 x %struct._object*]* %req_type, i32 0, i64 %idxprom
  %9 = load %struct._object*, %struct._object** %arrayidx3, align 8
  %call4 = call i32 @PyObject_IsInstance(%struct._object* %7, %struct._object* %9)
  store i32 %call4, i32* %isinstance, align 4
  %10 = load i32, i32* %isinstance, align 4
  %cmp = icmp eq i32 %10, -1
  br i1 %cmp, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store %struct._mod* null, %struct._mod** %retval
  br label %return

if.end.6:                                         ; preds = %if.end
  %11 = load i32, i32* %isinstance, align 4
  %tobool7 = icmp ne i32 %11, 0
  br i1 %tobool7, label %if.end.12, label %if.then.8

if.then.8:                                        ; preds = %if.end.6
  %12 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %13 = load i32, i32* %mode.addr, align 4
  %idxprom9 = sext i32 %13 to i64
  %arrayidx10 = getelementptr [3 x i8*], [3 x i8*]* %req_name, i32 0, i64 %idxprom9
  %14 = load i8*, i8** %arrayidx10, align 8
  %15 = load %struct._object*, %struct._object** %ast.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 1
  %17 = load i8*, i8** %tp_name, align 8
  %call11 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.164, i32 0, i32 0), i8* %14, i8* %17)
  store %struct._mod* null, %struct._mod** %retval
  br label %return

if.end.12:                                        ; preds = %if.end.6
  %18 = load %struct._object*, %struct._object** %ast.addr, align 8
  %19 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call13 = call i32 @obj2ast_mod(%struct._object* %18, %struct._mod** %res, %struct._arena* %19)
  %cmp14 = icmp ne i32 %call13, 0
  br i1 %cmp14, label %if.then.15, label %if.else

if.then.15:                                       ; preds = %if.end.12
  store %struct._mod* null, %struct._mod** %retval
  br label %return

if.else:                                          ; preds = %if.end.12
  %20 = load %struct._mod*, %struct._mod** %res, align 8
  store %struct._mod* %20, %struct._mod** %retval
  br label %return

return:                                           ; preds = %if.else, %if.then.15, %if.then.8, %if.then.5, %if.then
  %21 = load %struct._mod*, %struct._mod** %retval
  ret %struct._mod* %21
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

declare i32 @PyObject_IsInstance(%struct._object*, %struct._object*) #1

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_mod(%struct._object* %obj, %struct._mod** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._mod**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %isinstance = alloca i32, align 4
  %tmp = alloca %struct._object*, align 8
  %body = alloca %struct.asdl_seq*, align 8
  %res = alloca i32, align 4
  %len = alloca i64, align 8
  %i = alloca i64, align 8
  %value = alloca %struct._stmt*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %body57 = alloca %struct.asdl_seq*, align 8
  %res62 = alloca i32, align 4
  %len64 = alloca i64, align 8
  %i66 = alloca i64, align 8
  %value89 = alloca %struct._stmt*, align 8
  %_py_tmp103 = alloca %struct._object*, align 8
  %_py_decref_tmp108 = alloca %struct._object*, align 8
  %body134 = alloca %struct._expr*, align 8
  %res139 = alloca i32, align 4
  %_py_tmp150 = alloca %struct._object*, align 8
  %_py_decref_tmp155 = alloca %struct._object*, align 8
  %body181 = alloca %struct.asdl_seq*, align 8
  %res186 = alloca i32, align 4
  %len188 = alloca i64, align 8
  %i190 = alloca i64, align 8
  %value213 = alloca %struct._stmt*, align 8
  %_py_tmp227 = alloca %struct._object*, align 8
  %_py_decref_tmp232 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp258 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._mod** %out, %struct._mod*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  store %struct._object* null, %struct._object** %tmp, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %cmp = icmp eq %struct._object* %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._mod**, %struct._mod*** %out.addr, align 8
  store %struct._mod* null, %struct._mod** %1, align 8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %obj.addr, align 8
  %3 = load %struct._typeobject*, %struct._typeobject** @Module_type, align 8
  %4 = bitcast %struct._typeobject* %3 to %struct._object*
  %call = call i32 @PyObject_IsInstance(%struct._object* %2, %struct._object* %4)
  store i32 %call, i32* %isinstance, align 4
  %5 = load i32, i32* %isinstance, align 4
  %cmp1 = icmp eq i32 %5, -1
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load i32, i32* %isinstance, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then.4, label %if.end.49

if.then.4:                                        ; preds = %if.end.3
  %7 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call6 = call i32 @_PyObject_HasAttrId(%struct._object* %7, %struct._Py_Identifier* @PyId_body)
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.then.8, label %if.else.43

if.then.8:                                        ; preds = %if.then.4
  %8 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call12 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %8, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call12, %struct._object** %tmp, align 8
  %9 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp13 = icmp eq %struct._object* %9, null
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.then.8
  br label %failed

if.end.15:                                        ; preds = %if.then.8
  %10 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 19
  %12 = load i64, i64* %tp_flags, align 8
  %and = and i64 %12, 33554432
  %cmp16 = icmp ne i64 %and, 0
  br i1 %cmp16, label %if.end.20, label %if.then.17

if.then.17:                                       ; preds = %if.end.15
  %13 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %14 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 1
  %16 = load i8*, i8** %tp_name, align 8
  %call19 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %13, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.242, i32 0, i32 0), i8* %16)
  br label %failed

if.end.20:                                        ; preds = %if.end.15
  %17 = load %struct._object*, %struct._object** %tmp, align 8
  %18 = bitcast %struct._object* %17 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %18, i32 0, i32 1
  %19 = load i64, i64* %ob_size, align 8
  store i64 %19, i64* %len, align 8
  %20 = load i64, i64* %len, align 8
  %21 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call21 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %20, %struct._arena* %21)
  store %struct.asdl_seq* %call21, %struct.asdl_seq** %body, align 8
  %22 = load %struct.asdl_seq*, %struct.asdl_seq** %body, align 8
  %cmp22 = icmp eq %struct.asdl_seq* %22, null
  br i1 %cmp22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.end.20
  br label %failed

if.end.24:                                        ; preds = %if.end.20
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.24
  %23 = load i64, i64* %i, align 8
  %24 = load i64, i64* %len, align 8
  %cmp25 = icmp slt i64 %23, %24
  br i1 %cmp25, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %25 = load i64, i64* %i, align 8
  %26 = load %struct._object*, %struct._object** %tmp, align 8
  %27 = bitcast %struct._object* %26 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %27, i32 0, i32 1
  %28 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %28, i64 %25
  %29 = load %struct._object*, %struct._object** %arrayidx, align 8
  %30 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call27 = call i32 @obj2ast_stmt(%struct._object* %29, %struct._stmt** %value, %struct._arena* %30)
  store i32 %call27, i32* %res, align 4
  %31 = load i32, i32* %res, align 4
  %cmp28 = icmp ne i32 %31, 0
  br i1 %cmp28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %for.body
  br label %failed

if.end.30:                                        ; preds = %for.body
  %32 = load %struct._stmt*, %struct._stmt** %value, align 8
  %33 = bitcast %struct._stmt* %32 to i8*
  %34 = load i64, i64* %i, align 8
  %35 = load %struct.asdl_seq*, %struct.asdl_seq** %body, align 8
  %elements = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %35, i32 0, i32 1
  %arrayidx31 = getelementptr [1 x i8*], [1 x i8*]* %elements, i32 0, i64 %34
  store i8* %33, i8** %arrayidx31, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.30
  %36 = load i64, i64* %i, align 8
  %inc = add i64 %36, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %for.end
  %37 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %37, %struct._object** %_py_tmp, align 8
  %38 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp33 = icmp ne %struct._object* %38, null
  br i1 %cmp33, label %if.then.34, label %if.end.41

if.then.34:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.35

do.body.35:                                       ; preds = %if.then.34
  %39 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %39, %struct._object** %_py_decref_tmp, align 8
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0
  %41 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %41, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp37 = icmp ne i64 %dec, 0
  br i1 %cmp37, label %if.then.38, label %if.else

if.then.38:                                       ; preds = %do.body.35
  br label %if.end.40

if.else:                                          ; preds = %do.body.35
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type39 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type39, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %44(%struct._object* %45)
  br label %if.end.40

if.end.40:                                        ; preds = %if.else, %if.then.38
  br label %do.end

do.end:                                           ; preds = %if.end.40
  br label %if.end.41

if.end.41:                                        ; preds = %do.end, %do.body
  br label %do.end.42

do.end.42:                                        ; preds = %if.end.41
  br label %if.end.44

if.else.43:                                       ; preds = %if.then.4
  %46 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %46, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.243, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.44:                                        ; preds = %do.end.42
  %47 = load %struct.asdl_seq*, %struct.asdl_seq** %body, align 8
  %48 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call45 = call %struct._mod* @_Py_Module(%struct.asdl_seq* %47, %struct._arena* %48)
  %49 = load %struct._mod**, %struct._mod*** %out.addr, align 8
  store %struct._mod* %call45, %struct._mod** %49, align 8
  %50 = load %struct._mod**, %struct._mod*** %out.addr, align 8
  %51 = load %struct._mod*, %struct._mod** %50, align 8
  %cmp46 = icmp eq %struct._mod* %51, null
  br i1 %cmp46, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %if.end.44
  br label %failed

if.end.48:                                        ; preds = %if.end.44
  store i32 0, i32* %retval
  br label %return

if.end.49:                                        ; preds = %if.end.3
  %52 = load %struct._object*, %struct._object** %obj.addr, align 8
  %53 = load %struct._typeobject*, %struct._typeobject** @Interactive_type, align 8
  %54 = bitcast %struct._typeobject* %53 to %struct._object*
  %call50 = call i32 @PyObject_IsInstance(%struct._object* %52, %struct._object* %54)
  store i32 %call50, i32* %isinstance, align 4
  %55 = load i32, i32* %isinstance, align 4
  %cmp51 = icmp eq i32 %55, -1
  br i1 %cmp51, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %if.end.49
  store i32 1, i32* %retval
  br label %return

if.end.53:                                        ; preds = %if.end.49
  %56 = load i32, i32* %isinstance, align 4
  %tobool54 = icmp ne i32 %56, 0
  br i1 %tobool54, label %if.then.55, label %if.end.126

if.then.55:                                       ; preds = %if.end.53
  %57 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call58 = call i32 @_PyObject_HasAttrId(%struct._object* %57, %struct._Py_Identifier* @PyId_body)
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.then.60, label %if.else.120

if.then.60:                                       ; preds = %if.then.55
  %58 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call67 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %58, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call67, %struct._object** %tmp, align 8
  %59 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp68 = icmp eq %struct._object* %59, null
  br i1 %cmp68, label %if.then.69, label %if.end.70

if.then.69:                                       ; preds = %if.then.60
  br label %failed

if.end.70:                                        ; preds = %if.then.60
  %60 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type71 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 1
  %61 = load %struct._typeobject*, %struct._typeobject** %ob_type71, align 8
  %tp_flags72 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 19
  %62 = load i64, i64* %tp_flags72, align 8
  %and73 = and i64 %62, 33554432
  %cmp74 = icmp ne i64 %and73, 0
  br i1 %cmp74, label %if.end.79, label %if.then.75

if.then.75:                                       ; preds = %if.end.70
  %63 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %64 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type76 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type76, align 8
  %tp_name77 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %65, i32 0, i32 1
  %66 = load i8*, i8** %tp_name77, align 8
  %call78 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %63, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.244, i32 0, i32 0), i8* %66)
  br label %failed

if.end.79:                                        ; preds = %if.end.70
  %67 = load %struct._object*, %struct._object** %tmp, align 8
  %68 = bitcast %struct._object* %67 to %struct.PyVarObject*
  %ob_size80 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %68, i32 0, i32 1
  %69 = load i64, i64* %ob_size80, align 8
  store i64 %69, i64* %len64, align 8
  %70 = load i64, i64* %len64, align 8
  %71 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call81 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %70, %struct._arena* %71)
  store %struct.asdl_seq* %call81, %struct.asdl_seq** %body57, align 8
  %72 = load %struct.asdl_seq*, %struct.asdl_seq** %body57, align 8
  %cmp82 = icmp eq %struct.asdl_seq* %72, null
  br i1 %cmp82, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %if.end.79
  br label %failed

if.end.84:                                        ; preds = %if.end.79
  store i64 0, i64* %i66, align 8
  br label %for.cond.85

for.cond.85:                                      ; preds = %for.inc.98, %if.end.84
  %73 = load i64, i64* %i66, align 8
  %74 = load i64, i64* %len64, align 8
  %cmp86 = icmp slt i64 %73, %74
  br i1 %cmp86, label %for.body.87, label %for.end.100

for.body.87:                                      ; preds = %for.cond.85
  %75 = load i64, i64* %i66, align 8
  %76 = load %struct._object*, %struct._object** %tmp, align 8
  %77 = bitcast %struct._object* %76 to %struct.PyListObject*
  %ob_item90 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %77, i32 0, i32 1
  %78 = load %struct._object**, %struct._object*** %ob_item90, align 8
  %arrayidx91 = getelementptr %struct._object*, %struct._object** %78, i64 %75
  %79 = load %struct._object*, %struct._object** %arrayidx91, align 8
  %80 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call92 = call i32 @obj2ast_stmt(%struct._object* %79, %struct._stmt** %value89, %struct._arena* %80)
  store i32 %call92, i32* %res62, align 4
  %81 = load i32, i32* %res62, align 4
  %cmp93 = icmp ne i32 %81, 0
  br i1 %cmp93, label %if.then.94, label %if.end.95

if.then.94:                                       ; preds = %for.body.87
  br label %failed

if.end.95:                                        ; preds = %for.body.87
  %82 = load %struct._stmt*, %struct._stmt** %value89, align 8
  %83 = bitcast %struct._stmt* %82 to i8*
  %84 = load i64, i64* %i66, align 8
  %85 = load %struct.asdl_seq*, %struct.asdl_seq** %body57, align 8
  %elements96 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %85, i32 0, i32 1
  %arrayidx97 = getelementptr [1 x i8*], [1 x i8*]* %elements96, i32 0, i64 %84
  store i8* %83, i8** %arrayidx97, align 8
  br label %for.inc.98

for.inc.98:                                       ; preds = %if.end.95
  %86 = load i64, i64* %i66, align 8
  %inc99 = add i64 %86, 1
  store i64 %inc99, i64* %i66, align 8
  br label %for.cond.85

for.end.100:                                      ; preds = %for.cond.85
  br label %do.body.101

do.body.101:                                      ; preds = %for.end.100
  %87 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %87, %struct._object** %_py_tmp103, align 8
  %88 = load %struct._object*, %struct._object** %_py_tmp103, align 8
  %cmp104 = icmp ne %struct._object* %88, null
  br i1 %cmp104, label %if.then.105, label %if.end.118

if.then.105:                                      ; preds = %do.body.101
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.106

do.body.106:                                      ; preds = %if.then.105
  %89 = load %struct._object*, %struct._object** %_py_tmp103, align 8
  store %struct._object* %89, %struct._object** %_py_decref_tmp108, align 8
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8
  %ob_refcnt109 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 0
  %91 = load i64, i64* %ob_refcnt109, align 8
  %dec110 = add i64 %91, -1
  store i64 %dec110, i64* %ob_refcnt109, align 8
  %cmp111 = icmp ne i64 %dec110, 0
  br i1 %cmp111, label %if.then.112, label %if.else.113

if.then.112:                                      ; preds = %do.body.106
  br label %if.end.116

if.else.113:                                      ; preds = %do.body.106
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8
  %ob_type114 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 1
  %93 = load %struct._typeobject*, %struct._typeobject** %ob_type114, align 8
  %tp_dealloc115 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %93, i32 0, i32 4
  %94 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc115, align 8
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8
  call void %94(%struct._object* %95)
  br label %if.end.116

if.end.116:                                       ; preds = %if.else.113, %if.then.112
  br label %do.end.117

do.end.117:                                       ; preds = %if.end.116
  br label %if.end.118

if.end.118:                                       ; preds = %do.end.117, %do.body.101
  br label %do.end.119

do.end.119:                                       ; preds = %if.end.118
  br label %if.end.121

if.else.120:                                      ; preds = %if.then.55
  %96 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %96, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.245, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.121:                                       ; preds = %do.end.119
  %97 = load %struct.asdl_seq*, %struct.asdl_seq** %body57, align 8
  %98 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call122 = call %struct._mod* @_Py_Interactive(%struct.asdl_seq* %97, %struct._arena* %98)
  %99 = load %struct._mod**, %struct._mod*** %out.addr, align 8
  store %struct._mod* %call122, %struct._mod** %99, align 8
  %100 = load %struct._mod**, %struct._mod*** %out.addr, align 8
  %101 = load %struct._mod*, %struct._mod** %100, align 8
  %cmp123 = icmp eq %struct._mod* %101, null
  br i1 %cmp123, label %if.then.124, label %if.end.125

if.then.124:                                      ; preds = %if.end.121
  br label %failed

if.end.125:                                       ; preds = %if.end.121
  store i32 0, i32* %retval
  br label %return

if.end.126:                                       ; preds = %if.end.53
  %102 = load %struct._object*, %struct._object** %obj.addr, align 8
  %103 = load %struct._typeobject*, %struct._typeobject** @Expression_type, align 8
  %104 = bitcast %struct._typeobject* %103 to %struct._object*
  %call127 = call i32 @PyObject_IsInstance(%struct._object* %102, %struct._object* %104)
  store i32 %call127, i32* %isinstance, align 4
  %105 = load i32, i32* %isinstance, align 4
  %cmp128 = icmp eq i32 %105, -1
  br i1 %cmp128, label %if.then.129, label %if.end.130

if.then.129:                                      ; preds = %if.end.126
  store i32 1, i32* %retval
  br label %return

if.end.130:                                       ; preds = %if.end.126
  %106 = load i32, i32* %isinstance, align 4
  %tobool131 = icmp ne i32 %106, 0
  br i1 %tobool131, label %if.then.132, label %if.end.173

if.then.132:                                      ; preds = %if.end.130
  %107 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call135 = call i32 @_PyObject_HasAttrId(%struct._object* %107, %struct._Py_Identifier* @PyId_body)
  %tobool136 = icmp ne i32 %call135, 0
  br i1 %tobool136, label %if.then.137, label %if.else.167

if.then.137:                                      ; preds = %if.then.132
  %108 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call140 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %108, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call140, %struct._object** %tmp, align 8
  %109 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp141 = icmp eq %struct._object* %109, null
  br i1 %cmp141, label %if.then.142, label %if.end.143

if.then.142:                                      ; preds = %if.then.137
  br label %failed

if.end.143:                                       ; preds = %if.then.137
  %110 = load %struct._object*, %struct._object** %tmp, align 8
  %111 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call144 = call i32 @obj2ast_expr(%struct._object* %110, %struct._expr** %body134, %struct._arena* %111)
  store i32 %call144, i32* %res139, align 4
  %112 = load i32, i32* %res139, align 4
  %cmp145 = icmp ne i32 %112, 0
  br i1 %cmp145, label %if.then.146, label %if.end.147

if.then.146:                                      ; preds = %if.end.143
  br label %failed

if.end.147:                                       ; preds = %if.end.143
  br label %do.body.148

do.body.148:                                      ; preds = %if.end.147
  %113 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %113, %struct._object** %_py_tmp150, align 8
  %114 = load %struct._object*, %struct._object** %_py_tmp150, align 8
  %cmp151 = icmp ne %struct._object* %114, null
  br i1 %cmp151, label %if.then.152, label %if.end.165

if.then.152:                                      ; preds = %do.body.148
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.153

do.body.153:                                      ; preds = %if.then.152
  %115 = load %struct._object*, %struct._object** %_py_tmp150, align 8
  store %struct._object* %115, %struct._object** %_py_decref_tmp155, align 8
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp155, align 8
  %ob_refcnt156 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 0
  %117 = load i64, i64* %ob_refcnt156, align 8
  %dec157 = add i64 %117, -1
  store i64 %dec157, i64* %ob_refcnt156, align 8
  %cmp158 = icmp ne i64 %dec157, 0
  br i1 %cmp158, label %if.then.159, label %if.else.160

if.then.159:                                      ; preds = %do.body.153
  br label %if.end.163

if.else.160:                                      ; preds = %do.body.153
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp155, align 8
  %ob_type161 = getelementptr inbounds %struct._object, %struct._object* %118, i32 0, i32 1
  %119 = load %struct._typeobject*, %struct._typeobject** %ob_type161, align 8
  %tp_dealloc162 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %119, i32 0, i32 4
  %120 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc162, align 8
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp155, align 8
  call void %120(%struct._object* %121)
  br label %if.end.163

if.end.163:                                       ; preds = %if.else.160, %if.then.159
  br label %do.end.164

do.end.164:                                       ; preds = %if.end.163
  br label %if.end.165

if.end.165:                                       ; preds = %do.end.164, %do.body.148
  br label %do.end.166

do.end.166:                                       ; preds = %if.end.165
  br label %if.end.168

if.else.167:                                      ; preds = %if.then.132
  %122 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %122, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.246, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.168:                                       ; preds = %do.end.166
  %123 = load %struct._expr*, %struct._expr** %body134, align 8
  %124 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call169 = call %struct._mod* @_Py_Expression(%struct._expr* %123, %struct._arena* %124)
  %125 = load %struct._mod**, %struct._mod*** %out.addr, align 8
  store %struct._mod* %call169, %struct._mod** %125, align 8
  %126 = load %struct._mod**, %struct._mod*** %out.addr, align 8
  %127 = load %struct._mod*, %struct._mod** %126, align 8
  %cmp170 = icmp eq %struct._mod* %127, null
  br i1 %cmp170, label %if.then.171, label %if.end.172

if.then.171:                                      ; preds = %if.end.168
  br label %failed

if.end.172:                                       ; preds = %if.end.168
  store i32 0, i32* %retval
  br label %return

if.end.173:                                       ; preds = %if.end.130
  %128 = load %struct._object*, %struct._object** %obj.addr, align 8
  %129 = load %struct._typeobject*, %struct._typeobject** @Suite_type, align 8
  %130 = bitcast %struct._typeobject* %129 to %struct._object*
  %call174 = call i32 @PyObject_IsInstance(%struct._object* %128, %struct._object* %130)
  store i32 %call174, i32* %isinstance, align 4
  %131 = load i32, i32* %isinstance, align 4
  %cmp175 = icmp eq i32 %131, -1
  br i1 %cmp175, label %if.then.176, label %if.end.177

if.then.176:                                      ; preds = %if.end.173
  store i32 1, i32* %retval
  br label %return

if.end.177:                                       ; preds = %if.end.173
  %132 = load i32, i32* %isinstance, align 4
  %tobool178 = icmp ne i32 %132, 0
  br i1 %tobool178, label %if.then.179, label %if.end.250

if.then.179:                                      ; preds = %if.end.177
  %133 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call182 = call i32 @_PyObject_HasAttrId(%struct._object* %133, %struct._Py_Identifier* @PyId_body)
  %tobool183 = icmp ne i32 %call182, 0
  br i1 %tobool183, label %if.then.184, label %if.else.244

if.then.184:                                      ; preds = %if.then.179
  %134 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call191 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %134, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call191, %struct._object** %tmp, align 8
  %135 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp192 = icmp eq %struct._object* %135, null
  br i1 %cmp192, label %if.then.193, label %if.end.194

if.then.193:                                      ; preds = %if.then.184
  br label %failed

if.end.194:                                       ; preds = %if.then.184
  %136 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type195 = getelementptr inbounds %struct._object, %struct._object* %136, i32 0, i32 1
  %137 = load %struct._typeobject*, %struct._typeobject** %ob_type195, align 8
  %tp_flags196 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %137, i32 0, i32 19
  %138 = load i64, i64* %tp_flags196, align 8
  %and197 = and i64 %138, 33554432
  %cmp198 = icmp ne i64 %and197, 0
  br i1 %cmp198, label %if.end.203, label %if.then.199

if.then.199:                                      ; preds = %if.end.194
  %139 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %140 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type200 = getelementptr inbounds %struct._object, %struct._object* %140, i32 0, i32 1
  %141 = load %struct._typeobject*, %struct._typeobject** %ob_type200, align 8
  %tp_name201 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %141, i32 0, i32 1
  %142 = load i8*, i8** %tp_name201, align 8
  %call202 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %139, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.247, i32 0, i32 0), i8* %142)
  br label %failed

if.end.203:                                       ; preds = %if.end.194
  %143 = load %struct._object*, %struct._object** %tmp, align 8
  %144 = bitcast %struct._object* %143 to %struct.PyVarObject*
  %ob_size204 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %144, i32 0, i32 1
  %145 = load i64, i64* %ob_size204, align 8
  store i64 %145, i64* %len188, align 8
  %146 = load i64, i64* %len188, align 8
  %147 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call205 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %146, %struct._arena* %147)
  store %struct.asdl_seq* %call205, %struct.asdl_seq** %body181, align 8
  %148 = load %struct.asdl_seq*, %struct.asdl_seq** %body181, align 8
  %cmp206 = icmp eq %struct.asdl_seq* %148, null
  br i1 %cmp206, label %if.then.207, label %if.end.208

if.then.207:                                      ; preds = %if.end.203
  br label %failed

if.end.208:                                       ; preds = %if.end.203
  store i64 0, i64* %i190, align 8
  br label %for.cond.209

for.cond.209:                                     ; preds = %for.inc.222, %if.end.208
  %149 = load i64, i64* %i190, align 8
  %150 = load i64, i64* %len188, align 8
  %cmp210 = icmp slt i64 %149, %150
  br i1 %cmp210, label %for.body.211, label %for.end.224

for.body.211:                                     ; preds = %for.cond.209
  %151 = load i64, i64* %i190, align 8
  %152 = load %struct._object*, %struct._object** %tmp, align 8
  %153 = bitcast %struct._object* %152 to %struct.PyListObject*
  %ob_item214 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %153, i32 0, i32 1
  %154 = load %struct._object**, %struct._object*** %ob_item214, align 8
  %arrayidx215 = getelementptr %struct._object*, %struct._object** %154, i64 %151
  %155 = load %struct._object*, %struct._object** %arrayidx215, align 8
  %156 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call216 = call i32 @obj2ast_stmt(%struct._object* %155, %struct._stmt** %value213, %struct._arena* %156)
  store i32 %call216, i32* %res186, align 4
  %157 = load i32, i32* %res186, align 4
  %cmp217 = icmp ne i32 %157, 0
  br i1 %cmp217, label %if.then.218, label %if.end.219

if.then.218:                                      ; preds = %for.body.211
  br label %failed

if.end.219:                                       ; preds = %for.body.211
  %158 = load %struct._stmt*, %struct._stmt** %value213, align 8
  %159 = bitcast %struct._stmt* %158 to i8*
  %160 = load i64, i64* %i190, align 8
  %161 = load %struct.asdl_seq*, %struct.asdl_seq** %body181, align 8
  %elements220 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %161, i32 0, i32 1
  %arrayidx221 = getelementptr [1 x i8*], [1 x i8*]* %elements220, i32 0, i64 %160
  store i8* %159, i8** %arrayidx221, align 8
  br label %for.inc.222

for.inc.222:                                      ; preds = %if.end.219
  %162 = load i64, i64* %i190, align 8
  %inc223 = add i64 %162, 1
  store i64 %inc223, i64* %i190, align 8
  br label %for.cond.209

for.end.224:                                      ; preds = %for.cond.209
  br label %do.body.225

do.body.225:                                      ; preds = %for.end.224
  %163 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %163, %struct._object** %_py_tmp227, align 8
  %164 = load %struct._object*, %struct._object** %_py_tmp227, align 8
  %cmp228 = icmp ne %struct._object* %164, null
  br i1 %cmp228, label %if.then.229, label %if.end.242

if.then.229:                                      ; preds = %do.body.225
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.230

do.body.230:                                      ; preds = %if.then.229
  %165 = load %struct._object*, %struct._object** %_py_tmp227, align 8
  store %struct._object* %165, %struct._object** %_py_decref_tmp232, align 8
  %166 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8
  %ob_refcnt233 = getelementptr inbounds %struct._object, %struct._object* %166, i32 0, i32 0
  %167 = load i64, i64* %ob_refcnt233, align 8
  %dec234 = add i64 %167, -1
  store i64 %dec234, i64* %ob_refcnt233, align 8
  %cmp235 = icmp ne i64 %dec234, 0
  br i1 %cmp235, label %if.then.236, label %if.else.237

if.then.236:                                      ; preds = %do.body.230
  br label %if.end.240

if.else.237:                                      ; preds = %do.body.230
  %168 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8
  %ob_type238 = getelementptr inbounds %struct._object, %struct._object* %168, i32 0, i32 1
  %169 = load %struct._typeobject*, %struct._typeobject** %ob_type238, align 8
  %tp_dealloc239 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %169, i32 0, i32 4
  %170 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc239, align 8
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8
  call void %170(%struct._object* %171)
  br label %if.end.240

if.end.240:                                       ; preds = %if.else.237, %if.then.236
  br label %do.end.241

do.end.241:                                       ; preds = %if.end.240
  br label %if.end.242

if.end.242:                                       ; preds = %do.end.241, %do.body.225
  br label %do.end.243

do.end.243:                                       ; preds = %if.end.242
  br label %if.end.245

if.else.244:                                      ; preds = %if.then.179
  %172 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %172, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.248, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.245:                                       ; preds = %do.end.243
  %173 = load %struct.asdl_seq*, %struct.asdl_seq** %body181, align 8
  %174 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call246 = call %struct._mod* @_Py_Suite(%struct.asdl_seq* %173, %struct._arena* %174)
  %175 = load %struct._mod**, %struct._mod*** %out.addr, align 8
  store %struct._mod* %call246, %struct._mod** %175, align 8
  %176 = load %struct._mod**, %struct._mod*** %out.addr, align 8
  %177 = load %struct._mod*, %struct._mod** %176, align 8
  %cmp247 = icmp eq %struct._mod* %177, null
  br i1 %cmp247, label %if.then.248, label %if.end.249

if.then.248:                                      ; preds = %if.end.245
  br label %failed

if.end.249:                                       ; preds = %if.end.245
  store i32 0, i32* %retval
  br label %return

if.end.250:                                       ; preds = %if.end.177
  %178 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %179 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call251 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %178, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.249, i32 0, i32 0), %struct._object* %179)
  br label %failed

failed:                                           ; preds = %if.end.250, %if.then.248, %if.then.218, %if.then.207, %if.then.199, %if.then.193, %if.then.171, %if.then.146, %if.then.142, %if.then.124, %if.then.94, %if.then.83, %if.then.75, %if.then.69, %if.then.47, %if.then.29, %if.then.23, %if.then.17, %if.then.14
  br label %do.body.252

do.body.252:                                      ; preds = %failed
  %180 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %180, %struct._object** %_py_xdecref_tmp, align 8
  %181 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp254 = icmp ne %struct._object* %181, null
  br i1 %cmp254, label %if.then.255, label %if.end.268

if.then.255:                                      ; preds = %do.body.252
  br label %do.body.256

do.body.256:                                      ; preds = %if.then.255
  %182 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %182, %struct._object** %_py_decref_tmp258, align 8
  %183 = load %struct._object*, %struct._object** %_py_decref_tmp258, align 8
  %ob_refcnt259 = getelementptr inbounds %struct._object, %struct._object* %183, i32 0, i32 0
  %184 = load i64, i64* %ob_refcnt259, align 8
  %dec260 = add i64 %184, -1
  store i64 %dec260, i64* %ob_refcnt259, align 8
  %cmp261 = icmp ne i64 %dec260, 0
  br i1 %cmp261, label %if.then.262, label %if.else.263

if.then.262:                                      ; preds = %do.body.256
  br label %if.end.266

if.else.263:                                      ; preds = %do.body.256
  %185 = load %struct._object*, %struct._object** %_py_decref_tmp258, align 8
  %ob_type264 = getelementptr inbounds %struct._object, %struct._object* %185, i32 0, i32 1
  %186 = load %struct._typeobject*, %struct._typeobject** %ob_type264, align 8
  %tp_dealloc265 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %186, i32 0, i32 4
  %187 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc265, align 8
  %188 = load %struct._object*, %struct._object** %_py_decref_tmp258, align 8
  call void %187(%struct._object* %188)
  br label %if.end.266

if.end.266:                                       ; preds = %if.else.263, %if.then.262
  br label %do.end.267

do.end.267:                                       ; preds = %if.end.266
  br label %if.end.268

if.end.268:                                       ; preds = %do.end.267, %do.body.252
  br label %do.end.269

do.end.269:                                       ; preds = %if.end.268
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %do.end.269, %if.end.249, %if.else.244, %if.then.176, %if.end.172, %if.else.167, %if.then.129, %if.end.125, %if.else.120, %if.then.52, %if.end.48, %if.else.43, %if.then.2, %if.then
  %189 = load i32, i32* %retval
  ret i32 %189
}

; Function Attrs: nounwind uwtable
define i32 @PyAST_Check(%struct._object* %obj) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  %call = call i32 @init_types()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1 = call i32 @PyObject_IsInstance(%struct._object* %0, %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @AST_type, i32 0, i32 0, i32 0))
  store i32 %call1, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define internal i32 @add_ast_fields() #0 {
entry:
  %retval = alloca i32, align 4
  %empty_tuple = alloca %struct._object*, align 8
  %d = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp18 = alloca %struct._object*, align 8
  %call = call i32 @PyType_Ready(%struct._typeobject* @AST_type)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %0 = load %struct._object*, %struct._object** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @AST_type, i32 0, i32 31), align 8
  store %struct._object* %0, %struct._object** %d, align 8
  %call1 = call %struct._object* @PyTuple_New(i64 0)
  store %struct._object* %call1, %struct._object** %empty_tuple, align 8
  %1 = load %struct._object*, %struct._object** %empty_tuple, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %lor.lhs.false, label %if.then.7

lor.lhs.false:                                    ; preds = %if.end
  %2 = load %struct._object*, %struct._object** %d, align 8
  %3 = load %struct._object*, %struct._object** %empty_tuple, align 8
  %call2 = call i32 @PyDict_SetItemString(%struct._object* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.165, i32 0, i32 0), %struct._object* %3)
  %cmp3 = icmp slt i32 %call2, 0
  br i1 %cmp3, label %if.then.7, label %lor.lhs.false.4

lor.lhs.false.4:                                  ; preds = %lor.lhs.false
  %4 = load %struct._object*, %struct._object** %d, align 8
  %5 = load %struct._object*, %struct._object** %empty_tuple, align 8
  %call5 = call i32 @PyDict_SetItemString(%struct._object* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.166, i32 0, i32 0), %struct._object* %5)
  %cmp6 = icmp slt i32 %call5, 0
  br i1 %cmp6, label %if.then.7, label %if.end.16

if.then.7:                                        ; preds = %lor.lhs.false.4, %lor.lhs.false, %if.end
  br label %do.body

do.body:                                          ; preds = %if.then.7
  %6 = load %struct._object*, %struct._object** %empty_tuple, align 8
  store %struct._object* %6, %struct._object** %_py_xdecref_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp8 = icmp ne %struct._object* %7, null
  br i1 %cmp8, label %if.then.9, label %if.end.14

if.then.9:                                        ; preds = %do.body
  br label %do.body.10

do.body.10:                                       ; preds = %if.then.9
  %8 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0
  %10 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %10, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body.10
  br label %if.end.13

if.else:                                          ; preds = %do.body.10
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %13(%struct._object* %14)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  br label %if.end.14

if.end.14:                                        ; preds = %do.end, %do.body
  br label %do.end.15

do.end.15:                                        ; preds = %if.end.14
  store i32 -1, i32* %retval
  br label %return

if.end.16:                                        ; preds = %lor.lhs.false.4
  br label %do.body.17

do.body.17:                                       ; preds = %if.end.16
  %15 = load %struct._object*, %struct._object** %empty_tuple, align 8
  store %struct._object* %15, %struct._object** %_py_decref_tmp18, align 8
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0
  %17 = load i64, i64* %ob_refcnt19, align 8
  %dec20 = add i64 %17, -1
  store i64 %dec20, i64* %ob_refcnt19, align 8
  %cmp21 = icmp ne i64 %dec20, 0
  br i1 %cmp21, label %if.then.22, label %if.else.23

if.then.22:                                       ; preds = %do.body.17
  br label %if.end.26

if.else.23:                                       ; preds = %do.body.17
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8
  %ob_type24 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type24, align 8
  %tp_dealloc25 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc25, align 8
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8
  call void %20(%struct._object* %21)
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.23, %if.then.22
  br label %do.end.27

do.end.27:                                        ; preds = %if.end.26
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end.27, %do.end.15, %if.then
  %22 = load i32, i32* %retval
  ret i32 %22
}

; Function Attrs: nounwind uwtable
define internal %struct._typeobject* @make_type(i8* %type, %struct._typeobject* %base, i8** %fields, i32 %num_fields) #0 {
entry:
  %retval = alloca %struct._typeobject*, align 8
  %type.addr = alloca i8*, align 8
  %base.addr = alloca %struct._typeobject*, align 8
  %fields.addr = alloca i8**, align 8
  %num_fields.addr = alloca i32, align 4
  %fnames = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %field = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  store i8* %type, i8** %type.addr, align 8
  store %struct._typeobject* %base, %struct._typeobject** %base.addr, align 8
  store i8** %fields, i8*** %fields.addr, align 8
  store i32 %num_fields, i32* %num_fields.addr, align 4
  %0 = load i32, i32* %num_fields.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call %struct._object* @PyTuple_New(i64 %conv)
  store %struct._object* %call, %struct._object** %fnames, align 8
  %1 = load %struct._object*, %struct._object** %fnames, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._typeobject* null, %struct._typeobject** %retval
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %num_fields.addr, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load i8**, i8*** %fields.addr, align 8
  %arrayidx = getelementptr i8*, i8** %5, i64 %idxprom
  %6 = load i8*, i8** %arrayidx, align 8
  %call2 = call %struct._object* @PyUnicode_FromString(i8* %6)
  store %struct._object* %call2, %struct._object** %field, align 8
  %7 = load %struct._object*, %struct._object** %field, align 8
  %tobool3 = icmp ne %struct._object* %7, null
  br i1 %tobool3, label %if.end.9, label %if.then.4

if.then.4:                                        ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %if.then.4
  %8 = load %struct._object*, %struct._object** %fnames, align 8
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0
  %10 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %10, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp5 = icmp ne i64 %dec, 0
  br i1 %cmp5, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %do.body
  br label %if.end.8

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %13(%struct._object* %14)
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  br label %do.end

do.end:                                           ; preds = %if.end.8
  store %struct._typeobject* null, %struct._typeobject** %retval
  br label %return

if.end.9:                                         ; preds = %for.body
  %15 = load %struct._object*, %struct._object** %field, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %16 to i64
  %17 = load %struct._object*, %struct._object** %fnames, align 8
  %18 = bitcast %struct._object* %17 to %struct.PyTupleObject*
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %18, i32 0, i32 1
  %arrayidx11 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %idxprom10
  store %struct._object* %15, %struct._object** %arrayidx11, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.9
  %19 = load i32, i32* %i, align 4
  %inc = add i32 %19, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %20 = load i8*, i8** %type.addr, align 8
  %21 = load %struct._typeobject*, %struct._typeobject** %base.addr, align 8
  %22 = load %struct._object*, %struct._object** %fnames, align 8
  %call12 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyType_Type, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.167, i32 0, i32 0), i8* %20, %struct._typeobject* %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.165, i32 0, i32 0), %struct._object* %22, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0))
  store %struct._object* %call12, %struct._object** %result, align 8
  br label %do.body.13

do.body.13:                                       ; preds = %for.end
  %23 = load %struct._object*, %struct._object** %fnames, align 8
  store %struct._object* %23, %struct._object** %_py_decref_tmp14, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0
  %25 = load i64, i64* %ob_refcnt15, align 8
  %dec16 = add i64 %25, -1
  store i64 %dec16, i64* %ob_refcnt15, align 8
  %cmp17 = icmp ne i64 %dec16, 0
  br i1 %cmp17, label %if.then.19, label %if.else.20

if.then.19:                                       ; preds = %do.body.13
  br label %if.end.23

if.else.20:                                       ; preds = %do.body.13
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8
  call void %28(%struct._object* %29)
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  br label %do.end.24

do.end.24:                                        ; preds = %if.end.23
  %30 = load %struct._object*, %struct._object** %result, align 8
  %31 = bitcast %struct._object* %30 to %struct._typeobject*
  store %struct._typeobject* %31, %struct._typeobject** %retval
  br label %return

return:                                           ; preds = %do.end.24, %do.end, %if.then
  %32 = load %struct._typeobject*, %struct._typeobject** %retval
  ret %struct._typeobject* %32
}

; Function Attrs: nounwind uwtable
define internal i32 @add_attributes(%struct._typeobject* %type, i8** %attrs, i32 %num_fields) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca %struct._typeobject*, align 8
  %attrs.addr = alloca i8**, align 8
  %num_fields.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %s = alloca %struct._object*, align 8
  %l = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8
  store i8** %attrs, i8*** %attrs.addr, align 8
  store i32 %num_fields, i32* %num_fields.addr, align 4
  %0 = load i32, i32* %num_fields.addr, align 4
  %conv = sext i32 %0 to i64
  %call = call %struct._object* @PyTuple_New(i64 %conv)
  store %struct._object* %call, %struct._object** %l, align 8
  %1 = load %struct._object*, %struct._object** %l, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %num_fields.addr, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load i8**, i8*** %attrs.addr, align 8
  %arrayidx = getelementptr i8*, i8** %5, i64 %idxprom
  %6 = load i8*, i8** %arrayidx, align 8
  %call2 = call %struct._object* @PyUnicode_FromString(i8* %6)
  store %struct._object* %call2, %struct._object** %s, align 8
  %7 = load %struct._object*, %struct._object** %s, align 8
  %tobool3 = icmp ne %struct._object* %7, null
  br i1 %tobool3, label %if.end.9, label %if.then.4

if.then.4:                                        ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %if.then.4
  %8 = load %struct._object*, %struct._object** %l, align 8
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0
  %10 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %10, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp5 = icmp ne i64 %dec, 0
  br i1 %cmp5, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %do.body
  br label %if.end.8

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %13(%struct._object* %14)
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  br label %do.end

do.end:                                           ; preds = %if.end.8
  store i32 0, i32* %retval
  br label %return

if.end.9:                                         ; preds = %for.body
  %15 = load %struct._object*, %struct._object** %s, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %16 to i64
  %17 = load %struct._object*, %struct._object** %l, align 8
  %18 = bitcast %struct._object* %17 to %struct.PyTupleObject*
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %18, i32 0, i32 1
  %arrayidx11 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %idxprom10
  store %struct._object* %15, %struct._object** %arrayidx11, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.9
  %19 = load i32, i32* %i, align 4
  %inc = add i32 %19, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %20 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %21 = bitcast %struct._typeobject* %20 to %struct._object*
  %22 = load %struct._object*, %struct._object** %l, align 8
  %call12 = call i32 @_PyObject_SetAttrId(%struct._object* %21, %struct._Py_Identifier* @add_attributes.PyId__attributes, %struct._object* %22)
  %cmp13 = icmp sge i32 %call12, 0
  %conv14 = zext i1 %cmp13 to i32
  store i32 %conv14, i32* %result, align 4
  br label %do.body.15

do.body.15:                                       ; preds = %for.end
  %23 = load %struct._object*, %struct._object** %l, align 8
  store %struct._object* %23, %struct._object** %_py_decref_tmp16, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0
  %25 = load i64, i64* %ob_refcnt17, align 8
  %dec18 = add i64 %25, -1
  store i64 %dec18, i64* %ob_refcnt17, align 8
  %cmp19 = icmp ne i64 %dec18, 0
  br i1 %cmp19, label %if.then.21, label %if.else.22

if.then.21:                                       ; preds = %do.body.15
  br label %if.end.25

if.else.22:                                       ; preds = %do.body.15
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8
  call void %28(%struct._object* %29)
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  br label %do.end.26

do.end.26:                                        ; preds = %if.end.25
  %30 = load i32, i32* %result, align 4
  store i32 %30, i32* %retval
  br label %return

return:                                           ; preds = %do.end.26, %do.end, %if.then
  %31 = load i32, i32* %retval
  ret i32 %31
}

declare %struct._object* @PyType_GenericNew(%struct._typeobject*, %struct._object*, %struct._object*) #1

declare i32 @PyType_Ready(%struct._typeobject*) #1

declare %struct._object* @PyTuple_New(i64) #1

declare %struct._object* @PyUnicode_FromString(i8*) #1

declare %struct._object* @PyObject_CallFunction(%struct._object*, i8*, ...) #1

declare i32 @_PyObject_SetAttrId(%struct._object*, %struct._Py_Identifier*, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal void @ast_dealloc(%struct.AST_object* %self) #0 {
entry:
  %self.addr = alloca %struct.AST_object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.AST_object* %self, %struct.AST_object** %self.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.AST_object*, %struct.AST_object** %self.addr, align 8
  %dict = getelementptr inbounds %struct.AST_object, %struct.AST_object* %0, i32 0, i32 1
  %1 = load %struct._object*, %struct._object** %dict, align 8
  store %struct._object* %1, %struct._object** %_py_tmp, align 8
  %2 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp = icmp ne %struct._object* %2, null
  br i1 %cmp, label %if.then, label %if.end.5

if.then:                                          ; preds = %do.body
  %3 = load %struct.AST_object*, %struct.AST_object** %self.addr, align 8
  %dict1 = getelementptr inbounds %struct.AST_object, %struct.AST_object* %3, i32 0, i32 1
  store %struct._object* null, %struct._object** %dict1, align 8
  br label %do.body.2

do.body.2:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %4, %struct._object** %_py_decref_tmp, align 8
  %5 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0
  %6 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %6, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp3 = icmp ne i64 %dec, 0
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %do.body.2
  br label %if.end

if.else:                                          ; preds = %do.body.2
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 4
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %9(%struct._object* %10)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end.5

if.end.5:                                         ; preds = %do.end, %do.body
  br label %do.end.6

do.end.6:                                         ; preds = %if.end.5
  %11 = load %struct.AST_object*, %struct.AST_object** %self.addr, align 8
  %12 = bitcast %struct.AST_object* %11 to %struct._object*
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 38
  %14 = load void (i8*)*, void (i8*)** %tp_free, align 8
  %15 = load %struct.AST_object*, %struct.AST_object** %self.addr, align 8
  %16 = bitcast %struct.AST_object* %15 to i8*
  call void %14(i8* %16)
  ret void
}

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #1

declare i32 @PyObject_GenericSetAttr(%struct._object*, %struct._object*, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal i32 @ast_traverse(%struct.AST_object* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.AST_object*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  store %struct.AST_object* %self, %struct.AST_object** %self.addr, align 8
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.AST_object*, %struct.AST_object** %self.addr, align 8
  %dict = getelementptr inbounds %struct.AST_object, %struct.AST_object* %0, i32 0, i32 1
  %1 = load %struct._object*, %struct._object** %dict, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.then, label %if.end.4

if.then:                                          ; preds = %do.body
  %2 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %3 = load %struct.AST_object*, %struct.AST_object** %self.addr, align 8
  %dict1 = getelementptr inbounds %struct.AST_object, %struct.AST_object* %3, i32 0, i32 1
  %4 = load %struct._object*, %struct._object** %dict1, align 8
  %5 = load i8*, i8** %arg.addr, align 8
  %call = call i32 %2(%struct._object* %4, i8* %5)
  store i32 %call, i32* %vret, align 4
  %6 = load i32, i32* %vret, align 4
  %tobool2 = icmp ne i32 %6, 0
  br i1 %tobool2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  %7 = load i32, i32* %vret, align 4
  store i32 %7, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end.4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end, %if.then.3
  %8 = load i32, i32* %retval
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal void @ast_clear(%struct.AST_object* %self) #0 {
entry:
  %self.addr = alloca %struct.AST_object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.AST_object* %self, %struct.AST_object** %self.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.AST_object*, %struct.AST_object** %self.addr, align 8
  %dict = getelementptr inbounds %struct.AST_object, %struct.AST_object* %0, i32 0, i32 1
  %1 = load %struct._object*, %struct._object** %dict, align 8
  store %struct._object* %1, %struct._object** %_py_tmp, align 8
  %2 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp = icmp ne %struct._object* %2, null
  br i1 %cmp, label %if.then, label %if.end.5

if.then:                                          ; preds = %do.body
  %3 = load %struct.AST_object*, %struct.AST_object** %self.addr, align 8
  %dict1 = getelementptr inbounds %struct.AST_object, %struct.AST_object* %3, i32 0, i32 1
  store %struct._object* null, %struct._object** %dict1, align 8
  br label %do.body.2

do.body.2:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %4, %struct._object** %_py_decref_tmp, align 8
  %5 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0
  %6 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %6, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp3 = icmp ne i64 %dec, 0
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %do.body.2
  br label %if.end

if.else:                                          ; preds = %do.body.2
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 4
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %9(%struct._object* %10)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end.5

if.end.5:                                         ; preds = %do.end, %do.body
  br label %do.end.6

do.end.6:                                         ; preds = %if.end.5
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ast_type_init(%struct._object* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %numfields = alloca i64, align 8
  %res = alloca i32, align 4
  %key = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %fields = alloca %struct._object*, align 8
  %name = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kw, %struct._object** %kw.addr, align 8
  store i64 0, i64* %numfields, align 8
  store i32 -1, i32* %res, align 4
  %0 = load %struct._object*, %struct._object** %self.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %2 = bitcast %struct._typeobject* %1 to %struct._object*
  %call = call %struct._object* @_PyObject_GetAttrId(%struct._object* %2, %struct._Py_Identifier* @ast_type_init.PyId__fields)
  store %struct._object* %call, %struct._object** %fields, align 8
  %3 = load %struct._object*, %struct._object** %fields, align 8
  %tobool = icmp ne %struct._object* %3, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @PyErr_Clear()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct._object*, %struct._object** %fields, align 8
  %tobool1 = icmp ne %struct._object* %4, null
  br i1 %tobool1, label %if.then.2, label %if.end.6

if.then.2:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %fields, align 8
  %call3 = call i64 @PySequence_Size(%struct._object* %5)
  store i64 %call3, i64* %numfields, align 8
  %6 = load i64, i64* %numfields, align 8
  %cmp = icmp eq i64 %6, -1
  br i1 %cmp, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.then.2
  br label %cleanup

if.end.5:                                         ; preds = %if.then.2
  br label %if.end.6

if.end.6:                                         ; preds = %if.end.5, %if.end
  store i32 0, i32* %res, align 4
  %7 = load %struct._object*, %struct._object** %args.addr, align 8
  %8 = bitcast %struct._object* %7 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i32 0, i32 1
  %9 = load i64, i64* %ob_size, align 8
  %cmp7 = icmp sgt i64 %9, 0
  br i1 %cmp7, label %if.then.8, label %if.end.32

if.then.8:                                        ; preds = %if.end.6
  %10 = load i64, i64* %numfields, align 8
  %11 = load %struct._object*, %struct._object** %args.addr, align 8
  %12 = bitcast %struct._object* %11 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %12, i32 0, i32 1
  %13 = load i64, i64* %ob_size9, align 8
  %cmp10 = icmp ne i64 %10, %13
  br i1 %cmp10, label %if.then.11, label %if.end.17

if.then.11:                                       ; preds = %if.then.8
  %14 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %15 = load %struct._object*, %struct._object** %self.addr, align 8
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 1
  %17 = load i8*, i8** %tp_name, align 8
  %18 = load i64, i64* %numfields, align 8
  %cmp13 = icmp eq i64 %18, 0
  %cond = select i1 %cmp13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.236, i32 0, i32 0)
  %19 = load i64, i64* %numfields, align 8
  %20 = load i64, i64* %numfields, align 8
  %cmp14 = icmp eq i64 %20, 1
  %cond15 = select i1 %cmp14, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.210, i32 0, i32 0)
  %call16 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %14, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.234, i32 0, i32 0), i8* %17, i8* %cond, i64 %19, i8* %cond15)
  store i32 -1, i32* %res, align 4
  br label %cleanup

if.end.17:                                        ; preds = %if.then.8
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.17
  %21 = load i64, i64* %i, align 8
  %22 = load %struct._object*, %struct._object** %args.addr, align 8
  %23 = bitcast %struct._object* %22 to %struct.PyVarObject*
  %ob_size18 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %23, i32 0, i32 1
  %24 = load i64, i64* %ob_size18, align 8
  %cmp19 = icmp slt i64 %21, %24
  br i1 %cmp19, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %25 = load %struct._object*, %struct._object** %fields, align 8
  %26 = load i64, i64* %i, align 8
  %call20 = call %struct._object* @PySequence_GetItem(%struct._object* %25, i64 %26)
  store %struct._object* %call20, %struct._object** %name, align 8
  %27 = load %struct._object*, %struct._object** %name, align 8
  %tobool21 = icmp ne %struct._object* %27, null
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %for.body
  store i32 -1, i32* %res, align 4
  br label %cleanup

if.end.23:                                        ; preds = %for.body
  %28 = load %struct._object*, %struct._object** %self.addr, align 8
  %29 = load %struct._object*, %struct._object** %name, align 8
  %30 = load i64, i64* %i, align 8
  %31 = load %struct._object*, %struct._object** %args.addr, align 8
  %32 = bitcast %struct._object* %31 to %struct.PyTupleObject*
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %32, i32 0, i32 1
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %30
  %33 = load %struct._object*, %struct._object** %arrayidx, align 8
  %call24 = call i32 @PyObject_SetAttr(%struct._object* %28, %struct._object* %29, %struct._object* %33)
  store i32 %call24, i32* %res, align 4
  br label %do.body

do.body:                                          ; preds = %if.end.23
  %34 = load %struct._object*, %struct._object** %name, align 8
  store %struct._object* %34, %struct._object** %_py_decref_tmp, align 8
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0
  %36 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %36, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp25 = icmp ne i64 %dec, 0
  br i1 %cmp25, label %if.then.26, label %if.else

if.then.26:                                       ; preds = %do.body
  br label %if.end.28

if.else:                                          ; preds = %do.body
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %39(%struct._object* %40)
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.26
  br label %do.end

do.end:                                           ; preds = %if.end.28
  %41 = load i32, i32* %res, align 4
  %cmp29 = icmp slt i32 %41, 0
  br i1 %cmp29, label %if.then.30, label %if.end.31

if.then.30:                                       ; preds = %do.end
  br label %cleanup

if.end.31:                                        ; preds = %do.end
  br label %for.inc

for.inc:                                          ; preds = %if.end.31
  %42 = load i64, i64* %i, align 8
  %inc = add i64 %42, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.32

if.end.32:                                        ; preds = %for.end, %if.end.6
  %43 = load %struct._object*, %struct._object** %kw.addr, align 8
  %tobool33 = icmp ne %struct._object* %43, null
  br i1 %tobool33, label %if.then.34, label %if.end.41

if.then.34:                                       ; preds = %if.end.32
  store i64 0, i64* %i, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.40, %if.then.34
  %44 = load %struct._object*, %struct._object** %kw.addr, align 8
  %call35 = call i32 @PyDict_Next(%struct._object* %44, i64* %i, %struct._object** %key, %struct._object** %value)
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %45 = load %struct._object*, %struct._object** %self.addr, align 8
  %46 = load %struct._object*, %struct._object** %key, align 8
  %47 = load %struct._object*, %struct._object** %value, align 8
  %call37 = call i32 @PyObject_SetAttr(%struct._object* %45, %struct._object* %46, %struct._object* %47)
  store i32 %call37, i32* %res, align 4
  %48 = load i32, i32* %res, align 4
  %cmp38 = icmp slt i32 %48, 0
  br i1 %cmp38, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %while.body
  br label %cleanup

if.end.40:                                        ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.41

if.end.41:                                        ; preds = %while.end, %if.end.32
  br label %cleanup

cleanup:                                          ; preds = %if.end.41, %if.then.39, %if.then.30, %if.then.22, %if.then.11, %if.then.4
  br label %do.body.42

do.body.42:                                       ; preds = %cleanup
  %49 = load %struct._object*, %struct._object** %fields, align 8
  store %struct._object* %49, %struct._object** %_py_xdecref_tmp, align 8
  %50 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp43 = icmp ne %struct._object* %50, null
  br i1 %cmp43, label %if.then.44, label %if.end.56

if.then.44:                                       ; preds = %do.body.42
  br label %do.body.45

do.body.45:                                       ; preds = %if.then.44
  %51 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %51, %struct._object** %_py_decref_tmp46, align 8
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0
  %53 = load i64, i64* %ob_refcnt47, align 8
  %dec48 = add i64 %53, -1
  store i64 %dec48, i64* %ob_refcnt47, align 8
  %cmp49 = icmp ne i64 %dec48, 0
  br i1 %cmp49, label %if.then.50, label %if.else.51

if.then.50:                                       ; preds = %do.body.45
  br label %if.end.54

if.else.51:                                       ; preds = %do.body.45
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  call void %56(%struct._object* %57)
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.51, %if.then.50
  br label %do.end.55

do.end.55:                                        ; preds = %if.end.54
  br label %if.end.56

if.end.56:                                        ; preds = %do.end.55, %do.body.42
  br label %do.end.57

do.end.57:                                        ; preds = %if.end.56
  %58 = load i32, i32* %res, align 4
  ret i32 %58
}

declare %struct._object* @PyType_GenericAlloc(%struct._typeobject*, i64) #1

declare void @PyObject_GC_Del(i8*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast_type_reduce(%struct._object* %self, %struct._object* %unused) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %unused.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %dict = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store %struct._object* %unused, %struct._object** %unused.addr, align 8
  %0 = load %struct._object*, %struct._object** %self.addr, align 8
  %call = call %struct._object* @_PyObject_GetAttrId(%struct._object* %0, %struct._Py_Identifier* @ast_type_reduce.PyId___dict__)
  store %struct._object* %call, %struct._object** %dict, align 8
  %1 = load %struct._object*, %struct._object** %dict, align 8
  %cmp = icmp eq %struct._object* %1, null
  br i1 %cmp, label %if.then, label %if.end.3

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8
  %call1 = call i32 @PyErr_ExceptionMatches(%struct._object* %2)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  call void @PyErr_Clear()
  br label %if.end

if.else:                                          ; preds = %if.then
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %if.then.2
  br label %if.end.3

if.end.3:                                         ; preds = %if.end, %entry
  %3 = load %struct._object*, %struct._object** %dict, align 8
  %tobool4 = icmp ne %struct._object* %3, null
  br i1 %tobool4, label %if.then.5, label %if.end.12

if.then.5:                                        ; preds = %if.end.3
  %4 = load %struct._object*, %struct._object** %self.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %6 = load %struct._object*, %struct._object** %dict, align 8
  %call6 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.232, i32 0, i32 0), %struct._typeobject* %5, %struct._object* %6)
  store %struct._object* %call6, %struct._object** %res, align 8
  br label %do.body

do.body:                                          ; preds = %if.then.5
  %7 = load %struct._object*, %struct._object** %dict, align 8
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0
  %9 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %9, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp7 = icmp ne i64 %dec, 0
  br i1 %cmp7, label %if.then.8, label %if.else.9

if.then.8:                                        ; preds = %do.body
  br label %if.end.11

if.else.9:                                        ; preds = %do.body
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %12(%struct._object* %13)
  br label %if.end.11

if.end.11:                                        ; preds = %if.else.9, %if.then.8
  br label %do.end

do.end:                                           ; preds = %if.end.11
  %14 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %14, %struct._object** %retval
  br label %return

if.end.12:                                        ; preds = %if.end.3
  %15 = load %struct._object*, %struct._object** %self.addr, align 8
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8
  %call14 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.233, i32 0, i32 0), %struct._typeobject* %16)
  store %struct._object* %call14, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.12, %do.end, %if.else
  %17 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %17
}

declare %struct._object* @_PyObject_GetAttrId(%struct._object*, %struct._Py_Identifier*) #1

declare i32 @PyErr_ExceptionMatches(%struct._object*) #1

declare void @PyErr_Clear() #1

declare %struct._object* @Py_BuildValue(i8*, ...) #1

declare %struct._object* @PyObject_GenericGetDict(%struct._object*, i8*) #1

declare i32 @PyObject_GenericSetDict(%struct._object*, %struct._object*, i8*) #1

declare i64 @PySequence_Size(%struct._object*) #1

declare %struct._object* @PySequence_GetItem(%struct._object*, i64) #1

declare i32 @PyObject_SetAttr(%struct._object*, %struct._object*, %struct._object*) #1

declare i32 @PyDict_Next(%struct._object*, i64*, %struct._object**, %struct._object**) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_list(%struct.asdl_seq* %seq, %struct._object* (i8*)* %func) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %seq.addr = alloca %struct.asdl_seq*, align 8
  %func.addr = alloca %struct._object* (i8*)*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %result = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.asdl_seq* %seq, %struct.asdl_seq** %seq.addr, align 8
  store %struct._object* (i8*)* %func, %struct._object* (i8*)** %func.addr, align 8
  %0 = load %struct.asdl_seq*, %struct.asdl_seq** %seq.addr, align 8
  %cmp = icmp eq %struct.asdl_seq* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %1 = load %struct.asdl_seq*, %struct.asdl_seq** %seq.addr, align 8
  %size = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1, i32 0, i32 0
  %2 = load i64, i64* %size, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %2, %cond.false ]
  store i64 %cond, i64* %n, align 8
  %3 = load i64, i64* %n, align 8
  %call = call %struct._object* @PyList_New(i64 %3)
  store %struct._object* %call, %struct._object** %result, align 8
  %4 = load %struct._object*, %struct._object** %result, align 8
  %tobool = icmp ne %struct._object* %4, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %cond.end
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i64, i64* %i, align 8
  %6 = load i64, i64* %n, align 8
  %cmp1 = icmp slt i64 %5, %6
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load %struct._object* (i8*)*, %struct._object* (i8*)** %func.addr, align 8
  %8 = load i64, i64* %i, align 8
  %9 = load %struct.asdl_seq*, %struct.asdl_seq** %seq.addr, align 8
  %elements = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %9, i32 0, i32 1
  %arrayidx = getelementptr [1 x i8*], [1 x i8*]* %elements, i32 0, i64 %8
  %10 = load i8*, i8** %arrayidx, align 8
  %call2 = call %struct._object* %7(i8* %10)
  store %struct._object* %call2, %struct._object** %value, align 8
  %11 = load %struct._object*, %struct._object** %value, align 8
  %tobool3 = icmp ne %struct._object* %11, null
  br i1 %tobool3, label %if.end.8, label %if.then.4

if.then.4:                                        ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %if.then.4
  %12 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %14, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp5 = icmp ne i64 %dec, 0
  br i1 %cmp5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %do.body
  br label %if.end.7

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %17(%struct._object* %18)
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  br label %do.end

do.end:                                           ; preds = %if.end.7
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.8:                                         ; preds = %for.body
  %19 = load %struct._object*, %struct._object** %value, align 8
  %20 = load i64, i64* %i, align 8
  %21 = load %struct._object*, %struct._object** %result, align 8
  %22 = bitcast %struct._object* %21 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %22, i32 0, i32 1
  %23 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx9 = getelementptr %struct._object*, %struct._object** %23, i64 %20
  store %struct._object* %19, %struct._object** %arrayidx9, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.8
  %24 = load i64, i64* %i, align 8
  %inc = add i64 %24, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %25 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %25, %struct._object** %retval
  br label %return

return:                                           ; preds = %for.end, %do.end, %if.then
  %26 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %26
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_stmt(i8* %_o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %_o.addr = alloca i8*, align 8
  %o = alloca %struct._stmt*, align 8
  %result = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp25 = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  %_py_decref_tmp67 = alloca %struct._object*, align 8
  %_py_decref_tmp88 = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  %_py_decref_tmp135 = alloca %struct._object*, align 8
  %_py_decref_tmp156 = alloca %struct._object*, align 8
  %_py_decref_tmp177 = alloca %struct._object*, align 8
  %_py_decref_tmp198 = alloca %struct._object*, align 8
  %_py_decref_tmp220 = alloca %struct._object*, align 8
  %_py_decref_tmp242 = alloca %struct._object*, align 8
  %_py_decref_tmp268 = alloca %struct._object*, align 8
  %_py_decref_tmp293 = alloca %struct._object*, align 8
  %_py_decref_tmp319 = alloca %struct._object*, align 8
  %_py_decref_tmp341 = alloca %struct._object*, align 8
  %_py_decref_tmp366 = alloca %struct._object*, align 8
  %_py_decref_tmp387 = alloca %struct._object*, align 8
  %_py_decref_tmp409 = alloca %struct._object*, align 8
  %_py_decref_tmp435 = alloca %struct._object*, align 8
  %_py_decref_tmp456 = alloca %struct._object*, align 8
  %_py_decref_tmp478 = alloca %struct._object*, align 8
  %_py_decref_tmp499 = alloca %struct._object*, align 8
  %_py_decref_tmp524 = alloca %struct._object*, align 8
  %_py_decref_tmp546 = alloca %struct._object*, align 8
  %_py_decref_tmp568 = alloca %struct._object*, align 8
  %_py_decref_tmp594 = alloca %struct._object*, align 8
  %_py_decref_tmp616 = alloca %struct._object*, align 8
  %_py_decref_tmp638 = alloca %struct._object*, align 8
  %_py_decref_tmp663 = alloca %struct._object*, align 8
  %_py_decref_tmp685 = alloca %struct._object*, align 8
  %_py_decref_tmp710 = alloca %struct._object*, align 8
  %_py_decref_tmp731 = alloca %struct._object*, align 8
  %_py_decref_tmp757 = alloca %struct._object*, align 8
  %_py_decref_tmp778 = alloca %struct._object*, align 8
  %_py_decref_tmp800 = alloca %struct._object*, align 8
  %_py_decref_tmp821 = alloca %struct._object*, align 8
  %_py_decref_tmp847 = alloca %struct._object*, align 8
  %_py_decref_tmp868 = alloca %struct._object*, align 8
  %_py_decref_tmp893 = alloca %struct._object*, align 8
  %_py_decref_tmp918 = alloca %struct._object*, align 8
  %_py_decref_tmp940 = alloca %struct._object*, align 8
  %_py_decref_tmp962 = alloca %struct._object*, align 8
  %_py_decref_tmp990 = alloca %struct._object*, align 8
  %_py_decref_tmp1018 = alloca %struct._object*, align 8
  %_py_decref_tmp1046 = alloca %struct._object*, align 8
  %_py_decref_tmp1083 = alloca %struct._object*, align 8
  %_py_decref_tmp1105 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp1121 = alloca %struct._object*, align 8
  %_py_xdecref_tmp1135 = alloca %struct._object*, align 8
  %_py_decref_tmp1140 = alloca %struct._object*, align 8
  store i8* %_o, i8** %_o.addr, align 8
  %0 = load i8*, i8** %_o.addr, align 8
  %1 = bitcast i8* %0 to %struct._stmt*
  store %struct._stmt* %1, %struct._stmt** %o, align 8
  store %struct._object* null, %struct._object** %result, align 8
  store %struct._object* null, %struct._object** %value, align 8
  %2 = load %struct._stmt*, %struct._stmt** %o, align 8
  %tobool = icmp ne %struct._stmt* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._stmt*, %struct._stmt** %o, align 8
  %kind = getelementptr inbounds %struct._stmt, %struct._stmt* %4, i32 0, i32 0
  %5 = load i32, i32* %kind, align 4
  switch i32 %5, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.98
    i32 3, label %sw.bb.252
    i32 4, label %sw.bb.278
    i32 5, label %sw.bb.303
    i32 6, label %sw.bb.351
    i32 7, label %sw.bb.419
    i32 8, label %sw.bb.509
    i32 9, label %sw.bb.578
    i32 10, label %sw.bb.648
    i32 11, label %sw.bb.695
    i32 12, label %sw.bb.741
    i32 13, label %sw.bb.831
    i32 14, label %sw.bb.878
    i32 15, label %sw.bb.903
    i32 16, label %sw.bb.973
    i32 17, label %sw.bb.1001
    i32 18, label %sw.bb.1029
    i32 19, label %sw.bb.1057
    i32 20, label %sw.bb.1062
    i32 21, label %sw.bb.1067
  ]

sw.bb:                                            ; preds = %if.end
  %6 = load %struct._typeobject*, %struct._typeobject** @FunctionDef_type, align 8
  %call = call %struct._object* @PyType_GenericNew(%struct._typeobject* %6, %struct._object* null, %struct._object* null)
  store %struct._object* %call, %struct._object** %result, align 8
  %7 = load %struct._object*, %struct._object** %result, align 8
  %tobool1 = icmp ne %struct._object* %7, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %sw.bb
  br label %failed

if.end.3:                                         ; preds = %sw.bb
  %8 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v = getelementptr inbounds %struct._stmt, %struct._stmt* %8, i32 0, i32 1
  %FunctionDef = bitcast %union.anon.33* %v to %struct.anon.34*
  %name = getelementptr inbounds %struct.anon.34, %struct.anon.34* %FunctionDef, i32 0, i32 0
  %9 = load %struct._object*, %struct._object** %name, align 8
  %10 = bitcast %struct._object* %9 to i8*
  %call4 = call %struct._object* @ast2obj_object(i8* %10)
  store %struct._object* %call4, %struct._object** %value, align 8
  %11 = load %struct._object*, %struct._object** %value, align 8
  %tobool5 = icmp ne %struct._object* %11, null
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %failed

if.end.7:                                         ; preds = %if.end.3
  %12 = load %struct._object*, %struct._object** %result, align 8
  %13 = load %struct._object*, %struct._object** %value, align 8
  %call8 = call i32 @_PyObject_SetAttrId(%struct._object* %12, %struct._Py_Identifier* @PyId_name, %struct._object* %13)
  %cmp = icmp eq i32 %call8, -1
  br i1 %cmp, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.7
  br label %failed

if.end.10:                                        ; preds = %if.end.7
  br label %do.body

do.body:                                          ; preds = %if.end.10
  %14 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0
  %16 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %16, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %19(%struct._object* %20)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  %21 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v14 = getelementptr inbounds %struct._stmt, %struct._stmt* %21, i32 0, i32 1
  %FunctionDef15 = bitcast %union.anon.33* %v14 to %struct.anon.34*
  %args = getelementptr inbounds %struct.anon.34, %struct.anon.34* %FunctionDef15, i32 0, i32 1
  %22 = load %struct._arguments*, %struct._arguments** %args, align 8
  %23 = bitcast %struct._arguments* %22 to i8*
  %call16 = call %struct._object* @ast2obj_arguments(i8* %23)
  store %struct._object* %call16, %struct._object** %value, align 8
  %24 = load %struct._object*, %struct._object** %value, align 8
  %tobool17 = icmp ne %struct._object* %24, null
  br i1 %tobool17, label %if.end.19, label %if.then.18

if.then.18:                                       ; preds = %do.end
  br label %failed

if.end.19:                                        ; preds = %do.end
  %25 = load %struct._object*, %struct._object** %result, align 8
  %26 = load %struct._object*, %struct._object** %value, align 8
  %call20 = call i32 @_PyObject_SetAttrId(%struct._object* %25, %struct._Py_Identifier* @PyId_args, %struct._object* %26)
  %cmp21 = icmp eq i32 %call20, -1
  br i1 %cmp21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.19
  br label %failed

if.end.23:                                        ; preds = %if.end.19
  br label %do.body.24

do.body.24:                                       ; preds = %if.end.23
  %27 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %27, %struct._object** %_py_decref_tmp25, align 8
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0
  %29 = load i64, i64* %ob_refcnt26, align 8
  %dec27 = add i64 %29, -1
  store i64 %dec27, i64* %ob_refcnt26, align 8
  %cmp28 = icmp ne i64 %dec27, 0
  br i1 %cmp28, label %if.then.29, label %if.else.30

if.then.29:                                       ; preds = %do.body.24
  br label %if.end.33

if.else.30:                                       ; preds = %do.body.24
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8
  %tp_dealloc32 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc32, align 8
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8
  call void %32(%struct._object* %33)
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.30, %if.then.29
  br label %do.end.34

do.end.34:                                        ; preds = %if.end.33
  %34 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v35 = getelementptr inbounds %struct._stmt, %struct._stmt* %34, i32 0, i32 1
  %FunctionDef36 = bitcast %union.anon.33* %v35 to %struct.anon.34*
  %body = getelementptr inbounds %struct.anon.34, %struct.anon.34* %FunctionDef36, i32 0, i32 2
  %35 = load %struct.asdl_seq*, %struct.asdl_seq** %body, align 8
  %call37 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %35, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call37, %struct._object** %value, align 8
  %36 = load %struct._object*, %struct._object** %value, align 8
  %tobool38 = icmp ne %struct._object* %36, null
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %do.end.34
  br label %failed

if.end.40:                                        ; preds = %do.end.34
  %37 = load %struct._object*, %struct._object** %result, align 8
  %38 = load %struct._object*, %struct._object** %value, align 8
  %call41 = call i32 @_PyObject_SetAttrId(%struct._object* %37, %struct._Py_Identifier* @PyId_body, %struct._object* %38)
  %cmp42 = icmp eq i32 %call41, -1
  br i1 %cmp42, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.end.40
  br label %failed

if.end.44:                                        ; preds = %if.end.40
  br label %do.body.45

do.body.45:                                       ; preds = %if.end.44
  %39 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %39, %struct._object** %_py_decref_tmp46, align 8
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0
  %41 = load i64, i64* %ob_refcnt47, align 8
  %dec48 = add i64 %41, -1
  store i64 %dec48, i64* %ob_refcnt47, align 8
  %cmp49 = icmp ne i64 %dec48, 0
  br i1 %cmp49, label %if.then.50, label %if.else.51

if.then.50:                                       ; preds = %do.body.45
  br label %if.end.54

if.else.51:                                       ; preds = %do.body.45
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  call void %44(%struct._object* %45)
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.51, %if.then.50
  br label %do.end.55

do.end.55:                                        ; preds = %if.end.54
  %46 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v56 = getelementptr inbounds %struct._stmt, %struct._stmt* %46, i32 0, i32 1
  %FunctionDef57 = bitcast %union.anon.33* %v56 to %struct.anon.34*
  %decorator_list = getelementptr inbounds %struct.anon.34, %struct.anon.34* %FunctionDef57, i32 0, i32 3
  %47 = load %struct.asdl_seq*, %struct.asdl_seq** %decorator_list, align 8
  %call58 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %47, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call58, %struct._object** %value, align 8
  %48 = load %struct._object*, %struct._object** %value, align 8
  %tobool59 = icmp ne %struct._object* %48, null
  br i1 %tobool59, label %if.end.61, label %if.then.60

if.then.60:                                       ; preds = %do.end.55
  br label %failed

if.end.61:                                        ; preds = %do.end.55
  %49 = load %struct._object*, %struct._object** %result, align 8
  %50 = load %struct._object*, %struct._object** %value, align 8
  %call62 = call i32 @_PyObject_SetAttrId(%struct._object* %49, %struct._Py_Identifier* @PyId_decorator_list, %struct._object* %50)
  %cmp63 = icmp eq i32 %call62, -1
  br i1 %cmp63, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %if.end.61
  br label %failed

if.end.65:                                        ; preds = %if.end.61
  br label %do.body.66

do.body.66:                                       ; preds = %if.end.65
  %51 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %51, %struct._object** %_py_decref_tmp67, align 8
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8
  %ob_refcnt68 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0
  %53 = load i64, i64* %ob_refcnt68, align 8
  %dec69 = add i64 %53, -1
  store i64 %dec69, i64* %ob_refcnt68, align 8
  %cmp70 = icmp ne i64 %dec69, 0
  br i1 %cmp70, label %if.then.71, label %if.else.72

if.then.71:                                       ; preds = %do.body.66
  br label %if.end.75

if.else.72:                                       ; preds = %do.body.66
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8
  %ob_type73 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type73, align 8
  %tp_dealloc74 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc74, align 8
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8
  call void %56(%struct._object* %57)
  br label %if.end.75

if.end.75:                                        ; preds = %if.else.72, %if.then.71
  br label %do.end.76

do.end.76:                                        ; preds = %if.end.75
  %58 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v77 = getelementptr inbounds %struct._stmt, %struct._stmt* %58, i32 0, i32 1
  %FunctionDef78 = bitcast %union.anon.33* %v77 to %struct.anon.34*
  %returns = getelementptr inbounds %struct.anon.34, %struct.anon.34* %FunctionDef78, i32 0, i32 4
  %59 = load %struct._expr*, %struct._expr** %returns, align 8
  %60 = bitcast %struct._expr* %59 to i8*
  %call79 = call %struct._object* @ast2obj_expr(i8* %60)
  store %struct._object* %call79, %struct._object** %value, align 8
  %61 = load %struct._object*, %struct._object** %value, align 8
  %tobool80 = icmp ne %struct._object* %61, null
  br i1 %tobool80, label %if.end.82, label %if.then.81

if.then.81:                                       ; preds = %do.end.76
  br label %failed

if.end.82:                                        ; preds = %do.end.76
  %62 = load %struct._object*, %struct._object** %result, align 8
  %63 = load %struct._object*, %struct._object** %value, align 8
  %call83 = call i32 @_PyObject_SetAttrId(%struct._object* %62, %struct._Py_Identifier* @PyId_returns, %struct._object* %63)
  %cmp84 = icmp eq i32 %call83, -1
  br i1 %cmp84, label %if.then.85, label %if.end.86

if.then.85:                                       ; preds = %if.end.82
  br label %failed

if.end.86:                                        ; preds = %if.end.82
  br label %do.body.87

do.body.87:                                       ; preds = %if.end.86
  %64 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %64, %struct._object** %_py_decref_tmp88, align 8
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8
  %ob_refcnt89 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0
  %66 = load i64, i64* %ob_refcnt89, align 8
  %dec90 = add i64 %66, -1
  store i64 %dec90, i64* %ob_refcnt89, align 8
  %cmp91 = icmp ne i64 %dec90, 0
  br i1 %cmp91, label %if.then.92, label %if.else.93

if.then.92:                                       ; preds = %do.body.87
  br label %if.end.96

if.else.93:                                       ; preds = %do.body.87
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8
  call void %69(%struct._object* %70)
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.then.92
  br label %do.end.97

do.end.97:                                        ; preds = %if.end.96
  br label %sw.epilog

sw.bb.98:                                         ; preds = %if.end
  %71 = load %struct._typeobject*, %struct._typeobject** @ClassDef_type, align 8
  %call99 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %71, %struct._object* null, %struct._object* null)
  store %struct._object* %call99, %struct._object** %result, align 8
  %72 = load %struct._object*, %struct._object** %result, align 8
  %tobool100 = icmp ne %struct._object* %72, null
  br i1 %tobool100, label %if.end.102, label %if.then.101

if.then.101:                                      ; preds = %sw.bb.98
  br label %failed

if.end.102:                                       ; preds = %sw.bb.98
  %73 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v103 = getelementptr inbounds %struct._stmt, %struct._stmt* %73, i32 0, i32 1
  %ClassDef = bitcast %union.anon.33* %v103 to %struct.anon.35*
  %name104 = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef, i32 0, i32 0
  %74 = load %struct._object*, %struct._object** %name104, align 8
  %75 = bitcast %struct._object* %74 to i8*
  %call105 = call %struct._object* @ast2obj_object(i8* %75)
  store %struct._object* %call105, %struct._object** %value, align 8
  %76 = load %struct._object*, %struct._object** %value, align 8
  %tobool106 = icmp ne %struct._object* %76, null
  br i1 %tobool106, label %if.end.108, label %if.then.107

if.then.107:                                      ; preds = %if.end.102
  br label %failed

if.end.108:                                       ; preds = %if.end.102
  %77 = load %struct._object*, %struct._object** %result, align 8
  %78 = load %struct._object*, %struct._object** %value, align 8
  %call109 = call i32 @_PyObject_SetAttrId(%struct._object* %77, %struct._Py_Identifier* @PyId_name, %struct._object* %78)
  %cmp110 = icmp eq i32 %call109, -1
  br i1 %cmp110, label %if.then.111, label %if.end.112

if.then.111:                                      ; preds = %if.end.108
  br label %failed

if.end.112:                                       ; preds = %if.end.108
  br label %do.body.113

do.body.113:                                      ; preds = %if.end.112
  %79 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %79, %struct._object** %_py_decref_tmp114, align 8
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0
  %81 = load i64, i64* %ob_refcnt115, align 8
  %dec116 = add i64 %81, -1
  store i64 %dec116, i64* %ob_refcnt115, align 8
  %cmp117 = icmp ne i64 %dec116, 0
  br i1 %cmp117, label %if.then.118, label %if.else.119

if.then.118:                                      ; preds = %do.body.113
  br label %if.end.122

if.else.119:                                      ; preds = %do.body.113
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8
  %ob_type120 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type120, align 8
  %tp_dealloc121 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc121, align 8
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8
  call void %84(%struct._object* %85)
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.119, %if.then.118
  br label %do.end.123

do.end.123:                                       ; preds = %if.end.122
  %86 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v124 = getelementptr inbounds %struct._stmt, %struct._stmt* %86, i32 0, i32 1
  %ClassDef125 = bitcast %union.anon.33* %v124 to %struct.anon.35*
  %bases = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef125, i32 0, i32 1
  %87 = load %struct.asdl_seq*, %struct.asdl_seq** %bases, align 8
  %call126 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %87, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call126, %struct._object** %value, align 8
  %88 = load %struct._object*, %struct._object** %value, align 8
  %tobool127 = icmp ne %struct._object* %88, null
  br i1 %tobool127, label %if.end.129, label %if.then.128

if.then.128:                                      ; preds = %do.end.123
  br label %failed

if.end.129:                                       ; preds = %do.end.123
  %89 = load %struct._object*, %struct._object** %result, align 8
  %90 = load %struct._object*, %struct._object** %value, align 8
  %call130 = call i32 @_PyObject_SetAttrId(%struct._object* %89, %struct._Py_Identifier* @PyId_bases, %struct._object* %90)
  %cmp131 = icmp eq i32 %call130, -1
  br i1 %cmp131, label %if.then.132, label %if.end.133

if.then.132:                                      ; preds = %if.end.129
  br label %failed

if.end.133:                                       ; preds = %if.end.129
  br label %do.body.134

do.body.134:                                      ; preds = %if.end.133
  %91 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %91, %struct._object** %_py_decref_tmp135, align 8
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp135, align 8
  %ob_refcnt136 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 0
  %93 = load i64, i64* %ob_refcnt136, align 8
  %dec137 = add i64 %93, -1
  store i64 %dec137, i64* %ob_refcnt136, align 8
  %cmp138 = icmp ne i64 %dec137, 0
  br i1 %cmp138, label %if.then.139, label %if.else.140

if.then.139:                                      ; preds = %do.body.134
  br label %if.end.143

if.else.140:                                      ; preds = %do.body.134
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp135, align 8
  %ob_type141 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 1
  %95 = load %struct._typeobject*, %struct._typeobject** %ob_type141, align 8
  %tp_dealloc142 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %95, i32 0, i32 4
  %96 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc142, align 8
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp135, align 8
  call void %96(%struct._object* %97)
  br label %if.end.143

if.end.143:                                       ; preds = %if.else.140, %if.then.139
  br label %do.end.144

do.end.144:                                       ; preds = %if.end.143
  %98 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v145 = getelementptr inbounds %struct._stmt, %struct._stmt* %98, i32 0, i32 1
  %ClassDef146 = bitcast %union.anon.33* %v145 to %struct.anon.35*
  %keywords = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef146, i32 0, i32 2
  %99 = load %struct.asdl_seq*, %struct.asdl_seq** %keywords, align 8
  %call147 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %99, %struct._object* (i8*)* @ast2obj_keyword)
  store %struct._object* %call147, %struct._object** %value, align 8
  %100 = load %struct._object*, %struct._object** %value, align 8
  %tobool148 = icmp ne %struct._object* %100, null
  br i1 %tobool148, label %if.end.150, label %if.then.149

if.then.149:                                      ; preds = %do.end.144
  br label %failed

if.end.150:                                       ; preds = %do.end.144
  %101 = load %struct._object*, %struct._object** %result, align 8
  %102 = load %struct._object*, %struct._object** %value, align 8
  %call151 = call i32 @_PyObject_SetAttrId(%struct._object* %101, %struct._Py_Identifier* @PyId_keywords, %struct._object* %102)
  %cmp152 = icmp eq i32 %call151, -1
  br i1 %cmp152, label %if.then.153, label %if.end.154

if.then.153:                                      ; preds = %if.end.150
  br label %failed

if.end.154:                                       ; preds = %if.end.150
  br label %do.body.155

do.body.155:                                      ; preds = %if.end.154
  %103 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %103, %struct._object** %_py_decref_tmp156, align 8
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8
  %ob_refcnt157 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 0
  %105 = load i64, i64* %ob_refcnt157, align 8
  %dec158 = add i64 %105, -1
  store i64 %dec158, i64* %ob_refcnt157, align 8
  %cmp159 = icmp ne i64 %dec158, 0
  br i1 %cmp159, label %if.then.160, label %if.else.161

if.then.160:                                      ; preds = %do.body.155
  br label %if.end.164

if.else.161:                                      ; preds = %do.body.155
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8
  %ob_type162 = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 1
  %107 = load %struct._typeobject*, %struct._typeobject** %ob_type162, align 8
  %tp_dealloc163 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %107, i32 0, i32 4
  %108 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc163, align 8
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8
  call void %108(%struct._object* %109)
  br label %if.end.164

if.end.164:                                       ; preds = %if.else.161, %if.then.160
  br label %do.end.165

do.end.165:                                       ; preds = %if.end.164
  %110 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v166 = getelementptr inbounds %struct._stmt, %struct._stmt* %110, i32 0, i32 1
  %ClassDef167 = bitcast %union.anon.33* %v166 to %struct.anon.35*
  %starargs = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef167, i32 0, i32 3
  %111 = load %struct._expr*, %struct._expr** %starargs, align 8
  %112 = bitcast %struct._expr* %111 to i8*
  %call168 = call %struct._object* @ast2obj_expr(i8* %112)
  store %struct._object* %call168, %struct._object** %value, align 8
  %113 = load %struct._object*, %struct._object** %value, align 8
  %tobool169 = icmp ne %struct._object* %113, null
  br i1 %tobool169, label %if.end.171, label %if.then.170

if.then.170:                                      ; preds = %do.end.165
  br label %failed

if.end.171:                                       ; preds = %do.end.165
  %114 = load %struct._object*, %struct._object** %result, align 8
  %115 = load %struct._object*, %struct._object** %value, align 8
  %call172 = call i32 @_PyObject_SetAttrId(%struct._object* %114, %struct._Py_Identifier* @PyId_starargs, %struct._object* %115)
  %cmp173 = icmp eq i32 %call172, -1
  br i1 %cmp173, label %if.then.174, label %if.end.175

if.then.174:                                      ; preds = %if.end.171
  br label %failed

if.end.175:                                       ; preds = %if.end.171
  br label %do.body.176

do.body.176:                                      ; preds = %if.end.175
  %116 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %116, %struct._object** %_py_decref_tmp177, align 8
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8
  %ob_refcnt178 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 0
  %118 = load i64, i64* %ob_refcnt178, align 8
  %dec179 = add i64 %118, -1
  store i64 %dec179, i64* %ob_refcnt178, align 8
  %cmp180 = icmp ne i64 %dec179, 0
  br i1 %cmp180, label %if.then.181, label %if.else.182

if.then.181:                                      ; preds = %do.body.176
  br label %if.end.185

if.else.182:                                      ; preds = %do.body.176
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8
  %ob_type183 = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 1
  %120 = load %struct._typeobject*, %struct._typeobject** %ob_type183, align 8
  %tp_dealloc184 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %120, i32 0, i32 4
  %121 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc184, align 8
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8
  call void %121(%struct._object* %122)
  br label %if.end.185

if.end.185:                                       ; preds = %if.else.182, %if.then.181
  br label %do.end.186

do.end.186:                                       ; preds = %if.end.185
  %123 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v187 = getelementptr inbounds %struct._stmt, %struct._stmt* %123, i32 0, i32 1
  %ClassDef188 = bitcast %union.anon.33* %v187 to %struct.anon.35*
  %kwargs = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef188, i32 0, i32 4
  %124 = load %struct._expr*, %struct._expr** %kwargs, align 8
  %125 = bitcast %struct._expr* %124 to i8*
  %call189 = call %struct._object* @ast2obj_expr(i8* %125)
  store %struct._object* %call189, %struct._object** %value, align 8
  %126 = load %struct._object*, %struct._object** %value, align 8
  %tobool190 = icmp ne %struct._object* %126, null
  br i1 %tobool190, label %if.end.192, label %if.then.191

if.then.191:                                      ; preds = %do.end.186
  br label %failed

if.end.192:                                       ; preds = %do.end.186
  %127 = load %struct._object*, %struct._object** %result, align 8
  %128 = load %struct._object*, %struct._object** %value, align 8
  %call193 = call i32 @_PyObject_SetAttrId(%struct._object* %127, %struct._Py_Identifier* @PyId_kwargs, %struct._object* %128)
  %cmp194 = icmp eq i32 %call193, -1
  br i1 %cmp194, label %if.then.195, label %if.end.196

if.then.195:                                      ; preds = %if.end.192
  br label %failed

if.end.196:                                       ; preds = %if.end.192
  br label %do.body.197

do.body.197:                                      ; preds = %if.end.196
  %129 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %129, %struct._object** %_py_decref_tmp198, align 8
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp198, align 8
  %ob_refcnt199 = getelementptr inbounds %struct._object, %struct._object* %130, i32 0, i32 0
  %131 = load i64, i64* %ob_refcnt199, align 8
  %dec200 = add i64 %131, -1
  store i64 %dec200, i64* %ob_refcnt199, align 8
  %cmp201 = icmp ne i64 %dec200, 0
  br i1 %cmp201, label %if.then.202, label %if.else.203

if.then.202:                                      ; preds = %do.body.197
  br label %if.end.206

if.else.203:                                      ; preds = %do.body.197
  %132 = load %struct._object*, %struct._object** %_py_decref_tmp198, align 8
  %ob_type204 = getelementptr inbounds %struct._object, %struct._object* %132, i32 0, i32 1
  %133 = load %struct._typeobject*, %struct._typeobject** %ob_type204, align 8
  %tp_dealloc205 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %133, i32 0, i32 4
  %134 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc205, align 8
  %135 = load %struct._object*, %struct._object** %_py_decref_tmp198, align 8
  call void %134(%struct._object* %135)
  br label %if.end.206

if.end.206:                                       ; preds = %if.else.203, %if.then.202
  br label %do.end.207

do.end.207:                                       ; preds = %if.end.206
  %136 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v208 = getelementptr inbounds %struct._stmt, %struct._stmt* %136, i32 0, i32 1
  %ClassDef209 = bitcast %union.anon.33* %v208 to %struct.anon.35*
  %body210 = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef209, i32 0, i32 5
  %137 = load %struct.asdl_seq*, %struct.asdl_seq** %body210, align 8
  %call211 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %137, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call211, %struct._object** %value, align 8
  %138 = load %struct._object*, %struct._object** %value, align 8
  %tobool212 = icmp ne %struct._object* %138, null
  br i1 %tobool212, label %if.end.214, label %if.then.213

if.then.213:                                      ; preds = %do.end.207
  br label %failed

if.end.214:                                       ; preds = %do.end.207
  %139 = load %struct._object*, %struct._object** %result, align 8
  %140 = load %struct._object*, %struct._object** %value, align 8
  %call215 = call i32 @_PyObject_SetAttrId(%struct._object* %139, %struct._Py_Identifier* @PyId_body, %struct._object* %140)
  %cmp216 = icmp eq i32 %call215, -1
  br i1 %cmp216, label %if.then.217, label %if.end.218

if.then.217:                                      ; preds = %if.end.214
  br label %failed

if.end.218:                                       ; preds = %if.end.214
  br label %do.body.219

do.body.219:                                      ; preds = %if.end.218
  %141 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %141, %struct._object** %_py_decref_tmp220, align 8
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp220, align 8
  %ob_refcnt221 = getelementptr inbounds %struct._object, %struct._object* %142, i32 0, i32 0
  %143 = load i64, i64* %ob_refcnt221, align 8
  %dec222 = add i64 %143, -1
  store i64 %dec222, i64* %ob_refcnt221, align 8
  %cmp223 = icmp ne i64 %dec222, 0
  br i1 %cmp223, label %if.then.224, label %if.else.225

if.then.224:                                      ; preds = %do.body.219
  br label %if.end.228

if.else.225:                                      ; preds = %do.body.219
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp220, align 8
  %ob_type226 = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 1
  %145 = load %struct._typeobject*, %struct._typeobject** %ob_type226, align 8
  %tp_dealloc227 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %145, i32 0, i32 4
  %146 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc227, align 8
  %147 = load %struct._object*, %struct._object** %_py_decref_tmp220, align 8
  call void %146(%struct._object* %147)
  br label %if.end.228

if.end.228:                                       ; preds = %if.else.225, %if.then.224
  br label %do.end.229

do.end.229:                                       ; preds = %if.end.228
  %148 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v230 = getelementptr inbounds %struct._stmt, %struct._stmt* %148, i32 0, i32 1
  %ClassDef231 = bitcast %union.anon.33* %v230 to %struct.anon.35*
  %decorator_list232 = getelementptr inbounds %struct.anon.35, %struct.anon.35* %ClassDef231, i32 0, i32 6
  %149 = load %struct.asdl_seq*, %struct.asdl_seq** %decorator_list232, align 8
  %call233 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %149, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call233, %struct._object** %value, align 8
  %150 = load %struct._object*, %struct._object** %value, align 8
  %tobool234 = icmp ne %struct._object* %150, null
  br i1 %tobool234, label %if.end.236, label %if.then.235

if.then.235:                                      ; preds = %do.end.229
  br label %failed

if.end.236:                                       ; preds = %do.end.229
  %151 = load %struct._object*, %struct._object** %result, align 8
  %152 = load %struct._object*, %struct._object** %value, align 8
  %call237 = call i32 @_PyObject_SetAttrId(%struct._object* %151, %struct._Py_Identifier* @PyId_decorator_list, %struct._object* %152)
  %cmp238 = icmp eq i32 %call237, -1
  br i1 %cmp238, label %if.then.239, label %if.end.240

if.then.239:                                      ; preds = %if.end.236
  br label %failed

if.end.240:                                       ; preds = %if.end.236
  br label %do.body.241

do.body.241:                                      ; preds = %if.end.240
  %153 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %153, %struct._object** %_py_decref_tmp242, align 8
  %154 = load %struct._object*, %struct._object** %_py_decref_tmp242, align 8
  %ob_refcnt243 = getelementptr inbounds %struct._object, %struct._object* %154, i32 0, i32 0
  %155 = load i64, i64* %ob_refcnt243, align 8
  %dec244 = add i64 %155, -1
  store i64 %dec244, i64* %ob_refcnt243, align 8
  %cmp245 = icmp ne i64 %dec244, 0
  br i1 %cmp245, label %if.then.246, label %if.else.247

if.then.246:                                      ; preds = %do.body.241
  br label %if.end.250

if.else.247:                                      ; preds = %do.body.241
  %156 = load %struct._object*, %struct._object** %_py_decref_tmp242, align 8
  %ob_type248 = getelementptr inbounds %struct._object, %struct._object* %156, i32 0, i32 1
  %157 = load %struct._typeobject*, %struct._typeobject** %ob_type248, align 8
  %tp_dealloc249 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %157, i32 0, i32 4
  %158 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc249, align 8
  %159 = load %struct._object*, %struct._object** %_py_decref_tmp242, align 8
  call void %158(%struct._object* %159)
  br label %if.end.250

if.end.250:                                       ; preds = %if.else.247, %if.then.246
  br label %do.end.251

do.end.251:                                       ; preds = %if.end.250
  br label %sw.epilog

sw.bb.252:                                        ; preds = %if.end
  %160 = load %struct._typeobject*, %struct._typeobject** @Return_type, align 8
  %call253 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %160, %struct._object* null, %struct._object* null)
  store %struct._object* %call253, %struct._object** %result, align 8
  %161 = load %struct._object*, %struct._object** %result, align 8
  %tobool254 = icmp ne %struct._object* %161, null
  br i1 %tobool254, label %if.end.256, label %if.then.255

if.then.255:                                      ; preds = %sw.bb.252
  br label %failed

if.end.256:                                       ; preds = %sw.bb.252
  %162 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v257 = getelementptr inbounds %struct._stmt, %struct._stmt* %162, i32 0, i32 1
  %Return = bitcast %union.anon.33* %v257 to %struct.anon.36*
  %value258 = getelementptr inbounds %struct.anon.36, %struct.anon.36* %Return, i32 0, i32 0
  %163 = load %struct._expr*, %struct._expr** %value258, align 8
  %164 = bitcast %struct._expr* %163 to i8*
  %call259 = call %struct._object* @ast2obj_expr(i8* %164)
  store %struct._object* %call259, %struct._object** %value, align 8
  %165 = load %struct._object*, %struct._object** %value, align 8
  %tobool260 = icmp ne %struct._object* %165, null
  br i1 %tobool260, label %if.end.262, label %if.then.261

if.then.261:                                      ; preds = %if.end.256
  br label %failed

if.end.262:                                       ; preds = %if.end.256
  %166 = load %struct._object*, %struct._object** %result, align 8
  %167 = load %struct._object*, %struct._object** %value, align 8
  %call263 = call i32 @_PyObject_SetAttrId(%struct._object* %166, %struct._Py_Identifier* @PyId_value, %struct._object* %167)
  %cmp264 = icmp eq i32 %call263, -1
  br i1 %cmp264, label %if.then.265, label %if.end.266

if.then.265:                                      ; preds = %if.end.262
  br label %failed

if.end.266:                                       ; preds = %if.end.262
  br label %do.body.267

do.body.267:                                      ; preds = %if.end.266
  %168 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %168, %struct._object** %_py_decref_tmp268, align 8
  %169 = load %struct._object*, %struct._object** %_py_decref_tmp268, align 8
  %ob_refcnt269 = getelementptr inbounds %struct._object, %struct._object* %169, i32 0, i32 0
  %170 = load i64, i64* %ob_refcnt269, align 8
  %dec270 = add i64 %170, -1
  store i64 %dec270, i64* %ob_refcnt269, align 8
  %cmp271 = icmp ne i64 %dec270, 0
  br i1 %cmp271, label %if.then.272, label %if.else.273

if.then.272:                                      ; preds = %do.body.267
  br label %if.end.276

if.else.273:                                      ; preds = %do.body.267
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp268, align 8
  %ob_type274 = getelementptr inbounds %struct._object, %struct._object* %171, i32 0, i32 1
  %172 = load %struct._typeobject*, %struct._typeobject** %ob_type274, align 8
  %tp_dealloc275 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %172, i32 0, i32 4
  %173 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc275, align 8
  %174 = load %struct._object*, %struct._object** %_py_decref_tmp268, align 8
  call void %173(%struct._object* %174)
  br label %if.end.276

if.end.276:                                       ; preds = %if.else.273, %if.then.272
  br label %do.end.277

do.end.277:                                       ; preds = %if.end.276
  br label %sw.epilog

sw.bb.278:                                        ; preds = %if.end
  %175 = load %struct._typeobject*, %struct._typeobject** @Delete_type, align 8
  %call279 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %175, %struct._object* null, %struct._object* null)
  store %struct._object* %call279, %struct._object** %result, align 8
  %176 = load %struct._object*, %struct._object** %result, align 8
  %tobool280 = icmp ne %struct._object* %176, null
  br i1 %tobool280, label %if.end.282, label %if.then.281

if.then.281:                                      ; preds = %sw.bb.278
  br label %failed

if.end.282:                                       ; preds = %sw.bb.278
  %177 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v283 = getelementptr inbounds %struct._stmt, %struct._stmt* %177, i32 0, i32 1
  %Delete = bitcast %union.anon.33* %v283 to %struct.anon.37*
  %targets = getelementptr inbounds %struct.anon.37, %struct.anon.37* %Delete, i32 0, i32 0
  %178 = load %struct.asdl_seq*, %struct.asdl_seq** %targets, align 8
  %call284 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %178, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call284, %struct._object** %value, align 8
  %179 = load %struct._object*, %struct._object** %value, align 8
  %tobool285 = icmp ne %struct._object* %179, null
  br i1 %tobool285, label %if.end.287, label %if.then.286

if.then.286:                                      ; preds = %if.end.282
  br label %failed

if.end.287:                                       ; preds = %if.end.282
  %180 = load %struct._object*, %struct._object** %result, align 8
  %181 = load %struct._object*, %struct._object** %value, align 8
  %call288 = call i32 @_PyObject_SetAttrId(%struct._object* %180, %struct._Py_Identifier* @PyId_targets, %struct._object* %181)
  %cmp289 = icmp eq i32 %call288, -1
  br i1 %cmp289, label %if.then.290, label %if.end.291

if.then.290:                                      ; preds = %if.end.287
  br label %failed

if.end.291:                                       ; preds = %if.end.287
  br label %do.body.292

do.body.292:                                      ; preds = %if.end.291
  %182 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %182, %struct._object** %_py_decref_tmp293, align 8
  %183 = load %struct._object*, %struct._object** %_py_decref_tmp293, align 8
  %ob_refcnt294 = getelementptr inbounds %struct._object, %struct._object* %183, i32 0, i32 0
  %184 = load i64, i64* %ob_refcnt294, align 8
  %dec295 = add i64 %184, -1
  store i64 %dec295, i64* %ob_refcnt294, align 8
  %cmp296 = icmp ne i64 %dec295, 0
  br i1 %cmp296, label %if.then.297, label %if.else.298

if.then.297:                                      ; preds = %do.body.292
  br label %if.end.301

if.else.298:                                      ; preds = %do.body.292
  %185 = load %struct._object*, %struct._object** %_py_decref_tmp293, align 8
  %ob_type299 = getelementptr inbounds %struct._object, %struct._object* %185, i32 0, i32 1
  %186 = load %struct._typeobject*, %struct._typeobject** %ob_type299, align 8
  %tp_dealloc300 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %186, i32 0, i32 4
  %187 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc300, align 8
  %188 = load %struct._object*, %struct._object** %_py_decref_tmp293, align 8
  call void %187(%struct._object* %188)
  br label %if.end.301

if.end.301:                                       ; preds = %if.else.298, %if.then.297
  br label %do.end.302

do.end.302:                                       ; preds = %if.end.301
  br label %sw.epilog

sw.bb.303:                                        ; preds = %if.end
  %189 = load %struct._typeobject*, %struct._typeobject** @Assign_type, align 8
  %call304 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %189, %struct._object* null, %struct._object* null)
  store %struct._object* %call304, %struct._object** %result, align 8
  %190 = load %struct._object*, %struct._object** %result, align 8
  %tobool305 = icmp ne %struct._object* %190, null
  br i1 %tobool305, label %if.end.307, label %if.then.306

if.then.306:                                      ; preds = %sw.bb.303
  br label %failed

if.end.307:                                       ; preds = %sw.bb.303
  %191 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v308 = getelementptr inbounds %struct._stmt, %struct._stmt* %191, i32 0, i32 1
  %Assign = bitcast %union.anon.33* %v308 to %struct.anon.38*
  %targets309 = getelementptr inbounds %struct.anon.38, %struct.anon.38* %Assign, i32 0, i32 0
  %192 = load %struct.asdl_seq*, %struct.asdl_seq** %targets309, align 8
  %call310 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %192, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call310, %struct._object** %value, align 8
  %193 = load %struct._object*, %struct._object** %value, align 8
  %tobool311 = icmp ne %struct._object* %193, null
  br i1 %tobool311, label %if.end.313, label %if.then.312

if.then.312:                                      ; preds = %if.end.307
  br label %failed

if.end.313:                                       ; preds = %if.end.307
  %194 = load %struct._object*, %struct._object** %result, align 8
  %195 = load %struct._object*, %struct._object** %value, align 8
  %call314 = call i32 @_PyObject_SetAttrId(%struct._object* %194, %struct._Py_Identifier* @PyId_targets, %struct._object* %195)
  %cmp315 = icmp eq i32 %call314, -1
  br i1 %cmp315, label %if.then.316, label %if.end.317

if.then.316:                                      ; preds = %if.end.313
  br label %failed

if.end.317:                                       ; preds = %if.end.313
  br label %do.body.318

do.body.318:                                      ; preds = %if.end.317
  %196 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %196, %struct._object** %_py_decref_tmp319, align 8
  %197 = load %struct._object*, %struct._object** %_py_decref_tmp319, align 8
  %ob_refcnt320 = getelementptr inbounds %struct._object, %struct._object* %197, i32 0, i32 0
  %198 = load i64, i64* %ob_refcnt320, align 8
  %dec321 = add i64 %198, -1
  store i64 %dec321, i64* %ob_refcnt320, align 8
  %cmp322 = icmp ne i64 %dec321, 0
  br i1 %cmp322, label %if.then.323, label %if.else.324

if.then.323:                                      ; preds = %do.body.318
  br label %if.end.327

if.else.324:                                      ; preds = %do.body.318
  %199 = load %struct._object*, %struct._object** %_py_decref_tmp319, align 8
  %ob_type325 = getelementptr inbounds %struct._object, %struct._object* %199, i32 0, i32 1
  %200 = load %struct._typeobject*, %struct._typeobject** %ob_type325, align 8
  %tp_dealloc326 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %200, i32 0, i32 4
  %201 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc326, align 8
  %202 = load %struct._object*, %struct._object** %_py_decref_tmp319, align 8
  call void %201(%struct._object* %202)
  br label %if.end.327

if.end.327:                                       ; preds = %if.else.324, %if.then.323
  br label %do.end.328

do.end.328:                                       ; preds = %if.end.327
  %203 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v329 = getelementptr inbounds %struct._stmt, %struct._stmt* %203, i32 0, i32 1
  %Assign330 = bitcast %union.anon.33* %v329 to %struct.anon.38*
  %value331 = getelementptr inbounds %struct.anon.38, %struct.anon.38* %Assign330, i32 0, i32 1
  %204 = load %struct._expr*, %struct._expr** %value331, align 8
  %205 = bitcast %struct._expr* %204 to i8*
  %call332 = call %struct._object* @ast2obj_expr(i8* %205)
  store %struct._object* %call332, %struct._object** %value, align 8
  %206 = load %struct._object*, %struct._object** %value, align 8
  %tobool333 = icmp ne %struct._object* %206, null
  br i1 %tobool333, label %if.end.335, label %if.then.334

if.then.334:                                      ; preds = %do.end.328
  br label %failed

if.end.335:                                       ; preds = %do.end.328
  %207 = load %struct._object*, %struct._object** %result, align 8
  %208 = load %struct._object*, %struct._object** %value, align 8
  %call336 = call i32 @_PyObject_SetAttrId(%struct._object* %207, %struct._Py_Identifier* @PyId_value, %struct._object* %208)
  %cmp337 = icmp eq i32 %call336, -1
  br i1 %cmp337, label %if.then.338, label %if.end.339

if.then.338:                                      ; preds = %if.end.335
  br label %failed

if.end.339:                                       ; preds = %if.end.335
  br label %do.body.340

do.body.340:                                      ; preds = %if.end.339
  %209 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %209, %struct._object** %_py_decref_tmp341, align 8
  %210 = load %struct._object*, %struct._object** %_py_decref_tmp341, align 8
  %ob_refcnt342 = getelementptr inbounds %struct._object, %struct._object* %210, i32 0, i32 0
  %211 = load i64, i64* %ob_refcnt342, align 8
  %dec343 = add i64 %211, -1
  store i64 %dec343, i64* %ob_refcnt342, align 8
  %cmp344 = icmp ne i64 %dec343, 0
  br i1 %cmp344, label %if.then.345, label %if.else.346

if.then.345:                                      ; preds = %do.body.340
  br label %if.end.349

if.else.346:                                      ; preds = %do.body.340
  %212 = load %struct._object*, %struct._object** %_py_decref_tmp341, align 8
  %ob_type347 = getelementptr inbounds %struct._object, %struct._object* %212, i32 0, i32 1
  %213 = load %struct._typeobject*, %struct._typeobject** %ob_type347, align 8
  %tp_dealloc348 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %213, i32 0, i32 4
  %214 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc348, align 8
  %215 = load %struct._object*, %struct._object** %_py_decref_tmp341, align 8
  call void %214(%struct._object* %215)
  br label %if.end.349

if.end.349:                                       ; preds = %if.else.346, %if.then.345
  br label %do.end.350

do.end.350:                                       ; preds = %if.end.349
  br label %sw.epilog

sw.bb.351:                                        ; preds = %if.end
  %216 = load %struct._typeobject*, %struct._typeobject** @AugAssign_type, align 8
  %call352 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %216, %struct._object* null, %struct._object* null)
  store %struct._object* %call352, %struct._object** %result, align 8
  %217 = load %struct._object*, %struct._object** %result, align 8
  %tobool353 = icmp ne %struct._object* %217, null
  br i1 %tobool353, label %if.end.355, label %if.then.354

if.then.354:                                      ; preds = %sw.bb.351
  br label %failed

if.end.355:                                       ; preds = %sw.bb.351
  %218 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v356 = getelementptr inbounds %struct._stmt, %struct._stmt* %218, i32 0, i32 1
  %AugAssign = bitcast %union.anon.33* %v356 to %struct.anon.39*
  %target = getelementptr inbounds %struct.anon.39, %struct.anon.39* %AugAssign, i32 0, i32 0
  %219 = load %struct._expr*, %struct._expr** %target, align 8
  %220 = bitcast %struct._expr* %219 to i8*
  %call357 = call %struct._object* @ast2obj_expr(i8* %220)
  store %struct._object* %call357, %struct._object** %value, align 8
  %221 = load %struct._object*, %struct._object** %value, align 8
  %tobool358 = icmp ne %struct._object* %221, null
  br i1 %tobool358, label %if.end.360, label %if.then.359

if.then.359:                                      ; preds = %if.end.355
  br label %failed

if.end.360:                                       ; preds = %if.end.355
  %222 = load %struct._object*, %struct._object** %result, align 8
  %223 = load %struct._object*, %struct._object** %value, align 8
  %call361 = call i32 @_PyObject_SetAttrId(%struct._object* %222, %struct._Py_Identifier* @PyId_target, %struct._object* %223)
  %cmp362 = icmp eq i32 %call361, -1
  br i1 %cmp362, label %if.then.363, label %if.end.364

if.then.363:                                      ; preds = %if.end.360
  br label %failed

if.end.364:                                       ; preds = %if.end.360
  br label %do.body.365

do.body.365:                                      ; preds = %if.end.364
  %224 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %224, %struct._object** %_py_decref_tmp366, align 8
  %225 = load %struct._object*, %struct._object** %_py_decref_tmp366, align 8
  %ob_refcnt367 = getelementptr inbounds %struct._object, %struct._object* %225, i32 0, i32 0
  %226 = load i64, i64* %ob_refcnt367, align 8
  %dec368 = add i64 %226, -1
  store i64 %dec368, i64* %ob_refcnt367, align 8
  %cmp369 = icmp ne i64 %dec368, 0
  br i1 %cmp369, label %if.then.370, label %if.else.371

if.then.370:                                      ; preds = %do.body.365
  br label %if.end.374

if.else.371:                                      ; preds = %do.body.365
  %227 = load %struct._object*, %struct._object** %_py_decref_tmp366, align 8
  %ob_type372 = getelementptr inbounds %struct._object, %struct._object* %227, i32 0, i32 1
  %228 = load %struct._typeobject*, %struct._typeobject** %ob_type372, align 8
  %tp_dealloc373 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %228, i32 0, i32 4
  %229 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc373, align 8
  %230 = load %struct._object*, %struct._object** %_py_decref_tmp366, align 8
  call void %229(%struct._object* %230)
  br label %if.end.374

if.end.374:                                       ; preds = %if.else.371, %if.then.370
  br label %do.end.375

do.end.375:                                       ; preds = %if.end.374
  %231 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v376 = getelementptr inbounds %struct._stmt, %struct._stmt* %231, i32 0, i32 1
  %AugAssign377 = bitcast %union.anon.33* %v376 to %struct.anon.39*
  %op = getelementptr inbounds %struct.anon.39, %struct.anon.39* %AugAssign377, i32 0, i32 1
  %232 = load i32, i32* %op, align 4
  %call378 = call %struct._object* @ast2obj_operator(i32 %232)
  store %struct._object* %call378, %struct._object** %value, align 8
  %233 = load %struct._object*, %struct._object** %value, align 8
  %tobool379 = icmp ne %struct._object* %233, null
  br i1 %tobool379, label %if.end.381, label %if.then.380

if.then.380:                                      ; preds = %do.end.375
  br label %failed

if.end.381:                                       ; preds = %do.end.375
  %234 = load %struct._object*, %struct._object** %result, align 8
  %235 = load %struct._object*, %struct._object** %value, align 8
  %call382 = call i32 @_PyObject_SetAttrId(%struct._object* %234, %struct._Py_Identifier* @PyId_op, %struct._object* %235)
  %cmp383 = icmp eq i32 %call382, -1
  br i1 %cmp383, label %if.then.384, label %if.end.385

if.then.384:                                      ; preds = %if.end.381
  br label %failed

if.end.385:                                       ; preds = %if.end.381
  br label %do.body.386

do.body.386:                                      ; preds = %if.end.385
  %236 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %236, %struct._object** %_py_decref_tmp387, align 8
  %237 = load %struct._object*, %struct._object** %_py_decref_tmp387, align 8
  %ob_refcnt388 = getelementptr inbounds %struct._object, %struct._object* %237, i32 0, i32 0
  %238 = load i64, i64* %ob_refcnt388, align 8
  %dec389 = add i64 %238, -1
  store i64 %dec389, i64* %ob_refcnt388, align 8
  %cmp390 = icmp ne i64 %dec389, 0
  br i1 %cmp390, label %if.then.391, label %if.else.392

if.then.391:                                      ; preds = %do.body.386
  br label %if.end.395

if.else.392:                                      ; preds = %do.body.386
  %239 = load %struct._object*, %struct._object** %_py_decref_tmp387, align 8
  %ob_type393 = getelementptr inbounds %struct._object, %struct._object* %239, i32 0, i32 1
  %240 = load %struct._typeobject*, %struct._typeobject** %ob_type393, align 8
  %tp_dealloc394 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %240, i32 0, i32 4
  %241 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc394, align 8
  %242 = load %struct._object*, %struct._object** %_py_decref_tmp387, align 8
  call void %241(%struct._object* %242)
  br label %if.end.395

if.end.395:                                       ; preds = %if.else.392, %if.then.391
  br label %do.end.396

do.end.396:                                       ; preds = %if.end.395
  %243 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v397 = getelementptr inbounds %struct._stmt, %struct._stmt* %243, i32 0, i32 1
  %AugAssign398 = bitcast %union.anon.33* %v397 to %struct.anon.39*
  %value399 = getelementptr inbounds %struct.anon.39, %struct.anon.39* %AugAssign398, i32 0, i32 2
  %244 = load %struct._expr*, %struct._expr** %value399, align 8
  %245 = bitcast %struct._expr* %244 to i8*
  %call400 = call %struct._object* @ast2obj_expr(i8* %245)
  store %struct._object* %call400, %struct._object** %value, align 8
  %246 = load %struct._object*, %struct._object** %value, align 8
  %tobool401 = icmp ne %struct._object* %246, null
  br i1 %tobool401, label %if.end.403, label %if.then.402

if.then.402:                                      ; preds = %do.end.396
  br label %failed

if.end.403:                                       ; preds = %do.end.396
  %247 = load %struct._object*, %struct._object** %result, align 8
  %248 = load %struct._object*, %struct._object** %value, align 8
  %call404 = call i32 @_PyObject_SetAttrId(%struct._object* %247, %struct._Py_Identifier* @PyId_value, %struct._object* %248)
  %cmp405 = icmp eq i32 %call404, -1
  br i1 %cmp405, label %if.then.406, label %if.end.407

if.then.406:                                      ; preds = %if.end.403
  br label %failed

if.end.407:                                       ; preds = %if.end.403
  br label %do.body.408

do.body.408:                                      ; preds = %if.end.407
  %249 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %249, %struct._object** %_py_decref_tmp409, align 8
  %250 = load %struct._object*, %struct._object** %_py_decref_tmp409, align 8
  %ob_refcnt410 = getelementptr inbounds %struct._object, %struct._object* %250, i32 0, i32 0
  %251 = load i64, i64* %ob_refcnt410, align 8
  %dec411 = add i64 %251, -1
  store i64 %dec411, i64* %ob_refcnt410, align 8
  %cmp412 = icmp ne i64 %dec411, 0
  br i1 %cmp412, label %if.then.413, label %if.else.414

if.then.413:                                      ; preds = %do.body.408
  br label %if.end.417

if.else.414:                                      ; preds = %do.body.408
  %252 = load %struct._object*, %struct._object** %_py_decref_tmp409, align 8
  %ob_type415 = getelementptr inbounds %struct._object, %struct._object* %252, i32 0, i32 1
  %253 = load %struct._typeobject*, %struct._typeobject** %ob_type415, align 8
  %tp_dealloc416 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %253, i32 0, i32 4
  %254 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc416, align 8
  %255 = load %struct._object*, %struct._object** %_py_decref_tmp409, align 8
  call void %254(%struct._object* %255)
  br label %if.end.417

if.end.417:                                       ; preds = %if.else.414, %if.then.413
  br label %do.end.418

do.end.418:                                       ; preds = %if.end.417
  br label %sw.epilog

sw.bb.419:                                        ; preds = %if.end
  %256 = load %struct._typeobject*, %struct._typeobject** @For_type, align 8
  %call420 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %256, %struct._object* null, %struct._object* null)
  store %struct._object* %call420, %struct._object** %result, align 8
  %257 = load %struct._object*, %struct._object** %result, align 8
  %tobool421 = icmp ne %struct._object* %257, null
  br i1 %tobool421, label %if.end.423, label %if.then.422

if.then.422:                                      ; preds = %sw.bb.419
  br label %failed

if.end.423:                                       ; preds = %sw.bb.419
  %258 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v424 = getelementptr inbounds %struct._stmt, %struct._stmt* %258, i32 0, i32 1
  %For = bitcast %union.anon.33* %v424 to %struct.anon.40*
  %target425 = getelementptr inbounds %struct.anon.40, %struct.anon.40* %For, i32 0, i32 0
  %259 = load %struct._expr*, %struct._expr** %target425, align 8
  %260 = bitcast %struct._expr* %259 to i8*
  %call426 = call %struct._object* @ast2obj_expr(i8* %260)
  store %struct._object* %call426, %struct._object** %value, align 8
  %261 = load %struct._object*, %struct._object** %value, align 8
  %tobool427 = icmp ne %struct._object* %261, null
  br i1 %tobool427, label %if.end.429, label %if.then.428

if.then.428:                                      ; preds = %if.end.423
  br label %failed

if.end.429:                                       ; preds = %if.end.423
  %262 = load %struct._object*, %struct._object** %result, align 8
  %263 = load %struct._object*, %struct._object** %value, align 8
  %call430 = call i32 @_PyObject_SetAttrId(%struct._object* %262, %struct._Py_Identifier* @PyId_target, %struct._object* %263)
  %cmp431 = icmp eq i32 %call430, -1
  br i1 %cmp431, label %if.then.432, label %if.end.433

if.then.432:                                      ; preds = %if.end.429
  br label %failed

if.end.433:                                       ; preds = %if.end.429
  br label %do.body.434

do.body.434:                                      ; preds = %if.end.433
  %264 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %264, %struct._object** %_py_decref_tmp435, align 8
  %265 = load %struct._object*, %struct._object** %_py_decref_tmp435, align 8
  %ob_refcnt436 = getelementptr inbounds %struct._object, %struct._object* %265, i32 0, i32 0
  %266 = load i64, i64* %ob_refcnt436, align 8
  %dec437 = add i64 %266, -1
  store i64 %dec437, i64* %ob_refcnt436, align 8
  %cmp438 = icmp ne i64 %dec437, 0
  br i1 %cmp438, label %if.then.439, label %if.else.440

if.then.439:                                      ; preds = %do.body.434
  br label %if.end.443

if.else.440:                                      ; preds = %do.body.434
  %267 = load %struct._object*, %struct._object** %_py_decref_tmp435, align 8
  %ob_type441 = getelementptr inbounds %struct._object, %struct._object* %267, i32 0, i32 1
  %268 = load %struct._typeobject*, %struct._typeobject** %ob_type441, align 8
  %tp_dealloc442 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %268, i32 0, i32 4
  %269 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc442, align 8
  %270 = load %struct._object*, %struct._object** %_py_decref_tmp435, align 8
  call void %269(%struct._object* %270)
  br label %if.end.443

if.end.443:                                       ; preds = %if.else.440, %if.then.439
  br label %do.end.444

do.end.444:                                       ; preds = %if.end.443
  %271 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v445 = getelementptr inbounds %struct._stmt, %struct._stmt* %271, i32 0, i32 1
  %For446 = bitcast %union.anon.33* %v445 to %struct.anon.40*
  %iter = getelementptr inbounds %struct.anon.40, %struct.anon.40* %For446, i32 0, i32 1
  %272 = load %struct._expr*, %struct._expr** %iter, align 8
  %273 = bitcast %struct._expr* %272 to i8*
  %call447 = call %struct._object* @ast2obj_expr(i8* %273)
  store %struct._object* %call447, %struct._object** %value, align 8
  %274 = load %struct._object*, %struct._object** %value, align 8
  %tobool448 = icmp ne %struct._object* %274, null
  br i1 %tobool448, label %if.end.450, label %if.then.449

if.then.449:                                      ; preds = %do.end.444
  br label %failed

if.end.450:                                       ; preds = %do.end.444
  %275 = load %struct._object*, %struct._object** %result, align 8
  %276 = load %struct._object*, %struct._object** %value, align 8
  %call451 = call i32 @_PyObject_SetAttrId(%struct._object* %275, %struct._Py_Identifier* @PyId_iter, %struct._object* %276)
  %cmp452 = icmp eq i32 %call451, -1
  br i1 %cmp452, label %if.then.453, label %if.end.454

if.then.453:                                      ; preds = %if.end.450
  br label %failed

if.end.454:                                       ; preds = %if.end.450
  br label %do.body.455

do.body.455:                                      ; preds = %if.end.454
  %277 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %277, %struct._object** %_py_decref_tmp456, align 8
  %278 = load %struct._object*, %struct._object** %_py_decref_tmp456, align 8
  %ob_refcnt457 = getelementptr inbounds %struct._object, %struct._object* %278, i32 0, i32 0
  %279 = load i64, i64* %ob_refcnt457, align 8
  %dec458 = add i64 %279, -1
  store i64 %dec458, i64* %ob_refcnt457, align 8
  %cmp459 = icmp ne i64 %dec458, 0
  br i1 %cmp459, label %if.then.460, label %if.else.461

if.then.460:                                      ; preds = %do.body.455
  br label %if.end.464

if.else.461:                                      ; preds = %do.body.455
  %280 = load %struct._object*, %struct._object** %_py_decref_tmp456, align 8
  %ob_type462 = getelementptr inbounds %struct._object, %struct._object* %280, i32 0, i32 1
  %281 = load %struct._typeobject*, %struct._typeobject** %ob_type462, align 8
  %tp_dealloc463 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %281, i32 0, i32 4
  %282 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc463, align 8
  %283 = load %struct._object*, %struct._object** %_py_decref_tmp456, align 8
  call void %282(%struct._object* %283)
  br label %if.end.464

if.end.464:                                       ; preds = %if.else.461, %if.then.460
  br label %do.end.465

do.end.465:                                       ; preds = %if.end.464
  %284 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v466 = getelementptr inbounds %struct._stmt, %struct._stmt* %284, i32 0, i32 1
  %For467 = bitcast %union.anon.33* %v466 to %struct.anon.40*
  %body468 = getelementptr inbounds %struct.anon.40, %struct.anon.40* %For467, i32 0, i32 2
  %285 = load %struct.asdl_seq*, %struct.asdl_seq** %body468, align 8
  %call469 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %285, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call469, %struct._object** %value, align 8
  %286 = load %struct._object*, %struct._object** %value, align 8
  %tobool470 = icmp ne %struct._object* %286, null
  br i1 %tobool470, label %if.end.472, label %if.then.471

if.then.471:                                      ; preds = %do.end.465
  br label %failed

if.end.472:                                       ; preds = %do.end.465
  %287 = load %struct._object*, %struct._object** %result, align 8
  %288 = load %struct._object*, %struct._object** %value, align 8
  %call473 = call i32 @_PyObject_SetAttrId(%struct._object* %287, %struct._Py_Identifier* @PyId_body, %struct._object* %288)
  %cmp474 = icmp eq i32 %call473, -1
  br i1 %cmp474, label %if.then.475, label %if.end.476

if.then.475:                                      ; preds = %if.end.472
  br label %failed

if.end.476:                                       ; preds = %if.end.472
  br label %do.body.477

do.body.477:                                      ; preds = %if.end.476
  %289 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %289, %struct._object** %_py_decref_tmp478, align 8
  %290 = load %struct._object*, %struct._object** %_py_decref_tmp478, align 8
  %ob_refcnt479 = getelementptr inbounds %struct._object, %struct._object* %290, i32 0, i32 0
  %291 = load i64, i64* %ob_refcnt479, align 8
  %dec480 = add i64 %291, -1
  store i64 %dec480, i64* %ob_refcnt479, align 8
  %cmp481 = icmp ne i64 %dec480, 0
  br i1 %cmp481, label %if.then.482, label %if.else.483

if.then.482:                                      ; preds = %do.body.477
  br label %if.end.486

if.else.483:                                      ; preds = %do.body.477
  %292 = load %struct._object*, %struct._object** %_py_decref_tmp478, align 8
  %ob_type484 = getelementptr inbounds %struct._object, %struct._object* %292, i32 0, i32 1
  %293 = load %struct._typeobject*, %struct._typeobject** %ob_type484, align 8
  %tp_dealloc485 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %293, i32 0, i32 4
  %294 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc485, align 8
  %295 = load %struct._object*, %struct._object** %_py_decref_tmp478, align 8
  call void %294(%struct._object* %295)
  br label %if.end.486

if.end.486:                                       ; preds = %if.else.483, %if.then.482
  br label %do.end.487

do.end.487:                                       ; preds = %if.end.486
  %296 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v488 = getelementptr inbounds %struct._stmt, %struct._stmt* %296, i32 0, i32 1
  %For489 = bitcast %union.anon.33* %v488 to %struct.anon.40*
  %orelse = getelementptr inbounds %struct.anon.40, %struct.anon.40* %For489, i32 0, i32 3
  %297 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse, align 8
  %call490 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %297, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call490, %struct._object** %value, align 8
  %298 = load %struct._object*, %struct._object** %value, align 8
  %tobool491 = icmp ne %struct._object* %298, null
  br i1 %tobool491, label %if.end.493, label %if.then.492

if.then.492:                                      ; preds = %do.end.487
  br label %failed

if.end.493:                                       ; preds = %do.end.487
  %299 = load %struct._object*, %struct._object** %result, align 8
  %300 = load %struct._object*, %struct._object** %value, align 8
  %call494 = call i32 @_PyObject_SetAttrId(%struct._object* %299, %struct._Py_Identifier* @PyId_orelse, %struct._object* %300)
  %cmp495 = icmp eq i32 %call494, -1
  br i1 %cmp495, label %if.then.496, label %if.end.497

if.then.496:                                      ; preds = %if.end.493
  br label %failed

if.end.497:                                       ; preds = %if.end.493
  br label %do.body.498

do.body.498:                                      ; preds = %if.end.497
  %301 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %301, %struct._object** %_py_decref_tmp499, align 8
  %302 = load %struct._object*, %struct._object** %_py_decref_tmp499, align 8
  %ob_refcnt500 = getelementptr inbounds %struct._object, %struct._object* %302, i32 0, i32 0
  %303 = load i64, i64* %ob_refcnt500, align 8
  %dec501 = add i64 %303, -1
  store i64 %dec501, i64* %ob_refcnt500, align 8
  %cmp502 = icmp ne i64 %dec501, 0
  br i1 %cmp502, label %if.then.503, label %if.else.504

if.then.503:                                      ; preds = %do.body.498
  br label %if.end.507

if.else.504:                                      ; preds = %do.body.498
  %304 = load %struct._object*, %struct._object** %_py_decref_tmp499, align 8
  %ob_type505 = getelementptr inbounds %struct._object, %struct._object* %304, i32 0, i32 1
  %305 = load %struct._typeobject*, %struct._typeobject** %ob_type505, align 8
  %tp_dealloc506 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %305, i32 0, i32 4
  %306 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc506, align 8
  %307 = load %struct._object*, %struct._object** %_py_decref_tmp499, align 8
  call void %306(%struct._object* %307)
  br label %if.end.507

if.end.507:                                       ; preds = %if.else.504, %if.then.503
  br label %do.end.508

do.end.508:                                       ; preds = %if.end.507
  br label %sw.epilog

sw.bb.509:                                        ; preds = %if.end
  %308 = load %struct._typeobject*, %struct._typeobject** @While_type, align 8
  %call510 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %308, %struct._object* null, %struct._object* null)
  store %struct._object* %call510, %struct._object** %result, align 8
  %309 = load %struct._object*, %struct._object** %result, align 8
  %tobool511 = icmp ne %struct._object* %309, null
  br i1 %tobool511, label %if.end.513, label %if.then.512

if.then.512:                                      ; preds = %sw.bb.509
  br label %failed

if.end.513:                                       ; preds = %sw.bb.509
  %310 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v514 = getelementptr inbounds %struct._stmt, %struct._stmt* %310, i32 0, i32 1
  %While = bitcast %union.anon.33* %v514 to %struct.anon.41*
  %test = getelementptr inbounds %struct.anon.41, %struct.anon.41* %While, i32 0, i32 0
  %311 = load %struct._expr*, %struct._expr** %test, align 8
  %312 = bitcast %struct._expr* %311 to i8*
  %call515 = call %struct._object* @ast2obj_expr(i8* %312)
  store %struct._object* %call515, %struct._object** %value, align 8
  %313 = load %struct._object*, %struct._object** %value, align 8
  %tobool516 = icmp ne %struct._object* %313, null
  br i1 %tobool516, label %if.end.518, label %if.then.517

if.then.517:                                      ; preds = %if.end.513
  br label %failed

if.end.518:                                       ; preds = %if.end.513
  %314 = load %struct._object*, %struct._object** %result, align 8
  %315 = load %struct._object*, %struct._object** %value, align 8
  %call519 = call i32 @_PyObject_SetAttrId(%struct._object* %314, %struct._Py_Identifier* @PyId_test, %struct._object* %315)
  %cmp520 = icmp eq i32 %call519, -1
  br i1 %cmp520, label %if.then.521, label %if.end.522

if.then.521:                                      ; preds = %if.end.518
  br label %failed

if.end.522:                                       ; preds = %if.end.518
  br label %do.body.523

do.body.523:                                      ; preds = %if.end.522
  %316 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %316, %struct._object** %_py_decref_tmp524, align 8
  %317 = load %struct._object*, %struct._object** %_py_decref_tmp524, align 8
  %ob_refcnt525 = getelementptr inbounds %struct._object, %struct._object* %317, i32 0, i32 0
  %318 = load i64, i64* %ob_refcnt525, align 8
  %dec526 = add i64 %318, -1
  store i64 %dec526, i64* %ob_refcnt525, align 8
  %cmp527 = icmp ne i64 %dec526, 0
  br i1 %cmp527, label %if.then.528, label %if.else.529

if.then.528:                                      ; preds = %do.body.523
  br label %if.end.532

if.else.529:                                      ; preds = %do.body.523
  %319 = load %struct._object*, %struct._object** %_py_decref_tmp524, align 8
  %ob_type530 = getelementptr inbounds %struct._object, %struct._object* %319, i32 0, i32 1
  %320 = load %struct._typeobject*, %struct._typeobject** %ob_type530, align 8
  %tp_dealloc531 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %320, i32 0, i32 4
  %321 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc531, align 8
  %322 = load %struct._object*, %struct._object** %_py_decref_tmp524, align 8
  call void %321(%struct._object* %322)
  br label %if.end.532

if.end.532:                                       ; preds = %if.else.529, %if.then.528
  br label %do.end.533

do.end.533:                                       ; preds = %if.end.532
  %323 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v534 = getelementptr inbounds %struct._stmt, %struct._stmt* %323, i32 0, i32 1
  %While535 = bitcast %union.anon.33* %v534 to %struct.anon.41*
  %body536 = getelementptr inbounds %struct.anon.41, %struct.anon.41* %While535, i32 0, i32 1
  %324 = load %struct.asdl_seq*, %struct.asdl_seq** %body536, align 8
  %call537 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %324, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call537, %struct._object** %value, align 8
  %325 = load %struct._object*, %struct._object** %value, align 8
  %tobool538 = icmp ne %struct._object* %325, null
  br i1 %tobool538, label %if.end.540, label %if.then.539

if.then.539:                                      ; preds = %do.end.533
  br label %failed

if.end.540:                                       ; preds = %do.end.533
  %326 = load %struct._object*, %struct._object** %result, align 8
  %327 = load %struct._object*, %struct._object** %value, align 8
  %call541 = call i32 @_PyObject_SetAttrId(%struct._object* %326, %struct._Py_Identifier* @PyId_body, %struct._object* %327)
  %cmp542 = icmp eq i32 %call541, -1
  br i1 %cmp542, label %if.then.543, label %if.end.544

if.then.543:                                      ; preds = %if.end.540
  br label %failed

if.end.544:                                       ; preds = %if.end.540
  br label %do.body.545

do.body.545:                                      ; preds = %if.end.544
  %328 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %328, %struct._object** %_py_decref_tmp546, align 8
  %329 = load %struct._object*, %struct._object** %_py_decref_tmp546, align 8
  %ob_refcnt547 = getelementptr inbounds %struct._object, %struct._object* %329, i32 0, i32 0
  %330 = load i64, i64* %ob_refcnt547, align 8
  %dec548 = add i64 %330, -1
  store i64 %dec548, i64* %ob_refcnt547, align 8
  %cmp549 = icmp ne i64 %dec548, 0
  br i1 %cmp549, label %if.then.550, label %if.else.551

if.then.550:                                      ; preds = %do.body.545
  br label %if.end.554

if.else.551:                                      ; preds = %do.body.545
  %331 = load %struct._object*, %struct._object** %_py_decref_tmp546, align 8
  %ob_type552 = getelementptr inbounds %struct._object, %struct._object* %331, i32 0, i32 1
  %332 = load %struct._typeobject*, %struct._typeobject** %ob_type552, align 8
  %tp_dealloc553 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %332, i32 0, i32 4
  %333 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc553, align 8
  %334 = load %struct._object*, %struct._object** %_py_decref_tmp546, align 8
  call void %333(%struct._object* %334)
  br label %if.end.554

if.end.554:                                       ; preds = %if.else.551, %if.then.550
  br label %do.end.555

do.end.555:                                       ; preds = %if.end.554
  %335 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v556 = getelementptr inbounds %struct._stmt, %struct._stmt* %335, i32 0, i32 1
  %While557 = bitcast %union.anon.33* %v556 to %struct.anon.41*
  %orelse558 = getelementptr inbounds %struct.anon.41, %struct.anon.41* %While557, i32 0, i32 2
  %336 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse558, align 8
  %call559 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %336, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call559, %struct._object** %value, align 8
  %337 = load %struct._object*, %struct._object** %value, align 8
  %tobool560 = icmp ne %struct._object* %337, null
  br i1 %tobool560, label %if.end.562, label %if.then.561

if.then.561:                                      ; preds = %do.end.555
  br label %failed

if.end.562:                                       ; preds = %do.end.555
  %338 = load %struct._object*, %struct._object** %result, align 8
  %339 = load %struct._object*, %struct._object** %value, align 8
  %call563 = call i32 @_PyObject_SetAttrId(%struct._object* %338, %struct._Py_Identifier* @PyId_orelse, %struct._object* %339)
  %cmp564 = icmp eq i32 %call563, -1
  br i1 %cmp564, label %if.then.565, label %if.end.566

if.then.565:                                      ; preds = %if.end.562
  br label %failed

if.end.566:                                       ; preds = %if.end.562
  br label %do.body.567

do.body.567:                                      ; preds = %if.end.566
  %340 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %340, %struct._object** %_py_decref_tmp568, align 8
  %341 = load %struct._object*, %struct._object** %_py_decref_tmp568, align 8
  %ob_refcnt569 = getelementptr inbounds %struct._object, %struct._object* %341, i32 0, i32 0
  %342 = load i64, i64* %ob_refcnt569, align 8
  %dec570 = add i64 %342, -1
  store i64 %dec570, i64* %ob_refcnt569, align 8
  %cmp571 = icmp ne i64 %dec570, 0
  br i1 %cmp571, label %if.then.572, label %if.else.573

if.then.572:                                      ; preds = %do.body.567
  br label %if.end.576

if.else.573:                                      ; preds = %do.body.567
  %343 = load %struct._object*, %struct._object** %_py_decref_tmp568, align 8
  %ob_type574 = getelementptr inbounds %struct._object, %struct._object* %343, i32 0, i32 1
  %344 = load %struct._typeobject*, %struct._typeobject** %ob_type574, align 8
  %tp_dealloc575 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %344, i32 0, i32 4
  %345 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc575, align 8
  %346 = load %struct._object*, %struct._object** %_py_decref_tmp568, align 8
  call void %345(%struct._object* %346)
  br label %if.end.576

if.end.576:                                       ; preds = %if.else.573, %if.then.572
  br label %do.end.577

do.end.577:                                       ; preds = %if.end.576
  br label %sw.epilog

sw.bb.578:                                        ; preds = %if.end
  %347 = load %struct._typeobject*, %struct._typeobject** @If_type, align 8
  %call579 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %347, %struct._object* null, %struct._object* null)
  store %struct._object* %call579, %struct._object** %result, align 8
  %348 = load %struct._object*, %struct._object** %result, align 8
  %tobool580 = icmp ne %struct._object* %348, null
  br i1 %tobool580, label %if.end.582, label %if.then.581

if.then.581:                                      ; preds = %sw.bb.578
  br label %failed

if.end.582:                                       ; preds = %sw.bb.578
  %349 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v583 = getelementptr inbounds %struct._stmt, %struct._stmt* %349, i32 0, i32 1
  %If = bitcast %union.anon.33* %v583 to %struct.anon.42*
  %test584 = getelementptr inbounds %struct.anon.42, %struct.anon.42* %If, i32 0, i32 0
  %350 = load %struct._expr*, %struct._expr** %test584, align 8
  %351 = bitcast %struct._expr* %350 to i8*
  %call585 = call %struct._object* @ast2obj_expr(i8* %351)
  store %struct._object* %call585, %struct._object** %value, align 8
  %352 = load %struct._object*, %struct._object** %value, align 8
  %tobool586 = icmp ne %struct._object* %352, null
  br i1 %tobool586, label %if.end.588, label %if.then.587

if.then.587:                                      ; preds = %if.end.582
  br label %failed

if.end.588:                                       ; preds = %if.end.582
  %353 = load %struct._object*, %struct._object** %result, align 8
  %354 = load %struct._object*, %struct._object** %value, align 8
  %call589 = call i32 @_PyObject_SetAttrId(%struct._object* %353, %struct._Py_Identifier* @PyId_test, %struct._object* %354)
  %cmp590 = icmp eq i32 %call589, -1
  br i1 %cmp590, label %if.then.591, label %if.end.592

if.then.591:                                      ; preds = %if.end.588
  br label %failed

if.end.592:                                       ; preds = %if.end.588
  br label %do.body.593

do.body.593:                                      ; preds = %if.end.592
  %355 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %355, %struct._object** %_py_decref_tmp594, align 8
  %356 = load %struct._object*, %struct._object** %_py_decref_tmp594, align 8
  %ob_refcnt595 = getelementptr inbounds %struct._object, %struct._object* %356, i32 0, i32 0
  %357 = load i64, i64* %ob_refcnt595, align 8
  %dec596 = add i64 %357, -1
  store i64 %dec596, i64* %ob_refcnt595, align 8
  %cmp597 = icmp ne i64 %dec596, 0
  br i1 %cmp597, label %if.then.598, label %if.else.599

if.then.598:                                      ; preds = %do.body.593
  br label %if.end.602

if.else.599:                                      ; preds = %do.body.593
  %358 = load %struct._object*, %struct._object** %_py_decref_tmp594, align 8
  %ob_type600 = getelementptr inbounds %struct._object, %struct._object* %358, i32 0, i32 1
  %359 = load %struct._typeobject*, %struct._typeobject** %ob_type600, align 8
  %tp_dealloc601 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %359, i32 0, i32 4
  %360 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc601, align 8
  %361 = load %struct._object*, %struct._object** %_py_decref_tmp594, align 8
  call void %360(%struct._object* %361)
  br label %if.end.602

if.end.602:                                       ; preds = %if.else.599, %if.then.598
  br label %do.end.603

do.end.603:                                       ; preds = %if.end.602
  %362 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v604 = getelementptr inbounds %struct._stmt, %struct._stmt* %362, i32 0, i32 1
  %If605 = bitcast %union.anon.33* %v604 to %struct.anon.42*
  %body606 = getelementptr inbounds %struct.anon.42, %struct.anon.42* %If605, i32 0, i32 1
  %363 = load %struct.asdl_seq*, %struct.asdl_seq** %body606, align 8
  %call607 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %363, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call607, %struct._object** %value, align 8
  %364 = load %struct._object*, %struct._object** %value, align 8
  %tobool608 = icmp ne %struct._object* %364, null
  br i1 %tobool608, label %if.end.610, label %if.then.609

if.then.609:                                      ; preds = %do.end.603
  br label %failed

if.end.610:                                       ; preds = %do.end.603
  %365 = load %struct._object*, %struct._object** %result, align 8
  %366 = load %struct._object*, %struct._object** %value, align 8
  %call611 = call i32 @_PyObject_SetAttrId(%struct._object* %365, %struct._Py_Identifier* @PyId_body, %struct._object* %366)
  %cmp612 = icmp eq i32 %call611, -1
  br i1 %cmp612, label %if.then.613, label %if.end.614

if.then.613:                                      ; preds = %if.end.610
  br label %failed

if.end.614:                                       ; preds = %if.end.610
  br label %do.body.615

do.body.615:                                      ; preds = %if.end.614
  %367 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %367, %struct._object** %_py_decref_tmp616, align 8
  %368 = load %struct._object*, %struct._object** %_py_decref_tmp616, align 8
  %ob_refcnt617 = getelementptr inbounds %struct._object, %struct._object* %368, i32 0, i32 0
  %369 = load i64, i64* %ob_refcnt617, align 8
  %dec618 = add i64 %369, -1
  store i64 %dec618, i64* %ob_refcnt617, align 8
  %cmp619 = icmp ne i64 %dec618, 0
  br i1 %cmp619, label %if.then.620, label %if.else.621

if.then.620:                                      ; preds = %do.body.615
  br label %if.end.624

if.else.621:                                      ; preds = %do.body.615
  %370 = load %struct._object*, %struct._object** %_py_decref_tmp616, align 8
  %ob_type622 = getelementptr inbounds %struct._object, %struct._object* %370, i32 0, i32 1
  %371 = load %struct._typeobject*, %struct._typeobject** %ob_type622, align 8
  %tp_dealloc623 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %371, i32 0, i32 4
  %372 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc623, align 8
  %373 = load %struct._object*, %struct._object** %_py_decref_tmp616, align 8
  call void %372(%struct._object* %373)
  br label %if.end.624

if.end.624:                                       ; preds = %if.else.621, %if.then.620
  br label %do.end.625

do.end.625:                                       ; preds = %if.end.624
  %374 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v626 = getelementptr inbounds %struct._stmt, %struct._stmt* %374, i32 0, i32 1
  %If627 = bitcast %union.anon.33* %v626 to %struct.anon.42*
  %orelse628 = getelementptr inbounds %struct.anon.42, %struct.anon.42* %If627, i32 0, i32 2
  %375 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse628, align 8
  %call629 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %375, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call629, %struct._object** %value, align 8
  %376 = load %struct._object*, %struct._object** %value, align 8
  %tobool630 = icmp ne %struct._object* %376, null
  br i1 %tobool630, label %if.end.632, label %if.then.631

if.then.631:                                      ; preds = %do.end.625
  br label %failed

if.end.632:                                       ; preds = %do.end.625
  %377 = load %struct._object*, %struct._object** %result, align 8
  %378 = load %struct._object*, %struct._object** %value, align 8
  %call633 = call i32 @_PyObject_SetAttrId(%struct._object* %377, %struct._Py_Identifier* @PyId_orelse, %struct._object* %378)
  %cmp634 = icmp eq i32 %call633, -1
  br i1 %cmp634, label %if.then.635, label %if.end.636

if.then.635:                                      ; preds = %if.end.632
  br label %failed

if.end.636:                                       ; preds = %if.end.632
  br label %do.body.637

do.body.637:                                      ; preds = %if.end.636
  %379 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %379, %struct._object** %_py_decref_tmp638, align 8
  %380 = load %struct._object*, %struct._object** %_py_decref_tmp638, align 8
  %ob_refcnt639 = getelementptr inbounds %struct._object, %struct._object* %380, i32 0, i32 0
  %381 = load i64, i64* %ob_refcnt639, align 8
  %dec640 = add i64 %381, -1
  store i64 %dec640, i64* %ob_refcnt639, align 8
  %cmp641 = icmp ne i64 %dec640, 0
  br i1 %cmp641, label %if.then.642, label %if.else.643

if.then.642:                                      ; preds = %do.body.637
  br label %if.end.646

if.else.643:                                      ; preds = %do.body.637
  %382 = load %struct._object*, %struct._object** %_py_decref_tmp638, align 8
  %ob_type644 = getelementptr inbounds %struct._object, %struct._object* %382, i32 0, i32 1
  %383 = load %struct._typeobject*, %struct._typeobject** %ob_type644, align 8
  %tp_dealloc645 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %383, i32 0, i32 4
  %384 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc645, align 8
  %385 = load %struct._object*, %struct._object** %_py_decref_tmp638, align 8
  call void %384(%struct._object* %385)
  br label %if.end.646

if.end.646:                                       ; preds = %if.else.643, %if.then.642
  br label %do.end.647

do.end.647:                                       ; preds = %if.end.646
  br label %sw.epilog

sw.bb.648:                                        ; preds = %if.end
  %386 = load %struct._typeobject*, %struct._typeobject** @With_type, align 8
  %call649 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %386, %struct._object* null, %struct._object* null)
  store %struct._object* %call649, %struct._object** %result, align 8
  %387 = load %struct._object*, %struct._object** %result, align 8
  %tobool650 = icmp ne %struct._object* %387, null
  br i1 %tobool650, label %if.end.652, label %if.then.651

if.then.651:                                      ; preds = %sw.bb.648
  br label %failed

if.end.652:                                       ; preds = %sw.bb.648
  %388 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v653 = getelementptr inbounds %struct._stmt, %struct._stmt* %388, i32 0, i32 1
  %With = bitcast %union.anon.33* %v653 to %struct.anon.43*
  %items = getelementptr inbounds %struct.anon.43, %struct.anon.43* %With, i32 0, i32 0
  %389 = load %struct.asdl_seq*, %struct.asdl_seq** %items, align 8
  %call654 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %389, %struct._object* (i8*)* @ast2obj_withitem)
  store %struct._object* %call654, %struct._object** %value, align 8
  %390 = load %struct._object*, %struct._object** %value, align 8
  %tobool655 = icmp ne %struct._object* %390, null
  br i1 %tobool655, label %if.end.657, label %if.then.656

if.then.656:                                      ; preds = %if.end.652
  br label %failed

if.end.657:                                       ; preds = %if.end.652
  %391 = load %struct._object*, %struct._object** %result, align 8
  %392 = load %struct._object*, %struct._object** %value, align 8
  %call658 = call i32 @_PyObject_SetAttrId(%struct._object* %391, %struct._Py_Identifier* @PyId_items, %struct._object* %392)
  %cmp659 = icmp eq i32 %call658, -1
  br i1 %cmp659, label %if.then.660, label %if.end.661

if.then.660:                                      ; preds = %if.end.657
  br label %failed

if.end.661:                                       ; preds = %if.end.657
  br label %do.body.662

do.body.662:                                      ; preds = %if.end.661
  %393 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %393, %struct._object** %_py_decref_tmp663, align 8
  %394 = load %struct._object*, %struct._object** %_py_decref_tmp663, align 8
  %ob_refcnt664 = getelementptr inbounds %struct._object, %struct._object* %394, i32 0, i32 0
  %395 = load i64, i64* %ob_refcnt664, align 8
  %dec665 = add i64 %395, -1
  store i64 %dec665, i64* %ob_refcnt664, align 8
  %cmp666 = icmp ne i64 %dec665, 0
  br i1 %cmp666, label %if.then.667, label %if.else.668

if.then.667:                                      ; preds = %do.body.662
  br label %if.end.671

if.else.668:                                      ; preds = %do.body.662
  %396 = load %struct._object*, %struct._object** %_py_decref_tmp663, align 8
  %ob_type669 = getelementptr inbounds %struct._object, %struct._object* %396, i32 0, i32 1
  %397 = load %struct._typeobject*, %struct._typeobject** %ob_type669, align 8
  %tp_dealloc670 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %397, i32 0, i32 4
  %398 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc670, align 8
  %399 = load %struct._object*, %struct._object** %_py_decref_tmp663, align 8
  call void %398(%struct._object* %399)
  br label %if.end.671

if.end.671:                                       ; preds = %if.else.668, %if.then.667
  br label %do.end.672

do.end.672:                                       ; preds = %if.end.671
  %400 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v673 = getelementptr inbounds %struct._stmt, %struct._stmt* %400, i32 0, i32 1
  %With674 = bitcast %union.anon.33* %v673 to %struct.anon.43*
  %body675 = getelementptr inbounds %struct.anon.43, %struct.anon.43* %With674, i32 0, i32 1
  %401 = load %struct.asdl_seq*, %struct.asdl_seq** %body675, align 8
  %call676 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %401, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call676, %struct._object** %value, align 8
  %402 = load %struct._object*, %struct._object** %value, align 8
  %tobool677 = icmp ne %struct._object* %402, null
  br i1 %tobool677, label %if.end.679, label %if.then.678

if.then.678:                                      ; preds = %do.end.672
  br label %failed

if.end.679:                                       ; preds = %do.end.672
  %403 = load %struct._object*, %struct._object** %result, align 8
  %404 = load %struct._object*, %struct._object** %value, align 8
  %call680 = call i32 @_PyObject_SetAttrId(%struct._object* %403, %struct._Py_Identifier* @PyId_body, %struct._object* %404)
  %cmp681 = icmp eq i32 %call680, -1
  br i1 %cmp681, label %if.then.682, label %if.end.683

if.then.682:                                      ; preds = %if.end.679
  br label %failed

if.end.683:                                       ; preds = %if.end.679
  br label %do.body.684

do.body.684:                                      ; preds = %if.end.683
  %405 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %405, %struct._object** %_py_decref_tmp685, align 8
  %406 = load %struct._object*, %struct._object** %_py_decref_tmp685, align 8
  %ob_refcnt686 = getelementptr inbounds %struct._object, %struct._object* %406, i32 0, i32 0
  %407 = load i64, i64* %ob_refcnt686, align 8
  %dec687 = add i64 %407, -1
  store i64 %dec687, i64* %ob_refcnt686, align 8
  %cmp688 = icmp ne i64 %dec687, 0
  br i1 %cmp688, label %if.then.689, label %if.else.690

if.then.689:                                      ; preds = %do.body.684
  br label %if.end.693

if.else.690:                                      ; preds = %do.body.684
  %408 = load %struct._object*, %struct._object** %_py_decref_tmp685, align 8
  %ob_type691 = getelementptr inbounds %struct._object, %struct._object* %408, i32 0, i32 1
  %409 = load %struct._typeobject*, %struct._typeobject** %ob_type691, align 8
  %tp_dealloc692 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %409, i32 0, i32 4
  %410 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc692, align 8
  %411 = load %struct._object*, %struct._object** %_py_decref_tmp685, align 8
  call void %410(%struct._object* %411)
  br label %if.end.693

if.end.693:                                       ; preds = %if.else.690, %if.then.689
  br label %do.end.694

do.end.694:                                       ; preds = %if.end.693
  br label %sw.epilog

sw.bb.695:                                        ; preds = %if.end
  %412 = load %struct._typeobject*, %struct._typeobject** @Raise_type, align 8
  %call696 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %412, %struct._object* null, %struct._object* null)
  store %struct._object* %call696, %struct._object** %result, align 8
  %413 = load %struct._object*, %struct._object** %result, align 8
  %tobool697 = icmp ne %struct._object* %413, null
  br i1 %tobool697, label %if.end.699, label %if.then.698

if.then.698:                                      ; preds = %sw.bb.695
  br label %failed

if.end.699:                                       ; preds = %sw.bb.695
  %414 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v700 = getelementptr inbounds %struct._stmt, %struct._stmt* %414, i32 0, i32 1
  %Raise = bitcast %union.anon.33* %v700 to %struct.anon.44*
  %exc = getelementptr inbounds %struct.anon.44, %struct.anon.44* %Raise, i32 0, i32 0
  %415 = load %struct._expr*, %struct._expr** %exc, align 8
  %416 = bitcast %struct._expr* %415 to i8*
  %call701 = call %struct._object* @ast2obj_expr(i8* %416)
  store %struct._object* %call701, %struct._object** %value, align 8
  %417 = load %struct._object*, %struct._object** %value, align 8
  %tobool702 = icmp ne %struct._object* %417, null
  br i1 %tobool702, label %if.end.704, label %if.then.703

if.then.703:                                      ; preds = %if.end.699
  br label %failed

if.end.704:                                       ; preds = %if.end.699
  %418 = load %struct._object*, %struct._object** %result, align 8
  %419 = load %struct._object*, %struct._object** %value, align 8
  %call705 = call i32 @_PyObject_SetAttrId(%struct._object* %418, %struct._Py_Identifier* @PyId_exc, %struct._object* %419)
  %cmp706 = icmp eq i32 %call705, -1
  br i1 %cmp706, label %if.then.707, label %if.end.708

if.then.707:                                      ; preds = %if.end.704
  br label %failed

if.end.708:                                       ; preds = %if.end.704
  br label %do.body.709

do.body.709:                                      ; preds = %if.end.708
  %420 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %420, %struct._object** %_py_decref_tmp710, align 8
  %421 = load %struct._object*, %struct._object** %_py_decref_tmp710, align 8
  %ob_refcnt711 = getelementptr inbounds %struct._object, %struct._object* %421, i32 0, i32 0
  %422 = load i64, i64* %ob_refcnt711, align 8
  %dec712 = add i64 %422, -1
  store i64 %dec712, i64* %ob_refcnt711, align 8
  %cmp713 = icmp ne i64 %dec712, 0
  br i1 %cmp713, label %if.then.714, label %if.else.715

if.then.714:                                      ; preds = %do.body.709
  br label %if.end.718

if.else.715:                                      ; preds = %do.body.709
  %423 = load %struct._object*, %struct._object** %_py_decref_tmp710, align 8
  %ob_type716 = getelementptr inbounds %struct._object, %struct._object* %423, i32 0, i32 1
  %424 = load %struct._typeobject*, %struct._typeobject** %ob_type716, align 8
  %tp_dealloc717 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %424, i32 0, i32 4
  %425 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc717, align 8
  %426 = load %struct._object*, %struct._object** %_py_decref_tmp710, align 8
  call void %425(%struct._object* %426)
  br label %if.end.718

if.end.718:                                       ; preds = %if.else.715, %if.then.714
  br label %do.end.719

do.end.719:                                       ; preds = %if.end.718
  %427 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v720 = getelementptr inbounds %struct._stmt, %struct._stmt* %427, i32 0, i32 1
  %Raise721 = bitcast %union.anon.33* %v720 to %struct.anon.44*
  %cause = getelementptr inbounds %struct.anon.44, %struct.anon.44* %Raise721, i32 0, i32 1
  %428 = load %struct._expr*, %struct._expr** %cause, align 8
  %429 = bitcast %struct._expr* %428 to i8*
  %call722 = call %struct._object* @ast2obj_expr(i8* %429)
  store %struct._object* %call722, %struct._object** %value, align 8
  %430 = load %struct._object*, %struct._object** %value, align 8
  %tobool723 = icmp ne %struct._object* %430, null
  br i1 %tobool723, label %if.end.725, label %if.then.724

if.then.724:                                      ; preds = %do.end.719
  br label %failed

if.end.725:                                       ; preds = %do.end.719
  %431 = load %struct._object*, %struct._object** %result, align 8
  %432 = load %struct._object*, %struct._object** %value, align 8
  %call726 = call i32 @_PyObject_SetAttrId(%struct._object* %431, %struct._Py_Identifier* @PyId_cause, %struct._object* %432)
  %cmp727 = icmp eq i32 %call726, -1
  br i1 %cmp727, label %if.then.728, label %if.end.729

if.then.728:                                      ; preds = %if.end.725
  br label %failed

if.end.729:                                       ; preds = %if.end.725
  br label %do.body.730

do.body.730:                                      ; preds = %if.end.729
  %433 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %433, %struct._object** %_py_decref_tmp731, align 8
  %434 = load %struct._object*, %struct._object** %_py_decref_tmp731, align 8
  %ob_refcnt732 = getelementptr inbounds %struct._object, %struct._object* %434, i32 0, i32 0
  %435 = load i64, i64* %ob_refcnt732, align 8
  %dec733 = add i64 %435, -1
  store i64 %dec733, i64* %ob_refcnt732, align 8
  %cmp734 = icmp ne i64 %dec733, 0
  br i1 %cmp734, label %if.then.735, label %if.else.736

if.then.735:                                      ; preds = %do.body.730
  br label %if.end.739

if.else.736:                                      ; preds = %do.body.730
  %436 = load %struct._object*, %struct._object** %_py_decref_tmp731, align 8
  %ob_type737 = getelementptr inbounds %struct._object, %struct._object* %436, i32 0, i32 1
  %437 = load %struct._typeobject*, %struct._typeobject** %ob_type737, align 8
  %tp_dealloc738 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %437, i32 0, i32 4
  %438 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc738, align 8
  %439 = load %struct._object*, %struct._object** %_py_decref_tmp731, align 8
  call void %438(%struct._object* %439)
  br label %if.end.739

if.end.739:                                       ; preds = %if.else.736, %if.then.735
  br label %do.end.740

do.end.740:                                       ; preds = %if.end.739
  br label %sw.epilog

sw.bb.741:                                        ; preds = %if.end
  %440 = load %struct._typeobject*, %struct._typeobject** @Try_type, align 8
  %call742 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %440, %struct._object* null, %struct._object* null)
  store %struct._object* %call742, %struct._object** %result, align 8
  %441 = load %struct._object*, %struct._object** %result, align 8
  %tobool743 = icmp ne %struct._object* %441, null
  br i1 %tobool743, label %if.end.745, label %if.then.744

if.then.744:                                      ; preds = %sw.bb.741
  br label %failed

if.end.745:                                       ; preds = %sw.bb.741
  %442 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v746 = getelementptr inbounds %struct._stmt, %struct._stmt* %442, i32 0, i32 1
  %Try = bitcast %union.anon.33* %v746 to %struct.anon.45*
  %body747 = getelementptr inbounds %struct.anon.45, %struct.anon.45* %Try, i32 0, i32 0
  %443 = load %struct.asdl_seq*, %struct.asdl_seq** %body747, align 8
  %call748 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %443, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call748, %struct._object** %value, align 8
  %444 = load %struct._object*, %struct._object** %value, align 8
  %tobool749 = icmp ne %struct._object* %444, null
  br i1 %tobool749, label %if.end.751, label %if.then.750

if.then.750:                                      ; preds = %if.end.745
  br label %failed

if.end.751:                                       ; preds = %if.end.745
  %445 = load %struct._object*, %struct._object** %result, align 8
  %446 = load %struct._object*, %struct._object** %value, align 8
  %call752 = call i32 @_PyObject_SetAttrId(%struct._object* %445, %struct._Py_Identifier* @PyId_body, %struct._object* %446)
  %cmp753 = icmp eq i32 %call752, -1
  br i1 %cmp753, label %if.then.754, label %if.end.755

if.then.754:                                      ; preds = %if.end.751
  br label %failed

if.end.755:                                       ; preds = %if.end.751
  br label %do.body.756

do.body.756:                                      ; preds = %if.end.755
  %447 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %447, %struct._object** %_py_decref_tmp757, align 8
  %448 = load %struct._object*, %struct._object** %_py_decref_tmp757, align 8
  %ob_refcnt758 = getelementptr inbounds %struct._object, %struct._object* %448, i32 0, i32 0
  %449 = load i64, i64* %ob_refcnt758, align 8
  %dec759 = add i64 %449, -1
  store i64 %dec759, i64* %ob_refcnt758, align 8
  %cmp760 = icmp ne i64 %dec759, 0
  br i1 %cmp760, label %if.then.761, label %if.else.762

if.then.761:                                      ; preds = %do.body.756
  br label %if.end.765

if.else.762:                                      ; preds = %do.body.756
  %450 = load %struct._object*, %struct._object** %_py_decref_tmp757, align 8
  %ob_type763 = getelementptr inbounds %struct._object, %struct._object* %450, i32 0, i32 1
  %451 = load %struct._typeobject*, %struct._typeobject** %ob_type763, align 8
  %tp_dealloc764 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %451, i32 0, i32 4
  %452 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc764, align 8
  %453 = load %struct._object*, %struct._object** %_py_decref_tmp757, align 8
  call void %452(%struct._object* %453)
  br label %if.end.765

if.end.765:                                       ; preds = %if.else.762, %if.then.761
  br label %do.end.766

do.end.766:                                       ; preds = %if.end.765
  %454 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v767 = getelementptr inbounds %struct._stmt, %struct._stmt* %454, i32 0, i32 1
  %Try768 = bitcast %union.anon.33* %v767 to %struct.anon.45*
  %handlers = getelementptr inbounds %struct.anon.45, %struct.anon.45* %Try768, i32 0, i32 1
  %455 = load %struct.asdl_seq*, %struct.asdl_seq** %handlers, align 8
  %call769 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %455, %struct._object* (i8*)* @ast2obj_excepthandler)
  store %struct._object* %call769, %struct._object** %value, align 8
  %456 = load %struct._object*, %struct._object** %value, align 8
  %tobool770 = icmp ne %struct._object* %456, null
  br i1 %tobool770, label %if.end.772, label %if.then.771

if.then.771:                                      ; preds = %do.end.766
  br label %failed

if.end.772:                                       ; preds = %do.end.766
  %457 = load %struct._object*, %struct._object** %result, align 8
  %458 = load %struct._object*, %struct._object** %value, align 8
  %call773 = call i32 @_PyObject_SetAttrId(%struct._object* %457, %struct._Py_Identifier* @PyId_handlers, %struct._object* %458)
  %cmp774 = icmp eq i32 %call773, -1
  br i1 %cmp774, label %if.then.775, label %if.end.776

if.then.775:                                      ; preds = %if.end.772
  br label %failed

if.end.776:                                       ; preds = %if.end.772
  br label %do.body.777

do.body.777:                                      ; preds = %if.end.776
  %459 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %459, %struct._object** %_py_decref_tmp778, align 8
  %460 = load %struct._object*, %struct._object** %_py_decref_tmp778, align 8
  %ob_refcnt779 = getelementptr inbounds %struct._object, %struct._object* %460, i32 0, i32 0
  %461 = load i64, i64* %ob_refcnt779, align 8
  %dec780 = add i64 %461, -1
  store i64 %dec780, i64* %ob_refcnt779, align 8
  %cmp781 = icmp ne i64 %dec780, 0
  br i1 %cmp781, label %if.then.782, label %if.else.783

if.then.782:                                      ; preds = %do.body.777
  br label %if.end.786

if.else.783:                                      ; preds = %do.body.777
  %462 = load %struct._object*, %struct._object** %_py_decref_tmp778, align 8
  %ob_type784 = getelementptr inbounds %struct._object, %struct._object* %462, i32 0, i32 1
  %463 = load %struct._typeobject*, %struct._typeobject** %ob_type784, align 8
  %tp_dealloc785 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %463, i32 0, i32 4
  %464 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc785, align 8
  %465 = load %struct._object*, %struct._object** %_py_decref_tmp778, align 8
  call void %464(%struct._object* %465)
  br label %if.end.786

if.end.786:                                       ; preds = %if.else.783, %if.then.782
  br label %do.end.787

do.end.787:                                       ; preds = %if.end.786
  %466 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v788 = getelementptr inbounds %struct._stmt, %struct._stmt* %466, i32 0, i32 1
  %Try789 = bitcast %union.anon.33* %v788 to %struct.anon.45*
  %orelse790 = getelementptr inbounds %struct.anon.45, %struct.anon.45* %Try789, i32 0, i32 2
  %467 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse790, align 8
  %call791 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %467, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call791, %struct._object** %value, align 8
  %468 = load %struct._object*, %struct._object** %value, align 8
  %tobool792 = icmp ne %struct._object* %468, null
  br i1 %tobool792, label %if.end.794, label %if.then.793

if.then.793:                                      ; preds = %do.end.787
  br label %failed

if.end.794:                                       ; preds = %do.end.787
  %469 = load %struct._object*, %struct._object** %result, align 8
  %470 = load %struct._object*, %struct._object** %value, align 8
  %call795 = call i32 @_PyObject_SetAttrId(%struct._object* %469, %struct._Py_Identifier* @PyId_orelse, %struct._object* %470)
  %cmp796 = icmp eq i32 %call795, -1
  br i1 %cmp796, label %if.then.797, label %if.end.798

if.then.797:                                      ; preds = %if.end.794
  br label %failed

if.end.798:                                       ; preds = %if.end.794
  br label %do.body.799

do.body.799:                                      ; preds = %if.end.798
  %471 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %471, %struct._object** %_py_decref_tmp800, align 8
  %472 = load %struct._object*, %struct._object** %_py_decref_tmp800, align 8
  %ob_refcnt801 = getelementptr inbounds %struct._object, %struct._object* %472, i32 0, i32 0
  %473 = load i64, i64* %ob_refcnt801, align 8
  %dec802 = add i64 %473, -1
  store i64 %dec802, i64* %ob_refcnt801, align 8
  %cmp803 = icmp ne i64 %dec802, 0
  br i1 %cmp803, label %if.then.804, label %if.else.805

if.then.804:                                      ; preds = %do.body.799
  br label %if.end.808

if.else.805:                                      ; preds = %do.body.799
  %474 = load %struct._object*, %struct._object** %_py_decref_tmp800, align 8
  %ob_type806 = getelementptr inbounds %struct._object, %struct._object* %474, i32 0, i32 1
  %475 = load %struct._typeobject*, %struct._typeobject** %ob_type806, align 8
  %tp_dealloc807 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %475, i32 0, i32 4
  %476 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc807, align 8
  %477 = load %struct._object*, %struct._object** %_py_decref_tmp800, align 8
  call void %476(%struct._object* %477)
  br label %if.end.808

if.end.808:                                       ; preds = %if.else.805, %if.then.804
  br label %do.end.809

do.end.809:                                       ; preds = %if.end.808
  %478 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v810 = getelementptr inbounds %struct._stmt, %struct._stmt* %478, i32 0, i32 1
  %Try811 = bitcast %union.anon.33* %v810 to %struct.anon.45*
  %finalbody = getelementptr inbounds %struct.anon.45, %struct.anon.45* %Try811, i32 0, i32 3
  %479 = load %struct.asdl_seq*, %struct.asdl_seq** %finalbody, align 8
  %call812 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %479, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call812, %struct._object** %value, align 8
  %480 = load %struct._object*, %struct._object** %value, align 8
  %tobool813 = icmp ne %struct._object* %480, null
  br i1 %tobool813, label %if.end.815, label %if.then.814

if.then.814:                                      ; preds = %do.end.809
  br label %failed

if.end.815:                                       ; preds = %do.end.809
  %481 = load %struct._object*, %struct._object** %result, align 8
  %482 = load %struct._object*, %struct._object** %value, align 8
  %call816 = call i32 @_PyObject_SetAttrId(%struct._object* %481, %struct._Py_Identifier* @PyId_finalbody, %struct._object* %482)
  %cmp817 = icmp eq i32 %call816, -1
  br i1 %cmp817, label %if.then.818, label %if.end.819

if.then.818:                                      ; preds = %if.end.815
  br label %failed

if.end.819:                                       ; preds = %if.end.815
  br label %do.body.820

do.body.820:                                      ; preds = %if.end.819
  %483 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %483, %struct._object** %_py_decref_tmp821, align 8
  %484 = load %struct._object*, %struct._object** %_py_decref_tmp821, align 8
  %ob_refcnt822 = getelementptr inbounds %struct._object, %struct._object* %484, i32 0, i32 0
  %485 = load i64, i64* %ob_refcnt822, align 8
  %dec823 = add i64 %485, -1
  store i64 %dec823, i64* %ob_refcnt822, align 8
  %cmp824 = icmp ne i64 %dec823, 0
  br i1 %cmp824, label %if.then.825, label %if.else.826

if.then.825:                                      ; preds = %do.body.820
  br label %if.end.829

if.else.826:                                      ; preds = %do.body.820
  %486 = load %struct._object*, %struct._object** %_py_decref_tmp821, align 8
  %ob_type827 = getelementptr inbounds %struct._object, %struct._object* %486, i32 0, i32 1
  %487 = load %struct._typeobject*, %struct._typeobject** %ob_type827, align 8
  %tp_dealloc828 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %487, i32 0, i32 4
  %488 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc828, align 8
  %489 = load %struct._object*, %struct._object** %_py_decref_tmp821, align 8
  call void %488(%struct._object* %489)
  br label %if.end.829

if.end.829:                                       ; preds = %if.else.826, %if.then.825
  br label %do.end.830

do.end.830:                                       ; preds = %if.end.829
  br label %sw.epilog

sw.bb.831:                                        ; preds = %if.end
  %490 = load %struct._typeobject*, %struct._typeobject** @Assert_type, align 8
  %call832 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %490, %struct._object* null, %struct._object* null)
  store %struct._object* %call832, %struct._object** %result, align 8
  %491 = load %struct._object*, %struct._object** %result, align 8
  %tobool833 = icmp ne %struct._object* %491, null
  br i1 %tobool833, label %if.end.835, label %if.then.834

if.then.834:                                      ; preds = %sw.bb.831
  br label %failed

if.end.835:                                       ; preds = %sw.bb.831
  %492 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v836 = getelementptr inbounds %struct._stmt, %struct._stmt* %492, i32 0, i32 1
  %Assert = bitcast %union.anon.33* %v836 to %struct.anon.46*
  %test837 = getelementptr inbounds %struct.anon.46, %struct.anon.46* %Assert, i32 0, i32 0
  %493 = load %struct._expr*, %struct._expr** %test837, align 8
  %494 = bitcast %struct._expr* %493 to i8*
  %call838 = call %struct._object* @ast2obj_expr(i8* %494)
  store %struct._object* %call838, %struct._object** %value, align 8
  %495 = load %struct._object*, %struct._object** %value, align 8
  %tobool839 = icmp ne %struct._object* %495, null
  br i1 %tobool839, label %if.end.841, label %if.then.840

if.then.840:                                      ; preds = %if.end.835
  br label %failed

if.end.841:                                       ; preds = %if.end.835
  %496 = load %struct._object*, %struct._object** %result, align 8
  %497 = load %struct._object*, %struct._object** %value, align 8
  %call842 = call i32 @_PyObject_SetAttrId(%struct._object* %496, %struct._Py_Identifier* @PyId_test, %struct._object* %497)
  %cmp843 = icmp eq i32 %call842, -1
  br i1 %cmp843, label %if.then.844, label %if.end.845

if.then.844:                                      ; preds = %if.end.841
  br label %failed

if.end.845:                                       ; preds = %if.end.841
  br label %do.body.846

do.body.846:                                      ; preds = %if.end.845
  %498 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %498, %struct._object** %_py_decref_tmp847, align 8
  %499 = load %struct._object*, %struct._object** %_py_decref_tmp847, align 8
  %ob_refcnt848 = getelementptr inbounds %struct._object, %struct._object* %499, i32 0, i32 0
  %500 = load i64, i64* %ob_refcnt848, align 8
  %dec849 = add i64 %500, -1
  store i64 %dec849, i64* %ob_refcnt848, align 8
  %cmp850 = icmp ne i64 %dec849, 0
  br i1 %cmp850, label %if.then.851, label %if.else.852

if.then.851:                                      ; preds = %do.body.846
  br label %if.end.855

if.else.852:                                      ; preds = %do.body.846
  %501 = load %struct._object*, %struct._object** %_py_decref_tmp847, align 8
  %ob_type853 = getelementptr inbounds %struct._object, %struct._object* %501, i32 0, i32 1
  %502 = load %struct._typeobject*, %struct._typeobject** %ob_type853, align 8
  %tp_dealloc854 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %502, i32 0, i32 4
  %503 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc854, align 8
  %504 = load %struct._object*, %struct._object** %_py_decref_tmp847, align 8
  call void %503(%struct._object* %504)
  br label %if.end.855

if.end.855:                                       ; preds = %if.else.852, %if.then.851
  br label %do.end.856

do.end.856:                                       ; preds = %if.end.855
  %505 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v857 = getelementptr inbounds %struct._stmt, %struct._stmt* %505, i32 0, i32 1
  %Assert858 = bitcast %union.anon.33* %v857 to %struct.anon.46*
  %msg = getelementptr inbounds %struct.anon.46, %struct.anon.46* %Assert858, i32 0, i32 1
  %506 = load %struct._expr*, %struct._expr** %msg, align 8
  %507 = bitcast %struct._expr* %506 to i8*
  %call859 = call %struct._object* @ast2obj_expr(i8* %507)
  store %struct._object* %call859, %struct._object** %value, align 8
  %508 = load %struct._object*, %struct._object** %value, align 8
  %tobool860 = icmp ne %struct._object* %508, null
  br i1 %tobool860, label %if.end.862, label %if.then.861

if.then.861:                                      ; preds = %do.end.856
  br label %failed

if.end.862:                                       ; preds = %do.end.856
  %509 = load %struct._object*, %struct._object** %result, align 8
  %510 = load %struct._object*, %struct._object** %value, align 8
  %call863 = call i32 @_PyObject_SetAttrId(%struct._object* %509, %struct._Py_Identifier* @PyId_msg, %struct._object* %510)
  %cmp864 = icmp eq i32 %call863, -1
  br i1 %cmp864, label %if.then.865, label %if.end.866

if.then.865:                                      ; preds = %if.end.862
  br label %failed

if.end.866:                                       ; preds = %if.end.862
  br label %do.body.867

do.body.867:                                      ; preds = %if.end.866
  %511 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %511, %struct._object** %_py_decref_tmp868, align 8
  %512 = load %struct._object*, %struct._object** %_py_decref_tmp868, align 8
  %ob_refcnt869 = getelementptr inbounds %struct._object, %struct._object* %512, i32 0, i32 0
  %513 = load i64, i64* %ob_refcnt869, align 8
  %dec870 = add i64 %513, -1
  store i64 %dec870, i64* %ob_refcnt869, align 8
  %cmp871 = icmp ne i64 %dec870, 0
  br i1 %cmp871, label %if.then.872, label %if.else.873

if.then.872:                                      ; preds = %do.body.867
  br label %if.end.876

if.else.873:                                      ; preds = %do.body.867
  %514 = load %struct._object*, %struct._object** %_py_decref_tmp868, align 8
  %ob_type874 = getelementptr inbounds %struct._object, %struct._object* %514, i32 0, i32 1
  %515 = load %struct._typeobject*, %struct._typeobject** %ob_type874, align 8
  %tp_dealloc875 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %515, i32 0, i32 4
  %516 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc875, align 8
  %517 = load %struct._object*, %struct._object** %_py_decref_tmp868, align 8
  call void %516(%struct._object* %517)
  br label %if.end.876

if.end.876:                                       ; preds = %if.else.873, %if.then.872
  br label %do.end.877

do.end.877:                                       ; preds = %if.end.876
  br label %sw.epilog

sw.bb.878:                                        ; preds = %if.end
  %518 = load %struct._typeobject*, %struct._typeobject** @Import_type, align 8
  %call879 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %518, %struct._object* null, %struct._object* null)
  store %struct._object* %call879, %struct._object** %result, align 8
  %519 = load %struct._object*, %struct._object** %result, align 8
  %tobool880 = icmp ne %struct._object* %519, null
  br i1 %tobool880, label %if.end.882, label %if.then.881

if.then.881:                                      ; preds = %sw.bb.878
  br label %failed

if.end.882:                                       ; preds = %sw.bb.878
  %520 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v883 = getelementptr inbounds %struct._stmt, %struct._stmt* %520, i32 0, i32 1
  %Import = bitcast %union.anon.33* %v883 to %struct.anon.47*
  %names = getelementptr inbounds %struct.anon.47, %struct.anon.47* %Import, i32 0, i32 0
  %521 = load %struct.asdl_seq*, %struct.asdl_seq** %names, align 8
  %call884 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %521, %struct._object* (i8*)* @ast2obj_alias)
  store %struct._object* %call884, %struct._object** %value, align 8
  %522 = load %struct._object*, %struct._object** %value, align 8
  %tobool885 = icmp ne %struct._object* %522, null
  br i1 %tobool885, label %if.end.887, label %if.then.886

if.then.886:                                      ; preds = %if.end.882
  br label %failed

if.end.887:                                       ; preds = %if.end.882
  %523 = load %struct._object*, %struct._object** %result, align 8
  %524 = load %struct._object*, %struct._object** %value, align 8
  %call888 = call i32 @_PyObject_SetAttrId(%struct._object* %523, %struct._Py_Identifier* @PyId_names, %struct._object* %524)
  %cmp889 = icmp eq i32 %call888, -1
  br i1 %cmp889, label %if.then.890, label %if.end.891

if.then.890:                                      ; preds = %if.end.887
  br label %failed

if.end.891:                                       ; preds = %if.end.887
  br label %do.body.892

do.body.892:                                      ; preds = %if.end.891
  %525 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %525, %struct._object** %_py_decref_tmp893, align 8
  %526 = load %struct._object*, %struct._object** %_py_decref_tmp893, align 8
  %ob_refcnt894 = getelementptr inbounds %struct._object, %struct._object* %526, i32 0, i32 0
  %527 = load i64, i64* %ob_refcnt894, align 8
  %dec895 = add i64 %527, -1
  store i64 %dec895, i64* %ob_refcnt894, align 8
  %cmp896 = icmp ne i64 %dec895, 0
  br i1 %cmp896, label %if.then.897, label %if.else.898

if.then.897:                                      ; preds = %do.body.892
  br label %if.end.901

if.else.898:                                      ; preds = %do.body.892
  %528 = load %struct._object*, %struct._object** %_py_decref_tmp893, align 8
  %ob_type899 = getelementptr inbounds %struct._object, %struct._object* %528, i32 0, i32 1
  %529 = load %struct._typeobject*, %struct._typeobject** %ob_type899, align 8
  %tp_dealloc900 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %529, i32 0, i32 4
  %530 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc900, align 8
  %531 = load %struct._object*, %struct._object** %_py_decref_tmp893, align 8
  call void %530(%struct._object* %531)
  br label %if.end.901

if.end.901:                                       ; preds = %if.else.898, %if.then.897
  br label %do.end.902

do.end.902:                                       ; preds = %if.end.901
  br label %sw.epilog

sw.bb.903:                                        ; preds = %if.end
  %532 = load %struct._typeobject*, %struct._typeobject** @ImportFrom_type, align 8
  %call904 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %532, %struct._object* null, %struct._object* null)
  store %struct._object* %call904, %struct._object** %result, align 8
  %533 = load %struct._object*, %struct._object** %result, align 8
  %tobool905 = icmp ne %struct._object* %533, null
  br i1 %tobool905, label %if.end.907, label %if.then.906

if.then.906:                                      ; preds = %sw.bb.903
  br label %failed

if.end.907:                                       ; preds = %sw.bb.903
  %534 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v908 = getelementptr inbounds %struct._stmt, %struct._stmt* %534, i32 0, i32 1
  %ImportFrom = bitcast %union.anon.33* %v908 to %struct.anon.48*
  %module = getelementptr inbounds %struct.anon.48, %struct.anon.48* %ImportFrom, i32 0, i32 0
  %535 = load %struct._object*, %struct._object** %module, align 8
  %536 = bitcast %struct._object* %535 to i8*
  %call909 = call %struct._object* @ast2obj_object(i8* %536)
  store %struct._object* %call909, %struct._object** %value, align 8
  %537 = load %struct._object*, %struct._object** %value, align 8
  %tobool910 = icmp ne %struct._object* %537, null
  br i1 %tobool910, label %if.end.912, label %if.then.911

if.then.911:                                      ; preds = %if.end.907
  br label %failed

if.end.912:                                       ; preds = %if.end.907
  %538 = load %struct._object*, %struct._object** %result, align 8
  %539 = load %struct._object*, %struct._object** %value, align 8
  %call913 = call i32 @_PyObject_SetAttrId(%struct._object* %538, %struct._Py_Identifier* @PyId_module, %struct._object* %539)
  %cmp914 = icmp eq i32 %call913, -1
  br i1 %cmp914, label %if.then.915, label %if.end.916

if.then.915:                                      ; preds = %if.end.912
  br label %failed

if.end.916:                                       ; preds = %if.end.912
  br label %do.body.917

do.body.917:                                      ; preds = %if.end.916
  %540 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %540, %struct._object** %_py_decref_tmp918, align 8
  %541 = load %struct._object*, %struct._object** %_py_decref_tmp918, align 8
  %ob_refcnt919 = getelementptr inbounds %struct._object, %struct._object* %541, i32 0, i32 0
  %542 = load i64, i64* %ob_refcnt919, align 8
  %dec920 = add i64 %542, -1
  store i64 %dec920, i64* %ob_refcnt919, align 8
  %cmp921 = icmp ne i64 %dec920, 0
  br i1 %cmp921, label %if.then.922, label %if.else.923

if.then.922:                                      ; preds = %do.body.917
  br label %if.end.926

if.else.923:                                      ; preds = %do.body.917
  %543 = load %struct._object*, %struct._object** %_py_decref_tmp918, align 8
  %ob_type924 = getelementptr inbounds %struct._object, %struct._object* %543, i32 0, i32 1
  %544 = load %struct._typeobject*, %struct._typeobject** %ob_type924, align 8
  %tp_dealloc925 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %544, i32 0, i32 4
  %545 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc925, align 8
  %546 = load %struct._object*, %struct._object** %_py_decref_tmp918, align 8
  call void %545(%struct._object* %546)
  br label %if.end.926

if.end.926:                                       ; preds = %if.else.923, %if.then.922
  br label %do.end.927

do.end.927:                                       ; preds = %if.end.926
  %547 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v928 = getelementptr inbounds %struct._stmt, %struct._stmt* %547, i32 0, i32 1
  %ImportFrom929 = bitcast %union.anon.33* %v928 to %struct.anon.48*
  %names930 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %ImportFrom929, i32 0, i32 1
  %548 = load %struct.asdl_seq*, %struct.asdl_seq** %names930, align 8
  %call931 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %548, %struct._object* (i8*)* @ast2obj_alias)
  store %struct._object* %call931, %struct._object** %value, align 8
  %549 = load %struct._object*, %struct._object** %value, align 8
  %tobool932 = icmp ne %struct._object* %549, null
  br i1 %tobool932, label %if.end.934, label %if.then.933

if.then.933:                                      ; preds = %do.end.927
  br label %failed

if.end.934:                                       ; preds = %do.end.927
  %550 = load %struct._object*, %struct._object** %result, align 8
  %551 = load %struct._object*, %struct._object** %value, align 8
  %call935 = call i32 @_PyObject_SetAttrId(%struct._object* %550, %struct._Py_Identifier* @PyId_names, %struct._object* %551)
  %cmp936 = icmp eq i32 %call935, -1
  br i1 %cmp936, label %if.then.937, label %if.end.938

if.then.937:                                      ; preds = %if.end.934
  br label %failed

if.end.938:                                       ; preds = %if.end.934
  br label %do.body.939

do.body.939:                                      ; preds = %if.end.938
  %552 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %552, %struct._object** %_py_decref_tmp940, align 8
  %553 = load %struct._object*, %struct._object** %_py_decref_tmp940, align 8
  %ob_refcnt941 = getelementptr inbounds %struct._object, %struct._object* %553, i32 0, i32 0
  %554 = load i64, i64* %ob_refcnt941, align 8
  %dec942 = add i64 %554, -1
  store i64 %dec942, i64* %ob_refcnt941, align 8
  %cmp943 = icmp ne i64 %dec942, 0
  br i1 %cmp943, label %if.then.944, label %if.else.945

if.then.944:                                      ; preds = %do.body.939
  br label %if.end.948

if.else.945:                                      ; preds = %do.body.939
  %555 = load %struct._object*, %struct._object** %_py_decref_tmp940, align 8
  %ob_type946 = getelementptr inbounds %struct._object, %struct._object* %555, i32 0, i32 1
  %556 = load %struct._typeobject*, %struct._typeobject** %ob_type946, align 8
  %tp_dealloc947 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %556, i32 0, i32 4
  %557 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc947, align 8
  %558 = load %struct._object*, %struct._object** %_py_decref_tmp940, align 8
  call void %557(%struct._object* %558)
  br label %if.end.948

if.end.948:                                       ; preds = %if.else.945, %if.then.944
  br label %do.end.949

do.end.949:                                       ; preds = %if.end.948
  %559 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v950 = getelementptr inbounds %struct._stmt, %struct._stmt* %559, i32 0, i32 1
  %ImportFrom951 = bitcast %union.anon.33* %v950 to %struct.anon.48*
  %level = getelementptr inbounds %struct.anon.48, %struct.anon.48* %ImportFrom951, i32 0, i32 2
  %560 = load i32, i32* %level, align 4
  %conv = sext i32 %560 to i64
  %call952 = call %struct._object* @ast2obj_int(i64 %conv)
  store %struct._object* %call952, %struct._object** %value, align 8
  %561 = load %struct._object*, %struct._object** %value, align 8
  %tobool953 = icmp ne %struct._object* %561, null
  br i1 %tobool953, label %if.end.955, label %if.then.954

if.then.954:                                      ; preds = %do.end.949
  br label %failed

if.end.955:                                       ; preds = %do.end.949
  %562 = load %struct._object*, %struct._object** %result, align 8
  %563 = load %struct._object*, %struct._object** %value, align 8
  %call956 = call i32 @_PyObject_SetAttrId(%struct._object* %562, %struct._Py_Identifier* @PyId_level, %struct._object* %563)
  %cmp957 = icmp eq i32 %call956, -1
  br i1 %cmp957, label %if.then.959, label %if.end.960

if.then.959:                                      ; preds = %if.end.955
  br label %failed

if.end.960:                                       ; preds = %if.end.955
  br label %do.body.961

do.body.961:                                      ; preds = %if.end.960
  %564 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %564, %struct._object** %_py_decref_tmp962, align 8
  %565 = load %struct._object*, %struct._object** %_py_decref_tmp962, align 8
  %ob_refcnt963 = getelementptr inbounds %struct._object, %struct._object* %565, i32 0, i32 0
  %566 = load i64, i64* %ob_refcnt963, align 8
  %dec964 = add i64 %566, -1
  store i64 %dec964, i64* %ob_refcnt963, align 8
  %cmp965 = icmp ne i64 %dec964, 0
  br i1 %cmp965, label %if.then.967, label %if.else.968

if.then.967:                                      ; preds = %do.body.961
  br label %if.end.971

if.else.968:                                      ; preds = %do.body.961
  %567 = load %struct._object*, %struct._object** %_py_decref_tmp962, align 8
  %ob_type969 = getelementptr inbounds %struct._object, %struct._object* %567, i32 0, i32 1
  %568 = load %struct._typeobject*, %struct._typeobject** %ob_type969, align 8
  %tp_dealloc970 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %568, i32 0, i32 4
  %569 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc970, align 8
  %570 = load %struct._object*, %struct._object** %_py_decref_tmp962, align 8
  call void %569(%struct._object* %570)
  br label %if.end.971

if.end.971:                                       ; preds = %if.else.968, %if.then.967
  br label %do.end.972

do.end.972:                                       ; preds = %if.end.971
  br label %sw.epilog

sw.bb.973:                                        ; preds = %if.end
  %571 = load %struct._typeobject*, %struct._typeobject** @Global_type, align 8
  %call974 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %571, %struct._object* null, %struct._object* null)
  store %struct._object* %call974, %struct._object** %result, align 8
  %572 = load %struct._object*, %struct._object** %result, align 8
  %tobool975 = icmp ne %struct._object* %572, null
  br i1 %tobool975, label %if.end.977, label %if.then.976

if.then.976:                                      ; preds = %sw.bb.973
  br label %failed

if.end.977:                                       ; preds = %sw.bb.973
  %573 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v978 = getelementptr inbounds %struct._stmt, %struct._stmt* %573, i32 0, i32 1
  %Global = bitcast %union.anon.33* %v978 to %struct.anon.49*
  %names979 = getelementptr inbounds %struct.anon.49, %struct.anon.49* %Global, i32 0, i32 0
  %574 = load %struct.asdl_seq*, %struct.asdl_seq** %names979, align 8
  %call980 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %574, %struct._object* (i8*)* @ast2obj_object)
  store %struct._object* %call980, %struct._object** %value, align 8
  %575 = load %struct._object*, %struct._object** %value, align 8
  %tobool981 = icmp ne %struct._object* %575, null
  br i1 %tobool981, label %if.end.983, label %if.then.982

if.then.982:                                      ; preds = %if.end.977
  br label %failed

if.end.983:                                       ; preds = %if.end.977
  %576 = load %struct._object*, %struct._object** %result, align 8
  %577 = load %struct._object*, %struct._object** %value, align 8
  %call984 = call i32 @_PyObject_SetAttrId(%struct._object* %576, %struct._Py_Identifier* @PyId_names, %struct._object* %577)
  %cmp985 = icmp eq i32 %call984, -1
  br i1 %cmp985, label %if.then.987, label %if.end.988

if.then.987:                                      ; preds = %if.end.983
  br label %failed

if.end.988:                                       ; preds = %if.end.983
  br label %do.body.989

do.body.989:                                      ; preds = %if.end.988
  %578 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %578, %struct._object** %_py_decref_tmp990, align 8
  %579 = load %struct._object*, %struct._object** %_py_decref_tmp990, align 8
  %ob_refcnt991 = getelementptr inbounds %struct._object, %struct._object* %579, i32 0, i32 0
  %580 = load i64, i64* %ob_refcnt991, align 8
  %dec992 = add i64 %580, -1
  store i64 %dec992, i64* %ob_refcnt991, align 8
  %cmp993 = icmp ne i64 %dec992, 0
  br i1 %cmp993, label %if.then.995, label %if.else.996

if.then.995:                                      ; preds = %do.body.989
  br label %if.end.999

if.else.996:                                      ; preds = %do.body.989
  %581 = load %struct._object*, %struct._object** %_py_decref_tmp990, align 8
  %ob_type997 = getelementptr inbounds %struct._object, %struct._object* %581, i32 0, i32 1
  %582 = load %struct._typeobject*, %struct._typeobject** %ob_type997, align 8
  %tp_dealloc998 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %582, i32 0, i32 4
  %583 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc998, align 8
  %584 = load %struct._object*, %struct._object** %_py_decref_tmp990, align 8
  call void %583(%struct._object* %584)
  br label %if.end.999

if.end.999:                                       ; preds = %if.else.996, %if.then.995
  br label %do.end.1000

do.end.1000:                                      ; preds = %if.end.999
  br label %sw.epilog

sw.bb.1001:                                       ; preds = %if.end
  %585 = load %struct._typeobject*, %struct._typeobject** @Nonlocal_type, align 8
  %call1002 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %585, %struct._object* null, %struct._object* null)
  store %struct._object* %call1002, %struct._object** %result, align 8
  %586 = load %struct._object*, %struct._object** %result, align 8
  %tobool1003 = icmp ne %struct._object* %586, null
  br i1 %tobool1003, label %if.end.1005, label %if.then.1004

if.then.1004:                                     ; preds = %sw.bb.1001
  br label %failed

if.end.1005:                                      ; preds = %sw.bb.1001
  %587 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v1006 = getelementptr inbounds %struct._stmt, %struct._stmt* %587, i32 0, i32 1
  %Nonlocal = bitcast %union.anon.33* %v1006 to %struct.anon.50*
  %names1007 = getelementptr inbounds %struct.anon.50, %struct.anon.50* %Nonlocal, i32 0, i32 0
  %588 = load %struct.asdl_seq*, %struct.asdl_seq** %names1007, align 8
  %call1008 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %588, %struct._object* (i8*)* @ast2obj_object)
  store %struct._object* %call1008, %struct._object** %value, align 8
  %589 = load %struct._object*, %struct._object** %value, align 8
  %tobool1009 = icmp ne %struct._object* %589, null
  br i1 %tobool1009, label %if.end.1011, label %if.then.1010

if.then.1010:                                     ; preds = %if.end.1005
  br label %failed

if.end.1011:                                      ; preds = %if.end.1005
  %590 = load %struct._object*, %struct._object** %result, align 8
  %591 = load %struct._object*, %struct._object** %value, align 8
  %call1012 = call i32 @_PyObject_SetAttrId(%struct._object* %590, %struct._Py_Identifier* @PyId_names, %struct._object* %591)
  %cmp1013 = icmp eq i32 %call1012, -1
  br i1 %cmp1013, label %if.then.1015, label %if.end.1016

if.then.1015:                                     ; preds = %if.end.1011
  br label %failed

if.end.1016:                                      ; preds = %if.end.1011
  br label %do.body.1017

do.body.1017:                                     ; preds = %if.end.1016
  %592 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %592, %struct._object** %_py_decref_tmp1018, align 8
  %593 = load %struct._object*, %struct._object** %_py_decref_tmp1018, align 8
  %ob_refcnt1019 = getelementptr inbounds %struct._object, %struct._object* %593, i32 0, i32 0
  %594 = load i64, i64* %ob_refcnt1019, align 8
  %dec1020 = add i64 %594, -1
  store i64 %dec1020, i64* %ob_refcnt1019, align 8
  %cmp1021 = icmp ne i64 %dec1020, 0
  br i1 %cmp1021, label %if.then.1023, label %if.else.1024

if.then.1023:                                     ; preds = %do.body.1017
  br label %if.end.1027

if.else.1024:                                     ; preds = %do.body.1017
  %595 = load %struct._object*, %struct._object** %_py_decref_tmp1018, align 8
  %ob_type1025 = getelementptr inbounds %struct._object, %struct._object* %595, i32 0, i32 1
  %596 = load %struct._typeobject*, %struct._typeobject** %ob_type1025, align 8
  %tp_dealloc1026 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %596, i32 0, i32 4
  %597 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1026, align 8
  %598 = load %struct._object*, %struct._object** %_py_decref_tmp1018, align 8
  call void %597(%struct._object* %598)
  br label %if.end.1027

if.end.1027:                                      ; preds = %if.else.1024, %if.then.1023
  br label %do.end.1028

do.end.1028:                                      ; preds = %if.end.1027
  br label %sw.epilog

sw.bb.1029:                                       ; preds = %if.end
  %599 = load %struct._typeobject*, %struct._typeobject** @Expr_type, align 8
  %call1030 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %599, %struct._object* null, %struct._object* null)
  store %struct._object* %call1030, %struct._object** %result, align 8
  %600 = load %struct._object*, %struct._object** %result, align 8
  %tobool1031 = icmp ne %struct._object* %600, null
  br i1 %tobool1031, label %if.end.1033, label %if.then.1032

if.then.1032:                                     ; preds = %sw.bb.1029
  br label %failed

if.end.1033:                                      ; preds = %sw.bb.1029
  %601 = load %struct._stmt*, %struct._stmt** %o, align 8
  %v1034 = getelementptr inbounds %struct._stmt, %struct._stmt* %601, i32 0, i32 1
  %Expr = bitcast %union.anon.33* %v1034 to %struct.anon.51*
  %value1035 = getelementptr inbounds %struct.anon.51, %struct.anon.51* %Expr, i32 0, i32 0
  %602 = load %struct._expr*, %struct._expr** %value1035, align 8
  %603 = bitcast %struct._expr* %602 to i8*
  %call1036 = call %struct._object* @ast2obj_expr(i8* %603)
  store %struct._object* %call1036, %struct._object** %value, align 8
  %604 = load %struct._object*, %struct._object** %value, align 8
  %tobool1037 = icmp ne %struct._object* %604, null
  br i1 %tobool1037, label %if.end.1039, label %if.then.1038

if.then.1038:                                     ; preds = %if.end.1033
  br label %failed

if.end.1039:                                      ; preds = %if.end.1033
  %605 = load %struct._object*, %struct._object** %result, align 8
  %606 = load %struct._object*, %struct._object** %value, align 8
  %call1040 = call i32 @_PyObject_SetAttrId(%struct._object* %605, %struct._Py_Identifier* @PyId_value, %struct._object* %606)
  %cmp1041 = icmp eq i32 %call1040, -1
  br i1 %cmp1041, label %if.then.1043, label %if.end.1044

if.then.1043:                                     ; preds = %if.end.1039
  br label %failed

if.end.1044:                                      ; preds = %if.end.1039
  br label %do.body.1045

do.body.1045:                                     ; preds = %if.end.1044
  %607 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %607, %struct._object** %_py_decref_tmp1046, align 8
  %608 = load %struct._object*, %struct._object** %_py_decref_tmp1046, align 8
  %ob_refcnt1047 = getelementptr inbounds %struct._object, %struct._object* %608, i32 0, i32 0
  %609 = load i64, i64* %ob_refcnt1047, align 8
  %dec1048 = add i64 %609, -1
  store i64 %dec1048, i64* %ob_refcnt1047, align 8
  %cmp1049 = icmp ne i64 %dec1048, 0
  br i1 %cmp1049, label %if.then.1051, label %if.else.1052

if.then.1051:                                     ; preds = %do.body.1045
  br label %if.end.1055

if.else.1052:                                     ; preds = %do.body.1045
  %610 = load %struct._object*, %struct._object** %_py_decref_tmp1046, align 8
  %ob_type1053 = getelementptr inbounds %struct._object, %struct._object* %610, i32 0, i32 1
  %611 = load %struct._typeobject*, %struct._typeobject** %ob_type1053, align 8
  %tp_dealloc1054 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %611, i32 0, i32 4
  %612 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1054, align 8
  %613 = load %struct._object*, %struct._object** %_py_decref_tmp1046, align 8
  call void %612(%struct._object* %613)
  br label %if.end.1055

if.end.1055:                                      ; preds = %if.else.1052, %if.then.1051
  br label %do.end.1056

do.end.1056:                                      ; preds = %if.end.1055
  br label %sw.epilog

sw.bb.1057:                                       ; preds = %if.end
  %614 = load %struct._typeobject*, %struct._typeobject** @Pass_type, align 8
  %call1058 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %614, %struct._object* null, %struct._object* null)
  store %struct._object* %call1058, %struct._object** %result, align 8
  %615 = load %struct._object*, %struct._object** %result, align 8
  %tobool1059 = icmp ne %struct._object* %615, null
  br i1 %tobool1059, label %if.end.1061, label %if.then.1060

if.then.1060:                                     ; preds = %sw.bb.1057
  br label %failed

if.end.1061:                                      ; preds = %sw.bb.1057
  br label %sw.epilog

sw.bb.1062:                                       ; preds = %if.end
  %616 = load %struct._typeobject*, %struct._typeobject** @Break_type, align 8
  %call1063 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %616, %struct._object* null, %struct._object* null)
  store %struct._object* %call1063, %struct._object** %result, align 8
  %617 = load %struct._object*, %struct._object** %result, align 8
  %tobool1064 = icmp ne %struct._object* %617, null
  br i1 %tobool1064, label %if.end.1066, label %if.then.1065

if.then.1065:                                     ; preds = %sw.bb.1062
  br label %failed

if.end.1066:                                      ; preds = %sw.bb.1062
  br label %sw.epilog

sw.bb.1067:                                       ; preds = %if.end
  %618 = load %struct._typeobject*, %struct._typeobject** @Continue_type, align 8
  %call1068 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %618, %struct._object* null, %struct._object* null)
  store %struct._object* %call1068, %struct._object** %result, align 8
  %619 = load %struct._object*, %struct._object** %result, align 8
  %tobool1069 = icmp ne %struct._object* %619, null
  br i1 %tobool1069, label %if.end.1071, label %if.then.1070

if.then.1070:                                     ; preds = %sw.bb.1067
  br label %failed

if.end.1071:                                      ; preds = %sw.bb.1067
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %if.end.1071, %if.end.1066, %if.end.1061, %do.end.1056, %do.end.1028, %do.end.1000, %do.end.972, %do.end.902, %do.end.877, %do.end.830, %do.end.740, %do.end.694, %do.end.647, %do.end.577, %do.end.508, %do.end.418, %do.end.350, %do.end.302, %do.end.277, %do.end.251, %do.end.97
  %620 = load %struct._stmt*, %struct._stmt** %o, align 8
  %lineno = getelementptr inbounds %struct._stmt, %struct._stmt* %620, i32 0, i32 2
  %621 = load i32, i32* %lineno, align 4
  %conv1072 = sext i32 %621 to i64
  %call1073 = call %struct._object* @ast2obj_int(i64 %conv1072)
  store %struct._object* %call1073, %struct._object** %value, align 8
  %622 = load %struct._object*, %struct._object** %value, align 8
  %tobool1074 = icmp ne %struct._object* %622, null
  br i1 %tobool1074, label %if.end.1076, label %if.then.1075

if.then.1075:                                     ; preds = %sw.epilog
  br label %failed

if.end.1076:                                      ; preds = %sw.epilog
  %623 = load %struct._object*, %struct._object** %result, align 8
  %624 = load %struct._object*, %struct._object** %value, align 8
  %call1077 = call i32 @_PyObject_SetAttrId(%struct._object* %623, %struct._Py_Identifier* @PyId_lineno, %struct._object* %624)
  %cmp1078 = icmp slt i32 %call1077, 0
  br i1 %cmp1078, label %if.then.1080, label %if.end.1081

if.then.1080:                                     ; preds = %if.end.1076
  br label %failed

if.end.1081:                                      ; preds = %if.end.1076
  br label %do.body.1082

do.body.1082:                                     ; preds = %if.end.1081
  %625 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %625, %struct._object** %_py_decref_tmp1083, align 8
  %626 = load %struct._object*, %struct._object** %_py_decref_tmp1083, align 8
  %ob_refcnt1084 = getelementptr inbounds %struct._object, %struct._object* %626, i32 0, i32 0
  %627 = load i64, i64* %ob_refcnt1084, align 8
  %dec1085 = add i64 %627, -1
  store i64 %dec1085, i64* %ob_refcnt1084, align 8
  %cmp1086 = icmp ne i64 %dec1085, 0
  br i1 %cmp1086, label %if.then.1088, label %if.else.1089

if.then.1088:                                     ; preds = %do.body.1082
  br label %if.end.1092

if.else.1089:                                     ; preds = %do.body.1082
  %628 = load %struct._object*, %struct._object** %_py_decref_tmp1083, align 8
  %ob_type1090 = getelementptr inbounds %struct._object, %struct._object* %628, i32 0, i32 1
  %629 = load %struct._typeobject*, %struct._typeobject** %ob_type1090, align 8
  %tp_dealloc1091 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %629, i32 0, i32 4
  %630 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1091, align 8
  %631 = load %struct._object*, %struct._object** %_py_decref_tmp1083, align 8
  call void %630(%struct._object* %631)
  br label %if.end.1092

if.end.1092:                                      ; preds = %if.else.1089, %if.then.1088
  br label %do.end.1093

do.end.1093:                                      ; preds = %if.end.1092
  %632 = load %struct._stmt*, %struct._stmt** %o, align 8
  %col_offset = getelementptr inbounds %struct._stmt, %struct._stmt* %632, i32 0, i32 3
  %633 = load i32, i32* %col_offset, align 4
  %conv1094 = sext i32 %633 to i64
  %call1095 = call %struct._object* @ast2obj_int(i64 %conv1094)
  store %struct._object* %call1095, %struct._object** %value, align 8
  %634 = load %struct._object*, %struct._object** %value, align 8
  %tobool1096 = icmp ne %struct._object* %634, null
  br i1 %tobool1096, label %if.end.1098, label %if.then.1097

if.then.1097:                                     ; preds = %do.end.1093
  br label %failed

if.end.1098:                                      ; preds = %do.end.1093
  %635 = load %struct._object*, %struct._object** %result, align 8
  %636 = load %struct._object*, %struct._object** %value, align 8
  %call1099 = call i32 @_PyObject_SetAttrId(%struct._object* %635, %struct._Py_Identifier* @PyId_col_offset, %struct._object* %636)
  %cmp1100 = icmp slt i32 %call1099, 0
  br i1 %cmp1100, label %if.then.1102, label %if.end.1103

if.then.1102:                                     ; preds = %if.end.1098
  br label %failed

if.end.1103:                                      ; preds = %if.end.1098
  br label %do.body.1104

do.body.1104:                                     ; preds = %if.end.1103
  %637 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %637, %struct._object** %_py_decref_tmp1105, align 8
  %638 = load %struct._object*, %struct._object** %_py_decref_tmp1105, align 8
  %ob_refcnt1106 = getelementptr inbounds %struct._object, %struct._object* %638, i32 0, i32 0
  %639 = load i64, i64* %ob_refcnt1106, align 8
  %dec1107 = add i64 %639, -1
  store i64 %dec1107, i64* %ob_refcnt1106, align 8
  %cmp1108 = icmp ne i64 %dec1107, 0
  br i1 %cmp1108, label %if.then.1110, label %if.else.1111

if.then.1110:                                     ; preds = %do.body.1104
  br label %if.end.1114

if.else.1111:                                     ; preds = %do.body.1104
  %640 = load %struct._object*, %struct._object** %_py_decref_tmp1105, align 8
  %ob_type1112 = getelementptr inbounds %struct._object, %struct._object* %640, i32 0, i32 1
  %641 = load %struct._typeobject*, %struct._typeobject** %ob_type1112, align 8
  %tp_dealloc1113 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %641, i32 0, i32 4
  %642 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1113, align 8
  %643 = load %struct._object*, %struct._object** %_py_decref_tmp1105, align 8
  call void %642(%struct._object* %643)
  br label %if.end.1114

if.end.1114:                                      ; preds = %if.else.1111, %if.then.1110
  br label %do.end.1115

do.end.1115:                                      ; preds = %if.end.1114
  %644 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %644, %struct._object** %retval
  br label %return

failed:                                           ; preds = %if.then.1102, %if.then.1097, %if.then.1080, %if.then.1075, %if.then.1070, %if.then.1065, %if.then.1060, %if.then.1043, %if.then.1038, %if.then.1032, %if.then.1015, %if.then.1010, %if.then.1004, %if.then.987, %if.then.982, %if.then.976, %if.then.959, %if.then.954, %if.then.937, %if.then.933, %if.then.915, %if.then.911, %if.then.906, %if.then.890, %if.then.886, %if.then.881, %if.then.865, %if.then.861, %if.then.844, %if.then.840, %if.then.834, %if.then.818, %if.then.814, %if.then.797, %if.then.793, %if.then.775, %if.then.771, %if.then.754, %if.then.750, %if.then.744, %if.then.728, %if.then.724, %if.then.707, %if.then.703, %if.then.698, %if.then.682, %if.then.678, %if.then.660, %if.then.656, %if.then.651, %if.then.635, %if.then.631, %if.then.613, %if.then.609, %if.then.591, %if.then.587, %if.then.581, %if.then.565, %if.then.561, %if.then.543, %if.then.539, %if.then.521, %if.then.517, %if.then.512, %if.then.496, %if.then.492, %if.then.475, %if.then.471, %if.then.453, %if.then.449, %if.then.432, %if.then.428, %if.then.422, %if.then.406, %if.then.402, %if.then.384, %if.then.380, %if.then.363, %if.then.359, %if.then.354, %if.then.338, %if.then.334, %if.then.316, %if.then.312, %if.then.306, %if.then.290, %if.then.286, %if.then.281, %if.then.265, %if.then.261, %if.then.255, %if.then.239, %if.then.235, %if.then.217, %if.then.213, %if.then.195, %if.then.191, %if.then.174, %if.then.170, %if.then.153, %if.then.149, %if.then.132, %if.then.128, %if.then.111, %if.then.107, %if.then.101, %if.then.85, %if.then.81, %if.then.64, %if.then.60, %if.then.43, %if.then.39, %if.then.22, %if.then.18, %if.then.9, %if.then.6, %if.then.2
  br label %do.body.1116

do.body.1116:                                     ; preds = %failed
  %645 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %645, %struct._object** %_py_xdecref_tmp, align 8
  %646 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp1117 = icmp ne %struct._object* %646, null
  br i1 %cmp1117, label %if.then.1119, label %if.end.1132

if.then.1119:                                     ; preds = %do.body.1116
  br label %do.body.1120

do.body.1120:                                     ; preds = %if.then.1119
  %647 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %647, %struct._object** %_py_decref_tmp1121, align 8
  %648 = load %struct._object*, %struct._object** %_py_decref_tmp1121, align 8
  %ob_refcnt1122 = getelementptr inbounds %struct._object, %struct._object* %648, i32 0, i32 0
  %649 = load i64, i64* %ob_refcnt1122, align 8
  %dec1123 = add i64 %649, -1
  store i64 %dec1123, i64* %ob_refcnt1122, align 8
  %cmp1124 = icmp ne i64 %dec1123, 0
  br i1 %cmp1124, label %if.then.1126, label %if.else.1127

if.then.1126:                                     ; preds = %do.body.1120
  br label %if.end.1130

if.else.1127:                                     ; preds = %do.body.1120
  %650 = load %struct._object*, %struct._object** %_py_decref_tmp1121, align 8
  %ob_type1128 = getelementptr inbounds %struct._object, %struct._object* %650, i32 0, i32 1
  %651 = load %struct._typeobject*, %struct._typeobject** %ob_type1128, align 8
  %tp_dealloc1129 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %651, i32 0, i32 4
  %652 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1129, align 8
  %653 = load %struct._object*, %struct._object** %_py_decref_tmp1121, align 8
  call void %652(%struct._object* %653)
  br label %if.end.1130

if.end.1130:                                      ; preds = %if.else.1127, %if.then.1126
  br label %do.end.1131

do.end.1131:                                      ; preds = %if.end.1130
  br label %if.end.1132

if.end.1132:                                      ; preds = %do.end.1131, %do.body.1116
  br label %do.end.1133

do.end.1133:                                      ; preds = %if.end.1132
  br label %do.body.1134

do.body.1134:                                     ; preds = %do.end.1133
  %654 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %654, %struct._object** %_py_xdecref_tmp1135, align 8
  %655 = load %struct._object*, %struct._object** %_py_xdecref_tmp1135, align 8
  %cmp1136 = icmp ne %struct._object* %655, null
  br i1 %cmp1136, label %if.then.1138, label %if.end.1151

if.then.1138:                                     ; preds = %do.body.1134
  br label %do.body.1139

do.body.1139:                                     ; preds = %if.then.1138
  %656 = load %struct._object*, %struct._object** %_py_xdecref_tmp1135, align 8
  store %struct._object* %656, %struct._object** %_py_decref_tmp1140, align 8
  %657 = load %struct._object*, %struct._object** %_py_decref_tmp1140, align 8
  %ob_refcnt1141 = getelementptr inbounds %struct._object, %struct._object* %657, i32 0, i32 0
  %658 = load i64, i64* %ob_refcnt1141, align 8
  %dec1142 = add i64 %658, -1
  store i64 %dec1142, i64* %ob_refcnt1141, align 8
  %cmp1143 = icmp ne i64 %dec1142, 0
  br i1 %cmp1143, label %if.then.1145, label %if.else.1146

if.then.1145:                                     ; preds = %do.body.1139
  br label %if.end.1149

if.else.1146:                                     ; preds = %do.body.1139
  %659 = load %struct._object*, %struct._object** %_py_decref_tmp1140, align 8
  %ob_type1147 = getelementptr inbounds %struct._object, %struct._object* %659, i32 0, i32 1
  %660 = load %struct._typeobject*, %struct._typeobject** %ob_type1147, align 8
  %tp_dealloc1148 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %660, i32 0, i32 4
  %661 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1148, align 8
  %662 = load %struct._object*, %struct._object** %_py_decref_tmp1140, align 8
  call void %661(%struct._object* %662)
  br label %if.end.1149

if.end.1149:                                      ; preds = %if.else.1146, %if.then.1145
  br label %do.end.1150

do.end.1150:                                      ; preds = %if.end.1149
  br label %if.end.1151

if.end.1151:                                      ; preds = %do.end.1150, %do.body.1134
  br label %do.end.1152

do.end.1152:                                      ; preds = %if.end.1151
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.1152, %do.end.1115, %if.then
  %663 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %663
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_expr(i8* %_o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %_o.addr = alloca i8*, align 8
  %o = alloca %struct._expr*, align 8
  %result = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp25 = alloca %struct._object*, align 8
  %_py_decref_tmp50 = alloca %struct._object*, align 8
  %_py_decref_tmp72 = alloca %struct._object*, align 8
  %_py_decref_tmp93 = alloca %struct._object*, align 8
  %_py_decref_tmp119 = alloca %struct._object*, align 8
  %_py_decref_tmp140 = alloca %struct._object*, align 8
  %_py_decref_tmp165 = alloca %struct._object*, align 8
  %_py_decref_tmp186 = alloca %struct._object*, align 8
  %_py_decref_tmp211 = alloca %struct._object*, align 8
  %_py_decref_tmp233 = alloca %struct._object*, align 8
  %_py_decref_tmp254 = alloca %struct._object*, align 8
  %_py_decref_tmp279 = alloca %struct._object*, align 8
  %_py_decref_tmp301 = alloca %struct._object*, align 8
  %_py_decref_tmp326 = alloca %struct._object*, align 8
  %_py_decref_tmp351 = alloca %struct._object*, align 8
  %_py_decref_tmp372 = alloca %struct._object*, align 8
  %_py_decref_tmp398 = alloca %struct._object*, align 8
  %_py_decref_tmp420 = alloca %struct._object*, align 8
  %_py_decref_tmp445 = alloca %struct._object*, align 8
  %_py_decref_tmp467 = alloca %struct._object*, align 8
  %_py_decref_tmp489 = alloca %struct._object*, align 8
  %_py_decref_tmp515 = alloca %struct._object*, align 8
  %_py_decref_tmp537 = alloca %struct._object*, align 8
  %_py_decref_tmp563 = alloca %struct._object*, align 8
  %_py_decref_tmp589 = alloca %struct._object*, align 8
  %_py_decref_tmp615 = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %_py_decref_tmp650 = alloca %struct._object*, align 8
  %_py_decref_tmp671 = alloca %struct._object*, align 8
  %_py_decref_tmp696 = alloca %struct._object*, align 8
  %_py_decref_tmp718 = alloca %struct._object*, align 8
  %_py_decref_tmp739 = alloca %struct._object*, align 8
  %_py_decref_tmp760 = alloca %struct._object*, align 8
  %_py_decref_tmp781 = alloca %struct._object*, align 8
  %_py_decref_tmp807 = alloca %struct._object*, align 8
  %_py_decref_tmp832 = alloca %struct._object*, align 8
  %_py_decref_tmp858 = alloca %struct._object*, align 8
  %_py_decref_tmp884 = alloca %struct._object*, align 8
  %_py_decref_tmp915 = alloca %struct._object*, align 8
  %_py_decref_tmp936 = alloca %struct._object*, align 8
  %_py_decref_tmp957 = alloca %struct._object*, align 8
  %_py_decref_tmp983 = alloca %struct._object*, align 8
  %_py_decref_tmp1004 = alloca %struct._object*, align 8
  %_py_decref_tmp1026 = alloca %struct._object*, align 8
  %_py_decref_tmp1052 = alloca %struct._object*, align 8
  %_py_decref_tmp1074 = alloca %struct._object*, align 8
  %_py_decref_tmp1099 = alloca %struct._object*, align 8
  %_py_decref_tmp1121 = alloca %struct._object*, align 8
  %_py_decref_tmp1147 = alloca %struct._object*, align 8
  %_py_decref_tmp1169 = alloca %struct._object*, align 8
  %_py_decref_tmp1195 = alloca %struct._object*, align 8
  %_py_decref_tmp1217 = alloca %struct._object*, align 8
  %_py_decref_tmp1237 = alloca %struct._object*, align 8
  %_py_decref_tmp1259 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp1275 = alloca %struct._object*, align 8
  %_py_xdecref_tmp1289 = alloca %struct._object*, align 8
  %_py_decref_tmp1294 = alloca %struct._object*, align 8
  store i8* %_o, i8** %_o.addr, align 8
  %0 = load i8*, i8** %_o.addr, align 8
  %1 = bitcast i8* %0 to %struct._expr*
  store %struct._expr* %1, %struct._expr** %o, align 8
  store %struct._object* null, %struct._object** %result, align 8
  store %struct._object* null, %struct._object** %value, align 8
  %2 = load %struct._expr*, %struct._expr** %o, align 8
  %tobool = icmp ne %struct._expr* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._expr*, %struct._expr** %o, align 8
  %kind = getelementptr inbounds %struct._expr, %struct._expr* %4, i32 0, i32 0
  %5 = load i32, i32* %kind, align 4
  switch i32 %5, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.35
    i32 3, label %sw.bb.103
    i32 4, label %sw.bb.150
    i32 5, label %sw.bb.196
    i32 6, label %sw.bb.264
    i32 7, label %sw.bb.311
    i32 8, label %sw.bb.336
    i32 9, label %sw.bb.382
    i32 10, label %sw.bb.430
    i32 11, label %sw.bb.499
    i32 12, label %sw.bb.547
    i32 13, label %sw.bb.573
    i32 14, label %sw.bb.599
    i32 15, label %sw.bb.681
    i32 16, label %sw.bb.791
    i32 17, label %sw.bb.817
    i32 18, label %sw.bb.842
    i32 19, label %sw.bb.868
    i32 20, label %sw.bb.894
    i32 21, label %sw.bb.899
    i32 22, label %sw.bb.967
    i32 23, label %sw.bb.1036
    i32 24, label %sw.bb.1084
    i32 25, label %sw.bb.1131
    i32 26, label %sw.bb.1179
  ]

sw.bb:                                            ; preds = %if.end
  %6 = load %struct._typeobject*, %struct._typeobject** @BoolOp_type, align 8
  %call = call %struct._object* @PyType_GenericNew(%struct._typeobject* %6, %struct._object* null, %struct._object* null)
  store %struct._object* %call, %struct._object** %result, align 8
  %7 = load %struct._object*, %struct._object** %result, align 8
  %tobool1 = icmp ne %struct._object* %7, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %sw.bb
  br label %failed

if.end.3:                                         ; preds = %sw.bb
  %8 = load %struct._expr*, %struct._expr** %o, align 8
  %v = getelementptr inbounds %struct._expr, %struct._expr* %8, i32 0, i32 1
  %BoolOp = bitcast %union.anon.2* %v to %struct.anon.3*
  %op = getelementptr inbounds %struct.anon.3, %struct.anon.3* %BoolOp, i32 0, i32 0
  %9 = load i32, i32* %op, align 4
  %call4 = call %struct._object* @ast2obj_boolop(i32 %9)
  store %struct._object* %call4, %struct._object** %value, align 8
  %10 = load %struct._object*, %struct._object** %value, align 8
  %tobool5 = icmp ne %struct._object* %10, null
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %failed

if.end.7:                                         ; preds = %if.end.3
  %11 = load %struct._object*, %struct._object** %result, align 8
  %12 = load %struct._object*, %struct._object** %value, align 8
  %call8 = call i32 @_PyObject_SetAttrId(%struct._object* %11, %struct._Py_Identifier* @PyId_op, %struct._object* %12)
  %cmp = icmp eq i32 %call8, -1
  br i1 %cmp, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.7
  br label %failed

if.end.10:                                        ; preds = %if.end.7
  br label %do.body

do.body:                                          ; preds = %if.end.10
  %13 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0
  %15 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %15, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %18(%struct._object* %19)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  %20 = load %struct._expr*, %struct._expr** %o, align 8
  %v14 = getelementptr inbounds %struct._expr, %struct._expr* %20, i32 0, i32 1
  %BoolOp15 = bitcast %union.anon.2* %v14 to %struct.anon.3*
  %values = getelementptr inbounds %struct.anon.3, %struct.anon.3* %BoolOp15, i32 0, i32 1
  %21 = load %struct.asdl_seq*, %struct.asdl_seq** %values, align 8
  %call16 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %21, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call16, %struct._object** %value, align 8
  %22 = load %struct._object*, %struct._object** %value, align 8
  %tobool17 = icmp ne %struct._object* %22, null
  br i1 %tobool17, label %if.end.19, label %if.then.18

if.then.18:                                       ; preds = %do.end
  br label %failed

if.end.19:                                        ; preds = %do.end
  %23 = load %struct._object*, %struct._object** %result, align 8
  %24 = load %struct._object*, %struct._object** %value, align 8
  %call20 = call i32 @_PyObject_SetAttrId(%struct._object* %23, %struct._Py_Identifier* @PyId_values, %struct._object* %24)
  %cmp21 = icmp eq i32 %call20, -1
  br i1 %cmp21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.19
  br label %failed

if.end.23:                                        ; preds = %if.end.19
  br label %do.body.24

do.body.24:                                       ; preds = %if.end.23
  %25 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %25, %struct._object** %_py_decref_tmp25, align 8
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0
  %27 = load i64, i64* %ob_refcnt26, align 8
  %dec27 = add i64 %27, -1
  store i64 %dec27, i64* %ob_refcnt26, align 8
  %cmp28 = icmp ne i64 %dec27, 0
  br i1 %cmp28, label %if.then.29, label %if.else.30

if.then.29:                                       ; preds = %do.body.24
  br label %if.end.33

if.else.30:                                       ; preds = %do.body.24
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8
  %tp_dealloc32 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc32, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8
  call void %30(%struct._object* %31)
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.30, %if.then.29
  br label %do.end.34

do.end.34:                                        ; preds = %if.end.33
  br label %sw.epilog

sw.bb.35:                                         ; preds = %if.end
  %32 = load %struct._typeobject*, %struct._typeobject** @BinOp_type, align 8
  %call36 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %32, %struct._object* null, %struct._object* null)
  store %struct._object* %call36, %struct._object** %result, align 8
  %33 = load %struct._object*, %struct._object** %result, align 8
  %tobool37 = icmp ne %struct._object* %33, null
  br i1 %tobool37, label %if.end.39, label %if.then.38

if.then.38:                                       ; preds = %sw.bb.35
  br label %failed

if.end.39:                                        ; preds = %sw.bb.35
  %34 = load %struct._expr*, %struct._expr** %o, align 8
  %v40 = getelementptr inbounds %struct._expr, %struct._expr* %34, i32 0, i32 1
  %BinOp = bitcast %union.anon.2* %v40 to %struct.anon.4*
  %left = getelementptr inbounds %struct.anon.4, %struct.anon.4* %BinOp, i32 0, i32 0
  %35 = load %struct._expr*, %struct._expr** %left, align 8
  %36 = bitcast %struct._expr* %35 to i8*
  %call41 = call %struct._object* @ast2obj_expr(i8* %36)
  store %struct._object* %call41, %struct._object** %value, align 8
  %37 = load %struct._object*, %struct._object** %value, align 8
  %tobool42 = icmp ne %struct._object* %37, null
  br i1 %tobool42, label %if.end.44, label %if.then.43

if.then.43:                                       ; preds = %if.end.39
  br label %failed

if.end.44:                                        ; preds = %if.end.39
  %38 = load %struct._object*, %struct._object** %result, align 8
  %39 = load %struct._object*, %struct._object** %value, align 8
  %call45 = call i32 @_PyObject_SetAttrId(%struct._object* %38, %struct._Py_Identifier* @PyId_left, %struct._object* %39)
  %cmp46 = icmp eq i32 %call45, -1
  br i1 %cmp46, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %if.end.44
  br label %failed

if.end.48:                                        ; preds = %if.end.44
  br label %do.body.49

do.body.49:                                       ; preds = %if.end.48
  %40 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %40, %struct._object** %_py_decref_tmp50, align 8
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0
  %42 = load i64, i64* %ob_refcnt51, align 8
  %dec52 = add i64 %42, -1
  store i64 %dec52, i64* %ob_refcnt51, align 8
  %cmp53 = icmp ne i64 %dec52, 0
  br i1 %cmp53, label %if.then.54, label %if.else.55

if.then.54:                                       ; preds = %do.body.49
  br label %if.end.58

if.else.55:                                       ; preds = %do.body.49
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8
  %tp_dealloc57 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc57, align 8
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8
  call void %45(%struct._object* %46)
  br label %if.end.58

if.end.58:                                        ; preds = %if.else.55, %if.then.54
  br label %do.end.59

do.end.59:                                        ; preds = %if.end.58
  %47 = load %struct._expr*, %struct._expr** %o, align 8
  %v60 = getelementptr inbounds %struct._expr, %struct._expr* %47, i32 0, i32 1
  %BinOp61 = bitcast %union.anon.2* %v60 to %struct.anon.4*
  %op62 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %BinOp61, i32 0, i32 1
  %48 = load i32, i32* %op62, align 4
  %call63 = call %struct._object* @ast2obj_operator(i32 %48)
  store %struct._object* %call63, %struct._object** %value, align 8
  %49 = load %struct._object*, %struct._object** %value, align 8
  %tobool64 = icmp ne %struct._object* %49, null
  br i1 %tobool64, label %if.end.66, label %if.then.65

if.then.65:                                       ; preds = %do.end.59
  br label %failed

if.end.66:                                        ; preds = %do.end.59
  %50 = load %struct._object*, %struct._object** %result, align 8
  %51 = load %struct._object*, %struct._object** %value, align 8
  %call67 = call i32 @_PyObject_SetAttrId(%struct._object* %50, %struct._Py_Identifier* @PyId_op, %struct._object* %51)
  %cmp68 = icmp eq i32 %call67, -1
  br i1 %cmp68, label %if.then.69, label %if.end.70

if.then.69:                                       ; preds = %if.end.66
  br label %failed

if.end.70:                                        ; preds = %if.end.66
  br label %do.body.71

do.body.71:                                       ; preds = %if.end.70
  %52 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %52, %struct._object** %_py_decref_tmp72, align 8
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0
  %54 = load i64, i64* %ob_refcnt73, align 8
  %dec74 = add i64 %54, -1
  store i64 %dec74, i64* %ob_refcnt73, align 8
  %cmp75 = icmp ne i64 %dec74, 0
  br i1 %cmp75, label %if.then.76, label %if.else.77

if.then.76:                                       ; preds = %do.body.71
  br label %if.end.80

if.else.77:                                       ; preds = %do.body.71
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 1
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i32 0, i32 4
  %57 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8
  call void %57(%struct._object* %58)
  br label %if.end.80

if.end.80:                                        ; preds = %if.else.77, %if.then.76
  br label %do.end.81

do.end.81:                                        ; preds = %if.end.80
  %59 = load %struct._expr*, %struct._expr** %o, align 8
  %v82 = getelementptr inbounds %struct._expr, %struct._expr* %59, i32 0, i32 1
  %BinOp83 = bitcast %union.anon.2* %v82 to %struct.anon.4*
  %right = getelementptr inbounds %struct.anon.4, %struct.anon.4* %BinOp83, i32 0, i32 2
  %60 = load %struct._expr*, %struct._expr** %right, align 8
  %61 = bitcast %struct._expr* %60 to i8*
  %call84 = call %struct._object* @ast2obj_expr(i8* %61)
  store %struct._object* %call84, %struct._object** %value, align 8
  %62 = load %struct._object*, %struct._object** %value, align 8
  %tobool85 = icmp ne %struct._object* %62, null
  br i1 %tobool85, label %if.end.87, label %if.then.86

if.then.86:                                       ; preds = %do.end.81
  br label %failed

if.end.87:                                        ; preds = %do.end.81
  %63 = load %struct._object*, %struct._object** %result, align 8
  %64 = load %struct._object*, %struct._object** %value, align 8
  %call88 = call i32 @_PyObject_SetAttrId(%struct._object* %63, %struct._Py_Identifier* @PyId_right, %struct._object* %64)
  %cmp89 = icmp eq i32 %call88, -1
  br i1 %cmp89, label %if.then.90, label %if.end.91

if.then.90:                                       ; preds = %if.end.87
  br label %failed

if.end.91:                                        ; preds = %if.end.87
  br label %do.body.92

do.body.92:                                       ; preds = %if.end.91
  %65 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %65, %struct._object** %_py_decref_tmp93, align 8
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp93, align 8
  %ob_refcnt94 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 0
  %67 = load i64, i64* %ob_refcnt94, align 8
  %dec95 = add i64 %67, -1
  store i64 %dec95, i64* %ob_refcnt94, align 8
  %cmp96 = icmp ne i64 %dec95, 0
  br i1 %cmp96, label %if.then.97, label %if.else.98

if.then.97:                                       ; preds = %do.body.92
  br label %if.end.101

if.else.98:                                       ; preds = %do.body.92
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp93, align 8
  %ob_type99 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 1
  %69 = load %struct._typeobject*, %struct._typeobject** %ob_type99, align 8
  %tp_dealloc100 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %69, i32 0, i32 4
  %70 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc100, align 8
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp93, align 8
  call void %70(%struct._object* %71)
  br label %if.end.101

if.end.101:                                       ; preds = %if.else.98, %if.then.97
  br label %do.end.102

do.end.102:                                       ; preds = %if.end.101
  br label %sw.epilog

sw.bb.103:                                        ; preds = %if.end
  %72 = load %struct._typeobject*, %struct._typeobject** @UnaryOp_type, align 8
  %call104 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %72, %struct._object* null, %struct._object* null)
  store %struct._object* %call104, %struct._object** %result, align 8
  %73 = load %struct._object*, %struct._object** %result, align 8
  %tobool105 = icmp ne %struct._object* %73, null
  br i1 %tobool105, label %if.end.107, label %if.then.106

if.then.106:                                      ; preds = %sw.bb.103
  br label %failed

if.end.107:                                       ; preds = %sw.bb.103
  %74 = load %struct._expr*, %struct._expr** %o, align 8
  %v108 = getelementptr inbounds %struct._expr, %struct._expr* %74, i32 0, i32 1
  %UnaryOp = bitcast %union.anon.2* %v108 to %struct.anon.5*
  %op109 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %UnaryOp, i32 0, i32 0
  %75 = load i32, i32* %op109, align 4
  %call110 = call %struct._object* @ast2obj_unaryop(i32 %75)
  store %struct._object* %call110, %struct._object** %value, align 8
  %76 = load %struct._object*, %struct._object** %value, align 8
  %tobool111 = icmp ne %struct._object* %76, null
  br i1 %tobool111, label %if.end.113, label %if.then.112

if.then.112:                                      ; preds = %if.end.107
  br label %failed

if.end.113:                                       ; preds = %if.end.107
  %77 = load %struct._object*, %struct._object** %result, align 8
  %78 = load %struct._object*, %struct._object** %value, align 8
  %call114 = call i32 @_PyObject_SetAttrId(%struct._object* %77, %struct._Py_Identifier* @PyId_op, %struct._object* %78)
  %cmp115 = icmp eq i32 %call114, -1
  br i1 %cmp115, label %if.then.116, label %if.end.117

if.then.116:                                      ; preds = %if.end.113
  br label %failed

if.end.117:                                       ; preds = %if.end.113
  br label %do.body.118

do.body.118:                                      ; preds = %if.end.117
  %79 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %79, %struct._object** %_py_decref_tmp119, align 8
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp119, align 8
  %ob_refcnt120 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0
  %81 = load i64, i64* %ob_refcnt120, align 8
  %dec121 = add i64 %81, -1
  store i64 %dec121, i64* %ob_refcnt120, align 8
  %cmp122 = icmp ne i64 %dec121, 0
  br i1 %cmp122, label %if.then.123, label %if.else.124

if.then.123:                                      ; preds = %do.body.118
  br label %if.end.127

if.else.124:                                      ; preds = %do.body.118
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp119, align 8
  %ob_type125 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type125, align 8
  %tp_dealloc126 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc126, align 8
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp119, align 8
  call void %84(%struct._object* %85)
  br label %if.end.127

if.end.127:                                       ; preds = %if.else.124, %if.then.123
  br label %do.end.128

do.end.128:                                       ; preds = %if.end.127
  %86 = load %struct._expr*, %struct._expr** %o, align 8
  %v129 = getelementptr inbounds %struct._expr, %struct._expr* %86, i32 0, i32 1
  %UnaryOp130 = bitcast %union.anon.2* %v129 to %struct.anon.5*
  %operand = getelementptr inbounds %struct.anon.5, %struct.anon.5* %UnaryOp130, i32 0, i32 1
  %87 = load %struct._expr*, %struct._expr** %operand, align 8
  %88 = bitcast %struct._expr* %87 to i8*
  %call131 = call %struct._object* @ast2obj_expr(i8* %88)
  store %struct._object* %call131, %struct._object** %value, align 8
  %89 = load %struct._object*, %struct._object** %value, align 8
  %tobool132 = icmp ne %struct._object* %89, null
  br i1 %tobool132, label %if.end.134, label %if.then.133

if.then.133:                                      ; preds = %do.end.128
  br label %failed

if.end.134:                                       ; preds = %do.end.128
  %90 = load %struct._object*, %struct._object** %result, align 8
  %91 = load %struct._object*, %struct._object** %value, align 8
  %call135 = call i32 @_PyObject_SetAttrId(%struct._object* %90, %struct._Py_Identifier* @PyId_operand, %struct._object* %91)
  %cmp136 = icmp eq i32 %call135, -1
  br i1 %cmp136, label %if.then.137, label %if.end.138

if.then.137:                                      ; preds = %if.end.134
  br label %failed

if.end.138:                                       ; preds = %if.end.134
  br label %do.body.139

do.body.139:                                      ; preds = %if.end.138
  %92 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %92, %struct._object** %_py_decref_tmp140, align 8
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp140, align 8
  %ob_refcnt141 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0
  %94 = load i64, i64* %ob_refcnt141, align 8
  %dec142 = add i64 %94, -1
  store i64 %dec142, i64* %ob_refcnt141, align 8
  %cmp143 = icmp ne i64 %dec142, 0
  br i1 %cmp143, label %if.then.144, label %if.else.145

if.then.144:                                      ; preds = %do.body.139
  br label %if.end.148

if.else.145:                                      ; preds = %do.body.139
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp140, align 8
  %ob_type146 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 1
  %96 = load %struct._typeobject*, %struct._typeobject** %ob_type146, align 8
  %tp_dealloc147 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %96, i32 0, i32 4
  %97 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc147, align 8
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp140, align 8
  call void %97(%struct._object* %98)
  br label %if.end.148

if.end.148:                                       ; preds = %if.else.145, %if.then.144
  br label %do.end.149

do.end.149:                                       ; preds = %if.end.148
  br label %sw.epilog

sw.bb.150:                                        ; preds = %if.end
  %99 = load %struct._typeobject*, %struct._typeobject** @Lambda_type, align 8
  %call151 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %99, %struct._object* null, %struct._object* null)
  store %struct._object* %call151, %struct._object** %result, align 8
  %100 = load %struct._object*, %struct._object** %result, align 8
  %tobool152 = icmp ne %struct._object* %100, null
  br i1 %tobool152, label %if.end.154, label %if.then.153

if.then.153:                                      ; preds = %sw.bb.150
  br label %failed

if.end.154:                                       ; preds = %sw.bb.150
  %101 = load %struct._expr*, %struct._expr** %o, align 8
  %v155 = getelementptr inbounds %struct._expr, %struct._expr* %101, i32 0, i32 1
  %Lambda = bitcast %union.anon.2* %v155 to %struct.anon.6*
  %args = getelementptr inbounds %struct.anon.6, %struct.anon.6* %Lambda, i32 0, i32 0
  %102 = load %struct._arguments*, %struct._arguments** %args, align 8
  %103 = bitcast %struct._arguments* %102 to i8*
  %call156 = call %struct._object* @ast2obj_arguments(i8* %103)
  store %struct._object* %call156, %struct._object** %value, align 8
  %104 = load %struct._object*, %struct._object** %value, align 8
  %tobool157 = icmp ne %struct._object* %104, null
  br i1 %tobool157, label %if.end.159, label %if.then.158

if.then.158:                                      ; preds = %if.end.154
  br label %failed

if.end.159:                                       ; preds = %if.end.154
  %105 = load %struct._object*, %struct._object** %result, align 8
  %106 = load %struct._object*, %struct._object** %value, align 8
  %call160 = call i32 @_PyObject_SetAttrId(%struct._object* %105, %struct._Py_Identifier* @PyId_args, %struct._object* %106)
  %cmp161 = icmp eq i32 %call160, -1
  br i1 %cmp161, label %if.then.162, label %if.end.163

if.then.162:                                      ; preds = %if.end.159
  br label %failed

if.end.163:                                       ; preds = %if.end.159
  br label %do.body.164

do.body.164:                                      ; preds = %if.end.163
  %107 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %107, %struct._object** %_py_decref_tmp165, align 8
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp165, align 8
  %ob_refcnt166 = getelementptr inbounds %struct._object, %struct._object* %108, i32 0, i32 0
  %109 = load i64, i64* %ob_refcnt166, align 8
  %dec167 = add i64 %109, -1
  store i64 %dec167, i64* %ob_refcnt166, align 8
  %cmp168 = icmp ne i64 %dec167, 0
  br i1 %cmp168, label %if.then.169, label %if.else.170

if.then.169:                                      ; preds = %do.body.164
  br label %if.end.173

if.else.170:                                      ; preds = %do.body.164
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp165, align 8
  %ob_type171 = getelementptr inbounds %struct._object, %struct._object* %110, i32 0, i32 1
  %111 = load %struct._typeobject*, %struct._typeobject** %ob_type171, align 8
  %tp_dealloc172 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %111, i32 0, i32 4
  %112 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc172, align 8
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp165, align 8
  call void %112(%struct._object* %113)
  br label %if.end.173

if.end.173:                                       ; preds = %if.else.170, %if.then.169
  br label %do.end.174

do.end.174:                                       ; preds = %if.end.173
  %114 = load %struct._expr*, %struct._expr** %o, align 8
  %v175 = getelementptr inbounds %struct._expr, %struct._expr* %114, i32 0, i32 1
  %Lambda176 = bitcast %union.anon.2* %v175 to %struct.anon.6*
  %body = getelementptr inbounds %struct.anon.6, %struct.anon.6* %Lambda176, i32 0, i32 1
  %115 = load %struct._expr*, %struct._expr** %body, align 8
  %116 = bitcast %struct._expr* %115 to i8*
  %call177 = call %struct._object* @ast2obj_expr(i8* %116)
  store %struct._object* %call177, %struct._object** %value, align 8
  %117 = load %struct._object*, %struct._object** %value, align 8
  %tobool178 = icmp ne %struct._object* %117, null
  br i1 %tobool178, label %if.end.180, label %if.then.179

if.then.179:                                      ; preds = %do.end.174
  br label %failed

if.end.180:                                       ; preds = %do.end.174
  %118 = load %struct._object*, %struct._object** %result, align 8
  %119 = load %struct._object*, %struct._object** %value, align 8
  %call181 = call i32 @_PyObject_SetAttrId(%struct._object* %118, %struct._Py_Identifier* @PyId_body, %struct._object* %119)
  %cmp182 = icmp eq i32 %call181, -1
  br i1 %cmp182, label %if.then.183, label %if.end.184

if.then.183:                                      ; preds = %if.end.180
  br label %failed

if.end.184:                                       ; preds = %if.end.180
  br label %do.body.185

do.body.185:                                      ; preds = %if.end.184
  %120 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %120, %struct._object** %_py_decref_tmp186, align 8
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp186, align 8
  %ob_refcnt187 = getelementptr inbounds %struct._object, %struct._object* %121, i32 0, i32 0
  %122 = load i64, i64* %ob_refcnt187, align 8
  %dec188 = add i64 %122, -1
  store i64 %dec188, i64* %ob_refcnt187, align 8
  %cmp189 = icmp ne i64 %dec188, 0
  br i1 %cmp189, label %if.then.190, label %if.else.191

if.then.190:                                      ; preds = %do.body.185
  br label %if.end.194

if.else.191:                                      ; preds = %do.body.185
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp186, align 8
  %ob_type192 = getelementptr inbounds %struct._object, %struct._object* %123, i32 0, i32 1
  %124 = load %struct._typeobject*, %struct._typeobject** %ob_type192, align 8
  %tp_dealloc193 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %124, i32 0, i32 4
  %125 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc193, align 8
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp186, align 8
  call void %125(%struct._object* %126)
  br label %if.end.194

if.end.194:                                       ; preds = %if.else.191, %if.then.190
  br label %do.end.195

do.end.195:                                       ; preds = %if.end.194
  br label %sw.epilog

sw.bb.196:                                        ; preds = %if.end
  %127 = load %struct._typeobject*, %struct._typeobject** @IfExp_type, align 8
  %call197 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %127, %struct._object* null, %struct._object* null)
  store %struct._object* %call197, %struct._object** %result, align 8
  %128 = load %struct._object*, %struct._object** %result, align 8
  %tobool198 = icmp ne %struct._object* %128, null
  br i1 %tobool198, label %if.end.200, label %if.then.199

if.then.199:                                      ; preds = %sw.bb.196
  br label %failed

if.end.200:                                       ; preds = %sw.bb.196
  %129 = load %struct._expr*, %struct._expr** %o, align 8
  %v201 = getelementptr inbounds %struct._expr, %struct._expr* %129, i32 0, i32 1
  %IfExp = bitcast %union.anon.2* %v201 to %struct.anon.7*
  %test = getelementptr inbounds %struct.anon.7, %struct.anon.7* %IfExp, i32 0, i32 0
  %130 = load %struct._expr*, %struct._expr** %test, align 8
  %131 = bitcast %struct._expr* %130 to i8*
  %call202 = call %struct._object* @ast2obj_expr(i8* %131)
  store %struct._object* %call202, %struct._object** %value, align 8
  %132 = load %struct._object*, %struct._object** %value, align 8
  %tobool203 = icmp ne %struct._object* %132, null
  br i1 %tobool203, label %if.end.205, label %if.then.204

if.then.204:                                      ; preds = %if.end.200
  br label %failed

if.end.205:                                       ; preds = %if.end.200
  %133 = load %struct._object*, %struct._object** %result, align 8
  %134 = load %struct._object*, %struct._object** %value, align 8
  %call206 = call i32 @_PyObject_SetAttrId(%struct._object* %133, %struct._Py_Identifier* @PyId_test, %struct._object* %134)
  %cmp207 = icmp eq i32 %call206, -1
  br i1 %cmp207, label %if.then.208, label %if.end.209

if.then.208:                                      ; preds = %if.end.205
  br label %failed

if.end.209:                                       ; preds = %if.end.205
  br label %do.body.210

do.body.210:                                      ; preds = %if.end.209
  %135 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %135, %struct._object** %_py_decref_tmp211, align 8
  %136 = load %struct._object*, %struct._object** %_py_decref_tmp211, align 8
  %ob_refcnt212 = getelementptr inbounds %struct._object, %struct._object* %136, i32 0, i32 0
  %137 = load i64, i64* %ob_refcnt212, align 8
  %dec213 = add i64 %137, -1
  store i64 %dec213, i64* %ob_refcnt212, align 8
  %cmp214 = icmp ne i64 %dec213, 0
  br i1 %cmp214, label %if.then.215, label %if.else.216

if.then.215:                                      ; preds = %do.body.210
  br label %if.end.219

if.else.216:                                      ; preds = %do.body.210
  %138 = load %struct._object*, %struct._object** %_py_decref_tmp211, align 8
  %ob_type217 = getelementptr inbounds %struct._object, %struct._object* %138, i32 0, i32 1
  %139 = load %struct._typeobject*, %struct._typeobject** %ob_type217, align 8
  %tp_dealloc218 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %139, i32 0, i32 4
  %140 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc218, align 8
  %141 = load %struct._object*, %struct._object** %_py_decref_tmp211, align 8
  call void %140(%struct._object* %141)
  br label %if.end.219

if.end.219:                                       ; preds = %if.else.216, %if.then.215
  br label %do.end.220

do.end.220:                                       ; preds = %if.end.219
  %142 = load %struct._expr*, %struct._expr** %o, align 8
  %v221 = getelementptr inbounds %struct._expr, %struct._expr* %142, i32 0, i32 1
  %IfExp222 = bitcast %union.anon.2* %v221 to %struct.anon.7*
  %body223 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %IfExp222, i32 0, i32 1
  %143 = load %struct._expr*, %struct._expr** %body223, align 8
  %144 = bitcast %struct._expr* %143 to i8*
  %call224 = call %struct._object* @ast2obj_expr(i8* %144)
  store %struct._object* %call224, %struct._object** %value, align 8
  %145 = load %struct._object*, %struct._object** %value, align 8
  %tobool225 = icmp ne %struct._object* %145, null
  br i1 %tobool225, label %if.end.227, label %if.then.226

if.then.226:                                      ; preds = %do.end.220
  br label %failed

if.end.227:                                       ; preds = %do.end.220
  %146 = load %struct._object*, %struct._object** %result, align 8
  %147 = load %struct._object*, %struct._object** %value, align 8
  %call228 = call i32 @_PyObject_SetAttrId(%struct._object* %146, %struct._Py_Identifier* @PyId_body, %struct._object* %147)
  %cmp229 = icmp eq i32 %call228, -1
  br i1 %cmp229, label %if.then.230, label %if.end.231

if.then.230:                                      ; preds = %if.end.227
  br label %failed

if.end.231:                                       ; preds = %if.end.227
  br label %do.body.232

do.body.232:                                      ; preds = %if.end.231
  %148 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %148, %struct._object** %_py_decref_tmp233, align 8
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp233, align 8
  %ob_refcnt234 = getelementptr inbounds %struct._object, %struct._object* %149, i32 0, i32 0
  %150 = load i64, i64* %ob_refcnt234, align 8
  %dec235 = add i64 %150, -1
  store i64 %dec235, i64* %ob_refcnt234, align 8
  %cmp236 = icmp ne i64 %dec235, 0
  br i1 %cmp236, label %if.then.237, label %if.else.238

if.then.237:                                      ; preds = %do.body.232
  br label %if.end.241

if.else.238:                                      ; preds = %do.body.232
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp233, align 8
  %ob_type239 = getelementptr inbounds %struct._object, %struct._object* %151, i32 0, i32 1
  %152 = load %struct._typeobject*, %struct._typeobject** %ob_type239, align 8
  %tp_dealloc240 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %152, i32 0, i32 4
  %153 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc240, align 8
  %154 = load %struct._object*, %struct._object** %_py_decref_tmp233, align 8
  call void %153(%struct._object* %154)
  br label %if.end.241

if.end.241:                                       ; preds = %if.else.238, %if.then.237
  br label %do.end.242

do.end.242:                                       ; preds = %if.end.241
  %155 = load %struct._expr*, %struct._expr** %o, align 8
  %v243 = getelementptr inbounds %struct._expr, %struct._expr* %155, i32 0, i32 1
  %IfExp244 = bitcast %union.anon.2* %v243 to %struct.anon.7*
  %orelse = getelementptr inbounds %struct.anon.7, %struct.anon.7* %IfExp244, i32 0, i32 2
  %156 = load %struct._expr*, %struct._expr** %orelse, align 8
  %157 = bitcast %struct._expr* %156 to i8*
  %call245 = call %struct._object* @ast2obj_expr(i8* %157)
  store %struct._object* %call245, %struct._object** %value, align 8
  %158 = load %struct._object*, %struct._object** %value, align 8
  %tobool246 = icmp ne %struct._object* %158, null
  br i1 %tobool246, label %if.end.248, label %if.then.247

if.then.247:                                      ; preds = %do.end.242
  br label %failed

if.end.248:                                       ; preds = %do.end.242
  %159 = load %struct._object*, %struct._object** %result, align 8
  %160 = load %struct._object*, %struct._object** %value, align 8
  %call249 = call i32 @_PyObject_SetAttrId(%struct._object* %159, %struct._Py_Identifier* @PyId_orelse, %struct._object* %160)
  %cmp250 = icmp eq i32 %call249, -1
  br i1 %cmp250, label %if.then.251, label %if.end.252

if.then.251:                                      ; preds = %if.end.248
  br label %failed

if.end.252:                                       ; preds = %if.end.248
  br label %do.body.253

do.body.253:                                      ; preds = %if.end.252
  %161 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %161, %struct._object** %_py_decref_tmp254, align 8
  %162 = load %struct._object*, %struct._object** %_py_decref_tmp254, align 8
  %ob_refcnt255 = getelementptr inbounds %struct._object, %struct._object* %162, i32 0, i32 0
  %163 = load i64, i64* %ob_refcnt255, align 8
  %dec256 = add i64 %163, -1
  store i64 %dec256, i64* %ob_refcnt255, align 8
  %cmp257 = icmp ne i64 %dec256, 0
  br i1 %cmp257, label %if.then.258, label %if.else.259

if.then.258:                                      ; preds = %do.body.253
  br label %if.end.262

if.else.259:                                      ; preds = %do.body.253
  %164 = load %struct._object*, %struct._object** %_py_decref_tmp254, align 8
  %ob_type260 = getelementptr inbounds %struct._object, %struct._object* %164, i32 0, i32 1
  %165 = load %struct._typeobject*, %struct._typeobject** %ob_type260, align 8
  %tp_dealloc261 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %165, i32 0, i32 4
  %166 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc261, align 8
  %167 = load %struct._object*, %struct._object** %_py_decref_tmp254, align 8
  call void %166(%struct._object* %167)
  br label %if.end.262

if.end.262:                                       ; preds = %if.else.259, %if.then.258
  br label %do.end.263

do.end.263:                                       ; preds = %if.end.262
  br label %sw.epilog

sw.bb.264:                                        ; preds = %if.end
  %168 = load %struct._typeobject*, %struct._typeobject** @Dict_type, align 8
  %call265 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %168, %struct._object* null, %struct._object* null)
  store %struct._object* %call265, %struct._object** %result, align 8
  %169 = load %struct._object*, %struct._object** %result, align 8
  %tobool266 = icmp ne %struct._object* %169, null
  br i1 %tobool266, label %if.end.268, label %if.then.267

if.then.267:                                      ; preds = %sw.bb.264
  br label %failed

if.end.268:                                       ; preds = %sw.bb.264
  %170 = load %struct._expr*, %struct._expr** %o, align 8
  %v269 = getelementptr inbounds %struct._expr, %struct._expr* %170, i32 0, i32 1
  %Dict = bitcast %union.anon.2* %v269 to %struct.anon.8*
  %keys = getelementptr inbounds %struct.anon.8, %struct.anon.8* %Dict, i32 0, i32 0
  %171 = load %struct.asdl_seq*, %struct.asdl_seq** %keys, align 8
  %call270 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %171, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call270, %struct._object** %value, align 8
  %172 = load %struct._object*, %struct._object** %value, align 8
  %tobool271 = icmp ne %struct._object* %172, null
  br i1 %tobool271, label %if.end.273, label %if.then.272

if.then.272:                                      ; preds = %if.end.268
  br label %failed

if.end.273:                                       ; preds = %if.end.268
  %173 = load %struct._object*, %struct._object** %result, align 8
  %174 = load %struct._object*, %struct._object** %value, align 8
  %call274 = call i32 @_PyObject_SetAttrId(%struct._object* %173, %struct._Py_Identifier* @PyId_keys, %struct._object* %174)
  %cmp275 = icmp eq i32 %call274, -1
  br i1 %cmp275, label %if.then.276, label %if.end.277

if.then.276:                                      ; preds = %if.end.273
  br label %failed

if.end.277:                                       ; preds = %if.end.273
  br label %do.body.278

do.body.278:                                      ; preds = %if.end.277
  %175 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %175, %struct._object** %_py_decref_tmp279, align 8
  %176 = load %struct._object*, %struct._object** %_py_decref_tmp279, align 8
  %ob_refcnt280 = getelementptr inbounds %struct._object, %struct._object* %176, i32 0, i32 0
  %177 = load i64, i64* %ob_refcnt280, align 8
  %dec281 = add i64 %177, -1
  store i64 %dec281, i64* %ob_refcnt280, align 8
  %cmp282 = icmp ne i64 %dec281, 0
  br i1 %cmp282, label %if.then.283, label %if.else.284

if.then.283:                                      ; preds = %do.body.278
  br label %if.end.287

if.else.284:                                      ; preds = %do.body.278
  %178 = load %struct._object*, %struct._object** %_py_decref_tmp279, align 8
  %ob_type285 = getelementptr inbounds %struct._object, %struct._object* %178, i32 0, i32 1
  %179 = load %struct._typeobject*, %struct._typeobject** %ob_type285, align 8
  %tp_dealloc286 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %179, i32 0, i32 4
  %180 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc286, align 8
  %181 = load %struct._object*, %struct._object** %_py_decref_tmp279, align 8
  call void %180(%struct._object* %181)
  br label %if.end.287

if.end.287:                                       ; preds = %if.else.284, %if.then.283
  br label %do.end.288

do.end.288:                                       ; preds = %if.end.287
  %182 = load %struct._expr*, %struct._expr** %o, align 8
  %v289 = getelementptr inbounds %struct._expr, %struct._expr* %182, i32 0, i32 1
  %Dict290 = bitcast %union.anon.2* %v289 to %struct.anon.8*
  %values291 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %Dict290, i32 0, i32 1
  %183 = load %struct.asdl_seq*, %struct.asdl_seq** %values291, align 8
  %call292 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %183, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call292, %struct._object** %value, align 8
  %184 = load %struct._object*, %struct._object** %value, align 8
  %tobool293 = icmp ne %struct._object* %184, null
  br i1 %tobool293, label %if.end.295, label %if.then.294

if.then.294:                                      ; preds = %do.end.288
  br label %failed

if.end.295:                                       ; preds = %do.end.288
  %185 = load %struct._object*, %struct._object** %result, align 8
  %186 = load %struct._object*, %struct._object** %value, align 8
  %call296 = call i32 @_PyObject_SetAttrId(%struct._object* %185, %struct._Py_Identifier* @PyId_values, %struct._object* %186)
  %cmp297 = icmp eq i32 %call296, -1
  br i1 %cmp297, label %if.then.298, label %if.end.299

if.then.298:                                      ; preds = %if.end.295
  br label %failed

if.end.299:                                       ; preds = %if.end.295
  br label %do.body.300

do.body.300:                                      ; preds = %if.end.299
  %187 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %187, %struct._object** %_py_decref_tmp301, align 8
  %188 = load %struct._object*, %struct._object** %_py_decref_tmp301, align 8
  %ob_refcnt302 = getelementptr inbounds %struct._object, %struct._object* %188, i32 0, i32 0
  %189 = load i64, i64* %ob_refcnt302, align 8
  %dec303 = add i64 %189, -1
  store i64 %dec303, i64* %ob_refcnt302, align 8
  %cmp304 = icmp ne i64 %dec303, 0
  br i1 %cmp304, label %if.then.305, label %if.else.306

if.then.305:                                      ; preds = %do.body.300
  br label %if.end.309

if.else.306:                                      ; preds = %do.body.300
  %190 = load %struct._object*, %struct._object** %_py_decref_tmp301, align 8
  %ob_type307 = getelementptr inbounds %struct._object, %struct._object* %190, i32 0, i32 1
  %191 = load %struct._typeobject*, %struct._typeobject** %ob_type307, align 8
  %tp_dealloc308 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %191, i32 0, i32 4
  %192 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc308, align 8
  %193 = load %struct._object*, %struct._object** %_py_decref_tmp301, align 8
  call void %192(%struct._object* %193)
  br label %if.end.309

if.end.309:                                       ; preds = %if.else.306, %if.then.305
  br label %do.end.310

do.end.310:                                       ; preds = %if.end.309
  br label %sw.epilog

sw.bb.311:                                        ; preds = %if.end
  %194 = load %struct._typeobject*, %struct._typeobject** @Set_type, align 8
  %call312 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %194, %struct._object* null, %struct._object* null)
  store %struct._object* %call312, %struct._object** %result, align 8
  %195 = load %struct._object*, %struct._object** %result, align 8
  %tobool313 = icmp ne %struct._object* %195, null
  br i1 %tobool313, label %if.end.315, label %if.then.314

if.then.314:                                      ; preds = %sw.bb.311
  br label %failed

if.end.315:                                       ; preds = %sw.bb.311
  %196 = load %struct._expr*, %struct._expr** %o, align 8
  %v316 = getelementptr inbounds %struct._expr, %struct._expr* %196, i32 0, i32 1
  %Set = bitcast %union.anon.2* %v316 to %struct.anon.9*
  %elts = getelementptr inbounds %struct.anon.9, %struct.anon.9* %Set, i32 0, i32 0
  %197 = load %struct.asdl_seq*, %struct.asdl_seq** %elts, align 8
  %call317 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %197, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call317, %struct._object** %value, align 8
  %198 = load %struct._object*, %struct._object** %value, align 8
  %tobool318 = icmp ne %struct._object* %198, null
  br i1 %tobool318, label %if.end.320, label %if.then.319

if.then.319:                                      ; preds = %if.end.315
  br label %failed

if.end.320:                                       ; preds = %if.end.315
  %199 = load %struct._object*, %struct._object** %result, align 8
  %200 = load %struct._object*, %struct._object** %value, align 8
  %call321 = call i32 @_PyObject_SetAttrId(%struct._object* %199, %struct._Py_Identifier* @PyId_elts, %struct._object* %200)
  %cmp322 = icmp eq i32 %call321, -1
  br i1 %cmp322, label %if.then.323, label %if.end.324

if.then.323:                                      ; preds = %if.end.320
  br label %failed

if.end.324:                                       ; preds = %if.end.320
  br label %do.body.325

do.body.325:                                      ; preds = %if.end.324
  %201 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %201, %struct._object** %_py_decref_tmp326, align 8
  %202 = load %struct._object*, %struct._object** %_py_decref_tmp326, align 8
  %ob_refcnt327 = getelementptr inbounds %struct._object, %struct._object* %202, i32 0, i32 0
  %203 = load i64, i64* %ob_refcnt327, align 8
  %dec328 = add i64 %203, -1
  store i64 %dec328, i64* %ob_refcnt327, align 8
  %cmp329 = icmp ne i64 %dec328, 0
  br i1 %cmp329, label %if.then.330, label %if.else.331

if.then.330:                                      ; preds = %do.body.325
  br label %if.end.334

if.else.331:                                      ; preds = %do.body.325
  %204 = load %struct._object*, %struct._object** %_py_decref_tmp326, align 8
  %ob_type332 = getelementptr inbounds %struct._object, %struct._object* %204, i32 0, i32 1
  %205 = load %struct._typeobject*, %struct._typeobject** %ob_type332, align 8
  %tp_dealloc333 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %205, i32 0, i32 4
  %206 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc333, align 8
  %207 = load %struct._object*, %struct._object** %_py_decref_tmp326, align 8
  call void %206(%struct._object* %207)
  br label %if.end.334

if.end.334:                                       ; preds = %if.else.331, %if.then.330
  br label %do.end.335

do.end.335:                                       ; preds = %if.end.334
  br label %sw.epilog

sw.bb.336:                                        ; preds = %if.end
  %208 = load %struct._typeobject*, %struct._typeobject** @ListComp_type, align 8
  %call337 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %208, %struct._object* null, %struct._object* null)
  store %struct._object* %call337, %struct._object** %result, align 8
  %209 = load %struct._object*, %struct._object** %result, align 8
  %tobool338 = icmp ne %struct._object* %209, null
  br i1 %tobool338, label %if.end.340, label %if.then.339

if.then.339:                                      ; preds = %sw.bb.336
  br label %failed

if.end.340:                                       ; preds = %sw.bb.336
  %210 = load %struct._expr*, %struct._expr** %o, align 8
  %v341 = getelementptr inbounds %struct._expr, %struct._expr* %210, i32 0, i32 1
  %ListComp = bitcast %union.anon.2* %v341 to %struct.anon.10*
  %elt = getelementptr inbounds %struct.anon.10, %struct.anon.10* %ListComp, i32 0, i32 0
  %211 = load %struct._expr*, %struct._expr** %elt, align 8
  %212 = bitcast %struct._expr* %211 to i8*
  %call342 = call %struct._object* @ast2obj_expr(i8* %212)
  store %struct._object* %call342, %struct._object** %value, align 8
  %213 = load %struct._object*, %struct._object** %value, align 8
  %tobool343 = icmp ne %struct._object* %213, null
  br i1 %tobool343, label %if.end.345, label %if.then.344

if.then.344:                                      ; preds = %if.end.340
  br label %failed

if.end.345:                                       ; preds = %if.end.340
  %214 = load %struct._object*, %struct._object** %result, align 8
  %215 = load %struct._object*, %struct._object** %value, align 8
  %call346 = call i32 @_PyObject_SetAttrId(%struct._object* %214, %struct._Py_Identifier* @PyId_elt, %struct._object* %215)
  %cmp347 = icmp eq i32 %call346, -1
  br i1 %cmp347, label %if.then.348, label %if.end.349

if.then.348:                                      ; preds = %if.end.345
  br label %failed

if.end.349:                                       ; preds = %if.end.345
  br label %do.body.350

do.body.350:                                      ; preds = %if.end.349
  %216 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %216, %struct._object** %_py_decref_tmp351, align 8
  %217 = load %struct._object*, %struct._object** %_py_decref_tmp351, align 8
  %ob_refcnt352 = getelementptr inbounds %struct._object, %struct._object* %217, i32 0, i32 0
  %218 = load i64, i64* %ob_refcnt352, align 8
  %dec353 = add i64 %218, -1
  store i64 %dec353, i64* %ob_refcnt352, align 8
  %cmp354 = icmp ne i64 %dec353, 0
  br i1 %cmp354, label %if.then.355, label %if.else.356

if.then.355:                                      ; preds = %do.body.350
  br label %if.end.359

if.else.356:                                      ; preds = %do.body.350
  %219 = load %struct._object*, %struct._object** %_py_decref_tmp351, align 8
  %ob_type357 = getelementptr inbounds %struct._object, %struct._object* %219, i32 0, i32 1
  %220 = load %struct._typeobject*, %struct._typeobject** %ob_type357, align 8
  %tp_dealloc358 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %220, i32 0, i32 4
  %221 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc358, align 8
  %222 = load %struct._object*, %struct._object** %_py_decref_tmp351, align 8
  call void %221(%struct._object* %222)
  br label %if.end.359

if.end.359:                                       ; preds = %if.else.356, %if.then.355
  br label %do.end.360

do.end.360:                                       ; preds = %if.end.359
  %223 = load %struct._expr*, %struct._expr** %o, align 8
  %v361 = getelementptr inbounds %struct._expr, %struct._expr* %223, i32 0, i32 1
  %ListComp362 = bitcast %union.anon.2* %v361 to %struct.anon.10*
  %generators = getelementptr inbounds %struct.anon.10, %struct.anon.10* %ListComp362, i32 0, i32 1
  %224 = load %struct.asdl_seq*, %struct.asdl_seq** %generators, align 8
  %call363 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %224, %struct._object* (i8*)* @ast2obj_comprehension)
  store %struct._object* %call363, %struct._object** %value, align 8
  %225 = load %struct._object*, %struct._object** %value, align 8
  %tobool364 = icmp ne %struct._object* %225, null
  br i1 %tobool364, label %if.end.366, label %if.then.365

if.then.365:                                      ; preds = %do.end.360
  br label %failed

if.end.366:                                       ; preds = %do.end.360
  %226 = load %struct._object*, %struct._object** %result, align 8
  %227 = load %struct._object*, %struct._object** %value, align 8
  %call367 = call i32 @_PyObject_SetAttrId(%struct._object* %226, %struct._Py_Identifier* @PyId_generators, %struct._object* %227)
  %cmp368 = icmp eq i32 %call367, -1
  br i1 %cmp368, label %if.then.369, label %if.end.370

if.then.369:                                      ; preds = %if.end.366
  br label %failed

if.end.370:                                       ; preds = %if.end.366
  br label %do.body.371

do.body.371:                                      ; preds = %if.end.370
  %228 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %228, %struct._object** %_py_decref_tmp372, align 8
  %229 = load %struct._object*, %struct._object** %_py_decref_tmp372, align 8
  %ob_refcnt373 = getelementptr inbounds %struct._object, %struct._object* %229, i32 0, i32 0
  %230 = load i64, i64* %ob_refcnt373, align 8
  %dec374 = add i64 %230, -1
  store i64 %dec374, i64* %ob_refcnt373, align 8
  %cmp375 = icmp ne i64 %dec374, 0
  br i1 %cmp375, label %if.then.376, label %if.else.377

if.then.376:                                      ; preds = %do.body.371
  br label %if.end.380

if.else.377:                                      ; preds = %do.body.371
  %231 = load %struct._object*, %struct._object** %_py_decref_tmp372, align 8
  %ob_type378 = getelementptr inbounds %struct._object, %struct._object* %231, i32 0, i32 1
  %232 = load %struct._typeobject*, %struct._typeobject** %ob_type378, align 8
  %tp_dealloc379 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %232, i32 0, i32 4
  %233 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc379, align 8
  %234 = load %struct._object*, %struct._object** %_py_decref_tmp372, align 8
  call void %233(%struct._object* %234)
  br label %if.end.380

if.end.380:                                       ; preds = %if.else.377, %if.then.376
  br label %do.end.381

do.end.381:                                       ; preds = %if.end.380
  br label %sw.epilog

sw.bb.382:                                        ; preds = %if.end
  %235 = load %struct._typeobject*, %struct._typeobject** @SetComp_type, align 8
  %call383 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %235, %struct._object* null, %struct._object* null)
  store %struct._object* %call383, %struct._object** %result, align 8
  %236 = load %struct._object*, %struct._object** %result, align 8
  %tobool384 = icmp ne %struct._object* %236, null
  br i1 %tobool384, label %if.end.386, label %if.then.385

if.then.385:                                      ; preds = %sw.bb.382
  br label %failed

if.end.386:                                       ; preds = %sw.bb.382
  %237 = load %struct._expr*, %struct._expr** %o, align 8
  %v387 = getelementptr inbounds %struct._expr, %struct._expr* %237, i32 0, i32 1
  %SetComp = bitcast %union.anon.2* %v387 to %struct.anon.11*
  %elt388 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %SetComp, i32 0, i32 0
  %238 = load %struct._expr*, %struct._expr** %elt388, align 8
  %239 = bitcast %struct._expr* %238 to i8*
  %call389 = call %struct._object* @ast2obj_expr(i8* %239)
  store %struct._object* %call389, %struct._object** %value, align 8
  %240 = load %struct._object*, %struct._object** %value, align 8
  %tobool390 = icmp ne %struct._object* %240, null
  br i1 %tobool390, label %if.end.392, label %if.then.391

if.then.391:                                      ; preds = %if.end.386
  br label %failed

if.end.392:                                       ; preds = %if.end.386
  %241 = load %struct._object*, %struct._object** %result, align 8
  %242 = load %struct._object*, %struct._object** %value, align 8
  %call393 = call i32 @_PyObject_SetAttrId(%struct._object* %241, %struct._Py_Identifier* @PyId_elt, %struct._object* %242)
  %cmp394 = icmp eq i32 %call393, -1
  br i1 %cmp394, label %if.then.395, label %if.end.396

if.then.395:                                      ; preds = %if.end.392
  br label %failed

if.end.396:                                       ; preds = %if.end.392
  br label %do.body.397

do.body.397:                                      ; preds = %if.end.396
  %243 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %243, %struct._object** %_py_decref_tmp398, align 8
  %244 = load %struct._object*, %struct._object** %_py_decref_tmp398, align 8
  %ob_refcnt399 = getelementptr inbounds %struct._object, %struct._object* %244, i32 0, i32 0
  %245 = load i64, i64* %ob_refcnt399, align 8
  %dec400 = add i64 %245, -1
  store i64 %dec400, i64* %ob_refcnt399, align 8
  %cmp401 = icmp ne i64 %dec400, 0
  br i1 %cmp401, label %if.then.402, label %if.else.403

if.then.402:                                      ; preds = %do.body.397
  br label %if.end.406

if.else.403:                                      ; preds = %do.body.397
  %246 = load %struct._object*, %struct._object** %_py_decref_tmp398, align 8
  %ob_type404 = getelementptr inbounds %struct._object, %struct._object* %246, i32 0, i32 1
  %247 = load %struct._typeobject*, %struct._typeobject** %ob_type404, align 8
  %tp_dealloc405 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %247, i32 0, i32 4
  %248 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc405, align 8
  %249 = load %struct._object*, %struct._object** %_py_decref_tmp398, align 8
  call void %248(%struct._object* %249)
  br label %if.end.406

if.end.406:                                       ; preds = %if.else.403, %if.then.402
  br label %do.end.407

do.end.407:                                       ; preds = %if.end.406
  %250 = load %struct._expr*, %struct._expr** %o, align 8
  %v408 = getelementptr inbounds %struct._expr, %struct._expr* %250, i32 0, i32 1
  %SetComp409 = bitcast %union.anon.2* %v408 to %struct.anon.11*
  %generators410 = getelementptr inbounds %struct.anon.11, %struct.anon.11* %SetComp409, i32 0, i32 1
  %251 = load %struct.asdl_seq*, %struct.asdl_seq** %generators410, align 8
  %call411 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %251, %struct._object* (i8*)* @ast2obj_comprehension)
  store %struct._object* %call411, %struct._object** %value, align 8
  %252 = load %struct._object*, %struct._object** %value, align 8
  %tobool412 = icmp ne %struct._object* %252, null
  br i1 %tobool412, label %if.end.414, label %if.then.413

if.then.413:                                      ; preds = %do.end.407
  br label %failed

if.end.414:                                       ; preds = %do.end.407
  %253 = load %struct._object*, %struct._object** %result, align 8
  %254 = load %struct._object*, %struct._object** %value, align 8
  %call415 = call i32 @_PyObject_SetAttrId(%struct._object* %253, %struct._Py_Identifier* @PyId_generators, %struct._object* %254)
  %cmp416 = icmp eq i32 %call415, -1
  br i1 %cmp416, label %if.then.417, label %if.end.418

if.then.417:                                      ; preds = %if.end.414
  br label %failed

if.end.418:                                       ; preds = %if.end.414
  br label %do.body.419

do.body.419:                                      ; preds = %if.end.418
  %255 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %255, %struct._object** %_py_decref_tmp420, align 8
  %256 = load %struct._object*, %struct._object** %_py_decref_tmp420, align 8
  %ob_refcnt421 = getelementptr inbounds %struct._object, %struct._object* %256, i32 0, i32 0
  %257 = load i64, i64* %ob_refcnt421, align 8
  %dec422 = add i64 %257, -1
  store i64 %dec422, i64* %ob_refcnt421, align 8
  %cmp423 = icmp ne i64 %dec422, 0
  br i1 %cmp423, label %if.then.424, label %if.else.425

if.then.424:                                      ; preds = %do.body.419
  br label %if.end.428

if.else.425:                                      ; preds = %do.body.419
  %258 = load %struct._object*, %struct._object** %_py_decref_tmp420, align 8
  %ob_type426 = getelementptr inbounds %struct._object, %struct._object* %258, i32 0, i32 1
  %259 = load %struct._typeobject*, %struct._typeobject** %ob_type426, align 8
  %tp_dealloc427 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %259, i32 0, i32 4
  %260 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc427, align 8
  %261 = load %struct._object*, %struct._object** %_py_decref_tmp420, align 8
  call void %260(%struct._object* %261)
  br label %if.end.428

if.end.428:                                       ; preds = %if.else.425, %if.then.424
  br label %do.end.429

do.end.429:                                       ; preds = %if.end.428
  br label %sw.epilog

sw.bb.430:                                        ; preds = %if.end
  %262 = load %struct._typeobject*, %struct._typeobject** @DictComp_type, align 8
  %call431 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %262, %struct._object* null, %struct._object* null)
  store %struct._object* %call431, %struct._object** %result, align 8
  %263 = load %struct._object*, %struct._object** %result, align 8
  %tobool432 = icmp ne %struct._object* %263, null
  br i1 %tobool432, label %if.end.434, label %if.then.433

if.then.433:                                      ; preds = %sw.bb.430
  br label %failed

if.end.434:                                       ; preds = %sw.bb.430
  %264 = load %struct._expr*, %struct._expr** %o, align 8
  %v435 = getelementptr inbounds %struct._expr, %struct._expr* %264, i32 0, i32 1
  %DictComp = bitcast %union.anon.2* %v435 to %struct.anon.12*
  %key = getelementptr inbounds %struct.anon.12, %struct.anon.12* %DictComp, i32 0, i32 0
  %265 = load %struct._expr*, %struct._expr** %key, align 8
  %266 = bitcast %struct._expr* %265 to i8*
  %call436 = call %struct._object* @ast2obj_expr(i8* %266)
  store %struct._object* %call436, %struct._object** %value, align 8
  %267 = load %struct._object*, %struct._object** %value, align 8
  %tobool437 = icmp ne %struct._object* %267, null
  br i1 %tobool437, label %if.end.439, label %if.then.438

if.then.438:                                      ; preds = %if.end.434
  br label %failed

if.end.439:                                       ; preds = %if.end.434
  %268 = load %struct._object*, %struct._object** %result, align 8
  %269 = load %struct._object*, %struct._object** %value, align 8
  %call440 = call i32 @_PyObject_SetAttrId(%struct._object* %268, %struct._Py_Identifier* @PyId_key, %struct._object* %269)
  %cmp441 = icmp eq i32 %call440, -1
  br i1 %cmp441, label %if.then.442, label %if.end.443

if.then.442:                                      ; preds = %if.end.439
  br label %failed

if.end.443:                                       ; preds = %if.end.439
  br label %do.body.444

do.body.444:                                      ; preds = %if.end.443
  %270 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %270, %struct._object** %_py_decref_tmp445, align 8
  %271 = load %struct._object*, %struct._object** %_py_decref_tmp445, align 8
  %ob_refcnt446 = getelementptr inbounds %struct._object, %struct._object* %271, i32 0, i32 0
  %272 = load i64, i64* %ob_refcnt446, align 8
  %dec447 = add i64 %272, -1
  store i64 %dec447, i64* %ob_refcnt446, align 8
  %cmp448 = icmp ne i64 %dec447, 0
  br i1 %cmp448, label %if.then.449, label %if.else.450

if.then.449:                                      ; preds = %do.body.444
  br label %if.end.453

if.else.450:                                      ; preds = %do.body.444
  %273 = load %struct._object*, %struct._object** %_py_decref_tmp445, align 8
  %ob_type451 = getelementptr inbounds %struct._object, %struct._object* %273, i32 0, i32 1
  %274 = load %struct._typeobject*, %struct._typeobject** %ob_type451, align 8
  %tp_dealloc452 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %274, i32 0, i32 4
  %275 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc452, align 8
  %276 = load %struct._object*, %struct._object** %_py_decref_tmp445, align 8
  call void %275(%struct._object* %276)
  br label %if.end.453

if.end.453:                                       ; preds = %if.else.450, %if.then.449
  br label %do.end.454

do.end.454:                                       ; preds = %if.end.453
  %277 = load %struct._expr*, %struct._expr** %o, align 8
  %v455 = getelementptr inbounds %struct._expr, %struct._expr* %277, i32 0, i32 1
  %DictComp456 = bitcast %union.anon.2* %v455 to %struct.anon.12*
  %value457 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %DictComp456, i32 0, i32 1
  %278 = load %struct._expr*, %struct._expr** %value457, align 8
  %279 = bitcast %struct._expr* %278 to i8*
  %call458 = call %struct._object* @ast2obj_expr(i8* %279)
  store %struct._object* %call458, %struct._object** %value, align 8
  %280 = load %struct._object*, %struct._object** %value, align 8
  %tobool459 = icmp ne %struct._object* %280, null
  br i1 %tobool459, label %if.end.461, label %if.then.460

if.then.460:                                      ; preds = %do.end.454
  br label %failed

if.end.461:                                       ; preds = %do.end.454
  %281 = load %struct._object*, %struct._object** %result, align 8
  %282 = load %struct._object*, %struct._object** %value, align 8
  %call462 = call i32 @_PyObject_SetAttrId(%struct._object* %281, %struct._Py_Identifier* @PyId_value, %struct._object* %282)
  %cmp463 = icmp eq i32 %call462, -1
  br i1 %cmp463, label %if.then.464, label %if.end.465

if.then.464:                                      ; preds = %if.end.461
  br label %failed

if.end.465:                                       ; preds = %if.end.461
  br label %do.body.466

do.body.466:                                      ; preds = %if.end.465
  %283 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %283, %struct._object** %_py_decref_tmp467, align 8
  %284 = load %struct._object*, %struct._object** %_py_decref_tmp467, align 8
  %ob_refcnt468 = getelementptr inbounds %struct._object, %struct._object* %284, i32 0, i32 0
  %285 = load i64, i64* %ob_refcnt468, align 8
  %dec469 = add i64 %285, -1
  store i64 %dec469, i64* %ob_refcnt468, align 8
  %cmp470 = icmp ne i64 %dec469, 0
  br i1 %cmp470, label %if.then.471, label %if.else.472

if.then.471:                                      ; preds = %do.body.466
  br label %if.end.475

if.else.472:                                      ; preds = %do.body.466
  %286 = load %struct._object*, %struct._object** %_py_decref_tmp467, align 8
  %ob_type473 = getelementptr inbounds %struct._object, %struct._object* %286, i32 0, i32 1
  %287 = load %struct._typeobject*, %struct._typeobject** %ob_type473, align 8
  %tp_dealloc474 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %287, i32 0, i32 4
  %288 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc474, align 8
  %289 = load %struct._object*, %struct._object** %_py_decref_tmp467, align 8
  call void %288(%struct._object* %289)
  br label %if.end.475

if.end.475:                                       ; preds = %if.else.472, %if.then.471
  br label %do.end.476

do.end.476:                                       ; preds = %if.end.475
  %290 = load %struct._expr*, %struct._expr** %o, align 8
  %v477 = getelementptr inbounds %struct._expr, %struct._expr* %290, i32 0, i32 1
  %DictComp478 = bitcast %union.anon.2* %v477 to %struct.anon.12*
  %generators479 = getelementptr inbounds %struct.anon.12, %struct.anon.12* %DictComp478, i32 0, i32 2
  %291 = load %struct.asdl_seq*, %struct.asdl_seq** %generators479, align 8
  %call480 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %291, %struct._object* (i8*)* @ast2obj_comprehension)
  store %struct._object* %call480, %struct._object** %value, align 8
  %292 = load %struct._object*, %struct._object** %value, align 8
  %tobool481 = icmp ne %struct._object* %292, null
  br i1 %tobool481, label %if.end.483, label %if.then.482

if.then.482:                                      ; preds = %do.end.476
  br label %failed

if.end.483:                                       ; preds = %do.end.476
  %293 = load %struct._object*, %struct._object** %result, align 8
  %294 = load %struct._object*, %struct._object** %value, align 8
  %call484 = call i32 @_PyObject_SetAttrId(%struct._object* %293, %struct._Py_Identifier* @PyId_generators, %struct._object* %294)
  %cmp485 = icmp eq i32 %call484, -1
  br i1 %cmp485, label %if.then.486, label %if.end.487

if.then.486:                                      ; preds = %if.end.483
  br label %failed

if.end.487:                                       ; preds = %if.end.483
  br label %do.body.488

do.body.488:                                      ; preds = %if.end.487
  %295 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %295, %struct._object** %_py_decref_tmp489, align 8
  %296 = load %struct._object*, %struct._object** %_py_decref_tmp489, align 8
  %ob_refcnt490 = getelementptr inbounds %struct._object, %struct._object* %296, i32 0, i32 0
  %297 = load i64, i64* %ob_refcnt490, align 8
  %dec491 = add i64 %297, -1
  store i64 %dec491, i64* %ob_refcnt490, align 8
  %cmp492 = icmp ne i64 %dec491, 0
  br i1 %cmp492, label %if.then.493, label %if.else.494

if.then.493:                                      ; preds = %do.body.488
  br label %if.end.497

if.else.494:                                      ; preds = %do.body.488
  %298 = load %struct._object*, %struct._object** %_py_decref_tmp489, align 8
  %ob_type495 = getelementptr inbounds %struct._object, %struct._object* %298, i32 0, i32 1
  %299 = load %struct._typeobject*, %struct._typeobject** %ob_type495, align 8
  %tp_dealloc496 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %299, i32 0, i32 4
  %300 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc496, align 8
  %301 = load %struct._object*, %struct._object** %_py_decref_tmp489, align 8
  call void %300(%struct._object* %301)
  br label %if.end.497

if.end.497:                                       ; preds = %if.else.494, %if.then.493
  br label %do.end.498

do.end.498:                                       ; preds = %if.end.497
  br label %sw.epilog

sw.bb.499:                                        ; preds = %if.end
  %302 = load %struct._typeobject*, %struct._typeobject** @GeneratorExp_type, align 8
  %call500 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %302, %struct._object* null, %struct._object* null)
  store %struct._object* %call500, %struct._object** %result, align 8
  %303 = load %struct._object*, %struct._object** %result, align 8
  %tobool501 = icmp ne %struct._object* %303, null
  br i1 %tobool501, label %if.end.503, label %if.then.502

if.then.502:                                      ; preds = %sw.bb.499
  br label %failed

if.end.503:                                       ; preds = %sw.bb.499
  %304 = load %struct._expr*, %struct._expr** %o, align 8
  %v504 = getelementptr inbounds %struct._expr, %struct._expr* %304, i32 0, i32 1
  %GeneratorExp = bitcast %union.anon.2* %v504 to %struct.anon.13*
  %elt505 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %GeneratorExp, i32 0, i32 0
  %305 = load %struct._expr*, %struct._expr** %elt505, align 8
  %306 = bitcast %struct._expr* %305 to i8*
  %call506 = call %struct._object* @ast2obj_expr(i8* %306)
  store %struct._object* %call506, %struct._object** %value, align 8
  %307 = load %struct._object*, %struct._object** %value, align 8
  %tobool507 = icmp ne %struct._object* %307, null
  br i1 %tobool507, label %if.end.509, label %if.then.508

if.then.508:                                      ; preds = %if.end.503
  br label %failed

if.end.509:                                       ; preds = %if.end.503
  %308 = load %struct._object*, %struct._object** %result, align 8
  %309 = load %struct._object*, %struct._object** %value, align 8
  %call510 = call i32 @_PyObject_SetAttrId(%struct._object* %308, %struct._Py_Identifier* @PyId_elt, %struct._object* %309)
  %cmp511 = icmp eq i32 %call510, -1
  br i1 %cmp511, label %if.then.512, label %if.end.513

if.then.512:                                      ; preds = %if.end.509
  br label %failed

if.end.513:                                       ; preds = %if.end.509
  br label %do.body.514

do.body.514:                                      ; preds = %if.end.513
  %310 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %310, %struct._object** %_py_decref_tmp515, align 8
  %311 = load %struct._object*, %struct._object** %_py_decref_tmp515, align 8
  %ob_refcnt516 = getelementptr inbounds %struct._object, %struct._object* %311, i32 0, i32 0
  %312 = load i64, i64* %ob_refcnt516, align 8
  %dec517 = add i64 %312, -1
  store i64 %dec517, i64* %ob_refcnt516, align 8
  %cmp518 = icmp ne i64 %dec517, 0
  br i1 %cmp518, label %if.then.519, label %if.else.520

if.then.519:                                      ; preds = %do.body.514
  br label %if.end.523

if.else.520:                                      ; preds = %do.body.514
  %313 = load %struct._object*, %struct._object** %_py_decref_tmp515, align 8
  %ob_type521 = getelementptr inbounds %struct._object, %struct._object* %313, i32 0, i32 1
  %314 = load %struct._typeobject*, %struct._typeobject** %ob_type521, align 8
  %tp_dealloc522 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %314, i32 0, i32 4
  %315 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc522, align 8
  %316 = load %struct._object*, %struct._object** %_py_decref_tmp515, align 8
  call void %315(%struct._object* %316)
  br label %if.end.523

if.end.523:                                       ; preds = %if.else.520, %if.then.519
  br label %do.end.524

do.end.524:                                       ; preds = %if.end.523
  %317 = load %struct._expr*, %struct._expr** %o, align 8
  %v525 = getelementptr inbounds %struct._expr, %struct._expr* %317, i32 0, i32 1
  %GeneratorExp526 = bitcast %union.anon.2* %v525 to %struct.anon.13*
  %generators527 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %GeneratorExp526, i32 0, i32 1
  %318 = load %struct.asdl_seq*, %struct.asdl_seq** %generators527, align 8
  %call528 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %318, %struct._object* (i8*)* @ast2obj_comprehension)
  store %struct._object* %call528, %struct._object** %value, align 8
  %319 = load %struct._object*, %struct._object** %value, align 8
  %tobool529 = icmp ne %struct._object* %319, null
  br i1 %tobool529, label %if.end.531, label %if.then.530

if.then.530:                                      ; preds = %do.end.524
  br label %failed

if.end.531:                                       ; preds = %do.end.524
  %320 = load %struct._object*, %struct._object** %result, align 8
  %321 = load %struct._object*, %struct._object** %value, align 8
  %call532 = call i32 @_PyObject_SetAttrId(%struct._object* %320, %struct._Py_Identifier* @PyId_generators, %struct._object* %321)
  %cmp533 = icmp eq i32 %call532, -1
  br i1 %cmp533, label %if.then.534, label %if.end.535

if.then.534:                                      ; preds = %if.end.531
  br label %failed

if.end.535:                                       ; preds = %if.end.531
  br label %do.body.536

do.body.536:                                      ; preds = %if.end.535
  %322 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %322, %struct._object** %_py_decref_tmp537, align 8
  %323 = load %struct._object*, %struct._object** %_py_decref_tmp537, align 8
  %ob_refcnt538 = getelementptr inbounds %struct._object, %struct._object* %323, i32 0, i32 0
  %324 = load i64, i64* %ob_refcnt538, align 8
  %dec539 = add i64 %324, -1
  store i64 %dec539, i64* %ob_refcnt538, align 8
  %cmp540 = icmp ne i64 %dec539, 0
  br i1 %cmp540, label %if.then.541, label %if.else.542

if.then.541:                                      ; preds = %do.body.536
  br label %if.end.545

if.else.542:                                      ; preds = %do.body.536
  %325 = load %struct._object*, %struct._object** %_py_decref_tmp537, align 8
  %ob_type543 = getelementptr inbounds %struct._object, %struct._object* %325, i32 0, i32 1
  %326 = load %struct._typeobject*, %struct._typeobject** %ob_type543, align 8
  %tp_dealloc544 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %326, i32 0, i32 4
  %327 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc544, align 8
  %328 = load %struct._object*, %struct._object** %_py_decref_tmp537, align 8
  call void %327(%struct._object* %328)
  br label %if.end.545

if.end.545:                                       ; preds = %if.else.542, %if.then.541
  br label %do.end.546

do.end.546:                                       ; preds = %if.end.545
  br label %sw.epilog

sw.bb.547:                                        ; preds = %if.end
  %329 = load %struct._typeobject*, %struct._typeobject** @Yield_type, align 8
  %call548 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %329, %struct._object* null, %struct._object* null)
  store %struct._object* %call548, %struct._object** %result, align 8
  %330 = load %struct._object*, %struct._object** %result, align 8
  %tobool549 = icmp ne %struct._object* %330, null
  br i1 %tobool549, label %if.end.551, label %if.then.550

if.then.550:                                      ; preds = %sw.bb.547
  br label %failed

if.end.551:                                       ; preds = %sw.bb.547
  %331 = load %struct._expr*, %struct._expr** %o, align 8
  %v552 = getelementptr inbounds %struct._expr, %struct._expr* %331, i32 0, i32 1
  %Yield = bitcast %union.anon.2* %v552 to %struct.anon.14*
  %value553 = getelementptr inbounds %struct.anon.14, %struct.anon.14* %Yield, i32 0, i32 0
  %332 = load %struct._expr*, %struct._expr** %value553, align 8
  %333 = bitcast %struct._expr* %332 to i8*
  %call554 = call %struct._object* @ast2obj_expr(i8* %333)
  store %struct._object* %call554, %struct._object** %value, align 8
  %334 = load %struct._object*, %struct._object** %value, align 8
  %tobool555 = icmp ne %struct._object* %334, null
  br i1 %tobool555, label %if.end.557, label %if.then.556

if.then.556:                                      ; preds = %if.end.551
  br label %failed

if.end.557:                                       ; preds = %if.end.551
  %335 = load %struct._object*, %struct._object** %result, align 8
  %336 = load %struct._object*, %struct._object** %value, align 8
  %call558 = call i32 @_PyObject_SetAttrId(%struct._object* %335, %struct._Py_Identifier* @PyId_value, %struct._object* %336)
  %cmp559 = icmp eq i32 %call558, -1
  br i1 %cmp559, label %if.then.560, label %if.end.561

if.then.560:                                      ; preds = %if.end.557
  br label %failed

if.end.561:                                       ; preds = %if.end.557
  br label %do.body.562

do.body.562:                                      ; preds = %if.end.561
  %337 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %337, %struct._object** %_py_decref_tmp563, align 8
  %338 = load %struct._object*, %struct._object** %_py_decref_tmp563, align 8
  %ob_refcnt564 = getelementptr inbounds %struct._object, %struct._object* %338, i32 0, i32 0
  %339 = load i64, i64* %ob_refcnt564, align 8
  %dec565 = add i64 %339, -1
  store i64 %dec565, i64* %ob_refcnt564, align 8
  %cmp566 = icmp ne i64 %dec565, 0
  br i1 %cmp566, label %if.then.567, label %if.else.568

if.then.567:                                      ; preds = %do.body.562
  br label %if.end.571

if.else.568:                                      ; preds = %do.body.562
  %340 = load %struct._object*, %struct._object** %_py_decref_tmp563, align 8
  %ob_type569 = getelementptr inbounds %struct._object, %struct._object* %340, i32 0, i32 1
  %341 = load %struct._typeobject*, %struct._typeobject** %ob_type569, align 8
  %tp_dealloc570 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %341, i32 0, i32 4
  %342 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc570, align 8
  %343 = load %struct._object*, %struct._object** %_py_decref_tmp563, align 8
  call void %342(%struct._object* %343)
  br label %if.end.571

if.end.571:                                       ; preds = %if.else.568, %if.then.567
  br label %do.end.572

do.end.572:                                       ; preds = %if.end.571
  br label %sw.epilog

sw.bb.573:                                        ; preds = %if.end
  %344 = load %struct._typeobject*, %struct._typeobject** @YieldFrom_type, align 8
  %call574 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %344, %struct._object* null, %struct._object* null)
  store %struct._object* %call574, %struct._object** %result, align 8
  %345 = load %struct._object*, %struct._object** %result, align 8
  %tobool575 = icmp ne %struct._object* %345, null
  br i1 %tobool575, label %if.end.577, label %if.then.576

if.then.576:                                      ; preds = %sw.bb.573
  br label %failed

if.end.577:                                       ; preds = %sw.bb.573
  %346 = load %struct._expr*, %struct._expr** %o, align 8
  %v578 = getelementptr inbounds %struct._expr, %struct._expr* %346, i32 0, i32 1
  %YieldFrom = bitcast %union.anon.2* %v578 to %struct.anon.15*
  %value579 = getelementptr inbounds %struct.anon.15, %struct.anon.15* %YieldFrom, i32 0, i32 0
  %347 = load %struct._expr*, %struct._expr** %value579, align 8
  %348 = bitcast %struct._expr* %347 to i8*
  %call580 = call %struct._object* @ast2obj_expr(i8* %348)
  store %struct._object* %call580, %struct._object** %value, align 8
  %349 = load %struct._object*, %struct._object** %value, align 8
  %tobool581 = icmp ne %struct._object* %349, null
  br i1 %tobool581, label %if.end.583, label %if.then.582

if.then.582:                                      ; preds = %if.end.577
  br label %failed

if.end.583:                                       ; preds = %if.end.577
  %350 = load %struct._object*, %struct._object** %result, align 8
  %351 = load %struct._object*, %struct._object** %value, align 8
  %call584 = call i32 @_PyObject_SetAttrId(%struct._object* %350, %struct._Py_Identifier* @PyId_value, %struct._object* %351)
  %cmp585 = icmp eq i32 %call584, -1
  br i1 %cmp585, label %if.then.586, label %if.end.587

if.then.586:                                      ; preds = %if.end.583
  br label %failed

if.end.587:                                       ; preds = %if.end.583
  br label %do.body.588

do.body.588:                                      ; preds = %if.end.587
  %352 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %352, %struct._object** %_py_decref_tmp589, align 8
  %353 = load %struct._object*, %struct._object** %_py_decref_tmp589, align 8
  %ob_refcnt590 = getelementptr inbounds %struct._object, %struct._object* %353, i32 0, i32 0
  %354 = load i64, i64* %ob_refcnt590, align 8
  %dec591 = add i64 %354, -1
  store i64 %dec591, i64* %ob_refcnt590, align 8
  %cmp592 = icmp ne i64 %dec591, 0
  br i1 %cmp592, label %if.then.593, label %if.else.594

if.then.593:                                      ; preds = %do.body.588
  br label %if.end.597

if.else.594:                                      ; preds = %do.body.588
  %355 = load %struct._object*, %struct._object** %_py_decref_tmp589, align 8
  %ob_type595 = getelementptr inbounds %struct._object, %struct._object* %355, i32 0, i32 1
  %356 = load %struct._typeobject*, %struct._typeobject** %ob_type595, align 8
  %tp_dealloc596 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %356, i32 0, i32 4
  %357 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc596, align 8
  %358 = load %struct._object*, %struct._object** %_py_decref_tmp589, align 8
  call void %357(%struct._object* %358)
  br label %if.end.597

if.end.597:                                       ; preds = %if.else.594, %if.then.593
  br label %do.end.598

do.end.598:                                       ; preds = %if.end.597
  br label %sw.epilog

sw.bb.599:                                        ; preds = %if.end
  %359 = load %struct._typeobject*, %struct._typeobject** @Compare_type, align 8
  %call600 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %359, %struct._object* null, %struct._object* null)
  store %struct._object* %call600, %struct._object** %result, align 8
  %360 = load %struct._object*, %struct._object** %result, align 8
  %tobool601 = icmp ne %struct._object* %360, null
  br i1 %tobool601, label %if.end.603, label %if.then.602

if.then.602:                                      ; preds = %sw.bb.599
  br label %failed

if.end.603:                                       ; preds = %sw.bb.599
  %361 = load %struct._expr*, %struct._expr** %o, align 8
  %v604 = getelementptr inbounds %struct._expr, %struct._expr* %361, i32 0, i32 1
  %Compare = bitcast %union.anon.2* %v604 to %struct.anon.16*
  %left605 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %Compare, i32 0, i32 0
  %362 = load %struct._expr*, %struct._expr** %left605, align 8
  %363 = bitcast %struct._expr* %362 to i8*
  %call606 = call %struct._object* @ast2obj_expr(i8* %363)
  store %struct._object* %call606, %struct._object** %value, align 8
  %364 = load %struct._object*, %struct._object** %value, align 8
  %tobool607 = icmp ne %struct._object* %364, null
  br i1 %tobool607, label %if.end.609, label %if.then.608

if.then.608:                                      ; preds = %if.end.603
  br label %failed

if.end.609:                                       ; preds = %if.end.603
  %365 = load %struct._object*, %struct._object** %result, align 8
  %366 = load %struct._object*, %struct._object** %value, align 8
  %call610 = call i32 @_PyObject_SetAttrId(%struct._object* %365, %struct._Py_Identifier* @PyId_left, %struct._object* %366)
  %cmp611 = icmp eq i32 %call610, -1
  br i1 %cmp611, label %if.then.612, label %if.end.613

if.then.612:                                      ; preds = %if.end.609
  br label %failed

if.end.613:                                       ; preds = %if.end.609
  br label %do.body.614

do.body.614:                                      ; preds = %if.end.613
  %367 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %367, %struct._object** %_py_decref_tmp615, align 8
  %368 = load %struct._object*, %struct._object** %_py_decref_tmp615, align 8
  %ob_refcnt616 = getelementptr inbounds %struct._object, %struct._object* %368, i32 0, i32 0
  %369 = load i64, i64* %ob_refcnt616, align 8
  %dec617 = add i64 %369, -1
  store i64 %dec617, i64* %ob_refcnt616, align 8
  %cmp618 = icmp ne i64 %dec617, 0
  br i1 %cmp618, label %if.then.619, label %if.else.620

if.then.619:                                      ; preds = %do.body.614
  br label %if.end.623

if.else.620:                                      ; preds = %do.body.614
  %370 = load %struct._object*, %struct._object** %_py_decref_tmp615, align 8
  %ob_type621 = getelementptr inbounds %struct._object, %struct._object* %370, i32 0, i32 1
  %371 = load %struct._typeobject*, %struct._typeobject** %ob_type621, align 8
  %tp_dealloc622 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %371, i32 0, i32 4
  %372 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc622, align 8
  %373 = load %struct._object*, %struct._object** %_py_decref_tmp615, align 8
  call void %372(%struct._object* %373)
  br label %if.end.623

if.end.623:                                       ; preds = %if.else.620, %if.then.619
  br label %do.end.624

do.end.624:                                       ; preds = %if.end.623
  %374 = load %struct._expr*, %struct._expr** %o, align 8
  %v625 = getelementptr inbounds %struct._expr, %struct._expr* %374, i32 0, i32 1
  %Compare626 = bitcast %union.anon.2* %v625 to %struct.anon.16*
  %ops = getelementptr inbounds %struct.anon.16, %struct.anon.16* %Compare626, i32 0, i32 1
  %375 = load %struct.asdl_int_seq*, %struct.asdl_int_seq** %ops, align 8
  %cmp627 = icmp eq %struct.asdl_int_seq* %375, null
  br i1 %cmp627, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end.624
  br label %cond.end

cond.false:                                       ; preds = %do.end.624
  %376 = load %struct._expr*, %struct._expr** %o, align 8
  %v628 = getelementptr inbounds %struct._expr, %struct._expr* %376, i32 0, i32 1
  %Compare629 = bitcast %union.anon.2* %v628 to %struct.anon.16*
  %ops630 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %Compare629, i32 0, i32 1
  %377 = load %struct.asdl_int_seq*, %struct.asdl_int_seq** %ops630, align 8
  %size = getelementptr inbounds %struct.asdl_int_seq, %struct.asdl_int_seq* %377, i32 0, i32 0
  %378 = load i64, i64* %size, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %378, %cond.false ]
  store i64 %cond, i64* %n, align 8
  %379 = load i64, i64* %n, align 8
  %call631 = call %struct._object* @PyList_New(i64 %379)
  store %struct._object* %call631, %struct._object** %value, align 8
  %380 = load %struct._object*, %struct._object** %value, align 8
  %tobool632 = icmp ne %struct._object* %380, null
  br i1 %tobool632, label %if.end.634, label %if.then.633

if.then.633:                                      ; preds = %cond.end
  br label %failed

if.end.634:                                       ; preds = %cond.end
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.634
  %381 = load i64, i64* %i, align 8
  %382 = load i64, i64* %n, align 8
  %cmp635 = icmp slt i64 %381, %382
  br i1 %cmp635, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %383 = load i64, i64* %i, align 8
  %384 = load %struct._expr*, %struct._expr** %o, align 8
  %v636 = getelementptr inbounds %struct._expr, %struct._expr* %384, i32 0, i32 1
  %Compare637 = bitcast %union.anon.2* %v636 to %struct.anon.16*
  %ops638 = getelementptr inbounds %struct.anon.16, %struct.anon.16* %Compare637, i32 0, i32 1
  %385 = load %struct.asdl_int_seq*, %struct.asdl_int_seq** %ops638, align 8
  %elements = getelementptr inbounds %struct.asdl_int_seq, %struct.asdl_int_seq* %385, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %elements, i32 0, i64 %383
  %386 = load i32, i32* %arrayidx, align 4
  %call639 = call %struct._object* @ast2obj_cmpop(i32 %386)
  %387 = load i64, i64* %i, align 8
  %388 = load %struct._object*, %struct._object** %value, align 8
  %389 = bitcast %struct._object* %388 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %389, i32 0, i32 1
  %390 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx640 = getelementptr %struct._object*, %struct._object** %390, i64 %387
  store %struct._object* %call639, %struct._object** %arrayidx640, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %391 = load i64, i64* %i, align 8
  %inc641 = add i64 %391, 1
  store i64 %inc641, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %392 = load %struct._object*, %struct._object** %value, align 8
  %tobool642 = icmp ne %struct._object* %392, null
  br i1 %tobool642, label %if.end.644, label %if.then.643

if.then.643:                                      ; preds = %for.end
  br label %failed

if.end.644:                                       ; preds = %for.end
  %393 = load %struct._object*, %struct._object** %result, align 8
  %394 = load %struct._object*, %struct._object** %value, align 8
  %call645 = call i32 @_PyObject_SetAttrId(%struct._object* %393, %struct._Py_Identifier* @PyId_ops, %struct._object* %394)
  %cmp646 = icmp eq i32 %call645, -1
  br i1 %cmp646, label %if.then.647, label %if.end.648

if.then.647:                                      ; preds = %if.end.644
  br label %failed

if.end.648:                                       ; preds = %if.end.644
  br label %do.body.649

do.body.649:                                      ; preds = %if.end.648
  %395 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %395, %struct._object** %_py_decref_tmp650, align 8
  %396 = load %struct._object*, %struct._object** %_py_decref_tmp650, align 8
  %ob_refcnt651 = getelementptr inbounds %struct._object, %struct._object* %396, i32 0, i32 0
  %397 = load i64, i64* %ob_refcnt651, align 8
  %dec652 = add i64 %397, -1
  store i64 %dec652, i64* %ob_refcnt651, align 8
  %cmp653 = icmp ne i64 %dec652, 0
  br i1 %cmp653, label %if.then.654, label %if.else.655

if.then.654:                                      ; preds = %do.body.649
  br label %if.end.658

if.else.655:                                      ; preds = %do.body.649
  %398 = load %struct._object*, %struct._object** %_py_decref_tmp650, align 8
  %ob_type656 = getelementptr inbounds %struct._object, %struct._object* %398, i32 0, i32 1
  %399 = load %struct._typeobject*, %struct._typeobject** %ob_type656, align 8
  %tp_dealloc657 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %399, i32 0, i32 4
  %400 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc657, align 8
  %401 = load %struct._object*, %struct._object** %_py_decref_tmp650, align 8
  call void %400(%struct._object* %401)
  br label %if.end.658

if.end.658:                                       ; preds = %if.else.655, %if.then.654
  br label %do.end.659

do.end.659:                                       ; preds = %if.end.658
  %402 = load %struct._expr*, %struct._expr** %o, align 8
  %v660 = getelementptr inbounds %struct._expr, %struct._expr* %402, i32 0, i32 1
  %Compare661 = bitcast %union.anon.2* %v660 to %struct.anon.16*
  %comparators = getelementptr inbounds %struct.anon.16, %struct.anon.16* %Compare661, i32 0, i32 2
  %403 = load %struct.asdl_seq*, %struct.asdl_seq** %comparators, align 8
  %call662 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %403, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call662, %struct._object** %value, align 8
  %404 = load %struct._object*, %struct._object** %value, align 8
  %tobool663 = icmp ne %struct._object* %404, null
  br i1 %tobool663, label %if.end.665, label %if.then.664

if.then.664:                                      ; preds = %do.end.659
  br label %failed

if.end.665:                                       ; preds = %do.end.659
  %405 = load %struct._object*, %struct._object** %result, align 8
  %406 = load %struct._object*, %struct._object** %value, align 8
  %call666 = call i32 @_PyObject_SetAttrId(%struct._object* %405, %struct._Py_Identifier* @PyId_comparators, %struct._object* %406)
  %cmp667 = icmp eq i32 %call666, -1
  br i1 %cmp667, label %if.then.668, label %if.end.669

if.then.668:                                      ; preds = %if.end.665
  br label %failed

if.end.669:                                       ; preds = %if.end.665
  br label %do.body.670

do.body.670:                                      ; preds = %if.end.669
  %407 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %407, %struct._object** %_py_decref_tmp671, align 8
  %408 = load %struct._object*, %struct._object** %_py_decref_tmp671, align 8
  %ob_refcnt672 = getelementptr inbounds %struct._object, %struct._object* %408, i32 0, i32 0
  %409 = load i64, i64* %ob_refcnt672, align 8
  %dec673 = add i64 %409, -1
  store i64 %dec673, i64* %ob_refcnt672, align 8
  %cmp674 = icmp ne i64 %dec673, 0
  br i1 %cmp674, label %if.then.675, label %if.else.676

if.then.675:                                      ; preds = %do.body.670
  br label %if.end.679

if.else.676:                                      ; preds = %do.body.670
  %410 = load %struct._object*, %struct._object** %_py_decref_tmp671, align 8
  %ob_type677 = getelementptr inbounds %struct._object, %struct._object* %410, i32 0, i32 1
  %411 = load %struct._typeobject*, %struct._typeobject** %ob_type677, align 8
  %tp_dealloc678 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %411, i32 0, i32 4
  %412 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc678, align 8
  %413 = load %struct._object*, %struct._object** %_py_decref_tmp671, align 8
  call void %412(%struct._object* %413)
  br label %if.end.679

if.end.679:                                       ; preds = %if.else.676, %if.then.675
  br label %do.end.680

do.end.680:                                       ; preds = %if.end.679
  br label %sw.epilog

sw.bb.681:                                        ; preds = %if.end
  %414 = load %struct._typeobject*, %struct._typeobject** @Call_type, align 8
  %call682 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %414, %struct._object* null, %struct._object* null)
  store %struct._object* %call682, %struct._object** %result, align 8
  %415 = load %struct._object*, %struct._object** %result, align 8
  %tobool683 = icmp ne %struct._object* %415, null
  br i1 %tobool683, label %if.end.685, label %if.then.684

if.then.684:                                      ; preds = %sw.bb.681
  br label %failed

if.end.685:                                       ; preds = %sw.bb.681
  %416 = load %struct._expr*, %struct._expr** %o, align 8
  %v686 = getelementptr inbounds %struct._expr, %struct._expr* %416, i32 0, i32 1
  %Call = bitcast %union.anon.2* %v686 to %struct.anon.17*
  %func = getelementptr inbounds %struct.anon.17, %struct.anon.17* %Call, i32 0, i32 0
  %417 = load %struct._expr*, %struct._expr** %func, align 8
  %418 = bitcast %struct._expr* %417 to i8*
  %call687 = call %struct._object* @ast2obj_expr(i8* %418)
  store %struct._object* %call687, %struct._object** %value, align 8
  %419 = load %struct._object*, %struct._object** %value, align 8
  %tobool688 = icmp ne %struct._object* %419, null
  br i1 %tobool688, label %if.end.690, label %if.then.689

if.then.689:                                      ; preds = %if.end.685
  br label %failed

if.end.690:                                       ; preds = %if.end.685
  %420 = load %struct._object*, %struct._object** %result, align 8
  %421 = load %struct._object*, %struct._object** %value, align 8
  %call691 = call i32 @_PyObject_SetAttrId(%struct._object* %420, %struct._Py_Identifier* @PyId_func, %struct._object* %421)
  %cmp692 = icmp eq i32 %call691, -1
  br i1 %cmp692, label %if.then.693, label %if.end.694

if.then.693:                                      ; preds = %if.end.690
  br label %failed

if.end.694:                                       ; preds = %if.end.690
  br label %do.body.695

do.body.695:                                      ; preds = %if.end.694
  %422 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %422, %struct._object** %_py_decref_tmp696, align 8
  %423 = load %struct._object*, %struct._object** %_py_decref_tmp696, align 8
  %ob_refcnt697 = getelementptr inbounds %struct._object, %struct._object* %423, i32 0, i32 0
  %424 = load i64, i64* %ob_refcnt697, align 8
  %dec698 = add i64 %424, -1
  store i64 %dec698, i64* %ob_refcnt697, align 8
  %cmp699 = icmp ne i64 %dec698, 0
  br i1 %cmp699, label %if.then.700, label %if.else.701

if.then.700:                                      ; preds = %do.body.695
  br label %if.end.704

if.else.701:                                      ; preds = %do.body.695
  %425 = load %struct._object*, %struct._object** %_py_decref_tmp696, align 8
  %ob_type702 = getelementptr inbounds %struct._object, %struct._object* %425, i32 0, i32 1
  %426 = load %struct._typeobject*, %struct._typeobject** %ob_type702, align 8
  %tp_dealloc703 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %426, i32 0, i32 4
  %427 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc703, align 8
  %428 = load %struct._object*, %struct._object** %_py_decref_tmp696, align 8
  call void %427(%struct._object* %428)
  br label %if.end.704

if.end.704:                                       ; preds = %if.else.701, %if.then.700
  br label %do.end.705

do.end.705:                                       ; preds = %if.end.704
  %429 = load %struct._expr*, %struct._expr** %o, align 8
  %v706 = getelementptr inbounds %struct._expr, %struct._expr* %429, i32 0, i32 1
  %Call707 = bitcast %union.anon.2* %v706 to %struct.anon.17*
  %args708 = getelementptr inbounds %struct.anon.17, %struct.anon.17* %Call707, i32 0, i32 1
  %430 = load %struct.asdl_seq*, %struct.asdl_seq** %args708, align 8
  %call709 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %430, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call709, %struct._object** %value, align 8
  %431 = load %struct._object*, %struct._object** %value, align 8
  %tobool710 = icmp ne %struct._object* %431, null
  br i1 %tobool710, label %if.end.712, label %if.then.711

if.then.711:                                      ; preds = %do.end.705
  br label %failed

if.end.712:                                       ; preds = %do.end.705
  %432 = load %struct._object*, %struct._object** %result, align 8
  %433 = load %struct._object*, %struct._object** %value, align 8
  %call713 = call i32 @_PyObject_SetAttrId(%struct._object* %432, %struct._Py_Identifier* @PyId_args, %struct._object* %433)
  %cmp714 = icmp eq i32 %call713, -1
  br i1 %cmp714, label %if.then.715, label %if.end.716

if.then.715:                                      ; preds = %if.end.712
  br label %failed

if.end.716:                                       ; preds = %if.end.712
  br label %do.body.717

do.body.717:                                      ; preds = %if.end.716
  %434 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %434, %struct._object** %_py_decref_tmp718, align 8
  %435 = load %struct._object*, %struct._object** %_py_decref_tmp718, align 8
  %ob_refcnt719 = getelementptr inbounds %struct._object, %struct._object* %435, i32 0, i32 0
  %436 = load i64, i64* %ob_refcnt719, align 8
  %dec720 = add i64 %436, -1
  store i64 %dec720, i64* %ob_refcnt719, align 8
  %cmp721 = icmp ne i64 %dec720, 0
  br i1 %cmp721, label %if.then.722, label %if.else.723

if.then.722:                                      ; preds = %do.body.717
  br label %if.end.726

if.else.723:                                      ; preds = %do.body.717
  %437 = load %struct._object*, %struct._object** %_py_decref_tmp718, align 8
  %ob_type724 = getelementptr inbounds %struct._object, %struct._object* %437, i32 0, i32 1
  %438 = load %struct._typeobject*, %struct._typeobject** %ob_type724, align 8
  %tp_dealloc725 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %438, i32 0, i32 4
  %439 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc725, align 8
  %440 = load %struct._object*, %struct._object** %_py_decref_tmp718, align 8
  call void %439(%struct._object* %440)
  br label %if.end.726

if.end.726:                                       ; preds = %if.else.723, %if.then.722
  br label %do.end.727

do.end.727:                                       ; preds = %if.end.726
  %441 = load %struct._expr*, %struct._expr** %o, align 8
  %v728 = getelementptr inbounds %struct._expr, %struct._expr* %441, i32 0, i32 1
  %Call729 = bitcast %union.anon.2* %v728 to %struct.anon.17*
  %keywords = getelementptr inbounds %struct.anon.17, %struct.anon.17* %Call729, i32 0, i32 2
  %442 = load %struct.asdl_seq*, %struct.asdl_seq** %keywords, align 8
  %call730 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %442, %struct._object* (i8*)* @ast2obj_keyword)
  store %struct._object* %call730, %struct._object** %value, align 8
  %443 = load %struct._object*, %struct._object** %value, align 8
  %tobool731 = icmp ne %struct._object* %443, null
  br i1 %tobool731, label %if.end.733, label %if.then.732

if.then.732:                                      ; preds = %do.end.727
  br label %failed

if.end.733:                                       ; preds = %do.end.727
  %444 = load %struct._object*, %struct._object** %result, align 8
  %445 = load %struct._object*, %struct._object** %value, align 8
  %call734 = call i32 @_PyObject_SetAttrId(%struct._object* %444, %struct._Py_Identifier* @PyId_keywords, %struct._object* %445)
  %cmp735 = icmp eq i32 %call734, -1
  br i1 %cmp735, label %if.then.736, label %if.end.737

if.then.736:                                      ; preds = %if.end.733
  br label %failed

if.end.737:                                       ; preds = %if.end.733
  br label %do.body.738

do.body.738:                                      ; preds = %if.end.737
  %446 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %446, %struct._object** %_py_decref_tmp739, align 8
  %447 = load %struct._object*, %struct._object** %_py_decref_tmp739, align 8
  %ob_refcnt740 = getelementptr inbounds %struct._object, %struct._object* %447, i32 0, i32 0
  %448 = load i64, i64* %ob_refcnt740, align 8
  %dec741 = add i64 %448, -1
  store i64 %dec741, i64* %ob_refcnt740, align 8
  %cmp742 = icmp ne i64 %dec741, 0
  br i1 %cmp742, label %if.then.743, label %if.else.744

if.then.743:                                      ; preds = %do.body.738
  br label %if.end.747

if.else.744:                                      ; preds = %do.body.738
  %449 = load %struct._object*, %struct._object** %_py_decref_tmp739, align 8
  %ob_type745 = getelementptr inbounds %struct._object, %struct._object* %449, i32 0, i32 1
  %450 = load %struct._typeobject*, %struct._typeobject** %ob_type745, align 8
  %tp_dealloc746 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %450, i32 0, i32 4
  %451 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc746, align 8
  %452 = load %struct._object*, %struct._object** %_py_decref_tmp739, align 8
  call void %451(%struct._object* %452)
  br label %if.end.747

if.end.747:                                       ; preds = %if.else.744, %if.then.743
  br label %do.end.748

do.end.748:                                       ; preds = %if.end.747
  %453 = load %struct._expr*, %struct._expr** %o, align 8
  %v749 = getelementptr inbounds %struct._expr, %struct._expr* %453, i32 0, i32 1
  %Call750 = bitcast %union.anon.2* %v749 to %struct.anon.17*
  %starargs = getelementptr inbounds %struct.anon.17, %struct.anon.17* %Call750, i32 0, i32 3
  %454 = load %struct._expr*, %struct._expr** %starargs, align 8
  %455 = bitcast %struct._expr* %454 to i8*
  %call751 = call %struct._object* @ast2obj_expr(i8* %455)
  store %struct._object* %call751, %struct._object** %value, align 8
  %456 = load %struct._object*, %struct._object** %value, align 8
  %tobool752 = icmp ne %struct._object* %456, null
  br i1 %tobool752, label %if.end.754, label %if.then.753

if.then.753:                                      ; preds = %do.end.748
  br label %failed

if.end.754:                                       ; preds = %do.end.748
  %457 = load %struct._object*, %struct._object** %result, align 8
  %458 = load %struct._object*, %struct._object** %value, align 8
  %call755 = call i32 @_PyObject_SetAttrId(%struct._object* %457, %struct._Py_Identifier* @PyId_starargs, %struct._object* %458)
  %cmp756 = icmp eq i32 %call755, -1
  br i1 %cmp756, label %if.then.757, label %if.end.758

if.then.757:                                      ; preds = %if.end.754
  br label %failed

if.end.758:                                       ; preds = %if.end.754
  br label %do.body.759

do.body.759:                                      ; preds = %if.end.758
  %459 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %459, %struct._object** %_py_decref_tmp760, align 8
  %460 = load %struct._object*, %struct._object** %_py_decref_tmp760, align 8
  %ob_refcnt761 = getelementptr inbounds %struct._object, %struct._object* %460, i32 0, i32 0
  %461 = load i64, i64* %ob_refcnt761, align 8
  %dec762 = add i64 %461, -1
  store i64 %dec762, i64* %ob_refcnt761, align 8
  %cmp763 = icmp ne i64 %dec762, 0
  br i1 %cmp763, label %if.then.764, label %if.else.765

if.then.764:                                      ; preds = %do.body.759
  br label %if.end.768

if.else.765:                                      ; preds = %do.body.759
  %462 = load %struct._object*, %struct._object** %_py_decref_tmp760, align 8
  %ob_type766 = getelementptr inbounds %struct._object, %struct._object* %462, i32 0, i32 1
  %463 = load %struct._typeobject*, %struct._typeobject** %ob_type766, align 8
  %tp_dealloc767 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %463, i32 0, i32 4
  %464 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc767, align 8
  %465 = load %struct._object*, %struct._object** %_py_decref_tmp760, align 8
  call void %464(%struct._object* %465)
  br label %if.end.768

if.end.768:                                       ; preds = %if.else.765, %if.then.764
  br label %do.end.769

do.end.769:                                       ; preds = %if.end.768
  %466 = load %struct._expr*, %struct._expr** %o, align 8
  %v770 = getelementptr inbounds %struct._expr, %struct._expr* %466, i32 0, i32 1
  %Call771 = bitcast %union.anon.2* %v770 to %struct.anon.17*
  %kwargs = getelementptr inbounds %struct.anon.17, %struct.anon.17* %Call771, i32 0, i32 4
  %467 = load %struct._expr*, %struct._expr** %kwargs, align 8
  %468 = bitcast %struct._expr* %467 to i8*
  %call772 = call %struct._object* @ast2obj_expr(i8* %468)
  store %struct._object* %call772, %struct._object** %value, align 8
  %469 = load %struct._object*, %struct._object** %value, align 8
  %tobool773 = icmp ne %struct._object* %469, null
  br i1 %tobool773, label %if.end.775, label %if.then.774

if.then.774:                                      ; preds = %do.end.769
  br label %failed

if.end.775:                                       ; preds = %do.end.769
  %470 = load %struct._object*, %struct._object** %result, align 8
  %471 = load %struct._object*, %struct._object** %value, align 8
  %call776 = call i32 @_PyObject_SetAttrId(%struct._object* %470, %struct._Py_Identifier* @PyId_kwargs, %struct._object* %471)
  %cmp777 = icmp eq i32 %call776, -1
  br i1 %cmp777, label %if.then.778, label %if.end.779

if.then.778:                                      ; preds = %if.end.775
  br label %failed

if.end.779:                                       ; preds = %if.end.775
  br label %do.body.780

do.body.780:                                      ; preds = %if.end.779
  %472 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %472, %struct._object** %_py_decref_tmp781, align 8
  %473 = load %struct._object*, %struct._object** %_py_decref_tmp781, align 8
  %ob_refcnt782 = getelementptr inbounds %struct._object, %struct._object* %473, i32 0, i32 0
  %474 = load i64, i64* %ob_refcnt782, align 8
  %dec783 = add i64 %474, -1
  store i64 %dec783, i64* %ob_refcnt782, align 8
  %cmp784 = icmp ne i64 %dec783, 0
  br i1 %cmp784, label %if.then.785, label %if.else.786

if.then.785:                                      ; preds = %do.body.780
  br label %if.end.789

if.else.786:                                      ; preds = %do.body.780
  %475 = load %struct._object*, %struct._object** %_py_decref_tmp781, align 8
  %ob_type787 = getelementptr inbounds %struct._object, %struct._object* %475, i32 0, i32 1
  %476 = load %struct._typeobject*, %struct._typeobject** %ob_type787, align 8
  %tp_dealloc788 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %476, i32 0, i32 4
  %477 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc788, align 8
  %478 = load %struct._object*, %struct._object** %_py_decref_tmp781, align 8
  call void %477(%struct._object* %478)
  br label %if.end.789

if.end.789:                                       ; preds = %if.else.786, %if.then.785
  br label %do.end.790

do.end.790:                                       ; preds = %if.end.789
  br label %sw.epilog

sw.bb.791:                                        ; preds = %if.end
  %479 = load %struct._typeobject*, %struct._typeobject** @Num_type, align 8
  %call792 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %479, %struct._object* null, %struct._object* null)
  store %struct._object* %call792, %struct._object** %result, align 8
  %480 = load %struct._object*, %struct._object** %result, align 8
  %tobool793 = icmp ne %struct._object* %480, null
  br i1 %tobool793, label %if.end.795, label %if.then.794

if.then.794:                                      ; preds = %sw.bb.791
  br label %failed

if.end.795:                                       ; preds = %sw.bb.791
  %481 = load %struct._expr*, %struct._expr** %o, align 8
  %v796 = getelementptr inbounds %struct._expr, %struct._expr* %481, i32 0, i32 1
  %Num = bitcast %union.anon.2* %v796 to %struct.anon.18*
  %n797 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %Num, i32 0, i32 0
  %482 = load %struct._object*, %struct._object** %n797, align 8
  %483 = bitcast %struct._object* %482 to i8*
  %call798 = call %struct._object* @ast2obj_object(i8* %483)
  store %struct._object* %call798, %struct._object** %value, align 8
  %484 = load %struct._object*, %struct._object** %value, align 8
  %tobool799 = icmp ne %struct._object* %484, null
  br i1 %tobool799, label %if.end.801, label %if.then.800

if.then.800:                                      ; preds = %if.end.795
  br label %failed

if.end.801:                                       ; preds = %if.end.795
  %485 = load %struct._object*, %struct._object** %result, align 8
  %486 = load %struct._object*, %struct._object** %value, align 8
  %call802 = call i32 @_PyObject_SetAttrId(%struct._object* %485, %struct._Py_Identifier* @PyId_n, %struct._object* %486)
  %cmp803 = icmp eq i32 %call802, -1
  br i1 %cmp803, label %if.then.804, label %if.end.805

if.then.804:                                      ; preds = %if.end.801
  br label %failed

if.end.805:                                       ; preds = %if.end.801
  br label %do.body.806

do.body.806:                                      ; preds = %if.end.805
  %487 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %487, %struct._object** %_py_decref_tmp807, align 8
  %488 = load %struct._object*, %struct._object** %_py_decref_tmp807, align 8
  %ob_refcnt808 = getelementptr inbounds %struct._object, %struct._object* %488, i32 0, i32 0
  %489 = load i64, i64* %ob_refcnt808, align 8
  %dec809 = add i64 %489, -1
  store i64 %dec809, i64* %ob_refcnt808, align 8
  %cmp810 = icmp ne i64 %dec809, 0
  br i1 %cmp810, label %if.then.811, label %if.else.812

if.then.811:                                      ; preds = %do.body.806
  br label %if.end.815

if.else.812:                                      ; preds = %do.body.806
  %490 = load %struct._object*, %struct._object** %_py_decref_tmp807, align 8
  %ob_type813 = getelementptr inbounds %struct._object, %struct._object* %490, i32 0, i32 1
  %491 = load %struct._typeobject*, %struct._typeobject** %ob_type813, align 8
  %tp_dealloc814 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %491, i32 0, i32 4
  %492 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc814, align 8
  %493 = load %struct._object*, %struct._object** %_py_decref_tmp807, align 8
  call void %492(%struct._object* %493)
  br label %if.end.815

if.end.815:                                       ; preds = %if.else.812, %if.then.811
  br label %do.end.816

do.end.816:                                       ; preds = %if.end.815
  br label %sw.epilog

sw.bb.817:                                        ; preds = %if.end
  %494 = load %struct._typeobject*, %struct._typeobject** @Str_type, align 8
  %call818 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %494, %struct._object* null, %struct._object* null)
  store %struct._object* %call818, %struct._object** %result, align 8
  %495 = load %struct._object*, %struct._object** %result, align 8
  %tobool819 = icmp ne %struct._object* %495, null
  br i1 %tobool819, label %if.end.821, label %if.then.820

if.then.820:                                      ; preds = %sw.bb.817
  br label %failed

if.end.821:                                       ; preds = %sw.bb.817
  %496 = load %struct._expr*, %struct._expr** %o, align 8
  %v822 = getelementptr inbounds %struct._expr, %struct._expr* %496, i32 0, i32 1
  %Str = bitcast %union.anon.2* %v822 to %struct.anon.19*
  %s = getelementptr inbounds %struct.anon.19, %struct.anon.19* %Str, i32 0, i32 0
  %497 = load %struct._object*, %struct._object** %s, align 8
  %498 = bitcast %struct._object* %497 to i8*
  %call823 = call %struct._object* @ast2obj_object(i8* %498)
  store %struct._object* %call823, %struct._object** %value, align 8
  %499 = load %struct._object*, %struct._object** %value, align 8
  %tobool824 = icmp ne %struct._object* %499, null
  br i1 %tobool824, label %if.end.826, label %if.then.825

if.then.825:                                      ; preds = %if.end.821
  br label %failed

if.end.826:                                       ; preds = %if.end.821
  %500 = load %struct._object*, %struct._object** %result, align 8
  %501 = load %struct._object*, %struct._object** %value, align 8
  %call827 = call i32 @_PyObject_SetAttrId(%struct._object* %500, %struct._Py_Identifier* @PyId_s, %struct._object* %501)
  %cmp828 = icmp eq i32 %call827, -1
  br i1 %cmp828, label %if.then.829, label %if.end.830

if.then.829:                                      ; preds = %if.end.826
  br label %failed

if.end.830:                                       ; preds = %if.end.826
  br label %do.body.831

do.body.831:                                      ; preds = %if.end.830
  %502 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %502, %struct._object** %_py_decref_tmp832, align 8
  %503 = load %struct._object*, %struct._object** %_py_decref_tmp832, align 8
  %ob_refcnt833 = getelementptr inbounds %struct._object, %struct._object* %503, i32 0, i32 0
  %504 = load i64, i64* %ob_refcnt833, align 8
  %dec834 = add i64 %504, -1
  store i64 %dec834, i64* %ob_refcnt833, align 8
  %cmp835 = icmp ne i64 %dec834, 0
  br i1 %cmp835, label %if.then.836, label %if.else.837

if.then.836:                                      ; preds = %do.body.831
  br label %if.end.840

if.else.837:                                      ; preds = %do.body.831
  %505 = load %struct._object*, %struct._object** %_py_decref_tmp832, align 8
  %ob_type838 = getelementptr inbounds %struct._object, %struct._object* %505, i32 0, i32 1
  %506 = load %struct._typeobject*, %struct._typeobject** %ob_type838, align 8
  %tp_dealloc839 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %506, i32 0, i32 4
  %507 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc839, align 8
  %508 = load %struct._object*, %struct._object** %_py_decref_tmp832, align 8
  call void %507(%struct._object* %508)
  br label %if.end.840

if.end.840:                                       ; preds = %if.else.837, %if.then.836
  br label %do.end.841

do.end.841:                                       ; preds = %if.end.840
  br label %sw.epilog

sw.bb.842:                                        ; preds = %if.end
  %509 = load %struct._typeobject*, %struct._typeobject** @Bytes_type, align 8
  %call843 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %509, %struct._object* null, %struct._object* null)
  store %struct._object* %call843, %struct._object** %result, align 8
  %510 = load %struct._object*, %struct._object** %result, align 8
  %tobool844 = icmp ne %struct._object* %510, null
  br i1 %tobool844, label %if.end.846, label %if.then.845

if.then.845:                                      ; preds = %sw.bb.842
  br label %failed

if.end.846:                                       ; preds = %sw.bb.842
  %511 = load %struct._expr*, %struct._expr** %o, align 8
  %v847 = getelementptr inbounds %struct._expr, %struct._expr* %511, i32 0, i32 1
  %Bytes = bitcast %union.anon.2* %v847 to %struct.anon.20*
  %s848 = getelementptr inbounds %struct.anon.20, %struct.anon.20* %Bytes, i32 0, i32 0
  %512 = load %struct._object*, %struct._object** %s848, align 8
  %513 = bitcast %struct._object* %512 to i8*
  %call849 = call %struct._object* @ast2obj_object(i8* %513)
  store %struct._object* %call849, %struct._object** %value, align 8
  %514 = load %struct._object*, %struct._object** %value, align 8
  %tobool850 = icmp ne %struct._object* %514, null
  br i1 %tobool850, label %if.end.852, label %if.then.851

if.then.851:                                      ; preds = %if.end.846
  br label %failed

if.end.852:                                       ; preds = %if.end.846
  %515 = load %struct._object*, %struct._object** %result, align 8
  %516 = load %struct._object*, %struct._object** %value, align 8
  %call853 = call i32 @_PyObject_SetAttrId(%struct._object* %515, %struct._Py_Identifier* @PyId_s, %struct._object* %516)
  %cmp854 = icmp eq i32 %call853, -1
  br i1 %cmp854, label %if.then.855, label %if.end.856

if.then.855:                                      ; preds = %if.end.852
  br label %failed

if.end.856:                                       ; preds = %if.end.852
  br label %do.body.857

do.body.857:                                      ; preds = %if.end.856
  %517 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %517, %struct._object** %_py_decref_tmp858, align 8
  %518 = load %struct._object*, %struct._object** %_py_decref_tmp858, align 8
  %ob_refcnt859 = getelementptr inbounds %struct._object, %struct._object* %518, i32 0, i32 0
  %519 = load i64, i64* %ob_refcnt859, align 8
  %dec860 = add i64 %519, -1
  store i64 %dec860, i64* %ob_refcnt859, align 8
  %cmp861 = icmp ne i64 %dec860, 0
  br i1 %cmp861, label %if.then.862, label %if.else.863

if.then.862:                                      ; preds = %do.body.857
  br label %if.end.866

if.else.863:                                      ; preds = %do.body.857
  %520 = load %struct._object*, %struct._object** %_py_decref_tmp858, align 8
  %ob_type864 = getelementptr inbounds %struct._object, %struct._object* %520, i32 0, i32 1
  %521 = load %struct._typeobject*, %struct._typeobject** %ob_type864, align 8
  %tp_dealloc865 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %521, i32 0, i32 4
  %522 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc865, align 8
  %523 = load %struct._object*, %struct._object** %_py_decref_tmp858, align 8
  call void %522(%struct._object* %523)
  br label %if.end.866

if.end.866:                                       ; preds = %if.else.863, %if.then.862
  br label %do.end.867

do.end.867:                                       ; preds = %if.end.866
  br label %sw.epilog

sw.bb.868:                                        ; preds = %if.end
  %524 = load %struct._typeobject*, %struct._typeobject** @NameConstant_type, align 8
  %call869 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %524, %struct._object* null, %struct._object* null)
  store %struct._object* %call869, %struct._object** %result, align 8
  %525 = load %struct._object*, %struct._object** %result, align 8
  %tobool870 = icmp ne %struct._object* %525, null
  br i1 %tobool870, label %if.end.872, label %if.then.871

if.then.871:                                      ; preds = %sw.bb.868
  br label %failed

if.end.872:                                       ; preds = %sw.bb.868
  %526 = load %struct._expr*, %struct._expr** %o, align 8
  %v873 = getelementptr inbounds %struct._expr, %struct._expr* %526, i32 0, i32 1
  %NameConstant = bitcast %union.anon.2* %v873 to %struct.anon.21*
  %value874 = getelementptr inbounds %struct.anon.21, %struct.anon.21* %NameConstant, i32 0, i32 0
  %527 = load %struct._object*, %struct._object** %value874, align 8
  %528 = bitcast %struct._object* %527 to i8*
  %call875 = call %struct._object* @ast2obj_object(i8* %528)
  store %struct._object* %call875, %struct._object** %value, align 8
  %529 = load %struct._object*, %struct._object** %value, align 8
  %tobool876 = icmp ne %struct._object* %529, null
  br i1 %tobool876, label %if.end.878, label %if.then.877

if.then.877:                                      ; preds = %if.end.872
  br label %failed

if.end.878:                                       ; preds = %if.end.872
  %530 = load %struct._object*, %struct._object** %result, align 8
  %531 = load %struct._object*, %struct._object** %value, align 8
  %call879 = call i32 @_PyObject_SetAttrId(%struct._object* %530, %struct._Py_Identifier* @PyId_value, %struct._object* %531)
  %cmp880 = icmp eq i32 %call879, -1
  br i1 %cmp880, label %if.then.881, label %if.end.882

if.then.881:                                      ; preds = %if.end.878
  br label %failed

if.end.882:                                       ; preds = %if.end.878
  br label %do.body.883

do.body.883:                                      ; preds = %if.end.882
  %532 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %532, %struct._object** %_py_decref_tmp884, align 8
  %533 = load %struct._object*, %struct._object** %_py_decref_tmp884, align 8
  %ob_refcnt885 = getelementptr inbounds %struct._object, %struct._object* %533, i32 0, i32 0
  %534 = load i64, i64* %ob_refcnt885, align 8
  %dec886 = add i64 %534, -1
  store i64 %dec886, i64* %ob_refcnt885, align 8
  %cmp887 = icmp ne i64 %dec886, 0
  br i1 %cmp887, label %if.then.888, label %if.else.889

if.then.888:                                      ; preds = %do.body.883
  br label %if.end.892

if.else.889:                                      ; preds = %do.body.883
  %535 = load %struct._object*, %struct._object** %_py_decref_tmp884, align 8
  %ob_type890 = getelementptr inbounds %struct._object, %struct._object* %535, i32 0, i32 1
  %536 = load %struct._typeobject*, %struct._typeobject** %ob_type890, align 8
  %tp_dealloc891 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %536, i32 0, i32 4
  %537 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc891, align 8
  %538 = load %struct._object*, %struct._object** %_py_decref_tmp884, align 8
  call void %537(%struct._object* %538)
  br label %if.end.892

if.end.892:                                       ; preds = %if.else.889, %if.then.888
  br label %do.end.893

do.end.893:                                       ; preds = %if.end.892
  br label %sw.epilog

sw.bb.894:                                        ; preds = %if.end
  %539 = load %struct._typeobject*, %struct._typeobject** @Ellipsis_type, align 8
  %call895 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %539, %struct._object* null, %struct._object* null)
  store %struct._object* %call895, %struct._object** %result, align 8
  %540 = load %struct._object*, %struct._object** %result, align 8
  %tobool896 = icmp ne %struct._object* %540, null
  br i1 %tobool896, label %if.end.898, label %if.then.897

if.then.897:                                      ; preds = %sw.bb.894
  br label %failed

if.end.898:                                       ; preds = %sw.bb.894
  br label %sw.epilog

sw.bb.899:                                        ; preds = %if.end
  %541 = load %struct._typeobject*, %struct._typeobject** @Attribute_type, align 8
  %call900 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %541, %struct._object* null, %struct._object* null)
  store %struct._object* %call900, %struct._object** %result, align 8
  %542 = load %struct._object*, %struct._object** %result, align 8
  %tobool901 = icmp ne %struct._object* %542, null
  br i1 %tobool901, label %if.end.903, label %if.then.902

if.then.902:                                      ; preds = %sw.bb.899
  br label %failed

if.end.903:                                       ; preds = %sw.bb.899
  %543 = load %struct._expr*, %struct._expr** %o, align 8
  %v904 = getelementptr inbounds %struct._expr, %struct._expr* %543, i32 0, i32 1
  %Attribute = bitcast %union.anon.2* %v904 to %struct.anon.22*
  %value905 = getelementptr inbounds %struct.anon.22, %struct.anon.22* %Attribute, i32 0, i32 0
  %544 = load %struct._expr*, %struct._expr** %value905, align 8
  %545 = bitcast %struct._expr* %544 to i8*
  %call906 = call %struct._object* @ast2obj_expr(i8* %545)
  store %struct._object* %call906, %struct._object** %value, align 8
  %546 = load %struct._object*, %struct._object** %value, align 8
  %tobool907 = icmp ne %struct._object* %546, null
  br i1 %tobool907, label %if.end.909, label %if.then.908

if.then.908:                                      ; preds = %if.end.903
  br label %failed

if.end.909:                                       ; preds = %if.end.903
  %547 = load %struct._object*, %struct._object** %result, align 8
  %548 = load %struct._object*, %struct._object** %value, align 8
  %call910 = call i32 @_PyObject_SetAttrId(%struct._object* %547, %struct._Py_Identifier* @PyId_value, %struct._object* %548)
  %cmp911 = icmp eq i32 %call910, -1
  br i1 %cmp911, label %if.then.912, label %if.end.913

if.then.912:                                      ; preds = %if.end.909
  br label %failed

if.end.913:                                       ; preds = %if.end.909
  br label %do.body.914

do.body.914:                                      ; preds = %if.end.913
  %549 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %549, %struct._object** %_py_decref_tmp915, align 8
  %550 = load %struct._object*, %struct._object** %_py_decref_tmp915, align 8
  %ob_refcnt916 = getelementptr inbounds %struct._object, %struct._object* %550, i32 0, i32 0
  %551 = load i64, i64* %ob_refcnt916, align 8
  %dec917 = add i64 %551, -1
  store i64 %dec917, i64* %ob_refcnt916, align 8
  %cmp918 = icmp ne i64 %dec917, 0
  br i1 %cmp918, label %if.then.919, label %if.else.920

if.then.919:                                      ; preds = %do.body.914
  br label %if.end.923

if.else.920:                                      ; preds = %do.body.914
  %552 = load %struct._object*, %struct._object** %_py_decref_tmp915, align 8
  %ob_type921 = getelementptr inbounds %struct._object, %struct._object* %552, i32 0, i32 1
  %553 = load %struct._typeobject*, %struct._typeobject** %ob_type921, align 8
  %tp_dealloc922 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %553, i32 0, i32 4
  %554 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc922, align 8
  %555 = load %struct._object*, %struct._object** %_py_decref_tmp915, align 8
  call void %554(%struct._object* %555)
  br label %if.end.923

if.end.923:                                       ; preds = %if.else.920, %if.then.919
  br label %do.end.924

do.end.924:                                       ; preds = %if.end.923
  %556 = load %struct._expr*, %struct._expr** %o, align 8
  %v925 = getelementptr inbounds %struct._expr, %struct._expr* %556, i32 0, i32 1
  %Attribute926 = bitcast %union.anon.2* %v925 to %struct.anon.22*
  %attr = getelementptr inbounds %struct.anon.22, %struct.anon.22* %Attribute926, i32 0, i32 1
  %557 = load %struct._object*, %struct._object** %attr, align 8
  %558 = bitcast %struct._object* %557 to i8*
  %call927 = call %struct._object* @ast2obj_object(i8* %558)
  store %struct._object* %call927, %struct._object** %value, align 8
  %559 = load %struct._object*, %struct._object** %value, align 8
  %tobool928 = icmp ne %struct._object* %559, null
  br i1 %tobool928, label %if.end.930, label %if.then.929

if.then.929:                                      ; preds = %do.end.924
  br label %failed

if.end.930:                                       ; preds = %do.end.924
  %560 = load %struct._object*, %struct._object** %result, align 8
  %561 = load %struct._object*, %struct._object** %value, align 8
  %call931 = call i32 @_PyObject_SetAttrId(%struct._object* %560, %struct._Py_Identifier* @PyId_attr, %struct._object* %561)
  %cmp932 = icmp eq i32 %call931, -1
  br i1 %cmp932, label %if.then.933, label %if.end.934

if.then.933:                                      ; preds = %if.end.930
  br label %failed

if.end.934:                                       ; preds = %if.end.930
  br label %do.body.935

do.body.935:                                      ; preds = %if.end.934
  %562 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %562, %struct._object** %_py_decref_tmp936, align 8
  %563 = load %struct._object*, %struct._object** %_py_decref_tmp936, align 8
  %ob_refcnt937 = getelementptr inbounds %struct._object, %struct._object* %563, i32 0, i32 0
  %564 = load i64, i64* %ob_refcnt937, align 8
  %dec938 = add i64 %564, -1
  store i64 %dec938, i64* %ob_refcnt937, align 8
  %cmp939 = icmp ne i64 %dec938, 0
  br i1 %cmp939, label %if.then.940, label %if.else.941

if.then.940:                                      ; preds = %do.body.935
  br label %if.end.944

if.else.941:                                      ; preds = %do.body.935
  %565 = load %struct._object*, %struct._object** %_py_decref_tmp936, align 8
  %ob_type942 = getelementptr inbounds %struct._object, %struct._object* %565, i32 0, i32 1
  %566 = load %struct._typeobject*, %struct._typeobject** %ob_type942, align 8
  %tp_dealloc943 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %566, i32 0, i32 4
  %567 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc943, align 8
  %568 = load %struct._object*, %struct._object** %_py_decref_tmp936, align 8
  call void %567(%struct._object* %568)
  br label %if.end.944

if.end.944:                                       ; preds = %if.else.941, %if.then.940
  br label %do.end.945

do.end.945:                                       ; preds = %if.end.944
  %569 = load %struct._expr*, %struct._expr** %o, align 8
  %v946 = getelementptr inbounds %struct._expr, %struct._expr* %569, i32 0, i32 1
  %Attribute947 = bitcast %union.anon.2* %v946 to %struct.anon.22*
  %ctx = getelementptr inbounds %struct.anon.22, %struct.anon.22* %Attribute947, i32 0, i32 2
  %570 = load i32, i32* %ctx, align 4
  %call948 = call %struct._object* @ast2obj_expr_context(i32 %570)
  store %struct._object* %call948, %struct._object** %value, align 8
  %571 = load %struct._object*, %struct._object** %value, align 8
  %tobool949 = icmp ne %struct._object* %571, null
  br i1 %tobool949, label %if.end.951, label %if.then.950

if.then.950:                                      ; preds = %do.end.945
  br label %failed

if.end.951:                                       ; preds = %do.end.945
  %572 = load %struct._object*, %struct._object** %result, align 8
  %573 = load %struct._object*, %struct._object** %value, align 8
  %call952 = call i32 @_PyObject_SetAttrId(%struct._object* %572, %struct._Py_Identifier* @PyId_ctx, %struct._object* %573)
  %cmp953 = icmp eq i32 %call952, -1
  br i1 %cmp953, label %if.then.954, label %if.end.955

if.then.954:                                      ; preds = %if.end.951
  br label %failed

if.end.955:                                       ; preds = %if.end.951
  br label %do.body.956

do.body.956:                                      ; preds = %if.end.955
  %574 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %574, %struct._object** %_py_decref_tmp957, align 8
  %575 = load %struct._object*, %struct._object** %_py_decref_tmp957, align 8
  %ob_refcnt958 = getelementptr inbounds %struct._object, %struct._object* %575, i32 0, i32 0
  %576 = load i64, i64* %ob_refcnt958, align 8
  %dec959 = add i64 %576, -1
  store i64 %dec959, i64* %ob_refcnt958, align 8
  %cmp960 = icmp ne i64 %dec959, 0
  br i1 %cmp960, label %if.then.961, label %if.else.962

if.then.961:                                      ; preds = %do.body.956
  br label %if.end.965

if.else.962:                                      ; preds = %do.body.956
  %577 = load %struct._object*, %struct._object** %_py_decref_tmp957, align 8
  %ob_type963 = getelementptr inbounds %struct._object, %struct._object* %577, i32 0, i32 1
  %578 = load %struct._typeobject*, %struct._typeobject** %ob_type963, align 8
  %tp_dealloc964 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %578, i32 0, i32 4
  %579 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc964, align 8
  %580 = load %struct._object*, %struct._object** %_py_decref_tmp957, align 8
  call void %579(%struct._object* %580)
  br label %if.end.965

if.end.965:                                       ; preds = %if.else.962, %if.then.961
  br label %do.end.966

do.end.966:                                       ; preds = %if.end.965
  br label %sw.epilog

sw.bb.967:                                        ; preds = %if.end
  %581 = load %struct._typeobject*, %struct._typeobject** @Subscript_type, align 8
  %call968 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %581, %struct._object* null, %struct._object* null)
  store %struct._object* %call968, %struct._object** %result, align 8
  %582 = load %struct._object*, %struct._object** %result, align 8
  %tobool969 = icmp ne %struct._object* %582, null
  br i1 %tobool969, label %if.end.971, label %if.then.970

if.then.970:                                      ; preds = %sw.bb.967
  br label %failed

if.end.971:                                       ; preds = %sw.bb.967
  %583 = load %struct._expr*, %struct._expr** %o, align 8
  %v972 = getelementptr inbounds %struct._expr, %struct._expr* %583, i32 0, i32 1
  %Subscript = bitcast %union.anon.2* %v972 to %struct.anon.23*
  %value973 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %Subscript, i32 0, i32 0
  %584 = load %struct._expr*, %struct._expr** %value973, align 8
  %585 = bitcast %struct._expr* %584 to i8*
  %call974 = call %struct._object* @ast2obj_expr(i8* %585)
  store %struct._object* %call974, %struct._object** %value, align 8
  %586 = load %struct._object*, %struct._object** %value, align 8
  %tobool975 = icmp ne %struct._object* %586, null
  br i1 %tobool975, label %if.end.977, label %if.then.976

if.then.976:                                      ; preds = %if.end.971
  br label %failed

if.end.977:                                       ; preds = %if.end.971
  %587 = load %struct._object*, %struct._object** %result, align 8
  %588 = load %struct._object*, %struct._object** %value, align 8
  %call978 = call i32 @_PyObject_SetAttrId(%struct._object* %587, %struct._Py_Identifier* @PyId_value, %struct._object* %588)
  %cmp979 = icmp eq i32 %call978, -1
  br i1 %cmp979, label %if.then.980, label %if.end.981

if.then.980:                                      ; preds = %if.end.977
  br label %failed

if.end.981:                                       ; preds = %if.end.977
  br label %do.body.982

do.body.982:                                      ; preds = %if.end.981
  %589 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %589, %struct._object** %_py_decref_tmp983, align 8
  %590 = load %struct._object*, %struct._object** %_py_decref_tmp983, align 8
  %ob_refcnt984 = getelementptr inbounds %struct._object, %struct._object* %590, i32 0, i32 0
  %591 = load i64, i64* %ob_refcnt984, align 8
  %dec985 = add i64 %591, -1
  store i64 %dec985, i64* %ob_refcnt984, align 8
  %cmp986 = icmp ne i64 %dec985, 0
  br i1 %cmp986, label %if.then.987, label %if.else.988

if.then.987:                                      ; preds = %do.body.982
  br label %if.end.991

if.else.988:                                      ; preds = %do.body.982
  %592 = load %struct._object*, %struct._object** %_py_decref_tmp983, align 8
  %ob_type989 = getelementptr inbounds %struct._object, %struct._object* %592, i32 0, i32 1
  %593 = load %struct._typeobject*, %struct._typeobject** %ob_type989, align 8
  %tp_dealloc990 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %593, i32 0, i32 4
  %594 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc990, align 8
  %595 = load %struct._object*, %struct._object** %_py_decref_tmp983, align 8
  call void %594(%struct._object* %595)
  br label %if.end.991

if.end.991:                                       ; preds = %if.else.988, %if.then.987
  br label %do.end.992

do.end.992:                                       ; preds = %if.end.991
  %596 = load %struct._expr*, %struct._expr** %o, align 8
  %v993 = getelementptr inbounds %struct._expr, %struct._expr* %596, i32 0, i32 1
  %Subscript994 = bitcast %union.anon.2* %v993 to %struct.anon.23*
  %slice = getelementptr inbounds %struct.anon.23, %struct.anon.23* %Subscript994, i32 0, i32 1
  %597 = load %struct._slice*, %struct._slice** %slice, align 8
  %598 = bitcast %struct._slice* %597 to i8*
  %call995 = call %struct._object* @ast2obj_slice(i8* %598)
  store %struct._object* %call995, %struct._object** %value, align 8
  %599 = load %struct._object*, %struct._object** %value, align 8
  %tobool996 = icmp ne %struct._object* %599, null
  br i1 %tobool996, label %if.end.998, label %if.then.997

if.then.997:                                      ; preds = %do.end.992
  br label %failed

if.end.998:                                       ; preds = %do.end.992
  %600 = load %struct._object*, %struct._object** %result, align 8
  %601 = load %struct._object*, %struct._object** %value, align 8
  %call999 = call i32 @_PyObject_SetAttrId(%struct._object* %600, %struct._Py_Identifier* @PyId_slice, %struct._object* %601)
  %cmp1000 = icmp eq i32 %call999, -1
  br i1 %cmp1000, label %if.then.1001, label %if.end.1002

if.then.1001:                                     ; preds = %if.end.998
  br label %failed

if.end.1002:                                      ; preds = %if.end.998
  br label %do.body.1003

do.body.1003:                                     ; preds = %if.end.1002
  %602 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %602, %struct._object** %_py_decref_tmp1004, align 8
  %603 = load %struct._object*, %struct._object** %_py_decref_tmp1004, align 8
  %ob_refcnt1005 = getelementptr inbounds %struct._object, %struct._object* %603, i32 0, i32 0
  %604 = load i64, i64* %ob_refcnt1005, align 8
  %dec1006 = add i64 %604, -1
  store i64 %dec1006, i64* %ob_refcnt1005, align 8
  %cmp1007 = icmp ne i64 %dec1006, 0
  br i1 %cmp1007, label %if.then.1008, label %if.else.1009

if.then.1008:                                     ; preds = %do.body.1003
  br label %if.end.1012

if.else.1009:                                     ; preds = %do.body.1003
  %605 = load %struct._object*, %struct._object** %_py_decref_tmp1004, align 8
  %ob_type1010 = getelementptr inbounds %struct._object, %struct._object* %605, i32 0, i32 1
  %606 = load %struct._typeobject*, %struct._typeobject** %ob_type1010, align 8
  %tp_dealloc1011 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %606, i32 0, i32 4
  %607 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1011, align 8
  %608 = load %struct._object*, %struct._object** %_py_decref_tmp1004, align 8
  call void %607(%struct._object* %608)
  br label %if.end.1012

if.end.1012:                                      ; preds = %if.else.1009, %if.then.1008
  br label %do.end.1013

do.end.1013:                                      ; preds = %if.end.1012
  %609 = load %struct._expr*, %struct._expr** %o, align 8
  %v1014 = getelementptr inbounds %struct._expr, %struct._expr* %609, i32 0, i32 1
  %Subscript1015 = bitcast %union.anon.2* %v1014 to %struct.anon.23*
  %ctx1016 = getelementptr inbounds %struct.anon.23, %struct.anon.23* %Subscript1015, i32 0, i32 2
  %610 = load i32, i32* %ctx1016, align 4
  %call1017 = call %struct._object* @ast2obj_expr_context(i32 %610)
  store %struct._object* %call1017, %struct._object** %value, align 8
  %611 = load %struct._object*, %struct._object** %value, align 8
  %tobool1018 = icmp ne %struct._object* %611, null
  br i1 %tobool1018, label %if.end.1020, label %if.then.1019

if.then.1019:                                     ; preds = %do.end.1013
  br label %failed

if.end.1020:                                      ; preds = %do.end.1013
  %612 = load %struct._object*, %struct._object** %result, align 8
  %613 = load %struct._object*, %struct._object** %value, align 8
  %call1021 = call i32 @_PyObject_SetAttrId(%struct._object* %612, %struct._Py_Identifier* @PyId_ctx, %struct._object* %613)
  %cmp1022 = icmp eq i32 %call1021, -1
  br i1 %cmp1022, label %if.then.1023, label %if.end.1024

if.then.1023:                                     ; preds = %if.end.1020
  br label %failed

if.end.1024:                                      ; preds = %if.end.1020
  br label %do.body.1025

do.body.1025:                                     ; preds = %if.end.1024
  %614 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %614, %struct._object** %_py_decref_tmp1026, align 8
  %615 = load %struct._object*, %struct._object** %_py_decref_tmp1026, align 8
  %ob_refcnt1027 = getelementptr inbounds %struct._object, %struct._object* %615, i32 0, i32 0
  %616 = load i64, i64* %ob_refcnt1027, align 8
  %dec1028 = add i64 %616, -1
  store i64 %dec1028, i64* %ob_refcnt1027, align 8
  %cmp1029 = icmp ne i64 %dec1028, 0
  br i1 %cmp1029, label %if.then.1030, label %if.else.1031

if.then.1030:                                     ; preds = %do.body.1025
  br label %if.end.1034

if.else.1031:                                     ; preds = %do.body.1025
  %617 = load %struct._object*, %struct._object** %_py_decref_tmp1026, align 8
  %ob_type1032 = getelementptr inbounds %struct._object, %struct._object* %617, i32 0, i32 1
  %618 = load %struct._typeobject*, %struct._typeobject** %ob_type1032, align 8
  %tp_dealloc1033 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %618, i32 0, i32 4
  %619 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1033, align 8
  %620 = load %struct._object*, %struct._object** %_py_decref_tmp1026, align 8
  call void %619(%struct._object* %620)
  br label %if.end.1034

if.end.1034:                                      ; preds = %if.else.1031, %if.then.1030
  br label %do.end.1035

do.end.1035:                                      ; preds = %if.end.1034
  br label %sw.epilog

sw.bb.1036:                                       ; preds = %if.end
  %621 = load %struct._typeobject*, %struct._typeobject** @Starred_type, align 8
  %call1037 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %621, %struct._object* null, %struct._object* null)
  store %struct._object* %call1037, %struct._object** %result, align 8
  %622 = load %struct._object*, %struct._object** %result, align 8
  %tobool1038 = icmp ne %struct._object* %622, null
  br i1 %tobool1038, label %if.end.1040, label %if.then.1039

if.then.1039:                                     ; preds = %sw.bb.1036
  br label %failed

if.end.1040:                                      ; preds = %sw.bb.1036
  %623 = load %struct._expr*, %struct._expr** %o, align 8
  %v1041 = getelementptr inbounds %struct._expr, %struct._expr* %623, i32 0, i32 1
  %Starred = bitcast %union.anon.2* %v1041 to %struct.anon.28*
  %value1042 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %Starred, i32 0, i32 0
  %624 = load %struct._expr*, %struct._expr** %value1042, align 8
  %625 = bitcast %struct._expr* %624 to i8*
  %call1043 = call %struct._object* @ast2obj_expr(i8* %625)
  store %struct._object* %call1043, %struct._object** %value, align 8
  %626 = load %struct._object*, %struct._object** %value, align 8
  %tobool1044 = icmp ne %struct._object* %626, null
  br i1 %tobool1044, label %if.end.1046, label %if.then.1045

if.then.1045:                                     ; preds = %if.end.1040
  br label %failed

if.end.1046:                                      ; preds = %if.end.1040
  %627 = load %struct._object*, %struct._object** %result, align 8
  %628 = load %struct._object*, %struct._object** %value, align 8
  %call1047 = call i32 @_PyObject_SetAttrId(%struct._object* %627, %struct._Py_Identifier* @PyId_value, %struct._object* %628)
  %cmp1048 = icmp eq i32 %call1047, -1
  br i1 %cmp1048, label %if.then.1049, label %if.end.1050

if.then.1049:                                     ; preds = %if.end.1046
  br label %failed

if.end.1050:                                      ; preds = %if.end.1046
  br label %do.body.1051

do.body.1051:                                     ; preds = %if.end.1050
  %629 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %629, %struct._object** %_py_decref_tmp1052, align 8
  %630 = load %struct._object*, %struct._object** %_py_decref_tmp1052, align 8
  %ob_refcnt1053 = getelementptr inbounds %struct._object, %struct._object* %630, i32 0, i32 0
  %631 = load i64, i64* %ob_refcnt1053, align 8
  %dec1054 = add i64 %631, -1
  store i64 %dec1054, i64* %ob_refcnt1053, align 8
  %cmp1055 = icmp ne i64 %dec1054, 0
  br i1 %cmp1055, label %if.then.1056, label %if.else.1057

if.then.1056:                                     ; preds = %do.body.1051
  br label %if.end.1060

if.else.1057:                                     ; preds = %do.body.1051
  %632 = load %struct._object*, %struct._object** %_py_decref_tmp1052, align 8
  %ob_type1058 = getelementptr inbounds %struct._object, %struct._object* %632, i32 0, i32 1
  %633 = load %struct._typeobject*, %struct._typeobject** %ob_type1058, align 8
  %tp_dealloc1059 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %633, i32 0, i32 4
  %634 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1059, align 8
  %635 = load %struct._object*, %struct._object** %_py_decref_tmp1052, align 8
  call void %634(%struct._object* %635)
  br label %if.end.1060

if.end.1060:                                      ; preds = %if.else.1057, %if.then.1056
  br label %do.end.1061

do.end.1061:                                      ; preds = %if.end.1060
  %636 = load %struct._expr*, %struct._expr** %o, align 8
  %v1062 = getelementptr inbounds %struct._expr, %struct._expr* %636, i32 0, i32 1
  %Starred1063 = bitcast %union.anon.2* %v1062 to %struct.anon.28*
  %ctx1064 = getelementptr inbounds %struct.anon.28, %struct.anon.28* %Starred1063, i32 0, i32 1
  %637 = load i32, i32* %ctx1064, align 4
  %call1065 = call %struct._object* @ast2obj_expr_context(i32 %637)
  store %struct._object* %call1065, %struct._object** %value, align 8
  %638 = load %struct._object*, %struct._object** %value, align 8
  %tobool1066 = icmp ne %struct._object* %638, null
  br i1 %tobool1066, label %if.end.1068, label %if.then.1067

if.then.1067:                                     ; preds = %do.end.1061
  br label %failed

if.end.1068:                                      ; preds = %do.end.1061
  %639 = load %struct._object*, %struct._object** %result, align 8
  %640 = load %struct._object*, %struct._object** %value, align 8
  %call1069 = call i32 @_PyObject_SetAttrId(%struct._object* %639, %struct._Py_Identifier* @PyId_ctx, %struct._object* %640)
  %cmp1070 = icmp eq i32 %call1069, -1
  br i1 %cmp1070, label %if.then.1071, label %if.end.1072

if.then.1071:                                     ; preds = %if.end.1068
  br label %failed

if.end.1072:                                      ; preds = %if.end.1068
  br label %do.body.1073

do.body.1073:                                     ; preds = %if.end.1072
  %641 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %641, %struct._object** %_py_decref_tmp1074, align 8
  %642 = load %struct._object*, %struct._object** %_py_decref_tmp1074, align 8
  %ob_refcnt1075 = getelementptr inbounds %struct._object, %struct._object* %642, i32 0, i32 0
  %643 = load i64, i64* %ob_refcnt1075, align 8
  %dec1076 = add i64 %643, -1
  store i64 %dec1076, i64* %ob_refcnt1075, align 8
  %cmp1077 = icmp ne i64 %dec1076, 0
  br i1 %cmp1077, label %if.then.1078, label %if.else.1079

if.then.1078:                                     ; preds = %do.body.1073
  br label %if.end.1082

if.else.1079:                                     ; preds = %do.body.1073
  %644 = load %struct._object*, %struct._object** %_py_decref_tmp1074, align 8
  %ob_type1080 = getelementptr inbounds %struct._object, %struct._object* %644, i32 0, i32 1
  %645 = load %struct._typeobject*, %struct._typeobject** %ob_type1080, align 8
  %tp_dealloc1081 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %645, i32 0, i32 4
  %646 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1081, align 8
  %647 = load %struct._object*, %struct._object** %_py_decref_tmp1074, align 8
  call void %646(%struct._object* %647)
  br label %if.end.1082

if.end.1082:                                      ; preds = %if.else.1079, %if.then.1078
  br label %do.end.1083

do.end.1083:                                      ; preds = %if.end.1082
  br label %sw.epilog

sw.bb.1084:                                       ; preds = %if.end
  %648 = load %struct._typeobject*, %struct._typeobject** @Name_type, align 8
  %call1085 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %648, %struct._object* null, %struct._object* null)
  store %struct._object* %call1085, %struct._object** %result, align 8
  %649 = load %struct._object*, %struct._object** %result, align 8
  %tobool1086 = icmp ne %struct._object* %649, null
  br i1 %tobool1086, label %if.end.1088, label %if.then.1087

if.then.1087:                                     ; preds = %sw.bb.1084
  br label %failed

if.end.1088:                                      ; preds = %sw.bb.1084
  %650 = load %struct._expr*, %struct._expr** %o, align 8
  %v1089 = getelementptr inbounds %struct._expr, %struct._expr* %650, i32 0, i32 1
  %Name = bitcast %union.anon.2* %v1089 to %struct.anon.29*
  %id = getelementptr inbounds %struct.anon.29, %struct.anon.29* %Name, i32 0, i32 0
  %651 = load %struct._object*, %struct._object** %id, align 8
  %652 = bitcast %struct._object* %651 to i8*
  %call1090 = call %struct._object* @ast2obj_object(i8* %652)
  store %struct._object* %call1090, %struct._object** %value, align 8
  %653 = load %struct._object*, %struct._object** %value, align 8
  %tobool1091 = icmp ne %struct._object* %653, null
  br i1 %tobool1091, label %if.end.1093, label %if.then.1092

if.then.1092:                                     ; preds = %if.end.1088
  br label %failed

if.end.1093:                                      ; preds = %if.end.1088
  %654 = load %struct._object*, %struct._object** %result, align 8
  %655 = load %struct._object*, %struct._object** %value, align 8
  %call1094 = call i32 @_PyObject_SetAttrId(%struct._object* %654, %struct._Py_Identifier* @PyId_id, %struct._object* %655)
  %cmp1095 = icmp eq i32 %call1094, -1
  br i1 %cmp1095, label %if.then.1096, label %if.end.1097

if.then.1096:                                     ; preds = %if.end.1093
  br label %failed

if.end.1097:                                      ; preds = %if.end.1093
  br label %do.body.1098

do.body.1098:                                     ; preds = %if.end.1097
  %656 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %656, %struct._object** %_py_decref_tmp1099, align 8
  %657 = load %struct._object*, %struct._object** %_py_decref_tmp1099, align 8
  %ob_refcnt1100 = getelementptr inbounds %struct._object, %struct._object* %657, i32 0, i32 0
  %658 = load i64, i64* %ob_refcnt1100, align 8
  %dec1101 = add i64 %658, -1
  store i64 %dec1101, i64* %ob_refcnt1100, align 8
  %cmp1102 = icmp ne i64 %dec1101, 0
  br i1 %cmp1102, label %if.then.1103, label %if.else.1104

if.then.1103:                                     ; preds = %do.body.1098
  br label %if.end.1107

if.else.1104:                                     ; preds = %do.body.1098
  %659 = load %struct._object*, %struct._object** %_py_decref_tmp1099, align 8
  %ob_type1105 = getelementptr inbounds %struct._object, %struct._object* %659, i32 0, i32 1
  %660 = load %struct._typeobject*, %struct._typeobject** %ob_type1105, align 8
  %tp_dealloc1106 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %660, i32 0, i32 4
  %661 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1106, align 8
  %662 = load %struct._object*, %struct._object** %_py_decref_tmp1099, align 8
  call void %661(%struct._object* %662)
  br label %if.end.1107

if.end.1107:                                      ; preds = %if.else.1104, %if.then.1103
  br label %do.end.1108

do.end.1108:                                      ; preds = %if.end.1107
  %663 = load %struct._expr*, %struct._expr** %o, align 8
  %v1109 = getelementptr inbounds %struct._expr, %struct._expr* %663, i32 0, i32 1
  %Name1110 = bitcast %union.anon.2* %v1109 to %struct.anon.29*
  %ctx1111 = getelementptr inbounds %struct.anon.29, %struct.anon.29* %Name1110, i32 0, i32 1
  %664 = load i32, i32* %ctx1111, align 4
  %call1112 = call %struct._object* @ast2obj_expr_context(i32 %664)
  store %struct._object* %call1112, %struct._object** %value, align 8
  %665 = load %struct._object*, %struct._object** %value, align 8
  %tobool1113 = icmp ne %struct._object* %665, null
  br i1 %tobool1113, label %if.end.1115, label %if.then.1114

if.then.1114:                                     ; preds = %do.end.1108
  br label %failed

if.end.1115:                                      ; preds = %do.end.1108
  %666 = load %struct._object*, %struct._object** %result, align 8
  %667 = load %struct._object*, %struct._object** %value, align 8
  %call1116 = call i32 @_PyObject_SetAttrId(%struct._object* %666, %struct._Py_Identifier* @PyId_ctx, %struct._object* %667)
  %cmp1117 = icmp eq i32 %call1116, -1
  br i1 %cmp1117, label %if.then.1118, label %if.end.1119

if.then.1118:                                     ; preds = %if.end.1115
  br label %failed

if.end.1119:                                      ; preds = %if.end.1115
  br label %do.body.1120

do.body.1120:                                     ; preds = %if.end.1119
  %668 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %668, %struct._object** %_py_decref_tmp1121, align 8
  %669 = load %struct._object*, %struct._object** %_py_decref_tmp1121, align 8
  %ob_refcnt1122 = getelementptr inbounds %struct._object, %struct._object* %669, i32 0, i32 0
  %670 = load i64, i64* %ob_refcnt1122, align 8
  %dec1123 = add i64 %670, -1
  store i64 %dec1123, i64* %ob_refcnt1122, align 8
  %cmp1124 = icmp ne i64 %dec1123, 0
  br i1 %cmp1124, label %if.then.1125, label %if.else.1126

if.then.1125:                                     ; preds = %do.body.1120
  br label %if.end.1129

if.else.1126:                                     ; preds = %do.body.1120
  %671 = load %struct._object*, %struct._object** %_py_decref_tmp1121, align 8
  %ob_type1127 = getelementptr inbounds %struct._object, %struct._object* %671, i32 0, i32 1
  %672 = load %struct._typeobject*, %struct._typeobject** %ob_type1127, align 8
  %tp_dealloc1128 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %672, i32 0, i32 4
  %673 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1128, align 8
  %674 = load %struct._object*, %struct._object** %_py_decref_tmp1121, align 8
  call void %673(%struct._object* %674)
  br label %if.end.1129

if.end.1129:                                      ; preds = %if.else.1126, %if.then.1125
  br label %do.end.1130

do.end.1130:                                      ; preds = %if.end.1129
  br label %sw.epilog

sw.bb.1131:                                       ; preds = %if.end
  %675 = load %struct._typeobject*, %struct._typeobject** @List_type, align 8
  %call1132 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %675, %struct._object* null, %struct._object* null)
  store %struct._object* %call1132, %struct._object** %result, align 8
  %676 = load %struct._object*, %struct._object** %result, align 8
  %tobool1133 = icmp ne %struct._object* %676, null
  br i1 %tobool1133, label %if.end.1135, label %if.then.1134

if.then.1134:                                     ; preds = %sw.bb.1131
  br label %failed

if.end.1135:                                      ; preds = %sw.bb.1131
  %677 = load %struct._expr*, %struct._expr** %o, align 8
  %v1136 = getelementptr inbounds %struct._expr, %struct._expr* %677, i32 0, i32 1
  %List = bitcast %union.anon.2* %v1136 to %struct.anon.30*
  %elts1137 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %List, i32 0, i32 0
  %678 = load %struct.asdl_seq*, %struct.asdl_seq** %elts1137, align 8
  %call1138 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %678, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call1138, %struct._object** %value, align 8
  %679 = load %struct._object*, %struct._object** %value, align 8
  %tobool1139 = icmp ne %struct._object* %679, null
  br i1 %tobool1139, label %if.end.1141, label %if.then.1140

if.then.1140:                                     ; preds = %if.end.1135
  br label %failed

if.end.1141:                                      ; preds = %if.end.1135
  %680 = load %struct._object*, %struct._object** %result, align 8
  %681 = load %struct._object*, %struct._object** %value, align 8
  %call1142 = call i32 @_PyObject_SetAttrId(%struct._object* %680, %struct._Py_Identifier* @PyId_elts, %struct._object* %681)
  %cmp1143 = icmp eq i32 %call1142, -1
  br i1 %cmp1143, label %if.then.1144, label %if.end.1145

if.then.1144:                                     ; preds = %if.end.1141
  br label %failed

if.end.1145:                                      ; preds = %if.end.1141
  br label %do.body.1146

do.body.1146:                                     ; preds = %if.end.1145
  %682 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %682, %struct._object** %_py_decref_tmp1147, align 8
  %683 = load %struct._object*, %struct._object** %_py_decref_tmp1147, align 8
  %ob_refcnt1148 = getelementptr inbounds %struct._object, %struct._object* %683, i32 0, i32 0
  %684 = load i64, i64* %ob_refcnt1148, align 8
  %dec1149 = add i64 %684, -1
  store i64 %dec1149, i64* %ob_refcnt1148, align 8
  %cmp1150 = icmp ne i64 %dec1149, 0
  br i1 %cmp1150, label %if.then.1151, label %if.else.1152

if.then.1151:                                     ; preds = %do.body.1146
  br label %if.end.1155

if.else.1152:                                     ; preds = %do.body.1146
  %685 = load %struct._object*, %struct._object** %_py_decref_tmp1147, align 8
  %ob_type1153 = getelementptr inbounds %struct._object, %struct._object* %685, i32 0, i32 1
  %686 = load %struct._typeobject*, %struct._typeobject** %ob_type1153, align 8
  %tp_dealloc1154 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %686, i32 0, i32 4
  %687 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1154, align 8
  %688 = load %struct._object*, %struct._object** %_py_decref_tmp1147, align 8
  call void %687(%struct._object* %688)
  br label %if.end.1155

if.end.1155:                                      ; preds = %if.else.1152, %if.then.1151
  br label %do.end.1156

do.end.1156:                                      ; preds = %if.end.1155
  %689 = load %struct._expr*, %struct._expr** %o, align 8
  %v1157 = getelementptr inbounds %struct._expr, %struct._expr* %689, i32 0, i32 1
  %List1158 = bitcast %union.anon.2* %v1157 to %struct.anon.30*
  %ctx1159 = getelementptr inbounds %struct.anon.30, %struct.anon.30* %List1158, i32 0, i32 1
  %690 = load i32, i32* %ctx1159, align 4
  %call1160 = call %struct._object* @ast2obj_expr_context(i32 %690)
  store %struct._object* %call1160, %struct._object** %value, align 8
  %691 = load %struct._object*, %struct._object** %value, align 8
  %tobool1161 = icmp ne %struct._object* %691, null
  br i1 %tobool1161, label %if.end.1163, label %if.then.1162

if.then.1162:                                     ; preds = %do.end.1156
  br label %failed

if.end.1163:                                      ; preds = %do.end.1156
  %692 = load %struct._object*, %struct._object** %result, align 8
  %693 = load %struct._object*, %struct._object** %value, align 8
  %call1164 = call i32 @_PyObject_SetAttrId(%struct._object* %692, %struct._Py_Identifier* @PyId_ctx, %struct._object* %693)
  %cmp1165 = icmp eq i32 %call1164, -1
  br i1 %cmp1165, label %if.then.1166, label %if.end.1167

if.then.1166:                                     ; preds = %if.end.1163
  br label %failed

if.end.1167:                                      ; preds = %if.end.1163
  br label %do.body.1168

do.body.1168:                                     ; preds = %if.end.1167
  %694 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %694, %struct._object** %_py_decref_tmp1169, align 8
  %695 = load %struct._object*, %struct._object** %_py_decref_tmp1169, align 8
  %ob_refcnt1170 = getelementptr inbounds %struct._object, %struct._object* %695, i32 0, i32 0
  %696 = load i64, i64* %ob_refcnt1170, align 8
  %dec1171 = add i64 %696, -1
  store i64 %dec1171, i64* %ob_refcnt1170, align 8
  %cmp1172 = icmp ne i64 %dec1171, 0
  br i1 %cmp1172, label %if.then.1173, label %if.else.1174

if.then.1173:                                     ; preds = %do.body.1168
  br label %if.end.1177

if.else.1174:                                     ; preds = %do.body.1168
  %697 = load %struct._object*, %struct._object** %_py_decref_tmp1169, align 8
  %ob_type1175 = getelementptr inbounds %struct._object, %struct._object* %697, i32 0, i32 1
  %698 = load %struct._typeobject*, %struct._typeobject** %ob_type1175, align 8
  %tp_dealloc1176 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %698, i32 0, i32 4
  %699 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1176, align 8
  %700 = load %struct._object*, %struct._object** %_py_decref_tmp1169, align 8
  call void %699(%struct._object* %700)
  br label %if.end.1177

if.end.1177:                                      ; preds = %if.else.1174, %if.then.1173
  br label %do.end.1178

do.end.1178:                                      ; preds = %if.end.1177
  br label %sw.epilog

sw.bb.1179:                                       ; preds = %if.end
  %701 = load %struct._typeobject*, %struct._typeobject** @Tuple_type, align 8
  %call1180 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %701, %struct._object* null, %struct._object* null)
  store %struct._object* %call1180, %struct._object** %result, align 8
  %702 = load %struct._object*, %struct._object** %result, align 8
  %tobool1181 = icmp ne %struct._object* %702, null
  br i1 %tobool1181, label %if.end.1183, label %if.then.1182

if.then.1182:                                     ; preds = %sw.bb.1179
  br label %failed

if.end.1183:                                      ; preds = %sw.bb.1179
  %703 = load %struct._expr*, %struct._expr** %o, align 8
  %v1184 = getelementptr inbounds %struct._expr, %struct._expr* %703, i32 0, i32 1
  %Tuple = bitcast %union.anon.2* %v1184 to %struct.anon.31*
  %elts1185 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %Tuple, i32 0, i32 0
  %704 = load %struct.asdl_seq*, %struct.asdl_seq** %elts1185, align 8
  %call1186 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %704, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call1186, %struct._object** %value, align 8
  %705 = load %struct._object*, %struct._object** %value, align 8
  %tobool1187 = icmp ne %struct._object* %705, null
  br i1 %tobool1187, label %if.end.1189, label %if.then.1188

if.then.1188:                                     ; preds = %if.end.1183
  br label %failed

if.end.1189:                                      ; preds = %if.end.1183
  %706 = load %struct._object*, %struct._object** %result, align 8
  %707 = load %struct._object*, %struct._object** %value, align 8
  %call1190 = call i32 @_PyObject_SetAttrId(%struct._object* %706, %struct._Py_Identifier* @PyId_elts, %struct._object* %707)
  %cmp1191 = icmp eq i32 %call1190, -1
  br i1 %cmp1191, label %if.then.1192, label %if.end.1193

if.then.1192:                                     ; preds = %if.end.1189
  br label %failed

if.end.1193:                                      ; preds = %if.end.1189
  br label %do.body.1194

do.body.1194:                                     ; preds = %if.end.1193
  %708 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %708, %struct._object** %_py_decref_tmp1195, align 8
  %709 = load %struct._object*, %struct._object** %_py_decref_tmp1195, align 8
  %ob_refcnt1196 = getelementptr inbounds %struct._object, %struct._object* %709, i32 0, i32 0
  %710 = load i64, i64* %ob_refcnt1196, align 8
  %dec1197 = add i64 %710, -1
  store i64 %dec1197, i64* %ob_refcnt1196, align 8
  %cmp1198 = icmp ne i64 %dec1197, 0
  br i1 %cmp1198, label %if.then.1199, label %if.else.1200

if.then.1199:                                     ; preds = %do.body.1194
  br label %if.end.1203

if.else.1200:                                     ; preds = %do.body.1194
  %711 = load %struct._object*, %struct._object** %_py_decref_tmp1195, align 8
  %ob_type1201 = getelementptr inbounds %struct._object, %struct._object* %711, i32 0, i32 1
  %712 = load %struct._typeobject*, %struct._typeobject** %ob_type1201, align 8
  %tp_dealloc1202 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %712, i32 0, i32 4
  %713 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1202, align 8
  %714 = load %struct._object*, %struct._object** %_py_decref_tmp1195, align 8
  call void %713(%struct._object* %714)
  br label %if.end.1203

if.end.1203:                                      ; preds = %if.else.1200, %if.then.1199
  br label %do.end.1204

do.end.1204:                                      ; preds = %if.end.1203
  %715 = load %struct._expr*, %struct._expr** %o, align 8
  %v1205 = getelementptr inbounds %struct._expr, %struct._expr* %715, i32 0, i32 1
  %Tuple1206 = bitcast %union.anon.2* %v1205 to %struct.anon.31*
  %ctx1207 = getelementptr inbounds %struct.anon.31, %struct.anon.31* %Tuple1206, i32 0, i32 1
  %716 = load i32, i32* %ctx1207, align 4
  %call1208 = call %struct._object* @ast2obj_expr_context(i32 %716)
  store %struct._object* %call1208, %struct._object** %value, align 8
  %717 = load %struct._object*, %struct._object** %value, align 8
  %tobool1209 = icmp ne %struct._object* %717, null
  br i1 %tobool1209, label %if.end.1211, label %if.then.1210

if.then.1210:                                     ; preds = %do.end.1204
  br label %failed

if.end.1211:                                      ; preds = %do.end.1204
  %718 = load %struct._object*, %struct._object** %result, align 8
  %719 = load %struct._object*, %struct._object** %value, align 8
  %call1212 = call i32 @_PyObject_SetAttrId(%struct._object* %718, %struct._Py_Identifier* @PyId_ctx, %struct._object* %719)
  %cmp1213 = icmp eq i32 %call1212, -1
  br i1 %cmp1213, label %if.then.1214, label %if.end.1215

if.then.1214:                                     ; preds = %if.end.1211
  br label %failed

if.end.1215:                                      ; preds = %if.end.1211
  br label %do.body.1216

do.body.1216:                                     ; preds = %if.end.1215
  %720 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %720, %struct._object** %_py_decref_tmp1217, align 8
  %721 = load %struct._object*, %struct._object** %_py_decref_tmp1217, align 8
  %ob_refcnt1218 = getelementptr inbounds %struct._object, %struct._object* %721, i32 0, i32 0
  %722 = load i64, i64* %ob_refcnt1218, align 8
  %dec1219 = add i64 %722, -1
  store i64 %dec1219, i64* %ob_refcnt1218, align 8
  %cmp1220 = icmp ne i64 %dec1219, 0
  br i1 %cmp1220, label %if.then.1221, label %if.else.1222

if.then.1221:                                     ; preds = %do.body.1216
  br label %if.end.1225

if.else.1222:                                     ; preds = %do.body.1216
  %723 = load %struct._object*, %struct._object** %_py_decref_tmp1217, align 8
  %ob_type1223 = getelementptr inbounds %struct._object, %struct._object* %723, i32 0, i32 1
  %724 = load %struct._typeobject*, %struct._typeobject** %ob_type1223, align 8
  %tp_dealloc1224 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %724, i32 0, i32 4
  %725 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1224, align 8
  %726 = load %struct._object*, %struct._object** %_py_decref_tmp1217, align 8
  call void %725(%struct._object* %726)
  br label %if.end.1225

if.end.1225:                                      ; preds = %if.else.1222, %if.then.1221
  br label %do.end.1226

do.end.1226:                                      ; preds = %if.end.1225
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %do.end.1226, %do.end.1178, %do.end.1130, %do.end.1083, %do.end.1035, %do.end.966, %if.end.898, %do.end.893, %do.end.867, %do.end.841, %do.end.816, %do.end.790, %do.end.680, %do.end.598, %do.end.572, %do.end.546, %do.end.498, %do.end.429, %do.end.381, %do.end.335, %do.end.310, %do.end.263, %do.end.195, %do.end.149, %do.end.102, %do.end.34
  %727 = load %struct._expr*, %struct._expr** %o, align 8
  %lineno = getelementptr inbounds %struct._expr, %struct._expr* %727, i32 0, i32 2
  %728 = load i32, i32* %lineno, align 4
  %conv = sext i32 %728 to i64
  %call1227 = call %struct._object* @ast2obj_int(i64 %conv)
  store %struct._object* %call1227, %struct._object** %value, align 8
  %729 = load %struct._object*, %struct._object** %value, align 8
  %tobool1228 = icmp ne %struct._object* %729, null
  br i1 %tobool1228, label %if.end.1230, label %if.then.1229

if.then.1229:                                     ; preds = %sw.epilog
  br label %failed

if.end.1230:                                      ; preds = %sw.epilog
  %730 = load %struct._object*, %struct._object** %result, align 8
  %731 = load %struct._object*, %struct._object** %value, align 8
  %call1231 = call i32 @_PyObject_SetAttrId(%struct._object* %730, %struct._Py_Identifier* @PyId_lineno, %struct._object* %731)
  %cmp1232 = icmp slt i32 %call1231, 0
  br i1 %cmp1232, label %if.then.1234, label %if.end.1235

if.then.1234:                                     ; preds = %if.end.1230
  br label %failed

if.end.1235:                                      ; preds = %if.end.1230
  br label %do.body.1236

do.body.1236:                                     ; preds = %if.end.1235
  %732 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %732, %struct._object** %_py_decref_tmp1237, align 8
  %733 = load %struct._object*, %struct._object** %_py_decref_tmp1237, align 8
  %ob_refcnt1238 = getelementptr inbounds %struct._object, %struct._object* %733, i32 0, i32 0
  %734 = load i64, i64* %ob_refcnt1238, align 8
  %dec1239 = add i64 %734, -1
  store i64 %dec1239, i64* %ob_refcnt1238, align 8
  %cmp1240 = icmp ne i64 %dec1239, 0
  br i1 %cmp1240, label %if.then.1242, label %if.else.1243

if.then.1242:                                     ; preds = %do.body.1236
  br label %if.end.1246

if.else.1243:                                     ; preds = %do.body.1236
  %735 = load %struct._object*, %struct._object** %_py_decref_tmp1237, align 8
  %ob_type1244 = getelementptr inbounds %struct._object, %struct._object* %735, i32 0, i32 1
  %736 = load %struct._typeobject*, %struct._typeobject** %ob_type1244, align 8
  %tp_dealloc1245 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %736, i32 0, i32 4
  %737 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1245, align 8
  %738 = load %struct._object*, %struct._object** %_py_decref_tmp1237, align 8
  call void %737(%struct._object* %738)
  br label %if.end.1246

if.end.1246:                                      ; preds = %if.else.1243, %if.then.1242
  br label %do.end.1247

do.end.1247:                                      ; preds = %if.end.1246
  %739 = load %struct._expr*, %struct._expr** %o, align 8
  %col_offset = getelementptr inbounds %struct._expr, %struct._expr* %739, i32 0, i32 3
  %740 = load i32, i32* %col_offset, align 4
  %conv1248 = sext i32 %740 to i64
  %call1249 = call %struct._object* @ast2obj_int(i64 %conv1248)
  store %struct._object* %call1249, %struct._object** %value, align 8
  %741 = load %struct._object*, %struct._object** %value, align 8
  %tobool1250 = icmp ne %struct._object* %741, null
  br i1 %tobool1250, label %if.end.1252, label %if.then.1251

if.then.1251:                                     ; preds = %do.end.1247
  br label %failed

if.end.1252:                                      ; preds = %do.end.1247
  %742 = load %struct._object*, %struct._object** %result, align 8
  %743 = load %struct._object*, %struct._object** %value, align 8
  %call1253 = call i32 @_PyObject_SetAttrId(%struct._object* %742, %struct._Py_Identifier* @PyId_col_offset, %struct._object* %743)
  %cmp1254 = icmp slt i32 %call1253, 0
  br i1 %cmp1254, label %if.then.1256, label %if.end.1257

if.then.1256:                                     ; preds = %if.end.1252
  br label %failed

if.end.1257:                                      ; preds = %if.end.1252
  br label %do.body.1258

do.body.1258:                                     ; preds = %if.end.1257
  %744 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %744, %struct._object** %_py_decref_tmp1259, align 8
  %745 = load %struct._object*, %struct._object** %_py_decref_tmp1259, align 8
  %ob_refcnt1260 = getelementptr inbounds %struct._object, %struct._object* %745, i32 0, i32 0
  %746 = load i64, i64* %ob_refcnt1260, align 8
  %dec1261 = add i64 %746, -1
  store i64 %dec1261, i64* %ob_refcnt1260, align 8
  %cmp1262 = icmp ne i64 %dec1261, 0
  br i1 %cmp1262, label %if.then.1264, label %if.else.1265

if.then.1264:                                     ; preds = %do.body.1258
  br label %if.end.1268

if.else.1265:                                     ; preds = %do.body.1258
  %747 = load %struct._object*, %struct._object** %_py_decref_tmp1259, align 8
  %ob_type1266 = getelementptr inbounds %struct._object, %struct._object* %747, i32 0, i32 1
  %748 = load %struct._typeobject*, %struct._typeobject** %ob_type1266, align 8
  %tp_dealloc1267 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %748, i32 0, i32 4
  %749 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1267, align 8
  %750 = load %struct._object*, %struct._object** %_py_decref_tmp1259, align 8
  call void %749(%struct._object* %750)
  br label %if.end.1268

if.end.1268:                                      ; preds = %if.else.1265, %if.then.1264
  br label %do.end.1269

do.end.1269:                                      ; preds = %if.end.1268
  %751 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %751, %struct._object** %retval
  br label %return

failed:                                           ; preds = %if.then.1256, %if.then.1251, %if.then.1234, %if.then.1229, %if.then.1214, %if.then.1210, %if.then.1192, %if.then.1188, %if.then.1182, %if.then.1166, %if.then.1162, %if.then.1144, %if.then.1140, %if.then.1134, %if.then.1118, %if.then.1114, %if.then.1096, %if.then.1092, %if.then.1087, %if.then.1071, %if.then.1067, %if.then.1049, %if.then.1045, %if.then.1039, %if.then.1023, %if.then.1019, %if.then.1001, %if.then.997, %if.then.980, %if.then.976, %if.then.970, %if.then.954, %if.then.950, %if.then.933, %if.then.929, %if.then.912, %if.then.908, %if.then.902, %if.then.897, %if.then.881, %if.then.877, %if.then.871, %if.then.855, %if.then.851, %if.then.845, %if.then.829, %if.then.825, %if.then.820, %if.then.804, %if.then.800, %if.then.794, %if.then.778, %if.then.774, %if.then.757, %if.then.753, %if.then.736, %if.then.732, %if.then.715, %if.then.711, %if.then.693, %if.then.689, %if.then.684, %if.then.668, %if.then.664, %if.then.647, %if.then.643, %if.then.633, %if.then.612, %if.then.608, %if.then.602, %if.then.586, %if.then.582, %if.then.576, %if.then.560, %if.then.556, %if.then.550, %if.then.534, %if.then.530, %if.then.512, %if.then.508, %if.then.502, %if.then.486, %if.then.482, %if.then.464, %if.then.460, %if.then.442, %if.then.438, %if.then.433, %if.then.417, %if.then.413, %if.then.395, %if.then.391, %if.then.385, %if.then.369, %if.then.365, %if.then.348, %if.then.344, %if.then.339, %if.then.323, %if.then.319, %if.then.314, %if.then.298, %if.then.294, %if.then.276, %if.then.272, %if.then.267, %if.then.251, %if.then.247, %if.then.230, %if.then.226, %if.then.208, %if.then.204, %if.then.199, %if.then.183, %if.then.179, %if.then.162, %if.then.158, %if.then.153, %if.then.137, %if.then.133, %if.then.116, %if.then.112, %if.then.106, %if.then.90, %if.then.86, %if.then.69, %if.then.65, %if.then.47, %if.then.43, %if.then.38, %if.then.22, %if.then.18, %if.then.9, %if.then.6, %if.then.2
  br label %do.body.1270

do.body.1270:                                     ; preds = %failed
  %752 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %752, %struct._object** %_py_xdecref_tmp, align 8
  %753 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp1271 = icmp ne %struct._object* %753, null
  br i1 %cmp1271, label %if.then.1273, label %if.end.1286

if.then.1273:                                     ; preds = %do.body.1270
  br label %do.body.1274

do.body.1274:                                     ; preds = %if.then.1273
  %754 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %754, %struct._object** %_py_decref_tmp1275, align 8
  %755 = load %struct._object*, %struct._object** %_py_decref_tmp1275, align 8
  %ob_refcnt1276 = getelementptr inbounds %struct._object, %struct._object* %755, i32 0, i32 0
  %756 = load i64, i64* %ob_refcnt1276, align 8
  %dec1277 = add i64 %756, -1
  store i64 %dec1277, i64* %ob_refcnt1276, align 8
  %cmp1278 = icmp ne i64 %dec1277, 0
  br i1 %cmp1278, label %if.then.1280, label %if.else.1281

if.then.1280:                                     ; preds = %do.body.1274
  br label %if.end.1284

if.else.1281:                                     ; preds = %do.body.1274
  %757 = load %struct._object*, %struct._object** %_py_decref_tmp1275, align 8
  %ob_type1282 = getelementptr inbounds %struct._object, %struct._object* %757, i32 0, i32 1
  %758 = load %struct._typeobject*, %struct._typeobject** %ob_type1282, align 8
  %tp_dealloc1283 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %758, i32 0, i32 4
  %759 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1283, align 8
  %760 = load %struct._object*, %struct._object** %_py_decref_tmp1275, align 8
  call void %759(%struct._object* %760)
  br label %if.end.1284

if.end.1284:                                      ; preds = %if.else.1281, %if.then.1280
  br label %do.end.1285

do.end.1285:                                      ; preds = %if.end.1284
  br label %if.end.1286

if.end.1286:                                      ; preds = %do.end.1285, %do.body.1270
  br label %do.end.1287

do.end.1287:                                      ; preds = %if.end.1286
  br label %do.body.1288

do.body.1288:                                     ; preds = %do.end.1287
  %761 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %761, %struct._object** %_py_xdecref_tmp1289, align 8
  %762 = load %struct._object*, %struct._object** %_py_xdecref_tmp1289, align 8
  %cmp1290 = icmp ne %struct._object* %762, null
  br i1 %cmp1290, label %if.then.1292, label %if.end.1305

if.then.1292:                                     ; preds = %do.body.1288
  br label %do.body.1293

do.body.1293:                                     ; preds = %if.then.1292
  %763 = load %struct._object*, %struct._object** %_py_xdecref_tmp1289, align 8
  store %struct._object* %763, %struct._object** %_py_decref_tmp1294, align 8
  %764 = load %struct._object*, %struct._object** %_py_decref_tmp1294, align 8
  %ob_refcnt1295 = getelementptr inbounds %struct._object, %struct._object* %764, i32 0, i32 0
  %765 = load i64, i64* %ob_refcnt1295, align 8
  %dec1296 = add i64 %765, -1
  store i64 %dec1296, i64* %ob_refcnt1295, align 8
  %cmp1297 = icmp ne i64 %dec1296, 0
  br i1 %cmp1297, label %if.then.1299, label %if.else.1300

if.then.1299:                                     ; preds = %do.body.1293
  br label %if.end.1303

if.else.1300:                                     ; preds = %do.body.1293
  %766 = load %struct._object*, %struct._object** %_py_decref_tmp1294, align 8
  %ob_type1301 = getelementptr inbounds %struct._object, %struct._object* %766, i32 0, i32 1
  %767 = load %struct._typeobject*, %struct._typeobject** %ob_type1301, align 8
  %tp_dealloc1302 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %767, i32 0, i32 4
  %768 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1302, align 8
  %769 = load %struct._object*, %struct._object** %_py_decref_tmp1294, align 8
  call void %768(%struct._object* %769)
  br label %if.end.1303

if.end.1303:                                      ; preds = %if.else.1300, %if.then.1299
  br label %do.end.1304

do.end.1304:                                      ; preds = %if.end.1303
  br label %if.end.1305

if.end.1305:                                      ; preds = %do.end.1304, %do.body.1288
  br label %do.end.1306

do.end.1306:                                      ; preds = %if.end.1305
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.1306, %do.end.1269, %if.then
  %770 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %770
}

declare %struct._object* @PyList_New(i64) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_object(i8* %o) #0 {
entry:
  %o.addr = alloca i8*, align 8
  store i8* %o, i8** %o.addr, align 8
  %0 = load i8*, i8** %o.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* bitcast (%struct._object* @_Py_NoneStruct to i8*), i8** %o.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %o.addr, align 8
  %2 = bitcast i8* %1 to %struct._object*
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 0
  %3 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %4 = load i8*, i8** %o.addr, align 8
  %5 = bitcast i8* %4 to %struct._object*
  ret %struct._object* %5
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_arguments(i8* %_o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %_o.addr = alloca i8*, align 8
  %o = alloca %struct._arguments*, align 8
  %result = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_decref_tmp61 = alloca %struct._object*, align 8
  %_py_decref_tmp80 = alloca %struct._object*, align 8
  %_py_decref_tmp99 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp113 = alloca %struct._object*, align 8
  %_py_xdecref_tmp126 = alloca %struct._object*, align 8
  %_py_decref_tmp130 = alloca %struct._object*, align 8
  store i8* %_o, i8** %_o.addr, align 8
  %0 = load i8*, i8** %_o.addr, align 8
  %1 = bitcast i8* %0 to %struct._arguments*
  store %struct._arguments* %1, %struct._arguments** %o, align 8
  store %struct._object* null, %struct._object** %result, align 8
  store %struct._object* null, %struct._object** %value, align 8
  %2 = load %struct._arguments*, %struct._arguments** %o, align 8
  %tobool = icmp ne %struct._arguments* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._typeobject*, %struct._typeobject** @arguments_type, align 8
  %call = call %struct._object* @PyType_GenericNew(%struct._typeobject* %4, %struct._object* null, %struct._object* null)
  store %struct._object* %call, %struct._object** %result, align 8
  %5 = load %struct._object*, %struct._object** %result, align 8
  %tobool1 = icmp ne %struct._object* %5, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._arguments*, %struct._arguments** %o, align 8
  %args = getelementptr inbounds %struct._arguments, %struct._arguments* %6, i32 0, i32 0
  %7 = load %struct.asdl_seq*, %struct.asdl_seq** %args, align 8
  %call4 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %7, %struct._object* (i8*)* @ast2obj_arg)
  store %struct._object* %call4, %struct._object** %value, align 8
  %8 = load %struct._object*, %struct._object** %value, align 8
  %tobool5 = icmp ne %struct._object* %8, null
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %failed

if.end.7:                                         ; preds = %if.end.3
  %9 = load %struct._object*, %struct._object** %result, align 8
  %10 = load %struct._object*, %struct._object** %value, align 8
  %call8 = call i32 @_PyObject_SetAttrId(%struct._object* %9, %struct._Py_Identifier* @PyId_args, %struct._object* %10)
  %cmp = icmp eq i32 %call8, -1
  br i1 %cmp, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.7
  br label %failed

if.end.10:                                        ; preds = %if.end.7
  br label %do.body

do.body:                                          ; preds = %if.end.10
  %11 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0
  %13 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %13, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %16(%struct._object* %17)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  %18 = load %struct._arguments*, %struct._arguments** %o, align 8
  %vararg = getelementptr inbounds %struct._arguments, %struct._arguments* %18, i32 0, i32 1
  %19 = load %struct._arg*, %struct._arg** %vararg, align 8
  %20 = bitcast %struct._arg* %19 to i8*
  %call14 = call %struct._object* @ast2obj_arg(i8* %20)
  store %struct._object* %call14, %struct._object** %value, align 8
  %21 = load %struct._object*, %struct._object** %value, align 8
  %tobool15 = icmp ne %struct._object* %21, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %do.end
  br label %failed

if.end.17:                                        ; preds = %do.end
  %22 = load %struct._object*, %struct._object** %result, align 8
  %23 = load %struct._object*, %struct._object** %value, align 8
  %call18 = call i32 @_PyObject_SetAttrId(%struct._object* %22, %struct._Py_Identifier* @PyId_vararg, %struct._object* %23)
  %cmp19 = icmp eq i32 %call18, -1
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end.17
  br label %failed

if.end.21:                                        ; preds = %if.end.17
  br label %do.body.22

do.body.22:                                       ; preds = %if.end.21
  %24 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %24, %struct._object** %_py_decref_tmp23, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt24, align 8
  %dec25 = add i64 %26, -1
  store i64 %dec25, i64* %ob_refcnt24, align 8
  %cmp26 = icmp ne i64 %dec25, 0
  br i1 %cmp26, label %if.then.27, label %if.else.28

if.then.27:                                       ; preds = %do.body.22
  br label %if.end.31

if.else.28:                                       ; preds = %do.body.22
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  call void %29(%struct._object* %30)
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  br label %do.end.32

do.end.32:                                        ; preds = %if.end.31
  %31 = load %struct._arguments*, %struct._arguments** %o, align 8
  %kwonlyargs = getelementptr inbounds %struct._arguments, %struct._arguments* %31, i32 0, i32 2
  %32 = load %struct.asdl_seq*, %struct.asdl_seq** %kwonlyargs, align 8
  %call33 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %32, %struct._object* (i8*)* @ast2obj_arg)
  store %struct._object* %call33, %struct._object** %value, align 8
  %33 = load %struct._object*, %struct._object** %value, align 8
  %tobool34 = icmp ne %struct._object* %33, null
  br i1 %tobool34, label %if.end.36, label %if.then.35

if.then.35:                                       ; preds = %do.end.32
  br label %failed

if.end.36:                                        ; preds = %do.end.32
  %34 = load %struct._object*, %struct._object** %result, align 8
  %35 = load %struct._object*, %struct._object** %value, align 8
  %call37 = call i32 @_PyObject_SetAttrId(%struct._object* %34, %struct._Py_Identifier* @PyId_kwonlyargs, %struct._object* %35)
  %cmp38 = icmp eq i32 %call37, -1
  br i1 %cmp38, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %if.end.36
  br label %failed

if.end.40:                                        ; preds = %if.end.36
  br label %do.body.41

do.body.41:                                       ; preds = %if.end.40
  %36 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %36, %struct._object** %_py_decref_tmp42, align 8
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0
  %38 = load i64, i64* %ob_refcnt43, align 8
  %dec44 = add i64 %38, -1
  store i64 %dec44, i64* %ob_refcnt43, align 8
  %cmp45 = icmp ne i64 %dec44, 0
  br i1 %cmp45, label %if.then.46, label %if.else.47

if.then.46:                                       ; preds = %do.body.41
  br label %if.end.50

if.else.47:                                       ; preds = %do.body.41
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  call void %41(%struct._object* %42)
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  br label %do.end.51

do.end.51:                                        ; preds = %if.end.50
  %43 = load %struct._arguments*, %struct._arguments** %o, align 8
  %kw_defaults = getelementptr inbounds %struct._arguments, %struct._arguments* %43, i32 0, i32 3
  %44 = load %struct.asdl_seq*, %struct.asdl_seq** %kw_defaults, align 8
  %call52 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %44, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call52, %struct._object** %value, align 8
  %45 = load %struct._object*, %struct._object** %value, align 8
  %tobool53 = icmp ne %struct._object* %45, null
  br i1 %tobool53, label %if.end.55, label %if.then.54

if.then.54:                                       ; preds = %do.end.51
  br label %failed

if.end.55:                                        ; preds = %do.end.51
  %46 = load %struct._object*, %struct._object** %result, align 8
  %47 = load %struct._object*, %struct._object** %value, align 8
  %call56 = call i32 @_PyObject_SetAttrId(%struct._object* %46, %struct._Py_Identifier* @PyId_kw_defaults, %struct._object* %47)
  %cmp57 = icmp eq i32 %call56, -1
  br i1 %cmp57, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %if.end.55
  br label %failed

if.end.59:                                        ; preds = %if.end.55
  br label %do.body.60

do.body.60:                                       ; preds = %if.end.59
  %48 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %48, %struct._object** %_py_decref_tmp61, align 8
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0
  %50 = load i64, i64* %ob_refcnt62, align 8
  %dec63 = add i64 %50, -1
  store i64 %dec63, i64* %ob_refcnt62, align 8
  %cmp64 = icmp ne i64 %dec63, 0
  br i1 %cmp64, label %if.then.65, label %if.else.66

if.then.65:                                       ; preds = %do.body.60
  br label %if.end.69

if.else.66:                                       ; preds = %do.body.60
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8
  %ob_type67 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type67, align 8
  %tp_dealloc68 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc68, align 8
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8
  call void %53(%struct._object* %54)
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.66, %if.then.65
  br label %do.end.70

do.end.70:                                        ; preds = %if.end.69
  %55 = load %struct._arguments*, %struct._arguments** %o, align 8
  %kwarg = getelementptr inbounds %struct._arguments, %struct._arguments* %55, i32 0, i32 4
  %56 = load %struct._arg*, %struct._arg** %kwarg, align 8
  %57 = bitcast %struct._arg* %56 to i8*
  %call71 = call %struct._object* @ast2obj_arg(i8* %57)
  store %struct._object* %call71, %struct._object** %value, align 8
  %58 = load %struct._object*, %struct._object** %value, align 8
  %tobool72 = icmp ne %struct._object* %58, null
  br i1 %tobool72, label %if.end.74, label %if.then.73

if.then.73:                                       ; preds = %do.end.70
  br label %failed

if.end.74:                                        ; preds = %do.end.70
  %59 = load %struct._object*, %struct._object** %result, align 8
  %60 = load %struct._object*, %struct._object** %value, align 8
  %call75 = call i32 @_PyObject_SetAttrId(%struct._object* %59, %struct._Py_Identifier* @PyId_kwarg, %struct._object* %60)
  %cmp76 = icmp eq i32 %call75, -1
  br i1 %cmp76, label %if.then.77, label %if.end.78

if.then.77:                                       ; preds = %if.end.74
  br label %failed

if.end.78:                                        ; preds = %if.end.74
  br label %do.body.79

do.body.79:                                       ; preds = %if.end.78
  %61 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %61, %struct._object** %_py_decref_tmp80, align 8
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0
  %63 = load i64, i64* %ob_refcnt81, align 8
  %dec82 = add i64 %63, -1
  store i64 %dec82, i64* %ob_refcnt81, align 8
  %cmp83 = icmp ne i64 %dec82, 0
  br i1 %cmp83, label %if.then.84, label %if.else.85

if.then.84:                                       ; preds = %do.body.79
  br label %if.end.88

if.else.85:                                       ; preds = %do.body.79
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8
  %ob_type86 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type86, align 8
  %tp_dealloc87 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %65, i32 0, i32 4
  %66 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc87, align 8
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8
  call void %66(%struct._object* %67)
  br label %if.end.88

if.end.88:                                        ; preds = %if.else.85, %if.then.84
  br label %do.end.89

do.end.89:                                        ; preds = %if.end.88
  %68 = load %struct._arguments*, %struct._arguments** %o, align 8
  %defaults = getelementptr inbounds %struct._arguments, %struct._arguments* %68, i32 0, i32 5
  %69 = load %struct.asdl_seq*, %struct.asdl_seq** %defaults, align 8
  %call90 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %69, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call90, %struct._object** %value, align 8
  %70 = load %struct._object*, %struct._object** %value, align 8
  %tobool91 = icmp ne %struct._object* %70, null
  br i1 %tobool91, label %if.end.93, label %if.then.92

if.then.92:                                       ; preds = %do.end.89
  br label %failed

if.end.93:                                        ; preds = %do.end.89
  %71 = load %struct._object*, %struct._object** %result, align 8
  %72 = load %struct._object*, %struct._object** %value, align 8
  %call94 = call i32 @_PyObject_SetAttrId(%struct._object* %71, %struct._Py_Identifier* @PyId_defaults, %struct._object* %72)
  %cmp95 = icmp eq i32 %call94, -1
  br i1 %cmp95, label %if.then.96, label %if.end.97

if.then.96:                                       ; preds = %if.end.93
  br label %failed

if.end.97:                                        ; preds = %if.end.93
  br label %do.body.98

do.body.98:                                       ; preds = %if.end.97
  %73 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %73, %struct._object** %_py_decref_tmp99, align 8
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp99, align 8
  %ob_refcnt100 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0
  %75 = load i64, i64* %ob_refcnt100, align 8
  %dec101 = add i64 %75, -1
  store i64 %dec101, i64* %ob_refcnt100, align 8
  %cmp102 = icmp ne i64 %dec101, 0
  br i1 %cmp102, label %if.then.103, label %if.else.104

if.then.103:                                      ; preds = %do.body.98
  br label %if.end.107

if.else.104:                                      ; preds = %do.body.98
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp99, align 8
  %ob_type105 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type105, align 8
  %tp_dealloc106 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc106, align 8
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp99, align 8
  call void %78(%struct._object* %79)
  br label %if.end.107

if.end.107:                                       ; preds = %if.else.104, %if.then.103
  br label %do.end.108

do.end.108:                                       ; preds = %if.end.107
  %80 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %80, %struct._object** %retval
  br label %return

failed:                                           ; preds = %if.then.96, %if.then.92, %if.then.77, %if.then.73, %if.then.58, %if.then.54, %if.then.39, %if.then.35, %if.then.20, %if.then.16, %if.then.9, %if.then.6
  br label %do.body.109

do.body.109:                                      ; preds = %failed
  %81 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %81, %struct._object** %_py_xdecref_tmp, align 8
  %82 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp110 = icmp ne %struct._object* %82, null
  br i1 %cmp110, label %if.then.111, label %if.end.123

if.then.111:                                      ; preds = %do.body.109
  br label %do.body.112

do.body.112:                                      ; preds = %if.then.111
  %83 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %83, %struct._object** %_py_decref_tmp113, align 8
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8
  %ob_refcnt114 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 0
  %85 = load i64, i64* %ob_refcnt114, align 8
  %dec115 = add i64 %85, -1
  store i64 %dec115, i64* %ob_refcnt114, align 8
  %cmp116 = icmp ne i64 %dec115, 0
  br i1 %cmp116, label %if.then.117, label %if.else.118

if.then.117:                                      ; preds = %do.body.112
  br label %if.end.121

if.else.118:                                      ; preds = %do.body.112
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8
  %ob_type119 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 1
  %87 = load %struct._typeobject*, %struct._typeobject** %ob_type119, align 8
  %tp_dealloc120 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %87, i32 0, i32 4
  %88 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc120, align 8
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8
  call void %88(%struct._object* %89)
  br label %if.end.121

if.end.121:                                       ; preds = %if.else.118, %if.then.117
  br label %do.end.122

do.end.122:                                       ; preds = %if.end.121
  br label %if.end.123

if.end.123:                                       ; preds = %do.end.122, %do.body.109
  br label %do.end.124

do.end.124:                                       ; preds = %if.end.123
  br label %do.body.125

do.body.125:                                      ; preds = %do.end.124
  %90 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %90, %struct._object** %_py_xdecref_tmp126, align 8
  %91 = load %struct._object*, %struct._object** %_py_xdecref_tmp126, align 8
  %cmp127 = icmp ne %struct._object* %91, null
  br i1 %cmp127, label %if.then.128, label %if.end.140

if.then.128:                                      ; preds = %do.body.125
  br label %do.body.129

do.body.129:                                      ; preds = %if.then.128
  %92 = load %struct._object*, %struct._object** %_py_xdecref_tmp126, align 8
  store %struct._object* %92, %struct._object** %_py_decref_tmp130, align 8
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp130, align 8
  %ob_refcnt131 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0
  %94 = load i64, i64* %ob_refcnt131, align 8
  %dec132 = add i64 %94, -1
  store i64 %dec132, i64* %ob_refcnt131, align 8
  %cmp133 = icmp ne i64 %dec132, 0
  br i1 %cmp133, label %if.then.134, label %if.else.135

if.then.134:                                      ; preds = %do.body.129
  br label %if.end.138

if.else.135:                                      ; preds = %do.body.129
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp130, align 8
  %ob_type136 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 1
  %96 = load %struct._typeobject*, %struct._typeobject** %ob_type136, align 8
  %tp_dealloc137 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %96, i32 0, i32 4
  %97 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc137, align 8
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp130, align 8
  call void %97(%struct._object* %98)
  br label %if.end.138

if.end.138:                                       ; preds = %if.else.135, %if.then.134
  br label %do.end.139

do.end.139:                                       ; preds = %if.end.138
  br label %if.end.140

if.end.140:                                       ; preds = %do.end.139, %do.body.125
  br label %do.end.141

do.end.141:                                       ; preds = %if.end.140
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.141, %do.end.108, %if.then.2, %if.then
  %99 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %99
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_keyword(i8* %_o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %_o.addr = alloca i8*, align 8
  %o = alloca %struct._keyword*, align 8
  %result = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp24 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp38 = alloca %struct._object*, align 8
  %_py_xdecref_tmp51 = alloca %struct._object*, align 8
  %_py_decref_tmp55 = alloca %struct._object*, align 8
  store i8* %_o, i8** %_o.addr, align 8
  %0 = load i8*, i8** %_o.addr, align 8
  %1 = bitcast i8* %0 to %struct._keyword*
  store %struct._keyword* %1, %struct._keyword** %o, align 8
  store %struct._object* null, %struct._object** %result, align 8
  store %struct._object* null, %struct._object** %value, align 8
  %2 = load %struct._keyword*, %struct._keyword** %o, align 8
  %tobool = icmp ne %struct._keyword* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._typeobject*, %struct._typeobject** @keyword_type, align 8
  %call = call %struct._object* @PyType_GenericNew(%struct._typeobject* %4, %struct._object* null, %struct._object* null)
  store %struct._object* %call, %struct._object** %result, align 8
  %5 = load %struct._object*, %struct._object** %result, align 8
  %tobool1 = icmp ne %struct._object* %5, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._keyword*, %struct._keyword** %o, align 8
  %arg = getelementptr inbounds %struct._keyword, %struct._keyword* %6, i32 0, i32 0
  %7 = load %struct._object*, %struct._object** %arg, align 8
  %8 = bitcast %struct._object* %7 to i8*
  %call4 = call %struct._object* @ast2obj_object(i8* %8)
  store %struct._object* %call4, %struct._object** %value, align 8
  %9 = load %struct._object*, %struct._object** %value, align 8
  %tobool5 = icmp ne %struct._object* %9, null
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %failed

if.end.7:                                         ; preds = %if.end.3
  %10 = load %struct._object*, %struct._object** %result, align 8
  %11 = load %struct._object*, %struct._object** %value, align 8
  %call8 = call i32 @_PyObject_SetAttrId(%struct._object* %10, %struct._Py_Identifier* @PyId_arg, %struct._object* %11)
  %cmp = icmp eq i32 %call8, -1
  br i1 %cmp, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.7
  br label %failed

if.end.10:                                        ; preds = %if.end.7
  br label %do.body

do.body:                                          ; preds = %if.end.10
  %12 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %14, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %17(%struct._object* %18)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  %19 = load %struct._keyword*, %struct._keyword** %o, align 8
  %value14 = getelementptr inbounds %struct._keyword, %struct._keyword* %19, i32 0, i32 1
  %20 = load %struct._expr*, %struct._expr** %value14, align 8
  %21 = bitcast %struct._expr* %20 to i8*
  %call15 = call %struct._object* @ast2obj_expr(i8* %21)
  store %struct._object* %call15, %struct._object** %value, align 8
  %22 = load %struct._object*, %struct._object** %value, align 8
  %tobool16 = icmp ne %struct._object* %22, null
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %do.end
  br label %failed

if.end.18:                                        ; preds = %do.end
  %23 = load %struct._object*, %struct._object** %result, align 8
  %24 = load %struct._object*, %struct._object** %value, align 8
  %call19 = call i32 @_PyObject_SetAttrId(%struct._object* %23, %struct._Py_Identifier* @PyId_value, %struct._object* %24)
  %cmp20 = icmp eq i32 %call19, -1
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.end.18
  br label %failed

if.end.22:                                        ; preds = %if.end.18
  br label %do.body.23

do.body.23:                                       ; preds = %if.end.22
  %25 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %25, %struct._object** %_py_decref_tmp24, align 8
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8
  %ob_refcnt25 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0
  %27 = load i64, i64* %ob_refcnt25, align 8
  %dec26 = add i64 %27, -1
  store i64 %dec26, i64* %ob_refcnt25, align 8
  %cmp27 = icmp ne i64 %dec26, 0
  br i1 %cmp27, label %if.then.28, label %if.else.29

if.then.28:                                       ; preds = %do.body.23
  br label %if.end.32

if.else.29:                                       ; preds = %do.body.23
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8
  %tp_dealloc31 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc31, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8
  call void %30(%struct._object* %31)
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.29, %if.then.28
  br label %do.end.33

do.end.33:                                        ; preds = %if.end.32
  %32 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %32, %struct._object** %retval
  br label %return

failed:                                           ; preds = %if.then.21, %if.then.17, %if.then.9, %if.then.6
  br label %do.body.34

do.body.34:                                       ; preds = %failed
  %33 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %33, %struct._object** %_py_xdecref_tmp, align 8
  %34 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp35 = icmp ne %struct._object* %34, null
  br i1 %cmp35, label %if.then.36, label %if.end.48

if.then.36:                                       ; preds = %do.body.34
  br label %do.body.37

do.body.37:                                       ; preds = %if.then.36
  %35 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %35, %struct._object** %_py_decref_tmp38, align 8
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0
  %37 = load i64, i64* %ob_refcnt39, align 8
  %dec40 = add i64 %37, -1
  store i64 %dec40, i64* %ob_refcnt39, align 8
  %cmp41 = icmp ne i64 %dec40, 0
  br i1 %cmp41, label %if.then.42, label %if.else.43

if.then.42:                                       ; preds = %do.body.37
  br label %if.end.46

if.else.43:                                       ; preds = %do.body.37
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8
  %ob_type44 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type44, align 8
  %tp_dealloc45 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc45, align 8
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8
  call void %40(%struct._object* %41)
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.43, %if.then.42
  br label %do.end.47

do.end.47:                                        ; preds = %if.end.46
  br label %if.end.48

if.end.48:                                        ; preds = %do.end.47, %do.body.34
  br label %do.end.49

do.end.49:                                        ; preds = %if.end.48
  br label %do.body.50

do.body.50:                                       ; preds = %do.end.49
  %42 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %42, %struct._object** %_py_xdecref_tmp51, align 8
  %43 = load %struct._object*, %struct._object** %_py_xdecref_tmp51, align 8
  %cmp52 = icmp ne %struct._object* %43, null
  br i1 %cmp52, label %if.then.53, label %if.end.65

if.then.53:                                       ; preds = %do.body.50
  br label %do.body.54

do.body.54:                                       ; preds = %if.then.53
  %44 = load %struct._object*, %struct._object** %_py_xdecref_tmp51, align 8
  store %struct._object* %44, %struct._object** %_py_decref_tmp55, align 8
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0
  %46 = load i64, i64* %ob_refcnt56, align 8
  %dec57 = add i64 %46, -1
  store i64 %dec57, i64* %ob_refcnt56, align 8
  %cmp58 = icmp ne i64 %dec57, 0
  br i1 %cmp58, label %if.then.59, label %if.else.60

if.then.59:                                       ; preds = %do.body.54
  br label %if.end.63

if.else.60:                                       ; preds = %do.body.54
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8
  call void %49(%struct._object* %50)
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.59
  br label %do.end.64

do.end.64:                                        ; preds = %if.end.63
  br label %if.end.65

if.end.65:                                        ; preds = %do.end.64, %do.body.50
  br label %do.end.66

do.end.66:                                        ; preds = %if.end.65
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.66, %do.end.33, %if.then.2, %if.then
  %51 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %51
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_operator(i32 %o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %o.addr = alloca i32, align 4
  store i32 %o, i32* %o.addr, align 4
  %0 = load i32, i32* %o.addr, align 4
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.1
    i32 3, label %sw.bb.4
    i32 4, label %sw.bb.7
    i32 5, label %sw.bb.10
    i32 6, label %sw.bb.13
    i32 7, label %sw.bb.16
    i32 8, label %sw.bb.19
    i32 9, label %sw.bb.22
    i32 10, label %sw.bb.25
    i32 11, label %sw.bb.28
    i32 12, label %sw.bb.31
  ]

sw.bb:                                            ; preds = %entry
  %1 = load %struct._object*, %struct._object** @Add_singleton, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 0
  %2 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %2, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %3 = load %struct._object*, %struct._object** @Add_singleton, align 8
  store %struct._object* %3, %struct._object** %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @Sub_singleton, align 8
  %ob_refcnt2 = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0
  %5 = load i64, i64* %ob_refcnt2, align 8
  %inc3 = add i64 %5, 1
  store i64 %inc3, i64* %ob_refcnt2, align 8
  %6 = load %struct._object*, %struct._object** @Sub_singleton, align 8
  store %struct._object* %6, %struct._object** %retval
  br label %return

sw.bb.4:                                          ; preds = %entry
  %7 = load %struct._object*, %struct._object** @Mult_singleton, align 8
  %ob_refcnt5 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0
  %8 = load i64, i64* %ob_refcnt5, align 8
  %inc6 = add i64 %8, 1
  store i64 %inc6, i64* %ob_refcnt5, align 8
  %9 = load %struct._object*, %struct._object** @Mult_singleton, align 8
  store %struct._object* %9, %struct._object** %retval
  br label %return

sw.bb.7:                                          ; preds = %entry
  %10 = load %struct._object*, %struct._object** @Div_singleton, align 8
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0
  %11 = load i64, i64* %ob_refcnt8, align 8
  %inc9 = add i64 %11, 1
  store i64 %inc9, i64* %ob_refcnt8, align 8
  %12 = load %struct._object*, %struct._object** @Div_singleton, align 8
  store %struct._object* %12, %struct._object** %retval
  br label %return

sw.bb.10:                                         ; preds = %entry
  %13 = load %struct._object*, %struct._object** @Mod_singleton, align 8
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt11, align 8
  %inc12 = add i64 %14, 1
  store i64 %inc12, i64* %ob_refcnt11, align 8
  %15 = load %struct._object*, %struct._object** @Mod_singleton, align 8
  store %struct._object* %15, %struct._object** %retval
  br label %return

sw.bb.13:                                         ; preds = %entry
  %16 = load %struct._object*, %struct._object** @Pow_singleton, align 8
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0
  %17 = load i64, i64* %ob_refcnt14, align 8
  %inc15 = add i64 %17, 1
  store i64 %inc15, i64* %ob_refcnt14, align 8
  %18 = load %struct._object*, %struct._object** @Pow_singleton, align 8
  store %struct._object* %18, %struct._object** %retval
  br label %return

sw.bb.16:                                         ; preds = %entry
  %19 = load %struct._object*, %struct._object** @LShift_singleton, align 8
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0
  %20 = load i64, i64* %ob_refcnt17, align 8
  %inc18 = add i64 %20, 1
  store i64 %inc18, i64* %ob_refcnt17, align 8
  %21 = load %struct._object*, %struct._object** @LShift_singleton, align 8
  store %struct._object* %21, %struct._object** %retval
  br label %return

sw.bb.19:                                         ; preds = %entry
  %22 = load %struct._object*, %struct._object** @RShift_singleton, align 8
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0
  %23 = load i64, i64* %ob_refcnt20, align 8
  %inc21 = add i64 %23, 1
  store i64 %inc21, i64* %ob_refcnt20, align 8
  %24 = load %struct._object*, %struct._object** @RShift_singleton, align 8
  store %struct._object* %24, %struct._object** %retval
  br label %return

sw.bb.22:                                         ; preds = %entry
  %25 = load %struct._object*, %struct._object** @BitOr_singleton, align 8
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt23, align 8
  %inc24 = add i64 %26, 1
  store i64 %inc24, i64* %ob_refcnt23, align 8
  %27 = load %struct._object*, %struct._object** @BitOr_singleton, align 8
  store %struct._object* %27, %struct._object** %retval
  br label %return

sw.bb.25:                                         ; preds = %entry
  %28 = load %struct._object*, %struct._object** @BitXor_singleton, align 8
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0
  %29 = load i64, i64* %ob_refcnt26, align 8
  %inc27 = add i64 %29, 1
  store i64 %inc27, i64* %ob_refcnt26, align 8
  %30 = load %struct._object*, %struct._object** @BitXor_singleton, align 8
  store %struct._object* %30, %struct._object** %retval
  br label %return

sw.bb.28:                                         ; preds = %entry
  %31 = load %struct._object*, %struct._object** @BitAnd_singleton, align 8
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0
  %32 = load i64, i64* %ob_refcnt29, align 8
  %inc30 = add i64 %32, 1
  store i64 %inc30, i64* %ob_refcnt29, align 8
  %33 = load %struct._object*, %struct._object** @BitAnd_singleton, align 8
  store %struct._object* %33, %struct._object** %retval
  br label %return

sw.bb.31:                                         ; preds = %entry
  %34 = load %struct._object*, %struct._object** @FloorDiv_singleton, align 8
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0
  %35 = load i64, i64* %ob_refcnt32, align 8
  %inc33 = add i64 %35, 1
  store i64 %inc33, i64* %ob_refcnt32, align 8
  %36 = load %struct._object*, %struct._object** @FloorDiv_singleton, align 8
  store %struct._object* %36, %struct._object** %retval
  br label %return

sw.default:                                       ; preds = %entry
  %37 = load %struct._object*, %struct._object** @PyExc_SystemError, align 8
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %37, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.237, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %sw.default, %sw.bb.31, %sw.bb.28, %sw.bb.25, %sw.bb.22, %sw.bb.19, %sw.bb.16, %sw.bb.13, %sw.bb.10, %sw.bb.7, %sw.bb.4, %sw.bb.1, %sw.bb
  %38 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %38
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_withitem(i8* %_o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %_o.addr = alloca i8*, align 8
  %o = alloca %struct._withitem*, align 8
  %result = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp37 = alloca %struct._object*, align 8
  %_py_xdecref_tmp50 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  store i8* %_o, i8** %_o.addr, align 8
  %0 = load i8*, i8** %_o.addr, align 8
  %1 = bitcast i8* %0 to %struct._withitem*
  store %struct._withitem* %1, %struct._withitem** %o, align 8
  store %struct._object* null, %struct._object** %result, align 8
  store %struct._object* null, %struct._object** %value, align 8
  %2 = load %struct._withitem*, %struct._withitem** %o, align 8
  %tobool = icmp ne %struct._withitem* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._typeobject*, %struct._typeobject** @withitem_type, align 8
  %call = call %struct._object* @PyType_GenericNew(%struct._typeobject* %4, %struct._object* null, %struct._object* null)
  store %struct._object* %call, %struct._object** %result, align 8
  %5 = load %struct._object*, %struct._object** %result, align 8
  %tobool1 = icmp ne %struct._object* %5, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._withitem*, %struct._withitem** %o, align 8
  %context_expr = getelementptr inbounds %struct._withitem, %struct._withitem* %6, i32 0, i32 0
  %7 = load %struct._expr*, %struct._expr** %context_expr, align 8
  %8 = bitcast %struct._expr* %7 to i8*
  %call4 = call %struct._object* @ast2obj_expr(i8* %8)
  store %struct._object* %call4, %struct._object** %value, align 8
  %9 = load %struct._object*, %struct._object** %value, align 8
  %tobool5 = icmp ne %struct._object* %9, null
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %failed

if.end.7:                                         ; preds = %if.end.3
  %10 = load %struct._object*, %struct._object** %result, align 8
  %11 = load %struct._object*, %struct._object** %value, align 8
  %call8 = call i32 @_PyObject_SetAttrId(%struct._object* %10, %struct._Py_Identifier* @PyId_context_expr, %struct._object* %11)
  %cmp = icmp eq i32 %call8, -1
  br i1 %cmp, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.7
  br label %failed

if.end.10:                                        ; preds = %if.end.7
  br label %do.body

do.body:                                          ; preds = %if.end.10
  %12 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %14, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %17(%struct._object* %18)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  %19 = load %struct._withitem*, %struct._withitem** %o, align 8
  %optional_vars = getelementptr inbounds %struct._withitem, %struct._withitem* %19, i32 0, i32 1
  %20 = load %struct._expr*, %struct._expr** %optional_vars, align 8
  %21 = bitcast %struct._expr* %20 to i8*
  %call14 = call %struct._object* @ast2obj_expr(i8* %21)
  store %struct._object* %call14, %struct._object** %value, align 8
  %22 = load %struct._object*, %struct._object** %value, align 8
  %tobool15 = icmp ne %struct._object* %22, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %do.end
  br label %failed

if.end.17:                                        ; preds = %do.end
  %23 = load %struct._object*, %struct._object** %result, align 8
  %24 = load %struct._object*, %struct._object** %value, align 8
  %call18 = call i32 @_PyObject_SetAttrId(%struct._object* %23, %struct._Py_Identifier* @PyId_optional_vars, %struct._object* %24)
  %cmp19 = icmp eq i32 %call18, -1
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end.17
  br label %failed

if.end.21:                                        ; preds = %if.end.17
  br label %do.body.22

do.body.22:                                       ; preds = %if.end.21
  %25 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %25, %struct._object** %_py_decref_tmp23, align 8
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0
  %27 = load i64, i64* %ob_refcnt24, align 8
  %dec25 = add i64 %27, -1
  store i64 %dec25, i64* %ob_refcnt24, align 8
  %cmp26 = icmp ne i64 %dec25, 0
  br i1 %cmp26, label %if.then.27, label %if.else.28

if.then.27:                                       ; preds = %do.body.22
  br label %if.end.31

if.else.28:                                       ; preds = %do.body.22
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  call void %30(%struct._object* %31)
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  br label %do.end.32

do.end.32:                                        ; preds = %if.end.31
  %32 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %32, %struct._object** %retval
  br label %return

failed:                                           ; preds = %if.then.20, %if.then.16, %if.then.9, %if.then.6
  br label %do.body.33

do.body.33:                                       ; preds = %failed
  %33 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %33, %struct._object** %_py_xdecref_tmp, align 8
  %34 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp34 = icmp ne %struct._object* %34, null
  br i1 %cmp34, label %if.then.35, label %if.end.47

if.then.35:                                       ; preds = %do.body.33
  br label %do.body.36

do.body.36:                                       ; preds = %if.then.35
  %35 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %35, %struct._object** %_py_decref_tmp37, align 8
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0
  %37 = load i64, i64* %ob_refcnt38, align 8
  %dec39 = add i64 %37, -1
  store i64 %dec39, i64* %ob_refcnt38, align 8
  %cmp40 = icmp ne i64 %dec39, 0
  br i1 %cmp40, label %if.then.41, label %if.else.42

if.then.41:                                       ; preds = %do.body.36
  br label %if.end.45

if.else.42:                                       ; preds = %do.body.36
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8
  call void %40(%struct._object* %41)
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  br label %do.end.46

do.end.46:                                        ; preds = %if.end.45
  br label %if.end.47

if.end.47:                                        ; preds = %do.end.46, %do.body.33
  br label %do.end.48

do.end.48:                                        ; preds = %if.end.47
  br label %do.body.49

do.body.49:                                       ; preds = %do.end.48
  %42 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %42, %struct._object** %_py_xdecref_tmp50, align 8
  %43 = load %struct._object*, %struct._object** %_py_xdecref_tmp50, align 8
  %cmp51 = icmp ne %struct._object* %43, null
  br i1 %cmp51, label %if.then.52, label %if.end.64

if.then.52:                                       ; preds = %do.body.49
  br label %do.body.53

do.body.53:                                       ; preds = %if.then.52
  %44 = load %struct._object*, %struct._object** %_py_xdecref_tmp50, align 8
  store %struct._object* %44, %struct._object** %_py_decref_tmp54, align 8
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0
  %46 = load i64, i64* %ob_refcnt55, align 8
  %dec56 = add i64 %46, -1
  store i64 %dec56, i64* %ob_refcnt55, align 8
  %cmp57 = icmp ne i64 %dec56, 0
  br i1 %cmp57, label %if.then.58, label %if.else.59

if.then.58:                                       ; preds = %do.body.53
  br label %if.end.62

if.else.59:                                       ; preds = %do.body.53
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  call void %49(%struct._object* %50)
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  br label %do.end.63

do.end.63:                                        ; preds = %if.end.62
  br label %if.end.64

if.end.64:                                        ; preds = %do.end.63, %do.body.49
  br label %do.end.65

do.end.65:                                        ; preds = %if.end.64
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.65, %do.end.32, %if.then.2, %if.then
  %51 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %51
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_excepthandler(i8* %_o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %_o.addr = alloca i8*, align 8
  %o = alloca %struct._excepthandler*, align 8
  %result = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp25 = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  %_py_decref_tmp66 = alloca %struct._object*, align 8
  %_py_decref_tmp88 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp104 = alloca %struct._object*, align 8
  %_py_xdecref_tmp118 = alloca %struct._object*, align 8
  %_py_decref_tmp123 = alloca %struct._object*, align 8
  store i8* %_o, i8** %_o.addr, align 8
  %0 = load i8*, i8** %_o.addr, align 8
  %1 = bitcast i8* %0 to %struct._excepthandler*
  store %struct._excepthandler* %1, %struct._excepthandler** %o, align 8
  store %struct._object* null, %struct._object** %result, align 8
  store %struct._object* null, %struct._object** %value, align 8
  %2 = load %struct._excepthandler*, %struct._excepthandler** %o, align 8
  %tobool = icmp ne %struct._excepthandler* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._excepthandler*, %struct._excepthandler** %o, align 8
  %kind = getelementptr inbounds %struct._excepthandler, %struct._excepthandler* %4, i32 0, i32 0
  %5 = load i32, i32* %kind, align 4
  switch i32 %5, label %sw.epilog [
    i32 1, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.end
  %6 = load %struct._typeobject*, %struct._typeobject** @ExceptHandler_type, align 8
  %call = call %struct._object* @PyType_GenericNew(%struct._typeobject* %6, %struct._object* null, %struct._object* null)
  store %struct._object* %call, %struct._object** %result, align 8
  %7 = load %struct._object*, %struct._object** %result, align 8
  %tobool1 = icmp ne %struct._object* %7, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %sw.bb
  br label %failed

if.end.3:                                         ; preds = %sw.bb
  %8 = load %struct._excepthandler*, %struct._excepthandler** %o, align 8
  %v = getelementptr inbounds %struct._excepthandler, %struct._excepthandler* %8, i32 0, i32 1
  %ExceptHandler = bitcast %union.anon.52* %v to %struct.anon.53*
  %type = getelementptr inbounds %struct.anon.53, %struct.anon.53* %ExceptHandler, i32 0, i32 0
  %9 = load %struct._expr*, %struct._expr** %type, align 8
  %10 = bitcast %struct._expr* %9 to i8*
  %call4 = call %struct._object* @ast2obj_expr(i8* %10)
  store %struct._object* %call4, %struct._object** %value, align 8
  %11 = load %struct._object*, %struct._object** %value, align 8
  %tobool5 = icmp ne %struct._object* %11, null
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %failed

if.end.7:                                         ; preds = %if.end.3
  %12 = load %struct._object*, %struct._object** %result, align 8
  %13 = load %struct._object*, %struct._object** %value, align 8
  %call8 = call i32 @_PyObject_SetAttrId(%struct._object* %12, %struct._Py_Identifier* @PyId_type, %struct._object* %13)
  %cmp = icmp eq i32 %call8, -1
  br i1 %cmp, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.7
  br label %failed

if.end.10:                                        ; preds = %if.end.7
  br label %do.body

do.body:                                          ; preds = %if.end.10
  %14 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0
  %16 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %16, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %19(%struct._object* %20)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  %21 = load %struct._excepthandler*, %struct._excepthandler** %o, align 8
  %v14 = getelementptr inbounds %struct._excepthandler, %struct._excepthandler* %21, i32 0, i32 1
  %ExceptHandler15 = bitcast %union.anon.52* %v14 to %struct.anon.53*
  %name = getelementptr inbounds %struct.anon.53, %struct.anon.53* %ExceptHandler15, i32 0, i32 1
  %22 = load %struct._object*, %struct._object** %name, align 8
  %23 = bitcast %struct._object* %22 to i8*
  %call16 = call %struct._object* @ast2obj_object(i8* %23)
  store %struct._object* %call16, %struct._object** %value, align 8
  %24 = load %struct._object*, %struct._object** %value, align 8
  %tobool17 = icmp ne %struct._object* %24, null
  br i1 %tobool17, label %if.end.19, label %if.then.18

if.then.18:                                       ; preds = %do.end
  br label %failed

if.end.19:                                        ; preds = %do.end
  %25 = load %struct._object*, %struct._object** %result, align 8
  %26 = load %struct._object*, %struct._object** %value, align 8
  %call20 = call i32 @_PyObject_SetAttrId(%struct._object* %25, %struct._Py_Identifier* @PyId_name, %struct._object* %26)
  %cmp21 = icmp eq i32 %call20, -1
  br i1 %cmp21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.19
  br label %failed

if.end.23:                                        ; preds = %if.end.19
  br label %do.body.24

do.body.24:                                       ; preds = %if.end.23
  %27 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %27, %struct._object** %_py_decref_tmp25, align 8
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0
  %29 = load i64, i64* %ob_refcnt26, align 8
  %dec27 = add i64 %29, -1
  store i64 %dec27, i64* %ob_refcnt26, align 8
  %cmp28 = icmp ne i64 %dec27, 0
  br i1 %cmp28, label %if.then.29, label %if.else.30

if.then.29:                                       ; preds = %do.body.24
  br label %if.end.33

if.else.30:                                       ; preds = %do.body.24
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8
  %tp_dealloc32 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc32, align 8
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8
  call void %32(%struct._object* %33)
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.30, %if.then.29
  br label %do.end.34

do.end.34:                                        ; preds = %if.end.33
  %34 = load %struct._excepthandler*, %struct._excepthandler** %o, align 8
  %v35 = getelementptr inbounds %struct._excepthandler, %struct._excepthandler* %34, i32 0, i32 1
  %ExceptHandler36 = bitcast %union.anon.52* %v35 to %struct.anon.53*
  %body = getelementptr inbounds %struct.anon.53, %struct.anon.53* %ExceptHandler36, i32 0, i32 2
  %35 = load %struct.asdl_seq*, %struct.asdl_seq** %body, align 8
  %call37 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %35, %struct._object* (i8*)* @ast2obj_stmt)
  store %struct._object* %call37, %struct._object** %value, align 8
  %36 = load %struct._object*, %struct._object** %value, align 8
  %tobool38 = icmp ne %struct._object* %36, null
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %do.end.34
  br label %failed

if.end.40:                                        ; preds = %do.end.34
  %37 = load %struct._object*, %struct._object** %result, align 8
  %38 = load %struct._object*, %struct._object** %value, align 8
  %call41 = call i32 @_PyObject_SetAttrId(%struct._object* %37, %struct._Py_Identifier* @PyId_body, %struct._object* %38)
  %cmp42 = icmp eq i32 %call41, -1
  br i1 %cmp42, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.end.40
  br label %failed

if.end.44:                                        ; preds = %if.end.40
  br label %do.body.45

do.body.45:                                       ; preds = %if.end.44
  %39 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %39, %struct._object** %_py_decref_tmp46, align 8
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0
  %41 = load i64, i64* %ob_refcnt47, align 8
  %dec48 = add i64 %41, -1
  store i64 %dec48, i64* %ob_refcnt47, align 8
  %cmp49 = icmp ne i64 %dec48, 0
  br i1 %cmp49, label %if.then.50, label %if.else.51

if.then.50:                                       ; preds = %do.body.45
  br label %if.end.54

if.else.51:                                       ; preds = %do.body.45
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  call void %44(%struct._object* %45)
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.51, %if.then.50
  br label %do.end.55

do.end.55:                                        ; preds = %if.end.54
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %do.end.55
  %46 = load %struct._excepthandler*, %struct._excepthandler** %o, align 8
  %lineno = getelementptr inbounds %struct._excepthandler, %struct._excepthandler* %46, i32 0, i32 2
  %47 = load i32, i32* %lineno, align 4
  %conv = sext i32 %47 to i64
  %call56 = call %struct._object* @ast2obj_int(i64 %conv)
  store %struct._object* %call56, %struct._object** %value, align 8
  %48 = load %struct._object*, %struct._object** %value, align 8
  %tobool57 = icmp ne %struct._object* %48, null
  br i1 %tobool57, label %if.end.59, label %if.then.58

if.then.58:                                       ; preds = %sw.epilog
  br label %failed

if.end.59:                                        ; preds = %sw.epilog
  %49 = load %struct._object*, %struct._object** %result, align 8
  %50 = load %struct._object*, %struct._object** %value, align 8
  %call60 = call i32 @_PyObject_SetAttrId(%struct._object* %49, %struct._Py_Identifier* @PyId_lineno, %struct._object* %50)
  %cmp61 = icmp slt i32 %call60, 0
  br i1 %cmp61, label %if.then.63, label %if.end.64

if.then.63:                                       ; preds = %if.end.59
  br label %failed

if.end.64:                                        ; preds = %if.end.59
  br label %do.body.65

do.body.65:                                       ; preds = %if.end.64
  %51 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %51, %struct._object** %_py_decref_tmp66, align 8
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0
  %53 = load i64, i64* %ob_refcnt67, align 8
  %dec68 = add i64 %53, -1
  store i64 %dec68, i64* %ob_refcnt67, align 8
  %cmp69 = icmp ne i64 %dec68, 0
  br i1 %cmp69, label %if.then.71, label %if.else.72

if.then.71:                                       ; preds = %do.body.65
  br label %if.end.75

if.else.72:                                       ; preds = %do.body.65
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8
  %ob_type73 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type73, align 8
  %tp_dealloc74 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc74, align 8
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8
  call void %56(%struct._object* %57)
  br label %if.end.75

if.end.75:                                        ; preds = %if.else.72, %if.then.71
  br label %do.end.76

do.end.76:                                        ; preds = %if.end.75
  %58 = load %struct._excepthandler*, %struct._excepthandler** %o, align 8
  %col_offset = getelementptr inbounds %struct._excepthandler, %struct._excepthandler* %58, i32 0, i32 3
  %59 = load i32, i32* %col_offset, align 4
  %conv77 = sext i32 %59 to i64
  %call78 = call %struct._object* @ast2obj_int(i64 %conv77)
  store %struct._object* %call78, %struct._object** %value, align 8
  %60 = load %struct._object*, %struct._object** %value, align 8
  %tobool79 = icmp ne %struct._object* %60, null
  br i1 %tobool79, label %if.end.81, label %if.then.80

if.then.80:                                       ; preds = %do.end.76
  br label %failed

if.end.81:                                        ; preds = %do.end.76
  %61 = load %struct._object*, %struct._object** %result, align 8
  %62 = load %struct._object*, %struct._object** %value, align 8
  %call82 = call i32 @_PyObject_SetAttrId(%struct._object* %61, %struct._Py_Identifier* @PyId_col_offset, %struct._object* %62)
  %cmp83 = icmp slt i32 %call82, 0
  br i1 %cmp83, label %if.then.85, label %if.end.86

if.then.85:                                       ; preds = %if.end.81
  br label %failed

if.end.86:                                        ; preds = %if.end.81
  br label %do.body.87

do.body.87:                                       ; preds = %if.end.86
  %63 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %63, %struct._object** %_py_decref_tmp88, align 8
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8
  %ob_refcnt89 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 0
  %65 = load i64, i64* %ob_refcnt89, align 8
  %dec90 = add i64 %65, -1
  store i64 %dec90, i64* %ob_refcnt89, align 8
  %cmp91 = icmp ne i64 %dec90, 0
  br i1 %cmp91, label %if.then.93, label %if.else.94

if.then.93:                                       ; preds = %do.body.87
  br label %if.end.97

if.else.94:                                       ; preds = %do.body.87
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8
  %ob_type95 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 1
  %67 = load %struct._typeobject*, %struct._typeobject** %ob_type95, align 8
  %tp_dealloc96 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %67, i32 0, i32 4
  %68 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc96, align 8
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8
  call void %68(%struct._object* %69)
  br label %if.end.97

if.end.97:                                        ; preds = %if.else.94, %if.then.93
  br label %do.end.98

do.end.98:                                        ; preds = %if.end.97
  %70 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %70, %struct._object** %retval
  br label %return

failed:                                           ; preds = %if.then.85, %if.then.80, %if.then.63, %if.then.58, %if.then.43, %if.then.39, %if.then.22, %if.then.18, %if.then.9, %if.then.6, %if.then.2
  br label %do.body.99

do.body.99:                                       ; preds = %failed
  %71 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %71, %struct._object** %_py_xdecref_tmp, align 8
  %72 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp100 = icmp ne %struct._object* %72, null
  br i1 %cmp100, label %if.then.102, label %if.end.115

if.then.102:                                      ; preds = %do.body.99
  br label %do.body.103

do.body.103:                                      ; preds = %if.then.102
  %73 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %73, %struct._object** %_py_decref_tmp104, align 8
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8
  %ob_refcnt105 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0
  %75 = load i64, i64* %ob_refcnt105, align 8
  %dec106 = add i64 %75, -1
  store i64 %dec106, i64* %ob_refcnt105, align 8
  %cmp107 = icmp ne i64 %dec106, 0
  br i1 %cmp107, label %if.then.109, label %if.else.110

if.then.109:                                      ; preds = %do.body.103
  br label %if.end.113

if.else.110:                                      ; preds = %do.body.103
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8
  %ob_type111 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type111, align 8
  %tp_dealloc112 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc112, align 8
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8
  call void %78(%struct._object* %79)
  br label %if.end.113

if.end.113:                                       ; preds = %if.else.110, %if.then.109
  br label %do.end.114

do.end.114:                                       ; preds = %if.end.113
  br label %if.end.115

if.end.115:                                       ; preds = %do.end.114, %do.body.99
  br label %do.end.116

do.end.116:                                       ; preds = %if.end.115
  br label %do.body.117

do.body.117:                                      ; preds = %do.end.116
  %80 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %80, %struct._object** %_py_xdecref_tmp118, align 8
  %81 = load %struct._object*, %struct._object** %_py_xdecref_tmp118, align 8
  %cmp119 = icmp ne %struct._object* %81, null
  br i1 %cmp119, label %if.then.121, label %if.end.134

if.then.121:                                      ; preds = %do.body.117
  br label %do.body.122

do.body.122:                                      ; preds = %if.then.121
  %82 = load %struct._object*, %struct._object** %_py_xdecref_tmp118, align 8
  store %struct._object* %82, %struct._object** %_py_decref_tmp123, align 8
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp123, align 8
  %ob_refcnt124 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0
  %84 = load i64, i64* %ob_refcnt124, align 8
  %dec125 = add i64 %84, -1
  store i64 %dec125, i64* %ob_refcnt124, align 8
  %cmp126 = icmp ne i64 %dec125, 0
  br i1 %cmp126, label %if.then.128, label %if.else.129

if.then.128:                                      ; preds = %do.body.122
  br label %if.end.132

if.else.129:                                      ; preds = %do.body.122
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp123, align 8
  %ob_type130 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type130, align 8
  %tp_dealloc131 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 4
  %87 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc131, align 8
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp123, align 8
  call void %87(%struct._object* %88)
  br label %if.end.132

if.end.132:                                       ; preds = %if.else.129, %if.then.128
  br label %do.end.133

do.end.133:                                       ; preds = %if.end.132
  br label %if.end.134

if.end.134:                                       ; preds = %do.end.133, %do.body.117
  br label %do.end.135

do.end.135:                                       ; preds = %if.end.134
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.135, %do.end.98, %if.then
  %89 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %89
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_alias(i8* %_o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %_o.addr = alloca i8*, align 8
  %o = alloca %struct._alias*, align 8
  %result = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp37 = alloca %struct._object*, align 8
  %_py_xdecref_tmp50 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  store i8* %_o, i8** %_o.addr, align 8
  %0 = load i8*, i8** %_o.addr, align 8
  %1 = bitcast i8* %0 to %struct._alias*
  store %struct._alias* %1, %struct._alias** %o, align 8
  store %struct._object* null, %struct._object** %result, align 8
  store %struct._object* null, %struct._object** %value, align 8
  %2 = load %struct._alias*, %struct._alias** %o, align 8
  %tobool = icmp ne %struct._alias* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._typeobject*, %struct._typeobject** @alias_type, align 8
  %call = call %struct._object* @PyType_GenericNew(%struct._typeobject* %4, %struct._object* null, %struct._object* null)
  store %struct._object* %call, %struct._object** %result, align 8
  %5 = load %struct._object*, %struct._object** %result, align 8
  %tobool1 = icmp ne %struct._object* %5, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._alias*, %struct._alias** %o, align 8
  %name = getelementptr inbounds %struct._alias, %struct._alias* %6, i32 0, i32 0
  %7 = load %struct._object*, %struct._object** %name, align 8
  %8 = bitcast %struct._object* %7 to i8*
  %call4 = call %struct._object* @ast2obj_object(i8* %8)
  store %struct._object* %call4, %struct._object** %value, align 8
  %9 = load %struct._object*, %struct._object** %value, align 8
  %tobool5 = icmp ne %struct._object* %9, null
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %failed

if.end.7:                                         ; preds = %if.end.3
  %10 = load %struct._object*, %struct._object** %result, align 8
  %11 = load %struct._object*, %struct._object** %value, align 8
  %call8 = call i32 @_PyObject_SetAttrId(%struct._object* %10, %struct._Py_Identifier* @PyId_name, %struct._object* %11)
  %cmp = icmp eq i32 %call8, -1
  br i1 %cmp, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.7
  br label %failed

if.end.10:                                        ; preds = %if.end.7
  br label %do.body

do.body:                                          ; preds = %if.end.10
  %12 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %14, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %17(%struct._object* %18)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  %19 = load %struct._alias*, %struct._alias** %o, align 8
  %asname = getelementptr inbounds %struct._alias, %struct._alias* %19, i32 0, i32 1
  %20 = load %struct._object*, %struct._object** %asname, align 8
  %21 = bitcast %struct._object* %20 to i8*
  %call14 = call %struct._object* @ast2obj_object(i8* %21)
  store %struct._object* %call14, %struct._object** %value, align 8
  %22 = load %struct._object*, %struct._object** %value, align 8
  %tobool15 = icmp ne %struct._object* %22, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %do.end
  br label %failed

if.end.17:                                        ; preds = %do.end
  %23 = load %struct._object*, %struct._object** %result, align 8
  %24 = load %struct._object*, %struct._object** %value, align 8
  %call18 = call i32 @_PyObject_SetAttrId(%struct._object* %23, %struct._Py_Identifier* @PyId_asname, %struct._object* %24)
  %cmp19 = icmp eq i32 %call18, -1
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end.17
  br label %failed

if.end.21:                                        ; preds = %if.end.17
  br label %do.body.22

do.body.22:                                       ; preds = %if.end.21
  %25 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %25, %struct._object** %_py_decref_tmp23, align 8
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0
  %27 = load i64, i64* %ob_refcnt24, align 8
  %dec25 = add i64 %27, -1
  store i64 %dec25, i64* %ob_refcnt24, align 8
  %cmp26 = icmp ne i64 %dec25, 0
  br i1 %cmp26, label %if.then.27, label %if.else.28

if.then.27:                                       ; preds = %do.body.22
  br label %if.end.31

if.else.28:                                       ; preds = %do.body.22
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  call void %30(%struct._object* %31)
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  br label %do.end.32

do.end.32:                                        ; preds = %if.end.31
  %32 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %32, %struct._object** %retval
  br label %return

failed:                                           ; preds = %if.then.20, %if.then.16, %if.then.9, %if.then.6
  br label %do.body.33

do.body.33:                                       ; preds = %failed
  %33 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %33, %struct._object** %_py_xdecref_tmp, align 8
  %34 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp34 = icmp ne %struct._object* %34, null
  br i1 %cmp34, label %if.then.35, label %if.end.47

if.then.35:                                       ; preds = %do.body.33
  br label %do.body.36

do.body.36:                                       ; preds = %if.then.35
  %35 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %35, %struct._object** %_py_decref_tmp37, align 8
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0
  %37 = load i64, i64* %ob_refcnt38, align 8
  %dec39 = add i64 %37, -1
  store i64 %dec39, i64* %ob_refcnt38, align 8
  %cmp40 = icmp ne i64 %dec39, 0
  br i1 %cmp40, label %if.then.41, label %if.else.42

if.then.41:                                       ; preds = %do.body.36
  br label %if.end.45

if.else.42:                                       ; preds = %do.body.36
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8
  call void %40(%struct._object* %41)
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  br label %do.end.46

do.end.46:                                        ; preds = %if.end.45
  br label %if.end.47

if.end.47:                                        ; preds = %do.end.46, %do.body.33
  br label %do.end.48

do.end.48:                                        ; preds = %if.end.47
  br label %do.body.49

do.body.49:                                       ; preds = %do.end.48
  %42 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %42, %struct._object** %_py_xdecref_tmp50, align 8
  %43 = load %struct._object*, %struct._object** %_py_xdecref_tmp50, align 8
  %cmp51 = icmp ne %struct._object* %43, null
  br i1 %cmp51, label %if.then.52, label %if.end.64

if.then.52:                                       ; preds = %do.body.49
  br label %do.body.53

do.body.53:                                       ; preds = %if.then.52
  %44 = load %struct._object*, %struct._object** %_py_xdecref_tmp50, align 8
  store %struct._object* %44, %struct._object** %_py_decref_tmp54, align 8
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0
  %46 = load i64, i64* %ob_refcnt55, align 8
  %dec56 = add i64 %46, -1
  store i64 %dec56, i64* %ob_refcnt55, align 8
  %cmp57 = icmp ne i64 %dec56, 0
  br i1 %cmp57, label %if.then.58, label %if.else.59

if.then.58:                                       ; preds = %do.body.53
  br label %if.end.62

if.else.59:                                       ; preds = %do.body.53
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  call void %49(%struct._object* %50)
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  br label %do.end.63

do.end.63:                                        ; preds = %if.end.62
  br label %if.end.64

if.end.64:                                        ; preds = %do.end.63, %do.body.49
  br label %do.end.65

do.end.65:                                        ; preds = %if.end.64
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.65, %do.end.32, %if.then.2, %if.then
  %51 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %51
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_int(i64 %b) #0 {
entry:
  %b.addr = alloca i64, align 8
  store i64 %b, i64* %b.addr, align 8
  %0 = load i64, i64* %b.addr, align 8
  %call = call %struct._object* @PyLong_FromLong(i64 %0)
  ret %struct._object* %call
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_arg(i8* %_o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %_o.addr = alloca i8*, align 8
  %o = alloca %struct._arg*, align 8
  %result = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %_py_decref_tmp43 = alloca %struct._object*, align 8
  %_py_decref_tmp65 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp81 = alloca %struct._object*, align 8
  %_py_xdecref_tmp95 = alloca %struct._object*, align 8
  %_py_decref_tmp100 = alloca %struct._object*, align 8
  store i8* %_o, i8** %_o.addr, align 8
  %0 = load i8*, i8** %_o.addr, align 8
  %1 = bitcast i8* %0 to %struct._arg*
  store %struct._arg* %1, %struct._arg** %o, align 8
  store %struct._object* null, %struct._object** %result, align 8
  store %struct._object* null, %struct._object** %value, align 8
  %2 = load %struct._arg*, %struct._arg** %o, align 8
  %tobool = icmp ne %struct._arg* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._typeobject*, %struct._typeobject** @arg_type, align 8
  %call = call %struct._object* @PyType_GenericNew(%struct._typeobject* %4, %struct._object* null, %struct._object* null)
  store %struct._object* %call, %struct._object** %result, align 8
  %5 = load %struct._object*, %struct._object** %result, align 8
  %tobool1 = icmp ne %struct._object* %5, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._arg*, %struct._arg** %o, align 8
  %arg = getelementptr inbounds %struct._arg, %struct._arg* %6, i32 0, i32 0
  %7 = load %struct._object*, %struct._object** %arg, align 8
  %8 = bitcast %struct._object* %7 to i8*
  %call4 = call %struct._object* @ast2obj_object(i8* %8)
  store %struct._object* %call4, %struct._object** %value, align 8
  %9 = load %struct._object*, %struct._object** %value, align 8
  %tobool5 = icmp ne %struct._object* %9, null
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %failed

if.end.7:                                         ; preds = %if.end.3
  %10 = load %struct._object*, %struct._object** %result, align 8
  %11 = load %struct._object*, %struct._object** %value, align 8
  %call8 = call i32 @_PyObject_SetAttrId(%struct._object* %10, %struct._Py_Identifier* @PyId_arg, %struct._object* %11)
  %cmp = icmp eq i32 %call8, -1
  br i1 %cmp, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.7
  br label %failed

if.end.10:                                        ; preds = %if.end.7
  br label %do.body

do.body:                                          ; preds = %if.end.10
  %12 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %14, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %17(%struct._object* %18)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  %19 = load %struct._arg*, %struct._arg** %o, align 8
  %annotation = getelementptr inbounds %struct._arg, %struct._arg* %19, i32 0, i32 1
  %20 = load %struct._expr*, %struct._expr** %annotation, align 8
  %21 = bitcast %struct._expr* %20 to i8*
  %call14 = call %struct._object* @ast2obj_expr(i8* %21)
  store %struct._object* %call14, %struct._object** %value, align 8
  %22 = load %struct._object*, %struct._object** %value, align 8
  %tobool15 = icmp ne %struct._object* %22, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %do.end
  br label %failed

if.end.17:                                        ; preds = %do.end
  %23 = load %struct._object*, %struct._object** %result, align 8
  %24 = load %struct._object*, %struct._object** %value, align 8
  %call18 = call i32 @_PyObject_SetAttrId(%struct._object* %23, %struct._Py_Identifier* @PyId_annotation, %struct._object* %24)
  %cmp19 = icmp eq i32 %call18, -1
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end.17
  br label %failed

if.end.21:                                        ; preds = %if.end.17
  br label %do.body.22

do.body.22:                                       ; preds = %if.end.21
  %25 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %25, %struct._object** %_py_decref_tmp23, align 8
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0
  %27 = load i64, i64* %ob_refcnt24, align 8
  %dec25 = add i64 %27, -1
  store i64 %dec25, i64* %ob_refcnt24, align 8
  %cmp26 = icmp ne i64 %dec25, 0
  br i1 %cmp26, label %if.then.27, label %if.else.28

if.then.27:                                       ; preds = %do.body.22
  br label %if.end.31

if.else.28:                                       ; preds = %do.body.22
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  call void %30(%struct._object* %31)
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  br label %do.end.32

do.end.32:                                        ; preds = %if.end.31
  %32 = load %struct._arg*, %struct._arg** %o, align 8
  %lineno = getelementptr inbounds %struct._arg, %struct._arg* %32, i32 0, i32 2
  %33 = load i32, i32* %lineno, align 4
  %conv = sext i32 %33 to i64
  %call33 = call %struct._object* @ast2obj_int(i64 %conv)
  store %struct._object* %call33, %struct._object** %value, align 8
  %34 = load %struct._object*, %struct._object** %value, align 8
  %tobool34 = icmp ne %struct._object* %34, null
  br i1 %tobool34, label %if.end.36, label %if.then.35

if.then.35:                                       ; preds = %do.end.32
  br label %failed

if.end.36:                                        ; preds = %do.end.32
  %35 = load %struct._object*, %struct._object** %result, align 8
  %36 = load %struct._object*, %struct._object** %value, align 8
  %call37 = call i32 @_PyObject_SetAttrId(%struct._object* %35, %struct._Py_Identifier* @PyId_lineno, %struct._object* %36)
  %cmp38 = icmp slt i32 %call37, 0
  br i1 %cmp38, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %if.end.36
  br label %failed

if.end.41:                                        ; preds = %if.end.36
  br label %do.body.42

do.body.42:                                       ; preds = %if.end.41
  %37 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %37, %struct._object** %_py_decref_tmp43, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0
  %39 = load i64, i64* %ob_refcnt44, align 8
  %dec45 = add i64 %39, -1
  store i64 %dec45, i64* %ob_refcnt44, align 8
  %cmp46 = icmp ne i64 %dec45, 0
  br i1 %cmp46, label %if.then.48, label %if.else.49

if.then.48:                                       ; preds = %do.body.42
  br label %if.end.52

if.else.49:                                       ; preds = %do.body.42
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  %ob_type50 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type50, align 8
  %tp_dealloc51 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc51, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  call void %42(%struct._object* %43)
  br label %if.end.52

if.end.52:                                        ; preds = %if.else.49, %if.then.48
  br label %do.end.53

do.end.53:                                        ; preds = %if.end.52
  %44 = load %struct._arg*, %struct._arg** %o, align 8
  %col_offset = getelementptr inbounds %struct._arg, %struct._arg* %44, i32 0, i32 3
  %45 = load i32, i32* %col_offset, align 4
  %conv54 = sext i32 %45 to i64
  %call55 = call %struct._object* @ast2obj_int(i64 %conv54)
  store %struct._object* %call55, %struct._object** %value, align 8
  %46 = load %struct._object*, %struct._object** %value, align 8
  %tobool56 = icmp ne %struct._object* %46, null
  br i1 %tobool56, label %if.end.58, label %if.then.57

if.then.57:                                       ; preds = %do.end.53
  br label %failed

if.end.58:                                        ; preds = %do.end.53
  %47 = load %struct._object*, %struct._object** %result, align 8
  %48 = load %struct._object*, %struct._object** %value, align 8
  %call59 = call i32 @_PyObject_SetAttrId(%struct._object* %47, %struct._Py_Identifier* @PyId_col_offset, %struct._object* %48)
  %cmp60 = icmp slt i32 %call59, 0
  br i1 %cmp60, label %if.then.62, label %if.end.63

if.then.62:                                       ; preds = %if.end.58
  br label %failed

if.end.63:                                        ; preds = %if.end.58
  br label %do.body.64

do.body.64:                                       ; preds = %if.end.63
  %49 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %49, %struct._object** %_py_decref_tmp65, align 8
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8
  %ob_refcnt66 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0
  %51 = load i64, i64* %ob_refcnt66, align 8
  %dec67 = add i64 %51, -1
  store i64 %dec67, i64* %ob_refcnt66, align 8
  %cmp68 = icmp ne i64 %dec67, 0
  br i1 %cmp68, label %if.then.70, label %if.else.71

if.then.70:                                       ; preds = %do.body.64
  br label %if.end.74

if.else.71:                                       ; preds = %do.body.64
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8
  %ob_type72 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type72, align 8
  %tp_dealloc73 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc73, align 8
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8
  call void %54(%struct._object* %55)
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.71, %if.then.70
  br label %do.end.75

do.end.75:                                        ; preds = %if.end.74
  %56 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %56, %struct._object** %retval
  br label %return

failed:                                           ; preds = %if.then.62, %if.then.57, %if.then.40, %if.then.35, %if.then.20, %if.then.16, %if.then.9, %if.then.6
  br label %do.body.76

do.body.76:                                       ; preds = %failed
  %57 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %57, %struct._object** %_py_xdecref_tmp, align 8
  %58 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp77 = icmp ne %struct._object* %58, null
  br i1 %cmp77, label %if.then.79, label %if.end.92

if.then.79:                                       ; preds = %do.body.76
  br label %do.body.80

do.body.80:                                       ; preds = %if.then.79
  %59 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %59, %struct._object** %_py_decref_tmp81, align 8
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0
  %61 = load i64, i64* %ob_refcnt82, align 8
  %dec83 = add i64 %61, -1
  store i64 %dec83, i64* %ob_refcnt82, align 8
  %cmp84 = icmp ne i64 %dec83, 0
  br i1 %cmp84, label %if.then.86, label %if.else.87

if.then.86:                                       ; preds = %do.body.80
  br label %if.end.90

if.else.87:                                       ; preds = %do.body.80
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8
  %tp_dealloc89 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc89, align 8
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8
  call void %64(%struct._object* %65)
  br label %if.end.90

if.end.90:                                        ; preds = %if.else.87, %if.then.86
  br label %do.end.91

do.end.91:                                        ; preds = %if.end.90
  br label %if.end.92

if.end.92:                                        ; preds = %do.end.91, %do.body.76
  br label %do.end.93

do.end.93:                                        ; preds = %if.end.92
  br label %do.body.94

do.body.94:                                       ; preds = %do.end.93
  %66 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %66, %struct._object** %_py_xdecref_tmp95, align 8
  %67 = load %struct._object*, %struct._object** %_py_xdecref_tmp95, align 8
  %cmp96 = icmp ne %struct._object* %67, null
  br i1 %cmp96, label %if.then.98, label %if.end.111

if.then.98:                                       ; preds = %do.body.94
  br label %do.body.99

do.body.99:                                       ; preds = %if.then.98
  %68 = load %struct._object*, %struct._object** %_py_xdecref_tmp95, align 8
  store %struct._object* %68, %struct._object** %_py_decref_tmp100, align 8
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8
  %ob_refcnt101 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0
  %70 = load i64, i64* %ob_refcnt101, align 8
  %dec102 = add i64 %70, -1
  store i64 %dec102, i64* %ob_refcnt101, align 8
  %cmp103 = icmp ne i64 %dec102, 0
  br i1 %cmp103, label %if.then.105, label %if.else.106

if.then.105:                                      ; preds = %do.body.99
  br label %if.end.109

if.else.106:                                      ; preds = %do.body.99
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8
  %ob_type107 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type107, align 8
  %tp_dealloc108 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc108, align 8
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8
  call void %73(%struct._object* %74)
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.106, %if.then.105
  br label %do.end.110

do.end.110:                                       ; preds = %if.end.109
  br label %if.end.111

if.end.111:                                       ; preds = %do.end.110, %do.body.94
  br label %do.end.112

do.end.112:                                       ; preds = %if.end.111
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.112, %do.end.75, %if.then.2, %if.then
  %75 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %75
}

declare %struct._object* @PyLong_FromLong(i64) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_boolop(i32 %o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %o.addr = alloca i32, align 4
  store i32 %o, i32* %o.addr, align 4
  %0 = load i32, i32* %o.addr, align 4
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.1
  ]

sw.bb:                                            ; preds = %entry
  %1 = load %struct._object*, %struct._object** @And_singleton, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 0
  %2 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %2, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %3 = load %struct._object*, %struct._object** @And_singleton, align 8
  store %struct._object* %3, %struct._object** %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @Or_singleton, align 8
  %ob_refcnt2 = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0
  %5 = load i64, i64* %ob_refcnt2, align 8
  %inc3 = add i64 %5, 1
  store i64 %inc3, i64* %ob_refcnt2, align 8
  %6 = load %struct._object*, %struct._object** @Or_singleton, align 8
  store %struct._object* %6, %struct._object** %retval
  br label %return

sw.default:                                       ; preds = %entry
  %7 = load %struct._object*, %struct._object** @PyExc_SystemError, align 8
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.238, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %sw.default, %sw.bb.1, %sw.bb
  %8 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %8
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_unaryop(i32 %o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %o.addr = alloca i32, align 4
  store i32 %o, i32* %o.addr, align 4
  %0 = load i32, i32* %o.addr, align 4
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.1
    i32 3, label %sw.bb.4
    i32 4, label %sw.bb.7
  ]

sw.bb:                                            ; preds = %entry
  %1 = load %struct._object*, %struct._object** @Invert_singleton, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 0
  %2 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %2, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %3 = load %struct._object*, %struct._object** @Invert_singleton, align 8
  store %struct._object* %3, %struct._object** %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @Not_singleton, align 8
  %ob_refcnt2 = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0
  %5 = load i64, i64* %ob_refcnt2, align 8
  %inc3 = add i64 %5, 1
  store i64 %inc3, i64* %ob_refcnt2, align 8
  %6 = load %struct._object*, %struct._object** @Not_singleton, align 8
  store %struct._object* %6, %struct._object** %retval
  br label %return

sw.bb.4:                                          ; preds = %entry
  %7 = load %struct._object*, %struct._object** @UAdd_singleton, align 8
  %ob_refcnt5 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0
  %8 = load i64, i64* %ob_refcnt5, align 8
  %inc6 = add i64 %8, 1
  store i64 %inc6, i64* %ob_refcnt5, align 8
  %9 = load %struct._object*, %struct._object** @UAdd_singleton, align 8
  store %struct._object* %9, %struct._object** %retval
  br label %return

sw.bb.7:                                          ; preds = %entry
  %10 = load %struct._object*, %struct._object** @USub_singleton, align 8
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0
  %11 = load i64, i64* %ob_refcnt8, align 8
  %inc9 = add i64 %11, 1
  store i64 %inc9, i64* %ob_refcnt8, align 8
  %12 = load %struct._object*, %struct._object** @USub_singleton, align 8
  store %struct._object* %12, %struct._object** %retval
  br label %return

sw.default:                                       ; preds = %entry
  %13 = load %struct._object*, %struct._object** @PyExc_SystemError, align 8
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %13, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.239, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %sw.default, %sw.bb.7, %sw.bb.4, %sw.bb.1, %sw.bb
  %14 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %14
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_comprehension(i8* %_o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %_o.addr = alloca i8*, align 8
  %o = alloca %struct._comprehension*, align 8
  %result = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp56 = alloca %struct._object*, align 8
  %_py_xdecref_tmp69 = alloca %struct._object*, align 8
  %_py_decref_tmp73 = alloca %struct._object*, align 8
  store i8* %_o, i8** %_o.addr, align 8
  %0 = load i8*, i8** %_o.addr, align 8
  %1 = bitcast i8* %0 to %struct._comprehension*
  store %struct._comprehension* %1, %struct._comprehension** %o, align 8
  store %struct._object* null, %struct._object** %result, align 8
  store %struct._object* null, %struct._object** %value, align 8
  %2 = load %struct._comprehension*, %struct._comprehension** %o, align 8
  %tobool = icmp ne %struct._comprehension* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._typeobject*, %struct._typeobject** @comprehension_type, align 8
  %call = call %struct._object* @PyType_GenericNew(%struct._typeobject* %4, %struct._object* null, %struct._object* null)
  store %struct._object* %call, %struct._object** %result, align 8
  %5 = load %struct._object*, %struct._object** %result, align 8
  %tobool1 = icmp ne %struct._object* %5, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._comprehension*, %struct._comprehension** %o, align 8
  %target = getelementptr inbounds %struct._comprehension, %struct._comprehension* %6, i32 0, i32 0
  %7 = load %struct._expr*, %struct._expr** %target, align 8
  %8 = bitcast %struct._expr* %7 to i8*
  %call4 = call %struct._object* @ast2obj_expr(i8* %8)
  store %struct._object* %call4, %struct._object** %value, align 8
  %9 = load %struct._object*, %struct._object** %value, align 8
  %tobool5 = icmp ne %struct._object* %9, null
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %failed

if.end.7:                                         ; preds = %if.end.3
  %10 = load %struct._object*, %struct._object** %result, align 8
  %11 = load %struct._object*, %struct._object** %value, align 8
  %call8 = call i32 @_PyObject_SetAttrId(%struct._object* %10, %struct._Py_Identifier* @PyId_target, %struct._object* %11)
  %cmp = icmp eq i32 %call8, -1
  br i1 %cmp, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.7
  br label %failed

if.end.10:                                        ; preds = %if.end.7
  br label %do.body

do.body:                                          ; preds = %if.end.10
  %12 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %14, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %17(%struct._object* %18)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  %19 = load %struct._comprehension*, %struct._comprehension** %o, align 8
  %iter = getelementptr inbounds %struct._comprehension, %struct._comprehension* %19, i32 0, i32 1
  %20 = load %struct._expr*, %struct._expr** %iter, align 8
  %21 = bitcast %struct._expr* %20 to i8*
  %call14 = call %struct._object* @ast2obj_expr(i8* %21)
  store %struct._object* %call14, %struct._object** %value, align 8
  %22 = load %struct._object*, %struct._object** %value, align 8
  %tobool15 = icmp ne %struct._object* %22, null
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %do.end
  br label %failed

if.end.17:                                        ; preds = %do.end
  %23 = load %struct._object*, %struct._object** %result, align 8
  %24 = load %struct._object*, %struct._object** %value, align 8
  %call18 = call i32 @_PyObject_SetAttrId(%struct._object* %23, %struct._Py_Identifier* @PyId_iter, %struct._object* %24)
  %cmp19 = icmp eq i32 %call18, -1
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end.17
  br label %failed

if.end.21:                                        ; preds = %if.end.17
  br label %do.body.22

do.body.22:                                       ; preds = %if.end.21
  %25 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %25, %struct._object** %_py_decref_tmp23, align 8
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0
  %27 = load i64, i64* %ob_refcnt24, align 8
  %dec25 = add i64 %27, -1
  store i64 %dec25, i64* %ob_refcnt24, align 8
  %cmp26 = icmp ne i64 %dec25, 0
  br i1 %cmp26, label %if.then.27, label %if.else.28

if.then.27:                                       ; preds = %do.body.22
  br label %if.end.31

if.else.28:                                       ; preds = %do.body.22
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  call void %30(%struct._object* %31)
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  br label %do.end.32

do.end.32:                                        ; preds = %if.end.31
  %32 = load %struct._comprehension*, %struct._comprehension** %o, align 8
  %ifs = getelementptr inbounds %struct._comprehension, %struct._comprehension* %32, i32 0, i32 2
  %33 = load %struct.asdl_seq*, %struct.asdl_seq** %ifs, align 8
  %call33 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %33, %struct._object* (i8*)* @ast2obj_expr)
  store %struct._object* %call33, %struct._object** %value, align 8
  %34 = load %struct._object*, %struct._object** %value, align 8
  %tobool34 = icmp ne %struct._object* %34, null
  br i1 %tobool34, label %if.end.36, label %if.then.35

if.then.35:                                       ; preds = %do.end.32
  br label %failed

if.end.36:                                        ; preds = %do.end.32
  %35 = load %struct._object*, %struct._object** %result, align 8
  %36 = load %struct._object*, %struct._object** %value, align 8
  %call37 = call i32 @_PyObject_SetAttrId(%struct._object* %35, %struct._Py_Identifier* @PyId_ifs, %struct._object* %36)
  %cmp38 = icmp eq i32 %call37, -1
  br i1 %cmp38, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %if.end.36
  br label %failed

if.end.40:                                        ; preds = %if.end.36
  br label %do.body.41

do.body.41:                                       ; preds = %if.end.40
  %37 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %37, %struct._object** %_py_decref_tmp42, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0
  %39 = load i64, i64* %ob_refcnt43, align 8
  %dec44 = add i64 %39, -1
  store i64 %dec44, i64* %ob_refcnt43, align 8
  %cmp45 = icmp ne i64 %dec44, 0
  br i1 %cmp45, label %if.then.46, label %if.else.47

if.then.46:                                       ; preds = %do.body.41
  br label %if.end.50

if.else.47:                                       ; preds = %do.body.41
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  call void %42(%struct._object* %43)
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  br label %do.end.51

do.end.51:                                        ; preds = %if.end.50
  %44 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %44, %struct._object** %retval
  br label %return

failed:                                           ; preds = %if.then.39, %if.then.35, %if.then.20, %if.then.16, %if.then.9, %if.then.6
  br label %do.body.52

do.body.52:                                       ; preds = %failed
  %45 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %45, %struct._object** %_py_xdecref_tmp, align 8
  %46 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp53 = icmp ne %struct._object* %46, null
  br i1 %cmp53, label %if.then.54, label %if.end.66

if.then.54:                                       ; preds = %do.body.52
  br label %do.body.55

do.body.55:                                       ; preds = %if.then.54
  %47 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %47, %struct._object** %_py_decref_tmp56, align 8
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0
  %49 = load i64, i64* %ob_refcnt57, align 8
  %dec58 = add i64 %49, -1
  store i64 %dec58, i64* %ob_refcnt57, align 8
  %cmp59 = icmp ne i64 %dec58, 0
  br i1 %cmp59, label %if.then.60, label %if.else.61

if.then.60:                                       ; preds = %do.body.55
  br label %if.end.64

if.else.61:                                       ; preds = %do.body.55
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 1
  %51 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %51, i32 0, i32 4
  %52 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8
  call void %52(%struct._object* %53)
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  br label %do.end.65

do.end.65:                                        ; preds = %if.end.64
  br label %if.end.66

if.end.66:                                        ; preds = %do.end.65, %do.body.52
  br label %do.end.67

do.end.67:                                        ; preds = %if.end.66
  br label %do.body.68

do.body.68:                                       ; preds = %do.end.67
  %54 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %54, %struct._object** %_py_xdecref_tmp69, align 8
  %55 = load %struct._object*, %struct._object** %_py_xdecref_tmp69, align 8
  %cmp70 = icmp ne %struct._object* %55, null
  br i1 %cmp70, label %if.then.71, label %if.end.83

if.then.71:                                       ; preds = %do.body.68
  br label %do.body.72

do.body.72:                                       ; preds = %if.then.71
  %56 = load %struct._object*, %struct._object** %_py_xdecref_tmp69, align 8
  store %struct._object* %56, %struct._object** %_py_decref_tmp73, align 8
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0
  %58 = load i64, i64* %ob_refcnt74, align 8
  %dec75 = add i64 %58, -1
  store i64 %dec75, i64* %ob_refcnt74, align 8
  %cmp76 = icmp ne i64 %dec75, 0
  br i1 %cmp76, label %if.then.77, label %if.else.78

if.then.77:                                       ; preds = %do.body.72
  br label %if.end.81

if.else.78:                                       ; preds = %do.body.72
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8
  %ob_type79 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type79, align 8
  %tp_dealloc80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc80, align 8
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8
  call void %61(%struct._object* %62)
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.78, %if.then.77
  br label %do.end.82

do.end.82:                                        ; preds = %if.end.81
  br label %if.end.83

if.end.83:                                        ; preds = %do.end.82, %do.body.68
  br label %do.end.84

do.end.84:                                        ; preds = %if.end.83
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.84, %do.end.51, %if.then.2, %if.then
  %63 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %63
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_cmpop(i32 %o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %o.addr = alloca i32, align 4
  store i32 %o, i32* %o.addr, align 4
  %0 = load i32, i32* %o.addr, align 4
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.1
    i32 3, label %sw.bb.4
    i32 4, label %sw.bb.7
    i32 5, label %sw.bb.10
    i32 6, label %sw.bb.13
    i32 7, label %sw.bb.16
    i32 8, label %sw.bb.19
    i32 9, label %sw.bb.22
    i32 10, label %sw.bb.25
  ]

sw.bb:                                            ; preds = %entry
  %1 = load %struct._object*, %struct._object** @Eq_singleton, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 0
  %2 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %2, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %3 = load %struct._object*, %struct._object** @Eq_singleton, align 8
  store %struct._object* %3, %struct._object** %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @NotEq_singleton, align 8
  %ob_refcnt2 = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0
  %5 = load i64, i64* %ob_refcnt2, align 8
  %inc3 = add i64 %5, 1
  store i64 %inc3, i64* %ob_refcnt2, align 8
  %6 = load %struct._object*, %struct._object** @NotEq_singleton, align 8
  store %struct._object* %6, %struct._object** %retval
  br label %return

sw.bb.4:                                          ; preds = %entry
  %7 = load %struct._object*, %struct._object** @Lt_singleton, align 8
  %ob_refcnt5 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0
  %8 = load i64, i64* %ob_refcnt5, align 8
  %inc6 = add i64 %8, 1
  store i64 %inc6, i64* %ob_refcnt5, align 8
  %9 = load %struct._object*, %struct._object** @Lt_singleton, align 8
  store %struct._object* %9, %struct._object** %retval
  br label %return

sw.bb.7:                                          ; preds = %entry
  %10 = load %struct._object*, %struct._object** @LtE_singleton, align 8
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0
  %11 = load i64, i64* %ob_refcnt8, align 8
  %inc9 = add i64 %11, 1
  store i64 %inc9, i64* %ob_refcnt8, align 8
  %12 = load %struct._object*, %struct._object** @LtE_singleton, align 8
  store %struct._object* %12, %struct._object** %retval
  br label %return

sw.bb.10:                                         ; preds = %entry
  %13 = load %struct._object*, %struct._object** @Gt_singleton, align 8
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt11, align 8
  %inc12 = add i64 %14, 1
  store i64 %inc12, i64* %ob_refcnt11, align 8
  %15 = load %struct._object*, %struct._object** @Gt_singleton, align 8
  store %struct._object* %15, %struct._object** %retval
  br label %return

sw.bb.13:                                         ; preds = %entry
  %16 = load %struct._object*, %struct._object** @GtE_singleton, align 8
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0
  %17 = load i64, i64* %ob_refcnt14, align 8
  %inc15 = add i64 %17, 1
  store i64 %inc15, i64* %ob_refcnt14, align 8
  %18 = load %struct._object*, %struct._object** @GtE_singleton, align 8
  store %struct._object* %18, %struct._object** %retval
  br label %return

sw.bb.16:                                         ; preds = %entry
  %19 = load %struct._object*, %struct._object** @Is_singleton, align 8
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0
  %20 = load i64, i64* %ob_refcnt17, align 8
  %inc18 = add i64 %20, 1
  store i64 %inc18, i64* %ob_refcnt17, align 8
  %21 = load %struct._object*, %struct._object** @Is_singleton, align 8
  store %struct._object* %21, %struct._object** %retval
  br label %return

sw.bb.19:                                         ; preds = %entry
  %22 = load %struct._object*, %struct._object** @IsNot_singleton, align 8
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0
  %23 = load i64, i64* %ob_refcnt20, align 8
  %inc21 = add i64 %23, 1
  store i64 %inc21, i64* %ob_refcnt20, align 8
  %24 = load %struct._object*, %struct._object** @IsNot_singleton, align 8
  store %struct._object* %24, %struct._object** %retval
  br label %return

sw.bb.22:                                         ; preds = %entry
  %25 = load %struct._object*, %struct._object** @In_singleton, align 8
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt23, align 8
  %inc24 = add i64 %26, 1
  store i64 %inc24, i64* %ob_refcnt23, align 8
  %27 = load %struct._object*, %struct._object** @In_singleton, align 8
  store %struct._object* %27, %struct._object** %retval
  br label %return

sw.bb.25:                                         ; preds = %entry
  %28 = load %struct._object*, %struct._object** @NotIn_singleton, align 8
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0
  %29 = load i64, i64* %ob_refcnt26, align 8
  %inc27 = add i64 %29, 1
  store i64 %inc27, i64* %ob_refcnt26, align 8
  %30 = load %struct._object*, %struct._object** @NotIn_singleton, align 8
  store %struct._object* %30, %struct._object** %retval
  br label %return

sw.default:                                       ; preds = %entry
  %31 = load %struct._object*, %struct._object** @PyExc_SystemError, align 8
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %31, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.240, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %sw.default, %sw.bb.25, %sw.bb.22, %sw.bb.19, %sw.bb.16, %sw.bb.13, %sw.bb.10, %sw.bb.7, %sw.bb.4, %sw.bb.1, %sw.bb
  %32 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %32
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_expr_context(i32 %o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %o.addr = alloca i32, align 4
  store i32 %o, i32* %o.addr, align 4
  %0 = load i32, i32* %o.addr, align 4
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.1
    i32 3, label %sw.bb.4
    i32 4, label %sw.bb.7
    i32 5, label %sw.bb.10
    i32 6, label %sw.bb.13
  ]

sw.bb:                                            ; preds = %entry
  %1 = load %struct._object*, %struct._object** @Load_singleton, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 0
  %2 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %2, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %3 = load %struct._object*, %struct._object** @Load_singleton, align 8
  store %struct._object* %3, %struct._object** %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @Store_singleton, align 8
  %ob_refcnt2 = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0
  %5 = load i64, i64* %ob_refcnt2, align 8
  %inc3 = add i64 %5, 1
  store i64 %inc3, i64* %ob_refcnt2, align 8
  %6 = load %struct._object*, %struct._object** @Store_singleton, align 8
  store %struct._object* %6, %struct._object** %retval
  br label %return

sw.bb.4:                                          ; preds = %entry
  %7 = load %struct._object*, %struct._object** @Del_singleton, align 8
  %ob_refcnt5 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0
  %8 = load i64, i64* %ob_refcnt5, align 8
  %inc6 = add i64 %8, 1
  store i64 %inc6, i64* %ob_refcnt5, align 8
  %9 = load %struct._object*, %struct._object** @Del_singleton, align 8
  store %struct._object* %9, %struct._object** %retval
  br label %return

sw.bb.7:                                          ; preds = %entry
  %10 = load %struct._object*, %struct._object** @AugLoad_singleton, align 8
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0
  %11 = load i64, i64* %ob_refcnt8, align 8
  %inc9 = add i64 %11, 1
  store i64 %inc9, i64* %ob_refcnt8, align 8
  %12 = load %struct._object*, %struct._object** @AugLoad_singleton, align 8
  store %struct._object* %12, %struct._object** %retval
  br label %return

sw.bb.10:                                         ; preds = %entry
  %13 = load %struct._object*, %struct._object** @AugStore_singleton, align 8
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt11, align 8
  %inc12 = add i64 %14, 1
  store i64 %inc12, i64* %ob_refcnt11, align 8
  %15 = load %struct._object*, %struct._object** @AugStore_singleton, align 8
  store %struct._object* %15, %struct._object** %retval
  br label %return

sw.bb.13:                                         ; preds = %entry
  %16 = load %struct._object*, %struct._object** @Param_singleton, align 8
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0
  %17 = load i64, i64* %ob_refcnt14, align 8
  %inc15 = add i64 %17, 1
  store i64 %inc15, i64* %ob_refcnt14, align 8
  %18 = load %struct._object*, %struct._object** @Param_singleton, align 8
  store %struct._object* %18, %struct._object** %retval
  br label %return

sw.default:                                       ; preds = %entry
  %19 = load %struct._object*, %struct._object** @PyExc_SystemError, align 8
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %19, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.241, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %sw.default, %sw.bb.13, %sw.bb.10, %sw.bb.7, %sw.bb.4, %sw.bb.1, %sw.bb
  %20 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %20
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ast2obj_slice(i8* %_o) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %_o.addr = alloca i8*, align 8
  %o = alloca %struct._slice*, align 8
  %result = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp25 = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  %_py_decref_tmp71 = alloca %struct._object*, align 8
  %_py_decref_tmp97 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp111 = alloca %struct._object*, align 8
  %_py_xdecref_tmp124 = alloca %struct._object*, align 8
  %_py_decref_tmp128 = alloca %struct._object*, align 8
  store i8* %_o, i8** %_o.addr, align 8
  %0 = load i8*, i8** %_o.addr, align 8
  %1 = bitcast i8* %0 to %struct._slice*
  store %struct._slice* %1, %struct._slice** %o, align 8
  store %struct._object* null, %struct._object** %result, align 8
  store %struct._object* null, %struct._object** %value, align 8
  %2 = load %struct._slice*, %struct._slice** %o, align 8
  %tobool = icmp ne %struct._slice* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._slice*, %struct._slice** %o, align 8
  %kind = getelementptr inbounds %struct._slice, %struct._slice* %4, i32 0, i32 0
  %5 = load i32, i32* %kind, align 4
  switch i32 %5, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.56
    i32 3, label %sw.bb.81
  ]

sw.bb:                                            ; preds = %if.end
  %6 = load %struct._typeobject*, %struct._typeobject** @Slice_type, align 8
  %call = call %struct._object* @PyType_GenericNew(%struct._typeobject* %6, %struct._object* null, %struct._object* null)
  store %struct._object* %call, %struct._object** %result, align 8
  %7 = load %struct._object*, %struct._object** %result, align 8
  %tobool1 = icmp ne %struct._object* %7, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %sw.bb
  br label %failed

if.end.3:                                         ; preds = %sw.bb
  %8 = load %struct._slice*, %struct._slice** %o, align 8
  %v = getelementptr inbounds %struct._slice, %struct._slice* %8, i32 0, i32 1
  %Slice = bitcast %union.anon.24* %v to %struct.anon.25*
  %lower = getelementptr inbounds %struct.anon.25, %struct.anon.25* %Slice, i32 0, i32 0
  %9 = load %struct._expr*, %struct._expr** %lower, align 8
  %10 = bitcast %struct._expr* %9 to i8*
  %call4 = call %struct._object* @ast2obj_expr(i8* %10)
  store %struct._object* %call4, %struct._object** %value, align 8
  %11 = load %struct._object*, %struct._object** %value, align 8
  %tobool5 = icmp ne %struct._object* %11, null
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  br label %failed

if.end.7:                                         ; preds = %if.end.3
  %12 = load %struct._object*, %struct._object** %result, align 8
  %13 = load %struct._object*, %struct._object** %value, align 8
  %call8 = call i32 @_PyObject_SetAttrId(%struct._object* %12, %struct._Py_Identifier* @PyId_lower, %struct._object* %13)
  %cmp = icmp eq i32 %call8, -1
  br i1 %cmp, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.7
  br label %failed

if.end.10:                                        ; preds = %if.end.7
  br label %do.body

do.body:                                          ; preds = %if.end.10
  %14 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0
  %16 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %16, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %19(%struct._object* %20)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  %21 = load %struct._slice*, %struct._slice** %o, align 8
  %v14 = getelementptr inbounds %struct._slice, %struct._slice* %21, i32 0, i32 1
  %Slice15 = bitcast %union.anon.24* %v14 to %struct.anon.25*
  %upper = getelementptr inbounds %struct.anon.25, %struct.anon.25* %Slice15, i32 0, i32 1
  %22 = load %struct._expr*, %struct._expr** %upper, align 8
  %23 = bitcast %struct._expr* %22 to i8*
  %call16 = call %struct._object* @ast2obj_expr(i8* %23)
  store %struct._object* %call16, %struct._object** %value, align 8
  %24 = load %struct._object*, %struct._object** %value, align 8
  %tobool17 = icmp ne %struct._object* %24, null
  br i1 %tobool17, label %if.end.19, label %if.then.18

if.then.18:                                       ; preds = %do.end
  br label %failed

if.end.19:                                        ; preds = %do.end
  %25 = load %struct._object*, %struct._object** %result, align 8
  %26 = load %struct._object*, %struct._object** %value, align 8
  %call20 = call i32 @_PyObject_SetAttrId(%struct._object* %25, %struct._Py_Identifier* @PyId_upper, %struct._object* %26)
  %cmp21 = icmp eq i32 %call20, -1
  br i1 %cmp21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.19
  br label %failed

if.end.23:                                        ; preds = %if.end.19
  br label %do.body.24

do.body.24:                                       ; preds = %if.end.23
  %27 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %27, %struct._object** %_py_decref_tmp25, align 8
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0
  %29 = load i64, i64* %ob_refcnt26, align 8
  %dec27 = add i64 %29, -1
  store i64 %dec27, i64* %ob_refcnt26, align 8
  %cmp28 = icmp ne i64 %dec27, 0
  br i1 %cmp28, label %if.then.29, label %if.else.30

if.then.29:                                       ; preds = %do.body.24
  br label %if.end.33

if.else.30:                                       ; preds = %do.body.24
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8
  %tp_dealloc32 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc32, align 8
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8
  call void %32(%struct._object* %33)
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.30, %if.then.29
  br label %do.end.34

do.end.34:                                        ; preds = %if.end.33
  %34 = load %struct._slice*, %struct._slice** %o, align 8
  %v35 = getelementptr inbounds %struct._slice, %struct._slice* %34, i32 0, i32 1
  %Slice36 = bitcast %union.anon.24* %v35 to %struct.anon.25*
  %step = getelementptr inbounds %struct.anon.25, %struct.anon.25* %Slice36, i32 0, i32 2
  %35 = load %struct._expr*, %struct._expr** %step, align 8
  %36 = bitcast %struct._expr* %35 to i8*
  %call37 = call %struct._object* @ast2obj_expr(i8* %36)
  store %struct._object* %call37, %struct._object** %value, align 8
  %37 = load %struct._object*, %struct._object** %value, align 8
  %tobool38 = icmp ne %struct._object* %37, null
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %do.end.34
  br label %failed

if.end.40:                                        ; preds = %do.end.34
  %38 = load %struct._object*, %struct._object** %result, align 8
  %39 = load %struct._object*, %struct._object** %value, align 8
  %call41 = call i32 @_PyObject_SetAttrId(%struct._object* %38, %struct._Py_Identifier* @PyId_step, %struct._object* %39)
  %cmp42 = icmp eq i32 %call41, -1
  br i1 %cmp42, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.end.40
  br label %failed

if.end.44:                                        ; preds = %if.end.40
  br label %do.body.45

do.body.45:                                       ; preds = %if.end.44
  %40 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %40, %struct._object** %_py_decref_tmp46, align 8
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0
  %42 = load i64, i64* %ob_refcnt47, align 8
  %dec48 = add i64 %42, -1
  store i64 %dec48, i64* %ob_refcnt47, align 8
  %cmp49 = icmp ne i64 %dec48, 0
  br i1 %cmp49, label %if.then.50, label %if.else.51

if.then.50:                                       ; preds = %do.body.45
  br label %if.end.54

if.else.51:                                       ; preds = %do.body.45
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  call void %45(%struct._object* %46)
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.51, %if.then.50
  br label %do.end.55

do.end.55:                                        ; preds = %if.end.54
  br label %sw.epilog

sw.bb.56:                                         ; preds = %if.end
  %47 = load %struct._typeobject*, %struct._typeobject** @ExtSlice_type, align 8
  %call57 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %47, %struct._object* null, %struct._object* null)
  store %struct._object* %call57, %struct._object** %result, align 8
  %48 = load %struct._object*, %struct._object** %result, align 8
  %tobool58 = icmp ne %struct._object* %48, null
  br i1 %tobool58, label %if.end.60, label %if.then.59

if.then.59:                                       ; preds = %sw.bb.56
  br label %failed

if.end.60:                                        ; preds = %sw.bb.56
  %49 = load %struct._slice*, %struct._slice** %o, align 8
  %v61 = getelementptr inbounds %struct._slice, %struct._slice* %49, i32 0, i32 1
  %ExtSlice = bitcast %union.anon.24* %v61 to %struct.anon.26*
  %dims = getelementptr inbounds %struct.anon.26, %struct.anon.26* %ExtSlice, i32 0, i32 0
  %50 = load %struct.asdl_seq*, %struct.asdl_seq** %dims, align 8
  %call62 = call %struct._object* @ast2obj_list(%struct.asdl_seq* %50, %struct._object* (i8*)* @ast2obj_slice)
  store %struct._object* %call62, %struct._object** %value, align 8
  %51 = load %struct._object*, %struct._object** %value, align 8
  %tobool63 = icmp ne %struct._object* %51, null
  br i1 %tobool63, label %if.end.65, label %if.then.64

if.then.64:                                       ; preds = %if.end.60
  br label %failed

if.end.65:                                        ; preds = %if.end.60
  %52 = load %struct._object*, %struct._object** %result, align 8
  %53 = load %struct._object*, %struct._object** %value, align 8
  %call66 = call i32 @_PyObject_SetAttrId(%struct._object* %52, %struct._Py_Identifier* @PyId_dims, %struct._object* %53)
  %cmp67 = icmp eq i32 %call66, -1
  br i1 %cmp67, label %if.then.68, label %if.end.69

if.then.68:                                       ; preds = %if.end.65
  br label %failed

if.end.69:                                        ; preds = %if.end.65
  br label %do.body.70

do.body.70:                                       ; preds = %if.end.69
  %54 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %54, %struct._object** %_py_decref_tmp71, align 8
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8
  %ob_refcnt72 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 0
  %56 = load i64, i64* %ob_refcnt72, align 8
  %dec73 = add i64 %56, -1
  store i64 %dec73, i64* %ob_refcnt72, align 8
  %cmp74 = icmp ne i64 %dec73, 0
  br i1 %cmp74, label %if.then.75, label %if.else.76

if.then.75:                                       ; preds = %do.body.70
  br label %if.end.79

if.else.76:                                       ; preds = %do.body.70
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8
  %ob_type77 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 1
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type77, align 8
  %tp_dealloc78 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i32 0, i32 4
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc78, align 8
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8
  call void %59(%struct._object* %60)
  br label %if.end.79

if.end.79:                                        ; preds = %if.else.76, %if.then.75
  br label %do.end.80

do.end.80:                                        ; preds = %if.end.79
  br label %sw.epilog

sw.bb.81:                                         ; preds = %if.end
  %61 = load %struct._typeobject*, %struct._typeobject** @Index_type, align 8
  %call82 = call %struct._object* @PyType_GenericNew(%struct._typeobject* %61, %struct._object* null, %struct._object* null)
  store %struct._object* %call82, %struct._object** %result, align 8
  %62 = load %struct._object*, %struct._object** %result, align 8
  %tobool83 = icmp ne %struct._object* %62, null
  br i1 %tobool83, label %if.end.85, label %if.then.84

if.then.84:                                       ; preds = %sw.bb.81
  br label %failed

if.end.85:                                        ; preds = %sw.bb.81
  %63 = load %struct._slice*, %struct._slice** %o, align 8
  %v86 = getelementptr inbounds %struct._slice, %struct._slice* %63, i32 0, i32 1
  %Index = bitcast %union.anon.24* %v86 to %struct.anon.27*
  %value87 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %Index, i32 0, i32 0
  %64 = load %struct._expr*, %struct._expr** %value87, align 8
  %65 = bitcast %struct._expr* %64 to i8*
  %call88 = call %struct._object* @ast2obj_expr(i8* %65)
  store %struct._object* %call88, %struct._object** %value, align 8
  %66 = load %struct._object*, %struct._object** %value, align 8
  %tobool89 = icmp ne %struct._object* %66, null
  br i1 %tobool89, label %if.end.91, label %if.then.90

if.then.90:                                       ; preds = %if.end.85
  br label %failed

if.end.91:                                        ; preds = %if.end.85
  %67 = load %struct._object*, %struct._object** %result, align 8
  %68 = load %struct._object*, %struct._object** %value, align 8
  %call92 = call i32 @_PyObject_SetAttrId(%struct._object* %67, %struct._Py_Identifier* @PyId_value, %struct._object* %68)
  %cmp93 = icmp eq i32 %call92, -1
  br i1 %cmp93, label %if.then.94, label %if.end.95

if.then.94:                                       ; preds = %if.end.91
  br label %failed

if.end.95:                                        ; preds = %if.end.91
  br label %do.body.96

do.body.96:                                       ; preds = %if.end.95
  %69 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %69, %struct._object** %_py_decref_tmp97, align 8
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp97, align 8
  %ob_refcnt98 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 0
  %71 = load i64, i64* %ob_refcnt98, align 8
  %dec99 = add i64 %71, -1
  store i64 %dec99, i64* %ob_refcnt98, align 8
  %cmp100 = icmp ne i64 %dec99, 0
  br i1 %cmp100, label %if.then.101, label %if.else.102

if.then.101:                                      ; preds = %do.body.96
  br label %if.end.105

if.else.102:                                      ; preds = %do.body.96
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp97, align 8
  %ob_type103 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 1
  %73 = load %struct._typeobject*, %struct._typeobject** %ob_type103, align 8
  %tp_dealloc104 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %73, i32 0, i32 4
  %74 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc104, align 8
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp97, align 8
  call void %74(%struct._object* %75)
  br label %if.end.105

if.end.105:                                       ; preds = %if.else.102, %if.then.101
  br label %do.end.106

do.end.106:                                       ; preds = %if.end.105
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %do.end.106, %do.end.80, %do.end.55
  %76 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %76, %struct._object** %retval
  br label %return

failed:                                           ; preds = %if.then.94, %if.then.90, %if.then.84, %if.then.68, %if.then.64, %if.then.59, %if.then.43, %if.then.39, %if.then.22, %if.then.18, %if.then.9, %if.then.6, %if.then.2
  br label %do.body.107

do.body.107:                                      ; preds = %failed
  %77 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %77, %struct._object** %_py_xdecref_tmp, align 8
  %78 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp108 = icmp ne %struct._object* %78, null
  br i1 %cmp108, label %if.then.109, label %if.end.121

if.then.109:                                      ; preds = %do.body.107
  br label %do.body.110

do.body.110:                                      ; preds = %if.then.109
  %79 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %79, %struct._object** %_py_decref_tmp111, align 8
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp111, align 8
  %ob_refcnt112 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0
  %81 = load i64, i64* %ob_refcnt112, align 8
  %dec113 = add i64 %81, -1
  store i64 %dec113, i64* %ob_refcnt112, align 8
  %cmp114 = icmp ne i64 %dec113, 0
  br i1 %cmp114, label %if.then.115, label %if.else.116

if.then.115:                                      ; preds = %do.body.110
  br label %if.end.119

if.else.116:                                      ; preds = %do.body.110
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp111, align 8
  %ob_type117 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type117, align 8
  %tp_dealloc118 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc118, align 8
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp111, align 8
  call void %84(%struct._object* %85)
  br label %if.end.119

if.end.119:                                       ; preds = %if.else.116, %if.then.115
  br label %do.end.120

do.end.120:                                       ; preds = %if.end.119
  br label %if.end.121

if.end.121:                                       ; preds = %do.end.120, %do.body.107
  br label %do.end.122

do.end.122:                                       ; preds = %if.end.121
  br label %do.body.123

do.body.123:                                      ; preds = %do.end.122
  %86 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %86, %struct._object** %_py_xdecref_tmp124, align 8
  %87 = load %struct._object*, %struct._object** %_py_xdecref_tmp124, align 8
  %cmp125 = icmp ne %struct._object* %87, null
  br i1 %cmp125, label %if.then.126, label %if.end.138

if.then.126:                                      ; preds = %do.body.123
  br label %do.body.127

do.body.127:                                      ; preds = %if.then.126
  %88 = load %struct._object*, %struct._object** %_py_xdecref_tmp124, align 8
  store %struct._object* %88, %struct._object** %_py_decref_tmp128, align 8
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8
  %ob_refcnt129 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 0
  %90 = load i64, i64* %ob_refcnt129, align 8
  %dec130 = add i64 %90, -1
  store i64 %dec130, i64* %ob_refcnt129, align 8
  %cmp131 = icmp ne i64 %dec130, 0
  br i1 %cmp131, label %if.then.132, label %if.else.133

if.then.132:                                      ; preds = %do.body.127
  br label %if.end.136

if.else.133:                                      ; preds = %do.body.127
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8
  %ob_type134 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 1
  %92 = load %struct._typeobject*, %struct._typeobject** %ob_type134, align 8
  %tp_dealloc135 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %92, i32 0, i32 4
  %93 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc135, align 8
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8
  call void %93(%struct._object* %94)
  br label %if.end.136

if.end.136:                                       ; preds = %if.else.133, %if.then.132
  br label %do.end.137

do.end.137:                                       ; preds = %if.end.136
  br label %if.end.138

if.end.138:                                       ; preds = %do.end.137, %do.body.123
  br label %do.end.139

do.end.139:                                       ; preds = %if.end.138
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.139, %sw.epilog, %if.then
  %95 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %95
}

declare i32 @_PyObject_HasAttrId(%struct._object*, %struct._Py_Identifier*) #1

declare %struct.asdl_seq* @_Py_asdl_seq_new(i64, %struct._arena*) #1

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_stmt(%struct._object* %obj, %struct._stmt** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._stmt**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %isinstance = alloca i32, align 4
  %tmp = alloca %struct._object*, align 8
  %lineno = alloca i32, align 4
  %col_offset = alloca i32, align 4
  %res = alloca i32, align 4
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %res29 = alloca i32, align 4
  %_py_tmp40 = alloca %struct._object*, align 8
  %_py_decref_tmp45 = alloca %struct._object*, align 8
  %name = alloca %struct._object*, align 8
  %args = alloca %struct._arguments*, align 8
  %body = alloca %struct.asdl_seq*, align 8
  %decorator_list = alloca %struct.asdl_seq*, align 8
  %returns = alloca %struct._expr*, align 8
  %res74 = alloca i32, align 4
  %_py_tmp85 = alloca %struct._object*, align 8
  %_py_decref_tmp90 = alloca %struct._object*, align 8
  %res108 = alloca i32, align 4
  %_py_tmp119 = alloca %struct._object*, align 8
  %_py_decref_tmp124 = alloca %struct._object*, align 8
  %res142 = alloca i32, align 4
  %len = alloca i64, align 8
  %i = alloca i64, align 8
  %value = alloca %struct._stmt*, align 8
  %_py_tmp168 = alloca %struct._object*, align 8
  %_py_decref_tmp173 = alloca %struct._object*, align 8
  %res191 = alloca i32, align 4
  %len193 = alloca i64, align 8
  %i195 = alloca i64, align 8
  %value218 = alloca %struct._expr*, align 8
  %_py_tmp232 = alloca %struct._object*, align 8
  %_py_decref_tmp237 = alloca %struct._object*, align 8
  %res255 = alloca i32, align 4
  %_py_tmp266 = alloca %struct._object*, align 8
  %_py_decref_tmp271 = alloca %struct._object*, align 8
  %name297 = alloca %struct._object*, align 8
  %bases = alloca %struct.asdl_seq*, align 8
  %keywords = alloca %struct.asdl_seq*, align 8
  %starargs = alloca %struct._expr*, align 8
  %kwargs = alloca %struct._expr*, align 8
  %body303 = alloca %struct.asdl_seq*, align 8
  %decorator_list305 = alloca %struct.asdl_seq*, align 8
  %res310 = alloca i32, align 4
  %_py_tmp321 = alloca %struct._object*, align 8
  %_py_decref_tmp326 = alloca %struct._object*, align 8
  %res344 = alloca i32, align 4
  %len346 = alloca i64, align 8
  %i348 = alloca i64, align 8
  %value371 = alloca %struct._expr*, align 8
  %_py_tmp385 = alloca %struct._object*, align 8
  %_py_decref_tmp390 = alloca %struct._object*, align 8
  %res408 = alloca i32, align 4
  %len410 = alloca i64, align 8
  %i412 = alloca i64, align 8
  %value435 = alloca %struct._keyword*, align 8
  %_py_tmp449 = alloca %struct._object*, align 8
  %_py_decref_tmp454 = alloca %struct._object*, align 8
  %res472 = alloca i32, align 4
  %_py_tmp483 = alloca %struct._object*, align 8
  %_py_decref_tmp488 = alloca %struct._object*, align 8
  %res506 = alloca i32, align 4
  %_py_tmp517 = alloca %struct._object*, align 8
  %_py_decref_tmp522 = alloca %struct._object*, align 8
  %res540 = alloca i32, align 4
  %len542 = alloca i64, align 8
  %i544 = alloca i64, align 8
  %value567 = alloca %struct._stmt*, align 8
  %_py_tmp581 = alloca %struct._object*, align 8
  %_py_decref_tmp586 = alloca %struct._object*, align 8
  %res604 = alloca i32, align 4
  %len606 = alloca i64, align 8
  %i608 = alloca i64, align 8
  %value631 = alloca %struct._expr*, align 8
  %_py_tmp645 = alloca %struct._object*, align 8
  %_py_decref_tmp650 = alloca %struct._object*, align 8
  %value676 = alloca %struct._expr*, align 8
  %res681 = alloca i32, align 4
  %_py_tmp692 = alloca %struct._object*, align 8
  %_py_decref_tmp697 = alloca %struct._object*, align 8
  %targets = alloca %struct.asdl_seq*, align 8
  %res727 = alloca i32, align 4
  %len729 = alloca i64, align 8
  %i731 = alloca i64, align 8
  %value754 = alloca %struct._expr*, align 8
  %_py_tmp768 = alloca %struct._object*, align 8
  %_py_decref_tmp773 = alloca %struct._object*, align 8
  %targets799 = alloca %struct.asdl_seq*, align 8
  %value801 = alloca %struct._expr*, align 8
  %res806 = alloca i32, align 4
  %len808 = alloca i64, align 8
  %i810 = alloca i64, align 8
  %value833 = alloca %struct._expr*, align 8
  %_py_tmp847 = alloca %struct._object*, align 8
  %_py_decref_tmp852 = alloca %struct._object*, align 8
  %res870 = alloca i32, align 4
  %_py_tmp881 = alloca %struct._object*, align 8
  %_py_decref_tmp886 = alloca %struct._object*, align 8
  %target = alloca %struct._expr*, align 8
  %op = alloca i32, align 4
  %value914 = alloca %struct._expr*, align 8
  %res919 = alloca i32, align 4
  %_py_tmp930 = alloca %struct._object*, align 8
  %_py_decref_tmp935 = alloca %struct._object*, align 8
  %res953 = alloca i32, align 4
  %_py_tmp964 = alloca %struct._object*, align 8
  %_py_decref_tmp969 = alloca %struct._object*, align 8
  %res987 = alloca i32, align 4
  %_py_tmp998 = alloca %struct._object*, align 8
  %_py_decref_tmp1003 = alloca %struct._object*, align 8
  %target1029 = alloca %struct._expr*, align 8
  %iter = alloca %struct._expr*, align 8
  %body1032 = alloca %struct.asdl_seq*, align 8
  %orelse = alloca %struct.asdl_seq*, align 8
  %res1038 = alloca i32, align 4
  %_py_tmp1049 = alloca %struct._object*, align 8
  %_py_decref_tmp1054 = alloca %struct._object*, align 8
  %res1072 = alloca i32, align 4
  %_py_tmp1083 = alloca %struct._object*, align 8
  %_py_decref_tmp1088 = alloca %struct._object*, align 8
  %res1106 = alloca i32, align 4
  %len1108 = alloca i64, align 8
  %i1110 = alloca i64, align 8
  %value1133 = alloca %struct._stmt*, align 8
  %_py_tmp1147 = alloca %struct._object*, align 8
  %_py_decref_tmp1152 = alloca %struct._object*, align 8
  %res1170 = alloca i32, align 4
  %len1172 = alloca i64, align 8
  %i1174 = alloca i64, align 8
  %value1197 = alloca %struct._stmt*, align 8
  %_py_tmp1211 = alloca %struct._object*, align 8
  %_py_decref_tmp1216 = alloca %struct._object*, align 8
  %test = alloca %struct._expr*, align 8
  %body1243 = alloca %struct.asdl_seq*, align 8
  %orelse1245 = alloca %struct.asdl_seq*, align 8
  %res1250 = alloca i32, align 4
  %_py_tmp1261 = alloca %struct._object*, align 8
  %_py_decref_tmp1266 = alloca %struct._object*, align 8
  %res1284 = alloca i32, align 4
  %len1286 = alloca i64, align 8
  %i1288 = alloca i64, align 8
  %value1311 = alloca %struct._stmt*, align 8
  %_py_tmp1325 = alloca %struct._object*, align 8
  %_py_decref_tmp1330 = alloca %struct._object*, align 8
  %res1348 = alloca i32, align 4
  %len1350 = alloca i64, align 8
  %i1352 = alloca i64, align 8
  %value1375 = alloca %struct._stmt*, align 8
  %_py_tmp1389 = alloca %struct._object*, align 8
  %_py_decref_tmp1394 = alloca %struct._object*, align 8
  %test1420 = alloca %struct._expr*, align 8
  %body1422 = alloca %struct.asdl_seq*, align 8
  %orelse1424 = alloca %struct.asdl_seq*, align 8
  %res1429 = alloca i32, align 4
  %_py_tmp1440 = alloca %struct._object*, align 8
  %_py_decref_tmp1445 = alloca %struct._object*, align 8
  %res1463 = alloca i32, align 4
  %len1465 = alloca i64, align 8
  %i1467 = alloca i64, align 8
  %value1490 = alloca %struct._stmt*, align 8
  %_py_tmp1504 = alloca %struct._object*, align 8
  %_py_decref_tmp1509 = alloca %struct._object*, align 8
  %res1527 = alloca i32, align 4
  %len1529 = alloca i64, align 8
  %i1531 = alloca i64, align 8
  %value1554 = alloca %struct._stmt*, align 8
  %_py_tmp1568 = alloca %struct._object*, align 8
  %_py_decref_tmp1573 = alloca %struct._object*, align 8
  %items = alloca %struct.asdl_seq*, align 8
  %body1600 = alloca %struct.asdl_seq*, align 8
  %res1605 = alloca i32, align 4
  %len1607 = alloca i64, align 8
  %i1609 = alloca i64, align 8
  %value1632 = alloca %struct._withitem*, align 8
  %_py_tmp1646 = alloca %struct._object*, align 8
  %_py_decref_tmp1651 = alloca %struct._object*, align 8
  %res1669 = alloca i32, align 4
  %len1671 = alloca i64, align 8
  %i1673 = alloca i64, align 8
  %value1696 = alloca %struct._stmt*, align 8
  %_py_tmp1710 = alloca %struct._object*, align 8
  %_py_decref_tmp1715 = alloca %struct._object*, align 8
  %exc = alloca %struct._expr*, align 8
  %cause = alloca %struct._expr*, align 8
  %res1746 = alloca i32, align 4
  %_py_tmp1757 = alloca %struct._object*, align 8
  %_py_decref_tmp1762 = alloca %struct._object*, align 8
  %res1780 = alloca i32, align 4
  %_py_tmp1791 = alloca %struct._object*, align 8
  %_py_decref_tmp1796 = alloca %struct._object*, align 8
  %body1822 = alloca %struct.asdl_seq*, align 8
  %handlers = alloca %struct.asdl_seq*, align 8
  %orelse1825 = alloca %struct.asdl_seq*, align 8
  %finalbody = alloca %struct.asdl_seq*, align 8
  %res1831 = alloca i32, align 4
  %len1833 = alloca i64, align 8
  %i1835 = alloca i64, align 8
  %value1858 = alloca %struct._stmt*, align 8
  %_py_tmp1872 = alloca %struct._object*, align 8
  %_py_decref_tmp1877 = alloca %struct._object*, align 8
  %res1895 = alloca i32, align 4
  %len1897 = alloca i64, align 8
  %i1899 = alloca i64, align 8
  %value1922 = alloca %struct._excepthandler*, align 8
  %_py_tmp1936 = alloca %struct._object*, align 8
  %_py_decref_tmp1941 = alloca %struct._object*, align 8
  %res1959 = alloca i32, align 4
  %len1961 = alloca i64, align 8
  %i1963 = alloca i64, align 8
  %value1986 = alloca %struct._stmt*, align 8
  %_py_tmp2000 = alloca %struct._object*, align 8
  %_py_decref_tmp2005 = alloca %struct._object*, align 8
  %res2023 = alloca i32, align 4
  %len2025 = alloca i64, align 8
  %i2027 = alloca i64, align 8
  %value2050 = alloca %struct._stmt*, align 8
  %_py_tmp2064 = alloca %struct._object*, align 8
  %_py_decref_tmp2069 = alloca %struct._object*, align 8
  %test2095 = alloca %struct._expr*, align 8
  %msg = alloca %struct._expr*, align 8
  %res2101 = alloca i32, align 4
  %_py_tmp2112 = alloca %struct._object*, align 8
  %_py_decref_tmp2117 = alloca %struct._object*, align 8
  %res2135 = alloca i32, align 4
  %_py_tmp2146 = alloca %struct._object*, align 8
  %_py_decref_tmp2151 = alloca %struct._object*, align 8
  %names = alloca %struct.asdl_seq*, align 8
  %res2181 = alloca i32, align 4
  %len2183 = alloca i64, align 8
  %i2185 = alloca i64, align 8
  %value2208 = alloca %struct._alias*, align 8
  %_py_tmp2222 = alloca %struct._object*, align 8
  %_py_decref_tmp2227 = alloca %struct._object*, align 8
  %module = alloca %struct._object*, align 8
  %names2254 = alloca %struct.asdl_seq*, align 8
  %level = alloca i32, align 4
  %res2260 = alloca i32, align 4
  %_py_tmp2271 = alloca %struct._object*, align 8
  %_py_decref_tmp2276 = alloca %struct._object*, align 8
  %res2294 = alloca i32, align 4
  %len2296 = alloca i64, align 8
  %i2298 = alloca i64, align 8
  %value2321 = alloca %struct._alias*, align 8
  %_py_tmp2335 = alloca %struct._object*, align 8
  %_py_decref_tmp2340 = alloca %struct._object*, align 8
  %res2358 = alloca i32, align 4
  %_py_tmp2369 = alloca %struct._object*, align 8
  %_py_decref_tmp2374 = alloca %struct._object*, align 8
  %names2400 = alloca %struct.asdl_seq*, align 8
  %res2405 = alloca i32, align 4
  %len2407 = alloca i64, align 8
  %i2409 = alloca i64, align 8
  %value2432 = alloca %struct._object*, align 8
  %_py_tmp2446 = alloca %struct._object*, align 8
  %_py_decref_tmp2451 = alloca %struct._object*, align 8
  %names2477 = alloca %struct.asdl_seq*, align 8
  %res2482 = alloca i32, align 4
  %len2484 = alloca i64, align 8
  %i2486 = alloca i64, align 8
  %value2509 = alloca %struct._object*, align 8
  %_py_tmp2523 = alloca %struct._object*, align 8
  %_py_decref_tmp2528 = alloca %struct._object*, align 8
  %value2554 = alloca %struct._expr*, align 8
  %res2559 = alloca i32, align 4
  %_py_tmp2570 = alloca %struct._object*, align 8
  %_py_decref_tmp2575 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp2634 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._stmt** %out, %struct._stmt*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  store %struct._object* null, %struct._object** %tmp, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %cmp = icmp eq %struct._object* %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* null, %struct._stmt** %1, align 8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i32 @_PyObject_HasAttrId(%struct._object* %2, %struct._Py_Identifier* @PyId_lineno)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then.3, label %if.else.23

if.then.3:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call5 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %3, %struct._Py_Identifier* @PyId_lineno)
  store %struct._object* %call5, %struct._object** %tmp, align 8
  %4 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp6 = icmp eq %struct._object* %4, null
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.then.3
  br label %failed

if.end.8:                                         ; preds = %if.then.3
  %5 = load %struct._object*, %struct._object** %tmp, align 8
  %6 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call9 = call i32 @obj2ast_int(%struct._object* %5, i32* %lineno, %struct._arena* %6)
  store i32 %call9, i32* %res, align 4
  %7 = load i32, i32* %res, align 4
  %cmp10 = icmp ne i32 %7, 0
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.8
  br label %failed

if.end.12:                                        ; preds = %if.end.8
  br label %do.body

do.body:                                          ; preds = %if.end.12
  %8 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %8, %struct._object** %_py_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp14 = icmp ne %struct._object* %9, null
  br i1 %cmp14, label %if.then.15, label %if.end.21

if.then.15:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.16

do.body.16:                                       ; preds = %if.then.15
  %10 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0
  %12 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %12, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp18 = icmp ne i64 %dec, 0
  br i1 %cmp18, label %if.then.19, label %if.else

if.then.19:                                       ; preds = %do.body.16
  br label %if.end.20

if.else:                                          ; preds = %do.body.16
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %15(%struct._object* %16)
  br label %if.end.20

if.end.20:                                        ; preds = %if.else, %if.then.19
  br label %do.end

do.end:                                           ; preds = %if.end.20
  br label %if.end.21

if.end.21:                                        ; preds = %do.end, %do.body
  br label %do.end.22

do.end.22:                                        ; preds = %if.end.21
  br label %if.end.24

if.else.23:                                       ; preds = %if.end
  %17 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.250, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.24:                                        ; preds = %do.end.22
  %18 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call25 = call i32 @_PyObject_HasAttrId(%struct._object* %18, %struct._Py_Identifier* @PyId_col_offset)
  %tobool26 = icmp ne i32 %call25, 0
  br i1 %tobool26, label %if.then.27, label %if.else.57

if.then.27:                                       ; preds = %if.end.24
  %19 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call30 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %19, %struct._Py_Identifier* @PyId_col_offset)
  store %struct._object* %call30, %struct._object** %tmp, align 8
  %20 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp31 = icmp eq %struct._object* %20, null
  br i1 %cmp31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.then.27
  br label %failed

if.end.33:                                        ; preds = %if.then.27
  %21 = load %struct._object*, %struct._object** %tmp, align 8
  %22 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call34 = call i32 @obj2ast_int(%struct._object* %21, i32* %col_offset, %struct._arena* %22)
  store i32 %call34, i32* %res29, align 4
  %23 = load i32, i32* %res29, align 4
  %cmp35 = icmp ne i32 %23, 0
  br i1 %cmp35, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %if.end.33
  br label %failed

if.end.37:                                        ; preds = %if.end.33
  br label %do.body.38

do.body.38:                                       ; preds = %if.end.37
  %24 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %24, %struct._object** %_py_tmp40, align 8
  %25 = load %struct._object*, %struct._object** %_py_tmp40, align 8
  %cmp41 = icmp ne %struct._object* %25, null
  br i1 %cmp41, label %if.then.42, label %if.end.55

if.then.42:                                       ; preds = %do.body.38
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.43

do.body.43:                                       ; preds = %if.then.42
  %26 = load %struct._object*, %struct._object** %_py_tmp40, align 8
  store %struct._object* %26, %struct._object** %_py_decref_tmp45, align 8
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0
  %28 = load i64, i64* %ob_refcnt46, align 8
  %dec47 = add i64 %28, -1
  store i64 %dec47, i64* %ob_refcnt46, align 8
  %cmp48 = icmp ne i64 %dec47, 0
  br i1 %cmp48, label %if.then.49, label %if.else.50

if.then.49:                                       ; preds = %do.body.43
  br label %if.end.53

if.else.50:                                       ; preds = %do.body.43
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8
  %tp_dealloc52 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc52, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  call void %31(%struct._object* %32)
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.50, %if.then.49
  br label %do.end.54

do.end.54:                                        ; preds = %if.end.53
  br label %if.end.55

if.end.55:                                        ; preds = %do.end.54, %do.body.38
  br label %do.end.56

do.end.56:                                        ; preds = %if.end.55
  br label %if.end.58

if.else.57:                                       ; preds = %if.end.24
  %33 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %33, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.251, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.58:                                        ; preds = %do.end.56
  %34 = load %struct._object*, %struct._object** %obj.addr, align 8
  %35 = load %struct._typeobject*, %struct._typeobject** @FunctionDef_type, align 8
  %36 = bitcast %struct._typeobject* %35 to %struct._object*
  %call59 = call i32 @PyObject_IsInstance(%struct._object* %34, %struct._object* %36)
  store i32 %call59, i32* %isinstance, align 4
  %37 = load i32, i32* %isinstance, align 4
  %cmp60 = icmp eq i32 %37, -1
  br i1 %cmp60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.end.58
  store i32 1, i32* %retval
  br label %return

if.end.62:                                        ; preds = %if.end.58
  %38 = load i32, i32* %isinstance, align 4
  %tobool63 = icmp ne i32 %38, 0
  br i1 %tobool63, label %if.then.64, label %if.end.289

if.then.64:                                       ; preds = %if.end.62
  %39 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call70 = call i32 @_PyObject_HasAttrId(%struct._object* %39, %struct._Py_Identifier* @PyId_name)
  %tobool71 = icmp ne i32 %call70, 0
  br i1 %tobool71, label %if.then.72, label %if.else.102

if.then.72:                                       ; preds = %if.then.64
  %40 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call75 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %40, %struct._Py_Identifier* @PyId_name)
  store %struct._object* %call75, %struct._object** %tmp, align 8
  %41 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp76 = icmp eq %struct._object* %41, null
  br i1 %cmp76, label %if.then.77, label %if.end.78

if.then.77:                                       ; preds = %if.then.72
  br label %failed

if.end.78:                                        ; preds = %if.then.72
  %42 = load %struct._object*, %struct._object** %tmp, align 8
  %43 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call79 = call i32 @obj2ast_identifier(%struct._object* %42, %struct._object** %name, %struct._arena* %43)
  store i32 %call79, i32* %res74, align 4
  %44 = load i32, i32* %res74, align 4
  %cmp80 = icmp ne i32 %44, 0
  br i1 %cmp80, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %if.end.78
  br label %failed

if.end.82:                                        ; preds = %if.end.78
  br label %do.body.83

do.body.83:                                       ; preds = %if.end.82
  %45 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %45, %struct._object** %_py_tmp85, align 8
  %46 = load %struct._object*, %struct._object** %_py_tmp85, align 8
  %cmp86 = icmp ne %struct._object* %46, null
  br i1 %cmp86, label %if.then.87, label %if.end.100

if.then.87:                                       ; preds = %do.body.83
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.88

do.body.88:                                       ; preds = %if.then.87
  %47 = load %struct._object*, %struct._object** %_py_tmp85, align 8
  store %struct._object* %47, %struct._object** %_py_decref_tmp90, align 8
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8
  %ob_refcnt91 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0
  %49 = load i64, i64* %ob_refcnt91, align 8
  %dec92 = add i64 %49, -1
  store i64 %dec92, i64* %ob_refcnt91, align 8
  %cmp93 = icmp ne i64 %dec92, 0
  br i1 %cmp93, label %if.then.94, label %if.else.95

if.then.94:                                       ; preds = %do.body.88
  br label %if.end.98

if.else.95:                                       ; preds = %do.body.88
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8
  %ob_type96 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 1
  %51 = load %struct._typeobject*, %struct._typeobject** %ob_type96, align 8
  %tp_dealloc97 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %51, i32 0, i32 4
  %52 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc97, align 8
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8
  call void %52(%struct._object* %53)
  br label %if.end.98

if.end.98:                                        ; preds = %if.else.95, %if.then.94
  br label %do.end.99

do.end.99:                                        ; preds = %if.end.98
  br label %if.end.100

if.end.100:                                       ; preds = %do.end.99, %do.body.83
  br label %do.end.101

do.end.101:                                       ; preds = %if.end.100
  br label %if.end.103

if.else.102:                                      ; preds = %if.then.64
  %54 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %54, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.252, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.103:                                       ; preds = %do.end.101
  %55 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call104 = call i32 @_PyObject_HasAttrId(%struct._object* %55, %struct._Py_Identifier* @PyId_args)
  %tobool105 = icmp ne i32 %call104, 0
  br i1 %tobool105, label %if.then.106, label %if.else.136

if.then.106:                                      ; preds = %if.end.103
  %56 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call109 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %56, %struct._Py_Identifier* @PyId_args)
  store %struct._object* %call109, %struct._object** %tmp, align 8
  %57 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp110 = icmp eq %struct._object* %57, null
  br i1 %cmp110, label %if.then.111, label %if.end.112

if.then.111:                                      ; preds = %if.then.106
  br label %failed

if.end.112:                                       ; preds = %if.then.106
  %58 = load %struct._object*, %struct._object** %tmp, align 8
  %59 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call113 = call i32 @obj2ast_arguments(%struct._object* %58, %struct._arguments** %args, %struct._arena* %59)
  store i32 %call113, i32* %res108, align 4
  %60 = load i32, i32* %res108, align 4
  %cmp114 = icmp ne i32 %60, 0
  br i1 %cmp114, label %if.then.115, label %if.end.116

if.then.115:                                      ; preds = %if.end.112
  br label %failed

if.end.116:                                       ; preds = %if.end.112
  br label %do.body.117

do.body.117:                                      ; preds = %if.end.116
  %61 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %61, %struct._object** %_py_tmp119, align 8
  %62 = load %struct._object*, %struct._object** %_py_tmp119, align 8
  %cmp120 = icmp ne %struct._object* %62, null
  br i1 %cmp120, label %if.then.121, label %if.end.134

if.then.121:                                      ; preds = %do.body.117
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.122

do.body.122:                                      ; preds = %if.then.121
  %63 = load %struct._object*, %struct._object** %_py_tmp119, align 8
  store %struct._object* %63, %struct._object** %_py_decref_tmp124, align 8
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp124, align 8
  %ob_refcnt125 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 0
  %65 = load i64, i64* %ob_refcnt125, align 8
  %dec126 = add i64 %65, -1
  store i64 %dec126, i64* %ob_refcnt125, align 8
  %cmp127 = icmp ne i64 %dec126, 0
  br i1 %cmp127, label %if.then.128, label %if.else.129

if.then.128:                                      ; preds = %do.body.122
  br label %if.end.132

if.else.129:                                      ; preds = %do.body.122
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp124, align 8
  %ob_type130 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 1
  %67 = load %struct._typeobject*, %struct._typeobject** %ob_type130, align 8
  %tp_dealloc131 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %67, i32 0, i32 4
  %68 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc131, align 8
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp124, align 8
  call void %68(%struct._object* %69)
  br label %if.end.132

if.end.132:                                       ; preds = %if.else.129, %if.then.128
  br label %do.end.133

do.end.133:                                       ; preds = %if.end.132
  br label %if.end.134

if.end.134:                                       ; preds = %do.end.133, %do.body.117
  br label %do.end.135

do.end.135:                                       ; preds = %if.end.134
  br label %if.end.137

if.else.136:                                      ; preds = %if.end.103
  %70 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %70, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.253, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.137:                                       ; preds = %do.end.135
  %71 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call138 = call i32 @_PyObject_HasAttrId(%struct._object* %71, %struct._Py_Identifier* @PyId_body)
  %tobool139 = icmp ne i32 %call138, 0
  br i1 %tobool139, label %if.then.140, label %if.else.185

if.then.140:                                      ; preds = %if.end.137
  %72 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call145 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %72, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call145, %struct._object** %tmp, align 8
  %73 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp146 = icmp eq %struct._object* %73, null
  br i1 %cmp146, label %if.then.147, label %if.end.148

if.then.147:                                      ; preds = %if.then.140
  br label %failed

if.end.148:                                       ; preds = %if.then.140
  %74 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type149 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type149, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 19
  %76 = load i64, i64* %tp_flags, align 8
  %and = and i64 %76, 33554432
  %cmp150 = icmp ne i64 %and, 0
  br i1 %cmp150, label %if.end.154, label %if.then.151

if.then.151:                                      ; preds = %if.end.148
  %77 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %78 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type152 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 1
  %79 = load %struct._typeobject*, %struct._typeobject** %ob_type152, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %79, i32 0, i32 1
  %80 = load i8*, i8** %tp_name, align 8
  %call153 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %77, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.254, i32 0, i32 0), i8* %80)
  br label %failed

if.end.154:                                       ; preds = %if.end.148
  %81 = load %struct._object*, %struct._object** %tmp, align 8
  %82 = bitcast %struct._object* %81 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %82, i32 0, i32 1
  %83 = load i64, i64* %ob_size, align 8
  store i64 %83, i64* %len, align 8
  %84 = load i64, i64* %len, align 8
  %85 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call155 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %84, %struct._arena* %85)
  store %struct.asdl_seq* %call155, %struct.asdl_seq** %body, align 8
  %86 = load %struct.asdl_seq*, %struct.asdl_seq** %body, align 8
  %cmp156 = icmp eq %struct.asdl_seq* %86, null
  br i1 %cmp156, label %if.then.157, label %if.end.158

if.then.157:                                      ; preds = %if.end.154
  br label %failed

if.end.158:                                       ; preds = %if.end.154
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.158
  %87 = load i64, i64* %i, align 8
  %88 = load i64, i64* %len, align 8
  %cmp159 = icmp slt i64 %87, %88
  br i1 %cmp159, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %89 = load i64, i64* %i, align 8
  %90 = load %struct._object*, %struct._object** %tmp, align 8
  %91 = bitcast %struct._object* %90 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %91, i32 0, i32 1
  %92 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %92, i64 %89
  %93 = load %struct._object*, %struct._object** %arrayidx, align 8
  %94 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call161 = call i32 @obj2ast_stmt(%struct._object* %93, %struct._stmt** %value, %struct._arena* %94)
  store i32 %call161, i32* %res142, align 4
  %95 = load i32, i32* %res142, align 4
  %cmp162 = icmp ne i32 %95, 0
  br i1 %cmp162, label %if.then.163, label %if.end.164

if.then.163:                                      ; preds = %for.body
  br label %failed

if.end.164:                                       ; preds = %for.body
  %96 = load %struct._stmt*, %struct._stmt** %value, align 8
  %97 = bitcast %struct._stmt* %96 to i8*
  %98 = load i64, i64* %i, align 8
  %99 = load %struct.asdl_seq*, %struct.asdl_seq** %body, align 8
  %elements = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %99, i32 0, i32 1
  %arrayidx165 = getelementptr [1 x i8*], [1 x i8*]* %elements, i32 0, i64 %98
  store i8* %97, i8** %arrayidx165, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.164
  %100 = load i64, i64* %i, align 8
  %inc = add i64 %100, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body.166

do.body.166:                                      ; preds = %for.end
  %101 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %101, %struct._object** %_py_tmp168, align 8
  %102 = load %struct._object*, %struct._object** %_py_tmp168, align 8
  %cmp169 = icmp ne %struct._object* %102, null
  br i1 %cmp169, label %if.then.170, label %if.end.183

if.then.170:                                      ; preds = %do.body.166
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.171

do.body.171:                                      ; preds = %if.then.170
  %103 = load %struct._object*, %struct._object** %_py_tmp168, align 8
  store %struct._object* %103, %struct._object** %_py_decref_tmp173, align 8
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp173, align 8
  %ob_refcnt174 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 0
  %105 = load i64, i64* %ob_refcnt174, align 8
  %dec175 = add i64 %105, -1
  store i64 %dec175, i64* %ob_refcnt174, align 8
  %cmp176 = icmp ne i64 %dec175, 0
  br i1 %cmp176, label %if.then.177, label %if.else.178

if.then.177:                                      ; preds = %do.body.171
  br label %if.end.181

if.else.178:                                      ; preds = %do.body.171
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp173, align 8
  %ob_type179 = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 1
  %107 = load %struct._typeobject*, %struct._typeobject** %ob_type179, align 8
  %tp_dealloc180 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %107, i32 0, i32 4
  %108 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc180, align 8
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp173, align 8
  call void %108(%struct._object* %109)
  br label %if.end.181

if.end.181:                                       ; preds = %if.else.178, %if.then.177
  br label %do.end.182

do.end.182:                                       ; preds = %if.end.181
  br label %if.end.183

if.end.183:                                       ; preds = %do.end.182, %do.body.166
  br label %do.end.184

do.end.184:                                       ; preds = %if.end.183
  br label %if.end.186

if.else.185:                                      ; preds = %if.end.137
  %110 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %110, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.255, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.186:                                       ; preds = %do.end.184
  %111 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call187 = call i32 @_PyObject_HasAttrId(%struct._object* %111, %struct._Py_Identifier* @PyId_decorator_list)
  %tobool188 = icmp ne i32 %call187, 0
  br i1 %tobool188, label %if.then.189, label %if.else.249

if.then.189:                                      ; preds = %if.end.186
  %112 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call196 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %112, %struct._Py_Identifier* @PyId_decorator_list)
  store %struct._object* %call196, %struct._object** %tmp, align 8
  %113 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp197 = icmp eq %struct._object* %113, null
  br i1 %cmp197, label %if.then.198, label %if.end.199

if.then.198:                                      ; preds = %if.then.189
  br label %failed

if.end.199:                                       ; preds = %if.then.189
  %114 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type200 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 1
  %115 = load %struct._typeobject*, %struct._typeobject** %ob_type200, align 8
  %tp_flags201 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %115, i32 0, i32 19
  %116 = load i64, i64* %tp_flags201, align 8
  %and202 = and i64 %116, 33554432
  %cmp203 = icmp ne i64 %and202, 0
  br i1 %cmp203, label %if.end.208, label %if.then.204

if.then.204:                                      ; preds = %if.end.199
  %117 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %118 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type205 = getelementptr inbounds %struct._object, %struct._object* %118, i32 0, i32 1
  %119 = load %struct._typeobject*, %struct._typeobject** %ob_type205, align 8
  %tp_name206 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %119, i32 0, i32 1
  %120 = load i8*, i8** %tp_name206, align 8
  %call207 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %117, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.256, i32 0, i32 0), i8* %120)
  br label %failed

if.end.208:                                       ; preds = %if.end.199
  %121 = load %struct._object*, %struct._object** %tmp, align 8
  %122 = bitcast %struct._object* %121 to %struct.PyVarObject*
  %ob_size209 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %122, i32 0, i32 1
  %123 = load i64, i64* %ob_size209, align 8
  store i64 %123, i64* %len193, align 8
  %124 = load i64, i64* %len193, align 8
  %125 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call210 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %124, %struct._arena* %125)
  store %struct.asdl_seq* %call210, %struct.asdl_seq** %decorator_list, align 8
  %126 = load %struct.asdl_seq*, %struct.asdl_seq** %decorator_list, align 8
  %cmp211 = icmp eq %struct.asdl_seq* %126, null
  br i1 %cmp211, label %if.then.212, label %if.end.213

if.then.212:                                      ; preds = %if.end.208
  br label %failed

if.end.213:                                       ; preds = %if.end.208
  store i64 0, i64* %i195, align 8
  br label %for.cond.214

for.cond.214:                                     ; preds = %for.inc.227, %if.end.213
  %127 = load i64, i64* %i195, align 8
  %128 = load i64, i64* %len193, align 8
  %cmp215 = icmp slt i64 %127, %128
  br i1 %cmp215, label %for.body.216, label %for.end.229

for.body.216:                                     ; preds = %for.cond.214
  %129 = load i64, i64* %i195, align 8
  %130 = load %struct._object*, %struct._object** %tmp, align 8
  %131 = bitcast %struct._object* %130 to %struct.PyListObject*
  %ob_item219 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %131, i32 0, i32 1
  %132 = load %struct._object**, %struct._object*** %ob_item219, align 8
  %arrayidx220 = getelementptr %struct._object*, %struct._object** %132, i64 %129
  %133 = load %struct._object*, %struct._object** %arrayidx220, align 8
  %134 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call221 = call i32 @obj2ast_expr(%struct._object* %133, %struct._expr** %value218, %struct._arena* %134)
  store i32 %call221, i32* %res191, align 4
  %135 = load i32, i32* %res191, align 4
  %cmp222 = icmp ne i32 %135, 0
  br i1 %cmp222, label %if.then.223, label %if.end.224

if.then.223:                                      ; preds = %for.body.216
  br label %failed

if.end.224:                                       ; preds = %for.body.216
  %136 = load %struct._expr*, %struct._expr** %value218, align 8
  %137 = bitcast %struct._expr* %136 to i8*
  %138 = load i64, i64* %i195, align 8
  %139 = load %struct.asdl_seq*, %struct.asdl_seq** %decorator_list, align 8
  %elements225 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %139, i32 0, i32 1
  %arrayidx226 = getelementptr [1 x i8*], [1 x i8*]* %elements225, i32 0, i64 %138
  store i8* %137, i8** %arrayidx226, align 8
  br label %for.inc.227

for.inc.227:                                      ; preds = %if.end.224
  %140 = load i64, i64* %i195, align 8
  %inc228 = add i64 %140, 1
  store i64 %inc228, i64* %i195, align 8
  br label %for.cond.214

for.end.229:                                      ; preds = %for.cond.214
  br label %do.body.230

do.body.230:                                      ; preds = %for.end.229
  %141 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %141, %struct._object** %_py_tmp232, align 8
  %142 = load %struct._object*, %struct._object** %_py_tmp232, align 8
  %cmp233 = icmp ne %struct._object* %142, null
  br i1 %cmp233, label %if.then.234, label %if.end.247

if.then.234:                                      ; preds = %do.body.230
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.235

do.body.235:                                      ; preds = %if.then.234
  %143 = load %struct._object*, %struct._object** %_py_tmp232, align 8
  store %struct._object* %143, %struct._object** %_py_decref_tmp237, align 8
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp237, align 8
  %ob_refcnt238 = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 0
  %145 = load i64, i64* %ob_refcnt238, align 8
  %dec239 = add i64 %145, -1
  store i64 %dec239, i64* %ob_refcnt238, align 8
  %cmp240 = icmp ne i64 %dec239, 0
  br i1 %cmp240, label %if.then.241, label %if.else.242

if.then.241:                                      ; preds = %do.body.235
  br label %if.end.245

if.else.242:                                      ; preds = %do.body.235
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp237, align 8
  %ob_type243 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 1
  %147 = load %struct._typeobject*, %struct._typeobject** %ob_type243, align 8
  %tp_dealloc244 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %147, i32 0, i32 4
  %148 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc244, align 8
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp237, align 8
  call void %148(%struct._object* %149)
  br label %if.end.245

if.end.245:                                       ; preds = %if.else.242, %if.then.241
  br label %do.end.246

do.end.246:                                       ; preds = %if.end.245
  br label %if.end.247

if.end.247:                                       ; preds = %do.end.246, %do.body.230
  br label %do.end.248

do.end.248:                                       ; preds = %if.end.247
  br label %if.end.250

if.else.249:                                      ; preds = %if.end.186
  %150 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %150, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.257, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.250:                                       ; preds = %do.end.248
  %151 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call251 = call i32 @exists_not_none(%struct._object* %151, %struct._Py_Identifier* @PyId_returns)
  %tobool252 = icmp ne i32 %call251, 0
  br i1 %tobool252, label %if.then.253, label %if.else.283

if.then.253:                                      ; preds = %if.end.250
  %152 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call256 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %152, %struct._Py_Identifier* @PyId_returns)
  store %struct._object* %call256, %struct._object** %tmp, align 8
  %153 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp257 = icmp eq %struct._object* %153, null
  br i1 %cmp257, label %if.then.258, label %if.end.259

if.then.258:                                      ; preds = %if.then.253
  br label %failed

if.end.259:                                       ; preds = %if.then.253
  %154 = load %struct._object*, %struct._object** %tmp, align 8
  %155 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call260 = call i32 @obj2ast_expr(%struct._object* %154, %struct._expr** %returns, %struct._arena* %155)
  store i32 %call260, i32* %res255, align 4
  %156 = load i32, i32* %res255, align 4
  %cmp261 = icmp ne i32 %156, 0
  br i1 %cmp261, label %if.then.262, label %if.end.263

if.then.262:                                      ; preds = %if.end.259
  br label %failed

if.end.263:                                       ; preds = %if.end.259
  br label %do.body.264

do.body.264:                                      ; preds = %if.end.263
  %157 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %157, %struct._object** %_py_tmp266, align 8
  %158 = load %struct._object*, %struct._object** %_py_tmp266, align 8
  %cmp267 = icmp ne %struct._object* %158, null
  br i1 %cmp267, label %if.then.268, label %if.end.281

if.then.268:                                      ; preds = %do.body.264
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.269

do.body.269:                                      ; preds = %if.then.268
  %159 = load %struct._object*, %struct._object** %_py_tmp266, align 8
  store %struct._object* %159, %struct._object** %_py_decref_tmp271, align 8
  %160 = load %struct._object*, %struct._object** %_py_decref_tmp271, align 8
  %ob_refcnt272 = getelementptr inbounds %struct._object, %struct._object* %160, i32 0, i32 0
  %161 = load i64, i64* %ob_refcnt272, align 8
  %dec273 = add i64 %161, -1
  store i64 %dec273, i64* %ob_refcnt272, align 8
  %cmp274 = icmp ne i64 %dec273, 0
  br i1 %cmp274, label %if.then.275, label %if.else.276

if.then.275:                                      ; preds = %do.body.269
  br label %if.end.279

if.else.276:                                      ; preds = %do.body.269
  %162 = load %struct._object*, %struct._object** %_py_decref_tmp271, align 8
  %ob_type277 = getelementptr inbounds %struct._object, %struct._object* %162, i32 0, i32 1
  %163 = load %struct._typeobject*, %struct._typeobject** %ob_type277, align 8
  %tp_dealloc278 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %163, i32 0, i32 4
  %164 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc278, align 8
  %165 = load %struct._object*, %struct._object** %_py_decref_tmp271, align 8
  call void %164(%struct._object* %165)
  br label %if.end.279

if.end.279:                                       ; preds = %if.else.276, %if.then.275
  br label %do.end.280

do.end.280:                                       ; preds = %if.end.279
  br label %if.end.281

if.end.281:                                       ; preds = %do.end.280, %do.body.264
  br label %do.end.282

do.end.282:                                       ; preds = %if.end.281
  br label %if.end.284

if.else.283:                                      ; preds = %if.end.250
  store %struct._expr* null, %struct._expr** %returns, align 8
  br label %if.end.284

if.end.284:                                       ; preds = %if.else.283, %do.end.282
  %166 = load %struct._object*, %struct._object** %name, align 8
  %167 = load %struct._arguments*, %struct._arguments** %args, align 8
  %168 = load %struct.asdl_seq*, %struct.asdl_seq** %body, align 8
  %169 = load %struct.asdl_seq*, %struct.asdl_seq** %decorator_list, align 8
  %170 = load %struct._expr*, %struct._expr** %returns, align 8
  %171 = load i32, i32* %lineno, align 4
  %172 = load i32, i32* %col_offset, align 4
  %173 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call285 = call %struct._stmt* @_Py_FunctionDef(%struct._object* %166, %struct._arguments* %167, %struct.asdl_seq* %168, %struct.asdl_seq* %169, %struct._expr* %170, i32 %171, i32 %172, %struct._arena* %173)
  %174 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call285, %struct._stmt** %174, align 8
  %175 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %176 = load %struct._stmt*, %struct._stmt** %175, align 8
  %cmp286 = icmp eq %struct._stmt* %176, null
  br i1 %cmp286, label %if.then.287, label %if.end.288

if.then.287:                                      ; preds = %if.end.284
  br label %failed

if.end.288:                                       ; preds = %if.end.284
  store i32 0, i32* %retval
  br label %return

if.end.289:                                       ; preds = %if.end.62
  %177 = load %struct._object*, %struct._object** %obj.addr, align 8
  %178 = load %struct._typeobject*, %struct._typeobject** @ClassDef_type, align 8
  %179 = bitcast %struct._typeobject* %178 to %struct._object*
  %call290 = call i32 @PyObject_IsInstance(%struct._object* %177, %struct._object* %179)
  store i32 %call290, i32* %isinstance, align 4
  %180 = load i32, i32* %isinstance, align 4
  %cmp291 = icmp eq i32 %180, -1
  br i1 %cmp291, label %if.then.292, label %if.end.293

if.then.292:                                      ; preds = %if.end.289
  store i32 1, i32* %retval
  br label %return

if.end.293:                                       ; preds = %if.end.289
  %181 = load i32, i32* %isinstance, align 4
  %tobool294 = icmp ne i32 %181, 0
  br i1 %tobool294, label %if.then.295, label %if.end.668

if.then.295:                                      ; preds = %if.end.293
  %182 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call306 = call i32 @_PyObject_HasAttrId(%struct._object* %182, %struct._Py_Identifier* @PyId_name)
  %tobool307 = icmp ne i32 %call306, 0
  br i1 %tobool307, label %if.then.308, label %if.else.338

if.then.308:                                      ; preds = %if.then.295
  %183 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call311 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %183, %struct._Py_Identifier* @PyId_name)
  store %struct._object* %call311, %struct._object** %tmp, align 8
  %184 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp312 = icmp eq %struct._object* %184, null
  br i1 %cmp312, label %if.then.313, label %if.end.314

if.then.313:                                      ; preds = %if.then.308
  br label %failed

if.end.314:                                       ; preds = %if.then.308
  %185 = load %struct._object*, %struct._object** %tmp, align 8
  %186 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call315 = call i32 @obj2ast_identifier(%struct._object* %185, %struct._object** %name297, %struct._arena* %186)
  store i32 %call315, i32* %res310, align 4
  %187 = load i32, i32* %res310, align 4
  %cmp316 = icmp ne i32 %187, 0
  br i1 %cmp316, label %if.then.317, label %if.end.318

if.then.317:                                      ; preds = %if.end.314
  br label %failed

if.end.318:                                       ; preds = %if.end.314
  br label %do.body.319

do.body.319:                                      ; preds = %if.end.318
  %188 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %188, %struct._object** %_py_tmp321, align 8
  %189 = load %struct._object*, %struct._object** %_py_tmp321, align 8
  %cmp322 = icmp ne %struct._object* %189, null
  br i1 %cmp322, label %if.then.323, label %if.end.336

if.then.323:                                      ; preds = %do.body.319
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.324

do.body.324:                                      ; preds = %if.then.323
  %190 = load %struct._object*, %struct._object** %_py_tmp321, align 8
  store %struct._object* %190, %struct._object** %_py_decref_tmp326, align 8
  %191 = load %struct._object*, %struct._object** %_py_decref_tmp326, align 8
  %ob_refcnt327 = getelementptr inbounds %struct._object, %struct._object* %191, i32 0, i32 0
  %192 = load i64, i64* %ob_refcnt327, align 8
  %dec328 = add i64 %192, -1
  store i64 %dec328, i64* %ob_refcnt327, align 8
  %cmp329 = icmp ne i64 %dec328, 0
  br i1 %cmp329, label %if.then.330, label %if.else.331

if.then.330:                                      ; preds = %do.body.324
  br label %if.end.334

if.else.331:                                      ; preds = %do.body.324
  %193 = load %struct._object*, %struct._object** %_py_decref_tmp326, align 8
  %ob_type332 = getelementptr inbounds %struct._object, %struct._object* %193, i32 0, i32 1
  %194 = load %struct._typeobject*, %struct._typeobject** %ob_type332, align 8
  %tp_dealloc333 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %194, i32 0, i32 4
  %195 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc333, align 8
  %196 = load %struct._object*, %struct._object** %_py_decref_tmp326, align 8
  call void %195(%struct._object* %196)
  br label %if.end.334

if.end.334:                                       ; preds = %if.else.331, %if.then.330
  br label %do.end.335

do.end.335:                                       ; preds = %if.end.334
  br label %if.end.336

if.end.336:                                       ; preds = %do.end.335, %do.body.319
  br label %do.end.337

do.end.337:                                       ; preds = %if.end.336
  br label %if.end.339

if.else.338:                                      ; preds = %if.then.295
  %197 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %197, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.258, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.339:                                       ; preds = %do.end.337
  %198 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call340 = call i32 @_PyObject_HasAttrId(%struct._object* %198, %struct._Py_Identifier* @PyId_bases)
  %tobool341 = icmp ne i32 %call340, 0
  br i1 %tobool341, label %if.then.342, label %if.else.402

if.then.342:                                      ; preds = %if.end.339
  %199 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call349 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %199, %struct._Py_Identifier* @PyId_bases)
  store %struct._object* %call349, %struct._object** %tmp, align 8
  %200 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp350 = icmp eq %struct._object* %200, null
  br i1 %cmp350, label %if.then.351, label %if.end.352

if.then.351:                                      ; preds = %if.then.342
  br label %failed

if.end.352:                                       ; preds = %if.then.342
  %201 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type353 = getelementptr inbounds %struct._object, %struct._object* %201, i32 0, i32 1
  %202 = load %struct._typeobject*, %struct._typeobject** %ob_type353, align 8
  %tp_flags354 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %202, i32 0, i32 19
  %203 = load i64, i64* %tp_flags354, align 8
  %and355 = and i64 %203, 33554432
  %cmp356 = icmp ne i64 %and355, 0
  br i1 %cmp356, label %if.end.361, label %if.then.357

if.then.357:                                      ; preds = %if.end.352
  %204 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %205 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type358 = getelementptr inbounds %struct._object, %struct._object* %205, i32 0, i32 1
  %206 = load %struct._typeobject*, %struct._typeobject** %ob_type358, align 8
  %tp_name359 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %206, i32 0, i32 1
  %207 = load i8*, i8** %tp_name359, align 8
  %call360 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %204, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.259, i32 0, i32 0), i8* %207)
  br label %failed

if.end.361:                                       ; preds = %if.end.352
  %208 = load %struct._object*, %struct._object** %tmp, align 8
  %209 = bitcast %struct._object* %208 to %struct.PyVarObject*
  %ob_size362 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %209, i32 0, i32 1
  %210 = load i64, i64* %ob_size362, align 8
  store i64 %210, i64* %len346, align 8
  %211 = load i64, i64* %len346, align 8
  %212 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call363 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %211, %struct._arena* %212)
  store %struct.asdl_seq* %call363, %struct.asdl_seq** %bases, align 8
  %213 = load %struct.asdl_seq*, %struct.asdl_seq** %bases, align 8
  %cmp364 = icmp eq %struct.asdl_seq* %213, null
  br i1 %cmp364, label %if.then.365, label %if.end.366

if.then.365:                                      ; preds = %if.end.361
  br label %failed

if.end.366:                                       ; preds = %if.end.361
  store i64 0, i64* %i348, align 8
  br label %for.cond.367

for.cond.367:                                     ; preds = %for.inc.380, %if.end.366
  %214 = load i64, i64* %i348, align 8
  %215 = load i64, i64* %len346, align 8
  %cmp368 = icmp slt i64 %214, %215
  br i1 %cmp368, label %for.body.369, label %for.end.382

for.body.369:                                     ; preds = %for.cond.367
  %216 = load i64, i64* %i348, align 8
  %217 = load %struct._object*, %struct._object** %tmp, align 8
  %218 = bitcast %struct._object* %217 to %struct.PyListObject*
  %ob_item372 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %218, i32 0, i32 1
  %219 = load %struct._object**, %struct._object*** %ob_item372, align 8
  %arrayidx373 = getelementptr %struct._object*, %struct._object** %219, i64 %216
  %220 = load %struct._object*, %struct._object** %arrayidx373, align 8
  %221 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call374 = call i32 @obj2ast_expr(%struct._object* %220, %struct._expr** %value371, %struct._arena* %221)
  store i32 %call374, i32* %res344, align 4
  %222 = load i32, i32* %res344, align 4
  %cmp375 = icmp ne i32 %222, 0
  br i1 %cmp375, label %if.then.376, label %if.end.377

if.then.376:                                      ; preds = %for.body.369
  br label %failed

if.end.377:                                       ; preds = %for.body.369
  %223 = load %struct._expr*, %struct._expr** %value371, align 8
  %224 = bitcast %struct._expr* %223 to i8*
  %225 = load i64, i64* %i348, align 8
  %226 = load %struct.asdl_seq*, %struct.asdl_seq** %bases, align 8
  %elements378 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %226, i32 0, i32 1
  %arrayidx379 = getelementptr [1 x i8*], [1 x i8*]* %elements378, i32 0, i64 %225
  store i8* %224, i8** %arrayidx379, align 8
  br label %for.inc.380

for.inc.380:                                      ; preds = %if.end.377
  %227 = load i64, i64* %i348, align 8
  %inc381 = add i64 %227, 1
  store i64 %inc381, i64* %i348, align 8
  br label %for.cond.367

for.end.382:                                      ; preds = %for.cond.367
  br label %do.body.383

do.body.383:                                      ; preds = %for.end.382
  %228 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %228, %struct._object** %_py_tmp385, align 8
  %229 = load %struct._object*, %struct._object** %_py_tmp385, align 8
  %cmp386 = icmp ne %struct._object* %229, null
  br i1 %cmp386, label %if.then.387, label %if.end.400

if.then.387:                                      ; preds = %do.body.383
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.388

do.body.388:                                      ; preds = %if.then.387
  %230 = load %struct._object*, %struct._object** %_py_tmp385, align 8
  store %struct._object* %230, %struct._object** %_py_decref_tmp390, align 8
  %231 = load %struct._object*, %struct._object** %_py_decref_tmp390, align 8
  %ob_refcnt391 = getelementptr inbounds %struct._object, %struct._object* %231, i32 0, i32 0
  %232 = load i64, i64* %ob_refcnt391, align 8
  %dec392 = add i64 %232, -1
  store i64 %dec392, i64* %ob_refcnt391, align 8
  %cmp393 = icmp ne i64 %dec392, 0
  br i1 %cmp393, label %if.then.394, label %if.else.395

if.then.394:                                      ; preds = %do.body.388
  br label %if.end.398

if.else.395:                                      ; preds = %do.body.388
  %233 = load %struct._object*, %struct._object** %_py_decref_tmp390, align 8
  %ob_type396 = getelementptr inbounds %struct._object, %struct._object* %233, i32 0, i32 1
  %234 = load %struct._typeobject*, %struct._typeobject** %ob_type396, align 8
  %tp_dealloc397 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %234, i32 0, i32 4
  %235 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc397, align 8
  %236 = load %struct._object*, %struct._object** %_py_decref_tmp390, align 8
  call void %235(%struct._object* %236)
  br label %if.end.398

if.end.398:                                       ; preds = %if.else.395, %if.then.394
  br label %do.end.399

do.end.399:                                       ; preds = %if.end.398
  br label %if.end.400

if.end.400:                                       ; preds = %do.end.399, %do.body.383
  br label %do.end.401

do.end.401:                                       ; preds = %if.end.400
  br label %if.end.403

if.else.402:                                      ; preds = %if.end.339
  %237 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %237, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.260, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.403:                                       ; preds = %do.end.401
  %238 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call404 = call i32 @_PyObject_HasAttrId(%struct._object* %238, %struct._Py_Identifier* @PyId_keywords)
  %tobool405 = icmp ne i32 %call404, 0
  br i1 %tobool405, label %if.then.406, label %if.else.466

if.then.406:                                      ; preds = %if.end.403
  %239 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call413 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %239, %struct._Py_Identifier* @PyId_keywords)
  store %struct._object* %call413, %struct._object** %tmp, align 8
  %240 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp414 = icmp eq %struct._object* %240, null
  br i1 %cmp414, label %if.then.415, label %if.end.416

if.then.415:                                      ; preds = %if.then.406
  br label %failed

if.end.416:                                       ; preds = %if.then.406
  %241 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type417 = getelementptr inbounds %struct._object, %struct._object* %241, i32 0, i32 1
  %242 = load %struct._typeobject*, %struct._typeobject** %ob_type417, align 8
  %tp_flags418 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %242, i32 0, i32 19
  %243 = load i64, i64* %tp_flags418, align 8
  %and419 = and i64 %243, 33554432
  %cmp420 = icmp ne i64 %and419, 0
  br i1 %cmp420, label %if.end.425, label %if.then.421

if.then.421:                                      ; preds = %if.end.416
  %244 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %245 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type422 = getelementptr inbounds %struct._object, %struct._object* %245, i32 0, i32 1
  %246 = load %struct._typeobject*, %struct._typeobject** %ob_type422, align 8
  %tp_name423 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %246, i32 0, i32 1
  %247 = load i8*, i8** %tp_name423, align 8
  %call424 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %244, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.261, i32 0, i32 0), i8* %247)
  br label %failed

if.end.425:                                       ; preds = %if.end.416
  %248 = load %struct._object*, %struct._object** %tmp, align 8
  %249 = bitcast %struct._object* %248 to %struct.PyVarObject*
  %ob_size426 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %249, i32 0, i32 1
  %250 = load i64, i64* %ob_size426, align 8
  store i64 %250, i64* %len410, align 8
  %251 = load i64, i64* %len410, align 8
  %252 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call427 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %251, %struct._arena* %252)
  store %struct.asdl_seq* %call427, %struct.asdl_seq** %keywords, align 8
  %253 = load %struct.asdl_seq*, %struct.asdl_seq** %keywords, align 8
  %cmp428 = icmp eq %struct.asdl_seq* %253, null
  br i1 %cmp428, label %if.then.429, label %if.end.430

if.then.429:                                      ; preds = %if.end.425
  br label %failed

if.end.430:                                       ; preds = %if.end.425
  store i64 0, i64* %i412, align 8
  br label %for.cond.431

for.cond.431:                                     ; preds = %for.inc.444, %if.end.430
  %254 = load i64, i64* %i412, align 8
  %255 = load i64, i64* %len410, align 8
  %cmp432 = icmp slt i64 %254, %255
  br i1 %cmp432, label %for.body.433, label %for.end.446

for.body.433:                                     ; preds = %for.cond.431
  %256 = load i64, i64* %i412, align 8
  %257 = load %struct._object*, %struct._object** %tmp, align 8
  %258 = bitcast %struct._object* %257 to %struct.PyListObject*
  %ob_item436 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %258, i32 0, i32 1
  %259 = load %struct._object**, %struct._object*** %ob_item436, align 8
  %arrayidx437 = getelementptr %struct._object*, %struct._object** %259, i64 %256
  %260 = load %struct._object*, %struct._object** %arrayidx437, align 8
  %261 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call438 = call i32 @obj2ast_keyword(%struct._object* %260, %struct._keyword** %value435, %struct._arena* %261)
  store i32 %call438, i32* %res408, align 4
  %262 = load i32, i32* %res408, align 4
  %cmp439 = icmp ne i32 %262, 0
  br i1 %cmp439, label %if.then.440, label %if.end.441

if.then.440:                                      ; preds = %for.body.433
  br label %failed

if.end.441:                                       ; preds = %for.body.433
  %263 = load %struct._keyword*, %struct._keyword** %value435, align 8
  %264 = bitcast %struct._keyword* %263 to i8*
  %265 = load i64, i64* %i412, align 8
  %266 = load %struct.asdl_seq*, %struct.asdl_seq** %keywords, align 8
  %elements442 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %266, i32 0, i32 1
  %arrayidx443 = getelementptr [1 x i8*], [1 x i8*]* %elements442, i32 0, i64 %265
  store i8* %264, i8** %arrayidx443, align 8
  br label %for.inc.444

for.inc.444:                                      ; preds = %if.end.441
  %267 = load i64, i64* %i412, align 8
  %inc445 = add i64 %267, 1
  store i64 %inc445, i64* %i412, align 8
  br label %for.cond.431

for.end.446:                                      ; preds = %for.cond.431
  br label %do.body.447

do.body.447:                                      ; preds = %for.end.446
  %268 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %268, %struct._object** %_py_tmp449, align 8
  %269 = load %struct._object*, %struct._object** %_py_tmp449, align 8
  %cmp450 = icmp ne %struct._object* %269, null
  br i1 %cmp450, label %if.then.451, label %if.end.464

if.then.451:                                      ; preds = %do.body.447
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.452

do.body.452:                                      ; preds = %if.then.451
  %270 = load %struct._object*, %struct._object** %_py_tmp449, align 8
  store %struct._object* %270, %struct._object** %_py_decref_tmp454, align 8
  %271 = load %struct._object*, %struct._object** %_py_decref_tmp454, align 8
  %ob_refcnt455 = getelementptr inbounds %struct._object, %struct._object* %271, i32 0, i32 0
  %272 = load i64, i64* %ob_refcnt455, align 8
  %dec456 = add i64 %272, -1
  store i64 %dec456, i64* %ob_refcnt455, align 8
  %cmp457 = icmp ne i64 %dec456, 0
  br i1 %cmp457, label %if.then.458, label %if.else.459

if.then.458:                                      ; preds = %do.body.452
  br label %if.end.462

if.else.459:                                      ; preds = %do.body.452
  %273 = load %struct._object*, %struct._object** %_py_decref_tmp454, align 8
  %ob_type460 = getelementptr inbounds %struct._object, %struct._object* %273, i32 0, i32 1
  %274 = load %struct._typeobject*, %struct._typeobject** %ob_type460, align 8
  %tp_dealloc461 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %274, i32 0, i32 4
  %275 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc461, align 8
  %276 = load %struct._object*, %struct._object** %_py_decref_tmp454, align 8
  call void %275(%struct._object* %276)
  br label %if.end.462

if.end.462:                                       ; preds = %if.else.459, %if.then.458
  br label %do.end.463

do.end.463:                                       ; preds = %if.end.462
  br label %if.end.464

if.end.464:                                       ; preds = %do.end.463, %do.body.447
  br label %do.end.465

do.end.465:                                       ; preds = %if.end.464
  br label %if.end.467

if.else.466:                                      ; preds = %if.end.403
  %277 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %277, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.262, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.467:                                       ; preds = %do.end.465
  %278 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call468 = call i32 @exists_not_none(%struct._object* %278, %struct._Py_Identifier* @PyId_starargs)
  %tobool469 = icmp ne i32 %call468, 0
  br i1 %tobool469, label %if.then.470, label %if.else.500

if.then.470:                                      ; preds = %if.end.467
  %279 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call473 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %279, %struct._Py_Identifier* @PyId_starargs)
  store %struct._object* %call473, %struct._object** %tmp, align 8
  %280 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp474 = icmp eq %struct._object* %280, null
  br i1 %cmp474, label %if.then.475, label %if.end.476

if.then.475:                                      ; preds = %if.then.470
  br label %failed

if.end.476:                                       ; preds = %if.then.470
  %281 = load %struct._object*, %struct._object** %tmp, align 8
  %282 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call477 = call i32 @obj2ast_expr(%struct._object* %281, %struct._expr** %starargs, %struct._arena* %282)
  store i32 %call477, i32* %res472, align 4
  %283 = load i32, i32* %res472, align 4
  %cmp478 = icmp ne i32 %283, 0
  br i1 %cmp478, label %if.then.479, label %if.end.480

if.then.479:                                      ; preds = %if.end.476
  br label %failed

if.end.480:                                       ; preds = %if.end.476
  br label %do.body.481

do.body.481:                                      ; preds = %if.end.480
  %284 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %284, %struct._object** %_py_tmp483, align 8
  %285 = load %struct._object*, %struct._object** %_py_tmp483, align 8
  %cmp484 = icmp ne %struct._object* %285, null
  br i1 %cmp484, label %if.then.485, label %if.end.498

if.then.485:                                      ; preds = %do.body.481
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.486

do.body.486:                                      ; preds = %if.then.485
  %286 = load %struct._object*, %struct._object** %_py_tmp483, align 8
  store %struct._object* %286, %struct._object** %_py_decref_tmp488, align 8
  %287 = load %struct._object*, %struct._object** %_py_decref_tmp488, align 8
  %ob_refcnt489 = getelementptr inbounds %struct._object, %struct._object* %287, i32 0, i32 0
  %288 = load i64, i64* %ob_refcnt489, align 8
  %dec490 = add i64 %288, -1
  store i64 %dec490, i64* %ob_refcnt489, align 8
  %cmp491 = icmp ne i64 %dec490, 0
  br i1 %cmp491, label %if.then.492, label %if.else.493

if.then.492:                                      ; preds = %do.body.486
  br label %if.end.496

if.else.493:                                      ; preds = %do.body.486
  %289 = load %struct._object*, %struct._object** %_py_decref_tmp488, align 8
  %ob_type494 = getelementptr inbounds %struct._object, %struct._object* %289, i32 0, i32 1
  %290 = load %struct._typeobject*, %struct._typeobject** %ob_type494, align 8
  %tp_dealloc495 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %290, i32 0, i32 4
  %291 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc495, align 8
  %292 = load %struct._object*, %struct._object** %_py_decref_tmp488, align 8
  call void %291(%struct._object* %292)
  br label %if.end.496

if.end.496:                                       ; preds = %if.else.493, %if.then.492
  br label %do.end.497

do.end.497:                                       ; preds = %if.end.496
  br label %if.end.498

if.end.498:                                       ; preds = %do.end.497, %do.body.481
  br label %do.end.499

do.end.499:                                       ; preds = %if.end.498
  br label %if.end.501

if.else.500:                                      ; preds = %if.end.467
  store %struct._expr* null, %struct._expr** %starargs, align 8
  br label %if.end.501

if.end.501:                                       ; preds = %if.else.500, %do.end.499
  %293 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call502 = call i32 @exists_not_none(%struct._object* %293, %struct._Py_Identifier* @PyId_kwargs)
  %tobool503 = icmp ne i32 %call502, 0
  br i1 %tobool503, label %if.then.504, label %if.else.534

if.then.504:                                      ; preds = %if.end.501
  %294 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call507 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %294, %struct._Py_Identifier* @PyId_kwargs)
  store %struct._object* %call507, %struct._object** %tmp, align 8
  %295 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp508 = icmp eq %struct._object* %295, null
  br i1 %cmp508, label %if.then.509, label %if.end.510

if.then.509:                                      ; preds = %if.then.504
  br label %failed

if.end.510:                                       ; preds = %if.then.504
  %296 = load %struct._object*, %struct._object** %tmp, align 8
  %297 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call511 = call i32 @obj2ast_expr(%struct._object* %296, %struct._expr** %kwargs, %struct._arena* %297)
  store i32 %call511, i32* %res506, align 4
  %298 = load i32, i32* %res506, align 4
  %cmp512 = icmp ne i32 %298, 0
  br i1 %cmp512, label %if.then.513, label %if.end.514

if.then.513:                                      ; preds = %if.end.510
  br label %failed

if.end.514:                                       ; preds = %if.end.510
  br label %do.body.515

do.body.515:                                      ; preds = %if.end.514
  %299 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %299, %struct._object** %_py_tmp517, align 8
  %300 = load %struct._object*, %struct._object** %_py_tmp517, align 8
  %cmp518 = icmp ne %struct._object* %300, null
  br i1 %cmp518, label %if.then.519, label %if.end.532

if.then.519:                                      ; preds = %do.body.515
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.520

do.body.520:                                      ; preds = %if.then.519
  %301 = load %struct._object*, %struct._object** %_py_tmp517, align 8
  store %struct._object* %301, %struct._object** %_py_decref_tmp522, align 8
  %302 = load %struct._object*, %struct._object** %_py_decref_tmp522, align 8
  %ob_refcnt523 = getelementptr inbounds %struct._object, %struct._object* %302, i32 0, i32 0
  %303 = load i64, i64* %ob_refcnt523, align 8
  %dec524 = add i64 %303, -1
  store i64 %dec524, i64* %ob_refcnt523, align 8
  %cmp525 = icmp ne i64 %dec524, 0
  br i1 %cmp525, label %if.then.526, label %if.else.527

if.then.526:                                      ; preds = %do.body.520
  br label %if.end.530

if.else.527:                                      ; preds = %do.body.520
  %304 = load %struct._object*, %struct._object** %_py_decref_tmp522, align 8
  %ob_type528 = getelementptr inbounds %struct._object, %struct._object* %304, i32 0, i32 1
  %305 = load %struct._typeobject*, %struct._typeobject** %ob_type528, align 8
  %tp_dealloc529 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %305, i32 0, i32 4
  %306 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc529, align 8
  %307 = load %struct._object*, %struct._object** %_py_decref_tmp522, align 8
  call void %306(%struct._object* %307)
  br label %if.end.530

if.end.530:                                       ; preds = %if.else.527, %if.then.526
  br label %do.end.531

do.end.531:                                       ; preds = %if.end.530
  br label %if.end.532

if.end.532:                                       ; preds = %do.end.531, %do.body.515
  br label %do.end.533

do.end.533:                                       ; preds = %if.end.532
  br label %if.end.535

if.else.534:                                      ; preds = %if.end.501
  store %struct._expr* null, %struct._expr** %kwargs, align 8
  br label %if.end.535

if.end.535:                                       ; preds = %if.else.534, %do.end.533
  %308 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call536 = call i32 @_PyObject_HasAttrId(%struct._object* %308, %struct._Py_Identifier* @PyId_body)
  %tobool537 = icmp ne i32 %call536, 0
  br i1 %tobool537, label %if.then.538, label %if.else.598

if.then.538:                                      ; preds = %if.end.535
  %309 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call545 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %309, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call545, %struct._object** %tmp, align 8
  %310 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp546 = icmp eq %struct._object* %310, null
  br i1 %cmp546, label %if.then.547, label %if.end.548

if.then.547:                                      ; preds = %if.then.538
  br label %failed

if.end.548:                                       ; preds = %if.then.538
  %311 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type549 = getelementptr inbounds %struct._object, %struct._object* %311, i32 0, i32 1
  %312 = load %struct._typeobject*, %struct._typeobject** %ob_type549, align 8
  %tp_flags550 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %312, i32 0, i32 19
  %313 = load i64, i64* %tp_flags550, align 8
  %and551 = and i64 %313, 33554432
  %cmp552 = icmp ne i64 %and551, 0
  br i1 %cmp552, label %if.end.557, label %if.then.553

if.then.553:                                      ; preds = %if.end.548
  %314 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %315 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type554 = getelementptr inbounds %struct._object, %struct._object* %315, i32 0, i32 1
  %316 = load %struct._typeobject*, %struct._typeobject** %ob_type554, align 8
  %tp_name555 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %316, i32 0, i32 1
  %317 = load i8*, i8** %tp_name555, align 8
  %call556 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %314, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.263, i32 0, i32 0), i8* %317)
  br label %failed

if.end.557:                                       ; preds = %if.end.548
  %318 = load %struct._object*, %struct._object** %tmp, align 8
  %319 = bitcast %struct._object* %318 to %struct.PyVarObject*
  %ob_size558 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %319, i32 0, i32 1
  %320 = load i64, i64* %ob_size558, align 8
  store i64 %320, i64* %len542, align 8
  %321 = load i64, i64* %len542, align 8
  %322 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call559 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %321, %struct._arena* %322)
  store %struct.asdl_seq* %call559, %struct.asdl_seq** %body303, align 8
  %323 = load %struct.asdl_seq*, %struct.asdl_seq** %body303, align 8
  %cmp560 = icmp eq %struct.asdl_seq* %323, null
  br i1 %cmp560, label %if.then.561, label %if.end.562

if.then.561:                                      ; preds = %if.end.557
  br label %failed

if.end.562:                                       ; preds = %if.end.557
  store i64 0, i64* %i544, align 8
  br label %for.cond.563

for.cond.563:                                     ; preds = %for.inc.576, %if.end.562
  %324 = load i64, i64* %i544, align 8
  %325 = load i64, i64* %len542, align 8
  %cmp564 = icmp slt i64 %324, %325
  br i1 %cmp564, label %for.body.565, label %for.end.578

for.body.565:                                     ; preds = %for.cond.563
  %326 = load i64, i64* %i544, align 8
  %327 = load %struct._object*, %struct._object** %tmp, align 8
  %328 = bitcast %struct._object* %327 to %struct.PyListObject*
  %ob_item568 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %328, i32 0, i32 1
  %329 = load %struct._object**, %struct._object*** %ob_item568, align 8
  %arrayidx569 = getelementptr %struct._object*, %struct._object** %329, i64 %326
  %330 = load %struct._object*, %struct._object** %arrayidx569, align 8
  %331 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call570 = call i32 @obj2ast_stmt(%struct._object* %330, %struct._stmt** %value567, %struct._arena* %331)
  store i32 %call570, i32* %res540, align 4
  %332 = load i32, i32* %res540, align 4
  %cmp571 = icmp ne i32 %332, 0
  br i1 %cmp571, label %if.then.572, label %if.end.573

if.then.572:                                      ; preds = %for.body.565
  br label %failed

if.end.573:                                       ; preds = %for.body.565
  %333 = load %struct._stmt*, %struct._stmt** %value567, align 8
  %334 = bitcast %struct._stmt* %333 to i8*
  %335 = load i64, i64* %i544, align 8
  %336 = load %struct.asdl_seq*, %struct.asdl_seq** %body303, align 8
  %elements574 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %336, i32 0, i32 1
  %arrayidx575 = getelementptr [1 x i8*], [1 x i8*]* %elements574, i32 0, i64 %335
  store i8* %334, i8** %arrayidx575, align 8
  br label %for.inc.576

for.inc.576:                                      ; preds = %if.end.573
  %337 = load i64, i64* %i544, align 8
  %inc577 = add i64 %337, 1
  store i64 %inc577, i64* %i544, align 8
  br label %for.cond.563

for.end.578:                                      ; preds = %for.cond.563
  br label %do.body.579

do.body.579:                                      ; preds = %for.end.578
  %338 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %338, %struct._object** %_py_tmp581, align 8
  %339 = load %struct._object*, %struct._object** %_py_tmp581, align 8
  %cmp582 = icmp ne %struct._object* %339, null
  br i1 %cmp582, label %if.then.583, label %if.end.596

if.then.583:                                      ; preds = %do.body.579
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.584

do.body.584:                                      ; preds = %if.then.583
  %340 = load %struct._object*, %struct._object** %_py_tmp581, align 8
  store %struct._object* %340, %struct._object** %_py_decref_tmp586, align 8
  %341 = load %struct._object*, %struct._object** %_py_decref_tmp586, align 8
  %ob_refcnt587 = getelementptr inbounds %struct._object, %struct._object* %341, i32 0, i32 0
  %342 = load i64, i64* %ob_refcnt587, align 8
  %dec588 = add i64 %342, -1
  store i64 %dec588, i64* %ob_refcnt587, align 8
  %cmp589 = icmp ne i64 %dec588, 0
  br i1 %cmp589, label %if.then.590, label %if.else.591

if.then.590:                                      ; preds = %do.body.584
  br label %if.end.594

if.else.591:                                      ; preds = %do.body.584
  %343 = load %struct._object*, %struct._object** %_py_decref_tmp586, align 8
  %ob_type592 = getelementptr inbounds %struct._object, %struct._object* %343, i32 0, i32 1
  %344 = load %struct._typeobject*, %struct._typeobject** %ob_type592, align 8
  %tp_dealloc593 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %344, i32 0, i32 4
  %345 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc593, align 8
  %346 = load %struct._object*, %struct._object** %_py_decref_tmp586, align 8
  call void %345(%struct._object* %346)
  br label %if.end.594

if.end.594:                                       ; preds = %if.else.591, %if.then.590
  br label %do.end.595

do.end.595:                                       ; preds = %if.end.594
  br label %if.end.596

if.end.596:                                       ; preds = %do.end.595, %do.body.579
  br label %do.end.597

do.end.597:                                       ; preds = %if.end.596
  br label %if.end.599

if.else.598:                                      ; preds = %if.end.535
  %347 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %347, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.264, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.599:                                       ; preds = %do.end.597
  %348 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call600 = call i32 @_PyObject_HasAttrId(%struct._object* %348, %struct._Py_Identifier* @PyId_decorator_list)
  %tobool601 = icmp ne i32 %call600, 0
  br i1 %tobool601, label %if.then.602, label %if.else.662

if.then.602:                                      ; preds = %if.end.599
  %349 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call609 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %349, %struct._Py_Identifier* @PyId_decorator_list)
  store %struct._object* %call609, %struct._object** %tmp, align 8
  %350 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp610 = icmp eq %struct._object* %350, null
  br i1 %cmp610, label %if.then.611, label %if.end.612

if.then.611:                                      ; preds = %if.then.602
  br label %failed

if.end.612:                                       ; preds = %if.then.602
  %351 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type613 = getelementptr inbounds %struct._object, %struct._object* %351, i32 0, i32 1
  %352 = load %struct._typeobject*, %struct._typeobject** %ob_type613, align 8
  %tp_flags614 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %352, i32 0, i32 19
  %353 = load i64, i64* %tp_flags614, align 8
  %and615 = and i64 %353, 33554432
  %cmp616 = icmp ne i64 %and615, 0
  br i1 %cmp616, label %if.end.621, label %if.then.617

if.then.617:                                      ; preds = %if.end.612
  %354 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %355 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type618 = getelementptr inbounds %struct._object, %struct._object* %355, i32 0, i32 1
  %356 = load %struct._typeobject*, %struct._typeobject** %ob_type618, align 8
  %tp_name619 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %356, i32 0, i32 1
  %357 = load i8*, i8** %tp_name619, align 8
  %call620 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %354, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.265, i32 0, i32 0), i8* %357)
  br label %failed

if.end.621:                                       ; preds = %if.end.612
  %358 = load %struct._object*, %struct._object** %tmp, align 8
  %359 = bitcast %struct._object* %358 to %struct.PyVarObject*
  %ob_size622 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %359, i32 0, i32 1
  %360 = load i64, i64* %ob_size622, align 8
  store i64 %360, i64* %len606, align 8
  %361 = load i64, i64* %len606, align 8
  %362 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call623 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %361, %struct._arena* %362)
  store %struct.asdl_seq* %call623, %struct.asdl_seq** %decorator_list305, align 8
  %363 = load %struct.asdl_seq*, %struct.asdl_seq** %decorator_list305, align 8
  %cmp624 = icmp eq %struct.asdl_seq* %363, null
  br i1 %cmp624, label %if.then.625, label %if.end.626

if.then.625:                                      ; preds = %if.end.621
  br label %failed

if.end.626:                                       ; preds = %if.end.621
  store i64 0, i64* %i608, align 8
  br label %for.cond.627

for.cond.627:                                     ; preds = %for.inc.640, %if.end.626
  %364 = load i64, i64* %i608, align 8
  %365 = load i64, i64* %len606, align 8
  %cmp628 = icmp slt i64 %364, %365
  br i1 %cmp628, label %for.body.629, label %for.end.642

for.body.629:                                     ; preds = %for.cond.627
  %366 = load i64, i64* %i608, align 8
  %367 = load %struct._object*, %struct._object** %tmp, align 8
  %368 = bitcast %struct._object* %367 to %struct.PyListObject*
  %ob_item632 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %368, i32 0, i32 1
  %369 = load %struct._object**, %struct._object*** %ob_item632, align 8
  %arrayidx633 = getelementptr %struct._object*, %struct._object** %369, i64 %366
  %370 = load %struct._object*, %struct._object** %arrayidx633, align 8
  %371 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call634 = call i32 @obj2ast_expr(%struct._object* %370, %struct._expr** %value631, %struct._arena* %371)
  store i32 %call634, i32* %res604, align 4
  %372 = load i32, i32* %res604, align 4
  %cmp635 = icmp ne i32 %372, 0
  br i1 %cmp635, label %if.then.636, label %if.end.637

if.then.636:                                      ; preds = %for.body.629
  br label %failed

if.end.637:                                       ; preds = %for.body.629
  %373 = load %struct._expr*, %struct._expr** %value631, align 8
  %374 = bitcast %struct._expr* %373 to i8*
  %375 = load i64, i64* %i608, align 8
  %376 = load %struct.asdl_seq*, %struct.asdl_seq** %decorator_list305, align 8
  %elements638 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %376, i32 0, i32 1
  %arrayidx639 = getelementptr [1 x i8*], [1 x i8*]* %elements638, i32 0, i64 %375
  store i8* %374, i8** %arrayidx639, align 8
  br label %for.inc.640

for.inc.640:                                      ; preds = %if.end.637
  %377 = load i64, i64* %i608, align 8
  %inc641 = add i64 %377, 1
  store i64 %inc641, i64* %i608, align 8
  br label %for.cond.627

for.end.642:                                      ; preds = %for.cond.627
  br label %do.body.643

do.body.643:                                      ; preds = %for.end.642
  %378 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %378, %struct._object** %_py_tmp645, align 8
  %379 = load %struct._object*, %struct._object** %_py_tmp645, align 8
  %cmp646 = icmp ne %struct._object* %379, null
  br i1 %cmp646, label %if.then.647, label %if.end.660

if.then.647:                                      ; preds = %do.body.643
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.648

do.body.648:                                      ; preds = %if.then.647
  %380 = load %struct._object*, %struct._object** %_py_tmp645, align 8
  store %struct._object* %380, %struct._object** %_py_decref_tmp650, align 8
  %381 = load %struct._object*, %struct._object** %_py_decref_tmp650, align 8
  %ob_refcnt651 = getelementptr inbounds %struct._object, %struct._object* %381, i32 0, i32 0
  %382 = load i64, i64* %ob_refcnt651, align 8
  %dec652 = add i64 %382, -1
  store i64 %dec652, i64* %ob_refcnt651, align 8
  %cmp653 = icmp ne i64 %dec652, 0
  br i1 %cmp653, label %if.then.654, label %if.else.655

if.then.654:                                      ; preds = %do.body.648
  br label %if.end.658

if.else.655:                                      ; preds = %do.body.648
  %383 = load %struct._object*, %struct._object** %_py_decref_tmp650, align 8
  %ob_type656 = getelementptr inbounds %struct._object, %struct._object* %383, i32 0, i32 1
  %384 = load %struct._typeobject*, %struct._typeobject** %ob_type656, align 8
  %tp_dealloc657 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %384, i32 0, i32 4
  %385 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc657, align 8
  %386 = load %struct._object*, %struct._object** %_py_decref_tmp650, align 8
  call void %385(%struct._object* %386)
  br label %if.end.658

if.end.658:                                       ; preds = %if.else.655, %if.then.654
  br label %do.end.659

do.end.659:                                       ; preds = %if.end.658
  br label %if.end.660

if.end.660:                                       ; preds = %do.end.659, %do.body.643
  br label %do.end.661

do.end.661:                                       ; preds = %if.end.660
  br label %if.end.663

if.else.662:                                      ; preds = %if.end.599
  %387 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %387, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.266, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.663:                                       ; preds = %do.end.661
  %388 = load %struct._object*, %struct._object** %name297, align 8
  %389 = load %struct.asdl_seq*, %struct.asdl_seq** %bases, align 8
  %390 = load %struct.asdl_seq*, %struct.asdl_seq** %keywords, align 8
  %391 = load %struct._expr*, %struct._expr** %starargs, align 8
  %392 = load %struct._expr*, %struct._expr** %kwargs, align 8
  %393 = load %struct.asdl_seq*, %struct.asdl_seq** %body303, align 8
  %394 = load %struct.asdl_seq*, %struct.asdl_seq** %decorator_list305, align 8
  %395 = load i32, i32* %lineno, align 4
  %396 = load i32, i32* %col_offset, align 4
  %397 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call664 = call %struct._stmt* @_Py_ClassDef(%struct._object* %388, %struct.asdl_seq* %389, %struct.asdl_seq* %390, %struct._expr* %391, %struct._expr* %392, %struct.asdl_seq* %393, %struct.asdl_seq* %394, i32 %395, i32 %396, %struct._arena* %397)
  %398 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call664, %struct._stmt** %398, align 8
  %399 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %400 = load %struct._stmt*, %struct._stmt** %399, align 8
  %cmp665 = icmp eq %struct._stmt* %400, null
  br i1 %cmp665, label %if.then.666, label %if.end.667

if.then.666:                                      ; preds = %if.end.663
  br label %failed

if.end.667:                                       ; preds = %if.end.663
  store i32 0, i32* %retval
  br label %return

if.end.668:                                       ; preds = %if.end.293
  %401 = load %struct._object*, %struct._object** %obj.addr, align 8
  %402 = load %struct._typeobject*, %struct._typeobject** @Return_type, align 8
  %403 = bitcast %struct._typeobject* %402 to %struct._object*
  %call669 = call i32 @PyObject_IsInstance(%struct._object* %401, %struct._object* %403)
  store i32 %call669, i32* %isinstance, align 4
  %404 = load i32, i32* %isinstance, align 4
  %cmp670 = icmp eq i32 %404, -1
  br i1 %cmp670, label %if.then.671, label %if.end.672

if.then.671:                                      ; preds = %if.end.668
  store i32 1, i32* %retval
  br label %return

if.end.672:                                       ; preds = %if.end.668
  %405 = load i32, i32* %isinstance, align 4
  %tobool673 = icmp ne i32 %405, 0
  br i1 %tobool673, label %if.then.674, label %if.end.715

if.then.674:                                      ; preds = %if.end.672
  %406 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call677 = call i32 @exists_not_none(%struct._object* %406, %struct._Py_Identifier* @PyId_value)
  %tobool678 = icmp ne i32 %call677, 0
  br i1 %tobool678, label %if.then.679, label %if.else.709

if.then.679:                                      ; preds = %if.then.674
  %407 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call682 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %407, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call682, %struct._object** %tmp, align 8
  %408 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp683 = icmp eq %struct._object* %408, null
  br i1 %cmp683, label %if.then.684, label %if.end.685

if.then.684:                                      ; preds = %if.then.679
  br label %failed

if.end.685:                                       ; preds = %if.then.679
  %409 = load %struct._object*, %struct._object** %tmp, align 8
  %410 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call686 = call i32 @obj2ast_expr(%struct._object* %409, %struct._expr** %value676, %struct._arena* %410)
  store i32 %call686, i32* %res681, align 4
  %411 = load i32, i32* %res681, align 4
  %cmp687 = icmp ne i32 %411, 0
  br i1 %cmp687, label %if.then.688, label %if.end.689

if.then.688:                                      ; preds = %if.end.685
  br label %failed

if.end.689:                                       ; preds = %if.end.685
  br label %do.body.690

do.body.690:                                      ; preds = %if.end.689
  %412 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %412, %struct._object** %_py_tmp692, align 8
  %413 = load %struct._object*, %struct._object** %_py_tmp692, align 8
  %cmp693 = icmp ne %struct._object* %413, null
  br i1 %cmp693, label %if.then.694, label %if.end.707

if.then.694:                                      ; preds = %do.body.690
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.695

do.body.695:                                      ; preds = %if.then.694
  %414 = load %struct._object*, %struct._object** %_py_tmp692, align 8
  store %struct._object* %414, %struct._object** %_py_decref_tmp697, align 8
  %415 = load %struct._object*, %struct._object** %_py_decref_tmp697, align 8
  %ob_refcnt698 = getelementptr inbounds %struct._object, %struct._object* %415, i32 0, i32 0
  %416 = load i64, i64* %ob_refcnt698, align 8
  %dec699 = add i64 %416, -1
  store i64 %dec699, i64* %ob_refcnt698, align 8
  %cmp700 = icmp ne i64 %dec699, 0
  br i1 %cmp700, label %if.then.701, label %if.else.702

if.then.701:                                      ; preds = %do.body.695
  br label %if.end.705

if.else.702:                                      ; preds = %do.body.695
  %417 = load %struct._object*, %struct._object** %_py_decref_tmp697, align 8
  %ob_type703 = getelementptr inbounds %struct._object, %struct._object* %417, i32 0, i32 1
  %418 = load %struct._typeobject*, %struct._typeobject** %ob_type703, align 8
  %tp_dealloc704 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %418, i32 0, i32 4
  %419 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc704, align 8
  %420 = load %struct._object*, %struct._object** %_py_decref_tmp697, align 8
  call void %419(%struct._object* %420)
  br label %if.end.705

if.end.705:                                       ; preds = %if.else.702, %if.then.701
  br label %do.end.706

do.end.706:                                       ; preds = %if.end.705
  br label %if.end.707

if.end.707:                                       ; preds = %do.end.706, %do.body.690
  br label %do.end.708

do.end.708:                                       ; preds = %if.end.707
  br label %if.end.710

if.else.709:                                      ; preds = %if.then.674
  store %struct._expr* null, %struct._expr** %value676, align 8
  br label %if.end.710

if.end.710:                                       ; preds = %if.else.709, %do.end.708
  %421 = load %struct._expr*, %struct._expr** %value676, align 8
  %422 = load i32, i32* %lineno, align 4
  %423 = load i32, i32* %col_offset, align 4
  %424 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call711 = call %struct._stmt* @_Py_Return(%struct._expr* %421, i32 %422, i32 %423, %struct._arena* %424)
  %425 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call711, %struct._stmt** %425, align 8
  %426 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %427 = load %struct._stmt*, %struct._stmt** %426, align 8
  %cmp712 = icmp eq %struct._stmt* %427, null
  br i1 %cmp712, label %if.then.713, label %if.end.714

if.then.713:                                      ; preds = %if.end.710
  br label %failed

if.end.714:                                       ; preds = %if.end.710
  store i32 0, i32* %retval
  br label %return

if.end.715:                                       ; preds = %if.end.672
  %428 = load %struct._object*, %struct._object** %obj.addr, align 8
  %429 = load %struct._typeobject*, %struct._typeobject** @Delete_type, align 8
  %430 = bitcast %struct._typeobject* %429 to %struct._object*
  %call716 = call i32 @PyObject_IsInstance(%struct._object* %428, %struct._object* %430)
  store i32 %call716, i32* %isinstance, align 4
  %431 = load i32, i32* %isinstance, align 4
  %cmp717 = icmp eq i32 %431, -1
  br i1 %cmp717, label %if.then.718, label %if.end.719

if.then.718:                                      ; preds = %if.end.715
  store i32 1, i32* %retval
  br label %return

if.end.719:                                       ; preds = %if.end.715
  %432 = load i32, i32* %isinstance, align 4
  %tobool720 = icmp ne i32 %432, 0
  br i1 %tobool720, label %if.then.721, label %if.end.791

if.then.721:                                      ; preds = %if.end.719
  %433 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call723 = call i32 @_PyObject_HasAttrId(%struct._object* %433, %struct._Py_Identifier* @PyId_targets)
  %tobool724 = icmp ne i32 %call723, 0
  br i1 %tobool724, label %if.then.725, label %if.else.785

if.then.725:                                      ; preds = %if.then.721
  %434 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call732 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %434, %struct._Py_Identifier* @PyId_targets)
  store %struct._object* %call732, %struct._object** %tmp, align 8
  %435 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp733 = icmp eq %struct._object* %435, null
  br i1 %cmp733, label %if.then.734, label %if.end.735

if.then.734:                                      ; preds = %if.then.725
  br label %failed

if.end.735:                                       ; preds = %if.then.725
  %436 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type736 = getelementptr inbounds %struct._object, %struct._object* %436, i32 0, i32 1
  %437 = load %struct._typeobject*, %struct._typeobject** %ob_type736, align 8
  %tp_flags737 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %437, i32 0, i32 19
  %438 = load i64, i64* %tp_flags737, align 8
  %and738 = and i64 %438, 33554432
  %cmp739 = icmp ne i64 %and738, 0
  br i1 %cmp739, label %if.end.744, label %if.then.740

if.then.740:                                      ; preds = %if.end.735
  %439 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %440 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type741 = getelementptr inbounds %struct._object, %struct._object* %440, i32 0, i32 1
  %441 = load %struct._typeobject*, %struct._typeobject** %ob_type741, align 8
  %tp_name742 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %441, i32 0, i32 1
  %442 = load i8*, i8** %tp_name742, align 8
  %call743 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %439, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.267, i32 0, i32 0), i8* %442)
  br label %failed

if.end.744:                                       ; preds = %if.end.735
  %443 = load %struct._object*, %struct._object** %tmp, align 8
  %444 = bitcast %struct._object* %443 to %struct.PyVarObject*
  %ob_size745 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %444, i32 0, i32 1
  %445 = load i64, i64* %ob_size745, align 8
  store i64 %445, i64* %len729, align 8
  %446 = load i64, i64* %len729, align 8
  %447 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call746 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %446, %struct._arena* %447)
  store %struct.asdl_seq* %call746, %struct.asdl_seq** %targets, align 8
  %448 = load %struct.asdl_seq*, %struct.asdl_seq** %targets, align 8
  %cmp747 = icmp eq %struct.asdl_seq* %448, null
  br i1 %cmp747, label %if.then.748, label %if.end.749

if.then.748:                                      ; preds = %if.end.744
  br label %failed

if.end.749:                                       ; preds = %if.end.744
  store i64 0, i64* %i731, align 8
  br label %for.cond.750

for.cond.750:                                     ; preds = %for.inc.763, %if.end.749
  %449 = load i64, i64* %i731, align 8
  %450 = load i64, i64* %len729, align 8
  %cmp751 = icmp slt i64 %449, %450
  br i1 %cmp751, label %for.body.752, label %for.end.765

for.body.752:                                     ; preds = %for.cond.750
  %451 = load i64, i64* %i731, align 8
  %452 = load %struct._object*, %struct._object** %tmp, align 8
  %453 = bitcast %struct._object* %452 to %struct.PyListObject*
  %ob_item755 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %453, i32 0, i32 1
  %454 = load %struct._object**, %struct._object*** %ob_item755, align 8
  %arrayidx756 = getelementptr %struct._object*, %struct._object** %454, i64 %451
  %455 = load %struct._object*, %struct._object** %arrayidx756, align 8
  %456 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call757 = call i32 @obj2ast_expr(%struct._object* %455, %struct._expr** %value754, %struct._arena* %456)
  store i32 %call757, i32* %res727, align 4
  %457 = load i32, i32* %res727, align 4
  %cmp758 = icmp ne i32 %457, 0
  br i1 %cmp758, label %if.then.759, label %if.end.760

if.then.759:                                      ; preds = %for.body.752
  br label %failed

if.end.760:                                       ; preds = %for.body.752
  %458 = load %struct._expr*, %struct._expr** %value754, align 8
  %459 = bitcast %struct._expr* %458 to i8*
  %460 = load i64, i64* %i731, align 8
  %461 = load %struct.asdl_seq*, %struct.asdl_seq** %targets, align 8
  %elements761 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %461, i32 0, i32 1
  %arrayidx762 = getelementptr [1 x i8*], [1 x i8*]* %elements761, i32 0, i64 %460
  store i8* %459, i8** %arrayidx762, align 8
  br label %for.inc.763

for.inc.763:                                      ; preds = %if.end.760
  %462 = load i64, i64* %i731, align 8
  %inc764 = add i64 %462, 1
  store i64 %inc764, i64* %i731, align 8
  br label %for.cond.750

for.end.765:                                      ; preds = %for.cond.750
  br label %do.body.766

do.body.766:                                      ; preds = %for.end.765
  %463 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %463, %struct._object** %_py_tmp768, align 8
  %464 = load %struct._object*, %struct._object** %_py_tmp768, align 8
  %cmp769 = icmp ne %struct._object* %464, null
  br i1 %cmp769, label %if.then.770, label %if.end.783

if.then.770:                                      ; preds = %do.body.766
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.771

do.body.771:                                      ; preds = %if.then.770
  %465 = load %struct._object*, %struct._object** %_py_tmp768, align 8
  store %struct._object* %465, %struct._object** %_py_decref_tmp773, align 8
  %466 = load %struct._object*, %struct._object** %_py_decref_tmp773, align 8
  %ob_refcnt774 = getelementptr inbounds %struct._object, %struct._object* %466, i32 0, i32 0
  %467 = load i64, i64* %ob_refcnt774, align 8
  %dec775 = add i64 %467, -1
  store i64 %dec775, i64* %ob_refcnt774, align 8
  %cmp776 = icmp ne i64 %dec775, 0
  br i1 %cmp776, label %if.then.777, label %if.else.778

if.then.777:                                      ; preds = %do.body.771
  br label %if.end.781

if.else.778:                                      ; preds = %do.body.771
  %468 = load %struct._object*, %struct._object** %_py_decref_tmp773, align 8
  %ob_type779 = getelementptr inbounds %struct._object, %struct._object* %468, i32 0, i32 1
  %469 = load %struct._typeobject*, %struct._typeobject** %ob_type779, align 8
  %tp_dealloc780 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %469, i32 0, i32 4
  %470 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc780, align 8
  %471 = load %struct._object*, %struct._object** %_py_decref_tmp773, align 8
  call void %470(%struct._object* %471)
  br label %if.end.781

if.end.781:                                       ; preds = %if.else.778, %if.then.777
  br label %do.end.782

do.end.782:                                       ; preds = %if.end.781
  br label %if.end.783

if.end.783:                                       ; preds = %do.end.782, %do.body.766
  br label %do.end.784

do.end.784:                                       ; preds = %if.end.783
  br label %if.end.786

if.else.785:                                      ; preds = %if.then.721
  %472 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %472, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.268, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.786:                                       ; preds = %do.end.784
  %473 = load %struct.asdl_seq*, %struct.asdl_seq** %targets, align 8
  %474 = load i32, i32* %lineno, align 4
  %475 = load i32, i32* %col_offset, align 4
  %476 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call787 = call %struct._stmt* @_Py_Delete(%struct.asdl_seq* %473, i32 %474, i32 %475, %struct._arena* %476)
  %477 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call787, %struct._stmt** %477, align 8
  %478 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %479 = load %struct._stmt*, %struct._stmt** %478, align 8
  %cmp788 = icmp eq %struct._stmt* %479, null
  br i1 %cmp788, label %if.then.789, label %if.end.790

if.then.789:                                      ; preds = %if.end.786
  br label %failed

if.end.790:                                       ; preds = %if.end.786
  store i32 0, i32* %retval
  br label %return

if.end.791:                                       ; preds = %if.end.719
  %480 = load %struct._object*, %struct._object** %obj.addr, align 8
  %481 = load %struct._typeobject*, %struct._typeobject** @Assign_type, align 8
  %482 = bitcast %struct._typeobject* %481 to %struct._object*
  %call792 = call i32 @PyObject_IsInstance(%struct._object* %480, %struct._object* %482)
  store i32 %call792, i32* %isinstance, align 4
  %483 = load i32, i32* %isinstance, align 4
  %cmp793 = icmp eq i32 %483, -1
  br i1 %cmp793, label %if.then.794, label %if.end.795

if.then.794:                                      ; preds = %if.end.791
  store i32 1, i32* %retval
  br label %return

if.end.795:                                       ; preds = %if.end.791
  %484 = load i32, i32* %isinstance, align 4
  %tobool796 = icmp ne i32 %484, 0
  br i1 %tobool796, label %if.then.797, label %if.end.904

if.then.797:                                      ; preds = %if.end.795
  %485 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call802 = call i32 @_PyObject_HasAttrId(%struct._object* %485, %struct._Py_Identifier* @PyId_targets)
  %tobool803 = icmp ne i32 %call802, 0
  br i1 %tobool803, label %if.then.804, label %if.else.864

if.then.804:                                      ; preds = %if.then.797
  %486 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call811 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %486, %struct._Py_Identifier* @PyId_targets)
  store %struct._object* %call811, %struct._object** %tmp, align 8
  %487 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp812 = icmp eq %struct._object* %487, null
  br i1 %cmp812, label %if.then.813, label %if.end.814

if.then.813:                                      ; preds = %if.then.804
  br label %failed

if.end.814:                                       ; preds = %if.then.804
  %488 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type815 = getelementptr inbounds %struct._object, %struct._object* %488, i32 0, i32 1
  %489 = load %struct._typeobject*, %struct._typeobject** %ob_type815, align 8
  %tp_flags816 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %489, i32 0, i32 19
  %490 = load i64, i64* %tp_flags816, align 8
  %and817 = and i64 %490, 33554432
  %cmp818 = icmp ne i64 %and817, 0
  br i1 %cmp818, label %if.end.823, label %if.then.819

if.then.819:                                      ; preds = %if.end.814
  %491 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %492 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type820 = getelementptr inbounds %struct._object, %struct._object* %492, i32 0, i32 1
  %493 = load %struct._typeobject*, %struct._typeobject** %ob_type820, align 8
  %tp_name821 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %493, i32 0, i32 1
  %494 = load i8*, i8** %tp_name821, align 8
  %call822 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %491, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.269, i32 0, i32 0), i8* %494)
  br label %failed

if.end.823:                                       ; preds = %if.end.814
  %495 = load %struct._object*, %struct._object** %tmp, align 8
  %496 = bitcast %struct._object* %495 to %struct.PyVarObject*
  %ob_size824 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %496, i32 0, i32 1
  %497 = load i64, i64* %ob_size824, align 8
  store i64 %497, i64* %len808, align 8
  %498 = load i64, i64* %len808, align 8
  %499 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call825 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %498, %struct._arena* %499)
  store %struct.asdl_seq* %call825, %struct.asdl_seq** %targets799, align 8
  %500 = load %struct.asdl_seq*, %struct.asdl_seq** %targets799, align 8
  %cmp826 = icmp eq %struct.asdl_seq* %500, null
  br i1 %cmp826, label %if.then.827, label %if.end.828

if.then.827:                                      ; preds = %if.end.823
  br label %failed

if.end.828:                                       ; preds = %if.end.823
  store i64 0, i64* %i810, align 8
  br label %for.cond.829

for.cond.829:                                     ; preds = %for.inc.842, %if.end.828
  %501 = load i64, i64* %i810, align 8
  %502 = load i64, i64* %len808, align 8
  %cmp830 = icmp slt i64 %501, %502
  br i1 %cmp830, label %for.body.831, label %for.end.844

for.body.831:                                     ; preds = %for.cond.829
  %503 = load i64, i64* %i810, align 8
  %504 = load %struct._object*, %struct._object** %tmp, align 8
  %505 = bitcast %struct._object* %504 to %struct.PyListObject*
  %ob_item834 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %505, i32 0, i32 1
  %506 = load %struct._object**, %struct._object*** %ob_item834, align 8
  %arrayidx835 = getelementptr %struct._object*, %struct._object** %506, i64 %503
  %507 = load %struct._object*, %struct._object** %arrayidx835, align 8
  %508 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call836 = call i32 @obj2ast_expr(%struct._object* %507, %struct._expr** %value833, %struct._arena* %508)
  store i32 %call836, i32* %res806, align 4
  %509 = load i32, i32* %res806, align 4
  %cmp837 = icmp ne i32 %509, 0
  br i1 %cmp837, label %if.then.838, label %if.end.839

if.then.838:                                      ; preds = %for.body.831
  br label %failed

if.end.839:                                       ; preds = %for.body.831
  %510 = load %struct._expr*, %struct._expr** %value833, align 8
  %511 = bitcast %struct._expr* %510 to i8*
  %512 = load i64, i64* %i810, align 8
  %513 = load %struct.asdl_seq*, %struct.asdl_seq** %targets799, align 8
  %elements840 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %513, i32 0, i32 1
  %arrayidx841 = getelementptr [1 x i8*], [1 x i8*]* %elements840, i32 0, i64 %512
  store i8* %511, i8** %arrayidx841, align 8
  br label %for.inc.842

for.inc.842:                                      ; preds = %if.end.839
  %514 = load i64, i64* %i810, align 8
  %inc843 = add i64 %514, 1
  store i64 %inc843, i64* %i810, align 8
  br label %for.cond.829

for.end.844:                                      ; preds = %for.cond.829
  br label %do.body.845

do.body.845:                                      ; preds = %for.end.844
  %515 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %515, %struct._object** %_py_tmp847, align 8
  %516 = load %struct._object*, %struct._object** %_py_tmp847, align 8
  %cmp848 = icmp ne %struct._object* %516, null
  br i1 %cmp848, label %if.then.849, label %if.end.862

if.then.849:                                      ; preds = %do.body.845
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.850

do.body.850:                                      ; preds = %if.then.849
  %517 = load %struct._object*, %struct._object** %_py_tmp847, align 8
  store %struct._object* %517, %struct._object** %_py_decref_tmp852, align 8
  %518 = load %struct._object*, %struct._object** %_py_decref_tmp852, align 8
  %ob_refcnt853 = getelementptr inbounds %struct._object, %struct._object* %518, i32 0, i32 0
  %519 = load i64, i64* %ob_refcnt853, align 8
  %dec854 = add i64 %519, -1
  store i64 %dec854, i64* %ob_refcnt853, align 8
  %cmp855 = icmp ne i64 %dec854, 0
  br i1 %cmp855, label %if.then.856, label %if.else.857

if.then.856:                                      ; preds = %do.body.850
  br label %if.end.860

if.else.857:                                      ; preds = %do.body.850
  %520 = load %struct._object*, %struct._object** %_py_decref_tmp852, align 8
  %ob_type858 = getelementptr inbounds %struct._object, %struct._object* %520, i32 0, i32 1
  %521 = load %struct._typeobject*, %struct._typeobject** %ob_type858, align 8
  %tp_dealloc859 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %521, i32 0, i32 4
  %522 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc859, align 8
  %523 = load %struct._object*, %struct._object** %_py_decref_tmp852, align 8
  call void %522(%struct._object* %523)
  br label %if.end.860

if.end.860:                                       ; preds = %if.else.857, %if.then.856
  br label %do.end.861

do.end.861:                                       ; preds = %if.end.860
  br label %if.end.862

if.end.862:                                       ; preds = %do.end.861, %do.body.845
  br label %do.end.863

do.end.863:                                       ; preds = %if.end.862
  br label %if.end.865

if.else.864:                                      ; preds = %if.then.797
  %524 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %524, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.270, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.865:                                       ; preds = %do.end.863
  %525 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call866 = call i32 @_PyObject_HasAttrId(%struct._object* %525, %struct._Py_Identifier* @PyId_value)
  %tobool867 = icmp ne i32 %call866, 0
  br i1 %tobool867, label %if.then.868, label %if.else.898

if.then.868:                                      ; preds = %if.end.865
  %526 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call871 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %526, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call871, %struct._object** %tmp, align 8
  %527 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp872 = icmp eq %struct._object* %527, null
  br i1 %cmp872, label %if.then.873, label %if.end.874

if.then.873:                                      ; preds = %if.then.868
  br label %failed

if.end.874:                                       ; preds = %if.then.868
  %528 = load %struct._object*, %struct._object** %tmp, align 8
  %529 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call875 = call i32 @obj2ast_expr(%struct._object* %528, %struct._expr** %value801, %struct._arena* %529)
  store i32 %call875, i32* %res870, align 4
  %530 = load i32, i32* %res870, align 4
  %cmp876 = icmp ne i32 %530, 0
  br i1 %cmp876, label %if.then.877, label %if.end.878

if.then.877:                                      ; preds = %if.end.874
  br label %failed

if.end.878:                                       ; preds = %if.end.874
  br label %do.body.879

do.body.879:                                      ; preds = %if.end.878
  %531 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %531, %struct._object** %_py_tmp881, align 8
  %532 = load %struct._object*, %struct._object** %_py_tmp881, align 8
  %cmp882 = icmp ne %struct._object* %532, null
  br i1 %cmp882, label %if.then.883, label %if.end.896

if.then.883:                                      ; preds = %do.body.879
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.884

do.body.884:                                      ; preds = %if.then.883
  %533 = load %struct._object*, %struct._object** %_py_tmp881, align 8
  store %struct._object* %533, %struct._object** %_py_decref_tmp886, align 8
  %534 = load %struct._object*, %struct._object** %_py_decref_tmp886, align 8
  %ob_refcnt887 = getelementptr inbounds %struct._object, %struct._object* %534, i32 0, i32 0
  %535 = load i64, i64* %ob_refcnt887, align 8
  %dec888 = add i64 %535, -1
  store i64 %dec888, i64* %ob_refcnt887, align 8
  %cmp889 = icmp ne i64 %dec888, 0
  br i1 %cmp889, label %if.then.890, label %if.else.891

if.then.890:                                      ; preds = %do.body.884
  br label %if.end.894

if.else.891:                                      ; preds = %do.body.884
  %536 = load %struct._object*, %struct._object** %_py_decref_tmp886, align 8
  %ob_type892 = getelementptr inbounds %struct._object, %struct._object* %536, i32 0, i32 1
  %537 = load %struct._typeobject*, %struct._typeobject** %ob_type892, align 8
  %tp_dealloc893 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %537, i32 0, i32 4
  %538 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc893, align 8
  %539 = load %struct._object*, %struct._object** %_py_decref_tmp886, align 8
  call void %538(%struct._object* %539)
  br label %if.end.894

if.end.894:                                       ; preds = %if.else.891, %if.then.890
  br label %do.end.895

do.end.895:                                       ; preds = %if.end.894
  br label %if.end.896

if.end.896:                                       ; preds = %do.end.895, %do.body.879
  br label %do.end.897

do.end.897:                                       ; preds = %if.end.896
  br label %if.end.899

if.else.898:                                      ; preds = %if.end.865
  %540 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %540, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.271, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.899:                                       ; preds = %do.end.897
  %541 = load %struct.asdl_seq*, %struct.asdl_seq** %targets799, align 8
  %542 = load %struct._expr*, %struct._expr** %value801, align 8
  %543 = load i32, i32* %lineno, align 4
  %544 = load i32, i32* %col_offset, align 4
  %545 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call900 = call %struct._stmt* @_Py_Assign(%struct.asdl_seq* %541, %struct._expr* %542, i32 %543, i32 %544, %struct._arena* %545)
  %546 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call900, %struct._stmt** %546, align 8
  %547 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %548 = load %struct._stmt*, %struct._stmt** %547, align 8
  %cmp901 = icmp eq %struct._stmt* %548, null
  br i1 %cmp901, label %if.then.902, label %if.end.903

if.then.902:                                      ; preds = %if.end.899
  br label %failed

if.end.903:                                       ; preds = %if.end.899
  store i32 0, i32* %retval
  br label %return

if.end.904:                                       ; preds = %if.end.795
  %549 = load %struct._object*, %struct._object** %obj.addr, align 8
  %550 = load %struct._typeobject*, %struct._typeobject** @AugAssign_type, align 8
  %551 = bitcast %struct._typeobject* %550 to %struct._object*
  %call905 = call i32 @PyObject_IsInstance(%struct._object* %549, %struct._object* %551)
  store i32 %call905, i32* %isinstance, align 4
  %552 = load i32, i32* %isinstance, align 4
  %cmp906 = icmp eq i32 %552, -1
  br i1 %cmp906, label %if.then.907, label %if.end.908

if.then.907:                                      ; preds = %if.end.904
  store i32 1, i32* %retval
  br label %return

if.end.908:                                       ; preds = %if.end.904
  %553 = load i32, i32* %isinstance, align 4
  %tobool909 = icmp ne i32 %553, 0
  br i1 %tobool909, label %if.then.910, label %if.end.1021

if.then.910:                                      ; preds = %if.end.908
  %554 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call915 = call i32 @_PyObject_HasAttrId(%struct._object* %554, %struct._Py_Identifier* @PyId_target)
  %tobool916 = icmp ne i32 %call915, 0
  br i1 %tobool916, label %if.then.917, label %if.else.947

if.then.917:                                      ; preds = %if.then.910
  %555 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call920 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %555, %struct._Py_Identifier* @PyId_target)
  store %struct._object* %call920, %struct._object** %tmp, align 8
  %556 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp921 = icmp eq %struct._object* %556, null
  br i1 %cmp921, label %if.then.922, label %if.end.923

if.then.922:                                      ; preds = %if.then.917
  br label %failed

if.end.923:                                       ; preds = %if.then.917
  %557 = load %struct._object*, %struct._object** %tmp, align 8
  %558 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call924 = call i32 @obj2ast_expr(%struct._object* %557, %struct._expr** %target, %struct._arena* %558)
  store i32 %call924, i32* %res919, align 4
  %559 = load i32, i32* %res919, align 4
  %cmp925 = icmp ne i32 %559, 0
  br i1 %cmp925, label %if.then.926, label %if.end.927

if.then.926:                                      ; preds = %if.end.923
  br label %failed

if.end.927:                                       ; preds = %if.end.923
  br label %do.body.928

do.body.928:                                      ; preds = %if.end.927
  %560 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %560, %struct._object** %_py_tmp930, align 8
  %561 = load %struct._object*, %struct._object** %_py_tmp930, align 8
  %cmp931 = icmp ne %struct._object* %561, null
  br i1 %cmp931, label %if.then.932, label %if.end.945

if.then.932:                                      ; preds = %do.body.928
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.933

do.body.933:                                      ; preds = %if.then.932
  %562 = load %struct._object*, %struct._object** %_py_tmp930, align 8
  store %struct._object* %562, %struct._object** %_py_decref_tmp935, align 8
  %563 = load %struct._object*, %struct._object** %_py_decref_tmp935, align 8
  %ob_refcnt936 = getelementptr inbounds %struct._object, %struct._object* %563, i32 0, i32 0
  %564 = load i64, i64* %ob_refcnt936, align 8
  %dec937 = add i64 %564, -1
  store i64 %dec937, i64* %ob_refcnt936, align 8
  %cmp938 = icmp ne i64 %dec937, 0
  br i1 %cmp938, label %if.then.939, label %if.else.940

if.then.939:                                      ; preds = %do.body.933
  br label %if.end.943

if.else.940:                                      ; preds = %do.body.933
  %565 = load %struct._object*, %struct._object** %_py_decref_tmp935, align 8
  %ob_type941 = getelementptr inbounds %struct._object, %struct._object* %565, i32 0, i32 1
  %566 = load %struct._typeobject*, %struct._typeobject** %ob_type941, align 8
  %tp_dealloc942 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %566, i32 0, i32 4
  %567 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc942, align 8
  %568 = load %struct._object*, %struct._object** %_py_decref_tmp935, align 8
  call void %567(%struct._object* %568)
  br label %if.end.943

if.end.943:                                       ; preds = %if.else.940, %if.then.939
  br label %do.end.944

do.end.944:                                       ; preds = %if.end.943
  br label %if.end.945

if.end.945:                                       ; preds = %do.end.944, %do.body.928
  br label %do.end.946

do.end.946:                                       ; preds = %if.end.945
  br label %if.end.948

if.else.947:                                      ; preds = %if.then.910
  %569 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %569, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.272, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.948:                                       ; preds = %do.end.946
  %570 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call949 = call i32 @_PyObject_HasAttrId(%struct._object* %570, %struct._Py_Identifier* @PyId_op)
  %tobool950 = icmp ne i32 %call949, 0
  br i1 %tobool950, label %if.then.951, label %if.else.981

if.then.951:                                      ; preds = %if.end.948
  %571 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call954 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %571, %struct._Py_Identifier* @PyId_op)
  store %struct._object* %call954, %struct._object** %tmp, align 8
  %572 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp955 = icmp eq %struct._object* %572, null
  br i1 %cmp955, label %if.then.956, label %if.end.957

if.then.956:                                      ; preds = %if.then.951
  br label %failed

if.end.957:                                       ; preds = %if.then.951
  %573 = load %struct._object*, %struct._object** %tmp, align 8
  %574 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call958 = call i32 @obj2ast_operator(%struct._object* %573, i32* %op, %struct._arena* %574)
  store i32 %call958, i32* %res953, align 4
  %575 = load i32, i32* %res953, align 4
  %cmp959 = icmp ne i32 %575, 0
  br i1 %cmp959, label %if.then.960, label %if.end.961

if.then.960:                                      ; preds = %if.end.957
  br label %failed

if.end.961:                                       ; preds = %if.end.957
  br label %do.body.962

do.body.962:                                      ; preds = %if.end.961
  %576 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %576, %struct._object** %_py_tmp964, align 8
  %577 = load %struct._object*, %struct._object** %_py_tmp964, align 8
  %cmp965 = icmp ne %struct._object* %577, null
  br i1 %cmp965, label %if.then.966, label %if.end.979

if.then.966:                                      ; preds = %do.body.962
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.967

do.body.967:                                      ; preds = %if.then.966
  %578 = load %struct._object*, %struct._object** %_py_tmp964, align 8
  store %struct._object* %578, %struct._object** %_py_decref_tmp969, align 8
  %579 = load %struct._object*, %struct._object** %_py_decref_tmp969, align 8
  %ob_refcnt970 = getelementptr inbounds %struct._object, %struct._object* %579, i32 0, i32 0
  %580 = load i64, i64* %ob_refcnt970, align 8
  %dec971 = add i64 %580, -1
  store i64 %dec971, i64* %ob_refcnt970, align 8
  %cmp972 = icmp ne i64 %dec971, 0
  br i1 %cmp972, label %if.then.973, label %if.else.974

if.then.973:                                      ; preds = %do.body.967
  br label %if.end.977

if.else.974:                                      ; preds = %do.body.967
  %581 = load %struct._object*, %struct._object** %_py_decref_tmp969, align 8
  %ob_type975 = getelementptr inbounds %struct._object, %struct._object* %581, i32 0, i32 1
  %582 = load %struct._typeobject*, %struct._typeobject** %ob_type975, align 8
  %tp_dealloc976 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %582, i32 0, i32 4
  %583 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc976, align 8
  %584 = load %struct._object*, %struct._object** %_py_decref_tmp969, align 8
  call void %583(%struct._object* %584)
  br label %if.end.977

if.end.977:                                       ; preds = %if.else.974, %if.then.973
  br label %do.end.978

do.end.978:                                       ; preds = %if.end.977
  br label %if.end.979

if.end.979:                                       ; preds = %do.end.978, %do.body.962
  br label %do.end.980

do.end.980:                                       ; preds = %if.end.979
  br label %if.end.982

if.else.981:                                      ; preds = %if.end.948
  %585 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %585, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.273, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.982:                                       ; preds = %do.end.980
  %586 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call983 = call i32 @_PyObject_HasAttrId(%struct._object* %586, %struct._Py_Identifier* @PyId_value)
  %tobool984 = icmp ne i32 %call983, 0
  br i1 %tobool984, label %if.then.985, label %if.else.1015

if.then.985:                                      ; preds = %if.end.982
  %587 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call988 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %587, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call988, %struct._object** %tmp, align 8
  %588 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp989 = icmp eq %struct._object* %588, null
  br i1 %cmp989, label %if.then.990, label %if.end.991

if.then.990:                                      ; preds = %if.then.985
  br label %failed

if.end.991:                                       ; preds = %if.then.985
  %589 = load %struct._object*, %struct._object** %tmp, align 8
  %590 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call992 = call i32 @obj2ast_expr(%struct._object* %589, %struct._expr** %value914, %struct._arena* %590)
  store i32 %call992, i32* %res987, align 4
  %591 = load i32, i32* %res987, align 4
  %cmp993 = icmp ne i32 %591, 0
  br i1 %cmp993, label %if.then.994, label %if.end.995

if.then.994:                                      ; preds = %if.end.991
  br label %failed

if.end.995:                                       ; preds = %if.end.991
  br label %do.body.996

do.body.996:                                      ; preds = %if.end.995
  %592 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %592, %struct._object** %_py_tmp998, align 8
  %593 = load %struct._object*, %struct._object** %_py_tmp998, align 8
  %cmp999 = icmp ne %struct._object* %593, null
  br i1 %cmp999, label %if.then.1000, label %if.end.1013

if.then.1000:                                     ; preds = %do.body.996
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1001

do.body.1001:                                     ; preds = %if.then.1000
  %594 = load %struct._object*, %struct._object** %_py_tmp998, align 8
  store %struct._object* %594, %struct._object** %_py_decref_tmp1003, align 8
  %595 = load %struct._object*, %struct._object** %_py_decref_tmp1003, align 8
  %ob_refcnt1004 = getelementptr inbounds %struct._object, %struct._object* %595, i32 0, i32 0
  %596 = load i64, i64* %ob_refcnt1004, align 8
  %dec1005 = add i64 %596, -1
  store i64 %dec1005, i64* %ob_refcnt1004, align 8
  %cmp1006 = icmp ne i64 %dec1005, 0
  br i1 %cmp1006, label %if.then.1007, label %if.else.1008

if.then.1007:                                     ; preds = %do.body.1001
  br label %if.end.1011

if.else.1008:                                     ; preds = %do.body.1001
  %597 = load %struct._object*, %struct._object** %_py_decref_tmp1003, align 8
  %ob_type1009 = getelementptr inbounds %struct._object, %struct._object* %597, i32 0, i32 1
  %598 = load %struct._typeobject*, %struct._typeobject** %ob_type1009, align 8
  %tp_dealloc1010 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %598, i32 0, i32 4
  %599 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1010, align 8
  %600 = load %struct._object*, %struct._object** %_py_decref_tmp1003, align 8
  call void %599(%struct._object* %600)
  br label %if.end.1011

if.end.1011:                                      ; preds = %if.else.1008, %if.then.1007
  br label %do.end.1012

do.end.1012:                                      ; preds = %if.end.1011
  br label %if.end.1013

if.end.1013:                                      ; preds = %do.end.1012, %do.body.996
  br label %do.end.1014

do.end.1014:                                      ; preds = %if.end.1013
  br label %if.end.1016

if.else.1015:                                     ; preds = %if.end.982
  %601 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %601, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.274, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1016:                                      ; preds = %do.end.1014
  %602 = load %struct._expr*, %struct._expr** %target, align 8
  %603 = load i32, i32* %op, align 4
  %604 = load %struct._expr*, %struct._expr** %value914, align 8
  %605 = load i32, i32* %lineno, align 4
  %606 = load i32, i32* %col_offset, align 4
  %607 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1017 = call %struct._stmt* @_Py_AugAssign(%struct._expr* %602, i32 %603, %struct._expr* %604, i32 %605, i32 %606, %struct._arena* %607)
  %608 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call1017, %struct._stmt** %608, align 8
  %609 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %610 = load %struct._stmt*, %struct._stmt** %609, align 8
  %cmp1018 = icmp eq %struct._stmt* %610, null
  br i1 %cmp1018, label %if.then.1019, label %if.end.1020

if.then.1019:                                     ; preds = %if.end.1016
  br label %failed

if.end.1020:                                      ; preds = %if.end.1016
  store i32 0, i32* %retval
  br label %return

if.end.1021:                                      ; preds = %if.end.908
  %611 = load %struct._object*, %struct._object** %obj.addr, align 8
  %612 = load %struct._typeobject*, %struct._typeobject** @For_type, align 8
  %613 = bitcast %struct._typeobject* %612 to %struct._object*
  %call1022 = call i32 @PyObject_IsInstance(%struct._object* %611, %struct._object* %613)
  store i32 %call1022, i32* %isinstance, align 4
  %614 = load i32, i32* %isinstance, align 4
  %cmp1023 = icmp eq i32 %614, -1
  br i1 %cmp1023, label %if.then.1024, label %if.end.1025

if.then.1024:                                     ; preds = %if.end.1021
  store i32 1, i32* %retval
  br label %return

if.end.1025:                                      ; preds = %if.end.1021
  %615 = load i32, i32* %isinstance, align 4
  %tobool1026 = icmp ne i32 %615, 0
  br i1 %tobool1026, label %if.then.1027, label %if.end.1234

if.then.1027:                                     ; preds = %if.end.1025
  %616 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1034 = call i32 @_PyObject_HasAttrId(%struct._object* %616, %struct._Py_Identifier* @PyId_target)
  %tobool1035 = icmp ne i32 %call1034, 0
  br i1 %tobool1035, label %if.then.1036, label %if.else.1066

if.then.1036:                                     ; preds = %if.then.1027
  %617 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1039 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %617, %struct._Py_Identifier* @PyId_target)
  store %struct._object* %call1039, %struct._object** %tmp, align 8
  %618 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1040 = icmp eq %struct._object* %618, null
  br i1 %cmp1040, label %if.then.1041, label %if.end.1042

if.then.1041:                                     ; preds = %if.then.1036
  br label %failed

if.end.1042:                                      ; preds = %if.then.1036
  %619 = load %struct._object*, %struct._object** %tmp, align 8
  %620 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1043 = call i32 @obj2ast_expr(%struct._object* %619, %struct._expr** %target1029, %struct._arena* %620)
  store i32 %call1043, i32* %res1038, align 4
  %621 = load i32, i32* %res1038, align 4
  %cmp1044 = icmp ne i32 %621, 0
  br i1 %cmp1044, label %if.then.1045, label %if.end.1046

if.then.1045:                                     ; preds = %if.end.1042
  br label %failed

if.end.1046:                                      ; preds = %if.end.1042
  br label %do.body.1047

do.body.1047:                                     ; preds = %if.end.1046
  %622 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %622, %struct._object** %_py_tmp1049, align 8
  %623 = load %struct._object*, %struct._object** %_py_tmp1049, align 8
  %cmp1050 = icmp ne %struct._object* %623, null
  br i1 %cmp1050, label %if.then.1051, label %if.end.1064

if.then.1051:                                     ; preds = %do.body.1047
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1052

do.body.1052:                                     ; preds = %if.then.1051
  %624 = load %struct._object*, %struct._object** %_py_tmp1049, align 8
  store %struct._object* %624, %struct._object** %_py_decref_tmp1054, align 8
  %625 = load %struct._object*, %struct._object** %_py_decref_tmp1054, align 8
  %ob_refcnt1055 = getelementptr inbounds %struct._object, %struct._object* %625, i32 0, i32 0
  %626 = load i64, i64* %ob_refcnt1055, align 8
  %dec1056 = add i64 %626, -1
  store i64 %dec1056, i64* %ob_refcnt1055, align 8
  %cmp1057 = icmp ne i64 %dec1056, 0
  br i1 %cmp1057, label %if.then.1058, label %if.else.1059

if.then.1058:                                     ; preds = %do.body.1052
  br label %if.end.1062

if.else.1059:                                     ; preds = %do.body.1052
  %627 = load %struct._object*, %struct._object** %_py_decref_tmp1054, align 8
  %ob_type1060 = getelementptr inbounds %struct._object, %struct._object* %627, i32 0, i32 1
  %628 = load %struct._typeobject*, %struct._typeobject** %ob_type1060, align 8
  %tp_dealloc1061 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %628, i32 0, i32 4
  %629 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1061, align 8
  %630 = load %struct._object*, %struct._object** %_py_decref_tmp1054, align 8
  call void %629(%struct._object* %630)
  br label %if.end.1062

if.end.1062:                                      ; preds = %if.else.1059, %if.then.1058
  br label %do.end.1063

do.end.1063:                                      ; preds = %if.end.1062
  br label %if.end.1064

if.end.1064:                                      ; preds = %do.end.1063, %do.body.1047
  br label %do.end.1065

do.end.1065:                                      ; preds = %if.end.1064
  br label %if.end.1067

if.else.1066:                                     ; preds = %if.then.1027
  %631 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %631, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.275, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1067:                                      ; preds = %do.end.1065
  %632 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1068 = call i32 @_PyObject_HasAttrId(%struct._object* %632, %struct._Py_Identifier* @PyId_iter)
  %tobool1069 = icmp ne i32 %call1068, 0
  br i1 %tobool1069, label %if.then.1070, label %if.else.1100

if.then.1070:                                     ; preds = %if.end.1067
  %633 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1073 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %633, %struct._Py_Identifier* @PyId_iter)
  store %struct._object* %call1073, %struct._object** %tmp, align 8
  %634 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1074 = icmp eq %struct._object* %634, null
  br i1 %cmp1074, label %if.then.1075, label %if.end.1076

if.then.1075:                                     ; preds = %if.then.1070
  br label %failed

if.end.1076:                                      ; preds = %if.then.1070
  %635 = load %struct._object*, %struct._object** %tmp, align 8
  %636 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1077 = call i32 @obj2ast_expr(%struct._object* %635, %struct._expr** %iter, %struct._arena* %636)
  store i32 %call1077, i32* %res1072, align 4
  %637 = load i32, i32* %res1072, align 4
  %cmp1078 = icmp ne i32 %637, 0
  br i1 %cmp1078, label %if.then.1079, label %if.end.1080

if.then.1079:                                     ; preds = %if.end.1076
  br label %failed

if.end.1080:                                      ; preds = %if.end.1076
  br label %do.body.1081

do.body.1081:                                     ; preds = %if.end.1080
  %638 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %638, %struct._object** %_py_tmp1083, align 8
  %639 = load %struct._object*, %struct._object** %_py_tmp1083, align 8
  %cmp1084 = icmp ne %struct._object* %639, null
  br i1 %cmp1084, label %if.then.1085, label %if.end.1098

if.then.1085:                                     ; preds = %do.body.1081
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1086

do.body.1086:                                     ; preds = %if.then.1085
  %640 = load %struct._object*, %struct._object** %_py_tmp1083, align 8
  store %struct._object* %640, %struct._object** %_py_decref_tmp1088, align 8
  %641 = load %struct._object*, %struct._object** %_py_decref_tmp1088, align 8
  %ob_refcnt1089 = getelementptr inbounds %struct._object, %struct._object* %641, i32 0, i32 0
  %642 = load i64, i64* %ob_refcnt1089, align 8
  %dec1090 = add i64 %642, -1
  store i64 %dec1090, i64* %ob_refcnt1089, align 8
  %cmp1091 = icmp ne i64 %dec1090, 0
  br i1 %cmp1091, label %if.then.1092, label %if.else.1093

if.then.1092:                                     ; preds = %do.body.1086
  br label %if.end.1096

if.else.1093:                                     ; preds = %do.body.1086
  %643 = load %struct._object*, %struct._object** %_py_decref_tmp1088, align 8
  %ob_type1094 = getelementptr inbounds %struct._object, %struct._object* %643, i32 0, i32 1
  %644 = load %struct._typeobject*, %struct._typeobject** %ob_type1094, align 8
  %tp_dealloc1095 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %644, i32 0, i32 4
  %645 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1095, align 8
  %646 = load %struct._object*, %struct._object** %_py_decref_tmp1088, align 8
  call void %645(%struct._object* %646)
  br label %if.end.1096

if.end.1096:                                      ; preds = %if.else.1093, %if.then.1092
  br label %do.end.1097

do.end.1097:                                      ; preds = %if.end.1096
  br label %if.end.1098

if.end.1098:                                      ; preds = %do.end.1097, %do.body.1081
  br label %do.end.1099

do.end.1099:                                      ; preds = %if.end.1098
  br label %if.end.1101

if.else.1100:                                     ; preds = %if.end.1067
  %647 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %647, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.276, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1101:                                      ; preds = %do.end.1099
  %648 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1102 = call i32 @_PyObject_HasAttrId(%struct._object* %648, %struct._Py_Identifier* @PyId_body)
  %tobool1103 = icmp ne i32 %call1102, 0
  br i1 %tobool1103, label %if.then.1104, label %if.else.1164

if.then.1104:                                     ; preds = %if.end.1101
  %649 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1111 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %649, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call1111, %struct._object** %tmp, align 8
  %650 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1112 = icmp eq %struct._object* %650, null
  br i1 %cmp1112, label %if.then.1113, label %if.end.1114

if.then.1113:                                     ; preds = %if.then.1104
  br label %failed

if.end.1114:                                      ; preds = %if.then.1104
  %651 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1115 = getelementptr inbounds %struct._object, %struct._object* %651, i32 0, i32 1
  %652 = load %struct._typeobject*, %struct._typeobject** %ob_type1115, align 8
  %tp_flags1116 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %652, i32 0, i32 19
  %653 = load i64, i64* %tp_flags1116, align 8
  %and1117 = and i64 %653, 33554432
  %cmp1118 = icmp ne i64 %and1117, 0
  br i1 %cmp1118, label %if.end.1123, label %if.then.1119

if.then.1119:                                     ; preds = %if.end.1114
  %654 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %655 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1120 = getelementptr inbounds %struct._object, %struct._object* %655, i32 0, i32 1
  %656 = load %struct._typeobject*, %struct._typeobject** %ob_type1120, align 8
  %tp_name1121 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %656, i32 0, i32 1
  %657 = load i8*, i8** %tp_name1121, align 8
  %call1122 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %654, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.277, i32 0, i32 0), i8* %657)
  br label %failed

if.end.1123:                                      ; preds = %if.end.1114
  %658 = load %struct._object*, %struct._object** %tmp, align 8
  %659 = bitcast %struct._object* %658 to %struct.PyVarObject*
  %ob_size1124 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %659, i32 0, i32 1
  %660 = load i64, i64* %ob_size1124, align 8
  store i64 %660, i64* %len1108, align 8
  %661 = load i64, i64* %len1108, align 8
  %662 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1125 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %661, %struct._arena* %662)
  store %struct.asdl_seq* %call1125, %struct.asdl_seq** %body1032, align 8
  %663 = load %struct.asdl_seq*, %struct.asdl_seq** %body1032, align 8
  %cmp1126 = icmp eq %struct.asdl_seq* %663, null
  br i1 %cmp1126, label %if.then.1127, label %if.end.1128

if.then.1127:                                     ; preds = %if.end.1123
  br label %failed

if.end.1128:                                      ; preds = %if.end.1123
  store i64 0, i64* %i1110, align 8
  br label %for.cond.1129

for.cond.1129:                                    ; preds = %for.inc.1142, %if.end.1128
  %664 = load i64, i64* %i1110, align 8
  %665 = load i64, i64* %len1108, align 8
  %cmp1130 = icmp slt i64 %664, %665
  br i1 %cmp1130, label %for.body.1131, label %for.end.1144

for.body.1131:                                    ; preds = %for.cond.1129
  %666 = load i64, i64* %i1110, align 8
  %667 = load %struct._object*, %struct._object** %tmp, align 8
  %668 = bitcast %struct._object* %667 to %struct.PyListObject*
  %ob_item1134 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %668, i32 0, i32 1
  %669 = load %struct._object**, %struct._object*** %ob_item1134, align 8
  %arrayidx1135 = getelementptr %struct._object*, %struct._object** %669, i64 %666
  %670 = load %struct._object*, %struct._object** %arrayidx1135, align 8
  %671 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1136 = call i32 @obj2ast_stmt(%struct._object* %670, %struct._stmt** %value1133, %struct._arena* %671)
  store i32 %call1136, i32* %res1106, align 4
  %672 = load i32, i32* %res1106, align 4
  %cmp1137 = icmp ne i32 %672, 0
  br i1 %cmp1137, label %if.then.1138, label %if.end.1139

if.then.1138:                                     ; preds = %for.body.1131
  br label %failed

if.end.1139:                                      ; preds = %for.body.1131
  %673 = load %struct._stmt*, %struct._stmt** %value1133, align 8
  %674 = bitcast %struct._stmt* %673 to i8*
  %675 = load i64, i64* %i1110, align 8
  %676 = load %struct.asdl_seq*, %struct.asdl_seq** %body1032, align 8
  %elements1140 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %676, i32 0, i32 1
  %arrayidx1141 = getelementptr [1 x i8*], [1 x i8*]* %elements1140, i32 0, i64 %675
  store i8* %674, i8** %arrayidx1141, align 8
  br label %for.inc.1142

for.inc.1142:                                     ; preds = %if.end.1139
  %677 = load i64, i64* %i1110, align 8
  %inc1143 = add i64 %677, 1
  store i64 %inc1143, i64* %i1110, align 8
  br label %for.cond.1129

for.end.1144:                                     ; preds = %for.cond.1129
  br label %do.body.1145

do.body.1145:                                     ; preds = %for.end.1144
  %678 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %678, %struct._object** %_py_tmp1147, align 8
  %679 = load %struct._object*, %struct._object** %_py_tmp1147, align 8
  %cmp1148 = icmp ne %struct._object* %679, null
  br i1 %cmp1148, label %if.then.1149, label %if.end.1162

if.then.1149:                                     ; preds = %do.body.1145
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1150

do.body.1150:                                     ; preds = %if.then.1149
  %680 = load %struct._object*, %struct._object** %_py_tmp1147, align 8
  store %struct._object* %680, %struct._object** %_py_decref_tmp1152, align 8
  %681 = load %struct._object*, %struct._object** %_py_decref_tmp1152, align 8
  %ob_refcnt1153 = getelementptr inbounds %struct._object, %struct._object* %681, i32 0, i32 0
  %682 = load i64, i64* %ob_refcnt1153, align 8
  %dec1154 = add i64 %682, -1
  store i64 %dec1154, i64* %ob_refcnt1153, align 8
  %cmp1155 = icmp ne i64 %dec1154, 0
  br i1 %cmp1155, label %if.then.1156, label %if.else.1157

if.then.1156:                                     ; preds = %do.body.1150
  br label %if.end.1160

if.else.1157:                                     ; preds = %do.body.1150
  %683 = load %struct._object*, %struct._object** %_py_decref_tmp1152, align 8
  %ob_type1158 = getelementptr inbounds %struct._object, %struct._object* %683, i32 0, i32 1
  %684 = load %struct._typeobject*, %struct._typeobject** %ob_type1158, align 8
  %tp_dealloc1159 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %684, i32 0, i32 4
  %685 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1159, align 8
  %686 = load %struct._object*, %struct._object** %_py_decref_tmp1152, align 8
  call void %685(%struct._object* %686)
  br label %if.end.1160

if.end.1160:                                      ; preds = %if.else.1157, %if.then.1156
  br label %do.end.1161

do.end.1161:                                      ; preds = %if.end.1160
  br label %if.end.1162

if.end.1162:                                      ; preds = %do.end.1161, %do.body.1145
  br label %do.end.1163

do.end.1163:                                      ; preds = %if.end.1162
  br label %if.end.1165

if.else.1164:                                     ; preds = %if.end.1101
  %687 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %687, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.278, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1165:                                      ; preds = %do.end.1163
  %688 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1166 = call i32 @_PyObject_HasAttrId(%struct._object* %688, %struct._Py_Identifier* @PyId_orelse)
  %tobool1167 = icmp ne i32 %call1166, 0
  br i1 %tobool1167, label %if.then.1168, label %if.else.1228

if.then.1168:                                     ; preds = %if.end.1165
  %689 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1175 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %689, %struct._Py_Identifier* @PyId_orelse)
  store %struct._object* %call1175, %struct._object** %tmp, align 8
  %690 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1176 = icmp eq %struct._object* %690, null
  br i1 %cmp1176, label %if.then.1177, label %if.end.1178

if.then.1177:                                     ; preds = %if.then.1168
  br label %failed

if.end.1178:                                      ; preds = %if.then.1168
  %691 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1179 = getelementptr inbounds %struct._object, %struct._object* %691, i32 0, i32 1
  %692 = load %struct._typeobject*, %struct._typeobject** %ob_type1179, align 8
  %tp_flags1180 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %692, i32 0, i32 19
  %693 = load i64, i64* %tp_flags1180, align 8
  %and1181 = and i64 %693, 33554432
  %cmp1182 = icmp ne i64 %and1181, 0
  br i1 %cmp1182, label %if.end.1187, label %if.then.1183

if.then.1183:                                     ; preds = %if.end.1178
  %694 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %695 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1184 = getelementptr inbounds %struct._object, %struct._object* %695, i32 0, i32 1
  %696 = load %struct._typeobject*, %struct._typeobject** %ob_type1184, align 8
  %tp_name1185 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %696, i32 0, i32 1
  %697 = load i8*, i8** %tp_name1185, align 8
  %call1186 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %694, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.279, i32 0, i32 0), i8* %697)
  br label %failed

if.end.1187:                                      ; preds = %if.end.1178
  %698 = load %struct._object*, %struct._object** %tmp, align 8
  %699 = bitcast %struct._object* %698 to %struct.PyVarObject*
  %ob_size1188 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %699, i32 0, i32 1
  %700 = load i64, i64* %ob_size1188, align 8
  store i64 %700, i64* %len1172, align 8
  %701 = load i64, i64* %len1172, align 8
  %702 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1189 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %701, %struct._arena* %702)
  store %struct.asdl_seq* %call1189, %struct.asdl_seq** %orelse, align 8
  %703 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse, align 8
  %cmp1190 = icmp eq %struct.asdl_seq* %703, null
  br i1 %cmp1190, label %if.then.1191, label %if.end.1192

if.then.1191:                                     ; preds = %if.end.1187
  br label %failed

if.end.1192:                                      ; preds = %if.end.1187
  store i64 0, i64* %i1174, align 8
  br label %for.cond.1193

for.cond.1193:                                    ; preds = %for.inc.1206, %if.end.1192
  %704 = load i64, i64* %i1174, align 8
  %705 = load i64, i64* %len1172, align 8
  %cmp1194 = icmp slt i64 %704, %705
  br i1 %cmp1194, label %for.body.1195, label %for.end.1208

for.body.1195:                                    ; preds = %for.cond.1193
  %706 = load i64, i64* %i1174, align 8
  %707 = load %struct._object*, %struct._object** %tmp, align 8
  %708 = bitcast %struct._object* %707 to %struct.PyListObject*
  %ob_item1198 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %708, i32 0, i32 1
  %709 = load %struct._object**, %struct._object*** %ob_item1198, align 8
  %arrayidx1199 = getelementptr %struct._object*, %struct._object** %709, i64 %706
  %710 = load %struct._object*, %struct._object** %arrayidx1199, align 8
  %711 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1200 = call i32 @obj2ast_stmt(%struct._object* %710, %struct._stmt** %value1197, %struct._arena* %711)
  store i32 %call1200, i32* %res1170, align 4
  %712 = load i32, i32* %res1170, align 4
  %cmp1201 = icmp ne i32 %712, 0
  br i1 %cmp1201, label %if.then.1202, label %if.end.1203

if.then.1202:                                     ; preds = %for.body.1195
  br label %failed

if.end.1203:                                      ; preds = %for.body.1195
  %713 = load %struct._stmt*, %struct._stmt** %value1197, align 8
  %714 = bitcast %struct._stmt* %713 to i8*
  %715 = load i64, i64* %i1174, align 8
  %716 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse, align 8
  %elements1204 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %716, i32 0, i32 1
  %arrayidx1205 = getelementptr [1 x i8*], [1 x i8*]* %elements1204, i32 0, i64 %715
  store i8* %714, i8** %arrayidx1205, align 8
  br label %for.inc.1206

for.inc.1206:                                     ; preds = %if.end.1203
  %717 = load i64, i64* %i1174, align 8
  %inc1207 = add i64 %717, 1
  store i64 %inc1207, i64* %i1174, align 8
  br label %for.cond.1193

for.end.1208:                                     ; preds = %for.cond.1193
  br label %do.body.1209

do.body.1209:                                     ; preds = %for.end.1208
  %718 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %718, %struct._object** %_py_tmp1211, align 8
  %719 = load %struct._object*, %struct._object** %_py_tmp1211, align 8
  %cmp1212 = icmp ne %struct._object* %719, null
  br i1 %cmp1212, label %if.then.1213, label %if.end.1226

if.then.1213:                                     ; preds = %do.body.1209
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1214

do.body.1214:                                     ; preds = %if.then.1213
  %720 = load %struct._object*, %struct._object** %_py_tmp1211, align 8
  store %struct._object* %720, %struct._object** %_py_decref_tmp1216, align 8
  %721 = load %struct._object*, %struct._object** %_py_decref_tmp1216, align 8
  %ob_refcnt1217 = getelementptr inbounds %struct._object, %struct._object* %721, i32 0, i32 0
  %722 = load i64, i64* %ob_refcnt1217, align 8
  %dec1218 = add i64 %722, -1
  store i64 %dec1218, i64* %ob_refcnt1217, align 8
  %cmp1219 = icmp ne i64 %dec1218, 0
  br i1 %cmp1219, label %if.then.1220, label %if.else.1221

if.then.1220:                                     ; preds = %do.body.1214
  br label %if.end.1224

if.else.1221:                                     ; preds = %do.body.1214
  %723 = load %struct._object*, %struct._object** %_py_decref_tmp1216, align 8
  %ob_type1222 = getelementptr inbounds %struct._object, %struct._object* %723, i32 0, i32 1
  %724 = load %struct._typeobject*, %struct._typeobject** %ob_type1222, align 8
  %tp_dealloc1223 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %724, i32 0, i32 4
  %725 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1223, align 8
  %726 = load %struct._object*, %struct._object** %_py_decref_tmp1216, align 8
  call void %725(%struct._object* %726)
  br label %if.end.1224

if.end.1224:                                      ; preds = %if.else.1221, %if.then.1220
  br label %do.end.1225

do.end.1225:                                      ; preds = %if.end.1224
  br label %if.end.1226

if.end.1226:                                      ; preds = %do.end.1225, %do.body.1209
  br label %do.end.1227

do.end.1227:                                      ; preds = %if.end.1226
  br label %if.end.1229

if.else.1228:                                     ; preds = %if.end.1165
  %727 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %727, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.280, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1229:                                      ; preds = %do.end.1227
  %728 = load %struct._expr*, %struct._expr** %target1029, align 8
  %729 = load %struct._expr*, %struct._expr** %iter, align 8
  %730 = load %struct.asdl_seq*, %struct.asdl_seq** %body1032, align 8
  %731 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse, align 8
  %732 = load i32, i32* %lineno, align 4
  %733 = load i32, i32* %col_offset, align 4
  %734 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1230 = call %struct._stmt* @_Py_For(%struct._expr* %728, %struct._expr* %729, %struct.asdl_seq* %730, %struct.asdl_seq* %731, i32 %732, i32 %733, %struct._arena* %734)
  %735 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call1230, %struct._stmt** %735, align 8
  %736 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %737 = load %struct._stmt*, %struct._stmt** %736, align 8
  %cmp1231 = icmp eq %struct._stmt* %737, null
  br i1 %cmp1231, label %if.then.1232, label %if.end.1233

if.then.1232:                                     ; preds = %if.end.1229
  br label %failed

if.end.1233:                                      ; preds = %if.end.1229
  store i32 0, i32* %retval
  br label %return

if.end.1234:                                      ; preds = %if.end.1025
  %738 = load %struct._object*, %struct._object** %obj.addr, align 8
  %739 = load %struct._typeobject*, %struct._typeobject** @While_type, align 8
  %740 = bitcast %struct._typeobject* %739 to %struct._object*
  %call1235 = call i32 @PyObject_IsInstance(%struct._object* %738, %struct._object* %740)
  store i32 %call1235, i32* %isinstance, align 4
  %741 = load i32, i32* %isinstance, align 4
  %cmp1236 = icmp eq i32 %741, -1
  br i1 %cmp1236, label %if.then.1237, label %if.end.1238

if.then.1237:                                     ; preds = %if.end.1234
  store i32 1, i32* %retval
  br label %return

if.end.1238:                                      ; preds = %if.end.1234
  %742 = load i32, i32* %isinstance, align 4
  %tobool1239 = icmp ne i32 %742, 0
  br i1 %tobool1239, label %if.then.1240, label %if.end.1412

if.then.1240:                                     ; preds = %if.end.1238
  %743 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1246 = call i32 @_PyObject_HasAttrId(%struct._object* %743, %struct._Py_Identifier* @PyId_test)
  %tobool1247 = icmp ne i32 %call1246, 0
  br i1 %tobool1247, label %if.then.1248, label %if.else.1278

if.then.1248:                                     ; preds = %if.then.1240
  %744 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1251 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %744, %struct._Py_Identifier* @PyId_test)
  store %struct._object* %call1251, %struct._object** %tmp, align 8
  %745 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1252 = icmp eq %struct._object* %745, null
  br i1 %cmp1252, label %if.then.1253, label %if.end.1254

if.then.1253:                                     ; preds = %if.then.1248
  br label %failed

if.end.1254:                                      ; preds = %if.then.1248
  %746 = load %struct._object*, %struct._object** %tmp, align 8
  %747 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1255 = call i32 @obj2ast_expr(%struct._object* %746, %struct._expr** %test, %struct._arena* %747)
  store i32 %call1255, i32* %res1250, align 4
  %748 = load i32, i32* %res1250, align 4
  %cmp1256 = icmp ne i32 %748, 0
  br i1 %cmp1256, label %if.then.1257, label %if.end.1258

if.then.1257:                                     ; preds = %if.end.1254
  br label %failed

if.end.1258:                                      ; preds = %if.end.1254
  br label %do.body.1259

do.body.1259:                                     ; preds = %if.end.1258
  %749 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %749, %struct._object** %_py_tmp1261, align 8
  %750 = load %struct._object*, %struct._object** %_py_tmp1261, align 8
  %cmp1262 = icmp ne %struct._object* %750, null
  br i1 %cmp1262, label %if.then.1263, label %if.end.1276

if.then.1263:                                     ; preds = %do.body.1259
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1264

do.body.1264:                                     ; preds = %if.then.1263
  %751 = load %struct._object*, %struct._object** %_py_tmp1261, align 8
  store %struct._object* %751, %struct._object** %_py_decref_tmp1266, align 8
  %752 = load %struct._object*, %struct._object** %_py_decref_tmp1266, align 8
  %ob_refcnt1267 = getelementptr inbounds %struct._object, %struct._object* %752, i32 0, i32 0
  %753 = load i64, i64* %ob_refcnt1267, align 8
  %dec1268 = add i64 %753, -1
  store i64 %dec1268, i64* %ob_refcnt1267, align 8
  %cmp1269 = icmp ne i64 %dec1268, 0
  br i1 %cmp1269, label %if.then.1270, label %if.else.1271

if.then.1270:                                     ; preds = %do.body.1264
  br label %if.end.1274

if.else.1271:                                     ; preds = %do.body.1264
  %754 = load %struct._object*, %struct._object** %_py_decref_tmp1266, align 8
  %ob_type1272 = getelementptr inbounds %struct._object, %struct._object* %754, i32 0, i32 1
  %755 = load %struct._typeobject*, %struct._typeobject** %ob_type1272, align 8
  %tp_dealloc1273 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %755, i32 0, i32 4
  %756 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1273, align 8
  %757 = load %struct._object*, %struct._object** %_py_decref_tmp1266, align 8
  call void %756(%struct._object* %757)
  br label %if.end.1274

if.end.1274:                                      ; preds = %if.else.1271, %if.then.1270
  br label %do.end.1275

do.end.1275:                                      ; preds = %if.end.1274
  br label %if.end.1276

if.end.1276:                                      ; preds = %do.end.1275, %do.body.1259
  br label %do.end.1277

do.end.1277:                                      ; preds = %if.end.1276
  br label %if.end.1279

if.else.1278:                                     ; preds = %if.then.1240
  %758 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %758, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.281, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1279:                                      ; preds = %do.end.1277
  %759 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1280 = call i32 @_PyObject_HasAttrId(%struct._object* %759, %struct._Py_Identifier* @PyId_body)
  %tobool1281 = icmp ne i32 %call1280, 0
  br i1 %tobool1281, label %if.then.1282, label %if.else.1342

if.then.1282:                                     ; preds = %if.end.1279
  %760 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1289 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %760, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call1289, %struct._object** %tmp, align 8
  %761 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1290 = icmp eq %struct._object* %761, null
  br i1 %cmp1290, label %if.then.1291, label %if.end.1292

if.then.1291:                                     ; preds = %if.then.1282
  br label %failed

if.end.1292:                                      ; preds = %if.then.1282
  %762 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1293 = getelementptr inbounds %struct._object, %struct._object* %762, i32 0, i32 1
  %763 = load %struct._typeobject*, %struct._typeobject** %ob_type1293, align 8
  %tp_flags1294 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %763, i32 0, i32 19
  %764 = load i64, i64* %tp_flags1294, align 8
  %and1295 = and i64 %764, 33554432
  %cmp1296 = icmp ne i64 %and1295, 0
  br i1 %cmp1296, label %if.end.1301, label %if.then.1297

if.then.1297:                                     ; preds = %if.end.1292
  %765 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %766 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1298 = getelementptr inbounds %struct._object, %struct._object* %766, i32 0, i32 1
  %767 = load %struct._typeobject*, %struct._typeobject** %ob_type1298, align 8
  %tp_name1299 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %767, i32 0, i32 1
  %768 = load i8*, i8** %tp_name1299, align 8
  %call1300 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %765, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.282, i32 0, i32 0), i8* %768)
  br label %failed

if.end.1301:                                      ; preds = %if.end.1292
  %769 = load %struct._object*, %struct._object** %tmp, align 8
  %770 = bitcast %struct._object* %769 to %struct.PyVarObject*
  %ob_size1302 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %770, i32 0, i32 1
  %771 = load i64, i64* %ob_size1302, align 8
  store i64 %771, i64* %len1286, align 8
  %772 = load i64, i64* %len1286, align 8
  %773 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1303 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %772, %struct._arena* %773)
  store %struct.asdl_seq* %call1303, %struct.asdl_seq** %body1243, align 8
  %774 = load %struct.asdl_seq*, %struct.asdl_seq** %body1243, align 8
  %cmp1304 = icmp eq %struct.asdl_seq* %774, null
  br i1 %cmp1304, label %if.then.1305, label %if.end.1306

if.then.1305:                                     ; preds = %if.end.1301
  br label %failed

if.end.1306:                                      ; preds = %if.end.1301
  store i64 0, i64* %i1288, align 8
  br label %for.cond.1307

for.cond.1307:                                    ; preds = %for.inc.1320, %if.end.1306
  %775 = load i64, i64* %i1288, align 8
  %776 = load i64, i64* %len1286, align 8
  %cmp1308 = icmp slt i64 %775, %776
  br i1 %cmp1308, label %for.body.1309, label %for.end.1322

for.body.1309:                                    ; preds = %for.cond.1307
  %777 = load i64, i64* %i1288, align 8
  %778 = load %struct._object*, %struct._object** %tmp, align 8
  %779 = bitcast %struct._object* %778 to %struct.PyListObject*
  %ob_item1312 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %779, i32 0, i32 1
  %780 = load %struct._object**, %struct._object*** %ob_item1312, align 8
  %arrayidx1313 = getelementptr %struct._object*, %struct._object** %780, i64 %777
  %781 = load %struct._object*, %struct._object** %arrayidx1313, align 8
  %782 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1314 = call i32 @obj2ast_stmt(%struct._object* %781, %struct._stmt** %value1311, %struct._arena* %782)
  store i32 %call1314, i32* %res1284, align 4
  %783 = load i32, i32* %res1284, align 4
  %cmp1315 = icmp ne i32 %783, 0
  br i1 %cmp1315, label %if.then.1316, label %if.end.1317

if.then.1316:                                     ; preds = %for.body.1309
  br label %failed

if.end.1317:                                      ; preds = %for.body.1309
  %784 = load %struct._stmt*, %struct._stmt** %value1311, align 8
  %785 = bitcast %struct._stmt* %784 to i8*
  %786 = load i64, i64* %i1288, align 8
  %787 = load %struct.asdl_seq*, %struct.asdl_seq** %body1243, align 8
  %elements1318 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %787, i32 0, i32 1
  %arrayidx1319 = getelementptr [1 x i8*], [1 x i8*]* %elements1318, i32 0, i64 %786
  store i8* %785, i8** %arrayidx1319, align 8
  br label %for.inc.1320

for.inc.1320:                                     ; preds = %if.end.1317
  %788 = load i64, i64* %i1288, align 8
  %inc1321 = add i64 %788, 1
  store i64 %inc1321, i64* %i1288, align 8
  br label %for.cond.1307

for.end.1322:                                     ; preds = %for.cond.1307
  br label %do.body.1323

do.body.1323:                                     ; preds = %for.end.1322
  %789 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %789, %struct._object** %_py_tmp1325, align 8
  %790 = load %struct._object*, %struct._object** %_py_tmp1325, align 8
  %cmp1326 = icmp ne %struct._object* %790, null
  br i1 %cmp1326, label %if.then.1327, label %if.end.1340

if.then.1327:                                     ; preds = %do.body.1323
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1328

do.body.1328:                                     ; preds = %if.then.1327
  %791 = load %struct._object*, %struct._object** %_py_tmp1325, align 8
  store %struct._object* %791, %struct._object** %_py_decref_tmp1330, align 8
  %792 = load %struct._object*, %struct._object** %_py_decref_tmp1330, align 8
  %ob_refcnt1331 = getelementptr inbounds %struct._object, %struct._object* %792, i32 0, i32 0
  %793 = load i64, i64* %ob_refcnt1331, align 8
  %dec1332 = add i64 %793, -1
  store i64 %dec1332, i64* %ob_refcnt1331, align 8
  %cmp1333 = icmp ne i64 %dec1332, 0
  br i1 %cmp1333, label %if.then.1334, label %if.else.1335

if.then.1334:                                     ; preds = %do.body.1328
  br label %if.end.1338

if.else.1335:                                     ; preds = %do.body.1328
  %794 = load %struct._object*, %struct._object** %_py_decref_tmp1330, align 8
  %ob_type1336 = getelementptr inbounds %struct._object, %struct._object* %794, i32 0, i32 1
  %795 = load %struct._typeobject*, %struct._typeobject** %ob_type1336, align 8
  %tp_dealloc1337 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %795, i32 0, i32 4
  %796 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1337, align 8
  %797 = load %struct._object*, %struct._object** %_py_decref_tmp1330, align 8
  call void %796(%struct._object* %797)
  br label %if.end.1338

if.end.1338:                                      ; preds = %if.else.1335, %if.then.1334
  br label %do.end.1339

do.end.1339:                                      ; preds = %if.end.1338
  br label %if.end.1340

if.end.1340:                                      ; preds = %do.end.1339, %do.body.1323
  br label %do.end.1341

do.end.1341:                                      ; preds = %if.end.1340
  br label %if.end.1343

if.else.1342:                                     ; preds = %if.end.1279
  %798 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %798, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.283, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1343:                                      ; preds = %do.end.1341
  %799 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1344 = call i32 @_PyObject_HasAttrId(%struct._object* %799, %struct._Py_Identifier* @PyId_orelse)
  %tobool1345 = icmp ne i32 %call1344, 0
  br i1 %tobool1345, label %if.then.1346, label %if.else.1406

if.then.1346:                                     ; preds = %if.end.1343
  %800 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1353 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %800, %struct._Py_Identifier* @PyId_orelse)
  store %struct._object* %call1353, %struct._object** %tmp, align 8
  %801 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1354 = icmp eq %struct._object* %801, null
  br i1 %cmp1354, label %if.then.1355, label %if.end.1356

if.then.1355:                                     ; preds = %if.then.1346
  br label %failed

if.end.1356:                                      ; preds = %if.then.1346
  %802 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1357 = getelementptr inbounds %struct._object, %struct._object* %802, i32 0, i32 1
  %803 = load %struct._typeobject*, %struct._typeobject** %ob_type1357, align 8
  %tp_flags1358 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %803, i32 0, i32 19
  %804 = load i64, i64* %tp_flags1358, align 8
  %and1359 = and i64 %804, 33554432
  %cmp1360 = icmp ne i64 %and1359, 0
  br i1 %cmp1360, label %if.end.1365, label %if.then.1361

if.then.1361:                                     ; preds = %if.end.1356
  %805 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %806 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1362 = getelementptr inbounds %struct._object, %struct._object* %806, i32 0, i32 1
  %807 = load %struct._typeobject*, %struct._typeobject** %ob_type1362, align 8
  %tp_name1363 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %807, i32 0, i32 1
  %808 = load i8*, i8** %tp_name1363, align 8
  %call1364 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %805, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.284, i32 0, i32 0), i8* %808)
  br label %failed

if.end.1365:                                      ; preds = %if.end.1356
  %809 = load %struct._object*, %struct._object** %tmp, align 8
  %810 = bitcast %struct._object* %809 to %struct.PyVarObject*
  %ob_size1366 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %810, i32 0, i32 1
  %811 = load i64, i64* %ob_size1366, align 8
  store i64 %811, i64* %len1350, align 8
  %812 = load i64, i64* %len1350, align 8
  %813 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1367 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %812, %struct._arena* %813)
  store %struct.asdl_seq* %call1367, %struct.asdl_seq** %orelse1245, align 8
  %814 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse1245, align 8
  %cmp1368 = icmp eq %struct.asdl_seq* %814, null
  br i1 %cmp1368, label %if.then.1369, label %if.end.1370

if.then.1369:                                     ; preds = %if.end.1365
  br label %failed

if.end.1370:                                      ; preds = %if.end.1365
  store i64 0, i64* %i1352, align 8
  br label %for.cond.1371

for.cond.1371:                                    ; preds = %for.inc.1384, %if.end.1370
  %815 = load i64, i64* %i1352, align 8
  %816 = load i64, i64* %len1350, align 8
  %cmp1372 = icmp slt i64 %815, %816
  br i1 %cmp1372, label %for.body.1373, label %for.end.1386

for.body.1373:                                    ; preds = %for.cond.1371
  %817 = load i64, i64* %i1352, align 8
  %818 = load %struct._object*, %struct._object** %tmp, align 8
  %819 = bitcast %struct._object* %818 to %struct.PyListObject*
  %ob_item1376 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %819, i32 0, i32 1
  %820 = load %struct._object**, %struct._object*** %ob_item1376, align 8
  %arrayidx1377 = getelementptr %struct._object*, %struct._object** %820, i64 %817
  %821 = load %struct._object*, %struct._object** %arrayidx1377, align 8
  %822 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1378 = call i32 @obj2ast_stmt(%struct._object* %821, %struct._stmt** %value1375, %struct._arena* %822)
  store i32 %call1378, i32* %res1348, align 4
  %823 = load i32, i32* %res1348, align 4
  %cmp1379 = icmp ne i32 %823, 0
  br i1 %cmp1379, label %if.then.1380, label %if.end.1381

if.then.1380:                                     ; preds = %for.body.1373
  br label %failed

if.end.1381:                                      ; preds = %for.body.1373
  %824 = load %struct._stmt*, %struct._stmt** %value1375, align 8
  %825 = bitcast %struct._stmt* %824 to i8*
  %826 = load i64, i64* %i1352, align 8
  %827 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse1245, align 8
  %elements1382 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %827, i32 0, i32 1
  %arrayidx1383 = getelementptr [1 x i8*], [1 x i8*]* %elements1382, i32 0, i64 %826
  store i8* %825, i8** %arrayidx1383, align 8
  br label %for.inc.1384

for.inc.1384:                                     ; preds = %if.end.1381
  %828 = load i64, i64* %i1352, align 8
  %inc1385 = add i64 %828, 1
  store i64 %inc1385, i64* %i1352, align 8
  br label %for.cond.1371

for.end.1386:                                     ; preds = %for.cond.1371
  br label %do.body.1387

do.body.1387:                                     ; preds = %for.end.1386
  %829 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %829, %struct._object** %_py_tmp1389, align 8
  %830 = load %struct._object*, %struct._object** %_py_tmp1389, align 8
  %cmp1390 = icmp ne %struct._object* %830, null
  br i1 %cmp1390, label %if.then.1391, label %if.end.1404

if.then.1391:                                     ; preds = %do.body.1387
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1392

do.body.1392:                                     ; preds = %if.then.1391
  %831 = load %struct._object*, %struct._object** %_py_tmp1389, align 8
  store %struct._object* %831, %struct._object** %_py_decref_tmp1394, align 8
  %832 = load %struct._object*, %struct._object** %_py_decref_tmp1394, align 8
  %ob_refcnt1395 = getelementptr inbounds %struct._object, %struct._object* %832, i32 0, i32 0
  %833 = load i64, i64* %ob_refcnt1395, align 8
  %dec1396 = add i64 %833, -1
  store i64 %dec1396, i64* %ob_refcnt1395, align 8
  %cmp1397 = icmp ne i64 %dec1396, 0
  br i1 %cmp1397, label %if.then.1398, label %if.else.1399

if.then.1398:                                     ; preds = %do.body.1392
  br label %if.end.1402

if.else.1399:                                     ; preds = %do.body.1392
  %834 = load %struct._object*, %struct._object** %_py_decref_tmp1394, align 8
  %ob_type1400 = getelementptr inbounds %struct._object, %struct._object* %834, i32 0, i32 1
  %835 = load %struct._typeobject*, %struct._typeobject** %ob_type1400, align 8
  %tp_dealloc1401 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %835, i32 0, i32 4
  %836 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1401, align 8
  %837 = load %struct._object*, %struct._object** %_py_decref_tmp1394, align 8
  call void %836(%struct._object* %837)
  br label %if.end.1402

if.end.1402:                                      ; preds = %if.else.1399, %if.then.1398
  br label %do.end.1403

do.end.1403:                                      ; preds = %if.end.1402
  br label %if.end.1404

if.end.1404:                                      ; preds = %do.end.1403, %do.body.1387
  br label %do.end.1405

do.end.1405:                                      ; preds = %if.end.1404
  br label %if.end.1407

if.else.1406:                                     ; preds = %if.end.1343
  %838 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %838, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.285, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1407:                                      ; preds = %do.end.1405
  %839 = load %struct._expr*, %struct._expr** %test, align 8
  %840 = load %struct.asdl_seq*, %struct.asdl_seq** %body1243, align 8
  %841 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse1245, align 8
  %842 = load i32, i32* %lineno, align 4
  %843 = load i32, i32* %col_offset, align 4
  %844 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1408 = call %struct._stmt* @_Py_While(%struct._expr* %839, %struct.asdl_seq* %840, %struct.asdl_seq* %841, i32 %842, i32 %843, %struct._arena* %844)
  %845 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call1408, %struct._stmt** %845, align 8
  %846 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %847 = load %struct._stmt*, %struct._stmt** %846, align 8
  %cmp1409 = icmp eq %struct._stmt* %847, null
  br i1 %cmp1409, label %if.then.1410, label %if.end.1411

if.then.1410:                                     ; preds = %if.end.1407
  br label %failed

if.end.1411:                                      ; preds = %if.end.1407
  store i32 0, i32* %retval
  br label %return

if.end.1412:                                      ; preds = %if.end.1238
  %848 = load %struct._object*, %struct._object** %obj.addr, align 8
  %849 = load %struct._typeobject*, %struct._typeobject** @If_type, align 8
  %850 = bitcast %struct._typeobject* %849 to %struct._object*
  %call1413 = call i32 @PyObject_IsInstance(%struct._object* %848, %struct._object* %850)
  store i32 %call1413, i32* %isinstance, align 4
  %851 = load i32, i32* %isinstance, align 4
  %cmp1414 = icmp eq i32 %851, -1
  br i1 %cmp1414, label %if.then.1415, label %if.end.1416

if.then.1415:                                     ; preds = %if.end.1412
  store i32 1, i32* %retval
  br label %return

if.end.1416:                                      ; preds = %if.end.1412
  %852 = load i32, i32* %isinstance, align 4
  %tobool1417 = icmp ne i32 %852, 0
  br i1 %tobool1417, label %if.then.1418, label %if.end.1591

if.then.1418:                                     ; preds = %if.end.1416
  %853 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1425 = call i32 @_PyObject_HasAttrId(%struct._object* %853, %struct._Py_Identifier* @PyId_test)
  %tobool1426 = icmp ne i32 %call1425, 0
  br i1 %tobool1426, label %if.then.1427, label %if.else.1457

if.then.1427:                                     ; preds = %if.then.1418
  %854 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1430 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %854, %struct._Py_Identifier* @PyId_test)
  store %struct._object* %call1430, %struct._object** %tmp, align 8
  %855 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1431 = icmp eq %struct._object* %855, null
  br i1 %cmp1431, label %if.then.1432, label %if.end.1433

if.then.1432:                                     ; preds = %if.then.1427
  br label %failed

if.end.1433:                                      ; preds = %if.then.1427
  %856 = load %struct._object*, %struct._object** %tmp, align 8
  %857 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1434 = call i32 @obj2ast_expr(%struct._object* %856, %struct._expr** %test1420, %struct._arena* %857)
  store i32 %call1434, i32* %res1429, align 4
  %858 = load i32, i32* %res1429, align 4
  %cmp1435 = icmp ne i32 %858, 0
  br i1 %cmp1435, label %if.then.1436, label %if.end.1437

if.then.1436:                                     ; preds = %if.end.1433
  br label %failed

if.end.1437:                                      ; preds = %if.end.1433
  br label %do.body.1438

do.body.1438:                                     ; preds = %if.end.1437
  %859 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %859, %struct._object** %_py_tmp1440, align 8
  %860 = load %struct._object*, %struct._object** %_py_tmp1440, align 8
  %cmp1441 = icmp ne %struct._object* %860, null
  br i1 %cmp1441, label %if.then.1442, label %if.end.1455

if.then.1442:                                     ; preds = %do.body.1438
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1443

do.body.1443:                                     ; preds = %if.then.1442
  %861 = load %struct._object*, %struct._object** %_py_tmp1440, align 8
  store %struct._object* %861, %struct._object** %_py_decref_tmp1445, align 8
  %862 = load %struct._object*, %struct._object** %_py_decref_tmp1445, align 8
  %ob_refcnt1446 = getelementptr inbounds %struct._object, %struct._object* %862, i32 0, i32 0
  %863 = load i64, i64* %ob_refcnt1446, align 8
  %dec1447 = add i64 %863, -1
  store i64 %dec1447, i64* %ob_refcnt1446, align 8
  %cmp1448 = icmp ne i64 %dec1447, 0
  br i1 %cmp1448, label %if.then.1449, label %if.else.1450

if.then.1449:                                     ; preds = %do.body.1443
  br label %if.end.1453

if.else.1450:                                     ; preds = %do.body.1443
  %864 = load %struct._object*, %struct._object** %_py_decref_tmp1445, align 8
  %ob_type1451 = getelementptr inbounds %struct._object, %struct._object* %864, i32 0, i32 1
  %865 = load %struct._typeobject*, %struct._typeobject** %ob_type1451, align 8
  %tp_dealloc1452 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %865, i32 0, i32 4
  %866 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1452, align 8
  %867 = load %struct._object*, %struct._object** %_py_decref_tmp1445, align 8
  call void %866(%struct._object* %867)
  br label %if.end.1453

if.end.1453:                                      ; preds = %if.else.1450, %if.then.1449
  br label %do.end.1454

do.end.1454:                                      ; preds = %if.end.1453
  br label %if.end.1455

if.end.1455:                                      ; preds = %do.end.1454, %do.body.1438
  br label %do.end.1456

do.end.1456:                                      ; preds = %if.end.1455
  br label %if.end.1458

if.else.1457:                                     ; preds = %if.then.1418
  %868 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %868, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.286, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1458:                                      ; preds = %do.end.1456
  %869 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1459 = call i32 @_PyObject_HasAttrId(%struct._object* %869, %struct._Py_Identifier* @PyId_body)
  %tobool1460 = icmp ne i32 %call1459, 0
  br i1 %tobool1460, label %if.then.1461, label %if.else.1521

if.then.1461:                                     ; preds = %if.end.1458
  %870 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1468 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %870, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call1468, %struct._object** %tmp, align 8
  %871 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1469 = icmp eq %struct._object* %871, null
  br i1 %cmp1469, label %if.then.1470, label %if.end.1471

if.then.1470:                                     ; preds = %if.then.1461
  br label %failed

if.end.1471:                                      ; preds = %if.then.1461
  %872 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1472 = getelementptr inbounds %struct._object, %struct._object* %872, i32 0, i32 1
  %873 = load %struct._typeobject*, %struct._typeobject** %ob_type1472, align 8
  %tp_flags1473 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %873, i32 0, i32 19
  %874 = load i64, i64* %tp_flags1473, align 8
  %and1474 = and i64 %874, 33554432
  %cmp1475 = icmp ne i64 %and1474, 0
  br i1 %cmp1475, label %if.end.1480, label %if.then.1476

if.then.1476:                                     ; preds = %if.end.1471
  %875 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %876 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1477 = getelementptr inbounds %struct._object, %struct._object* %876, i32 0, i32 1
  %877 = load %struct._typeobject*, %struct._typeobject** %ob_type1477, align 8
  %tp_name1478 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %877, i32 0, i32 1
  %878 = load i8*, i8** %tp_name1478, align 8
  %call1479 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %875, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.287, i32 0, i32 0), i8* %878)
  br label %failed

if.end.1480:                                      ; preds = %if.end.1471
  %879 = load %struct._object*, %struct._object** %tmp, align 8
  %880 = bitcast %struct._object* %879 to %struct.PyVarObject*
  %ob_size1481 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %880, i32 0, i32 1
  %881 = load i64, i64* %ob_size1481, align 8
  store i64 %881, i64* %len1465, align 8
  %882 = load i64, i64* %len1465, align 8
  %883 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1482 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %882, %struct._arena* %883)
  store %struct.asdl_seq* %call1482, %struct.asdl_seq** %body1422, align 8
  %884 = load %struct.asdl_seq*, %struct.asdl_seq** %body1422, align 8
  %cmp1483 = icmp eq %struct.asdl_seq* %884, null
  br i1 %cmp1483, label %if.then.1484, label %if.end.1485

if.then.1484:                                     ; preds = %if.end.1480
  br label %failed

if.end.1485:                                      ; preds = %if.end.1480
  store i64 0, i64* %i1467, align 8
  br label %for.cond.1486

for.cond.1486:                                    ; preds = %for.inc.1499, %if.end.1485
  %885 = load i64, i64* %i1467, align 8
  %886 = load i64, i64* %len1465, align 8
  %cmp1487 = icmp slt i64 %885, %886
  br i1 %cmp1487, label %for.body.1488, label %for.end.1501

for.body.1488:                                    ; preds = %for.cond.1486
  %887 = load i64, i64* %i1467, align 8
  %888 = load %struct._object*, %struct._object** %tmp, align 8
  %889 = bitcast %struct._object* %888 to %struct.PyListObject*
  %ob_item1491 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %889, i32 0, i32 1
  %890 = load %struct._object**, %struct._object*** %ob_item1491, align 8
  %arrayidx1492 = getelementptr %struct._object*, %struct._object** %890, i64 %887
  %891 = load %struct._object*, %struct._object** %arrayidx1492, align 8
  %892 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1493 = call i32 @obj2ast_stmt(%struct._object* %891, %struct._stmt** %value1490, %struct._arena* %892)
  store i32 %call1493, i32* %res1463, align 4
  %893 = load i32, i32* %res1463, align 4
  %cmp1494 = icmp ne i32 %893, 0
  br i1 %cmp1494, label %if.then.1495, label %if.end.1496

if.then.1495:                                     ; preds = %for.body.1488
  br label %failed

if.end.1496:                                      ; preds = %for.body.1488
  %894 = load %struct._stmt*, %struct._stmt** %value1490, align 8
  %895 = bitcast %struct._stmt* %894 to i8*
  %896 = load i64, i64* %i1467, align 8
  %897 = load %struct.asdl_seq*, %struct.asdl_seq** %body1422, align 8
  %elements1497 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %897, i32 0, i32 1
  %arrayidx1498 = getelementptr [1 x i8*], [1 x i8*]* %elements1497, i32 0, i64 %896
  store i8* %895, i8** %arrayidx1498, align 8
  br label %for.inc.1499

for.inc.1499:                                     ; preds = %if.end.1496
  %898 = load i64, i64* %i1467, align 8
  %inc1500 = add i64 %898, 1
  store i64 %inc1500, i64* %i1467, align 8
  br label %for.cond.1486

for.end.1501:                                     ; preds = %for.cond.1486
  br label %do.body.1502

do.body.1502:                                     ; preds = %for.end.1501
  %899 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %899, %struct._object** %_py_tmp1504, align 8
  %900 = load %struct._object*, %struct._object** %_py_tmp1504, align 8
  %cmp1505 = icmp ne %struct._object* %900, null
  br i1 %cmp1505, label %if.then.1506, label %if.end.1519

if.then.1506:                                     ; preds = %do.body.1502
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1507

do.body.1507:                                     ; preds = %if.then.1506
  %901 = load %struct._object*, %struct._object** %_py_tmp1504, align 8
  store %struct._object* %901, %struct._object** %_py_decref_tmp1509, align 8
  %902 = load %struct._object*, %struct._object** %_py_decref_tmp1509, align 8
  %ob_refcnt1510 = getelementptr inbounds %struct._object, %struct._object* %902, i32 0, i32 0
  %903 = load i64, i64* %ob_refcnt1510, align 8
  %dec1511 = add i64 %903, -1
  store i64 %dec1511, i64* %ob_refcnt1510, align 8
  %cmp1512 = icmp ne i64 %dec1511, 0
  br i1 %cmp1512, label %if.then.1513, label %if.else.1514

if.then.1513:                                     ; preds = %do.body.1507
  br label %if.end.1517

if.else.1514:                                     ; preds = %do.body.1507
  %904 = load %struct._object*, %struct._object** %_py_decref_tmp1509, align 8
  %ob_type1515 = getelementptr inbounds %struct._object, %struct._object* %904, i32 0, i32 1
  %905 = load %struct._typeobject*, %struct._typeobject** %ob_type1515, align 8
  %tp_dealloc1516 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %905, i32 0, i32 4
  %906 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1516, align 8
  %907 = load %struct._object*, %struct._object** %_py_decref_tmp1509, align 8
  call void %906(%struct._object* %907)
  br label %if.end.1517

if.end.1517:                                      ; preds = %if.else.1514, %if.then.1513
  br label %do.end.1518

do.end.1518:                                      ; preds = %if.end.1517
  br label %if.end.1519

if.end.1519:                                      ; preds = %do.end.1518, %do.body.1502
  br label %do.end.1520

do.end.1520:                                      ; preds = %if.end.1519
  br label %if.end.1522

if.else.1521:                                     ; preds = %if.end.1458
  %908 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %908, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.288, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1522:                                      ; preds = %do.end.1520
  %909 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1523 = call i32 @_PyObject_HasAttrId(%struct._object* %909, %struct._Py_Identifier* @PyId_orelse)
  %tobool1524 = icmp ne i32 %call1523, 0
  br i1 %tobool1524, label %if.then.1525, label %if.else.1585

if.then.1525:                                     ; preds = %if.end.1522
  %910 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1532 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %910, %struct._Py_Identifier* @PyId_orelse)
  store %struct._object* %call1532, %struct._object** %tmp, align 8
  %911 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1533 = icmp eq %struct._object* %911, null
  br i1 %cmp1533, label %if.then.1534, label %if.end.1535

if.then.1534:                                     ; preds = %if.then.1525
  br label %failed

if.end.1535:                                      ; preds = %if.then.1525
  %912 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1536 = getelementptr inbounds %struct._object, %struct._object* %912, i32 0, i32 1
  %913 = load %struct._typeobject*, %struct._typeobject** %ob_type1536, align 8
  %tp_flags1537 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %913, i32 0, i32 19
  %914 = load i64, i64* %tp_flags1537, align 8
  %and1538 = and i64 %914, 33554432
  %cmp1539 = icmp ne i64 %and1538, 0
  br i1 %cmp1539, label %if.end.1544, label %if.then.1540

if.then.1540:                                     ; preds = %if.end.1535
  %915 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %916 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1541 = getelementptr inbounds %struct._object, %struct._object* %916, i32 0, i32 1
  %917 = load %struct._typeobject*, %struct._typeobject** %ob_type1541, align 8
  %tp_name1542 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %917, i32 0, i32 1
  %918 = load i8*, i8** %tp_name1542, align 8
  %call1543 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %915, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.289, i32 0, i32 0), i8* %918)
  br label %failed

if.end.1544:                                      ; preds = %if.end.1535
  %919 = load %struct._object*, %struct._object** %tmp, align 8
  %920 = bitcast %struct._object* %919 to %struct.PyVarObject*
  %ob_size1545 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %920, i32 0, i32 1
  %921 = load i64, i64* %ob_size1545, align 8
  store i64 %921, i64* %len1529, align 8
  %922 = load i64, i64* %len1529, align 8
  %923 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1546 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %922, %struct._arena* %923)
  store %struct.asdl_seq* %call1546, %struct.asdl_seq** %orelse1424, align 8
  %924 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse1424, align 8
  %cmp1547 = icmp eq %struct.asdl_seq* %924, null
  br i1 %cmp1547, label %if.then.1548, label %if.end.1549

if.then.1548:                                     ; preds = %if.end.1544
  br label %failed

if.end.1549:                                      ; preds = %if.end.1544
  store i64 0, i64* %i1531, align 8
  br label %for.cond.1550

for.cond.1550:                                    ; preds = %for.inc.1563, %if.end.1549
  %925 = load i64, i64* %i1531, align 8
  %926 = load i64, i64* %len1529, align 8
  %cmp1551 = icmp slt i64 %925, %926
  br i1 %cmp1551, label %for.body.1552, label %for.end.1565

for.body.1552:                                    ; preds = %for.cond.1550
  %927 = load i64, i64* %i1531, align 8
  %928 = load %struct._object*, %struct._object** %tmp, align 8
  %929 = bitcast %struct._object* %928 to %struct.PyListObject*
  %ob_item1555 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %929, i32 0, i32 1
  %930 = load %struct._object**, %struct._object*** %ob_item1555, align 8
  %arrayidx1556 = getelementptr %struct._object*, %struct._object** %930, i64 %927
  %931 = load %struct._object*, %struct._object** %arrayidx1556, align 8
  %932 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1557 = call i32 @obj2ast_stmt(%struct._object* %931, %struct._stmt** %value1554, %struct._arena* %932)
  store i32 %call1557, i32* %res1527, align 4
  %933 = load i32, i32* %res1527, align 4
  %cmp1558 = icmp ne i32 %933, 0
  br i1 %cmp1558, label %if.then.1559, label %if.end.1560

if.then.1559:                                     ; preds = %for.body.1552
  br label %failed

if.end.1560:                                      ; preds = %for.body.1552
  %934 = load %struct._stmt*, %struct._stmt** %value1554, align 8
  %935 = bitcast %struct._stmt* %934 to i8*
  %936 = load i64, i64* %i1531, align 8
  %937 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse1424, align 8
  %elements1561 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %937, i32 0, i32 1
  %arrayidx1562 = getelementptr [1 x i8*], [1 x i8*]* %elements1561, i32 0, i64 %936
  store i8* %935, i8** %arrayidx1562, align 8
  br label %for.inc.1563

for.inc.1563:                                     ; preds = %if.end.1560
  %938 = load i64, i64* %i1531, align 8
  %inc1564 = add i64 %938, 1
  store i64 %inc1564, i64* %i1531, align 8
  br label %for.cond.1550

for.end.1565:                                     ; preds = %for.cond.1550
  br label %do.body.1566

do.body.1566:                                     ; preds = %for.end.1565
  %939 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %939, %struct._object** %_py_tmp1568, align 8
  %940 = load %struct._object*, %struct._object** %_py_tmp1568, align 8
  %cmp1569 = icmp ne %struct._object* %940, null
  br i1 %cmp1569, label %if.then.1570, label %if.end.1583

if.then.1570:                                     ; preds = %do.body.1566
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1571

do.body.1571:                                     ; preds = %if.then.1570
  %941 = load %struct._object*, %struct._object** %_py_tmp1568, align 8
  store %struct._object* %941, %struct._object** %_py_decref_tmp1573, align 8
  %942 = load %struct._object*, %struct._object** %_py_decref_tmp1573, align 8
  %ob_refcnt1574 = getelementptr inbounds %struct._object, %struct._object* %942, i32 0, i32 0
  %943 = load i64, i64* %ob_refcnt1574, align 8
  %dec1575 = add i64 %943, -1
  store i64 %dec1575, i64* %ob_refcnt1574, align 8
  %cmp1576 = icmp ne i64 %dec1575, 0
  br i1 %cmp1576, label %if.then.1577, label %if.else.1578

if.then.1577:                                     ; preds = %do.body.1571
  br label %if.end.1581

if.else.1578:                                     ; preds = %do.body.1571
  %944 = load %struct._object*, %struct._object** %_py_decref_tmp1573, align 8
  %ob_type1579 = getelementptr inbounds %struct._object, %struct._object* %944, i32 0, i32 1
  %945 = load %struct._typeobject*, %struct._typeobject** %ob_type1579, align 8
  %tp_dealloc1580 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %945, i32 0, i32 4
  %946 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1580, align 8
  %947 = load %struct._object*, %struct._object** %_py_decref_tmp1573, align 8
  call void %946(%struct._object* %947)
  br label %if.end.1581

if.end.1581:                                      ; preds = %if.else.1578, %if.then.1577
  br label %do.end.1582

do.end.1582:                                      ; preds = %if.end.1581
  br label %if.end.1583

if.end.1583:                                      ; preds = %do.end.1582, %do.body.1566
  br label %do.end.1584

do.end.1584:                                      ; preds = %if.end.1583
  br label %if.end.1586

if.else.1585:                                     ; preds = %if.end.1522
  %948 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %948, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.290, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1586:                                      ; preds = %do.end.1584
  %949 = load %struct._expr*, %struct._expr** %test1420, align 8
  %950 = load %struct.asdl_seq*, %struct.asdl_seq** %body1422, align 8
  %951 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse1424, align 8
  %952 = load i32, i32* %lineno, align 4
  %953 = load i32, i32* %col_offset, align 4
  %954 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1587 = call %struct._stmt* @_Py_If(%struct._expr* %949, %struct.asdl_seq* %950, %struct.asdl_seq* %951, i32 %952, i32 %953, %struct._arena* %954)
  %955 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call1587, %struct._stmt** %955, align 8
  %956 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %957 = load %struct._stmt*, %struct._stmt** %956, align 8
  %cmp1588 = icmp eq %struct._stmt* %957, null
  br i1 %cmp1588, label %if.then.1589, label %if.end.1590

if.then.1589:                                     ; preds = %if.end.1586
  br label %failed

if.end.1590:                                      ; preds = %if.end.1586
  store i32 0, i32* %retval
  br label %return

if.end.1591:                                      ; preds = %if.end.1416
  %958 = load %struct._object*, %struct._object** %obj.addr, align 8
  %959 = load %struct._typeobject*, %struct._typeobject** @With_type, align 8
  %960 = bitcast %struct._typeobject* %959 to %struct._object*
  %call1592 = call i32 @PyObject_IsInstance(%struct._object* %958, %struct._object* %960)
  store i32 %call1592, i32* %isinstance, align 4
  %961 = load i32, i32* %isinstance, align 4
  %cmp1593 = icmp eq i32 %961, -1
  br i1 %cmp1593, label %if.then.1594, label %if.end.1595

if.then.1594:                                     ; preds = %if.end.1591
  store i32 1, i32* %retval
  br label %return

if.end.1595:                                      ; preds = %if.end.1591
  %962 = load i32, i32* %isinstance, align 4
  %tobool1596 = icmp ne i32 %962, 0
  br i1 %tobool1596, label %if.then.1597, label %if.end.1733

if.then.1597:                                     ; preds = %if.end.1595
  %963 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1601 = call i32 @_PyObject_HasAttrId(%struct._object* %963, %struct._Py_Identifier* @PyId_items)
  %tobool1602 = icmp ne i32 %call1601, 0
  br i1 %tobool1602, label %if.then.1603, label %if.else.1663

if.then.1603:                                     ; preds = %if.then.1597
  %964 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1610 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %964, %struct._Py_Identifier* @PyId_items)
  store %struct._object* %call1610, %struct._object** %tmp, align 8
  %965 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1611 = icmp eq %struct._object* %965, null
  br i1 %cmp1611, label %if.then.1612, label %if.end.1613

if.then.1612:                                     ; preds = %if.then.1603
  br label %failed

if.end.1613:                                      ; preds = %if.then.1603
  %966 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1614 = getelementptr inbounds %struct._object, %struct._object* %966, i32 0, i32 1
  %967 = load %struct._typeobject*, %struct._typeobject** %ob_type1614, align 8
  %tp_flags1615 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %967, i32 0, i32 19
  %968 = load i64, i64* %tp_flags1615, align 8
  %and1616 = and i64 %968, 33554432
  %cmp1617 = icmp ne i64 %and1616, 0
  br i1 %cmp1617, label %if.end.1622, label %if.then.1618

if.then.1618:                                     ; preds = %if.end.1613
  %969 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %970 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1619 = getelementptr inbounds %struct._object, %struct._object* %970, i32 0, i32 1
  %971 = load %struct._typeobject*, %struct._typeobject** %ob_type1619, align 8
  %tp_name1620 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %971, i32 0, i32 1
  %972 = load i8*, i8** %tp_name1620, align 8
  %call1621 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %969, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.291, i32 0, i32 0), i8* %972)
  br label %failed

if.end.1622:                                      ; preds = %if.end.1613
  %973 = load %struct._object*, %struct._object** %tmp, align 8
  %974 = bitcast %struct._object* %973 to %struct.PyVarObject*
  %ob_size1623 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %974, i32 0, i32 1
  %975 = load i64, i64* %ob_size1623, align 8
  store i64 %975, i64* %len1607, align 8
  %976 = load i64, i64* %len1607, align 8
  %977 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1624 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %976, %struct._arena* %977)
  store %struct.asdl_seq* %call1624, %struct.asdl_seq** %items, align 8
  %978 = load %struct.asdl_seq*, %struct.asdl_seq** %items, align 8
  %cmp1625 = icmp eq %struct.asdl_seq* %978, null
  br i1 %cmp1625, label %if.then.1626, label %if.end.1627

if.then.1626:                                     ; preds = %if.end.1622
  br label %failed

if.end.1627:                                      ; preds = %if.end.1622
  store i64 0, i64* %i1609, align 8
  br label %for.cond.1628

for.cond.1628:                                    ; preds = %for.inc.1641, %if.end.1627
  %979 = load i64, i64* %i1609, align 8
  %980 = load i64, i64* %len1607, align 8
  %cmp1629 = icmp slt i64 %979, %980
  br i1 %cmp1629, label %for.body.1630, label %for.end.1643

for.body.1630:                                    ; preds = %for.cond.1628
  %981 = load i64, i64* %i1609, align 8
  %982 = load %struct._object*, %struct._object** %tmp, align 8
  %983 = bitcast %struct._object* %982 to %struct.PyListObject*
  %ob_item1633 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %983, i32 0, i32 1
  %984 = load %struct._object**, %struct._object*** %ob_item1633, align 8
  %arrayidx1634 = getelementptr %struct._object*, %struct._object** %984, i64 %981
  %985 = load %struct._object*, %struct._object** %arrayidx1634, align 8
  %986 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1635 = call i32 @obj2ast_withitem(%struct._object* %985, %struct._withitem** %value1632, %struct._arena* %986)
  store i32 %call1635, i32* %res1605, align 4
  %987 = load i32, i32* %res1605, align 4
  %cmp1636 = icmp ne i32 %987, 0
  br i1 %cmp1636, label %if.then.1637, label %if.end.1638

if.then.1637:                                     ; preds = %for.body.1630
  br label %failed

if.end.1638:                                      ; preds = %for.body.1630
  %988 = load %struct._withitem*, %struct._withitem** %value1632, align 8
  %989 = bitcast %struct._withitem* %988 to i8*
  %990 = load i64, i64* %i1609, align 8
  %991 = load %struct.asdl_seq*, %struct.asdl_seq** %items, align 8
  %elements1639 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %991, i32 0, i32 1
  %arrayidx1640 = getelementptr [1 x i8*], [1 x i8*]* %elements1639, i32 0, i64 %990
  store i8* %989, i8** %arrayidx1640, align 8
  br label %for.inc.1641

for.inc.1641:                                     ; preds = %if.end.1638
  %992 = load i64, i64* %i1609, align 8
  %inc1642 = add i64 %992, 1
  store i64 %inc1642, i64* %i1609, align 8
  br label %for.cond.1628

for.end.1643:                                     ; preds = %for.cond.1628
  br label %do.body.1644

do.body.1644:                                     ; preds = %for.end.1643
  %993 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %993, %struct._object** %_py_tmp1646, align 8
  %994 = load %struct._object*, %struct._object** %_py_tmp1646, align 8
  %cmp1647 = icmp ne %struct._object* %994, null
  br i1 %cmp1647, label %if.then.1648, label %if.end.1661

if.then.1648:                                     ; preds = %do.body.1644
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1649

do.body.1649:                                     ; preds = %if.then.1648
  %995 = load %struct._object*, %struct._object** %_py_tmp1646, align 8
  store %struct._object* %995, %struct._object** %_py_decref_tmp1651, align 8
  %996 = load %struct._object*, %struct._object** %_py_decref_tmp1651, align 8
  %ob_refcnt1652 = getelementptr inbounds %struct._object, %struct._object* %996, i32 0, i32 0
  %997 = load i64, i64* %ob_refcnt1652, align 8
  %dec1653 = add i64 %997, -1
  store i64 %dec1653, i64* %ob_refcnt1652, align 8
  %cmp1654 = icmp ne i64 %dec1653, 0
  br i1 %cmp1654, label %if.then.1655, label %if.else.1656

if.then.1655:                                     ; preds = %do.body.1649
  br label %if.end.1659

if.else.1656:                                     ; preds = %do.body.1649
  %998 = load %struct._object*, %struct._object** %_py_decref_tmp1651, align 8
  %ob_type1657 = getelementptr inbounds %struct._object, %struct._object* %998, i32 0, i32 1
  %999 = load %struct._typeobject*, %struct._typeobject** %ob_type1657, align 8
  %tp_dealloc1658 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %999, i32 0, i32 4
  %1000 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1658, align 8
  %1001 = load %struct._object*, %struct._object** %_py_decref_tmp1651, align 8
  call void %1000(%struct._object* %1001)
  br label %if.end.1659

if.end.1659:                                      ; preds = %if.else.1656, %if.then.1655
  br label %do.end.1660

do.end.1660:                                      ; preds = %if.end.1659
  br label %if.end.1661

if.end.1661:                                      ; preds = %do.end.1660, %do.body.1644
  br label %do.end.1662

do.end.1662:                                      ; preds = %if.end.1661
  br label %if.end.1664

if.else.1663:                                     ; preds = %if.then.1597
  %1002 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1002, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.292, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1664:                                      ; preds = %do.end.1662
  %1003 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1665 = call i32 @_PyObject_HasAttrId(%struct._object* %1003, %struct._Py_Identifier* @PyId_body)
  %tobool1666 = icmp ne i32 %call1665, 0
  br i1 %tobool1666, label %if.then.1667, label %if.else.1727

if.then.1667:                                     ; preds = %if.end.1664
  %1004 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1674 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1004, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call1674, %struct._object** %tmp, align 8
  %1005 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1675 = icmp eq %struct._object* %1005, null
  br i1 %cmp1675, label %if.then.1676, label %if.end.1677

if.then.1676:                                     ; preds = %if.then.1667
  br label %failed

if.end.1677:                                      ; preds = %if.then.1667
  %1006 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1678 = getelementptr inbounds %struct._object, %struct._object* %1006, i32 0, i32 1
  %1007 = load %struct._typeobject*, %struct._typeobject** %ob_type1678, align 8
  %tp_flags1679 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1007, i32 0, i32 19
  %1008 = load i64, i64* %tp_flags1679, align 8
  %and1680 = and i64 %1008, 33554432
  %cmp1681 = icmp ne i64 %and1680, 0
  br i1 %cmp1681, label %if.end.1686, label %if.then.1682

if.then.1682:                                     ; preds = %if.end.1677
  %1009 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1010 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1683 = getelementptr inbounds %struct._object, %struct._object* %1010, i32 0, i32 1
  %1011 = load %struct._typeobject*, %struct._typeobject** %ob_type1683, align 8
  %tp_name1684 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1011, i32 0, i32 1
  %1012 = load i8*, i8** %tp_name1684, align 8
  %call1685 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1009, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.293, i32 0, i32 0), i8* %1012)
  br label %failed

if.end.1686:                                      ; preds = %if.end.1677
  %1013 = load %struct._object*, %struct._object** %tmp, align 8
  %1014 = bitcast %struct._object* %1013 to %struct.PyVarObject*
  %ob_size1687 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1014, i32 0, i32 1
  %1015 = load i64, i64* %ob_size1687, align 8
  store i64 %1015, i64* %len1671, align 8
  %1016 = load i64, i64* %len1671, align 8
  %1017 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1688 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %1016, %struct._arena* %1017)
  store %struct.asdl_seq* %call1688, %struct.asdl_seq** %body1600, align 8
  %1018 = load %struct.asdl_seq*, %struct.asdl_seq** %body1600, align 8
  %cmp1689 = icmp eq %struct.asdl_seq* %1018, null
  br i1 %cmp1689, label %if.then.1690, label %if.end.1691

if.then.1690:                                     ; preds = %if.end.1686
  br label %failed

if.end.1691:                                      ; preds = %if.end.1686
  store i64 0, i64* %i1673, align 8
  br label %for.cond.1692

for.cond.1692:                                    ; preds = %for.inc.1705, %if.end.1691
  %1019 = load i64, i64* %i1673, align 8
  %1020 = load i64, i64* %len1671, align 8
  %cmp1693 = icmp slt i64 %1019, %1020
  br i1 %cmp1693, label %for.body.1694, label %for.end.1707

for.body.1694:                                    ; preds = %for.cond.1692
  %1021 = load i64, i64* %i1673, align 8
  %1022 = load %struct._object*, %struct._object** %tmp, align 8
  %1023 = bitcast %struct._object* %1022 to %struct.PyListObject*
  %ob_item1697 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %1023, i32 0, i32 1
  %1024 = load %struct._object**, %struct._object*** %ob_item1697, align 8
  %arrayidx1698 = getelementptr %struct._object*, %struct._object** %1024, i64 %1021
  %1025 = load %struct._object*, %struct._object** %arrayidx1698, align 8
  %1026 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1699 = call i32 @obj2ast_stmt(%struct._object* %1025, %struct._stmt** %value1696, %struct._arena* %1026)
  store i32 %call1699, i32* %res1669, align 4
  %1027 = load i32, i32* %res1669, align 4
  %cmp1700 = icmp ne i32 %1027, 0
  br i1 %cmp1700, label %if.then.1701, label %if.end.1702

if.then.1701:                                     ; preds = %for.body.1694
  br label %failed

if.end.1702:                                      ; preds = %for.body.1694
  %1028 = load %struct._stmt*, %struct._stmt** %value1696, align 8
  %1029 = bitcast %struct._stmt* %1028 to i8*
  %1030 = load i64, i64* %i1673, align 8
  %1031 = load %struct.asdl_seq*, %struct.asdl_seq** %body1600, align 8
  %elements1703 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1031, i32 0, i32 1
  %arrayidx1704 = getelementptr [1 x i8*], [1 x i8*]* %elements1703, i32 0, i64 %1030
  store i8* %1029, i8** %arrayidx1704, align 8
  br label %for.inc.1705

for.inc.1705:                                     ; preds = %if.end.1702
  %1032 = load i64, i64* %i1673, align 8
  %inc1706 = add i64 %1032, 1
  store i64 %inc1706, i64* %i1673, align 8
  br label %for.cond.1692

for.end.1707:                                     ; preds = %for.cond.1692
  br label %do.body.1708

do.body.1708:                                     ; preds = %for.end.1707
  %1033 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1033, %struct._object** %_py_tmp1710, align 8
  %1034 = load %struct._object*, %struct._object** %_py_tmp1710, align 8
  %cmp1711 = icmp ne %struct._object* %1034, null
  br i1 %cmp1711, label %if.then.1712, label %if.end.1725

if.then.1712:                                     ; preds = %do.body.1708
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1713

do.body.1713:                                     ; preds = %if.then.1712
  %1035 = load %struct._object*, %struct._object** %_py_tmp1710, align 8
  store %struct._object* %1035, %struct._object** %_py_decref_tmp1715, align 8
  %1036 = load %struct._object*, %struct._object** %_py_decref_tmp1715, align 8
  %ob_refcnt1716 = getelementptr inbounds %struct._object, %struct._object* %1036, i32 0, i32 0
  %1037 = load i64, i64* %ob_refcnt1716, align 8
  %dec1717 = add i64 %1037, -1
  store i64 %dec1717, i64* %ob_refcnt1716, align 8
  %cmp1718 = icmp ne i64 %dec1717, 0
  br i1 %cmp1718, label %if.then.1719, label %if.else.1720

if.then.1719:                                     ; preds = %do.body.1713
  br label %if.end.1723

if.else.1720:                                     ; preds = %do.body.1713
  %1038 = load %struct._object*, %struct._object** %_py_decref_tmp1715, align 8
  %ob_type1721 = getelementptr inbounds %struct._object, %struct._object* %1038, i32 0, i32 1
  %1039 = load %struct._typeobject*, %struct._typeobject** %ob_type1721, align 8
  %tp_dealloc1722 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1039, i32 0, i32 4
  %1040 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1722, align 8
  %1041 = load %struct._object*, %struct._object** %_py_decref_tmp1715, align 8
  call void %1040(%struct._object* %1041)
  br label %if.end.1723

if.end.1723:                                      ; preds = %if.else.1720, %if.then.1719
  br label %do.end.1724

do.end.1724:                                      ; preds = %if.end.1723
  br label %if.end.1725

if.end.1725:                                      ; preds = %do.end.1724, %do.body.1708
  br label %do.end.1726

do.end.1726:                                      ; preds = %if.end.1725
  br label %if.end.1728

if.else.1727:                                     ; preds = %if.end.1664
  %1042 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1042, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.294, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1728:                                      ; preds = %do.end.1726
  %1043 = load %struct.asdl_seq*, %struct.asdl_seq** %items, align 8
  %1044 = load %struct.asdl_seq*, %struct.asdl_seq** %body1600, align 8
  %1045 = load i32, i32* %lineno, align 4
  %1046 = load i32, i32* %col_offset, align 4
  %1047 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1729 = call %struct._stmt* @_Py_With(%struct.asdl_seq* %1043, %struct.asdl_seq* %1044, i32 %1045, i32 %1046, %struct._arena* %1047)
  %1048 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call1729, %struct._stmt** %1048, align 8
  %1049 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %1050 = load %struct._stmt*, %struct._stmt** %1049, align 8
  %cmp1730 = icmp eq %struct._stmt* %1050, null
  br i1 %cmp1730, label %if.then.1731, label %if.end.1732

if.then.1731:                                     ; preds = %if.end.1728
  br label %failed

if.end.1732:                                      ; preds = %if.end.1728
  store i32 0, i32* %retval
  br label %return

if.end.1733:                                      ; preds = %if.end.1595
  %1051 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1052 = load %struct._typeobject*, %struct._typeobject** @Raise_type, align 8
  %1053 = bitcast %struct._typeobject* %1052 to %struct._object*
  %call1734 = call i32 @PyObject_IsInstance(%struct._object* %1051, %struct._object* %1053)
  store i32 %call1734, i32* %isinstance, align 4
  %1054 = load i32, i32* %isinstance, align 4
  %cmp1735 = icmp eq i32 %1054, -1
  br i1 %cmp1735, label %if.then.1736, label %if.end.1737

if.then.1736:                                     ; preds = %if.end.1733
  store i32 1, i32* %retval
  br label %return

if.end.1737:                                      ; preds = %if.end.1733
  %1055 = load i32, i32* %isinstance, align 4
  %tobool1738 = icmp ne i32 %1055, 0
  br i1 %tobool1738, label %if.then.1739, label %if.end.1814

if.then.1739:                                     ; preds = %if.end.1737
  %1056 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1742 = call i32 @exists_not_none(%struct._object* %1056, %struct._Py_Identifier* @PyId_exc)
  %tobool1743 = icmp ne i32 %call1742, 0
  br i1 %tobool1743, label %if.then.1744, label %if.else.1774

if.then.1744:                                     ; preds = %if.then.1739
  %1057 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1747 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1057, %struct._Py_Identifier* @PyId_exc)
  store %struct._object* %call1747, %struct._object** %tmp, align 8
  %1058 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1748 = icmp eq %struct._object* %1058, null
  br i1 %cmp1748, label %if.then.1749, label %if.end.1750

if.then.1749:                                     ; preds = %if.then.1744
  br label %failed

if.end.1750:                                      ; preds = %if.then.1744
  %1059 = load %struct._object*, %struct._object** %tmp, align 8
  %1060 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1751 = call i32 @obj2ast_expr(%struct._object* %1059, %struct._expr** %exc, %struct._arena* %1060)
  store i32 %call1751, i32* %res1746, align 4
  %1061 = load i32, i32* %res1746, align 4
  %cmp1752 = icmp ne i32 %1061, 0
  br i1 %cmp1752, label %if.then.1753, label %if.end.1754

if.then.1753:                                     ; preds = %if.end.1750
  br label %failed

if.end.1754:                                      ; preds = %if.end.1750
  br label %do.body.1755

do.body.1755:                                     ; preds = %if.end.1754
  %1062 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1062, %struct._object** %_py_tmp1757, align 8
  %1063 = load %struct._object*, %struct._object** %_py_tmp1757, align 8
  %cmp1758 = icmp ne %struct._object* %1063, null
  br i1 %cmp1758, label %if.then.1759, label %if.end.1772

if.then.1759:                                     ; preds = %do.body.1755
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1760

do.body.1760:                                     ; preds = %if.then.1759
  %1064 = load %struct._object*, %struct._object** %_py_tmp1757, align 8
  store %struct._object* %1064, %struct._object** %_py_decref_tmp1762, align 8
  %1065 = load %struct._object*, %struct._object** %_py_decref_tmp1762, align 8
  %ob_refcnt1763 = getelementptr inbounds %struct._object, %struct._object* %1065, i32 0, i32 0
  %1066 = load i64, i64* %ob_refcnt1763, align 8
  %dec1764 = add i64 %1066, -1
  store i64 %dec1764, i64* %ob_refcnt1763, align 8
  %cmp1765 = icmp ne i64 %dec1764, 0
  br i1 %cmp1765, label %if.then.1766, label %if.else.1767

if.then.1766:                                     ; preds = %do.body.1760
  br label %if.end.1770

if.else.1767:                                     ; preds = %do.body.1760
  %1067 = load %struct._object*, %struct._object** %_py_decref_tmp1762, align 8
  %ob_type1768 = getelementptr inbounds %struct._object, %struct._object* %1067, i32 0, i32 1
  %1068 = load %struct._typeobject*, %struct._typeobject** %ob_type1768, align 8
  %tp_dealloc1769 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1068, i32 0, i32 4
  %1069 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1769, align 8
  %1070 = load %struct._object*, %struct._object** %_py_decref_tmp1762, align 8
  call void %1069(%struct._object* %1070)
  br label %if.end.1770

if.end.1770:                                      ; preds = %if.else.1767, %if.then.1766
  br label %do.end.1771

do.end.1771:                                      ; preds = %if.end.1770
  br label %if.end.1772

if.end.1772:                                      ; preds = %do.end.1771, %do.body.1755
  br label %do.end.1773

do.end.1773:                                      ; preds = %if.end.1772
  br label %if.end.1775

if.else.1774:                                     ; preds = %if.then.1739
  store %struct._expr* null, %struct._expr** %exc, align 8
  br label %if.end.1775

if.end.1775:                                      ; preds = %if.else.1774, %do.end.1773
  %1071 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1776 = call i32 @exists_not_none(%struct._object* %1071, %struct._Py_Identifier* @PyId_cause)
  %tobool1777 = icmp ne i32 %call1776, 0
  br i1 %tobool1777, label %if.then.1778, label %if.else.1808

if.then.1778:                                     ; preds = %if.end.1775
  %1072 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1781 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1072, %struct._Py_Identifier* @PyId_cause)
  store %struct._object* %call1781, %struct._object** %tmp, align 8
  %1073 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1782 = icmp eq %struct._object* %1073, null
  br i1 %cmp1782, label %if.then.1783, label %if.end.1784

if.then.1783:                                     ; preds = %if.then.1778
  br label %failed

if.end.1784:                                      ; preds = %if.then.1778
  %1074 = load %struct._object*, %struct._object** %tmp, align 8
  %1075 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1785 = call i32 @obj2ast_expr(%struct._object* %1074, %struct._expr** %cause, %struct._arena* %1075)
  store i32 %call1785, i32* %res1780, align 4
  %1076 = load i32, i32* %res1780, align 4
  %cmp1786 = icmp ne i32 %1076, 0
  br i1 %cmp1786, label %if.then.1787, label %if.end.1788

if.then.1787:                                     ; preds = %if.end.1784
  br label %failed

if.end.1788:                                      ; preds = %if.end.1784
  br label %do.body.1789

do.body.1789:                                     ; preds = %if.end.1788
  %1077 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1077, %struct._object** %_py_tmp1791, align 8
  %1078 = load %struct._object*, %struct._object** %_py_tmp1791, align 8
  %cmp1792 = icmp ne %struct._object* %1078, null
  br i1 %cmp1792, label %if.then.1793, label %if.end.1806

if.then.1793:                                     ; preds = %do.body.1789
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1794

do.body.1794:                                     ; preds = %if.then.1793
  %1079 = load %struct._object*, %struct._object** %_py_tmp1791, align 8
  store %struct._object* %1079, %struct._object** %_py_decref_tmp1796, align 8
  %1080 = load %struct._object*, %struct._object** %_py_decref_tmp1796, align 8
  %ob_refcnt1797 = getelementptr inbounds %struct._object, %struct._object* %1080, i32 0, i32 0
  %1081 = load i64, i64* %ob_refcnt1797, align 8
  %dec1798 = add i64 %1081, -1
  store i64 %dec1798, i64* %ob_refcnt1797, align 8
  %cmp1799 = icmp ne i64 %dec1798, 0
  br i1 %cmp1799, label %if.then.1800, label %if.else.1801

if.then.1800:                                     ; preds = %do.body.1794
  br label %if.end.1804

if.else.1801:                                     ; preds = %do.body.1794
  %1082 = load %struct._object*, %struct._object** %_py_decref_tmp1796, align 8
  %ob_type1802 = getelementptr inbounds %struct._object, %struct._object* %1082, i32 0, i32 1
  %1083 = load %struct._typeobject*, %struct._typeobject** %ob_type1802, align 8
  %tp_dealloc1803 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1083, i32 0, i32 4
  %1084 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1803, align 8
  %1085 = load %struct._object*, %struct._object** %_py_decref_tmp1796, align 8
  call void %1084(%struct._object* %1085)
  br label %if.end.1804

if.end.1804:                                      ; preds = %if.else.1801, %if.then.1800
  br label %do.end.1805

do.end.1805:                                      ; preds = %if.end.1804
  br label %if.end.1806

if.end.1806:                                      ; preds = %do.end.1805, %do.body.1789
  br label %do.end.1807

do.end.1807:                                      ; preds = %if.end.1806
  br label %if.end.1809

if.else.1808:                                     ; preds = %if.end.1775
  store %struct._expr* null, %struct._expr** %cause, align 8
  br label %if.end.1809

if.end.1809:                                      ; preds = %if.else.1808, %do.end.1807
  %1086 = load %struct._expr*, %struct._expr** %exc, align 8
  %1087 = load %struct._expr*, %struct._expr** %cause, align 8
  %1088 = load i32, i32* %lineno, align 4
  %1089 = load i32, i32* %col_offset, align 4
  %1090 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1810 = call %struct._stmt* @_Py_Raise(%struct._expr* %1086, %struct._expr* %1087, i32 %1088, i32 %1089, %struct._arena* %1090)
  %1091 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call1810, %struct._stmt** %1091, align 8
  %1092 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %1093 = load %struct._stmt*, %struct._stmt** %1092, align 8
  %cmp1811 = icmp eq %struct._stmt* %1093, null
  br i1 %cmp1811, label %if.then.1812, label %if.end.1813

if.then.1812:                                     ; preds = %if.end.1809
  br label %failed

if.end.1813:                                      ; preds = %if.end.1809
  store i32 0, i32* %retval
  br label %return

if.end.1814:                                      ; preds = %if.end.1737
  %1094 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1095 = load %struct._typeobject*, %struct._typeobject** @Try_type, align 8
  %1096 = bitcast %struct._typeobject* %1095 to %struct._object*
  %call1815 = call i32 @PyObject_IsInstance(%struct._object* %1094, %struct._object* %1096)
  store i32 %call1815, i32* %isinstance, align 4
  %1097 = load i32, i32* %isinstance, align 4
  %cmp1816 = icmp eq i32 %1097, -1
  br i1 %cmp1816, label %if.then.1817, label %if.end.1818

if.then.1817:                                     ; preds = %if.end.1814
  store i32 1, i32* %retval
  br label %return

if.end.1818:                                      ; preds = %if.end.1814
  %1098 = load i32, i32* %isinstance, align 4
  %tobool1819 = icmp ne i32 %1098, 0
  br i1 %tobool1819, label %if.then.1820, label %if.end.2087

if.then.1820:                                     ; preds = %if.end.1818
  %1099 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1827 = call i32 @_PyObject_HasAttrId(%struct._object* %1099, %struct._Py_Identifier* @PyId_body)
  %tobool1828 = icmp ne i32 %call1827, 0
  br i1 %tobool1828, label %if.then.1829, label %if.else.1889

if.then.1829:                                     ; preds = %if.then.1820
  %1100 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1836 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1100, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call1836, %struct._object** %tmp, align 8
  %1101 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1837 = icmp eq %struct._object* %1101, null
  br i1 %cmp1837, label %if.then.1838, label %if.end.1839

if.then.1838:                                     ; preds = %if.then.1829
  br label %failed

if.end.1839:                                      ; preds = %if.then.1829
  %1102 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1840 = getelementptr inbounds %struct._object, %struct._object* %1102, i32 0, i32 1
  %1103 = load %struct._typeobject*, %struct._typeobject** %ob_type1840, align 8
  %tp_flags1841 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1103, i32 0, i32 19
  %1104 = load i64, i64* %tp_flags1841, align 8
  %and1842 = and i64 %1104, 33554432
  %cmp1843 = icmp ne i64 %and1842, 0
  br i1 %cmp1843, label %if.end.1848, label %if.then.1844

if.then.1844:                                     ; preds = %if.end.1839
  %1105 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1106 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1845 = getelementptr inbounds %struct._object, %struct._object* %1106, i32 0, i32 1
  %1107 = load %struct._typeobject*, %struct._typeobject** %ob_type1845, align 8
  %tp_name1846 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1107, i32 0, i32 1
  %1108 = load i8*, i8** %tp_name1846, align 8
  %call1847 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1105, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.295, i32 0, i32 0), i8* %1108)
  br label %failed

if.end.1848:                                      ; preds = %if.end.1839
  %1109 = load %struct._object*, %struct._object** %tmp, align 8
  %1110 = bitcast %struct._object* %1109 to %struct.PyVarObject*
  %ob_size1849 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1110, i32 0, i32 1
  %1111 = load i64, i64* %ob_size1849, align 8
  store i64 %1111, i64* %len1833, align 8
  %1112 = load i64, i64* %len1833, align 8
  %1113 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1850 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %1112, %struct._arena* %1113)
  store %struct.asdl_seq* %call1850, %struct.asdl_seq** %body1822, align 8
  %1114 = load %struct.asdl_seq*, %struct.asdl_seq** %body1822, align 8
  %cmp1851 = icmp eq %struct.asdl_seq* %1114, null
  br i1 %cmp1851, label %if.then.1852, label %if.end.1853

if.then.1852:                                     ; preds = %if.end.1848
  br label %failed

if.end.1853:                                      ; preds = %if.end.1848
  store i64 0, i64* %i1835, align 8
  br label %for.cond.1854

for.cond.1854:                                    ; preds = %for.inc.1867, %if.end.1853
  %1115 = load i64, i64* %i1835, align 8
  %1116 = load i64, i64* %len1833, align 8
  %cmp1855 = icmp slt i64 %1115, %1116
  br i1 %cmp1855, label %for.body.1856, label %for.end.1869

for.body.1856:                                    ; preds = %for.cond.1854
  %1117 = load i64, i64* %i1835, align 8
  %1118 = load %struct._object*, %struct._object** %tmp, align 8
  %1119 = bitcast %struct._object* %1118 to %struct.PyListObject*
  %ob_item1859 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %1119, i32 0, i32 1
  %1120 = load %struct._object**, %struct._object*** %ob_item1859, align 8
  %arrayidx1860 = getelementptr %struct._object*, %struct._object** %1120, i64 %1117
  %1121 = load %struct._object*, %struct._object** %arrayidx1860, align 8
  %1122 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1861 = call i32 @obj2ast_stmt(%struct._object* %1121, %struct._stmt** %value1858, %struct._arena* %1122)
  store i32 %call1861, i32* %res1831, align 4
  %1123 = load i32, i32* %res1831, align 4
  %cmp1862 = icmp ne i32 %1123, 0
  br i1 %cmp1862, label %if.then.1863, label %if.end.1864

if.then.1863:                                     ; preds = %for.body.1856
  br label %failed

if.end.1864:                                      ; preds = %for.body.1856
  %1124 = load %struct._stmt*, %struct._stmt** %value1858, align 8
  %1125 = bitcast %struct._stmt* %1124 to i8*
  %1126 = load i64, i64* %i1835, align 8
  %1127 = load %struct.asdl_seq*, %struct.asdl_seq** %body1822, align 8
  %elements1865 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1127, i32 0, i32 1
  %arrayidx1866 = getelementptr [1 x i8*], [1 x i8*]* %elements1865, i32 0, i64 %1126
  store i8* %1125, i8** %arrayidx1866, align 8
  br label %for.inc.1867

for.inc.1867:                                     ; preds = %if.end.1864
  %1128 = load i64, i64* %i1835, align 8
  %inc1868 = add i64 %1128, 1
  store i64 %inc1868, i64* %i1835, align 8
  br label %for.cond.1854

for.end.1869:                                     ; preds = %for.cond.1854
  br label %do.body.1870

do.body.1870:                                     ; preds = %for.end.1869
  %1129 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1129, %struct._object** %_py_tmp1872, align 8
  %1130 = load %struct._object*, %struct._object** %_py_tmp1872, align 8
  %cmp1873 = icmp ne %struct._object* %1130, null
  br i1 %cmp1873, label %if.then.1874, label %if.end.1887

if.then.1874:                                     ; preds = %do.body.1870
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1875

do.body.1875:                                     ; preds = %if.then.1874
  %1131 = load %struct._object*, %struct._object** %_py_tmp1872, align 8
  store %struct._object* %1131, %struct._object** %_py_decref_tmp1877, align 8
  %1132 = load %struct._object*, %struct._object** %_py_decref_tmp1877, align 8
  %ob_refcnt1878 = getelementptr inbounds %struct._object, %struct._object* %1132, i32 0, i32 0
  %1133 = load i64, i64* %ob_refcnt1878, align 8
  %dec1879 = add i64 %1133, -1
  store i64 %dec1879, i64* %ob_refcnt1878, align 8
  %cmp1880 = icmp ne i64 %dec1879, 0
  br i1 %cmp1880, label %if.then.1881, label %if.else.1882

if.then.1881:                                     ; preds = %do.body.1875
  br label %if.end.1885

if.else.1882:                                     ; preds = %do.body.1875
  %1134 = load %struct._object*, %struct._object** %_py_decref_tmp1877, align 8
  %ob_type1883 = getelementptr inbounds %struct._object, %struct._object* %1134, i32 0, i32 1
  %1135 = load %struct._typeobject*, %struct._typeobject** %ob_type1883, align 8
  %tp_dealloc1884 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1135, i32 0, i32 4
  %1136 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1884, align 8
  %1137 = load %struct._object*, %struct._object** %_py_decref_tmp1877, align 8
  call void %1136(%struct._object* %1137)
  br label %if.end.1885

if.end.1885:                                      ; preds = %if.else.1882, %if.then.1881
  br label %do.end.1886

do.end.1886:                                      ; preds = %if.end.1885
  br label %if.end.1887

if.end.1887:                                      ; preds = %do.end.1886, %do.body.1870
  br label %do.end.1888

do.end.1888:                                      ; preds = %if.end.1887
  br label %if.end.1890

if.else.1889:                                     ; preds = %if.then.1820
  %1138 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1138, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.296, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1890:                                      ; preds = %do.end.1888
  %1139 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1891 = call i32 @_PyObject_HasAttrId(%struct._object* %1139, %struct._Py_Identifier* @PyId_handlers)
  %tobool1892 = icmp ne i32 %call1891, 0
  br i1 %tobool1892, label %if.then.1893, label %if.else.1953

if.then.1893:                                     ; preds = %if.end.1890
  %1140 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1900 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1140, %struct._Py_Identifier* @PyId_handlers)
  store %struct._object* %call1900, %struct._object** %tmp, align 8
  %1141 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1901 = icmp eq %struct._object* %1141, null
  br i1 %cmp1901, label %if.then.1902, label %if.end.1903

if.then.1902:                                     ; preds = %if.then.1893
  br label %failed

if.end.1903:                                      ; preds = %if.then.1893
  %1142 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1904 = getelementptr inbounds %struct._object, %struct._object* %1142, i32 0, i32 1
  %1143 = load %struct._typeobject*, %struct._typeobject** %ob_type1904, align 8
  %tp_flags1905 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1143, i32 0, i32 19
  %1144 = load i64, i64* %tp_flags1905, align 8
  %and1906 = and i64 %1144, 33554432
  %cmp1907 = icmp ne i64 %and1906, 0
  br i1 %cmp1907, label %if.end.1912, label %if.then.1908

if.then.1908:                                     ; preds = %if.end.1903
  %1145 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1146 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1909 = getelementptr inbounds %struct._object, %struct._object* %1146, i32 0, i32 1
  %1147 = load %struct._typeobject*, %struct._typeobject** %ob_type1909, align 8
  %tp_name1910 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1147, i32 0, i32 1
  %1148 = load i8*, i8** %tp_name1910, align 8
  %call1911 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1145, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.297, i32 0, i32 0), i8* %1148)
  br label %failed

if.end.1912:                                      ; preds = %if.end.1903
  %1149 = load %struct._object*, %struct._object** %tmp, align 8
  %1150 = bitcast %struct._object* %1149 to %struct.PyVarObject*
  %ob_size1913 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1150, i32 0, i32 1
  %1151 = load i64, i64* %ob_size1913, align 8
  store i64 %1151, i64* %len1897, align 8
  %1152 = load i64, i64* %len1897, align 8
  %1153 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1914 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %1152, %struct._arena* %1153)
  store %struct.asdl_seq* %call1914, %struct.asdl_seq** %handlers, align 8
  %1154 = load %struct.asdl_seq*, %struct.asdl_seq** %handlers, align 8
  %cmp1915 = icmp eq %struct.asdl_seq* %1154, null
  br i1 %cmp1915, label %if.then.1916, label %if.end.1917

if.then.1916:                                     ; preds = %if.end.1912
  br label %failed

if.end.1917:                                      ; preds = %if.end.1912
  store i64 0, i64* %i1899, align 8
  br label %for.cond.1918

for.cond.1918:                                    ; preds = %for.inc.1931, %if.end.1917
  %1155 = load i64, i64* %i1899, align 8
  %1156 = load i64, i64* %len1897, align 8
  %cmp1919 = icmp slt i64 %1155, %1156
  br i1 %cmp1919, label %for.body.1920, label %for.end.1933

for.body.1920:                                    ; preds = %for.cond.1918
  %1157 = load i64, i64* %i1899, align 8
  %1158 = load %struct._object*, %struct._object** %tmp, align 8
  %1159 = bitcast %struct._object* %1158 to %struct.PyListObject*
  %ob_item1923 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %1159, i32 0, i32 1
  %1160 = load %struct._object**, %struct._object*** %ob_item1923, align 8
  %arrayidx1924 = getelementptr %struct._object*, %struct._object** %1160, i64 %1157
  %1161 = load %struct._object*, %struct._object** %arrayidx1924, align 8
  %1162 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1925 = call i32 @obj2ast_excepthandler(%struct._object* %1161, %struct._excepthandler** %value1922, %struct._arena* %1162)
  store i32 %call1925, i32* %res1895, align 4
  %1163 = load i32, i32* %res1895, align 4
  %cmp1926 = icmp ne i32 %1163, 0
  br i1 %cmp1926, label %if.then.1927, label %if.end.1928

if.then.1927:                                     ; preds = %for.body.1920
  br label %failed

if.end.1928:                                      ; preds = %for.body.1920
  %1164 = load %struct._excepthandler*, %struct._excepthandler** %value1922, align 8
  %1165 = bitcast %struct._excepthandler* %1164 to i8*
  %1166 = load i64, i64* %i1899, align 8
  %1167 = load %struct.asdl_seq*, %struct.asdl_seq** %handlers, align 8
  %elements1929 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1167, i32 0, i32 1
  %arrayidx1930 = getelementptr [1 x i8*], [1 x i8*]* %elements1929, i32 0, i64 %1166
  store i8* %1165, i8** %arrayidx1930, align 8
  br label %for.inc.1931

for.inc.1931:                                     ; preds = %if.end.1928
  %1168 = load i64, i64* %i1899, align 8
  %inc1932 = add i64 %1168, 1
  store i64 %inc1932, i64* %i1899, align 8
  br label %for.cond.1918

for.end.1933:                                     ; preds = %for.cond.1918
  br label %do.body.1934

do.body.1934:                                     ; preds = %for.end.1933
  %1169 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1169, %struct._object** %_py_tmp1936, align 8
  %1170 = load %struct._object*, %struct._object** %_py_tmp1936, align 8
  %cmp1937 = icmp ne %struct._object* %1170, null
  br i1 %cmp1937, label %if.then.1938, label %if.end.1951

if.then.1938:                                     ; preds = %do.body.1934
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1939

do.body.1939:                                     ; preds = %if.then.1938
  %1171 = load %struct._object*, %struct._object** %_py_tmp1936, align 8
  store %struct._object* %1171, %struct._object** %_py_decref_tmp1941, align 8
  %1172 = load %struct._object*, %struct._object** %_py_decref_tmp1941, align 8
  %ob_refcnt1942 = getelementptr inbounds %struct._object, %struct._object* %1172, i32 0, i32 0
  %1173 = load i64, i64* %ob_refcnt1942, align 8
  %dec1943 = add i64 %1173, -1
  store i64 %dec1943, i64* %ob_refcnt1942, align 8
  %cmp1944 = icmp ne i64 %dec1943, 0
  br i1 %cmp1944, label %if.then.1945, label %if.else.1946

if.then.1945:                                     ; preds = %do.body.1939
  br label %if.end.1949

if.else.1946:                                     ; preds = %do.body.1939
  %1174 = load %struct._object*, %struct._object** %_py_decref_tmp1941, align 8
  %ob_type1947 = getelementptr inbounds %struct._object, %struct._object* %1174, i32 0, i32 1
  %1175 = load %struct._typeobject*, %struct._typeobject** %ob_type1947, align 8
  %tp_dealloc1948 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1175, i32 0, i32 4
  %1176 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1948, align 8
  %1177 = load %struct._object*, %struct._object** %_py_decref_tmp1941, align 8
  call void %1176(%struct._object* %1177)
  br label %if.end.1949

if.end.1949:                                      ; preds = %if.else.1946, %if.then.1945
  br label %do.end.1950

do.end.1950:                                      ; preds = %if.end.1949
  br label %if.end.1951

if.end.1951:                                      ; preds = %do.end.1950, %do.body.1934
  br label %do.end.1952

do.end.1952:                                      ; preds = %if.end.1951
  br label %if.end.1954

if.else.1953:                                     ; preds = %if.end.1890
  %1178 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1178, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.298, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1954:                                      ; preds = %do.end.1952
  %1179 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1955 = call i32 @_PyObject_HasAttrId(%struct._object* %1179, %struct._Py_Identifier* @PyId_orelse)
  %tobool1956 = icmp ne i32 %call1955, 0
  br i1 %tobool1956, label %if.then.1957, label %if.else.2017

if.then.1957:                                     ; preds = %if.end.1954
  %1180 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1964 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1180, %struct._Py_Identifier* @PyId_orelse)
  store %struct._object* %call1964, %struct._object** %tmp, align 8
  %1181 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1965 = icmp eq %struct._object* %1181, null
  br i1 %cmp1965, label %if.then.1966, label %if.end.1967

if.then.1966:                                     ; preds = %if.then.1957
  br label %failed

if.end.1967:                                      ; preds = %if.then.1957
  %1182 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1968 = getelementptr inbounds %struct._object, %struct._object* %1182, i32 0, i32 1
  %1183 = load %struct._typeobject*, %struct._typeobject** %ob_type1968, align 8
  %tp_flags1969 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1183, i32 0, i32 19
  %1184 = load i64, i64* %tp_flags1969, align 8
  %and1970 = and i64 %1184, 33554432
  %cmp1971 = icmp ne i64 %and1970, 0
  br i1 %cmp1971, label %if.end.1976, label %if.then.1972

if.then.1972:                                     ; preds = %if.end.1967
  %1185 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1186 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1973 = getelementptr inbounds %struct._object, %struct._object* %1186, i32 0, i32 1
  %1187 = load %struct._typeobject*, %struct._typeobject** %ob_type1973, align 8
  %tp_name1974 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1187, i32 0, i32 1
  %1188 = load i8*, i8** %tp_name1974, align 8
  %call1975 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1185, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.299, i32 0, i32 0), i8* %1188)
  br label %failed

if.end.1976:                                      ; preds = %if.end.1967
  %1189 = load %struct._object*, %struct._object** %tmp, align 8
  %1190 = bitcast %struct._object* %1189 to %struct.PyVarObject*
  %ob_size1977 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1190, i32 0, i32 1
  %1191 = load i64, i64* %ob_size1977, align 8
  store i64 %1191, i64* %len1961, align 8
  %1192 = load i64, i64* %len1961, align 8
  %1193 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1978 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %1192, %struct._arena* %1193)
  store %struct.asdl_seq* %call1978, %struct.asdl_seq** %orelse1825, align 8
  %1194 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse1825, align 8
  %cmp1979 = icmp eq %struct.asdl_seq* %1194, null
  br i1 %cmp1979, label %if.then.1980, label %if.end.1981

if.then.1980:                                     ; preds = %if.end.1976
  br label %failed

if.end.1981:                                      ; preds = %if.end.1976
  store i64 0, i64* %i1963, align 8
  br label %for.cond.1982

for.cond.1982:                                    ; preds = %for.inc.1995, %if.end.1981
  %1195 = load i64, i64* %i1963, align 8
  %1196 = load i64, i64* %len1961, align 8
  %cmp1983 = icmp slt i64 %1195, %1196
  br i1 %cmp1983, label %for.body.1984, label %for.end.1997

for.body.1984:                                    ; preds = %for.cond.1982
  %1197 = load i64, i64* %i1963, align 8
  %1198 = load %struct._object*, %struct._object** %tmp, align 8
  %1199 = bitcast %struct._object* %1198 to %struct.PyListObject*
  %ob_item1987 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %1199, i32 0, i32 1
  %1200 = load %struct._object**, %struct._object*** %ob_item1987, align 8
  %arrayidx1988 = getelementptr %struct._object*, %struct._object** %1200, i64 %1197
  %1201 = load %struct._object*, %struct._object** %arrayidx1988, align 8
  %1202 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1989 = call i32 @obj2ast_stmt(%struct._object* %1201, %struct._stmt** %value1986, %struct._arena* %1202)
  store i32 %call1989, i32* %res1959, align 4
  %1203 = load i32, i32* %res1959, align 4
  %cmp1990 = icmp ne i32 %1203, 0
  br i1 %cmp1990, label %if.then.1991, label %if.end.1992

if.then.1991:                                     ; preds = %for.body.1984
  br label %failed

if.end.1992:                                      ; preds = %for.body.1984
  %1204 = load %struct._stmt*, %struct._stmt** %value1986, align 8
  %1205 = bitcast %struct._stmt* %1204 to i8*
  %1206 = load i64, i64* %i1963, align 8
  %1207 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse1825, align 8
  %elements1993 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1207, i32 0, i32 1
  %arrayidx1994 = getelementptr [1 x i8*], [1 x i8*]* %elements1993, i32 0, i64 %1206
  store i8* %1205, i8** %arrayidx1994, align 8
  br label %for.inc.1995

for.inc.1995:                                     ; preds = %if.end.1992
  %1208 = load i64, i64* %i1963, align 8
  %inc1996 = add i64 %1208, 1
  store i64 %inc1996, i64* %i1963, align 8
  br label %for.cond.1982

for.end.1997:                                     ; preds = %for.cond.1982
  br label %do.body.1998

do.body.1998:                                     ; preds = %for.end.1997
  %1209 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1209, %struct._object** %_py_tmp2000, align 8
  %1210 = load %struct._object*, %struct._object** %_py_tmp2000, align 8
  %cmp2001 = icmp ne %struct._object* %1210, null
  br i1 %cmp2001, label %if.then.2002, label %if.end.2015

if.then.2002:                                     ; preds = %do.body.1998
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2003

do.body.2003:                                     ; preds = %if.then.2002
  %1211 = load %struct._object*, %struct._object** %_py_tmp2000, align 8
  store %struct._object* %1211, %struct._object** %_py_decref_tmp2005, align 8
  %1212 = load %struct._object*, %struct._object** %_py_decref_tmp2005, align 8
  %ob_refcnt2006 = getelementptr inbounds %struct._object, %struct._object* %1212, i32 0, i32 0
  %1213 = load i64, i64* %ob_refcnt2006, align 8
  %dec2007 = add i64 %1213, -1
  store i64 %dec2007, i64* %ob_refcnt2006, align 8
  %cmp2008 = icmp ne i64 %dec2007, 0
  br i1 %cmp2008, label %if.then.2009, label %if.else.2010

if.then.2009:                                     ; preds = %do.body.2003
  br label %if.end.2013

if.else.2010:                                     ; preds = %do.body.2003
  %1214 = load %struct._object*, %struct._object** %_py_decref_tmp2005, align 8
  %ob_type2011 = getelementptr inbounds %struct._object, %struct._object* %1214, i32 0, i32 1
  %1215 = load %struct._typeobject*, %struct._typeobject** %ob_type2011, align 8
  %tp_dealloc2012 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1215, i32 0, i32 4
  %1216 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2012, align 8
  %1217 = load %struct._object*, %struct._object** %_py_decref_tmp2005, align 8
  call void %1216(%struct._object* %1217)
  br label %if.end.2013

if.end.2013:                                      ; preds = %if.else.2010, %if.then.2009
  br label %do.end.2014

do.end.2014:                                      ; preds = %if.end.2013
  br label %if.end.2015

if.end.2015:                                      ; preds = %do.end.2014, %do.body.1998
  br label %do.end.2016

do.end.2016:                                      ; preds = %if.end.2015
  br label %if.end.2018

if.else.2017:                                     ; preds = %if.end.1954
  %1218 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1218, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.300, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2018:                                      ; preds = %do.end.2016
  %1219 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2019 = call i32 @_PyObject_HasAttrId(%struct._object* %1219, %struct._Py_Identifier* @PyId_finalbody)
  %tobool2020 = icmp ne i32 %call2019, 0
  br i1 %tobool2020, label %if.then.2021, label %if.else.2081

if.then.2021:                                     ; preds = %if.end.2018
  %1220 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2028 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1220, %struct._Py_Identifier* @PyId_finalbody)
  store %struct._object* %call2028, %struct._object** %tmp, align 8
  %1221 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2029 = icmp eq %struct._object* %1221, null
  br i1 %cmp2029, label %if.then.2030, label %if.end.2031

if.then.2030:                                     ; preds = %if.then.2021
  br label %failed

if.end.2031:                                      ; preds = %if.then.2021
  %1222 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2032 = getelementptr inbounds %struct._object, %struct._object* %1222, i32 0, i32 1
  %1223 = load %struct._typeobject*, %struct._typeobject** %ob_type2032, align 8
  %tp_flags2033 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1223, i32 0, i32 19
  %1224 = load i64, i64* %tp_flags2033, align 8
  %and2034 = and i64 %1224, 33554432
  %cmp2035 = icmp ne i64 %and2034, 0
  br i1 %cmp2035, label %if.end.2040, label %if.then.2036

if.then.2036:                                     ; preds = %if.end.2031
  %1225 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1226 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2037 = getelementptr inbounds %struct._object, %struct._object* %1226, i32 0, i32 1
  %1227 = load %struct._typeobject*, %struct._typeobject** %ob_type2037, align 8
  %tp_name2038 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1227, i32 0, i32 1
  %1228 = load i8*, i8** %tp_name2038, align 8
  %call2039 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1225, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.301, i32 0, i32 0), i8* %1228)
  br label %failed

if.end.2040:                                      ; preds = %if.end.2031
  %1229 = load %struct._object*, %struct._object** %tmp, align 8
  %1230 = bitcast %struct._object* %1229 to %struct.PyVarObject*
  %ob_size2041 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1230, i32 0, i32 1
  %1231 = load i64, i64* %ob_size2041, align 8
  store i64 %1231, i64* %len2025, align 8
  %1232 = load i64, i64* %len2025, align 8
  %1233 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2042 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %1232, %struct._arena* %1233)
  store %struct.asdl_seq* %call2042, %struct.asdl_seq** %finalbody, align 8
  %1234 = load %struct.asdl_seq*, %struct.asdl_seq** %finalbody, align 8
  %cmp2043 = icmp eq %struct.asdl_seq* %1234, null
  br i1 %cmp2043, label %if.then.2044, label %if.end.2045

if.then.2044:                                     ; preds = %if.end.2040
  br label %failed

if.end.2045:                                      ; preds = %if.end.2040
  store i64 0, i64* %i2027, align 8
  br label %for.cond.2046

for.cond.2046:                                    ; preds = %for.inc.2059, %if.end.2045
  %1235 = load i64, i64* %i2027, align 8
  %1236 = load i64, i64* %len2025, align 8
  %cmp2047 = icmp slt i64 %1235, %1236
  br i1 %cmp2047, label %for.body.2048, label %for.end.2061

for.body.2048:                                    ; preds = %for.cond.2046
  %1237 = load i64, i64* %i2027, align 8
  %1238 = load %struct._object*, %struct._object** %tmp, align 8
  %1239 = bitcast %struct._object* %1238 to %struct.PyListObject*
  %ob_item2051 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %1239, i32 0, i32 1
  %1240 = load %struct._object**, %struct._object*** %ob_item2051, align 8
  %arrayidx2052 = getelementptr %struct._object*, %struct._object** %1240, i64 %1237
  %1241 = load %struct._object*, %struct._object** %arrayidx2052, align 8
  %1242 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2053 = call i32 @obj2ast_stmt(%struct._object* %1241, %struct._stmt** %value2050, %struct._arena* %1242)
  store i32 %call2053, i32* %res2023, align 4
  %1243 = load i32, i32* %res2023, align 4
  %cmp2054 = icmp ne i32 %1243, 0
  br i1 %cmp2054, label %if.then.2055, label %if.end.2056

if.then.2055:                                     ; preds = %for.body.2048
  br label %failed

if.end.2056:                                      ; preds = %for.body.2048
  %1244 = load %struct._stmt*, %struct._stmt** %value2050, align 8
  %1245 = bitcast %struct._stmt* %1244 to i8*
  %1246 = load i64, i64* %i2027, align 8
  %1247 = load %struct.asdl_seq*, %struct.asdl_seq** %finalbody, align 8
  %elements2057 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1247, i32 0, i32 1
  %arrayidx2058 = getelementptr [1 x i8*], [1 x i8*]* %elements2057, i32 0, i64 %1246
  store i8* %1245, i8** %arrayidx2058, align 8
  br label %for.inc.2059

for.inc.2059:                                     ; preds = %if.end.2056
  %1248 = load i64, i64* %i2027, align 8
  %inc2060 = add i64 %1248, 1
  store i64 %inc2060, i64* %i2027, align 8
  br label %for.cond.2046

for.end.2061:                                     ; preds = %for.cond.2046
  br label %do.body.2062

do.body.2062:                                     ; preds = %for.end.2061
  %1249 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1249, %struct._object** %_py_tmp2064, align 8
  %1250 = load %struct._object*, %struct._object** %_py_tmp2064, align 8
  %cmp2065 = icmp ne %struct._object* %1250, null
  br i1 %cmp2065, label %if.then.2066, label %if.end.2079

if.then.2066:                                     ; preds = %do.body.2062
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2067

do.body.2067:                                     ; preds = %if.then.2066
  %1251 = load %struct._object*, %struct._object** %_py_tmp2064, align 8
  store %struct._object* %1251, %struct._object** %_py_decref_tmp2069, align 8
  %1252 = load %struct._object*, %struct._object** %_py_decref_tmp2069, align 8
  %ob_refcnt2070 = getelementptr inbounds %struct._object, %struct._object* %1252, i32 0, i32 0
  %1253 = load i64, i64* %ob_refcnt2070, align 8
  %dec2071 = add i64 %1253, -1
  store i64 %dec2071, i64* %ob_refcnt2070, align 8
  %cmp2072 = icmp ne i64 %dec2071, 0
  br i1 %cmp2072, label %if.then.2073, label %if.else.2074

if.then.2073:                                     ; preds = %do.body.2067
  br label %if.end.2077

if.else.2074:                                     ; preds = %do.body.2067
  %1254 = load %struct._object*, %struct._object** %_py_decref_tmp2069, align 8
  %ob_type2075 = getelementptr inbounds %struct._object, %struct._object* %1254, i32 0, i32 1
  %1255 = load %struct._typeobject*, %struct._typeobject** %ob_type2075, align 8
  %tp_dealloc2076 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1255, i32 0, i32 4
  %1256 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2076, align 8
  %1257 = load %struct._object*, %struct._object** %_py_decref_tmp2069, align 8
  call void %1256(%struct._object* %1257)
  br label %if.end.2077

if.end.2077:                                      ; preds = %if.else.2074, %if.then.2073
  br label %do.end.2078

do.end.2078:                                      ; preds = %if.end.2077
  br label %if.end.2079

if.end.2079:                                      ; preds = %do.end.2078, %do.body.2062
  br label %do.end.2080

do.end.2080:                                      ; preds = %if.end.2079
  br label %if.end.2082

if.else.2081:                                     ; preds = %if.end.2018
  %1258 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1258, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.302, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2082:                                      ; preds = %do.end.2080
  %1259 = load %struct.asdl_seq*, %struct.asdl_seq** %body1822, align 8
  %1260 = load %struct.asdl_seq*, %struct.asdl_seq** %handlers, align 8
  %1261 = load %struct.asdl_seq*, %struct.asdl_seq** %orelse1825, align 8
  %1262 = load %struct.asdl_seq*, %struct.asdl_seq** %finalbody, align 8
  %1263 = load i32, i32* %lineno, align 4
  %1264 = load i32, i32* %col_offset, align 4
  %1265 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2083 = call %struct._stmt* @_Py_Try(%struct.asdl_seq* %1259, %struct.asdl_seq* %1260, %struct.asdl_seq* %1261, %struct.asdl_seq* %1262, i32 %1263, i32 %1264, %struct._arena* %1265)
  %1266 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call2083, %struct._stmt** %1266, align 8
  %1267 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %1268 = load %struct._stmt*, %struct._stmt** %1267, align 8
  %cmp2084 = icmp eq %struct._stmt* %1268, null
  br i1 %cmp2084, label %if.then.2085, label %if.end.2086

if.then.2085:                                     ; preds = %if.end.2082
  br label %failed

if.end.2086:                                      ; preds = %if.end.2082
  store i32 0, i32* %retval
  br label %return

if.end.2087:                                      ; preds = %if.end.1818
  %1269 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1270 = load %struct._typeobject*, %struct._typeobject** @Assert_type, align 8
  %1271 = bitcast %struct._typeobject* %1270 to %struct._object*
  %call2088 = call i32 @PyObject_IsInstance(%struct._object* %1269, %struct._object* %1271)
  store i32 %call2088, i32* %isinstance, align 4
  %1272 = load i32, i32* %isinstance, align 4
  %cmp2089 = icmp eq i32 %1272, -1
  br i1 %cmp2089, label %if.then.2090, label %if.end.2091

if.then.2090:                                     ; preds = %if.end.2087
  store i32 1, i32* %retval
  br label %return

if.end.2091:                                      ; preds = %if.end.2087
  %1273 = load i32, i32* %isinstance, align 4
  %tobool2092 = icmp ne i32 %1273, 0
  br i1 %tobool2092, label %if.then.2093, label %if.end.2169

if.then.2093:                                     ; preds = %if.end.2091
  %1274 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2097 = call i32 @_PyObject_HasAttrId(%struct._object* %1274, %struct._Py_Identifier* @PyId_test)
  %tobool2098 = icmp ne i32 %call2097, 0
  br i1 %tobool2098, label %if.then.2099, label %if.else.2129

if.then.2099:                                     ; preds = %if.then.2093
  %1275 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2102 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1275, %struct._Py_Identifier* @PyId_test)
  store %struct._object* %call2102, %struct._object** %tmp, align 8
  %1276 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2103 = icmp eq %struct._object* %1276, null
  br i1 %cmp2103, label %if.then.2104, label %if.end.2105

if.then.2104:                                     ; preds = %if.then.2099
  br label %failed

if.end.2105:                                      ; preds = %if.then.2099
  %1277 = load %struct._object*, %struct._object** %tmp, align 8
  %1278 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2106 = call i32 @obj2ast_expr(%struct._object* %1277, %struct._expr** %test2095, %struct._arena* %1278)
  store i32 %call2106, i32* %res2101, align 4
  %1279 = load i32, i32* %res2101, align 4
  %cmp2107 = icmp ne i32 %1279, 0
  br i1 %cmp2107, label %if.then.2108, label %if.end.2109

if.then.2108:                                     ; preds = %if.end.2105
  br label %failed

if.end.2109:                                      ; preds = %if.end.2105
  br label %do.body.2110

do.body.2110:                                     ; preds = %if.end.2109
  %1280 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1280, %struct._object** %_py_tmp2112, align 8
  %1281 = load %struct._object*, %struct._object** %_py_tmp2112, align 8
  %cmp2113 = icmp ne %struct._object* %1281, null
  br i1 %cmp2113, label %if.then.2114, label %if.end.2127

if.then.2114:                                     ; preds = %do.body.2110
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2115

do.body.2115:                                     ; preds = %if.then.2114
  %1282 = load %struct._object*, %struct._object** %_py_tmp2112, align 8
  store %struct._object* %1282, %struct._object** %_py_decref_tmp2117, align 8
  %1283 = load %struct._object*, %struct._object** %_py_decref_tmp2117, align 8
  %ob_refcnt2118 = getelementptr inbounds %struct._object, %struct._object* %1283, i32 0, i32 0
  %1284 = load i64, i64* %ob_refcnt2118, align 8
  %dec2119 = add i64 %1284, -1
  store i64 %dec2119, i64* %ob_refcnt2118, align 8
  %cmp2120 = icmp ne i64 %dec2119, 0
  br i1 %cmp2120, label %if.then.2121, label %if.else.2122

if.then.2121:                                     ; preds = %do.body.2115
  br label %if.end.2125

if.else.2122:                                     ; preds = %do.body.2115
  %1285 = load %struct._object*, %struct._object** %_py_decref_tmp2117, align 8
  %ob_type2123 = getelementptr inbounds %struct._object, %struct._object* %1285, i32 0, i32 1
  %1286 = load %struct._typeobject*, %struct._typeobject** %ob_type2123, align 8
  %tp_dealloc2124 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1286, i32 0, i32 4
  %1287 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2124, align 8
  %1288 = load %struct._object*, %struct._object** %_py_decref_tmp2117, align 8
  call void %1287(%struct._object* %1288)
  br label %if.end.2125

if.end.2125:                                      ; preds = %if.else.2122, %if.then.2121
  br label %do.end.2126

do.end.2126:                                      ; preds = %if.end.2125
  br label %if.end.2127

if.end.2127:                                      ; preds = %do.end.2126, %do.body.2110
  br label %do.end.2128

do.end.2128:                                      ; preds = %if.end.2127
  br label %if.end.2130

if.else.2129:                                     ; preds = %if.then.2093
  %1289 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1289, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.303, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2130:                                      ; preds = %do.end.2128
  %1290 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2131 = call i32 @exists_not_none(%struct._object* %1290, %struct._Py_Identifier* @PyId_msg)
  %tobool2132 = icmp ne i32 %call2131, 0
  br i1 %tobool2132, label %if.then.2133, label %if.else.2163

if.then.2133:                                     ; preds = %if.end.2130
  %1291 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2136 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1291, %struct._Py_Identifier* @PyId_msg)
  store %struct._object* %call2136, %struct._object** %tmp, align 8
  %1292 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2137 = icmp eq %struct._object* %1292, null
  br i1 %cmp2137, label %if.then.2138, label %if.end.2139

if.then.2138:                                     ; preds = %if.then.2133
  br label %failed

if.end.2139:                                      ; preds = %if.then.2133
  %1293 = load %struct._object*, %struct._object** %tmp, align 8
  %1294 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2140 = call i32 @obj2ast_expr(%struct._object* %1293, %struct._expr** %msg, %struct._arena* %1294)
  store i32 %call2140, i32* %res2135, align 4
  %1295 = load i32, i32* %res2135, align 4
  %cmp2141 = icmp ne i32 %1295, 0
  br i1 %cmp2141, label %if.then.2142, label %if.end.2143

if.then.2142:                                     ; preds = %if.end.2139
  br label %failed

if.end.2143:                                      ; preds = %if.end.2139
  br label %do.body.2144

do.body.2144:                                     ; preds = %if.end.2143
  %1296 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1296, %struct._object** %_py_tmp2146, align 8
  %1297 = load %struct._object*, %struct._object** %_py_tmp2146, align 8
  %cmp2147 = icmp ne %struct._object* %1297, null
  br i1 %cmp2147, label %if.then.2148, label %if.end.2161

if.then.2148:                                     ; preds = %do.body.2144
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2149

do.body.2149:                                     ; preds = %if.then.2148
  %1298 = load %struct._object*, %struct._object** %_py_tmp2146, align 8
  store %struct._object* %1298, %struct._object** %_py_decref_tmp2151, align 8
  %1299 = load %struct._object*, %struct._object** %_py_decref_tmp2151, align 8
  %ob_refcnt2152 = getelementptr inbounds %struct._object, %struct._object* %1299, i32 0, i32 0
  %1300 = load i64, i64* %ob_refcnt2152, align 8
  %dec2153 = add i64 %1300, -1
  store i64 %dec2153, i64* %ob_refcnt2152, align 8
  %cmp2154 = icmp ne i64 %dec2153, 0
  br i1 %cmp2154, label %if.then.2155, label %if.else.2156

if.then.2155:                                     ; preds = %do.body.2149
  br label %if.end.2159

if.else.2156:                                     ; preds = %do.body.2149
  %1301 = load %struct._object*, %struct._object** %_py_decref_tmp2151, align 8
  %ob_type2157 = getelementptr inbounds %struct._object, %struct._object* %1301, i32 0, i32 1
  %1302 = load %struct._typeobject*, %struct._typeobject** %ob_type2157, align 8
  %tp_dealloc2158 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1302, i32 0, i32 4
  %1303 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2158, align 8
  %1304 = load %struct._object*, %struct._object** %_py_decref_tmp2151, align 8
  call void %1303(%struct._object* %1304)
  br label %if.end.2159

if.end.2159:                                      ; preds = %if.else.2156, %if.then.2155
  br label %do.end.2160

do.end.2160:                                      ; preds = %if.end.2159
  br label %if.end.2161

if.end.2161:                                      ; preds = %do.end.2160, %do.body.2144
  br label %do.end.2162

do.end.2162:                                      ; preds = %if.end.2161
  br label %if.end.2164

if.else.2163:                                     ; preds = %if.end.2130
  store %struct._expr* null, %struct._expr** %msg, align 8
  br label %if.end.2164

if.end.2164:                                      ; preds = %if.else.2163, %do.end.2162
  %1305 = load %struct._expr*, %struct._expr** %test2095, align 8
  %1306 = load %struct._expr*, %struct._expr** %msg, align 8
  %1307 = load i32, i32* %lineno, align 4
  %1308 = load i32, i32* %col_offset, align 4
  %1309 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2165 = call %struct._stmt* @_Py_Assert(%struct._expr* %1305, %struct._expr* %1306, i32 %1307, i32 %1308, %struct._arena* %1309)
  %1310 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call2165, %struct._stmt** %1310, align 8
  %1311 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %1312 = load %struct._stmt*, %struct._stmt** %1311, align 8
  %cmp2166 = icmp eq %struct._stmt* %1312, null
  br i1 %cmp2166, label %if.then.2167, label %if.end.2168

if.then.2167:                                     ; preds = %if.end.2164
  br label %failed

if.end.2168:                                      ; preds = %if.end.2164
  store i32 0, i32* %retval
  br label %return

if.end.2169:                                      ; preds = %if.end.2091
  %1313 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1314 = load %struct._typeobject*, %struct._typeobject** @Import_type, align 8
  %1315 = bitcast %struct._typeobject* %1314 to %struct._object*
  %call2170 = call i32 @PyObject_IsInstance(%struct._object* %1313, %struct._object* %1315)
  store i32 %call2170, i32* %isinstance, align 4
  %1316 = load i32, i32* %isinstance, align 4
  %cmp2171 = icmp eq i32 %1316, -1
  br i1 %cmp2171, label %if.then.2172, label %if.end.2173

if.then.2172:                                     ; preds = %if.end.2169
  store i32 1, i32* %retval
  br label %return

if.end.2173:                                      ; preds = %if.end.2169
  %1317 = load i32, i32* %isinstance, align 4
  %tobool2174 = icmp ne i32 %1317, 0
  br i1 %tobool2174, label %if.then.2175, label %if.end.2245

if.then.2175:                                     ; preds = %if.end.2173
  %1318 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2177 = call i32 @_PyObject_HasAttrId(%struct._object* %1318, %struct._Py_Identifier* @PyId_names)
  %tobool2178 = icmp ne i32 %call2177, 0
  br i1 %tobool2178, label %if.then.2179, label %if.else.2239

if.then.2179:                                     ; preds = %if.then.2175
  %1319 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2186 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1319, %struct._Py_Identifier* @PyId_names)
  store %struct._object* %call2186, %struct._object** %tmp, align 8
  %1320 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2187 = icmp eq %struct._object* %1320, null
  br i1 %cmp2187, label %if.then.2188, label %if.end.2189

if.then.2188:                                     ; preds = %if.then.2179
  br label %failed

if.end.2189:                                      ; preds = %if.then.2179
  %1321 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2190 = getelementptr inbounds %struct._object, %struct._object* %1321, i32 0, i32 1
  %1322 = load %struct._typeobject*, %struct._typeobject** %ob_type2190, align 8
  %tp_flags2191 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1322, i32 0, i32 19
  %1323 = load i64, i64* %tp_flags2191, align 8
  %and2192 = and i64 %1323, 33554432
  %cmp2193 = icmp ne i64 %and2192, 0
  br i1 %cmp2193, label %if.end.2198, label %if.then.2194

if.then.2194:                                     ; preds = %if.end.2189
  %1324 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1325 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2195 = getelementptr inbounds %struct._object, %struct._object* %1325, i32 0, i32 1
  %1326 = load %struct._typeobject*, %struct._typeobject** %ob_type2195, align 8
  %tp_name2196 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1326, i32 0, i32 1
  %1327 = load i8*, i8** %tp_name2196, align 8
  %call2197 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1324, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.304, i32 0, i32 0), i8* %1327)
  br label %failed

if.end.2198:                                      ; preds = %if.end.2189
  %1328 = load %struct._object*, %struct._object** %tmp, align 8
  %1329 = bitcast %struct._object* %1328 to %struct.PyVarObject*
  %ob_size2199 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1329, i32 0, i32 1
  %1330 = load i64, i64* %ob_size2199, align 8
  store i64 %1330, i64* %len2183, align 8
  %1331 = load i64, i64* %len2183, align 8
  %1332 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2200 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %1331, %struct._arena* %1332)
  store %struct.asdl_seq* %call2200, %struct.asdl_seq** %names, align 8
  %1333 = load %struct.asdl_seq*, %struct.asdl_seq** %names, align 8
  %cmp2201 = icmp eq %struct.asdl_seq* %1333, null
  br i1 %cmp2201, label %if.then.2202, label %if.end.2203

if.then.2202:                                     ; preds = %if.end.2198
  br label %failed

if.end.2203:                                      ; preds = %if.end.2198
  store i64 0, i64* %i2185, align 8
  br label %for.cond.2204

for.cond.2204:                                    ; preds = %for.inc.2217, %if.end.2203
  %1334 = load i64, i64* %i2185, align 8
  %1335 = load i64, i64* %len2183, align 8
  %cmp2205 = icmp slt i64 %1334, %1335
  br i1 %cmp2205, label %for.body.2206, label %for.end.2219

for.body.2206:                                    ; preds = %for.cond.2204
  %1336 = load i64, i64* %i2185, align 8
  %1337 = load %struct._object*, %struct._object** %tmp, align 8
  %1338 = bitcast %struct._object* %1337 to %struct.PyListObject*
  %ob_item2209 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %1338, i32 0, i32 1
  %1339 = load %struct._object**, %struct._object*** %ob_item2209, align 8
  %arrayidx2210 = getelementptr %struct._object*, %struct._object** %1339, i64 %1336
  %1340 = load %struct._object*, %struct._object** %arrayidx2210, align 8
  %1341 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2211 = call i32 @obj2ast_alias(%struct._object* %1340, %struct._alias** %value2208, %struct._arena* %1341)
  store i32 %call2211, i32* %res2181, align 4
  %1342 = load i32, i32* %res2181, align 4
  %cmp2212 = icmp ne i32 %1342, 0
  br i1 %cmp2212, label %if.then.2213, label %if.end.2214

if.then.2213:                                     ; preds = %for.body.2206
  br label %failed

if.end.2214:                                      ; preds = %for.body.2206
  %1343 = load %struct._alias*, %struct._alias** %value2208, align 8
  %1344 = bitcast %struct._alias* %1343 to i8*
  %1345 = load i64, i64* %i2185, align 8
  %1346 = load %struct.asdl_seq*, %struct.asdl_seq** %names, align 8
  %elements2215 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1346, i32 0, i32 1
  %arrayidx2216 = getelementptr [1 x i8*], [1 x i8*]* %elements2215, i32 0, i64 %1345
  store i8* %1344, i8** %arrayidx2216, align 8
  br label %for.inc.2217

for.inc.2217:                                     ; preds = %if.end.2214
  %1347 = load i64, i64* %i2185, align 8
  %inc2218 = add i64 %1347, 1
  store i64 %inc2218, i64* %i2185, align 8
  br label %for.cond.2204

for.end.2219:                                     ; preds = %for.cond.2204
  br label %do.body.2220

do.body.2220:                                     ; preds = %for.end.2219
  %1348 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1348, %struct._object** %_py_tmp2222, align 8
  %1349 = load %struct._object*, %struct._object** %_py_tmp2222, align 8
  %cmp2223 = icmp ne %struct._object* %1349, null
  br i1 %cmp2223, label %if.then.2224, label %if.end.2237

if.then.2224:                                     ; preds = %do.body.2220
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2225

do.body.2225:                                     ; preds = %if.then.2224
  %1350 = load %struct._object*, %struct._object** %_py_tmp2222, align 8
  store %struct._object* %1350, %struct._object** %_py_decref_tmp2227, align 8
  %1351 = load %struct._object*, %struct._object** %_py_decref_tmp2227, align 8
  %ob_refcnt2228 = getelementptr inbounds %struct._object, %struct._object* %1351, i32 0, i32 0
  %1352 = load i64, i64* %ob_refcnt2228, align 8
  %dec2229 = add i64 %1352, -1
  store i64 %dec2229, i64* %ob_refcnt2228, align 8
  %cmp2230 = icmp ne i64 %dec2229, 0
  br i1 %cmp2230, label %if.then.2231, label %if.else.2232

if.then.2231:                                     ; preds = %do.body.2225
  br label %if.end.2235

if.else.2232:                                     ; preds = %do.body.2225
  %1353 = load %struct._object*, %struct._object** %_py_decref_tmp2227, align 8
  %ob_type2233 = getelementptr inbounds %struct._object, %struct._object* %1353, i32 0, i32 1
  %1354 = load %struct._typeobject*, %struct._typeobject** %ob_type2233, align 8
  %tp_dealloc2234 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1354, i32 0, i32 4
  %1355 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2234, align 8
  %1356 = load %struct._object*, %struct._object** %_py_decref_tmp2227, align 8
  call void %1355(%struct._object* %1356)
  br label %if.end.2235

if.end.2235:                                      ; preds = %if.else.2232, %if.then.2231
  br label %do.end.2236

do.end.2236:                                      ; preds = %if.end.2235
  br label %if.end.2237

if.end.2237:                                      ; preds = %do.end.2236, %do.body.2220
  br label %do.end.2238

do.end.2238:                                      ; preds = %if.end.2237
  br label %if.end.2240

if.else.2239:                                     ; preds = %if.then.2175
  %1357 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1357, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.305, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2240:                                      ; preds = %do.end.2238
  %1358 = load %struct.asdl_seq*, %struct.asdl_seq** %names, align 8
  %1359 = load i32, i32* %lineno, align 4
  %1360 = load i32, i32* %col_offset, align 4
  %1361 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2241 = call %struct._stmt* @_Py_Import(%struct.asdl_seq* %1358, i32 %1359, i32 %1360, %struct._arena* %1361)
  %1362 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call2241, %struct._stmt** %1362, align 8
  %1363 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %1364 = load %struct._stmt*, %struct._stmt** %1363, align 8
  %cmp2242 = icmp eq %struct._stmt* %1364, null
  br i1 %cmp2242, label %if.then.2243, label %if.end.2244

if.then.2243:                                     ; preds = %if.end.2240
  br label %failed

if.end.2244:                                      ; preds = %if.end.2240
  store i32 0, i32* %retval
  br label %return

if.end.2245:                                      ; preds = %if.end.2173
  %1365 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1366 = load %struct._typeobject*, %struct._typeobject** @ImportFrom_type, align 8
  %1367 = bitcast %struct._typeobject* %1366 to %struct._object*
  %call2246 = call i32 @PyObject_IsInstance(%struct._object* %1365, %struct._object* %1367)
  store i32 %call2246, i32* %isinstance, align 4
  %1368 = load i32, i32* %isinstance, align 4
  %cmp2247 = icmp eq i32 %1368, -1
  br i1 %cmp2247, label %if.then.2248, label %if.end.2249

if.then.2248:                                     ; preds = %if.end.2245
  store i32 1, i32* %retval
  br label %return

if.end.2249:                                      ; preds = %if.end.2245
  %1369 = load i32, i32* %isinstance, align 4
  %tobool2250 = icmp ne i32 %1369, 0
  br i1 %tobool2250, label %if.then.2251, label %if.end.2392

if.then.2251:                                     ; preds = %if.end.2249
  %1370 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2256 = call i32 @exists_not_none(%struct._object* %1370, %struct._Py_Identifier* @PyId_module)
  %tobool2257 = icmp ne i32 %call2256, 0
  br i1 %tobool2257, label %if.then.2258, label %if.else.2288

if.then.2258:                                     ; preds = %if.then.2251
  %1371 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2261 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1371, %struct._Py_Identifier* @PyId_module)
  store %struct._object* %call2261, %struct._object** %tmp, align 8
  %1372 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2262 = icmp eq %struct._object* %1372, null
  br i1 %cmp2262, label %if.then.2263, label %if.end.2264

if.then.2263:                                     ; preds = %if.then.2258
  br label %failed

if.end.2264:                                      ; preds = %if.then.2258
  %1373 = load %struct._object*, %struct._object** %tmp, align 8
  %1374 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2265 = call i32 @obj2ast_identifier(%struct._object* %1373, %struct._object** %module, %struct._arena* %1374)
  store i32 %call2265, i32* %res2260, align 4
  %1375 = load i32, i32* %res2260, align 4
  %cmp2266 = icmp ne i32 %1375, 0
  br i1 %cmp2266, label %if.then.2267, label %if.end.2268

if.then.2267:                                     ; preds = %if.end.2264
  br label %failed

if.end.2268:                                      ; preds = %if.end.2264
  br label %do.body.2269

do.body.2269:                                     ; preds = %if.end.2268
  %1376 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1376, %struct._object** %_py_tmp2271, align 8
  %1377 = load %struct._object*, %struct._object** %_py_tmp2271, align 8
  %cmp2272 = icmp ne %struct._object* %1377, null
  br i1 %cmp2272, label %if.then.2273, label %if.end.2286

if.then.2273:                                     ; preds = %do.body.2269
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2274

do.body.2274:                                     ; preds = %if.then.2273
  %1378 = load %struct._object*, %struct._object** %_py_tmp2271, align 8
  store %struct._object* %1378, %struct._object** %_py_decref_tmp2276, align 8
  %1379 = load %struct._object*, %struct._object** %_py_decref_tmp2276, align 8
  %ob_refcnt2277 = getelementptr inbounds %struct._object, %struct._object* %1379, i32 0, i32 0
  %1380 = load i64, i64* %ob_refcnt2277, align 8
  %dec2278 = add i64 %1380, -1
  store i64 %dec2278, i64* %ob_refcnt2277, align 8
  %cmp2279 = icmp ne i64 %dec2278, 0
  br i1 %cmp2279, label %if.then.2280, label %if.else.2281

if.then.2280:                                     ; preds = %do.body.2274
  br label %if.end.2284

if.else.2281:                                     ; preds = %do.body.2274
  %1381 = load %struct._object*, %struct._object** %_py_decref_tmp2276, align 8
  %ob_type2282 = getelementptr inbounds %struct._object, %struct._object* %1381, i32 0, i32 1
  %1382 = load %struct._typeobject*, %struct._typeobject** %ob_type2282, align 8
  %tp_dealloc2283 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1382, i32 0, i32 4
  %1383 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2283, align 8
  %1384 = load %struct._object*, %struct._object** %_py_decref_tmp2276, align 8
  call void %1383(%struct._object* %1384)
  br label %if.end.2284

if.end.2284:                                      ; preds = %if.else.2281, %if.then.2280
  br label %do.end.2285

do.end.2285:                                      ; preds = %if.end.2284
  br label %if.end.2286

if.end.2286:                                      ; preds = %do.end.2285, %do.body.2269
  br label %do.end.2287

do.end.2287:                                      ; preds = %if.end.2286
  br label %if.end.2289

if.else.2288:                                     ; preds = %if.then.2251
  store %struct._object* null, %struct._object** %module, align 8
  br label %if.end.2289

if.end.2289:                                      ; preds = %if.else.2288, %do.end.2287
  %1385 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2290 = call i32 @_PyObject_HasAttrId(%struct._object* %1385, %struct._Py_Identifier* @PyId_names)
  %tobool2291 = icmp ne i32 %call2290, 0
  br i1 %tobool2291, label %if.then.2292, label %if.else.2352

if.then.2292:                                     ; preds = %if.end.2289
  %1386 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2299 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1386, %struct._Py_Identifier* @PyId_names)
  store %struct._object* %call2299, %struct._object** %tmp, align 8
  %1387 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2300 = icmp eq %struct._object* %1387, null
  br i1 %cmp2300, label %if.then.2301, label %if.end.2302

if.then.2301:                                     ; preds = %if.then.2292
  br label %failed

if.end.2302:                                      ; preds = %if.then.2292
  %1388 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2303 = getelementptr inbounds %struct._object, %struct._object* %1388, i32 0, i32 1
  %1389 = load %struct._typeobject*, %struct._typeobject** %ob_type2303, align 8
  %tp_flags2304 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1389, i32 0, i32 19
  %1390 = load i64, i64* %tp_flags2304, align 8
  %and2305 = and i64 %1390, 33554432
  %cmp2306 = icmp ne i64 %and2305, 0
  br i1 %cmp2306, label %if.end.2311, label %if.then.2307

if.then.2307:                                     ; preds = %if.end.2302
  %1391 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1392 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2308 = getelementptr inbounds %struct._object, %struct._object* %1392, i32 0, i32 1
  %1393 = load %struct._typeobject*, %struct._typeobject** %ob_type2308, align 8
  %tp_name2309 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1393, i32 0, i32 1
  %1394 = load i8*, i8** %tp_name2309, align 8
  %call2310 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1391, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.306, i32 0, i32 0), i8* %1394)
  br label %failed

if.end.2311:                                      ; preds = %if.end.2302
  %1395 = load %struct._object*, %struct._object** %tmp, align 8
  %1396 = bitcast %struct._object* %1395 to %struct.PyVarObject*
  %ob_size2312 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1396, i32 0, i32 1
  %1397 = load i64, i64* %ob_size2312, align 8
  store i64 %1397, i64* %len2296, align 8
  %1398 = load i64, i64* %len2296, align 8
  %1399 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2313 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %1398, %struct._arena* %1399)
  store %struct.asdl_seq* %call2313, %struct.asdl_seq** %names2254, align 8
  %1400 = load %struct.asdl_seq*, %struct.asdl_seq** %names2254, align 8
  %cmp2314 = icmp eq %struct.asdl_seq* %1400, null
  br i1 %cmp2314, label %if.then.2315, label %if.end.2316

if.then.2315:                                     ; preds = %if.end.2311
  br label %failed

if.end.2316:                                      ; preds = %if.end.2311
  store i64 0, i64* %i2298, align 8
  br label %for.cond.2317

for.cond.2317:                                    ; preds = %for.inc.2330, %if.end.2316
  %1401 = load i64, i64* %i2298, align 8
  %1402 = load i64, i64* %len2296, align 8
  %cmp2318 = icmp slt i64 %1401, %1402
  br i1 %cmp2318, label %for.body.2319, label %for.end.2332

for.body.2319:                                    ; preds = %for.cond.2317
  %1403 = load i64, i64* %i2298, align 8
  %1404 = load %struct._object*, %struct._object** %tmp, align 8
  %1405 = bitcast %struct._object* %1404 to %struct.PyListObject*
  %ob_item2322 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %1405, i32 0, i32 1
  %1406 = load %struct._object**, %struct._object*** %ob_item2322, align 8
  %arrayidx2323 = getelementptr %struct._object*, %struct._object** %1406, i64 %1403
  %1407 = load %struct._object*, %struct._object** %arrayidx2323, align 8
  %1408 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2324 = call i32 @obj2ast_alias(%struct._object* %1407, %struct._alias** %value2321, %struct._arena* %1408)
  store i32 %call2324, i32* %res2294, align 4
  %1409 = load i32, i32* %res2294, align 4
  %cmp2325 = icmp ne i32 %1409, 0
  br i1 %cmp2325, label %if.then.2326, label %if.end.2327

if.then.2326:                                     ; preds = %for.body.2319
  br label %failed

if.end.2327:                                      ; preds = %for.body.2319
  %1410 = load %struct._alias*, %struct._alias** %value2321, align 8
  %1411 = bitcast %struct._alias* %1410 to i8*
  %1412 = load i64, i64* %i2298, align 8
  %1413 = load %struct.asdl_seq*, %struct.asdl_seq** %names2254, align 8
  %elements2328 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1413, i32 0, i32 1
  %arrayidx2329 = getelementptr [1 x i8*], [1 x i8*]* %elements2328, i32 0, i64 %1412
  store i8* %1411, i8** %arrayidx2329, align 8
  br label %for.inc.2330

for.inc.2330:                                     ; preds = %if.end.2327
  %1414 = load i64, i64* %i2298, align 8
  %inc2331 = add i64 %1414, 1
  store i64 %inc2331, i64* %i2298, align 8
  br label %for.cond.2317

for.end.2332:                                     ; preds = %for.cond.2317
  br label %do.body.2333

do.body.2333:                                     ; preds = %for.end.2332
  %1415 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1415, %struct._object** %_py_tmp2335, align 8
  %1416 = load %struct._object*, %struct._object** %_py_tmp2335, align 8
  %cmp2336 = icmp ne %struct._object* %1416, null
  br i1 %cmp2336, label %if.then.2337, label %if.end.2350

if.then.2337:                                     ; preds = %do.body.2333
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2338

do.body.2338:                                     ; preds = %if.then.2337
  %1417 = load %struct._object*, %struct._object** %_py_tmp2335, align 8
  store %struct._object* %1417, %struct._object** %_py_decref_tmp2340, align 8
  %1418 = load %struct._object*, %struct._object** %_py_decref_tmp2340, align 8
  %ob_refcnt2341 = getelementptr inbounds %struct._object, %struct._object* %1418, i32 0, i32 0
  %1419 = load i64, i64* %ob_refcnt2341, align 8
  %dec2342 = add i64 %1419, -1
  store i64 %dec2342, i64* %ob_refcnt2341, align 8
  %cmp2343 = icmp ne i64 %dec2342, 0
  br i1 %cmp2343, label %if.then.2344, label %if.else.2345

if.then.2344:                                     ; preds = %do.body.2338
  br label %if.end.2348

if.else.2345:                                     ; preds = %do.body.2338
  %1420 = load %struct._object*, %struct._object** %_py_decref_tmp2340, align 8
  %ob_type2346 = getelementptr inbounds %struct._object, %struct._object* %1420, i32 0, i32 1
  %1421 = load %struct._typeobject*, %struct._typeobject** %ob_type2346, align 8
  %tp_dealloc2347 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1421, i32 0, i32 4
  %1422 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2347, align 8
  %1423 = load %struct._object*, %struct._object** %_py_decref_tmp2340, align 8
  call void %1422(%struct._object* %1423)
  br label %if.end.2348

if.end.2348:                                      ; preds = %if.else.2345, %if.then.2344
  br label %do.end.2349

do.end.2349:                                      ; preds = %if.end.2348
  br label %if.end.2350

if.end.2350:                                      ; preds = %do.end.2349, %do.body.2333
  br label %do.end.2351

do.end.2351:                                      ; preds = %if.end.2350
  br label %if.end.2353

if.else.2352:                                     ; preds = %if.end.2289
  %1424 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1424, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.307, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2353:                                      ; preds = %do.end.2351
  %1425 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2354 = call i32 @exists_not_none(%struct._object* %1425, %struct._Py_Identifier* @PyId_level)
  %tobool2355 = icmp ne i32 %call2354, 0
  br i1 %tobool2355, label %if.then.2356, label %if.else.2386

if.then.2356:                                     ; preds = %if.end.2353
  %1426 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2359 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1426, %struct._Py_Identifier* @PyId_level)
  store %struct._object* %call2359, %struct._object** %tmp, align 8
  %1427 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2360 = icmp eq %struct._object* %1427, null
  br i1 %cmp2360, label %if.then.2361, label %if.end.2362

if.then.2361:                                     ; preds = %if.then.2356
  br label %failed

if.end.2362:                                      ; preds = %if.then.2356
  %1428 = load %struct._object*, %struct._object** %tmp, align 8
  %1429 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2363 = call i32 @obj2ast_int(%struct._object* %1428, i32* %level, %struct._arena* %1429)
  store i32 %call2363, i32* %res2358, align 4
  %1430 = load i32, i32* %res2358, align 4
  %cmp2364 = icmp ne i32 %1430, 0
  br i1 %cmp2364, label %if.then.2365, label %if.end.2366

if.then.2365:                                     ; preds = %if.end.2362
  br label %failed

if.end.2366:                                      ; preds = %if.end.2362
  br label %do.body.2367

do.body.2367:                                     ; preds = %if.end.2366
  %1431 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1431, %struct._object** %_py_tmp2369, align 8
  %1432 = load %struct._object*, %struct._object** %_py_tmp2369, align 8
  %cmp2370 = icmp ne %struct._object* %1432, null
  br i1 %cmp2370, label %if.then.2371, label %if.end.2384

if.then.2371:                                     ; preds = %do.body.2367
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2372

do.body.2372:                                     ; preds = %if.then.2371
  %1433 = load %struct._object*, %struct._object** %_py_tmp2369, align 8
  store %struct._object* %1433, %struct._object** %_py_decref_tmp2374, align 8
  %1434 = load %struct._object*, %struct._object** %_py_decref_tmp2374, align 8
  %ob_refcnt2375 = getelementptr inbounds %struct._object, %struct._object* %1434, i32 0, i32 0
  %1435 = load i64, i64* %ob_refcnt2375, align 8
  %dec2376 = add i64 %1435, -1
  store i64 %dec2376, i64* %ob_refcnt2375, align 8
  %cmp2377 = icmp ne i64 %dec2376, 0
  br i1 %cmp2377, label %if.then.2378, label %if.else.2379

if.then.2378:                                     ; preds = %do.body.2372
  br label %if.end.2382

if.else.2379:                                     ; preds = %do.body.2372
  %1436 = load %struct._object*, %struct._object** %_py_decref_tmp2374, align 8
  %ob_type2380 = getelementptr inbounds %struct._object, %struct._object* %1436, i32 0, i32 1
  %1437 = load %struct._typeobject*, %struct._typeobject** %ob_type2380, align 8
  %tp_dealloc2381 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1437, i32 0, i32 4
  %1438 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2381, align 8
  %1439 = load %struct._object*, %struct._object** %_py_decref_tmp2374, align 8
  call void %1438(%struct._object* %1439)
  br label %if.end.2382

if.end.2382:                                      ; preds = %if.else.2379, %if.then.2378
  br label %do.end.2383

do.end.2383:                                      ; preds = %if.end.2382
  br label %if.end.2384

if.end.2384:                                      ; preds = %do.end.2383, %do.body.2367
  br label %do.end.2385

do.end.2385:                                      ; preds = %if.end.2384
  br label %if.end.2387

if.else.2386:                                     ; preds = %if.end.2353
  store i32 0, i32* %level, align 4
  br label %if.end.2387

if.end.2387:                                      ; preds = %if.else.2386, %do.end.2385
  %1440 = load %struct._object*, %struct._object** %module, align 8
  %1441 = load %struct.asdl_seq*, %struct.asdl_seq** %names2254, align 8
  %1442 = load i32, i32* %level, align 4
  %1443 = load i32, i32* %lineno, align 4
  %1444 = load i32, i32* %col_offset, align 4
  %1445 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2388 = call %struct._stmt* @_Py_ImportFrom(%struct._object* %1440, %struct.asdl_seq* %1441, i32 %1442, i32 %1443, i32 %1444, %struct._arena* %1445)
  %1446 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call2388, %struct._stmt** %1446, align 8
  %1447 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %1448 = load %struct._stmt*, %struct._stmt** %1447, align 8
  %cmp2389 = icmp eq %struct._stmt* %1448, null
  br i1 %cmp2389, label %if.then.2390, label %if.end.2391

if.then.2390:                                     ; preds = %if.end.2387
  br label %failed

if.end.2391:                                      ; preds = %if.end.2387
  store i32 0, i32* %retval
  br label %return

if.end.2392:                                      ; preds = %if.end.2249
  %1449 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1450 = load %struct._typeobject*, %struct._typeobject** @Global_type, align 8
  %1451 = bitcast %struct._typeobject* %1450 to %struct._object*
  %call2393 = call i32 @PyObject_IsInstance(%struct._object* %1449, %struct._object* %1451)
  store i32 %call2393, i32* %isinstance, align 4
  %1452 = load i32, i32* %isinstance, align 4
  %cmp2394 = icmp eq i32 %1452, -1
  br i1 %cmp2394, label %if.then.2395, label %if.end.2396

if.then.2395:                                     ; preds = %if.end.2392
  store i32 1, i32* %retval
  br label %return

if.end.2396:                                      ; preds = %if.end.2392
  %1453 = load i32, i32* %isinstance, align 4
  %tobool2397 = icmp ne i32 %1453, 0
  br i1 %tobool2397, label %if.then.2398, label %if.end.2469

if.then.2398:                                     ; preds = %if.end.2396
  %1454 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2401 = call i32 @_PyObject_HasAttrId(%struct._object* %1454, %struct._Py_Identifier* @PyId_names)
  %tobool2402 = icmp ne i32 %call2401, 0
  br i1 %tobool2402, label %if.then.2403, label %if.else.2463

if.then.2403:                                     ; preds = %if.then.2398
  %1455 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2410 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1455, %struct._Py_Identifier* @PyId_names)
  store %struct._object* %call2410, %struct._object** %tmp, align 8
  %1456 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2411 = icmp eq %struct._object* %1456, null
  br i1 %cmp2411, label %if.then.2412, label %if.end.2413

if.then.2412:                                     ; preds = %if.then.2403
  br label %failed

if.end.2413:                                      ; preds = %if.then.2403
  %1457 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2414 = getelementptr inbounds %struct._object, %struct._object* %1457, i32 0, i32 1
  %1458 = load %struct._typeobject*, %struct._typeobject** %ob_type2414, align 8
  %tp_flags2415 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1458, i32 0, i32 19
  %1459 = load i64, i64* %tp_flags2415, align 8
  %and2416 = and i64 %1459, 33554432
  %cmp2417 = icmp ne i64 %and2416, 0
  br i1 %cmp2417, label %if.end.2422, label %if.then.2418

if.then.2418:                                     ; preds = %if.end.2413
  %1460 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1461 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2419 = getelementptr inbounds %struct._object, %struct._object* %1461, i32 0, i32 1
  %1462 = load %struct._typeobject*, %struct._typeobject** %ob_type2419, align 8
  %tp_name2420 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1462, i32 0, i32 1
  %1463 = load i8*, i8** %tp_name2420, align 8
  %call2421 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1460, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.308, i32 0, i32 0), i8* %1463)
  br label %failed

if.end.2422:                                      ; preds = %if.end.2413
  %1464 = load %struct._object*, %struct._object** %tmp, align 8
  %1465 = bitcast %struct._object* %1464 to %struct.PyVarObject*
  %ob_size2423 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1465, i32 0, i32 1
  %1466 = load i64, i64* %ob_size2423, align 8
  store i64 %1466, i64* %len2407, align 8
  %1467 = load i64, i64* %len2407, align 8
  %1468 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2424 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %1467, %struct._arena* %1468)
  store %struct.asdl_seq* %call2424, %struct.asdl_seq** %names2400, align 8
  %1469 = load %struct.asdl_seq*, %struct.asdl_seq** %names2400, align 8
  %cmp2425 = icmp eq %struct.asdl_seq* %1469, null
  br i1 %cmp2425, label %if.then.2426, label %if.end.2427

if.then.2426:                                     ; preds = %if.end.2422
  br label %failed

if.end.2427:                                      ; preds = %if.end.2422
  store i64 0, i64* %i2409, align 8
  br label %for.cond.2428

for.cond.2428:                                    ; preds = %for.inc.2441, %if.end.2427
  %1470 = load i64, i64* %i2409, align 8
  %1471 = load i64, i64* %len2407, align 8
  %cmp2429 = icmp slt i64 %1470, %1471
  br i1 %cmp2429, label %for.body.2430, label %for.end.2443

for.body.2430:                                    ; preds = %for.cond.2428
  %1472 = load i64, i64* %i2409, align 8
  %1473 = load %struct._object*, %struct._object** %tmp, align 8
  %1474 = bitcast %struct._object* %1473 to %struct.PyListObject*
  %ob_item2433 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %1474, i32 0, i32 1
  %1475 = load %struct._object**, %struct._object*** %ob_item2433, align 8
  %arrayidx2434 = getelementptr %struct._object*, %struct._object** %1475, i64 %1472
  %1476 = load %struct._object*, %struct._object** %arrayidx2434, align 8
  %1477 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2435 = call i32 @obj2ast_identifier(%struct._object* %1476, %struct._object** %value2432, %struct._arena* %1477)
  store i32 %call2435, i32* %res2405, align 4
  %1478 = load i32, i32* %res2405, align 4
  %cmp2436 = icmp ne i32 %1478, 0
  br i1 %cmp2436, label %if.then.2437, label %if.end.2438

if.then.2437:                                     ; preds = %for.body.2430
  br label %failed

if.end.2438:                                      ; preds = %for.body.2430
  %1479 = load %struct._object*, %struct._object** %value2432, align 8
  %1480 = bitcast %struct._object* %1479 to i8*
  %1481 = load i64, i64* %i2409, align 8
  %1482 = load %struct.asdl_seq*, %struct.asdl_seq** %names2400, align 8
  %elements2439 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1482, i32 0, i32 1
  %arrayidx2440 = getelementptr [1 x i8*], [1 x i8*]* %elements2439, i32 0, i64 %1481
  store i8* %1480, i8** %arrayidx2440, align 8
  br label %for.inc.2441

for.inc.2441:                                     ; preds = %if.end.2438
  %1483 = load i64, i64* %i2409, align 8
  %inc2442 = add i64 %1483, 1
  store i64 %inc2442, i64* %i2409, align 8
  br label %for.cond.2428

for.end.2443:                                     ; preds = %for.cond.2428
  br label %do.body.2444

do.body.2444:                                     ; preds = %for.end.2443
  %1484 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1484, %struct._object** %_py_tmp2446, align 8
  %1485 = load %struct._object*, %struct._object** %_py_tmp2446, align 8
  %cmp2447 = icmp ne %struct._object* %1485, null
  br i1 %cmp2447, label %if.then.2448, label %if.end.2461

if.then.2448:                                     ; preds = %do.body.2444
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2449

do.body.2449:                                     ; preds = %if.then.2448
  %1486 = load %struct._object*, %struct._object** %_py_tmp2446, align 8
  store %struct._object* %1486, %struct._object** %_py_decref_tmp2451, align 8
  %1487 = load %struct._object*, %struct._object** %_py_decref_tmp2451, align 8
  %ob_refcnt2452 = getelementptr inbounds %struct._object, %struct._object* %1487, i32 0, i32 0
  %1488 = load i64, i64* %ob_refcnt2452, align 8
  %dec2453 = add i64 %1488, -1
  store i64 %dec2453, i64* %ob_refcnt2452, align 8
  %cmp2454 = icmp ne i64 %dec2453, 0
  br i1 %cmp2454, label %if.then.2455, label %if.else.2456

if.then.2455:                                     ; preds = %do.body.2449
  br label %if.end.2459

if.else.2456:                                     ; preds = %do.body.2449
  %1489 = load %struct._object*, %struct._object** %_py_decref_tmp2451, align 8
  %ob_type2457 = getelementptr inbounds %struct._object, %struct._object* %1489, i32 0, i32 1
  %1490 = load %struct._typeobject*, %struct._typeobject** %ob_type2457, align 8
  %tp_dealloc2458 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1490, i32 0, i32 4
  %1491 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2458, align 8
  %1492 = load %struct._object*, %struct._object** %_py_decref_tmp2451, align 8
  call void %1491(%struct._object* %1492)
  br label %if.end.2459

if.end.2459:                                      ; preds = %if.else.2456, %if.then.2455
  br label %do.end.2460

do.end.2460:                                      ; preds = %if.end.2459
  br label %if.end.2461

if.end.2461:                                      ; preds = %do.end.2460, %do.body.2444
  br label %do.end.2462

do.end.2462:                                      ; preds = %if.end.2461
  br label %if.end.2464

if.else.2463:                                     ; preds = %if.then.2398
  %1493 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1493, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.309, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2464:                                      ; preds = %do.end.2462
  %1494 = load %struct.asdl_seq*, %struct.asdl_seq** %names2400, align 8
  %1495 = load i32, i32* %lineno, align 4
  %1496 = load i32, i32* %col_offset, align 4
  %1497 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2465 = call %struct._stmt* @_Py_Global(%struct.asdl_seq* %1494, i32 %1495, i32 %1496, %struct._arena* %1497)
  %1498 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call2465, %struct._stmt** %1498, align 8
  %1499 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %1500 = load %struct._stmt*, %struct._stmt** %1499, align 8
  %cmp2466 = icmp eq %struct._stmt* %1500, null
  br i1 %cmp2466, label %if.then.2467, label %if.end.2468

if.then.2467:                                     ; preds = %if.end.2464
  br label %failed

if.end.2468:                                      ; preds = %if.end.2464
  store i32 0, i32* %retval
  br label %return

if.end.2469:                                      ; preds = %if.end.2396
  %1501 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1502 = load %struct._typeobject*, %struct._typeobject** @Nonlocal_type, align 8
  %1503 = bitcast %struct._typeobject* %1502 to %struct._object*
  %call2470 = call i32 @PyObject_IsInstance(%struct._object* %1501, %struct._object* %1503)
  store i32 %call2470, i32* %isinstance, align 4
  %1504 = load i32, i32* %isinstance, align 4
  %cmp2471 = icmp eq i32 %1504, -1
  br i1 %cmp2471, label %if.then.2472, label %if.end.2473

if.then.2472:                                     ; preds = %if.end.2469
  store i32 1, i32* %retval
  br label %return

if.end.2473:                                      ; preds = %if.end.2469
  %1505 = load i32, i32* %isinstance, align 4
  %tobool2474 = icmp ne i32 %1505, 0
  br i1 %tobool2474, label %if.then.2475, label %if.end.2546

if.then.2475:                                     ; preds = %if.end.2473
  %1506 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2478 = call i32 @_PyObject_HasAttrId(%struct._object* %1506, %struct._Py_Identifier* @PyId_names)
  %tobool2479 = icmp ne i32 %call2478, 0
  br i1 %tobool2479, label %if.then.2480, label %if.else.2540

if.then.2480:                                     ; preds = %if.then.2475
  %1507 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2487 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1507, %struct._Py_Identifier* @PyId_names)
  store %struct._object* %call2487, %struct._object** %tmp, align 8
  %1508 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2488 = icmp eq %struct._object* %1508, null
  br i1 %cmp2488, label %if.then.2489, label %if.end.2490

if.then.2489:                                     ; preds = %if.then.2480
  br label %failed

if.end.2490:                                      ; preds = %if.then.2480
  %1509 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2491 = getelementptr inbounds %struct._object, %struct._object* %1509, i32 0, i32 1
  %1510 = load %struct._typeobject*, %struct._typeobject** %ob_type2491, align 8
  %tp_flags2492 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1510, i32 0, i32 19
  %1511 = load i64, i64* %tp_flags2492, align 8
  %and2493 = and i64 %1511, 33554432
  %cmp2494 = icmp ne i64 %and2493, 0
  br i1 %cmp2494, label %if.end.2499, label %if.then.2495

if.then.2495:                                     ; preds = %if.end.2490
  %1512 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1513 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2496 = getelementptr inbounds %struct._object, %struct._object* %1513, i32 0, i32 1
  %1514 = load %struct._typeobject*, %struct._typeobject** %ob_type2496, align 8
  %tp_name2497 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1514, i32 0, i32 1
  %1515 = load i8*, i8** %tp_name2497, align 8
  %call2498 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1512, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.310, i32 0, i32 0), i8* %1515)
  br label %failed

if.end.2499:                                      ; preds = %if.end.2490
  %1516 = load %struct._object*, %struct._object** %tmp, align 8
  %1517 = bitcast %struct._object* %1516 to %struct.PyVarObject*
  %ob_size2500 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1517, i32 0, i32 1
  %1518 = load i64, i64* %ob_size2500, align 8
  store i64 %1518, i64* %len2484, align 8
  %1519 = load i64, i64* %len2484, align 8
  %1520 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2501 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %1519, %struct._arena* %1520)
  store %struct.asdl_seq* %call2501, %struct.asdl_seq** %names2477, align 8
  %1521 = load %struct.asdl_seq*, %struct.asdl_seq** %names2477, align 8
  %cmp2502 = icmp eq %struct.asdl_seq* %1521, null
  br i1 %cmp2502, label %if.then.2503, label %if.end.2504

if.then.2503:                                     ; preds = %if.end.2499
  br label %failed

if.end.2504:                                      ; preds = %if.end.2499
  store i64 0, i64* %i2486, align 8
  br label %for.cond.2505

for.cond.2505:                                    ; preds = %for.inc.2518, %if.end.2504
  %1522 = load i64, i64* %i2486, align 8
  %1523 = load i64, i64* %len2484, align 8
  %cmp2506 = icmp slt i64 %1522, %1523
  br i1 %cmp2506, label %for.body.2507, label %for.end.2520

for.body.2507:                                    ; preds = %for.cond.2505
  %1524 = load i64, i64* %i2486, align 8
  %1525 = load %struct._object*, %struct._object** %tmp, align 8
  %1526 = bitcast %struct._object* %1525 to %struct.PyListObject*
  %ob_item2510 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %1526, i32 0, i32 1
  %1527 = load %struct._object**, %struct._object*** %ob_item2510, align 8
  %arrayidx2511 = getelementptr %struct._object*, %struct._object** %1527, i64 %1524
  %1528 = load %struct._object*, %struct._object** %arrayidx2511, align 8
  %1529 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2512 = call i32 @obj2ast_identifier(%struct._object* %1528, %struct._object** %value2509, %struct._arena* %1529)
  store i32 %call2512, i32* %res2482, align 4
  %1530 = load i32, i32* %res2482, align 4
  %cmp2513 = icmp ne i32 %1530, 0
  br i1 %cmp2513, label %if.then.2514, label %if.end.2515

if.then.2514:                                     ; preds = %for.body.2507
  br label %failed

if.end.2515:                                      ; preds = %for.body.2507
  %1531 = load %struct._object*, %struct._object** %value2509, align 8
  %1532 = bitcast %struct._object* %1531 to i8*
  %1533 = load i64, i64* %i2486, align 8
  %1534 = load %struct.asdl_seq*, %struct.asdl_seq** %names2477, align 8
  %elements2516 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1534, i32 0, i32 1
  %arrayidx2517 = getelementptr [1 x i8*], [1 x i8*]* %elements2516, i32 0, i64 %1533
  store i8* %1532, i8** %arrayidx2517, align 8
  br label %for.inc.2518

for.inc.2518:                                     ; preds = %if.end.2515
  %1535 = load i64, i64* %i2486, align 8
  %inc2519 = add i64 %1535, 1
  store i64 %inc2519, i64* %i2486, align 8
  br label %for.cond.2505

for.end.2520:                                     ; preds = %for.cond.2505
  br label %do.body.2521

do.body.2521:                                     ; preds = %for.end.2520
  %1536 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1536, %struct._object** %_py_tmp2523, align 8
  %1537 = load %struct._object*, %struct._object** %_py_tmp2523, align 8
  %cmp2524 = icmp ne %struct._object* %1537, null
  br i1 %cmp2524, label %if.then.2525, label %if.end.2538

if.then.2525:                                     ; preds = %do.body.2521
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2526

do.body.2526:                                     ; preds = %if.then.2525
  %1538 = load %struct._object*, %struct._object** %_py_tmp2523, align 8
  store %struct._object* %1538, %struct._object** %_py_decref_tmp2528, align 8
  %1539 = load %struct._object*, %struct._object** %_py_decref_tmp2528, align 8
  %ob_refcnt2529 = getelementptr inbounds %struct._object, %struct._object* %1539, i32 0, i32 0
  %1540 = load i64, i64* %ob_refcnt2529, align 8
  %dec2530 = add i64 %1540, -1
  store i64 %dec2530, i64* %ob_refcnt2529, align 8
  %cmp2531 = icmp ne i64 %dec2530, 0
  br i1 %cmp2531, label %if.then.2532, label %if.else.2533

if.then.2532:                                     ; preds = %do.body.2526
  br label %if.end.2536

if.else.2533:                                     ; preds = %do.body.2526
  %1541 = load %struct._object*, %struct._object** %_py_decref_tmp2528, align 8
  %ob_type2534 = getelementptr inbounds %struct._object, %struct._object* %1541, i32 0, i32 1
  %1542 = load %struct._typeobject*, %struct._typeobject** %ob_type2534, align 8
  %tp_dealloc2535 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1542, i32 0, i32 4
  %1543 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2535, align 8
  %1544 = load %struct._object*, %struct._object** %_py_decref_tmp2528, align 8
  call void %1543(%struct._object* %1544)
  br label %if.end.2536

if.end.2536:                                      ; preds = %if.else.2533, %if.then.2532
  br label %do.end.2537

do.end.2537:                                      ; preds = %if.end.2536
  br label %if.end.2538

if.end.2538:                                      ; preds = %do.end.2537, %do.body.2521
  br label %do.end.2539

do.end.2539:                                      ; preds = %if.end.2538
  br label %if.end.2541

if.else.2540:                                     ; preds = %if.then.2475
  %1545 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1545, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.311, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2541:                                      ; preds = %do.end.2539
  %1546 = load %struct.asdl_seq*, %struct.asdl_seq** %names2477, align 8
  %1547 = load i32, i32* %lineno, align 4
  %1548 = load i32, i32* %col_offset, align 4
  %1549 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2542 = call %struct._stmt* @_Py_Nonlocal(%struct.asdl_seq* %1546, i32 %1547, i32 %1548, %struct._arena* %1549)
  %1550 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call2542, %struct._stmt** %1550, align 8
  %1551 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %1552 = load %struct._stmt*, %struct._stmt** %1551, align 8
  %cmp2543 = icmp eq %struct._stmt* %1552, null
  br i1 %cmp2543, label %if.then.2544, label %if.end.2545

if.then.2544:                                     ; preds = %if.end.2541
  br label %failed

if.end.2545:                                      ; preds = %if.end.2541
  store i32 0, i32* %retval
  br label %return

if.end.2546:                                      ; preds = %if.end.2473
  %1553 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1554 = load %struct._typeobject*, %struct._typeobject** @Expr_type, align 8
  %1555 = bitcast %struct._typeobject* %1554 to %struct._object*
  %call2547 = call i32 @PyObject_IsInstance(%struct._object* %1553, %struct._object* %1555)
  store i32 %call2547, i32* %isinstance, align 4
  %1556 = load i32, i32* %isinstance, align 4
  %cmp2548 = icmp eq i32 %1556, -1
  br i1 %cmp2548, label %if.then.2549, label %if.end.2550

if.then.2549:                                     ; preds = %if.end.2546
  store i32 1, i32* %retval
  br label %return

if.end.2550:                                      ; preds = %if.end.2546
  %1557 = load i32, i32* %isinstance, align 4
  %tobool2551 = icmp ne i32 %1557, 0
  br i1 %tobool2551, label %if.then.2552, label %if.end.2593

if.then.2552:                                     ; preds = %if.end.2550
  %1558 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2555 = call i32 @_PyObject_HasAttrId(%struct._object* %1558, %struct._Py_Identifier* @PyId_value)
  %tobool2556 = icmp ne i32 %call2555, 0
  br i1 %tobool2556, label %if.then.2557, label %if.else.2587

if.then.2557:                                     ; preds = %if.then.2552
  %1559 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2560 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1559, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call2560, %struct._object** %tmp, align 8
  %1560 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2561 = icmp eq %struct._object* %1560, null
  br i1 %cmp2561, label %if.then.2562, label %if.end.2563

if.then.2562:                                     ; preds = %if.then.2557
  br label %failed

if.end.2563:                                      ; preds = %if.then.2557
  %1561 = load %struct._object*, %struct._object** %tmp, align 8
  %1562 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2564 = call i32 @obj2ast_expr(%struct._object* %1561, %struct._expr** %value2554, %struct._arena* %1562)
  store i32 %call2564, i32* %res2559, align 4
  %1563 = load i32, i32* %res2559, align 4
  %cmp2565 = icmp ne i32 %1563, 0
  br i1 %cmp2565, label %if.then.2566, label %if.end.2567

if.then.2566:                                     ; preds = %if.end.2563
  br label %failed

if.end.2567:                                      ; preds = %if.end.2563
  br label %do.body.2568

do.body.2568:                                     ; preds = %if.end.2567
  %1564 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1564, %struct._object** %_py_tmp2570, align 8
  %1565 = load %struct._object*, %struct._object** %_py_tmp2570, align 8
  %cmp2571 = icmp ne %struct._object* %1565, null
  br i1 %cmp2571, label %if.then.2572, label %if.end.2585

if.then.2572:                                     ; preds = %do.body.2568
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2573

do.body.2573:                                     ; preds = %if.then.2572
  %1566 = load %struct._object*, %struct._object** %_py_tmp2570, align 8
  store %struct._object* %1566, %struct._object** %_py_decref_tmp2575, align 8
  %1567 = load %struct._object*, %struct._object** %_py_decref_tmp2575, align 8
  %ob_refcnt2576 = getelementptr inbounds %struct._object, %struct._object* %1567, i32 0, i32 0
  %1568 = load i64, i64* %ob_refcnt2576, align 8
  %dec2577 = add i64 %1568, -1
  store i64 %dec2577, i64* %ob_refcnt2576, align 8
  %cmp2578 = icmp ne i64 %dec2577, 0
  br i1 %cmp2578, label %if.then.2579, label %if.else.2580

if.then.2579:                                     ; preds = %do.body.2573
  br label %if.end.2583

if.else.2580:                                     ; preds = %do.body.2573
  %1569 = load %struct._object*, %struct._object** %_py_decref_tmp2575, align 8
  %ob_type2581 = getelementptr inbounds %struct._object, %struct._object* %1569, i32 0, i32 1
  %1570 = load %struct._typeobject*, %struct._typeobject** %ob_type2581, align 8
  %tp_dealloc2582 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1570, i32 0, i32 4
  %1571 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2582, align 8
  %1572 = load %struct._object*, %struct._object** %_py_decref_tmp2575, align 8
  call void %1571(%struct._object* %1572)
  br label %if.end.2583

if.end.2583:                                      ; preds = %if.else.2580, %if.then.2579
  br label %do.end.2584

do.end.2584:                                      ; preds = %if.end.2583
  br label %if.end.2585

if.end.2585:                                      ; preds = %do.end.2584, %do.body.2568
  br label %do.end.2586

do.end.2586:                                      ; preds = %if.end.2585
  br label %if.end.2588

if.else.2587:                                     ; preds = %if.then.2552
  %1573 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1573, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.312, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2588:                                      ; preds = %do.end.2586
  %1574 = load %struct._expr*, %struct._expr** %value2554, align 8
  %1575 = load i32, i32* %lineno, align 4
  %1576 = load i32, i32* %col_offset, align 4
  %1577 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2589 = call %struct._stmt* @_Py_Expr(%struct._expr* %1574, i32 %1575, i32 %1576, %struct._arena* %1577)
  %1578 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call2589, %struct._stmt** %1578, align 8
  %1579 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %1580 = load %struct._stmt*, %struct._stmt** %1579, align 8
  %cmp2590 = icmp eq %struct._stmt* %1580, null
  br i1 %cmp2590, label %if.then.2591, label %if.end.2592

if.then.2591:                                     ; preds = %if.end.2588
  br label %failed

if.end.2592:                                      ; preds = %if.end.2588
  store i32 0, i32* %retval
  br label %return

if.end.2593:                                      ; preds = %if.end.2550
  %1581 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1582 = load %struct._typeobject*, %struct._typeobject** @Pass_type, align 8
  %1583 = bitcast %struct._typeobject* %1582 to %struct._object*
  %call2594 = call i32 @PyObject_IsInstance(%struct._object* %1581, %struct._object* %1583)
  store i32 %call2594, i32* %isinstance, align 4
  %1584 = load i32, i32* %isinstance, align 4
  %cmp2595 = icmp eq i32 %1584, -1
  br i1 %cmp2595, label %if.then.2596, label %if.end.2597

if.then.2596:                                     ; preds = %if.end.2593
  store i32 1, i32* %retval
  br label %return

if.end.2597:                                      ; preds = %if.end.2593
  %1585 = load i32, i32* %isinstance, align 4
  %tobool2598 = icmp ne i32 %1585, 0
  br i1 %tobool2598, label %if.then.2599, label %if.end.2604

if.then.2599:                                     ; preds = %if.end.2597
  %1586 = load i32, i32* %lineno, align 4
  %1587 = load i32, i32* %col_offset, align 4
  %1588 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2600 = call %struct._stmt* @_Py_Pass(i32 %1586, i32 %1587, %struct._arena* %1588)
  %1589 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call2600, %struct._stmt** %1589, align 8
  %1590 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %1591 = load %struct._stmt*, %struct._stmt** %1590, align 8
  %cmp2601 = icmp eq %struct._stmt* %1591, null
  br i1 %cmp2601, label %if.then.2602, label %if.end.2603

if.then.2602:                                     ; preds = %if.then.2599
  br label %failed

if.end.2603:                                      ; preds = %if.then.2599
  store i32 0, i32* %retval
  br label %return

if.end.2604:                                      ; preds = %if.end.2597
  %1592 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1593 = load %struct._typeobject*, %struct._typeobject** @Break_type, align 8
  %1594 = bitcast %struct._typeobject* %1593 to %struct._object*
  %call2605 = call i32 @PyObject_IsInstance(%struct._object* %1592, %struct._object* %1594)
  store i32 %call2605, i32* %isinstance, align 4
  %1595 = load i32, i32* %isinstance, align 4
  %cmp2606 = icmp eq i32 %1595, -1
  br i1 %cmp2606, label %if.then.2607, label %if.end.2608

if.then.2607:                                     ; preds = %if.end.2604
  store i32 1, i32* %retval
  br label %return

if.end.2608:                                      ; preds = %if.end.2604
  %1596 = load i32, i32* %isinstance, align 4
  %tobool2609 = icmp ne i32 %1596, 0
  br i1 %tobool2609, label %if.then.2610, label %if.end.2615

if.then.2610:                                     ; preds = %if.end.2608
  %1597 = load i32, i32* %lineno, align 4
  %1598 = load i32, i32* %col_offset, align 4
  %1599 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2611 = call %struct._stmt* @_Py_Break(i32 %1597, i32 %1598, %struct._arena* %1599)
  %1600 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call2611, %struct._stmt** %1600, align 8
  %1601 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %1602 = load %struct._stmt*, %struct._stmt** %1601, align 8
  %cmp2612 = icmp eq %struct._stmt* %1602, null
  br i1 %cmp2612, label %if.then.2613, label %if.end.2614

if.then.2613:                                     ; preds = %if.then.2610
  br label %failed

if.end.2614:                                      ; preds = %if.then.2610
  store i32 0, i32* %retval
  br label %return

if.end.2615:                                      ; preds = %if.end.2608
  %1603 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1604 = load %struct._typeobject*, %struct._typeobject** @Continue_type, align 8
  %1605 = bitcast %struct._typeobject* %1604 to %struct._object*
  %call2616 = call i32 @PyObject_IsInstance(%struct._object* %1603, %struct._object* %1605)
  store i32 %call2616, i32* %isinstance, align 4
  %1606 = load i32, i32* %isinstance, align 4
  %cmp2617 = icmp eq i32 %1606, -1
  br i1 %cmp2617, label %if.then.2618, label %if.end.2619

if.then.2618:                                     ; preds = %if.end.2615
  store i32 1, i32* %retval
  br label %return

if.end.2619:                                      ; preds = %if.end.2615
  %1607 = load i32, i32* %isinstance, align 4
  %tobool2620 = icmp ne i32 %1607, 0
  br i1 %tobool2620, label %if.then.2621, label %if.end.2626

if.then.2621:                                     ; preds = %if.end.2619
  %1608 = load i32, i32* %lineno, align 4
  %1609 = load i32, i32* %col_offset, align 4
  %1610 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2622 = call %struct._stmt* @_Py_Continue(i32 %1608, i32 %1609, %struct._arena* %1610)
  %1611 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  store %struct._stmt* %call2622, %struct._stmt** %1611, align 8
  %1612 = load %struct._stmt**, %struct._stmt*** %out.addr, align 8
  %1613 = load %struct._stmt*, %struct._stmt** %1612, align 8
  %cmp2623 = icmp eq %struct._stmt* %1613, null
  br i1 %cmp2623, label %if.then.2624, label %if.end.2625

if.then.2624:                                     ; preds = %if.then.2621
  br label %failed

if.end.2625:                                      ; preds = %if.then.2621
  store i32 0, i32* %retval
  br label %return

if.end.2626:                                      ; preds = %if.end.2619
  %1614 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1615 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2627 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1614, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.313, i32 0, i32 0), %struct._object* %1615)
  br label %failed

failed:                                           ; preds = %if.end.2626, %if.then.2624, %if.then.2613, %if.then.2602, %if.then.2591, %if.then.2566, %if.then.2562, %if.then.2544, %if.then.2514, %if.then.2503, %if.then.2495, %if.then.2489, %if.then.2467, %if.then.2437, %if.then.2426, %if.then.2418, %if.then.2412, %if.then.2390, %if.then.2365, %if.then.2361, %if.then.2326, %if.then.2315, %if.then.2307, %if.then.2301, %if.then.2267, %if.then.2263, %if.then.2243, %if.then.2213, %if.then.2202, %if.then.2194, %if.then.2188, %if.then.2167, %if.then.2142, %if.then.2138, %if.then.2108, %if.then.2104, %if.then.2085, %if.then.2055, %if.then.2044, %if.then.2036, %if.then.2030, %if.then.1991, %if.then.1980, %if.then.1972, %if.then.1966, %if.then.1927, %if.then.1916, %if.then.1908, %if.then.1902, %if.then.1863, %if.then.1852, %if.then.1844, %if.then.1838, %if.then.1812, %if.then.1787, %if.then.1783, %if.then.1753, %if.then.1749, %if.then.1731, %if.then.1701, %if.then.1690, %if.then.1682, %if.then.1676, %if.then.1637, %if.then.1626, %if.then.1618, %if.then.1612, %if.then.1589, %if.then.1559, %if.then.1548, %if.then.1540, %if.then.1534, %if.then.1495, %if.then.1484, %if.then.1476, %if.then.1470, %if.then.1436, %if.then.1432, %if.then.1410, %if.then.1380, %if.then.1369, %if.then.1361, %if.then.1355, %if.then.1316, %if.then.1305, %if.then.1297, %if.then.1291, %if.then.1257, %if.then.1253, %if.then.1232, %if.then.1202, %if.then.1191, %if.then.1183, %if.then.1177, %if.then.1138, %if.then.1127, %if.then.1119, %if.then.1113, %if.then.1079, %if.then.1075, %if.then.1045, %if.then.1041, %if.then.1019, %if.then.994, %if.then.990, %if.then.960, %if.then.956, %if.then.926, %if.then.922, %if.then.902, %if.then.877, %if.then.873, %if.then.838, %if.then.827, %if.then.819, %if.then.813, %if.then.789, %if.then.759, %if.then.748, %if.then.740, %if.then.734, %if.then.713, %if.then.688, %if.then.684, %if.then.666, %if.then.636, %if.then.625, %if.then.617, %if.then.611, %if.then.572, %if.then.561, %if.then.553, %if.then.547, %if.then.513, %if.then.509, %if.then.479, %if.then.475, %if.then.440, %if.then.429, %if.then.421, %if.then.415, %if.then.376, %if.then.365, %if.then.357, %if.then.351, %if.then.317, %if.then.313, %if.then.287, %if.then.262, %if.then.258, %if.then.223, %if.then.212, %if.then.204, %if.then.198, %if.then.163, %if.then.157, %if.then.151, %if.then.147, %if.then.115, %if.then.111, %if.then.81, %if.then.77, %if.then.36, %if.then.32, %if.then.11, %if.then.7
  br label %do.body.2628

do.body.2628:                                     ; preds = %failed
  %1616 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1616, %struct._object** %_py_xdecref_tmp, align 8
  %1617 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp2630 = icmp ne %struct._object* %1617, null
  br i1 %cmp2630, label %if.then.2631, label %if.end.2644

if.then.2631:                                     ; preds = %do.body.2628
  br label %do.body.2632

do.body.2632:                                     ; preds = %if.then.2631
  %1618 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %1618, %struct._object** %_py_decref_tmp2634, align 8
  %1619 = load %struct._object*, %struct._object** %_py_decref_tmp2634, align 8
  %ob_refcnt2635 = getelementptr inbounds %struct._object, %struct._object* %1619, i32 0, i32 0
  %1620 = load i64, i64* %ob_refcnt2635, align 8
  %dec2636 = add i64 %1620, -1
  store i64 %dec2636, i64* %ob_refcnt2635, align 8
  %cmp2637 = icmp ne i64 %dec2636, 0
  br i1 %cmp2637, label %if.then.2638, label %if.else.2639

if.then.2638:                                     ; preds = %do.body.2632
  br label %if.end.2642

if.else.2639:                                     ; preds = %do.body.2632
  %1621 = load %struct._object*, %struct._object** %_py_decref_tmp2634, align 8
  %ob_type2640 = getelementptr inbounds %struct._object, %struct._object* %1621, i32 0, i32 1
  %1622 = load %struct._typeobject*, %struct._typeobject** %ob_type2640, align 8
  %tp_dealloc2641 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1622, i32 0, i32 4
  %1623 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2641, align 8
  %1624 = load %struct._object*, %struct._object** %_py_decref_tmp2634, align 8
  call void %1623(%struct._object* %1624)
  br label %if.end.2642

if.end.2642:                                      ; preds = %if.else.2639, %if.then.2638
  br label %do.end.2643

do.end.2643:                                      ; preds = %if.end.2642
  br label %if.end.2644

if.end.2644:                                      ; preds = %do.end.2643, %do.body.2628
  br label %do.end.2645

do.end.2645:                                      ; preds = %if.end.2644
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %do.end.2645, %if.end.2625, %if.then.2618, %if.end.2614, %if.then.2607, %if.end.2603, %if.then.2596, %if.end.2592, %if.else.2587, %if.then.2549, %if.end.2545, %if.else.2540, %if.then.2472, %if.end.2468, %if.else.2463, %if.then.2395, %if.end.2391, %if.else.2352, %if.then.2248, %if.end.2244, %if.else.2239, %if.then.2172, %if.end.2168, %if.else.2129, %if.then.2090, %if.end.2086, %if.else.2081, %if.else.2017, %if.else.1953, %if.else.1889, %if.then.1817, %if.end.1813, %if.then.1736, %if.end.1732, %if.else.1727, %if.else.1663, %if.then.1594, %if.end.1590, %if.else.1585, %if.else.1521, %if.else.1457, %if.then.1415, %if.end.1411, %if.else.1406, %if.else.1342, %if.else.1278, %if.then.1237, %if.end.1233, %if.else.1228, %if.else.1164, %if.else.1100, %if.else.1066, %if.then.1024, %if.end.1020, %if.else.1015, %if.else.981, %if.else.947, %if.then.907, %if.end.903, %if.else.898, %if.else.864, %if.then.794, %if.end.790, %if.else.785, %if.then.718, %if.end.714, %if.then.671, %if.end.667, %if.else.662, %if.else.598, %if.else.466, %if.else.402, %if.else.338, %if.then.292, %if.end.288, %if.else.249, %if.else.185, %if.else.136, %if.else.102, %if.then.61, %if.else.57, %if.else.23, %if.then
  %1625 = load i32, i32* %retval
  ret i32 %1625
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_expr(%struct._object* %obj, %struct._expr** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._expr**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %isinstance = alloca i32, align 4
  %tmp = alloca %struct._object*, align 8
  %lineno = alloca i32, align 4
  %col_offset = alloca i32, align 4
  %res = alloca i32, align 4
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %res29 = alloca i32, align 4
  %_py_tmp40 = alloca %struct._object*, align 8
  %_py_decref_tmp45 = alloca %struct._object*, align 8
  %op = alloca i32, align 4
  %values = alloca %struct.asdl_seq*, align 8
  %res71 = alloca i32, align 4
  %_py_tmp82 = alloca %struct._object*, align 8
  %_py_decref_tmp87 = alloca %struct._object*, align 8
  %res105 = alloca i32, align 4
  %len = alloca i64, align 8
  %i = alloca i64, align 8
  %value = alloca %struct._expr*, align 8
  %_py_tmp131 = alloca %struct._object*, align 8
  %_py_decref_tmp136 = alloca %struct._object*, align 8
  %left = alloca %struct._expr*, align 8
  %op163 = alloca i32, align 4
  %right = alloca %struct._expr*, align 8
  %res169 = alloca i32, align 4
  %_py_tmp180 = alloca %struct._object*, align 8
  %_py_decref_tmp185 = alloca %struct._object*, align 8
  %res203 = alloca i32, align 4
  %_py_tmp214 = alloca %struct._object*, align 8
  %_py_decref_tmp219 = alloca %struct._object*, align 8
  %res237 = alloca i32, align 4
  %_py_tmp248 = alloca %struct._object*, align 8
  %_py_decref_tmp253 = alloca %struct._object*, align 8
  %op279 = alloca i32, align 4
  %operand = alloca %struct._expr*, align 8
  %res285 = alloca i32, align 4
  %_py_tmp296 = alloca %struct._object*, align 8
  %_py_decref_tmp301 = alloca %struct._object*, align 8
  %res319 = alloca i32, align 4
  %_py_tmp330 = alloca %struct._object*, align 8
  %_py_decref_tmp335 = alloca %struct._object*, align 8
  %args = alloca %struct._arguments*, align 8
  %body = alloca %struct._expr*, align 8
  %res366 = alloca i32, align 4
  %_py_tmp377 = alloca %struct._object*, align 8
  %_py_decref_tmp382 = alloca %struct._object*, align 8
  %res400 = alloca i32, align 4
  %_py_tmp411 = alloca %struct._object*, align 8
  %_py_decref_tmp416 = alloca %struct._object*, align 8
  %test = alloca %struct._expr*, align 8
  %body443 = alloca %struct._expr*, align 8
  %orelse = alloca %struct._expr*, align 8
  %res449 = alloca i32, align 4
  %_py_tmp460 = alloca %struct._object*, align 8
  %_py_decref_tmp465 = alloca %struct._object*, align 8
  %res483 = alloca i32, align 4
  %_py_tmp494 = alloca %struct._object*, align 8
  %_py_decref_tmp499 = alloca %struct._object*, align 8
  %res517 = alloca i32, align 4
  %_py_tmp528 = alloca %struct._object*, align 8
  %_py_decref_tmp533 = alloca %struct._object*, align 8
  %keys = alloca %struct.asdl_seq*, align 8
  %values560 = alloca %struct.asdl_seq*, align 8
  %res565 = alloca i32, align 4
  %len567 = alloca i64, align 8
  %i569 = alloca i64, align 8
  %value592 = alloca %struct._expr*, align 8
  %_py_tmp606 = alloca %struct._object*, align 8
  %_py_decref_tmp611 = alloca %struct._object*, align 8
  %res629 = alloca i32, align 4
  %len631 = alloca i64, align 8
  %i633 = alloca i64, align 8
  %value656 = alloca %struct._expr*, align 8
  %_py_tmp670 = alloca %struct._object*, align 8
  %_py_decref_tmp675 = alloca %struct._object*, align 8
  %elts = alloca %struct.asdl_seq*, align 8
  %res705 = alloca i32, align 4
  %len707 = alloca i64, align 8
  %i709 = alloca i64, align 8
  %value732 = alloca %struct._expr*, align 8
  %_py_tmp746 = alloca %struct._object*, align 8
  %_py_decref_tmp751 = alloca %struct._object*, align 8
  %elt = alloca %struct._expr*, align 8
  %generators = alloca %struct.asdl_seq*, align 8
  %res782 = alloca i32, align 4
  %_py_tmp793 = alloca %struct._object*, align 8
  %_py_decref_tmp798 = alloca %struct._object*, align 8
  %res816 = alloca i32, align 4
  %len818 = alloca i64, align 8
  %i820 = alloca i64, align 8
  %value843 = alloca %struct._comprehension*, align 8
  %_py_tmp857 = alloca %struct._object*, align 8
  %_py_decref_tmp862 = alloca %struct._object*, align 8
  %elt888 = alloca %struct._expr*, align 8
  %generators890 = alloca %struct.asdl_seq*, align 8
  %res895 = alloca i32, align 4
  %_py_tmp906 = alloca %struct._object*, align 8
  %_py_decref_tmp911 = alloca %struct._object*, align 8
  %res929 = alloca i32, align 4
  %len931 = alloca i64, align 8
  %i933 = alloca i64, align 8
  %value956 = alloca %struct._comprehension*, align 8
  %_py_tmp970 = alloca %struct._object*, align 8
  %_py_decref_tmp975 = alloca %struct._object*, align 8
  %key = alloca %struct._expr*, align 8
  %value1002 = alloca %struct._expr*, align 8
  %generators1004 = alloca %struct.asdl_seq*, align 8
  %res1009 = alloca i32, align 4
  %_py_tmp1020 = alloca %struct._object*, align 8
  %_py_decref_tmp1025 = alloca %struct._object*, align 8
  %res1043 = alloca i32, align 4
  %_py_tmp1054 = alloca %struct._object*, align 8
  %_py_decref_tmp1059 = alloca %struct._object*, align 8
  %res1077 = alloca i32, align 4
  %len1079 = alloca i64, align 8
  %i1081 = alloca i64, align 8
  %value1104 = alloca %struct._comprehension*, align 8
  %_py_tmp1118 = alloca %struct._object*, align 8
  %_py_decref_tmp1123 = alloca %struct._object*, align 8
  %elt1149 = alloca %struct._expr*, align 8
  %generators1151 = alloca %struct.asdl_seq*, align 8
  %res1156 = alloca i32, align 4
  %_py_tmp1167 = alloca %struct._object*, align 8
  %_py_decref_tmp1172 = alloca %struct._object*, align 8
  %res1190 = alloca i32, align 4
  %len1192 = alloca i64, align 8
  %i1194 = alloca i64, align 8
  %value1217 = alloca %struct._comprehension*, align 8
  %_py_tmp1231 = alloca %struct._object*, align 8
  %_py_decref_tmp1236 = alloca %struct._object*, align 8
  %value1262 = alloca %struct._expr*, align 8
  %res1267 = alloca i32, align 4
  %_py_tmp1278 = alloca %struct._object*, align 8
  %_py_decref_tmp1283 = alloca %struct._object*, align 8
  %value1309 = alloca %struct._expr*, align 8
  %res1314 = alloca i32, align 4
  %_py_tmp1325 = alloca %struct._object*, align 8
  %_py_decref_tmp1330 = alloca %struct._object*, align 8
  %left1356 = alloca %struct._expr*, align 8
  %ops = alloca %struct.asdl_int_seq*, align 8
  %comparators = alloca %struct.asdl_seq*, align 8
  %res1363 = alloca i32, align 4
  %_py_tmp1374 = alloca %struct._object*, align 8
  %_py_decref_tmp1379 = alloca %struct._object*, align 8
  %res1397 = alloca i32, align 4
  %len1399 = alloca i64, align 8
  %i1401 = alloca i64, align 8
  %value1424 = alloca i32, align 4
  %_py_tmp1438 = alloca %struct._object*, align 8
  %_py_decref_tmp1443 = alloca %struct._object*, align 8
  %res1461 = alloca i32, align 4
  %len1463 = alloca i64, align 8
  %i1465 = alloca i64, align 8
  %value1488 = alloca %struct._expr*, align 8
  %_py_tmp1502 = alloca %struct._object*, align 8
  %_py_decref_tmp1507 = alloca %struct._object*, align 8
  %func = alloca %struct._expr*, align 8
  %args1534 = alloca %struct.asdl_seq*, align 8
  %keywords = alloca %struct.asdl_seq*, align 8
  %starargs = alloca %struct._expr*, align 8
  %kwargs = alloca %struct._expr*, align 8
  %res1542 = alloca i32, align 4
  %_py_tmp1553 = alloca %struct._object*, align 8
  %_py_decref_tmp1558 = alloca %struct._object*, align 8
  %res1576 = alloca i32, align 4
  %len1578 = alloca i64, align 8
  %i1580 = alloca i64, align 8
  %value1603 = alloca %struct._expr*, align 8
  %_py_tmp1617 = alloca %struct._object*, align 8
  %_py_decref_tmp1622 = alloca %struct._object*, align 8
  %res1640 = alloca i32, align 4
  %len1642 = alloca i64, align 8
  %i1644 = alloca i64, align 8
  %value1667 = alloca %struct._keyword*, align 8
  %_py_tmp1681 = alloca %struct._object*, align 8
  %_py_decref_tmp1686 = alloca %struct._object*, align 8
  %res1704 = alloca i32, align 4
  %_py_tmp1715 = alloca %struct._object*, align 8
  %_py_decref_tmp1720 = alloca %struct._object*, align 8
  %res1738 = alloca i32, align 4
  %_py_tmp1749 = alloca %struct._object*, align 8
  %_py_decref_tmp1754 = alloca %struct._object*, align 8
  %n = alloca %struct._object*, align 8
  %res1784 = alloca i32, align 4
  %_py_tmp1795 = alloca %struct._object*, align 8
  %_py_decref_tmp1800 = alloca %struct._object*, align 8
  %s = alloca %struct._object*, align 8
  %res1830 = alloca i32, align 4
  %_py_tmp1841 = alloca %struct._object*, align 8
  %_py_decref_tmp1846 = alloca %struct._object*, align 8
  %s1872 = alloca %struct._object*, align 8
  %res1877 = alloca i32, align 4
  %_py_tmp1888 = alloca %struct._object*, align 8
  %_py_decref_tmp1893 = alloca %struct._object*, align 8
  %value1919 = alloca %struct._object*, align 8
  %res1924 = alloca i32, align 4
  %_py_tmp1935 = alloca %struct._object*, align 8
  %_py_decref_tmp1940 = alloca %struct._object*, align 8
  %value1977 = alloca %struct._expr*, align 8
  %attr = alloca %struct._object*, align 8
  %ctx = alloca i32, align 4
  %res1984 = alloca i32, align 4
  %_py_tmp1995 = alloca %struct._object*, align 8
  %_py_decref_tmp2000 = alloca %struct._object*, align 8
  %res2018 = alloca i32, align 4
  %_py_tmp2029 = alloca %struct._object*, align 8
  %_py_decref_tmp2034 = alloca %struct._object*, align 8
  %res2052 = alloca i32, align 4
  %_py_tmp2063 = alloca %struct._object*, align 8
  %_py_decref_tmp2068 = alloca %struct._object*, align 8
  %value2094 = alloca %struct._expr*, align 8
  %slice = alloca %struct._slice*, align 8
  %ctx2097 = alloca i32, align 4
  %res2102 = alloca i32, align 4
  %_py_tmp2113 = alloca %struct._object*, align 8
  %_py_decref_tmp2118 = alloca %struct._object*, align 8
  %res2136 = alloca i32, align 4
  %_py_tmp2147 = alloca %struct._object*, align 8
  %_py_decref_tmp2152 = alloca %struct._object*, align 8
  %res2170 = alloca i32, align 4
  %_py_tmp2181 = alloca %struct._object*, align 8
  %_py_decref_tmp2186 = alloca %struct._object*, align 8
  %value2212 = alloca %struct._expr*, align 8
  %ctx2214 = alloca i32, align 4
  %res2219 = alloca i32, align 4
  %_py_tmp2230 = alloca %struct._object*, align 8
  %_py_decref_tmp2235 = alloca %struct._object*, align 8
  %res2253 = alloca i32, align 4
  %_py_tmp2264 = alloca %struct._object*, align 8
  %_py_decref_tmp2269 = alloca %struct._object*, align 8
  %id = alloca %struct._object*, align 8
  %ctx2296 = alloca i32, align 4
  %res2301 = alloca i32, align 4
  %_py_tmp2312 = alloca %struct._object*, align 8
  %_py_decref_tmp2317 = alloca %struct._object*, align 8
  %res2335 = alloca i32, align 4
  %_py_tmp2346 = alloca %struct._object*, align 8
  %_py_decref_tmp2351 = alloca %struct._object*, align 8
  %elts2377 = alloca %struct.asdl_seq*, align 8
  %ctx2379 = alloca i32, align 4
  %res2384 = alloca i32, align 4
  %len2386 = alloca i64, align 8
  %i2388 = alloca i64, align 8
  %value2411 = alloca %struct._expr*, align 8
  %_py_tmp2425 = alloca %struct._object*, align 8
  %_py_decref_tmp2430 = alloca %struct._object*, align 8
  %res2448 = alloca i32, align 4
  %_py_tmp2459 = alloca %struct._object*, align 8
  %_py_decref_tmp2464 = alloca %struct._object*, align 8
  %elts2490 = alloca %struct.asdl_seq*, align 8
  %ctx2492 = alloca i32, align 4
  %res2497 = alloca i32, align 4
  %len2499 = alloca i64, align 8
  %i2501 = alloca i64, align 8
  %value2524 = alloca %struct._expr*, align 8
  %_py_tmp2538 = alloca %struct._object*, align 8
  %_py_decref_tmp2543 = alloca %struct._object*, align 8
  %res2561 = alloca i32, align 4
  %_py_tmp2572 = alloca %struct._object*, align 8
  %_py_decref_tmp2577 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp2603 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._expr** %out, %struct._expr*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  store %struct._object* null, %struct._object** %tmp, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %cmp = icmp eq %struct._object* %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* null, %struct._expr** %1, align 8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i32 @_PyObject_HasAttrId(%struct._object* %2, %struct._Py_Identifier* @PyId_lineno)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then.3, label %if.else.23

if.then.3:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call5 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %3, %struct._Py_Identifier* @PyId_lineno)
  store %struct._object* %call5, %struct._object** %tmp, align 8
  %4 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp6 = icmp eq %struct._object* %4, null
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.then.3
  br label %failed

if.end.8:                                         ; preds = %if.then.3
  %5 = load %struct._object*, %struct._object** %tmp, align 8
  %6 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call9 = call i32 @obj2ast_int(%struct._object* %5, i32* %lineno, %struct._arena* %6)
  store i32 %call9, i32* %res, align 4
  %7 = load i32, i32* %res, align 4
  %cmp10 = icmp ne i32 %7, 0
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.8
  br label %failed

if.end.12:                                        ; preds = %if.end.8
  br label %do.body

do.body:                                          ; preds = %if.end.12
  %8 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %8, %struct._object** %_py_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp14 = icmp ne %struct._object* %9, null
  br i1 %cmp14, label %if.then.15, label %if.end.21

if.then.15:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.16

do.body.16:                                       ; preds = %if.then.15
  %10 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0
  %12 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %12, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp18 = icmp ne i64 %dec, 0
  br i1 %cmp18, label %if.then.19, label %if.else

if.then.19:                                       ; preds = %do.body.16
  br label %if.end.20

if.else:                                          ; preds = %do.body.16
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %15(%struct._object* %16)
  br label %if.end.20

if.end.20:                                        ; preds = %if.else, %if.then.19
  br label %do.end

do.end:                                           ; preds = %if.end.20
  br label %if.end.21

if.end.21:                                        ; preds = %do.end, %do.body
  br label %do.end.22

do.end.22:                                        ; preds = %if.end.21
  br label %if.end.24

if.else.23:                                       ; preds = %if.end
  %17 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.335, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.24:                                        ; preds = %do.end.22
  %18 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call25 = call i32 @_PyObject_HasAttrId(%struct._object* %18, %struct._Py_Identifier* @PyId_col_offset)
  %tobool26 = icmp ne i32 %call25, 0
  br i1 %tobool26, label %if.then.27, label %if.else.57

if.then.27:                                       ; preds = %if.end.24
  %19 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call30 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %19, %struct._Py_Identifier* @PyId_col_offset)
  store %struct._object* %call30, %struct._object** %tmp, align 8
  %20 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp31 = icmp eq %struct._object* %20, null
  br i1 %cmp31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.then.27
  br label %failed

if.end.33:                                        ; preds = %if.then.27
  %21 = load %struct._object*, %struct._object** %tmp, align 8
  %22 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call34 = call i32 @obj2ast_int(%struct._object* %21, i32* %col_offset, %struct._arena* %22)
  store i32 %call34, i32* %res29, align 4
  %23 = load i32, i32* %res29, align 4
  %cmp35 = icmp ne i32 %23, 0
  br i1 %cmp35, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %if.end.33
  br label %failed

if.end.37:                                        ; preds = %if.end.33
  br label %do.body.38

do.body.38:                                       ; preds = %if.end.37
  %24 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %24, %struct._object** %_py_tmp40, align 8
  %25 = load %struct._object*, %struct._object** %_py_tmp40, align 8
  %cmp41 = icmp ne %struct._object* %25, null
  br i1 %cmp41, label %if.then.42, label %if.end.55

if.then.42:                                       ; preds = %do.body.38
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.43

do.body.43:                                       ; preds = %if.then.42
  %26 = load %struct._object*, %struct._object** %_py_tmp40, align 8
  store %struct._object* %26, %struct._object** %_py_decref_tmp45, align 8
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0
  %28 = load i64, i64* %ob_refcnt46, align 8
  %dec47 = add i64 %28, -1
  store i64 %dec47, i64* %ob_refcnt46, align 8
  %cmp48 = icmp ne i64 %dec47, 0
  br i1 %cmp48, label %if.then.49, label %if.else.50

if.then.49:                                       ; preds = %do.body.43
  br label %if.end.53

if.else.50:                                       ; preds = %do.body.43
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8
  %tp_dealloc52 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc52, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  call void %31(%struct._object* %32)
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.50, %if.then.49
  br label %do.end.54

do.end.54:                                        ; preds = %if.end.53
  br label %if.end.55

if.end.55:                                        ; preds = %do.end.54, %do.body.38
  br label %do.end.56

do.end.56:                                        ; preds = %if.end.55
  br label %if.end.58

if.else.57:                                       ; preds = %if.end.24
  %33 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %33, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.336, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.58:                                        ; preds = %do.end.56
  %34 = load %struct._object*, %struct._object** %obj.addr, align 8
  %35 = load %struct._typeobject*, %struct._typeobject** @BoolOp_type, align 8
  %36 = bitcast %struct._typeobject* %35 to %struct._object*
  %call59 = call i32 @PyObject_IsInstance(%struct._object* %34, %struct._object* %36)
  store i32 %call59, i32* %isinstance, align 4
  %37 = load i32, i32* %isinstance, align 4
  %cmp60 = icmp eq i32 %37, -1
  br i1 %cmp60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.end.58
  store i32 1, i32* %retval
  br label %return

if.end.62:                                        ; preds = %if.end.58
  %38 = load i32, i32* %isinstance, align 4
  %tobool63 = icmp ne i32 %38, 0
  br i1 %tobool63, label %if.then.64, label %if.end.154

if.then.64:                                       ; preds = %if.end.62
  %39 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call67 = call i32 @_PyObject_HasAttrId(%struct._object* %39, %struct._Py_Identifier* @PyId_op)
  %tobool68 = icmp ne i32 %call67, 0
  br i1 %tobool68, label %if.then.69, label %if.else.99

if.then.69:                                       ; preds = %if.then.64
  %40 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call72 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %40, %struct._Py_Identifier* @PyId_op)
  store %struct._object* %call72, %struct._object** %tmp, align 8
  %41 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp73 = icmp eq %struct._object* %41, null
  br i1 %cmp73, label %if.then.74, label %if.end.75

if.then.74:                                       ; preds = %if.then.69
  br label %failed

if.end.75:                                        ; preds = %if.then.69
  %42 = load %struct._object*, %struct._object** %tmp, align 8
  %43 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call76 = call i32 @obj2ast_boolop(%struct._object* %42, i32* %op, %struct._arena* %43)
  store i32 %call76, i32* %res71, align 4
  %44 = load i32, i32* %res71, align 4
  %cmp77 = icmp ne i32 %44, 0
  br i1 %cmp77, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %if.end.75
  br label %failed

if.end.79:                                        ; preds = %if.end.75
  br label %do.body.80

do.body.80:                                       ; preds = %if.end.79
  %45 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %45, %struct._object** %_py_tmp82, align 8
  %46 = load %struct._object*, %struct._object** %_py_tmp82, align 8
  %cmp83 = icmp ne %struct._object* %46, null
  br i1 %cmp83, label %if.then.84, label %if.end.97

if.then.84:                                       ; preds = %do.body.80
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.85

do.body.85:                                       ; preds = %if.then.84
  %47 = load %struct._object*, %struct._object** %_py_tmp82, align 8
  store %struct._object* %47, %struct._object** %_py_decref_tmp87, align 8
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8
  %ob_refcnt88 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0
  %49 = load i64, i64* %ob_refcnt88, align 8
  %dec89 = add i64 %49, -1
  store i64 %dec89, i64* %ob_refcnt88, align 8
  %cmp90 = icmp ne i64 %dec89, 0
  br i1 %cmp90, label %if.then.91, label %if.else.92

if.then.91:                                       ; preds = %do.body.85
  br label %if.end.95

if.else.92:                                       ; preds = %do.body.85
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8
  %ob_type93 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 1
  %51 = load %struct._typeobject*, %struct._typeobject** %ob_type93, align 8
  %tp_dealloc94 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %51, i32 0, i32 4
  %52 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc94, align 8
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8
  call void %52(%struct._object* %53)
  br label %if.end.95

if.end.95:                                        ; preds = %if.else.92, %if.then.91
  br label %do.end.96

do.end.96:                                        ; preds = %if.end.95
  br label %if.end.97

if.end.97:                                        ; preds = %do.end.96, %do.body.80
  br label %do.end.98

do.end.98:                                        ; preds = %if.end.97
  br label %if.end.100

if.else.99:                                       ; preds = %if.then.64
  %54 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %54, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.337, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.100:                                       ; preds = %do.end.98
  %55 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call101 = call i32 @_PyObject_HasAttrId(%struct._object* %55, %struct._Py_Identifier* @PyId_values)
  %tobool102 = icmp ne i32 %call101, 0
  br i1 %tobool102, label %if.then.103, label %if.else.148

if.then.103:                                      ; preds = %if.end.100
  %56 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call108 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %56, %struct._Py_Identifier* @PyId_values)
  store %struct._object* %call108, %struct._object** %tmp, align 8
  %57 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp109 = icmp eq %struct._object* %57, null
  br i1 %cmp109, label %if.then.110, label %if.end.111

if.then.110:                                      ; preds = %if.then.103
  br label %failed

if.end.111:                                       ; preds = %if.then.103
  %58 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type112 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type112, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 19
  %60 = load i64, i64* %tp_flags, align 8
  %and = and i64 %60, 33554432
  %cmp113 = icmp ne i64 %and, 0
  br i1 %cmp113, label %if.end.117, label %if.then.114

if.then.114:                                      ; preds = %if.end.111
  %61 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %62 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type115 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type115, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 1
  %64 = load i8*, i8** %tp_name, align 8
  %call116 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %61, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.338, i32 0, i32 0), i8* %64)
  br label %failed

if.end.117:                                       ; preds = %if.end.111
  %65 = load %struct._object*, %struct._object** %tmp, align 8
  %66 = bitcast %struct._object* %65 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %66, i32 0, i32 1
  %67 = load i64, i64* %ob_size, align 8
  store i64 %67, i64* %len, align 8
  %68 = load i64, i64* %len, align 8
  %69 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call118 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %68, %struct._arena* %69)
  store %struct.asdl_seq* %call118, %struct.asdl_seq** %values, align 8
  %70 = load %struct.asdl_seq*, %struct.asdl_seq** %values, align 8
  %cmp119 = icmp eq %struct.asdl_seq* %70, null
  br i1 %cmp119, label %if.then.120, label %if.end.121

if.then.120:                                      ; preds = %if.end.117
  br label %failed

if.end.121:                                       ; preds = %if.end.117
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.121
  %71 = load i64, i64* %i, align 8
  %72 = load i64, i64* %len, align 8
  %cmp122 = icmp slt i64 %71, %72
  br i1 %cmp122, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %73 = load i64, i64* %i, align 8
  %74 = load %struct._object*, %struct._object** %tmp, align 8
  %75 = bitcast %struct._object* %74 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %75, i32 0, i32 1
  %76 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %76, i64 %73
  %77 = load %struct._object*, %struct._object** %arrayidx, align 8
  %78 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call124 = call i32 @obj2ast_expr(%struct._object* %77, %struct._expr** %value, %struct._arena* %78)
  store i32 %call124, i32* %res105, align 4
  %79 = load i32, i32* %res105, align 4
  %cmp125 = icmp ne i32 %79, 0
  br i1 %cmp125, label %if.then.126, label %if.end.127

if.then.126:                                      ; preds = %for.body
  br label %failed

if.end.127:                                       ; preds = %for.body
  %80 = load %struct._expr*, %struct._expr** %value, align 8
  %81 = bitcast %struct._expr* %80 to i8*
  %82 = load i64, i64* %i, align 8
  %83 = load %struct.asdl_seq*, %struct.asdl_seq** %values, align 8
  %elements = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %83, i32 0, i32 1
  %arrayidx128 = getelementptr [1 x i8*], [1 x i8*]* %elements, i32 0, i64 %82
  store i8* %81, i8** %arrayidx128, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.127
  %84 = load i64, i64* %i, align 8
  %inc = add i64 %84, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body.129

do.body.129:                                      ; preds = %for.end
  %85 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %85, %struct._object** %_py_tmp131, align 8
  %86 = load %struct._object*, %struct._object** %_py_tmp131, align 8
  %cmp132 = icmp ne %struct._object* %86, null
  br i1 %cmp132, label %if.then.133, label %if.end.146

if.then.133:                                      ; preds = %do.body.129
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.134

do.body.134:                                      ; preds = %if.then.133
  %87 = load %struct._object*, %struct._object** %_py_tmp131, align 8
  store %struct._object* %87, %struct._object** %_py_decref_tmp136, align 8
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8
  %ob_refcnt137 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 0
  %89 = load i64, i64* %ob_refcnt137, align 8
  %dec138 = add i64 %89, -1
  store i64 %dec138, i64* %ob_refcnt137, align 8
  %cmp139 = icmp ne i64 %dec138, 0
  br i1 %cmp139, label %if.then.140, label %if.else.141

if.then.140:                                      ; preds = %do.body.134
  br label %if.end.144

if.else.141:                                      ; preds = %do.body.134
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8
  %ob_type142 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 1
  %91 = load %struct._typeobject*, %struct._typeobject** %ob_type142, align 8
  %tp_dealloc143 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %91, i32 0, i32 4
  %92 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc143, align 8
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8
  call void %92(%struct._object* %93)
  br label %if.end.144

if.end.144:                                       ; preds = %if.else.141, %if.then.140
  br label %do.end.145

do.end.145:                                       ; preds = %if.end.144
  br label %if.end.146

if.end.146:                                       ; preds = %do.end.145, %do.body.129
  br label %do.end.147

do.end.147:                                       ; preds = %if.end.146
  br label %if.end.149

if.else.148:                                      ; preds = %if.end.100
  %94 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %94, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.339, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.149:                                       ; preds = %do.end.147
  %95 = load i32, i32* %op, align 4
  %96 = load %struct.asdl_seq*, %struct.asdl_seq** %values, align 8
  %97 = load i32, i32* %lineno, align 4
  %98 = load i32, i32* %col_offset, align 4
  %99 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call150 = call %struct._expr* @_Py_BoolOp(i32 %95, %struct.asdl_seq* %96, i32 %97, i32 %98, %struct._arena* %99)
  %100 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call150, %struct._expr** %100, align 8
  %101 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %102 = load %struct._expr*, %struct._expr** %101, align 8
  %cmp151 = icmp eq %struct._expr* %102, null
  br i1 %cmp151, label %if.then.152, label %if.end.153

if.then.152:                                      ; preds = %if.end.149
  br label %failed

if.end.153:                                       ; preds = %if.end.149
  store i32 0, i32* %retval
  br label %return

if.end.154:                                       ; preds = %if.end.62
  %103 = load %struct._object*, %struct._object** %obj.addr, align 8
  %104 = load %struct._typeobject*, %struct._typeobject** @BinOp_type, align 8
  %105 = bitcast %struct._typeobject* %104 to %struct._object*
  %call155 = call i32 @PyObject_IsInstance(%struct._object* %103, %struct._object* %105)
  store i32 %call155, i32* %isinstance, align 4
  %106 = load i32, i32* %isinstance, align 4
  %cmp156 = icmp eq i32 %106, -1
  br i1 %cmp156, label %if.then.157, label %if.end.158

if.then.157:                                      ; preds = %if.end.154
  store i32 1, i32* %retval
  br label %return

if.end.158:                                       ; preds = %if.end.154
  %107 = load i32, i32* %isinstance, align 4
  %tobool159 = icmp ne i32 %107, 0
  br i1 %tobool159, label %if.then.160, label %if.end.271

if.then.160:                                      ; preds = %if.end.158
  %108 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call165 = call i32 @_PyObject_HasAttrId(%struct._object* %108, %struct._Py_Identifier* @PyId_left)
  %tobool166 = icmp ne i32 %call165, 0
  br i1 %tobool166, label %if.then.167, label %if.else.197

if.then.167:                                      ; preds = %if.then.160
  %109 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call170 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %109, %struct._Py_Identifier* @PyId_left)
  store %struct._object* %call170, %struct._object** %tmp, align 8
  %110 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp171 = icmp eq %struct._object* %110, null
  br i1 %cmp171, label %if.then.172, label %if.end.173

if.then.172:                                      ; preds = %if.then.167
  br label %failed

if.end.173:                                       ; preds = %if.then.167
  %111 = load %struct._object*, %struct._object** %tmp, align 8
  %112 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call174 = call i32 @obj2ast_expr(%struct._object* %111, %struct._expr** %left, %struct._arena* %112)
  store i32 %call174, i32* %res169, align 4
  %113 = load i32, i32* %res169, align 4
  %cmp175 = icmp ne i32 %113, 0
  br i1 %cmp175, label %if.then.176, label %if.end.177

if.then.176:                                      ; preds = %if.end.173
  br label %failed

if.end.177:                                       ; preds = %if.end.173
  br label %do.body.178

do.body.178:                                      ; preds = %if.end.177
  %114 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %114, %struct._object** %_py_tmp180, align 8
  %115 = load %struct._object*, %struct._object** %_py_tmp180, align 8
  %cmp181 = icmp ne %struct._object* %115, null
  br i1 %cmp181, label %if.then.182, label %if.end.195

if.then.182:                                      ; preds = %do.body.178
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.183

do.body.183:                                      ; preds = %if.then.182
  %116 = load %struct._object*, %struct._object** %_py_tmp180, align 8
  store %struct._object* %116, %struct._object** %_py_decref_tmp185, align 8
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp185, align 8
  %ob_refcnt186 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 0
  %118 = load i64, i64* %ob_refcnt186, align 8
  %dec187 = add i64 %118, -1
  store i64 %dec187, i64* %ob_refcnt186, align 8
  %cmp188 = icmp ne i64 %dec187, 0
  br i1 %cmp188, label %if.then.189, label %if.else.190

if.then.189:                                      ; preds = %do.body.183
  br label %if.end.193

if.else.190:                                      ; preds = %do.body.183
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp185, align 8
  %ob_type191 = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 1
  %120 = load %struct._typeobject*, %struct._typeobject** %ob_type191, align 8
  %tp_dealloc192 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %120, i32 0, i32 4
  %121 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc192, align 8
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp185, align 8
  call void %121(%struct._object* %122)
  br label %if.end.193

if.end.193:                                       ; preds = %if.else.190, %if.then.189
  br label %do.end.194

do.end.194:                                       ; preds = %if.end.193
  br label %if.end.195

if.end.195:                                       ; preds = %do.end.194, %do.body.178
  br label %do.end.196

do.end.196:                                       ; preds = %if.end.195
  br label %if.end.198

if.else.197:                                      ; preds = %if.then.160
  %123 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %123, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.340, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.198:                                       ; preds = %do.end.196
  %124 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call199 = call i32 @_PyObject_HasAttrId(%struct._object* %124, %struct._Py_Identifier* @PyId_op)
  %tobool200 = icmp ne i32 %call199, 0
  br i1 %tobool200, label %if.then.201, label %if.else.231

if.then.201:                                      ; preds = %if.end.198
  %125 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call204 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %125, %struct._Py_Identifier* @PyId_op)
  store %struct._object* %call204, %struct._object** %tmp, align 8
  %126 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp205 = icmp eq %struct._object* %126, null
  br i1 %cmp205, label %if.then.206, label %if.end.207

if.then.206:                                      ; preds = %if.then.201
  br label %failed

if.end.207:                                       ; preds = %if.then.201
  %127 = load %struct._object*, %struct._object** %tmp, align 8
  %128 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call208 = call i32 @obj2ast_operator(%struct._object* %127, i32* %op163, %struct._arena* %128)
  store i32 %call208, i32* %res203, align 4
  %129 = load i32, i32* %res203, align 4
  %cmp209 = icmp ne i32 %129, 0
  br i1 %cmp209, label %if.then.210, label %if.end.211

if.then.210:                                      ; preds = %if.end.207
  br label %failed

if.end.211:                                       ; preds = %if.end.207
  br label %do.body.212

do.body.212:                                      ; preds = %if.end.211
  %130 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %130, %struct._object** %_py_tmp214, align 8
  %131 = load %struct._object*, %struct._object** %_py_tmp214, align 8
  %cmp215 = icmp ne %struct._object* %131, null
  br i1 %cmp215, label %if.then.216, label %if.end.229

if.then.216:                                      ; preds = %do.body.212
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.217

do.body.217:                                      ; preds = %if.then.216
  %132 = load %struct._object*, %struct._object** %_py_tmp214, align 8
  store %struct._object* %132, %struct._object** %_py_decref_tmp219, align 8
  %133 = load %struct._object*, %struct._object** %_py_decref_tmp219, align 8
  %ob_refcnt220 = getelementptr inbounds %struct._object, %struct._object* %133, i32 0, i32 0
  %134 = load i64, i64* %ob_refcnt220, align 8
  %dec221 = add i64 %134, -1
  store i64 %dec221, i64* %ob_refcnt220, align 8
  %cmp222 = icmp ne i64 %dec221, 0
  br i1 %cmp222, label %if.then.223, label %if.else.224

if.then.223:                                      ; preds = %do.body.217
  br label %if.end.227

if.else.224:                                      ; preds = %do.body.217
  %135 = load %struct._object*, %struct._object** %_py_decref_tmp219, align 8
  %ob_type225 = getelementptr inbounds %struct._object, %struct._object* %135, i32 0, i32 1
  %136 = load %struct._typeobject*, %struct._typeobject** %ob_type225, align 8
  %tp_dealloc226 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %136, i32 0, i32 4
  %137 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc226, align 8
  %138 = load %struct._object*, %struct._object** %_py_decref_tmp219, align 8
  call void %137(%struct._object* %138)
  br label %if.end.227

if.end.227:                                       ; preds = %if.else.224, %if.then.223
  br label %do.end.228

do.end.228:                                       ; preds = %if.end.227
  br label %if.end.229

if.end.229:                                       ; preds = %do.end.228, %do.body.212
  br label %do.end.230

do.end.230:                                       ; preds = %if.end.229
  br label %if.end.232

if.else.231:                                      ; preds = %if.end.198
  %139 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %139, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.341, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.232:                                       ; preds = %do.end.230
  %140 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call233 = call i32 @_PyObject_HasAttrId(%struct._object* %140, %struct._Py_Identifier* @PyId_right)
  %tobool234 = icmp ne i32 %call233, 0
  br i1 %tobool234, label %if.then.235, label %if.else.265

if.then.235:                                      ; preds = %if.end.232
  %141 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call238 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %141, %struct._Py_Identifier* @PyId_right)
  store %struct._object* %call238, %struct._object** %tmp, align 8
  %142 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp239 = icmp eq %struct._object* %142, null
  br i1 %cmp239, label %if.then.240, label %if.end.241

if.then.240:                                      ; preds = %if.then.235
  br label %failed

if.end.241:                                       ; preds = %if.then.235
  %143 = load %struct._object*, %struct._object** %tmp, align 8
  %144 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call242 = call i32 @obj2ast_expr(%struct._object* %143, %struct._expr** %right, %struct._arena* %144)
  store i32 %call242, i32* %res237, align 4
  %145 = load i32, i32* %res237, align 4
  %cmp243 = icmp ne i32 %145, 0
  br i1 %cmp243, label %if.then.244, label %if.end.245

if.then.244:                                      ; preds = %if.end.241
  br label %failed

if.end.245:                                       ; preds = %if.end.241
  br label %do.body.246

do.body.246:                                      ; preds = %if.end.245
  %146 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %146, %struct._object** %_py_tmp248, align 8
  %147 = load %struct._object*, %struct._object** %_py_tmp248, align 8
  %cmp249 = icmp ne %struct._object* %147, null
  br i1 %cmp249, label %if.then.250, label %if.end.263

if.then.250:                                      ; preds = %do.body.246
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.251

do.body.251:                                      ; preds = %if.then.250
  %148 = load %struct._object*, %struct._object** %_py_tmp248, align 8
  store %struct._object* %148, %struct._object** %_py_decref_tmp253, align 8
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp253, align 8
  %ob_refcnt254 = getelementptr inbounds %struct._object, %struct._object* %149, i32 0, i32 0
  %150 = load i64, i64* %ob_refcnt254, align 8
  %dec255 = add i64 %150, -1
  store i64 %dec255, i64* %ob_refcnt254, align 8
  %cmp256 = icmp ne i64 %dec255, 0
  br i1 %cmp256, label %if.then.257, label %if.else.258

if.then.257:                                      ; preds = %do.body.251
  br label %if.end.261

if.else.258:                                      ; preds = %do.body.251
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp253, align 8
  %ob_type259 = getelementptr inbounds %struct._object, %struct._object* %151, i32 0, i32 1
  %152 = load %struct._typeobject*, %struct._typeobject** %ob_type259, align 8
  %tp_dealloc260 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %152, i32 0, i32 4
  %153 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc260, align 8
  %154 = load %struct._object*, %struct._object** %_py_decref_tmp253, align 8
  call void %153(%struct._object* %154)
  br label %if.end.261

if.end.261:                                       ; preds = %if.else.258, %if.then.257
  br label %do.end.262

do.end.262:                                       ; preds = %if.end.261
  br label %if.end.263

if.end.263:                                       ; preds = %do.end.262, %do.body.246
  br label %do.end.264

do.end.264:                                       ; preds = %if.end.263
  br label %if.end.266

if.else.265:                                      ; preds = %if.end.232
  %155 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %155, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.342, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.266:                                       ; preds = %do.end.264
  %156 = load %struct._expr*, %struct._expr** %left, align 8
  %157 = load i32, i32* %op163, align 4
  %158 = load %struct._expr*, %struct._expr** %right, align 8
  %159 = load i32, i32* %lineno, align 4
  %160 = load i32, i32* %col_offset, align 4
  %161 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call267 = call %struct._expr* @_Py_BinOp(%struct._expr* %156, i32 %157, %struct._expr* %158, i32 %159, i32 %160, %struct._arena* %161)
  %162 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call267, %struct._expr** %162, align 8
  %163 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %164 = load %struct._expr*, %struct._expr** %163, align 8
  %cmp268 = icmp eq %struct._expr* %164, null
  br i1 %cmp268, label %if.then.269, label %if.end.270

if.then.269:                                      ; preds = %if.end.266
  br label %failed

if.end.270:                                       ; preds = %if.end.266
  store i32 0, i32* %retval
  br label %return

if.end.271:                                       ; preds = %if.end.158
  %165 = load %struct._object*, %struct._object** %obj.addr, align 8
  %166 = load %struct._typeobject*, %struct._typeobject** @UnaryOp_type, align 8
  %167 = bitcast %struct._typeobject* %166 to %struct._object*
  %call272 = call i32 @PyObject_IsInstance(%struct._object* %165, %struct._object* %167)
  store i32 %call272, i32* %isinstance, align 4
  %168 = load i32, i32* %isinstance, align 4
  %cmp273 = icmp eq i32 %168, -1
  br i1 %cmp273, label %if.then.274, label %if.end.275

if.then.274:                                      ; preds = %if.end.271
  store i32 1, i32* %retval
  br label %return

if.end.275:                                       ; preds = %if.end.271
  %169 = load i32, i32* %isinstance, align 4
  %tobool276 = icmp ne i32 %169, 0
  br i1 %tobool276, label %if.then.277, label %if.end.353

if.then.277:                                      ; preds = %if.end.275
  %170 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call281 = call i32 @_PyObject_HasAttrId(%struct._object* %170, %struct._Py_Identifier* @PyId_op)
  %tobool282 = icmp ne i32 %call281, 0
  br i1 %tobool282, label %if.then.283, label %if.else.313

if.then.283:                                      ; preds = %if.then.277
  %171 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call286 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %171, %struct._Py_Identifier* @PyId_op)
  store %struct._object* %call286, %struct._object** %tmp, align 8
  %172 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp287 = icmp eq %struct._object* %172, null
  br i1 %cmp287, label %if.then.288, label %if.end.289

if.then.288:                                      ; preds = %if.then.283
  br label %failed

if.end.289:                                       ; preds = %if.then.283
  %173 = load %struct._object*, %struct._object** %tmp, align 8
  %174 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call290 = call i32 @obj2ast_unaryop(%struct._object* %173, i32* %op279, %struct._arena* %174)
  store i32 %call290, i32* %res285, align 4
  %175 = load i32, i32* %res285, align 4
  %cmp291 = icmp ne i32 %175, 0
  br i1 %cmp291, label %if.then.292, label %if.end.293

if.then.292:                                      ; preds = %if.end.289
  br label %failed

if.end.293:                                       ; preds = %if.end.289
  br label %do.body.294

do.body.294:                                      ; preds = %if.end.293
  %176 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %176, %struct._object** %_py_tmp296, align 8
  %177 = load %struct._object*, %struct._object** %_py_tmp296, align 8
  %cmp297 = icmp ne %struct._object* %177, null
  br i1 %cmp297, label %if.then.298, label %if.end.311

if.then.298:                                      ; preds = %do.body.294
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.299

do.body.299:                                      ; preds = %if.then.298
  %178 = load %struct._object*, %struct._object** %_py_tmp296, align 8
  store %struct._object* %178, %struct._object** %_py_decref_tmp301, align 8
  %179 = load %struct._object*, %struct._object** %_py_decref_tmp301, align 8
  %ob_refcnt302 = getelementptr inbounds %struct._object, %struct._object* %179, i32 0, i32 0
  %180 = load i64, i64* %ob_refcnt302, align 8
  %dec303 = add i64 %180, -1
  store i64 %dec303, i64* %ob_refcnt302, align 8
  %cmp304 = icmp ne i64 %dec303, 0
  br i1 %cmp304, label %if.then.305, label %if.else.306

if.then.305:                                      ; preds = %do.body.299
  br label %if.end.309

if.else.306:                                      ; preds = %do.body.299
  %181 = load %struct._object*, %struct._object** %_py_decref_tmp301, align 8
  %ob_type307 = getelementptr inbounds %struct._object, %struct._object* %181, i32 0, i32 1
  %182 = load %struct._typeobject*, %struct._typeobject** %ob_type307, align 8
  %tp_dealloc308 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %182, i32 0, i32 4
  %183 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc308, align 8
  %184 = load %struct._object*, %struct._object** %_py_decref_tmp301, align 8
  call void %183(%struct._object* %184)
  br label %if.end.309

if.end.309:                                       ; preds = %if.else.306, %if.then.305
  br label %do.end.310

do.end.310:                                       ; preds = %if.end.309
  br label %if.end.311

if.end.311:                                       ; preds = %do.end.310, %do.body.294
  br label %do.end.312

do.end.312:                                       ; preds = %if.end.311
  br label %if.end.314

if.else.313:                                      ; preds = %if.then.277
  %185 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %185, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.343, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.314:                                       ; preds = %do.end.312
  %186 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call315 = call i32 @_PyObject_HasAttrId(%struct._object* %186, %struct._Py_Identifier* @PyId_operand)
  %tobool316 = icmp ne i32 %call315, 0
  br i1 %tobool316, label %if.then.317, label %if.else.347

if.then.317:                                      ; preds = %if.end.314
  %187 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call320 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %187, %struct._Py_Identifier* @PyId_operand)
  store %struct._object* %call320, %struct._object** %tmp, align 8
  %188 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp321 = icmp eq %struct._object* %188, null
  br i1 %cmp321, label %if.then.322, label %if.end.323

if.then.322:                                      ; preds = %if.then.317
  br label %failed

if.end.323:                                       ; preds = %if.then.317
  %189 = load %struct._object*, %struct._object** %tmp, align 8
  %190 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call324 = call i32 @obj2ast_expr(%struct._object* %189, %struct._expr** %operand, %struct._arena* %190)
  store i32 %call324, i32* %res319, align 4
  %191 = load i32, i32* %res319, align 4
  %cmp325 = icmp ne i32 %191, 0
  br i1 %cmp325, label %if.then.326, label %if.end.327

if.then.326:                                      ; preds = %if.end.323
  br label %failed

if.end.327:                                       ; preds = %if.end.323
  br label %do.body.328

do.body.328:                                      ; preds = %if.end.327
  %192 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %192, %struct._object** %_py_tmp330, align 8
  %193 = load %struct._object*, %struct._object** %_py_tmp330, align 8
  %cmp331 = icmp ne %struct._object* %193, null
  br i1 %cmp331, label %if.then.332, label %if.end.345

if.then.332:                                      ; preds = %do.body.328
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.333

do.body.333:                                      ; preds = %if.then.332
  %194 = load %struct._object*, %struct._object** %_py_tmp330, align 8
  store %struct._object* %194, %struct._object** %_py_decref_tmp335, align 8
  %195 = load %struct._object*, %struct._object** %_py_decref_tmp335, align 8
  %ob_refcnt336 = getelementptr inbounds %struct._object, %struct._object* %195, i32 0, i32 0
  %196 = load i64, i64* %ob_refcnt336, align 8
  %dec337 = add i64 %196, -1
  store i64 %dec337, i64* %ob_refcnt336, align 8
  %cmp338 = icmp ne i64 %dec337, 0
  br i1 %cmp338, label %if.then.339, label %if.else.340

if.then.339:                                      ; preds = %do.body.333
  br label %if.end.343

if.else.340:                                      ; preds = %do.body.333
  %197 = load %struct._object*, %struct._object** %_py_decref_tmp335, align 8
  %ob_type341 = getelementptr inbounds %struct._object, %struct._object* %197, i32 0, i32 1
  %198 = load %struct._typeobject*, %struct._typeobject** %ob_type341, align 8
  %tp_dealloc342 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %198, i32 0, i32 4
  %199 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc342, align 8
  %200 = load %struct._object*, %struct._object** %_py_decref_tmp335, align 8
  call void %199(%struct._object* %200)
  br label %if.end.343

if.end.343:                                       ; preds = %if.else.340, %if.then.339
  br label %do.end.344

do.end.344:                                       ; preds = %if.end.343
  br label %if.end.345

if.end.345:                                       ; preds = %do.end.344, %do.body.328
  br label %do.end.346

do.end.346:                                       ; preds = %if.end.345
  br label %if.end.348

if.else.347:                                      ; preds = %if.end.314
  %201 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %201, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.344, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.348:                                       ; preds = %do.end.346
  %202 = load i32, i32* %op279, align 4
  %203 = load %struct._expr*, %struct._expr** %operand, align 8
  %204 = load i32, i32* %lineno, align 4
  %205 = load i32, i32* %col_offset, align 4
  %206 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call349 = call %struct._expr* @_Py_UnaryOp(i32 %202, %struct._expr* %203, i32 %204, i32 %205, %struct._arena* %206)
  %207 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call349, %struct._expr** %207, align 8
  %208 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %209 = load %struct._expr*, %struct._expr** %208, align 8
  %cmp350 = icmp eq %struct._expr* %209, null
  br i1 %cmp350, label %if.then.351, label %if.end.352

if.then.351:                                      ; preds = %if.end.348
  br label %failed

if.end.352:                                       ; preds = %if.end.348
  store i32 0, i32* %retval
  br label %return

if.end.353:                                       ; preds = %if.end.275
  %210 = load %struct._object*, %struct._object** %obj.addr, align 8
  %211 = load %struct._typeobject*, %struct._typeobject** @Lambda_type, align 8
  %212 = bitcast %struct._typeobject* %211 to %struct._object*
  %call354 = call i32 @PyObject_IsInstance(%struct._object* %210, %struct._object* %212)
  store i32 %call354, i32* %isinstance, align 4
  %213 = load i32, i32* %isinstance, align 4
  %cmp355 = icmp eq i32 %213, -1
  br i1 %cmp355, label %if.then.356, label %if.end.357

if.then.356:                                      ; preds = %if.end.353
  store i32 1, i32* %retval
  br label %return

if.end.357:                                       ; preds = %if.end.353
  %214 = load i32, i32* %isinstance, align 4
  %tobool358 = icmp ne i32 %214, 0
  br i1 %tobool358, label %if.then.359, label %if.end.434

if.then.359:                                      ; preds = %if.end.357
  %215 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call362 = call i32 @_PyObject_HasAttrId(%struct._object* %215, %struct._Py_Identifier* @PyId_args)
  %tobool363 = icmp ne i32 %call362, 0
  br i1 %tobool363, label %if.then.364, label %if.else.394

if.then.364:                                      ; preds = %if.then.359
  %216 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call367 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %216, %struct._Py_Identifier* @PyId_args)
  store %struct._object* %call367, %struct._object** %tmp, align 8
  %217 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp368 = icmp eq %struct._object* %217, null
  br i1 %cmp368, label %if.then.369, label %if.end.370

if.then.369:                                      ; preds = %if.then.364
  br label %failed

if.end.370:                                       ; preds = %if.then.364
  %218 = load %struct._object*, %struct._object** %tmp, align 8
  %219 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call371 = call i32 @obj2ast_arguments(%struct._object* %218, %struct._arguments** %args, %struct._arena* %219)
  store i32 %call371, i32* %res366, align 4
  %220 = load i32, i32* %res366, align 4
  %cmp372 = icmp ne i32 %220, 0
  br i1 %cmp372, label %if.then.373, label %if.end.374

if.then.373:                                      ; preds = %if.end.370
  br label %failed

if.end.374:                                       ; preds = %if.end.370
  br label %do.body.375

do.body.375:                                      ; preds = %if.end.374
  %221 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %221, %struct._object** %_py_tmp377, align 8
  %222 = load %struct._object*, %struct._object** %_py_tmp377, align 8
  %cmp378 = icmp ne %struct._object* %222, null
  br i1 %cmp378, label %if.then.379, label %if.end.392

if.then.379:                                      ; preds = %do.body.375
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.380

do.body.380:                                      ; preds = %if.then.379
  %223 = load %struct._object*, %struct._object** %_py_tmp377, align 8
  store %struct._object* %223, %struct._object** %_py_decref_tmp382, align 8
  %224 = load %struct._object*, %struct._object** %_py_decref_tmp382, align 8
  %ob_refcnt383 = getelementptr inbounds %struct._object, %struct._object* %224, i32 0, i32 0
  %225 = load i64, i64* %ob_refcnt383, align 8
  %dec384 = add i64 %225, -1
  store i64 %dec384, i64* %ob_refcnt383, align 8
  %cmp385 = icmp ne i64 %dec384, 0
  br i1 %cmp385, label %if.then.386, label %if.else.387

if.then.386:                                      ; preds = %do.body.380
  br label %if.end.390

if.else.387:                                      ; preds = %do.body.380
  %226 = load %struct._object*, %struct._object** %_py_decref_tmp382, align 8
  %ob_type388 = getelementptr inbounds %struct._object, %struct._object* %226, i32 0, i32 1
  %227 = load %struct._typeobject*, %struct._typeobject** %ob_type388, align 8
  %tp_dealloc389 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %227, i32 0, i32 4
  %228 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc389, align 8
  %229 = load %struct._object*, %struct._object** %_py_decref_tmp382, align 8
  call void %228(%struct._object* %229)
  br label %if.end.390

if.end.390:                                       ; preds = %if.else.387, %if.then.386
  br label %do.end.391

do.end.391:                                       ; preds = %if.end.390
  br label %if.end.392

if.end.392:                                       ; preds = %do.end.391, %do.body.375
  br label %do.end.393

do.end.393:                                       ; preds = %if.end.392
  br label %if.end.395

if.else.394:                                      ; preds = %if.then.359
  %230 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %230, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.345, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.395:                                       ; preds = %do.end.393
  %231 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call396 = call i32 @_PyObject_HasAttrId(%struct._object* %231, %struct._Py_Identifier* @PyId_body)
  %tobool397 = icmp ne i32 %call396, 0
  br i1 %tobool397, label %if.then.398, label %if.else.428

if.then.398:                                      ; preds = %if.end.395
  %232 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call401 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %232, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call401, %struct._object** %tmp, align 8
  %233 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp402 = icmp eq %struct._object* %233, null
  br i1 %cmp402, label %if.then.403, label %if.end.404

if.then.403:                                      ; preds = %if.then.398
  br label %failed

if.end.404:                                       ; preds = %if.then.398
  %234 = load %struct._object*, %struct._object** %tmp, align 8
  %235 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call405 = call i32 @obj2ast_expr(%struct._object* %234, %struct._expr** %body, %struct._arena* %235)
  store i32 %call405, i32* %res400, align 4
  %236 = load i32, i32* %res400, align 4
  %cmp406 = icmp ne i32 %236, 0
  br i1 %cmp406, label %if.then.407, label %if.end.408

if.then.407:                                      ; preds = %if.end.404
  br label %failed

if.end.408:                                       ; preds = %if.end.404
  br label %do.body.409

do.body.409:                                      ; preds = %if.end.408
  %237 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %237, %struct._object** %_py_tmp411, align 8
  %238 = load %struct._object*, %struct._object** %_py_tmp411, align 8
  %cmp412 = icmp ne %struct._object* %238, null
  br i1 %cmp412, label %if.then.413, label %if.end.426

if.then.413:                                      ; preds = %do.body.409
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.414

do.body.414:                                      ; preds = %if.then.413
  %239 = load %struct._object*, %struct._object** %_py_tmp411, align 8
  store %struct._object* %239, %struct._object** %_py_decref_tmp416, align 8
  %240 = load %struct._object*, %struct._object** %_py_decref_tmp416, align 8
  %ob_refcnt417 = getelementptr inbounds %struct._object, %struct._object* %240, i32 0, i32 0
  %241 = load i64, i64* %ob_refcnt417, align 8
  %dec418 = add i64 %241, -1
  store i64 %dec418, i64* %ob_refcnt417, align 8
  %cmp419 = icmp ne i64 %dec418, 0
  br i1 %cmp419, label %if.then.420, label %if.else.421

if.then.420:                                      ; preds = %do.body.414
  br label %if.end.424

if.else.421:                                      ; preds = %do.body.414
  %242 = load %struct._object*, %struct._object** %_py_decref_tmp416, align 8
  %ob_type422 = getelementptr inbounds %struct._object, %struct._object* %242, i32 0, i32 1
  %243 = load %struct._typeobject*, %struct._typeobject** %ob_type422, align 8
  %tp_dealloc423 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %243, i32 0, i32 4
  %244 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc423, align 8
  %245 = load %struct._object*, %struct._object** %_py_decref_tmp416, align 8
  call void %244(%struct._object* %245)
  br label %if.end.424

if.end.424:                                       ; preds = %if.else.421, %if.then.420
  br label %do.end.425

do.end.425:                                       ; preds = %if.end.424
  br label %if.end.426

if.end.426:                                       ; preds = %do.end.425, %do.body.409
  br label %do.end.427

do.end.427:                                       ; preds = %if.end.426
  br label %if.end.429

if.else.428:                                      ; preds = %if.end.395
  %246 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %246, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.346, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.429:                                       ; preds = %do.end.427
  %247 = load %struct._arguments*, %struct._arguments** %args, align 8
  %248 = load %struct._expr*, %struct._expr** %body, align 8
  %249 = load i32, i32* %lineno, align 4
  %250 = load i32, i32* %col_offset, align 4
  %251 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call430 = call %struct._expr* @_Py_Lambda(%struct._arguments* %247, %struct._expr* %248, i32 %249, i32 %250, %struct._arena* %251)
  %252 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call430, %struct._expr** %252, align 8
  %253 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %254 = load %struct._expr*, %struct._expr** %253, align 8
  %cmp431 = icmp eq %struct._expr* %254, null
  br i1 %cmp431, label %if.then.432, label %if.end.433

if.then.432:                                      ; preds = %if.end.429
  br label %failed

if.end.433:                                       ; preds = %if.end.429
  store i32 0, i32* %retval
  br label %return

if.end.434:                                       ; preds = %if.end.357
  %255 = load %struct._object*, %struct._object** %obj.addr, align 8
  %256 = load %struct._typeobject*, %struct._typeobject** @IfExp_type, align 8
  %257 = bitcast %struct._typeobject* %256 to %struct._object*
  %call435 = call i32 @PyObject_IsInstance(%struct._object* %255, %struct._object* %257)
  store i32 %call435, i32* %isinstance, align 4
  %258 = load i32, i32* %isinstance, align 4
  %cmp436 = icmp eq i32 %258, -1
  br i1 %cmp436, label %if.then.437, label %if.end.438

if.then.437:                                      ; preds = %if.end.434
  store i32 1, i32* %retval
  br label %return

if.end.438:                                       ; preds = %if.end.434
  %259 = load i32, i32* %isinstance, align 4
  %tobool439 = icmp ne i32 %259, 0
  br i1 %tobool439, label %if.then.440, label %if.end.551

if.then.440:                                      ; preds = %if.end.438
  %260 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call445 = call i32 @_PyObject_HasAttrId(%struct._object* %260, %struct._Py_Identifier* @PyId_test)
  %tobool446 = icmp ne i32 %call445, 0
  br i1 %tobool446, label %if.then.447, label %if.else.477

if.then.447:                                      ; preds = %if.then.440
  %261 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call450 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %261, %struct._Py_Identifier* @PyId_test)
  store %struct._object* %call450, %struct._object** %tmp, align 8
  %262 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp451 = icmp eq %struct._object* %262, null
  br i1 %cmp451, label %if.then.452, label %if.end.453

if.then.452:                                      ; preds = %if.then.447
  br label %failed

if.end.453:                                       ; preds = %if.then.447
  %263 = load %struct._object*, %struct._object** %tmp, align 8
  %264 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call454 = call i32 @obj2ast_expr(%struct._object* %263, %struct._expr** %test, %struct._arena* %264)
  store i32 %call454, i32* %res449, align 4
  %265 = load i32, i32* %res449, align 4
  %cmp455 = icmp ne i32 %265, 0
  br i1 %cmp455, label %if.then.456, label %if.end.457

if.then.456:                                      ; preds = %if.end.453
  br label %failed

if.end.457:                                       ; preds = %if.end.453
  br label %do.body.458

do.body.458:                                      ; preds = %if.end.457
  %266 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %266, %struct._object** %_py_tmp460, align 8
  %267 = load %struct._object*, %struct._object** %_py_tmp460, align 8
  %cmp461 = icmp ne %struct._object* %267, null
  br i1 %cmp461, label %if.then.462, label %if.end.475

if.then.462:                                      ; preds = %do.body.458
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.463

do.body.463:                                      ; preds = %if.then.462
  %268 = load %struct._object*, %struct._object** %_py_tmp460, align 8
  store %struct._object* %268, %struct._object** %_py_decref_tmp465, align 8
  %269 = load %struct._object*, %struct._object** %_py_decref_tmp465, align 8
  %ob_refcnt466 = getelementptr inbounds %struct._object, %struct._object* %269, i32 0, i32 0
  %270 = load i64, i64* %ob_refcnt466, align 8
  %dec467 = add i64 %270, -1
  store i64 %dec467, i64* %ob_refcnt466, align 8
  %cmp468 = icmp ne i64 %dec467, 0
  br i1 %cmp468, label %if.then.469, label %if.else.470

if.then.469:                                      ; preds = %do.body.463
  br label %if.end.473

if.else.470:                                      ; preds = %do.body.463
  %271 = load %struct._object*, %struct._object** %_py_decref_tmp465, align 8
  %ob_type471 = getelementptr inbounds %struct._object, %struct._object* %271, i32 0, i32 1
  %272 = load %struct._typeobject*, %struct._typeobject** %ob_type471, align 8
  %tp_dealloc472 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %272, i32 0, i32 4
  %273 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc472, align 8
  %274 = load %struct._object*, %struct._object** %_py_decref_tmp465, align 8
  call void %273(%struct._object* %274)
  br label %if.end.473

if.end.473:                                       ; preds = %if.else.470, %if.then.469
  br label %do.end.474

do.end.474:                                       ; preds = %if.end.473
  br label %if.end.475

if.end.475:                                       ; preds = %do.end.474, %do.body.458
  br label %do.end.476

do.end.476:                                       ; preds = %if.end.475
  br label %if.end.478

if.else.477:                                      ; preds = %if.then.440
  %275 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %275, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.347, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.478:                                       ; preds = %do.end.476
  %276 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call479 = call i32 @_PyObject_HasAttrId(%struct._object* %276, %struct._Py_Identifier* @PyId_body)
  %tobool480 = icmp ne i32 %call479, 0
  br i1 %tobool480, label %if.then.481, label %if.else.511

if.then.481:                                      ; preds = %if.end.478
  %277 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call484 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %277, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call484, %struct._object** %tmp, align 8
  %278 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp485 = icmp eq %struct._object* %278, null
  br i1 %cmp485, label %if.then.486, label %if.end.487

if.then.486:                                      ; preds = %if.then.481
  br label %failed

if.end.487:                                       ; preds = %if.then.481
  %279 = load %struct._object*, %struct._object** %tmp, align 8
  %280 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call488 = call i32 @obj2ast_expr(%struct._object* %279, %struct._expr** %body443, %struct._arena* %280)
  store i32 %call488, i32* %res483, align 4
  %281 = load i32, i32* %res483, align 4
  %cmp489 = icmp ne i32 %281, 0
  br i1 %cmp489, label %if.then.490, label %if.end.491

if.then.490:                                      ; preds = %if.end.487
  br label %failed

if.end.491:                                       ; preds = %if.end.487
  br label %do.body.492

do.body.492:                                      ; preds = %if.end.491
  %282 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %282, %struct._object** %_py_tmp494, align 8
  %283 = load %struct._object*, %struct._object** %_py_tmp494, align 8
  %cmp495 = icmp ne %struct._object* %283, null
  br i1 %cmp495, label %if.then.496, label %if.end.509

if.then.496:                                      ; preds = %do.body.492
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.497

do.body.497:                                      ; preds = %if.then.496
  %284 = load %struct._object*, %struct._object** %_py_tmp494, align 8
  store %struct._object* %284, %struct._object** %_py_decref_tmp499, align 8
  %285 = load %struct._object*, %struct._object** %_py_decref_tmp499, align 8
  %ob_refcnt500 = getelementptr inbounds %struct._object, %struct._object* %285, i32 0, i32 0
  %286 = load i64, i64* %ob_refcnt500, align 8
  %dec501 = add i64 %286, -1
  store i64 %dec501, i64* %ob_refcnt500, align 8
  %cmp502 = icmp ne i64 %dec501, 0
  br i1 %cmp502, label %if.then.503, label %if.else.504

if.then.503:                                      ; preds = %do.body.497
  br label %if.end.507

if.else.504:                                      ; preds = %do.body.497
  %287 = load %struct._object*, %struct._object** %_py_decref_tmp499, align 8
  %ob_type505 = getelementptr inbounds %struct._object, %struct._object* %287, i32 0, i32 1
  %288 = load %struct._typeobject*, %struct._typeobject** %ob_type505, align 8
  %tp_dealloc506 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %288, i32 0, i32 4
  %289 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc506, align 8
  %290 = load %struct._object*, %struct._object** %_py_decref_tmp499, align 8
  call void %289(%struct._object* %290)
  br label %if.end.507

if.end.507:                                       ; preds = %if.else.504, %if.then.503
  br label %do.end.508

do.end.508:                                       ; preds = %if.end.507
  br label %if.end.509

if.end.509:                                       ; preds = %do.end.508, %do.body.492
  br label %do.end.510

do.end.510:                                       ; preds = %if.end.509
  br label %if.end.512

if.else.511:                                      ; preds = %if.end.478
  %291 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %291, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.348, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.512:                                       ; preds = %do.end.510
  %292 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call513 = call i32 @_PyObject_HasAttrId(%struct._object* %292, %struct._Py_Identifier* @PyId_orelse)
  %tobool514 = icmp ne i32 %call513, 0
  br i1 %tobool514, label %if.then.515, label %if.else.545

if.then.515:                                      ; preds = %if.end.512
  %293 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call518 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %293, %struct._Py_Identifier* @PyId_orelse)
  store %struct._object* %call518, %struct._object** %tmp, align 8
  %294 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp519 = icmp eq %struct._object* %294, null
  br i1 %cmp519, label %if.then.520, label %if.end.521

if.then.520:                                      ; preds = %if.then.515
  br label %failed

if.end.521:                                       ; preds = %if.then.515
  %295 = load %struct._object*, %struct._object** %tmp, align 8
  %296 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call522 = call i32 @obj2ast_expr(%struct._object* %295, %struct._expr** %orelse, %struct._arena* %296)
  store i32 %call522, i32* %res517, align 4
  %297 = load i32, i32* %res517, align 4
  %cmp523 = icmp ne i32 %297, 0
  br i1 %cmp523, label %if.then.524, label %if.end.525

if.then.524:                                      ; preds = %if.end.521
  br label %failed

if.end.525:                                       ; preds = %if.end.521
  br label %do.body.526

do.body.526:                                      ; preds = %if.end.525
  %298 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %298, %struct._object** %_py_tmp528, align 8
  %299 = load %struct._object*, %struct._object** %_py_tmp528, align 8
  %cmp529 = icmp ne %struct._object* %299, null
  br i1 %cmp529, label %if.then.530, label %if.end.543

if.then.530:                                      ; preds = %do.body.526
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.531

do.body.531:                                      ; preds = %if.then.530
  %300 = load %struct._object*, %struct._object** %_py_tmp528, align 8
  store %struct._object* %300, %struct._object** %_py_decref_tmp533, align 8
  %301 = load %struct._object*, %struct._object** %_py_decref_tmp533, align 8
  %ob_refcnt534 = getelementptr inbounds %struct._object, %struct._object* %301, i32 0, i32 0
  %302 = load i64, i64* %ob_refcnt534, align 8
  %dec535 = add i64 %302, -1
  store i64 %dec535, i64* %ob_refcnt534, align 8
  %cmp536 = icmp ne i64 %dec535, 0
  br i1 %cmp536, label %if.then.537, label %if.else.538

if.then.537:                                      ; preds = %do.body.531
  br label %if.end.541

if.else.538:                                      ; preds = %do.body.531
  %303 = load %struct._object*, %struct._object** %_py_decref_tmp533, align 8
  %ob_type539 = getelementptr inbounds %struct._object, %struct._object* %303, i32 0, i32 1
  %304 = load %struct._typeobject*, %struct._typeobject** %ob_type539, align 8
  %tp_dealloc540 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %304, i32 0, i32 4
  %305 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc540, align 8
  %306 = load %struct._object*, %struct._object** %_py_decref_tmp533, align 8
  call void %305(%struct._object* %306)
  br label %if.end.541

if.end.541:                                       ; preds = %if.else.538, %if.then.537
  br label %do.end.542

do.end.542:                                       ; preds = %if.end.541
  br label %if.end.543

if.end.543:                                       ; preds = %do.end.542, %do.body.526
  br label %do.end.544

do.end.544:                                       ; preds = %if.end.543
  br label %if.end.546

if.else.545:                                      ; preds = %if.end.512
  %307 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %307, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.349, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.546:                                       ; preds = %do.end.544
  %308 = load %struct._expr*, %struct._expr** %test, align 8
  %309 = load %struct._expr*, %struct._expr** %body443, align 8
  %310 = load %struct._expr*, %struct._expr** %orelse, align 8
  %311 = load i32, i32* %lineno, align 4
  %312 = load i32, i32* %col_offset, align 4
  %313 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call547 = call %struct._expr* @_Py_IfExp(%struct._expr* %308, %struct._expr* %309, %struct._expr* %310, i32 %311, i32 %312, %struct._arena* %313)
  %314 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call547, %struct._expr** %314, align 8
  %315 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %316 = load %struct._expr*, %struct._expr** %315, align 8
  %cmp548 = icmp eq %struct._expr* %316, null
  br i1 %cmp548, label %if.then.549, label %if.end.550

if.then.549:                                      ; preds = %if.end.546
  br label %failed

if.end.550:                                       ; preds = %if.end.546
  store i32 0, i32* %retval
  br label %return

if.end.551:                                       ; preds = %if.end.438
  %317 = load %struct._object*, %struct._object** %obj.addr, align 8
  %318 = load %struct._typeobject*, %struct._typeobject** @Dict_type, align 8
  %319 = bitcast %struct._typeobject* %318 to %struct._object*
  %call552 = call i32 @PyObject_IsInstance(%struct._object* %317, %struct._object* %319)
  store i32 %call552, i32* %isinstance, align 4
  %320 = load i32, i32* %isinstance, align 4
  %cmp553 = icmp eq i32 %320, -1
  br i1 %cmp553, label %if.then.554, label %if.end.555

if.then.554:                                      ; preds = %if.end.551
  store i32 1, i32* %retval
  br label %return

if.end.555:                                       ; preds = %if.end.551
  %321 = load i32, i32* %isinstance, align 4
  %tobool556 = icmp ne i32 %321, 0
  br i1 %tobool556, label %if.then.557, label %if.end.693

if.then.557:                                      ; preds = %if.end.555
  %322 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call561 = call i32 @_PyObject_HasAttrId(%struct._object* %322, %struct._Py_Identifier* @PyId_keys)
  %tobool562 = icmp ne i32 %call561, 0
  br i1 %tobool562, label %if.then.563, label %if.else.623

if.then.563:                                      ; preds = %if.then.557
  %323 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call570 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %323, %struct._Py_Identifier* @PyId_keys)
  store %struct._object* %call570, %struct._object** %tmp, align 8
  %324 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp571 = icmp eq %struct._object* %324, null
  br i1 %cmp571, label %if.then.572, label %if.end.573

if.then.572:                                      ; preds = %if.then.563
  br label %failed

if.end.573:                                       ; preds = %if.then.563
  %325 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type574 = getelementptr inbounds %struct._object, %struct._object* %325, i32 0, i32 1
  %326 = load %struct._typeobject*, %struct._typeobject** %ob_type574, align 8
  %tp_flags575 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %326, i32 0, i32 19
  %327 = load i64, i64* %tp_flags575, align 8
  %and576 = and i64 %327, 33554432
  %cmp577 = icmp ne i64 %and576, 0
  br i1 %cmp577, label %if.end.582, label %if.then.578

if.then.578:                                      ; preds = %if.end.573
  %328 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %329 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type579 = getelementptr inbounds %struct._object, %struct._object* %329, i32 0, i32 1
  %330 = load %struct._typeobject*, %struct._typeobject** %ob_type579, align 8
  %tp_name580 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %330, i32 0, i32 1
  %331 = load i8*, i8** %tp_name580, align 8
  %call581 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %328, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.350, i32 0, i32 0), i8* %331)
  br label %failed

if.end.582:                                       ; preds = %if.end.573
  %332 = load %struct._object*, %struct._object** %tmp, align 8
  %333 = bitcast %struct._object* %332 to %struct.PyVarObject*
  %ob_size583 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %333, i32 0, i32 1
  %334 = load i64, i64* %ob_size583, align 8
  store i64 %334, i64* %len567, align 8
  %335 = load i64, i64* %len567, align 8
  %336 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call584 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %335, %struct._arena* %336)
  store %struct.asdl_seq* %call584, %struct.asdl_seq** %keys, align 8
  %337 = load %struct.asdl_seq*, %struct.asdl_seq** %keys, align 8
  %cmp585 = icmp eq %struct.asdl_seq* %337, null
  br i1 %cmp585, label %if.then.586, label %if.end.587

if.then.586:                                      ; preds = %if.end.582
  br label %failed

if.end.587:                                       ; preds = %if.end.582
  store i64 0, i64* %i569, align 8
  br label %for.cond.588

for.cond.588:                                     ; preds = %for.inc.601, %if.end.587
  %338 = load i64, i64* %i569, align 8
  %339 = load i64, i64* %len567, align 8
  %cmp589 = icmp slt i64 %338, %339
  br i1 %cmp589, label %for.body.590, label %for.end.603

for.body.590:                                     ; preds = %for.cond.588
  %340 = load i64, i64* %i569, align 8
  %341 = load %struct._object*, %struct._object** %tmp, align 8
  %342 = bitcast %struct._object* %341 to %struct.PyListObject*
  %ob_item593 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %342, i32 0, i32 1
  %343 = load %struct._object**, %struct._object*** %ob_item593, align 8
  %arrayidx594 = getelementptr %struct._object*, %struct._object** %343, i64 %340
  %344 = load %struct._object*, %struct._object** %arrayidx594, align 8
  %345 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call595 = call i32 @obj2ast_expr(%struct._object* %344, %struct._expr** %value592, %struct._arena* %345)
  store i32 %call595, i32* %res565, align 4
  %346 = load i32, i32* %res565, align 4
  %cmp596 = icmp ne i32 %346, 0
  br i1 %cmp596, label %if.then.597, label %if.end.598

if.then.597:                                      ; preds = %for.body.590
  br label %failed

if.end.598:                                       ; preds = %for.body.590
  %347 = load %struct._expr*, %struct._expr** %value592, align 8
  %348 = bitcast %struct._expr* %347 to i8*
  %349 = load i64, i64* %i569, align 8
  %350 = load %struct.asdl_seq*, %struct.asdl_seq** %keys, align 8
  %elements599 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %350, i32 0, i32 1
  %arrayidx600 = getelementptr [1 x i8*], [1 x i8*]* %elements599, i32 0, i64 %349
  store i8* %348, i8** %arrayidx600, align 8
  br label %for.inc.601

for.inc.601:                                      ; preds = %if.end.598
  %351 = load i64, i64* %i569, align 8
  %inc602 = add i64 %351, 1
  store i64 %inc602, i64* %i569, align 8
  br label %for.cond.588

for.end.603:                                      ; preds = %for.cond.588
  br label %do.body.604

do.body.604:                                      ; preds = %for.end.603
  %352 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %352, %struct._object** %_py_tmp606, align 8
  %353 = load %struct._object*, %struct._object** %_py_tmp606, align 8
  %cmp607 = icmp ne %struct._object* %353, null
  br i1 %cmp607, label %if.then.608, label %if.end.621

if.then.608:                                      ; preds = %do.body.604
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.609

do.body.609:                                      ; preds = %if.then.608
  %354 = load %struct._object*, %struct._object** %_py_tmp606, align 8
  store %struct._object* %354, %struct._object** %_py_decref_tmp611, align 8
  %355 = load %struct._object*, %struct._object** %_py_decref_tmp611, align 8
  %ob_refcnt612 = getelementptr inbounds %struct._object, %struct._object* %355, i32 0, i32 0
  %356 = load i64, i64* %ob_refcnt612, align 8
  %dec613 = add i64 %356, -1
  store i64 %dec613, i64* %ob_refcnt612, align 8
  %cmp614 = icmp ne i64 %dec613, 0
  br i1 %cmp614, label %if.then.615, label %if.else.616

if.then.615:                                      ; preds = %do.body.609
  br label %if.end.619

if.else.616:                                      ; preds = %do.body.609
  %357 = load %struct._object*, %struct._object** %_py_decref_tmp611, align 8
  %ob_type617 = getelementptr inbounds %struct._object, %struct._object* %357, i32 0, i32 1
  %358 = load %struct._typeobject*, %struct._typeobject** %ob_type617, align 8
  %tp_dealloc618 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %358, i32 0, i32 4
  %359 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc618, align 8
  %360 = load %struct._object*, %struct._object** %_py_decref_tmp611, align 8
  call void %359(%struct._object* %360)
  br label %if.end.619

if.end.619:                                       ; preds = %if.else.616, %if.then.615
  br label %do.end.620

do.end.620:                                       ; preds = %if.end.619
  br label %if.end.621

if.end.621:                                       ; preds = %do.end.620, %do.body.604
  br label %do.end.622

do.end.622:                                       ; preds = %if.end.621
  br label %if.end.624

if.else.623:                                      ; preds = %if.then.557
  %361 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %361, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.351, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.624:                                       ; preds = %do.end.622
  %362 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call625 = call i32 @_PyObject_HasAttrId(%struct._object* %362, %struct._Py_Identifier* @PyId_values)
  %tobool626 = icmp ne i32 %call625, 0
  br i1 %tobool626, label %if.then.627, label %if.else.687

if.then.627:                                      ; preds = %if.end.624
  %363 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call634 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %363, %struct._Py_Identifier* @PyId_values)
  store %struct._object* %call634, %struct._object** %tmp, align 8
  %364 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp635 = icmp eq %struct._object* %364, null
  br i1 %cmp635, label %if.then.636, label %if.end.637

if.then.636:                                      ; preds = %if.then.627
  br label %failed

if.end.637:                                       ; preds = %if.then.627
  %365 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type638 = getelementptr inbounds %struct._object, %struct._object* %365, i32 0, i32 1
  %366 = load %struct._typeobject*, %struct._typeobject** %ob_type638, align 8
  %tp_flags639 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %366, i32 0, i32 19
  %367 = load i64, i64* %tp_flags639, align 8
  %and640 = and i64 %367, 33554432
  %cmp641 = icmp ne i64 %and640, 0
  br i1 %cmp641, label %if.end.646, label %if.then.642

if.then.642:                                      ; preds = %if.end.637
  %368 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %369 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type643 = getelementptr inbounds %struct._object, %struct._object* %369, i32 0, i32 1
  %370 = load %struct._typeobject*, %struct._typeobject** %ob_type643, align 8
  %tp_name644 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %370, i32 0, i32 1
  %371 = load i8*, i8** %tp_name644, align 8
  %call645 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %368, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.352, i32 0, i32 0), i8* %371)
  br label %failed

if.end.646:                                       ; preds = %if.end.637
  %372 = load %struct._object*, %struct._object** %tmp, align 8
  %373 = bitcast %struct._object* %372 to %struct.PyVarObject*
  %ob_size647 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %373, i32 0, i32 1
  %374 = load i64, i64* %ob_size647, align 8
  store i64 %374, i64* %len631, align 8
  %375 = load i64, i64* %len631, align 8
  %376 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call648 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %375, %struct._arena* %376)
  store %struct.asdl_seq* %call648, %struct.asdl_seq** %values560, align 8
  %377 = load %struct.asdl_seq*, %struct.asdl_seq** %values560, align 8
  %cmp649 = icmp eq %struct.asdl_seq* %377, null
  br i1 %cmp649, label %if.then.650, label %if.end.651

if.then.650:                                      ; preds = %if.end.646
  br label %failed

if.end.651:                                       ; preds = %if.end.646
  store i64 0, i64* %i633, align 8
  br label %for.cond.652

for.cond.652:                                     ; preds = %for.inc.665, %if.end.651
  %378 = load i64, i64* %i633, align 8
  %379 = load i64, i64* %len631, align 8
  %cmp653 = icmp slt i64 %378, %379
  br i1 %cmp653, label %for.body.654, label %for.end.667

for.body.654:                                     ; preds = %for.cond.652
  %380 = load i64, i64* %i633, align 8
  %381 = load %struct._object*, %struct._object** %tmp, align 8
  %382 = bitcast %struct._object* %381 to %struct.PyListObject*
  %ob_item657 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %382, i32 0, i32 1
  %383 = load %struct._object**, %struct._object*** %ob_item657, align 8
  %arrayidx658 = getelementptr %struct._object*, %struct._object** %383, i64 %380
  %384 = load %struct._object*, %struct._object** %arrayidx658, align 8
  %385 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call659 = call i32 @obj2ast_expr(%struct._object* %384, %struct._expr** %value656, %struct._arena* %385)
  store i32 %call659, i32* %res629, align 4
  %386 = load i32, i32* %res629, align 4
  %cmp660 = icmp ne i32 %386, 0
  br i1 %cmp660, label %if.then.661, label %if.end.662

if.then.661:                                      ; preds = %for.body.654
  br label %failed

if.end.662:                                       ; preds = %for.body.654
  %387 = load %struct._expr*, %struct._expr** %value656, align 8
  %388 = bitcast %struct._expr* %387 to i8*
  %389 = load i64, i64* %i633, align 8
  %390 = load %struct.asdl_seq*, %struct.asdl_seq** %values560, align 8
  %elements663 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %390, i32 0, i32 1
  %arrayidx664 = getelementptr [1 x i8*], [1 x i8*]* %elements663, i32 0, i64 %389
  store i8* %388, i8** %arrayidx664, align 8
  br label %for.inc.665

for.inc.665:                                      ; preds = %if.end.662
  %391 = load i64, i64* %i633, align 8
  %inc666 = add i64 %391, 1
  store i64 %inc666, i64* %i633, align 8
  br label %for.cond.652

for.end.667:                                      ; preds = %for.cond.652
  br label %do.body.668

do.body.668:                                      ; preds = %for.end.667
  %392 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %392, %struct._object** %_py_tmp670, align 8
  %393 = load %struct._object*, %struct._object** %_py_tmp670, align 8
  %cmp671 = icmp ne %struct._object* %393, null
  br i1 %cmp671, label %if.then.672, label %if.end.685

if.then.672:                                      ; preds = %do.body.668
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.673

do.body.673:                                      ; preds = %if.then.672
  %394 = load %struct._object*, %struct._object** %_py_tmp670, align 8
  store %struct._object* %394, %struct._object** %_py_decref_tmp675, align 8
  %395 = load %struct._object*, %struct._object** %_py_decref_tmp675, align 8
  %ob_refcnt676 = getelementptr inbounds %struct._object, %struct._object* %395, i32 0, i32 0
  %396 = load i64, i64* %ob_refcnt676, align 8
  %dec677 = add i64 %396, -1
  store i64 %dec677, i64* %ob_refcnt676, align 8
  %cmp678 = icmp ne i64 %dec677, 0
  br i1 %cmp678, label %if.then.679, label %if.else.680

if.then.679:                                      ; preds = %do.body.673
  br label %if.end.683

if.else.680:                                      ; preds = %do.body.673
  %397 = load %struct._object*, %struct._object** %_py_decref_tmp675, align 8
  %ob_type681 = getelementptr inbounds %struct._object, %struct._object* %397, i32 0, i32 1
  %398 = load %struct._typeobject*, %struct._typeobject** %ob_type681, align 8
  %tp_dealloc682 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %398, i32 0, i32 4
  %399 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc682, align 8
  %400 = load %struct._object*, %struct._object** %_py_decref_tmp675, align 8
  call void %399(%struct._object* %400)
  br label %if.end.683

if.end.683:                                       ; preds = %if.else.680, %if.then.679
  br label %do.end.684

do.end.684:                                       ; preds = %if.end.683
  br label %if.end.685

if.end.685:                                       ; preds = %do.end.684, %do.body.668
  br label %do.end.686

do.end.686:                                       ; preds = %if.end.685
  br label %if.end.688

if.else.687:                                      ; preds = %if.end.624
  %401 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %401, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.353, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.688:                                       ; preds = %do.end.686
  %402 = load %struct.asdl_seq*, %struct.asdl_seq** %keys, align 8
  %403 = load %struct.asdl_seq*, %struct.asdl_seq** %values560, align 8
  %404 = load i32, i32* %lineno, align 4
  %405 = load i32, i32* %col_offset, align 4
  %406 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call689 = call %struct._expr* @_Py_Dict(%struct.asdl_seq* %402, %struct.asdl_seq* %403, i32 %404, i32 %405, %struct._arena* %406)
  %407 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call689, %struct._expr** %407, align 8
  %408 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %409 = load %struct._expr*, %struct._expr** %408, align 8
  %cmp690 = icmp eq %struct._expr* %409, null
  br i1 %cmp690, label %if.then.691, label %if.end.692

if.then.691:                                      ; preds = %if.end.688
  br label %failed

if.end.692:                                       ; preds = %if.end.688
  store i32 0, i32* %retval
  br label %return

if.end.693:                                       ; preds = %if.end.555
  %410 = load %struct._object*, %struct._object** %obj.addr, align 8
  %411 = load %struct._typeobject*, %struct._typeobject** @Set_type, align 8
  %412 = bitcast %struct._typeobject* %411 to %struct._object*
  %call694 = call i32 @PyObject_IsInstance(%struct._object* %410, %struct._object* %412)
  store i32 %call694, i32* %isinstance, align 4
  %413 = load i32, i32* %isinstance, align 4
  %cmp695 = icmp eq i32 %413, -1
  br i1 %cmp695, label %if.then.696, label %if.end.697

if.then.696:                                      ; preds = %if.end.693
  store i32 1, i32* %retval
  br label %return

if.end.697:                                       ; preds = %if.end.693
  %414 = load i32, i32* %isinstance, align 4
  %tobool698 = icmp ne i32 %414, 0
  br i1 %tobool698, label %if.then.699, label %if.end.769

if.then.699:                                      ; preds = %if.end.697
  %415 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call701 = call i32 @_PyObject_HasAttrId(%struct._object* %415, %struct._Py_Identifier* @PyId_elts)
  %tobool702 = icmp ne i32 %call701, 0
  br i1 %tobool702, label %if.then.703, label %if.else.763

if.then.703:                                      ; preds = %if.then.699
  %416 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call710 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %416, %struct._Py_Identifier* @PyId_elts)
  store %struct._object* %call710, %struct._object** %tmp, align 8
  %417 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp711 = icmp eq %struct._object* %417, null
  br i1 %cmp711, label %if.then.712, label %if.end.713

if.then.712:                                      ; preds = %if.then.703
  br label %failed

if.end.713:                                       ; preds = %if.then.703
  %418 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type714 = getelementptr inbounds %struct._object, %struct._object* %418, i32 0, i32 1
  %419 = load %struct._typeobject*, %struct._typeobject** %ob_type714, align 8
  %tp_flags715 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %419, i32 0, i32 19
  %420 = load i64, i64* %tp_flags715, align 8
  %and716 = and i64 %420, 33554432
  %cmp717 = icmp ne i64 %and716, 0
  br i1 %cmp717, label %if.end.722, label %if.then.718

if.then.718:                                      ; preds = %if.end.713
  %421 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %422 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type719 = getelementptr inbounds %struct._object, %struct._object* %422, i32 0, i32 1
  %423 = load %struct._typeobject*, %struct._typeobject** %ob_type719, align 8
  %tp_name720 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %423, i32 0, i32 1
  %424 = load i8*, i8** %tp_name720, align 8
  %call721 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %421, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.354, i32 0, i32 0), i8* %424)
  br label %failed

if.end.722:                                       ; preds = %if.end.713
  %425 = load %struct._object*, %struct._object** %tmp, align 8
  %426 = bitcast %struct._object* %425 to %struct.PyVarObject*
  %ob_size723 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %426, i32 0, i32 1
  %427 = load i64, i64* %ob_size723, align 8
  store i64 %427, i64* %len707, align 8
  %428 = load i64, i64* %len707, align 8
  %429 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call724 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %428, %struct._arena* %429)
  store %struct.asdl_seq* %call724, %struct.asdl_seq** %elts, align 8
  %430 = load %struct.asdl_seq*, %struct.asdl_seq** %elts, align 8
  %cmp725 = icmp eq %struct.asdl_seq* %430, null
  br i1 %cmp725, label %if.then.726, label %if.end.727

if.then.726:                                      ; preds = %if.end.722
  br label %failed

if.end.727:                                       ; preds = %if.end.722
  store i64 0, i64* %i709, align 8
  br label %for.cond.728

for.cond.728:                                     ; preds = %for.inc.741, %if.end.727
  %431 = load i64, i64* %i709, align 8
  %432 = load i64, i64* %len707, align 8
  %cmp729 = icmp slt i64 %431, %432
  br i1 %cmp729, label %for.body.730, label %for.end.743

for.body.730:                                     ; preds = %for.cond.728
  %433 = load i64, i64* %i709, align 8
  %434 = load %struct._object*, %struct._object** %tmp, align 8
  %435 = bitcast %struct._object* %434 to %struct.PyListObject*
  %ob_item733 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %435, i32 0, i32 1
  %436 = load %struct._object**, %struct._object*** %ob_item733, align 8
  %arrayidx734 = getelementptr %struct._object*, %struct._object** %436, i64 %433
  %437 = load %struct._object*, %struct._object** %arrayidx734, align 8
  %438 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call735 = call i32 @obj2ast_expr(%struct._object* %437, %struct._expr** %value732, %struct._arena* %438)
  store i32 %call735, i32* %res705, align 4
  %439 = load i32, i32* %res705, align 4
  %cmp736 = icmp ne i32 %439, 0
  br i1 %cmp736, label %if.then.737, label %if.end.738

if.then.737:                                      ; preds = %for.body.730
  br label %failed

if.end.738:                                       ; preds = %for.body.730
  %440 = load %struct._expr*, %struct._expr** %value732, align 8
  %441 = bitcast %struct._expr* %440 to i8*
  %442 = load i64, i64* %i709, align 8
  %443 = load %struct.asdl_seq*, %struct.asdl_seq** %elts, align 8
  %elements739 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %443, i32 0, i32 1
  %arrayidx740 = getelementptr [1 x i8*], [1 x i8*]* %elements739, i32 0, i64 %442
  store i8* %441, i8** %arrayidx740, align 8
  br label %for.inc.741

for.inc.741:                                      ; preds = %if.end.738
  %444 = load i64, i64* %i709, align 8
  %inc742 = add i64 %444, 1
  store i64 %inc742, i64* %i709, align 8
  br label %for.cond.728

for.end.743:                                      ; preds = %for.cond.728
  br label %do.body.744

do.body.744:                                      ; preds = %for.end.743
  %445 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %445, %struct._object** %_py_tmp746, align 8
  %446 = load %struct._object*, %struct._object** %_py_tmp746, align 8
  %cmp747 = icmp ne %struct._object* %446, null
  br i1 %cmp747, label %if.then.748, label %if.end.761

if.then.748:                                      ; preds = %do.body.744
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.749

do.body.749:                                      ; preds = %if.then.748
  %447 = load %struct._object*, %struct._object** %_py_tmp746, align 8
  store %struct._object* %447, %struct._object** %_py_decref_tmp751, align 8
  %448 = load %struct._object*, %struct._object** %_py_decref_tmp751, align 8
  %ob_refcnt752 = getelementptr inbounds %struct._object, %struct._object* %448, i32 0, i32 0
  %449 = load i64, i64* %ob_refcnt752, align 8
  %dec753 = add i64 %449, -1
  store i64 %dec753, i64* %ob_refcnt752, align 8
  %cmp754 = icmp ne i64 %dec753, 0
  br i1 %cmp754, label %if.then.755, label %if.else.756

if.then.755:                                      ; preds = %do.body.749
  br label %if.end.759

if.else.756:                                      ; preds = %do.body.749
  %450 = load %struct._object*, %struct._object** %_py_decref_tmp751, align 8
  %ob_type757 = getelementptr inbounds %struct._object, %struct._object* %450, i32 0, i32 1
  %451 = load %struct._typeobject*, %struct._typeobject** %ob_type757, align 8
  %tp_dealloc758 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %451, i32 0, i32 4
  %452 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc758, align 8
  %453 = load %struct._object*, %struct._object** %_py_decref_tmp751, align 8
  call void %452(%struct._object* %453)
  br label %if.end.759

if.end.759:                                       ; preds = %if.else.756, %if.then.755
  br label %do.end.760

do.end.760:                                       ; preds = %if.end.759
  br label %if.end.761

if.end.761:                                       ; preds = %do.end.760, %do.body.744
  br label %do.end.762

do.end.762:                                       ; preds = %if.end.761
  br label %if.end.764

if.else.763:                                      ; preds = %if.then.699
  %454 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %454, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.355, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.764:                                       ; preds = %do.end.762
  %455 = load %struct.asdl_seq*, %struct.asdl_seq** %elts, align 8
  %456 = load i32, i32* %lineno, align 4
  %457 = load i32, i32* %col_offset, align 4
  %458 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call765 = call %struct._expr* @_Py_Set(%struct.asdl_seq* %455, i32 %456, i32 %457, %struct._arena* %458)
  %459 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call765, %struct._expr** %459, align 8
  %460 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %461 = load %struct._expr*, %struct._expr** %460, align 8
  %cmp766 = icmp eq %struct._expr* %461, null
  br i1 %cmp766, label %if.then.767, label %if.end.768

if.then.767:                                      ; preds = %if.end.764
  br label %failed

if.end.768:                                       ; preds = %if.end.764
  store i32 0, i32* %retval
  br label %return

if.end.769:                                       ; preds = %if.end.697
  %462 = load %struct._object*, %struct._object** %obj.addr, align 8
  %463 = load %struct._typeobject*, %struct._typeobject** @ListComp_type, align 8
  %464 = bitcast %struct._typeobject* %463 to %struct._object*
  %call770 = call i32 @PyObject_IsInstance(%struct._object* %462, %struct._object* %464)
  store i32 %call770, i32* %isinstance, align 4
  %465 = load i32, i32* %isinstance, align 4
  %cmp771 = icmp eq i32 %465, -1
  br i1 %cmp771, label %if.then.772, label %if.end.773

if.then.772:                                      ; preds = %if.end.769
  store i32 1, i32* %retval
  br label %return

if.end.773:                                       ; preds = %if.end.769
  %466 = load i32, i32* %isinstance, align 4
  %tobool774 = icmp ne i32 %466, 0
  br i1 %tobool774, label %if.then.775, label %if.end.880

if.then.775:                                      ; preds = %if.end.773
  %467 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call778 = call i32 @_PyObject_HasAttrId(%struct._object* %467, %struct._Py_Identifier* @PyId_elt)
  %tobool779 = icmp ne i32 %call778, 0
  br i1 %tobool779, label %if.then.780, label %if.else.810

if.then.780:                                      ; preds = %if.then.775
  %468 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call783 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %468, %struct._Py_Identifier* @PyId_elt)
  store %struct._object* %call783, %struct._object** %tmp, align 8
  %469 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp784 = icmp eq %struct._object* %469, null
  br i1 %cmp784, label %if.then.785, label %if.end.786

if.then.785:                                      ; preds = %if.then.780
  br label %failed

if.end.786:                                       ; preds = %if.then.780
  %470 = load %struct._object*, %struct._object** %tmp, align 8
  %471 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call787 = call i32 @obj2ast_expr(%struct._object* %470, %struct._expr** %elt, %struct._arena* %471)
  store i32 %call787, i32* %res782, align 4
  %472 = load i32, i32* %res782, align 4
  %cmp788 = icmp ne i32 %472, 0
  br i1 %cmp788, label %if.then.789, label %if.end.790

if.then.789:                                      ; preds = %if.end.786
  br label %failed

if.end.790:                                       ; preds = %if.end.786
  br label %do.body.791

do.body.791:                                      ; preds = %if.end.790
  %473 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %473, %struct._object** %_py_tmp793, align 8
  %474 = load %struct._object*, %struct._object** %_py_tmp793, align 8
  %cmp794 = icmp ne %struct._object* %474, null
  br i1 %cmp794, label %if.then.795, label %if.end.808

if.then.795:                                      ; preds = %do.body.791
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.796

do.body.796:                                      ; preds = %if.then.795
  %475 = load %struct._object*, %struct._object** %_py_tmp793, align 8
  store %struct._object* %475, %struct._object** %_py_decref_tmp798, align 8
  %476 = load %struct._object*, %struct._object** %_py_decref_tmp798, align 8
  %ob_refcnt799 = getelementptr inbounds %struct._object, %struct._object* %476, i32 0, i32 0
  %477 = load i64, i64* %ob_refcnt799, align 8
  %dec800 = add i64 %477, -1
  store i64 %dec800, i64* %ob_refcnt799, align 8
  %cmp801 = icmp ne i64 %dec800, 0
  br i1 %cmp801, label %if.then.802, label %if.else.803

if.then.802:                                      ; preds = %do.body.796
  br label %if.end.806

if.else.803:                                      ; preds = %do.body.796
  %478 = load %struct._object*, %struct._object** %_py_decref_tmp798, align 8
  %ob_type804 = getelementptr inbounds %struct._object, %struct._object* %478, i32 0, i32 1
  %479 = load %struct._typeobject*, %struct._typeobject** %ob_type804, align 8
  %tp_dealloc805 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %479, i32 0, i32 4
  %480 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc805, align 8
  %481 = load %struct._object*, %struct._object** %_py_decref_tmp798, align 8
  call void %480(%struct._object* %481)
  br label %if.end.806

if.end.806:                                       ; preds = %if.else.803, %if.then.802
  br label %do.end.807

do.end.807:                                       ; preds = %if.end.806
  br label %if.end.808

if.end.808:                                       ; preds = %do.end.807, %do.body.791
  br label %do.end.809

do.end.809:                                       ; preds = %if.end.808
  br label %if.end.811

if.else.810:                                      ; preds = %if.then.775
  %482 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %482, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.356, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.811:                                       ; preds = %do.end.809
  %483 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call812 = call i32 @_PyObject_HasAttrId(%struct._object* %483, %struct._Py_Identifier* @PyId_generators)
  %tobool813 = icmp ne i32 %call812, 0
  br i1 %tobool813, label %if.then.814, label %if.else.874

if.then.814:                                      ; preds = %if.end.811
  %484 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call821 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %484, %struct._Py_Identifier* @PyId_generators)
  store %struct._object* %call821, %struct._object** %tmp, align 8
  %485 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp822 = icmp eq %struct._object* %485, null
  br i1 %cmp822, label %if.then.823, label %if.end.824

if.then.823:                                      ; preds = %if.then.814
  br label %failed

if.end.824:                                       ; preds = %if.then.814
  %486 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type825 = getelementptr inbounds %struct._object, %struct._object* %486, i32 0, i32 1
  %487 = load %struct._typeobject*, %struct._typeobject** %ob_type825, align 8
  %tp_flags826 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %487, i32 0, i32 19
  %488 = load i64, i64* %tp_flags826, align 8
  %and827 = and i64 %488, 33554432
  %cmp828 = icmp ne i64 %and827, 0
  br i1 %cmp828, label %if.end.833, label %if.then.829

if.then.829:                                      ; preds = %if.end.824
  %489 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %490 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type830 = getelementptr inbounds %struct._object, %struct._object* %490, i32 0, i32 1
  %491 = load %struct._typeobject*, %struct._typeobject** %ob_type830, align 8
  %tp_name831 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %491, i32 0, i32 1
  %492 = load i8*, i8** %tp_name831, align 8
  %call832 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %489, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.357, i32 0, i32 0), i8* %492)
  br label %failed

if.end.833:                                       ; preds = %if.end.824
  %493 = load %struct._object*, %struct._object** %tmp, align 8
  %494 = bitcast %struct._object* %493 to %struct.PyVarObject*
  %ob_size834 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %494, i32 0, i32 1
  %495 = load i64, i64* %ob_size834, align 8
  store i64 %495, i64* %len818, align 8
  %496 = load i64, i64* %len818, align 8
  %497 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call835 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %496, %struct._arena* %497)
  store %struct.asdl_seq* %call835, %struct.asdl_seq** %generators, align 8
  %498 = load %struct.asdl_seq*, %struct.asdl_seq** %generators, align 8
  %cmp836 = icmp eq %struct.asdl_seq* %498, null
  br i1 %cmp836, label %if.then.837, label %if.end.838

if.then.837:                                      ; preds = %if.end.833
  br label %failed

if.end.838:                                       ; preds = %if.end.833
  store i64 0, i64* %i820, align 8
  br label %for.cond.839

for.cond.839:                                     ; preds = %for.inc.852, %if.end.838
  %499 = load i64, i64* %i820, align 8
  %500 = load i64, i64* %len818, align 8
  %cmp840 = icmp slt i64 %499, %500
  br i1 %cmp840, label %for.body.841, label %for.end.854

for.body.841:                                     ; preds = %for.cond.839
  %501 = load i64, i64* %i820, align 8
  %502 = load %struct._object*, %struct._object** %tmp, align 8
  %503 = bitcast %struct._object* %502 to %struct.PyListObject*
  %ob_item844 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %503, i32 0, i32 1
  %504 = load %struct._object**, %struct._object*** %ob_item844, align 8
  %arrayidx845 = getelementptr %struct._object*, %struct._object** %504, i64 %501
  %505 = load %struct._object*, %struct._object** %arrayidx845, align 8
  %506 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call846 = call i32 @obj2ast_comprehension(%struct._object* %505, %struct._comprehension** %value843, %struct._arena* %506)
  store i32 %call846, i32* %res816, align 4
  %507 = load i32, i32* %res816, align 4
  %cmp847 = icmp ne i32 %507, 0
  br i1 %cmp847, label %if.then.848, label %if.end.849

if.then.848:                                      ; preds = %for.body.841
  br label %failed

if.end.849:                                       ; preds = %for.body.841
  %508 = load %struct._comprehension*, %struct._comprehension** %value843, align 8
  %509 = bitcast %struct._comprehension* %508 to i8*
  %510 = load i64, i64* %i820, align 8
  %511 = load %struct.asdl_seq*, %struct.asdl_seq** %generators, align 8
  %elements850 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %511, i32 0, i32 1
  %arrayidx851 = getelementptr [1 x i8*], [1 x i8*]* %elements850, i32 0, i64 %510
  store i8* %509, i8** %arrayidx851, align 8
  br label %for.inc.852

for.inc.852:                                      ; preds = %if.end.849
  %512 = load i64, i64* %i820, align 8
  %inc853 = add i64 %512, 1
  store i64 %inc853, i64* %i820, align 8
  br label %for.cond.839

for.end.854:                                      ; preds = %for.cond.839
  br label %do.body.855

do.body.855:                                      ; preds = %for.end.854
  %513 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %513, %struct._object** %_py_tmp857, align 8
  %514 = load %struct._object*, %struct._object** %_py_tmp857, align 8
  %cmp858 = icmp ne %struct._object* %514, null
  br i1 %cmp858, label %if.then.859, label %if.end.872

if.then.859:                                      ; preds = %do.body.855
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.860

do.body.860:                                      ; preds = %if.then.859
  %515 = load %struct._object*, %struct._object** %_py_tmp857, align 8
  store %struct._object* %515, %struct._object** %_py_decref_tmp862, align 8
  %516 = load %struct._object*, %struct._object** %_py_decref_tmp862, align 8
  %ob_refcnt863 = getelementptr inbounds %struct._object, %struct._object* %516, i32 0, i32 0
  %517 = load i64, i64* %ob_refcnt863, align 8
  %dec864 = add i64 %517, -1
  store i64 %dec864, i64* %ob_refcnt863, align 8
  %cmp865 = icmp ne i64 %dec864, 0
  br i1 %cmp865, label %if.then.866, label %if.else.867

if.then.866:                                      ; preds = %do.body.860
  br label %if.end.870

if.else.867:                                      ; preds = %do.body.860
  %518 = load %struct._object*, %struct._object** %_py_decref_tmp862, align 8
  %ob_type868 = getelementptr inbounds %struct._object, %struct._object* %518, i32 0, i32 1
  %519 = load %struct._typeobject*, %struct._typeobject** %ob_type868, align 8
  %tp_dealloc869 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %519, i32 0, i32 4
  %520 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc869, align 8
  %521 = load %struct._object*, %struct._object** %_py_decref_tmp862, align 8
  call void %520(%struct._object* %521)
  br label %if.end.870

if.end.870:                                       ; preds = %if.else.867, %if.then.866
  br label %do.end.871

do.end.871:                                       ; preds = %if.end.870
  br label %if.end.872

if.end.872:                                       ; preds = %do.end.871, %do.body.855
  br label %do.end.873

do.end.873:                                       ; preds = %if.end.872
  br label %if.end.875

if.else.874:                                      ; preds = %if.end.811
  %522 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %522, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.358, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.875:                                       ; preds = %do.end.873
  %523 = load %struct._expr*, %struct._expr** %elt, align 8
  %524 = load %struct.asdl_seq*, %struct.asdl_seq** %generators, align 8
  %525 = load i32, i32* %lineno, align 4
  %526 = load i32, i32* %col_offset, align 4
  %527 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call876 = call %struct._expr* @_Py_ListComp(%struct._expr* %523, %struct.asdl_seq* %524, i32 %525, i32 %526, %struct._arena* %527)
  %528 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call876, %struct._expr** %528, align 8
  %529 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %530 = load %struct._expr*, %struct._expr** %529, align 8
  %cmp877 = icmp eq %struct._expr* %530, null
  br i1 %cmp877, label %if.then.878, label %if.end.879

if.then.878:                                      ; preds = %if.end.875
  br label %failed

if.end.879:                                       ; preds = %if.end.875
  store i32 0, i32* %retval
  br label %return

if.end.880:                                       ; preds = %if.end.773
  %531 = load %struct._object*, %struct._object** %obj.addr, align 8
  %532 = load %struct._typeobject*, %struct._typeobject** @SetComp_type, align 8
  %533 = bitcast %struct._typeobject* %532 to %struct._object*
  %call881 = call i32 @PyObject_IsInstance(%struct._object* %531, %struct._object* %533)
  store i32 %call881, i32* %isinstance, align 4
  %534 = load i32, i32* %isinstance, align 4
  %cmp882 = icmp eq i32 %534, -1
  br i1 %cmp882, label %if.then.883, label %if.end.884

if.then.883:                                      ; preds = %if.end.880
  store i32 1, i32* %retval
  br label %return

if.end.884:                                       ; preds = %if.end.880
  %535 = load i32, i32* %isinstance, align 4
  %tobool885 = icmp ne i32 %535, 0
  br i1 %tobool885, label %if.then.886, label %if.end.993

if.then.886:                                      ; preds = %if.end.884
  %536 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call891 = call i32 @_PyObject_HasAttrId(%struct._object* %536, %struct._Py_Identifier* @PyId_elt)
  %tobool892 = icmp ne i32 %call891, 0
  br i1 %tobool892, label %if.then.893, label %if.else.923

if.then.893:                                      ; preds = %if.then.886
  %537 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call896 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %537, %struct._Py_Identifier* @PyId_elt)
  store %struct._object* %call896, %struct._object** %tmp, align 8
  %538 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp897 = icmp eq %struct._object* %538, null
  br i1 %cmp897, label %if.then.898, label %if.end.899

if.then.898:                                      ; preds = %if.then.893
  br label %failed

if.end.899:                                       ; preds = %if.then.893
  %539 = load %struct._object*, %struct._object** %tmp, align 8
  %540 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call900 = call i32 @obj2ast_expr(%struct._object* %539, %struct._expr** %elt888, %struct._arena* %540)
  store i32 %call900, i32* %res895, align 4
  %541 = load i32, i32* %res895, align 4
  %cmp901 = icmp ne i32 %541, 0
  br i1 %cmp901, label %if.then.902, label %if.end.903

if.then.902:                                      ; preds = %if.end.899
  br label %failed

if.end.903:                                       ; preds = %if.end.899
  br label %do.body.904

do.body.904:                                      ; preds = %if.end.903
  %542 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %542, %struct._object** %_py_tmp906, align 8
  %543 = load %struct._object*, %struct._object** %_py_tmp906, align 8
  %cmp907 = icmp ne %struct._object* %543, null
  br i1 %cmp907, label %if.then.908, label %if.end.921

if.then.908:                                      ; preds = %do.body.904
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.909

do.body.909:                                      ; preds = %if.then.908
  %544 = load %struct._object*, %struct._object** %_py_tmp906, align 8
  store %struct._object* %544, %struct._object** %_py_decref_tmp911, align 8
  %545 = load %struct._object*, %struct._object** %_py_decref_tmp911, align 8
  %ob_refcnt912 = getelementptr inbounds %struct._object, %struct._object* %545, i32 0, i32 0
  %546 = load i64, i64* %ob_refcnt912, align 8
  %dec913 = add i64 %546, -1
  store i64 %dec913, i64* %ob_refcnt912, align 8
  %cmp914 = icmp ne i64 %dec913, 0
  br i1 %cmp914, label %if.then.915, label %if.else.916

if.then.915:                                      ; preds = %do.body.909
  br label %if.end.919

if.else.916:                                      ; preds = %do.body.909
  %547 = load %struct._object*, %struct._object** %_py_decref_tmp911, align 8
  %ob_type917 = getelementptr inbounds %struct._object, %struct._object* %547, i32 0, i32 1
  %548 = load %struct._typeobject*, %struct._typeobject** %ob_type917, align 8
  %tp_dealloc918 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %548, i32 0, i32 4
  %549 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc918, align 8
  %550 = load %struct._object*, %struct._object** %_py_decref_tmp911, align 8
  call void %549(%struct._object* %550)
  br label %if.end.919

if.end.919:                                       ; preds = %if.else.916, %if.then.915
  br label %do.end.920

do.end.920:                                       ; preds = %if.end.919
  br label %if.end.921

if.end.921:                                       ; preds = %do.end.920, %do.body.904
  br label %do.end.922

do.end.922:                                       ; preds = %if.end.921
  br label %if.end.924

if.else.923:                                      ; preds = %if.then.886
  %551 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %551, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.359, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.924:                                       ; preds = %do.end.922
  %552 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call925 = call i32 @_PyObject_HasAttrId(%struct._object* %552, %struct._Py_Identifier* @PyId_generators)
  %tobool926 = icmp ne i32 %call925, 0
  br i1 %tobool926, label %if.then.927, label %if.else.987

if.then.927:                                      ; preds = %if.end.924
  %553 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call934 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %553, %struct._Py_Identifier* @PyId_generators)
  store %struct._object* %call934, %struct._object** %tmp, align 8
  %554 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp935 = icmp eq %struct._object* %554, null
  br i1 %cmp935, label %if.then.936, label %if.end.937

if.then.936:                                      ; preds = %if.then.927
  br label %failed

if.end.937:                                       ; preds = %if.then.927
  %555 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type938 = getelementptr inbounds %struct._object, %struct._object* %555, i32 0, i32 1
  %556 = load %struct._typeobject*, %struct._typeobject** %ob_type938, align 8
  %tp_flags939 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %556, i32 0, i32 19
  %557 = load i64, i64* %tp_flags939, align 8
  %and940 = and i64 %557, 33554432
  %cmp941 = icmp ne i64 %and940, 0
  br i1 %cmp941, label %if.end.946, label %if.then.942

if.then.942:                                      ; preds = %if.end.937
  %558 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %559 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type943 = getelementptr inbounds %struct._object, %struct._object* %559, i32 0, i32 1
  %560 = load %struct._typeobject*, %struct._typeobject** %ob_type943, align 8
  %tp_name944 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %560, i32 0, i32 1
  %561 = load i8*, i8** %tp_name944, align 8
  %call945 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %558, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.360, i32 0, i32 0), i8* %561)
  br label %failed

if.end.946:                                       ; preds = %if.end.937
  %562 = load %struct._object*, %struct._object** %tmp, align 8
  %563 = bitcast %struct._object* %562 to %struct.PyVarObject*
  %ob_size947 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %563, i32 0, i32 1
  %564 = load i64, i64* %ob_size947, align 8
  store i64 %564, i64* %len931, align 8
  %565 = load i64, i64* %len931, align 8
  %566 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call948 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %565, %struct._arena* %566)
  store %struct.asdl_seq* %call948, %struct.asdl_seq** %generators890, align 8
  %567 = load %struct.asdl_seq*, %struct.asdl_seq** %generators890, align 8
  %cmp949 = icmp eq %struct.asdl_seq* %567, null
  br i1 %cmp949, label %if.then.950, label %if.end.951

if.then.950:                                      ; preds = %if.end.946
  br label %failed

if.end.951:                                       ; preds = %if.end.946
  store i64 0, i64* %i933, align 8
  br label %for.cond.952

for.cond.952:                                     ; preds = %for.inc.965, %if.end.951
  %568 = load i64, i64* %i933, align 8
  %569 = load i64, i64* %len931, align 8
  %cmp953 = icmp slt i64 %568, %569
  br i1 %cmp953, label %for.body.954, label %for.end.967

for.body.954:                                     ; preds = %for.cond.952
  %570 = load i64, i64* %i933, align 8
  %571 = load %struct._object*, %struct._object** %tmp, align 8
  %572 = bitcast %struct._object* %571 to %struct.PyListObject*
  %ob_item957 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %572, i32 0, i32 1
  %573 = load %struct._object**, %struct._object*** %ob_item957, align 8
  %arrayidx958 = getelementptr %struct._object*, %struct._object** %573, i64 %570
  %574 = load %struct._object*, %struct._object** %arrayidx958, align 8
  %575 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call959 = call i32 @obj2ast_comprehension(%struct._object* %574, %struct._comprehension** %value956, %struct._arena* %575)
  store i32 %call959, i32* %res929, align 4
  %576 = load i32, i32* %res929, align 4
  %cmp960 = icmp ne i32 %576, 0
  br i1 %cmp960, label %if.then.961, label %if.end.962

if.then.961:                                      ; preds = %for.body.954
  br label %failed

if.end.962:                                       ; preds = %for.body.954
  %577 = load %struct._comprehension*, %struct._comprehension** %value956, align 8
  %578 = bitcast %struct._comprehension* %577 to i8*
  %579 = load i64, i64* %i933, align 8
  %580 = load %struct.asdl_seq*, %struct.asdl_seq** %generators890, align 8
  %elements963 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %580, i32 0, i32 1
  %arrayidx964 = getelementptr [1 x i8*], [1 x i8*]* %elements963, i32 0, i64 %579
  store i8* %578, i8** %arrayidx964, align 8
  br label %for.inc.965

for.inc.965:                                      ; preds = %if.end.962
  %581 = load i64, i64* %i933, align 8
  %inc966 = add i64 %581, 1
  store i64 %inc966, i64* %i933, align 8
  br label %for.cond.952

for.end.967:                                      ; preds = %for.cond.952
  br label %do.body.968

do.body.968:                                      ; preds = %for.end.967
  %582 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %582, %struct._object** %_py_tmp970, align 8
  %583 = load %struct._object*, %struct._object** %_py_tmp970, align 8
  %cmp971 = icmp ne %struct._object* %583, null
  br i1 %cmp971, label %if.then.972, label %if.end.985

if.then.972:                                      ; preds = %do.body.968
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.973

do.body.973:                                      ; preds = %if.then.972
  %584 = load %struct._object*, %struct._object** %_py_tmp970, align 8
  store %struct._object* %584, %struct._object** %_py_decref_tmp975, align 8
  %585 = load %struct._object*, %struct._object** %_py_decref_tmp975, align 8
  %ob_refcnt976 = getelementptr inbounds %struct._object, %struct._object* %585, i32 0, i32 0
  %586 = load i64, i64* %ob_refcnt976, align 8
  %dec977 = add i64 %586, -1
  store i64 %dec977, i64* %ob_refcnt976, align 8
  %cmp978 = icmp ne i64 %dec977, 0
  br i1 %cmp978, label %if.then.979, label %if.else.980

if.then.979:                                      ; preds = %do.body.973
  br label %if.end.983

if.else.980:                                      ; preds = %do.body.973
  %587 = load %struct._object*, %struct._object** %_py_decref_tmp975, align 8
  %ob_type981 = getelementptr inbounds %struct._object, %struct._object* %587, i32 0, i32 1
  %588 = load %struct._typeobject*, %struct._typeobject** %ob_type981, align 8
  %tp_dealloc982 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %588, i32 0, i32 4
  %589 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc982, align 8
  %590 = load %struct._object*, %struct._object** %_py_decref_tmp975, align 8
  call void %589(%struct._object* %590)
  br label %if.end.983

if.end.983:                                       ; preds = %if.else.980, %if.then.979
  br label %do.end.984

do.end.984:                                       ; preds = %if.end.983
  br label %if.end.985

if.end.985:                                       ; preds = %do.end.984, %do.body.968
  br label %do.end.986

do.end.986:                                       ; preds = %if.end.985
  br label %if.end.988

if.else.987:                                      ; preds = %if.end.924
  %591 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %591, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.361, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.988:                                       ; preds = %do.end.986
  %592 = load %struct._expr*, %struct._expr** %elt888, align 8
  %593 = load %struct.asdl_seq*, %struct.asdl_seq** %generators890, align 8
  %594 = load i32, i32* %lineno, align 4
  %595 = load i32, i32* %col_offset, align 4
  %596 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call989 = call %struct._expr* @_Py_SetComp(%struct._expr* %592, %struct.asdl_seq* %593, i32 %594, i32 %595, %struct._arena* %596)
  %597 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call989, %struct._expr** %597, align 8
  %598 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %599 = load %struct._expr*, %struct._expr** %598, align 8
  %cmp990 = icmp eq %struct._expr* %599, null
  br i1 %cmp990, label %if.then.991, label %if.end.992

if.then.991:                                      ; preds = %if.end.988
  br label %failed

if.end.992:                                       ; preds = %if.end.988
  store i32 0, i32* %retval
  br label %return

if.end.993:                                       ; preds = %if.end.884
  %600 = load %struct._object*, %struct._object** %obj.addr, align 8
  %601 = load %struct._typeobject*, %struct._typeobject** @DictComp_type, align 8
  %602 = bitcast %struct._typeobject* %601 to %struct._object*
  %call994 = call i32 @PyObject_IsInstance(%struct._object* %600, %struct._object* %602)
  store i32 %call994, i32* %isinstance, align 4
  %603 = load i32, i32* %isinstance, align 4
  %cmp995 = icmp eq i32 %603, -1
  br i1 %cmp995, label %if.then.996, label %if.end.997

if.then.996:                                      ; preds = %if.end.993
  store i32 1, i32* %retval
  br label %return

if.end.997:                                       ; preds = %if.end.993
  %604 = load i32, i32* %isinstance, align 4
  %tobool998 = icmp ne i32 %604, 0
  br i1 %tobool998, label %if.then.999, label %if.end.1141

if.then.999:                                      ; preds = %if.end.997
  %605 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1005 = call i32 @_PyObject_HasAttrId(%struct._object* %605, %struct._Py_Identifier* @PyId_key)
  %tobool1006 = icmp ne i32 %call1005, 0
  br i1 %tobool1006, label %if.then.1007, label %if.else.1037

if.then.1007:                                     ; preds = %if.then.999
  %606 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1010 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %606, %struct._Py_Identifier* @PyId_key)
  store %struct._object* %call1010, %struct._object** %tmp, align 8
  %607 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1011 = icmp eq %struct._object* %607, null
  br i1 %cmp1011, label %if.then.1012, label %if.end.1013

if.then.1012:                                     ; preds = %if.then.1007
  br label %failed

if.end.1013:                                      ; preds = %if.then.1007
  %608 = load %struct._object*, %struct._object** %tmp, align 8
  %609 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1014 = call i32 @obj2ast_expr(%struct._object* %608, %struct._expr** %key, %struct._arena* %609)
  store i32 %call1014, i32* %res1009, align 4
  %610 = load i32, i32* %res1009, align 4
  %cmp1015 = icmp ne i32 %610, 0
  br i1 %cmp1015, label %if.then.1016, label %if.end.1017

if.then.1016:                                     ; preds = %if.end.1013
  br label %failed

if.end.1017:                                      ; preds = %if.end.1013
  br label %do.body.1018

do.body.1018:                                     ; preds = %if.end.1017
  %611 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %611, %struct._object** %_py_tmp1020, align 8
  %612 = load %struct._object*, %struct._object** %_py_tmp1020, align 8
  %cmp1021 = icmp ne %struct._object* %612, null
  br i1 %cmp1021, label %if.then.1022, label %if.end.1035

if.then.1022:                                     ; preds = %do.body.1018
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1023

do.body.1023:                                     ; preds = %if.then.1022
  %613 = load %struct._object*, %struct._object** %_py_tmp1020, align 8
  store %struct._object* %613, %struct._object** %_py_decref_tmp1025, align 8
  %614 = load %struct._object*, %struct._object** %_py_decref_tmp1025, align 8
  %ob_refcnt1026 = getelementptr inbounds %struct._object, %struct._object* %614, i32 0, i32 0
  %615 = load i64, i64* %ob_refcnt1026, align 8
  %dec1027 = add i64 %615, -1
  store i64 %dec1027, i64* %ob_refcnt1026, align 8
  %cmp1028 = icmp ne i64 %dec1027, 0
  br i1 %cmp1028, label %if.then.1029, label %if.else.1030

if.then.1029:                                     ; preds = %do.body.1023
  br label %if.end.1033

if.else.1030:                                     ; preds = %do.body.1023
  %616 = load %struct._object*, %struct._object** %_py_decref_tmp1025, align 8
  %ob_type1031 = getelementptr inbounds %struct._object, %struct._object* %616, i32 0, i32 1
  %617 = load %struct._typeobject*, %struct._typeobject** %ob_type1031, align 8
  %tp_dealloc1032 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %617, i32 0, i32 4
  %618 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1032, align 8
  %619 = load %struct._object*, %struct._object** %_py_decref_tmp1025, align 8
  call void %618(%struct._object* %619)
  br label %if.end.1033

if.end.1033:                                      ; preds = %if.else.1030, %if.then.1029
  br label %do.end.1034

do.end.1034:                                      ; preds = %if.end.1033
  br label %if.end.1035

if.end.1035:                                      ; preds = %do.end.1034, %do.body.1018
  br label %do.end.1036

do.end.1036:                                      ; preds = %if.end.1035
  br label %if.end.1038

if.else.1037:                                     ; preds = %if.then.999
  %620 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %620, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.362, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1038:                                      ; preds = %do.end.1036
  %621 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1039 = call i32 @_PyObject_HasAttrId(%struct._object* %621, %struct._Py_Identifier* @PyId_value)
  %tobool1040 = icmp ne i32 %call1039, 0
  br i1 %tobool1040, label %if.then.1041, label %if.else.1071

if.then.1041:                                     ; preds = %if.end.1038
  %622 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1044 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %622, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call1044, %struct._object** %tmp, align 8
  %623 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1045 = icmp eq %struct._object* %623, null
  br i1 %cmp1045, label %if.then.1046, label %if.end.1047

if.then.1046:                                     ; preds = %if.then.1041
  br label %failed

if.end.1047:                                      ; preds = %if.then.1041
  %624 = load %struct._object*, %struct._object** %tmp, align 8
  %625 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1048 = call i32 @obj2ast_expr(%struct._object* %624, %struct._expr** %value1002, %struct._arena* %625)
  store i32 %call1048, i32* %res1043, align 4
  %626 = load i32, i32* %res1043, align 4
  %cmp1049 = icmp ne i32 %626, 0
  br i1 %cmp1049, label %if.then.1050, label %if.end.1051

if.then.1050:                                     ; preds = %if.end.1047
  br label %failed

if.end.1051:                                      ; preds = %if.end.1047
  br label %do.body.1052

do.body.1052:                                     ; preds = %if.end.1051
  %627 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %627, %struct._object** %_py_tmp1054, align 8
  %628 = load %struct._object*, %struct._object** %_py_tmp1054, align 8
  %cmp1055 = icmp ne %struct._object* %628, null
  br i1 %cmp1055, label %if.then.1056, label %if.end.1069

if.then.1056:                                     ; preds = %do.body.1052
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1057

do.body.1057:                                     ; preds = %if.then.1056
  %629 = load %struct._object*, %struct._object** %_py_tmp1054, align 8
  store %struct._object* %629, %struct._object** %_py_decref_tmp1059, align 8
  %630 = load %struct._object*, %struct._object** %_py_decref_tmp1059, align 8
  %ob_refcnt1060 = getelementptr inbounds %struct._object, %struct._object* %630, i32 0, i32 0
  %631 = load i64, i64* %ob_refcnt1060, align 8
  %dec1061 = add i64 %631, -1
  store i64 %dec1061, i64* %ob_refcnt1060, align 8
  %cmp1062 = icmp ne i64 %dec1061, 0
  br i1 %cmp1062, label %if.then.1063, label %if.else.1064

if.then.1063:                                     ; preds = %do.body.1057
  br label %if.end.1067

if.else.1064:                                     ; preds = %do.body.1057
  %632 = load %struct._object*, %struct._object** %_py_decref_tmp1059, align 8
  %ob_type1065 = getelementptr inbounds %struct._object, %struct._object* %632, i32 0, i32 1
  %633 = load %struct._typeobject*, %struct._typeobject** %ob_type1065, align 8
  %tp_dealloc1066 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %633, i32 0, i32 4
  %634 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1066, align 8
  %635 = load %struct._object*, %struct._object** %_py_decref_tmp1059, align 8
  call void %634(%struct._object* %635)
  br label %if.end.1067

if.end.1067:                                      ; preds = %if.else.1064, %if.then.1063
  br label %do.end.1068

do.end.1068:                                      ; preds = %if.end.1067
  br label %if.end.1069

if.end.1069:                                      ; preds = %do.end.1068, %do.body.1052
  br label %do.end.1070

do.end.1070:                                      ; preds = %if.end.1069
  br label %if.end.1072

if.else.1071:                                     ; preds = %if.end.1038
  %636 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %636, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.363, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1072:                                      ; preds = %do.end.1070
  %637 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1073 = call i32 @_PyObject_HasAttrId(%struct._object* %637, %struct._Py_Identifier* @PyId_generators)
  %tobool1074 = icmp ne i32 %call1073, 0
  br i1 %tobool1074, label %if.then.1075, label %if.else.1135

if.then.1075:                                     ; preds = %if.end.1072
  %638 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1082 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %638, %struct._Py_Identifier* @PyId_generators)
  store %struct._object* %call1082, %struct._object** %tmp, align 8
  %639 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1083 = icmp eq %struct._object* %639, null
  br i1 %cmp1083, label %if.then.1084, label %if.end.1085

if.then.1084:                                     ; preds = %if.then.1075
  br label %failed

if.end.1085:                                      ; preds = %if.then.1075
  %640 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1086 = getelementptr inbounds %struct._object, %struct._object* %640, i32 0, i32 1
  %641 = load %struct._typeobject*, %struct._typeobject** %ob_type1086, align 8
  %tp_flags1087 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %641, i32 0, i32 19
  %642 = load i64, i64* %tp_flags1087, align 8
  %and1088 = and i64 %642, 33554432
  %cmp1089 = icmp ne i64 %and1088, 0
  br i1 %cmp1089, label %if.end.1094, label %if.then.1090

if.then.1090:                                     ; preds = %if.end.1085
  %643 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %644 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1091 = getelementptr inbounds %struct._object, %struct._object* %644, i32 0, i32 1
  %645 = load %struct._typeobject*, %struct._typeobject** %ob_type1091, align 8
  %tp_name1092 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %645, i32 0, i32 1
  %646 = load i8*, i8** %tp_name1092, align 8
  %call1093 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %643, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.364, i32 0, i32 0), i8* %646)
  br label %failed

if.end.1094:                                      ; preds = %if.end.1085
  %647 = load %struct._object*, %struct._object** %tmp, align 8
  %648 = bitcast %struct._object* %647 to %struct.PyVarObject*
  %ob_size1095 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %648, i32 0, i32 1
  %649 = load i64, i64* %ob_size1095, align 8
  store i64 %649, i64* %len1079, align 8
  %650 = load i64, i64* %len1079, align 8
  %651 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1096 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %650, %struct._arena* %651)
  store %struct.asdl_seq* %call1096, %struct.asdl_seq** %generators1004, align 8
  %652 = load %struct.asdl_seq*, %struct.asdl_seq** %generators1004, align 8
  %cmp1097 = icmp eq %struct.asdl_seq* %652, null
  br i1 %cmp1097, label %if.then.1098, label %if.end.1099

if.then.1098:                                     ; preds = %if.end.1094
  br label %failed

if.end.1099:                                      ; preds = %if.end.1094
  store i64 0, i64* %i1081, align 8
  br label %for.cond.1100

for.cond.1100:                                    ; preds = %for.inc.1113, %if.end.1099
  %653 = load i64, i64* %i1081, align 8
  %654 = load i64, i64* %len1079, align 8
  %cmp1101 = icmp slt i64 %653, %654
  br i1 %cmp1101, label %for.body.1102, label %for.end.1115

for.body.1102:                                    ; preds = %for.cond.1100
  %655 = load i64, i64* %i1081, align 8
  %656 = load %struct._object*, %struct._object** %tmp, align 8
  %657 = bitcast %struct._object* %656 to %struct.PyListObject*
  %ob_item1105 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %657, i32 0, i32 1
  %658 = load %struct._object**, %struct._object*** %ob_item1105, align 8
  %arrayidx1106 = getelementptr %struct._object*, %struct._object** %658, i64 %655
  %659 = load %struct._object*, %struct._object** %arrayidx1106, align 8
  %660 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1107 = call i32 @obj2ast_comprehension(%struct._object* %659, %struct._comprehension** %value1104, %struct._arena* %660)
  store i32 %call1107, i32* %res1077, align 4
  %661 = load i32, i32* %res1077, align 4
  %cmp1108 = icmp ne i32 %661, 0
  br i1 %cmp1108, label %if.then.1109, label %if.end.1110

if.then.1109:                                     ; preds = %for.body.1102
  br label %failed

if.end.1110:                                      ; preds = %for.body.1102
  %662 = load %struct._comprehension*, %struct._comprehension** %value1104, align 8
  %663 = bitcast %struct._comprehension* %662 to i8*
  %664 = load i64, i64* %i1081, align 8
  %665 = load %struct.asdl_seq*, %struct.asdl_seq** %generators1004, align 8
  %elements1111 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %665, i32 0, i32 1
  %arrayidx1112 = getelementptr [1 x i8*], [1 x i8*]* %elements1111, i32 0, i64 %664
  store i8* %663, i8** %arrayidx1112, align 8
  br label %for.inc.1113

for.inc.1113:                                     ; preds = %if.end.1110
  %666 = load i64, i64* %i1081, align 8
  %inc1114 = add i64 %666, 1
  store i64 %inc1114, i64* %i1081, align 8
  br label %for.cond.1100

for.end.1115:                                     ; preds = %for.cond.1100
  br label %do.body.1116

do.body.1116:                                     ; preds = %for.end.1115
  %667 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %667, %struct._object** %_py_tmp1118, align 8
  %668 = load %struct._object*, %struct._object** %_py_tmp1118, align 8
  %cmp1119 = icmp ne %struct._object* %668, null
  br i1 %cmp1119, label %if.then.1120, label %if.end.1133

if.then.1120:                                     ; preds = %do.body.1116
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1121

do.body.1121:                                     ; preds = %if.then.1120
  %669 = load %struct._object*, %struct._object** %_py_tmp1118, align 8
  store %struct._object* %669, %struct._object** %_py_decref_tmp1123, align 8
  %670 = load %struct._object*, %struct._object** %_py_decref_tmp1123, align 8
  %ob_refcnt1124 = getelementptr inbounds %struct._object, %struct._object* %670, i32 0, i32 0
  %671 = load i64, i64* %ob_refcnt1124, align 8
  %dec1125 = add i64 %671, -1
  store i64 %dec1125, i64* %ob_refcnt1124, align 8
  %cmp1126 = icmp ne i64 %dec1125, 0
  br i1 %cmp1126, label %if.then.1127, label %if.else.1128

if.then.1127:                                     ; preds = %do.body.1121
  br label %if.end.1131

if.else.1128:                                     ; preds = %do.body.1121
  %672 = load %struct._object*, %struct._object** %_py_decref_tmp1123, align 8
  %ob_type1129 = getelementptr inbounds %struct._object, %struct._object* %672, i32 0, i32 1
  %673 = load %struct._typeobject*, %struct._typeobject** %ob_type1129, align 8
  %tp_dealloc1130 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %673, i32 0, i32 4
  %674 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1130, align 8
  %675 = load %struct._object*, %struct._object** %_py_decref_tmp1123, align 8
  call void %674(%struct._object* %675)
  br label %if.end.1131

if.end.1131:                                      ; preds = %if.else.1128, %if.then.1127
  br label %do.end.1132

do.end.1132:                                      ; preds = %if.end.1131
  br label %if.end.1133

if.end.1133:                                      ; preds = %do.end.1132, %do.body.1116
  br label %do.end.1134

do.end.1134:                                      ; preds = %if.end.1133
  br label %if.end.1136

if.else.1135:                                     ; preds = %if.end.1072
  %676 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %676, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.365, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1136:                                      ; preds = %do.end.1134
  %677 = load %struct._expr*, %struct._expr** %key, align 8
  %678 = load %struct._expr*, %struct._expr** %value1002, align 8
  %679 = load %struct.asdl_seq*, %struct.asdl_seq** %generators1004, align 8
  %680 = load i32, i32* %lineno, align 4
  %681 = load i32, i32* %col_offset, align 4
  %682 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1137 = call %struct._expr* @_Py_DictComp(%struct._expr* %677, %struct._expr* %678, %struct.asdl_seq* %679, i32 %680, i32 %681, %struct._arena* %682)
  %683 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call1137, %struct._expr** %683, align 8
  %684 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %685 = load %struct._expr*, %struct._expr** %684, align 8
  %cmp1138 = icmp eq %struct._expr* %685, null
  br i1 %cmp1138, label %if.then.1139, label %if.end.1140

if.then.1139:                                     ; preds = %if.end.1136
  br label %failed

if.end.1140:                                      ; preds = %if.end.1136
  store i32 0, i32* %retval
  br label %return

if.end.1141:                                      ; preds = %if.end.997
  %686 = load %struct._object*, %struct._object** %obj.addr, align 8
  %687 = load %struct._typeobject*, %struct._typeobject** @GeneratorExp_type, align 8
  %688 = bitcast %struct._typeobject* %687 to %struct._object*
  %call1142 = call i32 @PyObject_IsInstance(%struct._object* %686, %struct._object* %688)
  store i32 %call1142, i32* %isinstance, align 4
  %689 = load i32, i32* %isinstance, align 4
  %cmp1143 = icmp eq i32 %689, -1
  br i1 %cmp1143, label %if.then.1144, label %if.end.1145

if.then.1144:                                     ; preds = %if.end.1141
  store i32 1, i32* %retval
  br label %return

if.end.1145:                                      ; preds = %if.end.1141
  %690 = load i32, i32* %isinstance, align 4
  %tobool1146 = icmp ne i32 %690, 0
  br i1 %tobool1146, label %if.then.1147, label %if.end.1254

if.then.1147:                                     ; preds = %if.end.1145
  %691 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1152 = call i32 @_PyObject_HasAttrId(%struct._object* %691, %struct._Py_Identifier* @PyId_elt)
  %tobool1153 = icmp ne i32 %call1152, 0
  br i1 %tobool1153, label %if.then.1154, label %if.else.1184

if.then.1154:                                     ; preds = %if.then.1147
  %692 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1157 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %692, %struct._Py_Identifier* @PyId_elt)
  store %struct._object* %call1157, %struct._object** %tmp, align 8
  %693 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1158 = icmp eq %struct._object* %693, null
  br i1 %cmp1158, label %if.then.1159, label %if.end.1160

if.then.1159:                                     ; preds = %if.then.1154
  br label %failed

if.end.1160:                                      ; preds = %if.then.1154
  %694 = load %struct._object*, %struct._object** %tmp, align 8
  %695 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1161 = call i32 @obj2ast_expr(%struct._object* %694, %struct._expr** %elt1149, %struct._arena* %695)
  store i32 %call1161, i32* %res1156, align 4
  %696 = load i32, i32* %res1156, align 4
  %cmp1162 = icmp ne i32 %696, 0
  br i1 %cmp1162, label %if.then.1163, label %if.end.1164

if.then.1163:                                     ; preds = %if.end.1160
  br label %failed

if.end.1164:                                      ; preds = %if.end.1160
  br label %do.body.1165

do.body.1165:                                     ; preds = %if.end.1164
  %697 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %697, %struct._object** %_py_tmp1167, align 8
  %698 = load %struct._object*, %struct._object** %_py_tmp1167, align 8
  %cmp1168 = icmp ne %struct._object* %698, null
  br i1 %cmp1168, label %if.then.1169, label %if.end.1182

if.then.1169:                                     ; preds = %do.body.1165
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1170

do.body.1170:                                     ; preds = %if.then.1169
  %699 = load %struct._object*, %struct._object** %_py_tmp1167, align 8
  store %struct._object* %699, %struct._object** %_py_decref_tmp1172, align 8
  %700 = load %struct._object*, %struct._object** %_py_decref_tmp1172, align 8
  %ob_refcnt1173 = getelementptr inbounds %struct._object, %struct._object* %700, i32 0, i32 0
  %701 = load i64, i64* %ob_refcnt1173, align 8
  %dec1174 = add i64 %701, -1
  store i64 %dec1174, i64* %ob_refcnt1173, align 8
  %cmp1175 = icmp ne i64 %dec1174, 0
  br i1 %cmp1175, label %if.then.1176, label %if.else.1177

if.then.1176:                                     ; preds = %do.body.1170
  br label %if.end.1180

if.else.1177:                                     ; preds = %do.body.1170
  %702 = load %struct._object*, %struct._object** %_py_decref_tmp1172, align 8
  %ob_type1178 = getelementptr inbounds %struct._object, %struct._object* %702, i32 0, i32 1
  %703 = load %struct._typeobject*, %struct._typeobject** %ob_type1178, align 8
  %tp_dealloc1179 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %703, i32 0, i32 4
  %704 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1179, align 8
  %705 = load %struct._object*, %struct._object** %_py_decref_tmp1172, align 8
  call void %704(%struct._object* %705)
  br label %if.end.1180

if.end.1180:                                      ; preds = %if.else.1177, %if.then.1176
  br label %do.end.1181

do.end.1181:                                      ; preds = %if.end.1180
  br label %if.end.1182

if.end.1182:                                      ; preds = %do.end.1181, %do.body.1165
  br label %do.end.1183

do.end.1183:                                      ; preds = %if.end.1182
  br label %if.end.1185

if.else.1184:                                     ; preds = %if.then.1147
  %706 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %706, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.366, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1185:                                      ; preds = %do.end.1183
  %707 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1186 = call i32 @_PyObject_HasAttrId(%struct._object* %707, %struct._Py_Identifier* @PyId_generators)
  %tobool1187 = icmp ne i32 %call1186, 0
  br i1 %tobool1187, label %if.then.1188, label %if.else.1248

if.then.1188:                                     ; preds = %if.end.1185
  %708 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1195 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %708, %struct._Py_Identifier* @PyId_generators)
  store %struct._object* %call1195, %struct._object** %tmp, align 8
  %709 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1196 = icmp eq %struct._object* %709, null
  br i1 %cmp1196, label %if.then.1197, label %if.end.1198

if.then.1197:                                     ; preds = %if.then.1188
  br label %failed

if.end.1198:                                      ; preds = %if.then.1188
  %710 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1199 = getelementptr inbounds %struct._object, %struct._object* %710, i32 0, i32 1
  %711 = load %struct._typeobject*, %struct._typeobject** %ob_type1199, align 8
  %tp_flags1200 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %711, i32 0, i32 19
  %712 = load i64, i64* %tp_flags1200, align 8
  %and1201 = and i64 %712, 33554432
  %cmp1202 = icmp ne i64 %and1201, 0
  br i1 %cmp1202, label %if.end.1207, label %if.then.1203

if.then.1203:                                     ; preds = %if.end.1198
  %713 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %714 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1204 = getelementptr inbounds %struct._object, %struct._object* %714, i32 0, i32 1
  %715 = load %struct._typeobject*, %struct._typeobject** %ob_type1204, align 8
  %tp_name1205 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %715, i32 0, i32 1
  %716 = load i8*, i8** %tp_name1205, align 8
  %call1206 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %713, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.367, i32 0, i32 0), i8* %716)
  br label %failed

if.end.1207:                                      ; preds = %if.end.1198
  %717 = load %struct._object*, %struct._object** %tmp, align 8
  %718 = bitcast %struct._object* %717 to %struct.PyVarObject*
  %ob_size1208 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %718, i32 0, i32 1
  %719 = load i64, i64* %ob_size1208, align 8
  store i64 %719, i64* %len1192, align 8
  %720 = load i64, i64* %len1192, align 8
  %721 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1209 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %720, %struct._arena* %721)
  store %struct.asdl_seq* %call1209, %struct.asdl_seq** %generators1151, align 8
  %722 = load %struct.asdl_seq*, %struct.asdl_seq** %generators1151, align 8
  %cmp1210 = icmp eq %struct.asdl_seq* %722, null
  br i1 %cmp1210, label %if.then.1211, label %if.end.1212

if.then.1211:                                     ; preds = %if.end.1207
  br label %failed

if.end.1212:                                      ; preds = %if.end.1207
  store i64 0, i64* %i1194, align 8
  br label %for.cond.1213

for.cond.1213:                                    ; preds = %for.inc.1226, %if.end.1212
  %723 = load i64, i64* %i1194, align 8
  %724 = load i64, i64* %len1192, align 8
  %cmp1214 = icmp slt i64 %723, %724
  br i1 %cmp1214, label %for.body.1215, label %for.end.1228

for.body.1215:                                    ; preds = %for.cond.1213
  %725 = load i64, i64* %i1194, align 8
  %726 = load %struct._object*, %struct._object** %tmp, align 8
  %727 = bitcast %struct._object* %726 to %struct.PyListObject*
  %ob_item1218 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %727, i32 0, i32 1
  %728 = load %struct._object**, %struct._object*** %ob_item1218, align 8
  %arrayidx1219 = getelementptr %struct._object*, %struct._object** %728, i64 %725
  %729 = load %struct._object*, %struct._object** %arrayidx1219, align 8
  %730 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1220 = call i32 @obj2ast_comprehension(%struct._object* %729, %struct._comprehension** %value1217, %struct._arena* %730)
  store i32 %call1220, i32* %res1190, align 4
  %731 = load i32, i32* %res1190, align 4
  %cmp1221 = icmp ne i32 %731, 0
  br i1 %cmp1221, label %if.then.1222, label %if.end.1223

if.then.1222:                                     ; preds = %for.body.1215
  br label %failed

if.end.1223:                                      ; preds = %for.body.1215
  %732 = load %struct._comprehension*, %struct._comprehension** %value1217, align 8
  %733 = bitcast %struct._comprehension* %732 to i8*
  %734 = load i64, i64* %i1194, align 8
  %735 = load %struct.asdl_seq*, %struct.asdl_seq** %generators1151, align 8
  %elements1224 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %735, i32 0, i32 1
  %arrayidx1225 = getelementptr [1 x i8*], [1 x i8*]* %elements1224, i32 0, i64 %734
  store i8* %733, i8** %arrayidx1225, align 8
  br label %for.inc.1226

for.inc.1226:                                     ; preds = %if.end.1223
  %736 = load i64, i64* %i1194, align 8
  %inc1227 = add i64 %736, 1
  store i64 %inc1227, i64* %i1194, align 8
  br label %for.cond.1213

for.end.1228:                                     ; preds = %for.cond.1213
  br label %do.body.1229

do.body.1229:                                     ; preds = %for.end.1228
  %737 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %737, %struct._object** %_py_tmp1231, align 8
  %738 = load %struct._object*, %struct._object** %_py_tmp1231, align 8
  %cmp1232 = icmp ne %struct._object* %738, null
  br i1 %cmp1232, label %if.then.1233, label %if.end.1246

if.then.1233:                                     ; preds = %do.body.1229
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1234

do.body.1234:                                     ; preds = %if.then.1233
  %739 = load %struct._object*, %struct._object** %_py_tmp1231, align 8
  store %struct._object* %739, %struct._object** %_py_decref_tmp1236, align 8
  %740 = load %struct._object*, %struct._object** %_py_decref_tmp1236, align 8
  %ob_refcnt1237 = getelementptr inbounds %struct._object, %struct._object* %740, i32 0, i32 0
  %741 = load i64, i64* %ob_refcnt1237, align 8
  %dec1238 = add i64 %741, -1
  store i64 %dec1238, i64* %ob_refcnt1237, align 8
  %cmp1239 = icmp ne i64 %dec1238, 0
  br i1 %cmp1239, label %if.then.1240, label %if.else.1241

if.then.1240:                                     ; preds = %do.body.1234
  br label %if.end.1244

if.else.1241:                                     ; preds = %do.body.1234
  %742 = load %struct._object*, %struct._object** %_py_decref_tmp1236, align 8
  %ob_type1242 = getelementptr inbounds %struct._object, %struct._object* %742, i32 0, i32 1
  %743 = load %struct._typeobject*, %struct._typeobject** %ob_type1242, align 8
  %tp_dealloc1243 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %743, i32 0, i32 4
  %744 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1243, align 8
  %745 = load %struct._object*, %struct._object** %_py_decref_tmp1236, align 8
  call void %744(%struct._object* %745)
  br label %if.end.1244

if.end.1244:                                      ; preds = %if.else.1241, %if.then.1240
  br label %do.end.1245

do.end.1245:                                      ; preds = %if.end.1244
  br label %if.end.1246

if.end.1246:                                      ; preds = %do.end.1245, %do.body.1229
  br label %do.end.1247

do.end.1247:                                      ; preds = %if.end.1246
  br label %if.end.1249

if.else.1248:                                     ; preds = %if.end.1185
  %746 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %746, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.368, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1249:                                      ; preds = %do.end.1247
  %747 = load %struct._expr*, %struct._expr** %elt1149, align 8
  %748 = load %struct.asdl_seq*, %struct.asdl_seq** %generators1151, align 8
  %749 = load i32, i32* %lineno, align 4
  %750 = load i32, i32* %col_offset, align 4
  %751 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1250 = call %struct._expr* @_Py_GeneratorExp(%struct._expr* %747, %struct.asdl_seq* %748, i32 %749, i32 %750, %struct._arena* %751)
  %752 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call1250, %struct._expr** %752, align 8
  %753 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %754 = load %struct._expr*, %struct._expr** %753, align 8
  %cmp1251 = icmp eq %struct._expr* %754, null
  br i1 %cmp1251, label %if.then.1252, label %if.end.1253

if.then.1252:                                     ; preds = %if.end.1249
  br label %failed

if.end.1253:                                      ; preds = %if.end.1249
  store i32 0, i32* %retval
  br label %return

if.end.1254:                                      ; preds = %if.end.1145
  %755 = load %struct._object*, %struct._object** %obj.addr, align 8
  %756 = load %struct._typeobject*, %struct._typeobject** @Yield_type, align 8
  %757 = bitcast %struct._typeobject* %756 to %struct._object*
  %call1255 = call i32 @PyObject_IsInstance(%struct._object* %755, %struct._object* %757)
  store i32 %call1255, i32* %isinstance, align 4
  %758 = load i32, i32* %isinstance, align 4
  %cmp1256 = icmp eq i32 %758, -1
  br i1 %cmp1256, label %if.then.1257, label %if.end.1258

if.then.1257:                                     ; preds = %if.end.1254
  store i32 1, i32* %retval
  br label %return

if.end.1258:                                      ; preds = %if.end.1254
  %759 = load i32, i32* %isinstance, align 4
  %tobool1259 = icmp ne i32 %759, 0
  br i1 %tobool1259, label %if.then.1260, label %if.end.1301

if.then.1260:                                     ; preds = %if.end.1258
  %760 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1263 = call i32 @exists_not_none(%struct._object* %760, %struct._Py_Identifier* @PyId_value)
  %tobool1264 = icmp ne i32 %call1263, 0
  br i1 %tobool1264, label %if.then.1265, label %if.else.1295

if.then.1265:                                     ; preds = %if.then.1260
  %761 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1268 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %761, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call1268, %struct._object** %tmp, align 8
  %762 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1269 = icmp eq %struct._object* %762, null
  br i1 %cmp1269, label %if.then.1270, label %if.end.1271

if.then.1270:                                     ; preds = %if.then.1265
  br label %failed

if.end.1271:                                      ; preds = %if.then.1265
  %763 = load %struct._object*, %struct._object** %tmp, align 8
  %764 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1272 = call i32 @obj2ast_expr(%struct._object* %763, %struct._expr** %value1262, %struct._arena* %764)
  store i32 %call1272, i32* %res1267, align 4
  %765 = load i32, i32* %res1267, align 4
  %cmp1273 = icmp ne i32 %765, 0
  br i1 %cmp1273, label %if.then.1274, label %if.end.1275

if.then.1274:                                     ; preds = %if.end.1271
  br label %failed

if.end.1275:                                      ; preds = %if.end.1271
  br label %do.body.1276

do.body.1276:                                     ; preds = %if.end.1275
  %766 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %766, %struct._object** %_py_tmp1278, align 8
  %767 = load %struct._object*, %struct._object** %_py_tmp1278, align 8
  %cmp1279 = icmp ne %struct._object* %767, null
  br i1 %cmp1279, label %if.then.1280, label %if.end.1293

if.then.1280:                                     ; preds = %do.body.1276
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1281

do.body.1281:                                     ; preds = %if.then.1280
  %768 = load %struct._object*, %struct._object** %_py_tmp1278, align 8
  store %struct._object* %768, %struct._object** %_py_decref_tmp1283, align 8
  %769 = load %struct._object*, %struct._object** %_py_decref_tmp1283, align 8
  %ob_refcnt1284 = getelementptr inbounds %struct._object, %struct._object* %769, i32 0, i32 0
  %770 = load i64, i64* %ob_refcnt1284, align 8
  %dec1285 = add i64 %770, -1
  store i64 %dec1285, i64* %ob_refcnt1284, align 8
  %cmp1286 = icmp ne i64 %dec1285, 0
  br i1 %cmp1286, label %if.then.1287, label %if.else.1288

if.then.1287:                                     ; preds = %do.body.1281
  br label %if.end.1291

if.else.1288:                                     ; preds = %do.body.1281
  %771 = load %struct._object*, %struct._object** %_py_decref_tmp1283, align 8
  %ob_type1289 = getelementptr inbounds %struct._object, %struct._object* %771, i32 0, i32 1
  %772 = load %struct._typeobject*, %struct._typeobject** %ob_type1289, align 8
  %tp_dealloc1290 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %772, i32 0, i32 4
  %773 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1290, align 8
  %774 = load %struct._object*, %struct._object** %_py_decref_tmp1283, align 8
  call void %773(%struct._object* %774)
  br label %if.end.1291

if.end.1291:                                      ; preds = %if.else.1288, %if.then.1287
  br label %do.end.1292

do.end.1292:                                      ; preds = %if.end.1291
  br label %if.end.1293

if.end.1293:                                      ; preds = %do.end.1292, %do.body.1276
  br label %do.end.1294

do.end.1294:                                      ; preds = %if.end.1293
  br label %if.end.1296

if.else.1295:                                     ; preds = %if.then.1260
  store %struct._expr* null, %struct._expr** %value1262, align 8
  br label %if.end.1296

if.end.1296:                                      ; preds = %if.else.1295, %do.end.1294
  %775 = load %struct._expr*, %struct._expr** %value1262, align 8
  %776 = load i32, i32* %lineno, align 4
  %777 = load i32, i32* %col_offset, align 4
  %778 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1297 = call %struct._expr* @_Py_Yield(%struct._expr* %775, i32 %776, i32 %777, %struct._arena* %778)
  %779 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call1297, %struct._expr** %779, align 8
  %780 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %781 = load %struct._expr*, %struct._expr** %780, align 8
  %cmp1298 = icmp eq %struct._expr* %781, null
  br i1 %cmp1298, label %if.then.1299, label %if.end.1300

if.then.1299:                                     ; preds = %if.end.1296
  br label %failed

if.end.1300:                                      ; preds = %if.end.1296
  store i32 0, i32* %retval
  br label %return

if.end.1301:                                      ; preds = %if.end.1258
  %782 = load %struct._object*, %struct._object** %obj.addr, align 8
  %783 = load %struct._typeobject*, %struct._typeobject** @YieldFrom_type, align 8
  %784 = bitcast %struct._typeobject* %783 to %struct._object*
  %call1302 = call i32 @PyObject_IsInstance(%struct._object* %782, %struct._object* %784)
  store i32 %call1302, i32* %isinstance, align 4
  %785 = load i32, i32* %isinstance, align 4
  %cmp1303 = icmp eq i32 %785, -1
  br i1 %cmp1303, label %if.then.1304, label %if.end.1305

if.then.1304:                                     ; preds = %if.end.1301
  store i32 1, i32* %retval
  br label %return

if.end.1305:                                      ; preds = %if.end.1301
  %786 = load i32, i32* %isinstance, align 4
  %tobool1306 = icmp ne i32 %786, 0
  br i1 %tobool1306, label %if.then.1307, label %if.end.1348

if.then.1307:                                     ; preds = %if.end.1305
  %787 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1310 = call i32 @_PyObject_HasAttrId(%struct._object* %787, %struct._Py_Identifier* @PyId_value)
  %tobool1311 = icmp ne i32 %call1310, 0
  br i1 %tobool1311, label %if.then.1312, label %if.else.1342

if.then.1312:                                     ; preds = %if.then.1307
  %788 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1315 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %788, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call1315, %struct._object** %tmp, align 8
  %789 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1316 = icmp eq %struct._object* %789, null
  br i1 %cmp1316, label %if.then.1317, label %if.end.1318

if.then.1317:                                     ; preds = %if.then.1312
  br label %failed

if.end.1318:                                      ; preds = %if.then.1312
  %790 = load %struct._object*, %struct._object** %tmp, align 8
  %791 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1319 = call i32 @obj2ast_expr(%struct._object* %790, %struct._expr** %value1309, %struct._arena* %791)
  store i32 %call1319, i32* %res1314, align 4
  %792 = load i32, i32* %res1314, align 4
  %cmp1320 = icmp ne i32 %792, 0
  br i1 %cmp1320, label %if.then.1321, label %if.end.1322

if.then.1321:                                     ; preds = %if.end.1318
  br label %failed

if.end.1322:                                      ; preds = %if.end.1318
  br label %do.body.1323

do.body.1323:                                     ; preds = %if.end.1322
  %793 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %793, %struct._object** %_py_tmp1325, align 8
  %794 = load %struct._object*, %struct._object** %_py_tmp1325, align 8
  %cmp1326 = icmp ne %struct._object* %794, null
  br i1 %cmp1326, label %if.then.1327, label %if.end.1340

if.then.1327:                                     ; preds = %do.body.1323
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1328

do.body.1328:                                     ; preds = %if.then.1327
  %795 = load %struct._object*, %struct._object** %_py_tmp1325, align 8
  store %struct._object* %795, %struct._object** %_py_decref_tmp1330, align 8
  %796 = load %struct._object*, %struct._object** %_py_decref_tmp1330, align 8
  %ob_refcnt1331 = getelementptr inbounds %struct._object, %struct._object* %796, i32 0, i32 0
  %797 = load i64, i64* %ob_refcnt1331, align 8
  %dec1332 = add i64 %797, -1
  store i64 %dec1332, i64* %ob_refcnt1331, align 8
  %cmp1333 = icmp ne i64 %dec1332, 0
  br i1 %cmp1333, label %if.then.1334, label %if.else.1335

if.then.1334:                                     ; preds = %do.body.1328
  br label %if.end.1338

if.else.1335:                                     ; preds = %do.body.1328
  %798 = load %struct._object*, %struct._object** %_py_decref_tmp1330, align 8
  %ob_type1336 = getelementptr inbounds %struct._object, %struct._object* %798, i32 0, i32 1
  %799 = load %struct._typeobject*, %struct._typeobject** %ob_type1336, align 8
  %tp_dealloc1337 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %799, i32 0, i32 4
  %800 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1337, align 8
  %801 = load %struct._object*, %struct._object** %_py_decref_tmp1330, align 8
  call void %800(%struct._object* %801)
  br label %if.end.1338

if.end.1338:                                      ; preds = %if.else.1335, %if.then.1334
  br label %do.end.1339

do.end.1339:                                      ; preds = %if.end.1338
  br label %if.end.1340

if.end.1340:                                      ; preds = %do.end.1339, %do.body.1323
  br label %do.end.1341

do.end.1341:                                      ; preds = %if.end.1340
  br label %if.end.1343

if.else.1342:                                     ; preds = %if.then.1307
  %802 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %802, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.369, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1343:                                      ; preds = %do.end.1341
  %803 = load %struct._expr*, %struct._expr** %value1309, align 8
  %804 = load i32, i32* %lineno, align 4
  %805 = load i32, i32* %col_offset, align 4
  %806 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1344 = call %struct._expr* @_Py_YieldFrom(%struct._expr* %803, i32 %804, i32 %805, %struct._arena* %806)
  %807 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call1344, %struct._expr** %807, align 8
  %808 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %809 = load %struct._expr*, %struct._expr** %808, align 8
  %cmp1345 = icmp eq %struct._expr* %809, null
  br i1 %cmp1345, label %if.then.1346, label %if.end.1347

if.then.1346:                                     ; preds = %if.end.1343
  br label %failed

if.end.1347:                                      ; preds = %if.end.1343
  store i32 0, i32* %retval
  br label %return

if.end.1348:                                      ; preds = %if.end.1305
  %810 = load %struct._object*, %struct._object** %obj.addr, align 8
  %811 = load %struct._typeobject*, %struct._typeobject** @Compare_type, align 8
  %812 = bitcast %struct._typeobject* %811 to %struct._object*
  %call1349 = call i32 @PyObject_IsInstance(%struct._object* %810, %struct._object* %812)
  store i32 %call1349, i32* %isinstance, align 4
  %813 = load i32, i32* %isinstance, align 4
  %cmp1350 = icmp eq i32 %813, -1
  br i1 %cmp1350, label %if.then.1351, label %if.end.1352

if.then.1351:                                     ; preds = %if.end.1348
  store i32 1, i32* %retval
  br label %return

if.end.1352:                                      ; preds = %if.end.1348
  %814 = load i32, i32* %isinstance, align 4
  %tobool1353 = icmp ne i32 %814, 0
  br i1 %tobool1353, label %if.then.1354, label %if.end.1525

if.then.1354:                                     ; preds = %if.end.1352
  %815 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1359 = call i32 @_PyObject_HasAttrId(%struct._object* %815, %struct._Py_Identifier* @PyId_left)
  %tobool1360 = icmp ne i32 %call1359, 0
  br i1 %tobool1360, label %if.then.1361, label %if.else.1391

if.then.1361:                                     ; preds = %if.then.1354
  %816 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1364 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %816, %struct._Py_Identifier* @PyId_left)
  store %struct._object* %call1364, %struct._object** %tmp, align 8
  %817 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1365 = icmp eq %struct._object* %817, null
  br i1 %cmp1365, label %if.then.1366, label %if.end.1367

if.then.1366:                                     ; preds = %if.then.1361
  br label %failed

if.end.1367:                                      ; preds = %if.then.1361
  %818 = load %struct._object*, %struct._object** %tmp, align 8
  %819 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1368 = call i32 @obj2ast_expr(%struct._object* %818, %struct._expr** %left1356, %struct._arena* %819)
  store i32 %call1368, i32* %res1363, align 4
  %820 = load i32, i32* %res1363, align 4
  %cmp1369 = icmp ne i32 %820, 0
  br i1 %cmp1369, label %if.then.1370, label %if.end.1371

if.then.1370:                                     ; preds = %if.end.1367
  br label %failed

if.end.1371:                                      ; preds = %if.end.1367
  br label %do.body.1372

do.body.1372:                                     ; preds = %if.end.1371
  %821 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %821, %struct._object** %_py_tmp1374, align 8
  %822 = load %struct._object*, %struct._object** %_py_tmp1374, align 8
  %cmp1375 = icmp ne %struct._object* %822, null
  br i1 %cmp1375, label %if.then.1376, label %if.end.1389

if.then.1376:                                     ; preds = %do.body.1372
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1377

do.body.1377:                                     ; preds = %if.then.1376
  %823 = load %struct._object*, %struct._object** %_py_tmp1374, align 8
  store %struct._object* %823, %struct._object** %_py_decref_tmp1379, align 8
  %824 = load %struct._object*, %struct._object** %_py_decref_tmp1379, align 8
  %ob_refcnt1380 = getelementptr inbounds %struct._object, %struct._object* %824, i32 0, i32 0
  %825 = load i64, i64* %ob_refcnt1380, align 8
  %dec1381 = add i64 %825, -1
  store i64 %dec1381, i64* %ob_refcnt1380, align 8
  %cmp1382 = icmp ne i64 %dec1381, 0
  br i1 %cmp1382, label %if.then.1383, label %if.else.1384

if.then.1383:                                     ; preds = %do.body.1377
  br label %if.end.1387

if.else.1384:                                     ; preds = %do.body.1377
  %826 = load %struct._object*, %struct._object** %_py_decref_tmp1379, align 8
  %ob_type1385 = getelementptr inbounds %struct._object, %struct._object* %826, i32 0, i32 1
  %827 = load %struct._typeobject*, %struct._typeobject** %ob_type1385, align 8
  %tp_dealloc1386 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %827, i32 0, i32 4
  %828 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1386, align 8
  %829 = load %struct._object*, %struct._object** %_py_decref_tmp1379, align 8
  call void %828(%struct._object* %829)
  br label %if.end.1387

if.end.1387:                                      ; preds = %if.else.1384, %if.then.1383
  br label %do.end.1388

do.end.1388:                                      ; preds = %if.end.1387
  br label %if.end.1389

if.end.1389:                                      ; preds = %do.end.1388, %do.body.1372
  br label %do.end.1390

do.end.1390:                                      ; preds = %if.end.1389
  br label %if.end.1392

if.else.1391:                                     ; preds = %if.then.1354
  %830 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %830, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.370, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1392:                                      ; preds = %do.end.1390
  %831 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1393 = call i32 @_PyObject_HasAttrId(%struct._object* %831, %struct._Py_Identifier* @PyId_ops)
  %tobool1394 = icmp ne i32 %call1393, 0
  br i1 %tobool1394, label %if.then.1395, label %if.else.1455

if.then.1395:                                     ; preds = %if.end.1392
  %832 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1402 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %832, %struct._Py_Identifier* @PyId_ops)
  store %struct._object* %call1402, %struct._object** %tmp, align 8
  %833 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1403 = icmp eq %struct._object* %833, null
  br i1 %cmp1403, label %if.then.1404, label %if.end.1405

if.then.1404:                                     ; preds = %if.then.1395
  br label %failed

if.end.1405:                                      ; preds = %if.then.1395
  %834 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1406 = getelementptr inbounds %struct._object, %struct._object* %834, i32 0, i32 1
  %835 = load %struct._typeobject*, %struct._typeobject** %ob_type1406, align 8
  %tp_flags1407 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %835, i32 0, i32 19
  %836 = load i64, i64* %tp_flags1407, align 8
  %and1408 = and i64 %836, 33554432
  %cmp1409 = icmp ne i64 %and1408, 0
  br i1 %cmp1409, label %if.end.1414, label %if.then.1410

if.then.1410:                                     ; preds = %if.end.1405
  %837 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %838 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1411 = getelementptr inbounds %struct._object, %struct._object* %838, i32 0, i32 1
  %839 = load %struct._typeobject*, %struct._typeobject** %ob_type1411, align 8
  %tp_name1412 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %839, i32 0, i32 1
  %840 = load i8*, i8** %tp_name1412, align 8
  %call1413 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %837, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.371, i32 0, i32 0), i8* %840)
  br label %failed

if.end.1414:                                      ; preds = %if.end.1405
  %841 = load %struct._object*, %struct._object** %tmp, align 8
  %842 = bitcast %struct._object* %841 to %struct.PyVarObject*
  %ob_size1415 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %842, i32 0, i32 1
  %843 = load i64, i64* %ob_size1415, align 8
  store i64 %843, i64* %len1399, align 8
  %844 = load i64, i64* %len1399, align 8
  %845 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1416 = call %struct.asdl_int_seq* @_Py_asdl_int_seq_new(i64 %844, %struct._arena* %845)
  store %struct.asdl_int_seq* %call1416, %struct.asdl_int_seq** %ops, align 8
  %846 = load %struct.asdl_int_seq*, %struct.asdl_int_seq** %ops, align 8
  %cmp1417 = icmp eq %struct.asdl_int_seq* %846, null
  br i1 %cmp1417, label %if.then.1418, label %if.end.1419

if.then.1418:                                     ; preds = %if.end.1414
  br label %failed

if.end.1419:                                      ; preds = %if.end.1414
  store i64 0, i64* %i1401, align 8
  br label %for.cond.1420

for.cond.1420:                                    ; preds = %for.inc.1433, %if.end.1419
  %847 = load i64, i64* %i1401, align 8
  %848 = load i64, i64* %len1399, align 8
  %cmp1421 = icmp slt i64 %847, %848
  br i1 %cmp1421, label %for.body.1422, label %for.end.1435

for.body.1422:                                    ; preds = %for.cond.1420
  %849 = load i64, i64* %i1401, align 8
  %850 = load %struct._object*, %struct._object** %tmp, align 8
  %851 = bitcast %struct._object* %850 to %struct.PyListObject*
  %ob_item1425 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %851, i32 0, i32 1
  %852 = load %struct._object**, %struct._object*** %ob_item1425, align 8
  %arrayidx1426 = getelementptr %struct._object*, %struct._object** %852, i64 %849
  %853 = load %struct._object*, %struct._object** %arrayidx1426, align 8
  %854 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1427 = call i32 @obj2ast_cmpop(%struct._object* %853, i32* %value1424, %struct._arena* %854)
  store i32 %call1427, i32* %res1397, align 4
  %855 = load i32, i32* %res1397, align 4
  %cmp1428 = icmp ne i32 %855, 0
  br i1 %cmp1428, label %if.then.1429, label %if.end.1430

if.then.1429:                                     ; preds = %for.body.1422
  br label %failed

if.end.1430:                                      ; preds = %for.body.1422
  %856 = load i32, i32* %value1424, align 4
  %857 = load i64, i64* %i1401, align 8
  %858 = load %struct.asdl_int_seq*, %struct.asdl_int_seq** %ops, align 8
  %elements1431 = getelementptr inbounds %struct.asdl_int_seq, %struct.asdl_int_seq* %858, i32 0, i32 1
  %arrayidx1432 = getelementptr [1 x i32], [1 x i32]* %elements1431, i32 0, i64 %857
  store i32 %856, i32* %arrayidx1432, align 4
  br label %for.inc.1433

for.inc.1433:                                     ; preds = %if.end.1430
  %859 = load i64, i64* %i1401, align 8
  %inc1434 = add i64 %859, 1
  store i64 %inc1434, i64* %i1401, align 8
  br label %for.cond.1420

for.end.1435:                                     ; preds = %for.cond.1420
  br label %do.body.1436

do.body.1436:                                     ; preds = %for.end.1435
  %860 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %860, %struct._object** %_py_tmp1438, align 8
  %861 = load %struct._object*, %struct._object** %_py_tmp1438, align 8
  %cmp1439 = icmp ne %struct._object* %861, null
  br i1 %cmp1439, label %if.then.1440, label %if.end.1453

if.then.1440:                                     ; preds = %do.body.1436
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1441

do.body.1441:                                     ; preds = %if.then.1440
  %862 = load %struct._object*, %struct._object** %_py_tmp1438, align 8
  store %struct._object* %862, %struct._object** %_py_decref_tmp1443, align 8
  %863 = load %struct._object*, %struct._object** %_py_decref_tmp1443, align 8
  %ob_refcnt1444 = getelementptr inbounds %struct._object, %struct._object* %863, i32 0, i32 0
  %864 = load i64, i64* %ob_refcnt1444, align 8
  %dec1445 = add i64 %864, -1
  store i64 %dec1445, i64* %ob_refcnt1444, align 8
  %cmp1446 = icmp ne i64 %dec1445, 0
  br i1 %cmp1446, label %if.then.1447, label %if.else.1448

if.then.1447:                                     ; preds = %do.body.1441
  br label %if.end.1451

if.else.1448:                                     ; preds = %do.body.1441
  %865 = load %struct._object*, %struct._object** %_py_decref_tmp1443, align 8
  %ob_type1449 = getelementptr inbounds %struct._object, %struct._object* %865, i32 0, i32 1
  %866 = load %struct._typeobject*, %struct._typeobject** %ob_type1449, align 8
  %tp_dealloc1450 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %866, i32 0, i32 4
  %867 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1450, align 8
  %868 = load %struct._object*, %struct._object** %_py_decref_tmp1443, align 8
  call void %867(%struct._object* %868)
  br label %if.end.1451

if.end.1451:                                      ; preds = %if.else.1448, %if.then.1447
  br label %do.end.1452

do.end.1452:                                      ; preds = %if.end.1451
  br label %if.end.1453

if.end.1453:                                      ; preds = %do.end.1452, %do.body.1436
  br label %do.end.1454

do.end.1454:                                      ; preds = %if.end.1453
  br label %if.end.1456

if.else.1455:                                     ; preds = %if.end.1392
  %869 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %869, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.372, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1456:                                      ; preds = %do.end.1454
  %870 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1457 = call i32 @_PyObject_HasAttrId(%struct._object* %870, %struct._Py_Identifier* @PyId_comparators)
  %tobool1458 = icmp ne i32 %call1457, 0
  br i1 %tobool1458, label %if.then.1459, label %if.else.1519

if.then.1459:                                     ; preds = %if.end.1456
  %871 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1466 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %871, %struct._Py_Identifier* @PyId_comparators)
  store %struct._object* %call1466, %struct._object** %tmp, align 8
  %872 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1467 = icmp eq %struct._object* %872, null
  br i1 %cmp1467, label %if.then.1468, label %if.end.1469

if.then.1468:                                     ; preds = %if.then.1459
  br label %failed

if.end.1469:                                      ; preds = %if.then.1459
  %873 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1470 = getelementptr inbounds %struct._object, %struct._object* %873, i32 0, i32 1
  %874 = load %struct._typeobject*, %struct._typeobject** %ob_type1470, align 8
  %tp_flags1471 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %874, i32 0, i32 19
  %875 = load i64, i64* %tp_flags1471, align 8
  %and1472 = and i64 %875, 33554432
  %cmp1473 = icmp ne i64 %and1472, 0
  br i1 %cmp1473, label %if.end.1478, label %if.then.1474

if.then.1474:                                     ; preds = %if.end.1469
  %876 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %877 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1475 = getelementptr inbounds %struct._object, %struct._object* %877, i32 0, i32 1
  %878 = load %struct._typeobject*, %struct._typeobject** %ob_type1475, align 8
  %tp_name1476 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %878, i32 0, i32 1
  %879 = load i8*, i8** %tp_name1476, align 8
  %call1477 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %876, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.373, i32 0, i32 0), i8* %879)
  br label %failed

if.end.1478:                                      ; preds = %if.end.1469
  %880 = load %struct._object*, %struct._object** %tmp, align 8
  %881 = bitcast %struct._object* %880 to %struct.PyVarObject*
  %ob_size1479 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %881, i32 0, i32 1
  %882 = load i64, i64* %ob_size1479, align 8
  store i64 %882, i64* %len1463, align 8
  %883 = load i64, i64* %len1463, align 8
  %884 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1480 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %883, %struct._arena* %884)
  store %struct.asdl_seq* %call1480, %struct.asdl_seq** %comparators, align 8
  %885 = load %struct.asdl_seq*, %struct.asdl_seq** %comparators, align 8
  %cmp1481 = icmp eq %struct.asdl_seq* %885, null
  br i1 %cmp1481, label %if.then.1482, label %if.end.1483

if.then.1482:                                     ; preds = %if.end.1478
  br label %failed

if.end.1483:                                      ; preds = %if.end.1478
  store i64 0, i64* %i1465, align 8
  br label %for.cond.1484

for.cond.1484:                                    ; preds = %for.inc.1497, %if.end.1483
  %886 = load i64, i64* %i1465, align 8
  %887 = load i64, i64* %len1463, align 8
  %cmp1485 = icmp slt i64 %886, %887
  br i1 %cmp1485, label %for.body.1486, label %for.end.1499

for.body.1486:                                    ; preds = %for.cond.1484
  %888 = load i64, i64* %i1465, align 8
  %889 = load %struct._object*, %struct._object** %tmp, align 8
  %890 = bitcast %struct._object* %889 to %struct.PyListObject*
  %ob_item1489 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %890, i32 0, i32 1
  %891 = load %struct._object**, %struct._object*** %ob_item1489, align 8
  %arrayidx1490 = getelementptr %struct._object*, %struct._object** %891, i64 %888
  %892 = load %struct._object*, %struct._object** %arrayidx1490, align 8
  %893 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1491 = call i32 @obj2ast_expr(%struct._object* %892, %struct._expr** %value1488, %struct._arena* %893)
  store i32 %call1491, i32* %res1461, align 4
  %894 = load i32, i32* %res1461, align 4
  %cmp1492 = icmp ne i32 %894, 0
  br i1 %cmp1492, label %if.then.1493, label %if.end.1494

if.then.1493:                                     ; preds = %for.body.1486
  br label %failed

if.end.1494:                                      ; preds = %for.body.1486
  %895 = load %struct._expr*, %struct._expr** %value1488, align 8
  %896 = bitcast %struct._expr* %895 to i8*
  %897 = load i64, i64* %i1465, align 8
  %898 = load %struct.asdl_seq*, %struct.asdl_seq** %comparators, align 8
  %elements1495 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %898, i32 0, i32 1
  %arrayidx1496 = getelementptr [1 x i8*], [1 x i8*]* %elements1495, i32 0, i64 %897
  store i8* %896, i8** %arrayidx1496, align 8
  br label %for.inc.1497

for.inc.1497:                                     ; preds = %if.end.1494
  %899 = load i64, i64* %i1465, align 8
  %inc1498 = add i64 %899, 1
  store i64 %inc1498, i64* %i1465, align 8
  br label %for.cond.1484

for.end.1499:                                     ; preds = %for.cond.1484
  br label %do.body.1500

do.body.1500:                                     ; preds = %for.end.1499
  %900 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %900, %struct._object** %_py_tmp1502, align 8
  %901 = load %struct._object*, %struct._object** %_py_tmp1502, align 8
  %cmp1503 = icmp ne %struct._object* %901, null
  br i1 %cmp1503, label %if.then.1504, label %if.end.1517

if.then.1504:                                     ; preds = %do.body.1500
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1505

do.body.1505:                                     ; preds = %if.then.1504
  %902 = load %struct._object*, %struct._object** %_py_tmp1502, align 8
  store %struct._object* %902, %struct._object** %_py_decref_tmp1507, align 8
  %903 = load %struct._object*, %struct._object** %_py_decref_tmp1507, align 8
  %ob_refcnt1508 = getelementptr inbounds %struct._object, %struct._object* %903, i32 0, i32 0
  %904 = load i64, i64* %ob_refcnt1508, align 8
  %dec1509 = add i64 %904, -1
  store i64 %dec1509, i64* %ob_refcnt1508, align 8
  %cmp1510 = icmp ne i64 %dec1509, 0
  br i1 %cmp1510, label %if.then.1511, label %if.else.1512

if.then.1511:                                     ; preds = %do.body.1505
  br label %if.end.1515

if.else.1512:                                     ; preds = %do.body.1505
  %905 = load %struct._object*, %struct._object** %_py_decref_tmp1507, align 8
  %ob_type1513 = getelementptr inbounds %struct._object, %struct._object* %905, i32 0, i32 1
  %906 = load %struct._typeobject*, %struct._typeobject** %ob_type1513, align 8
  %tp_dealloc1514 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %906, i32 0, i32 4
  %907 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1514, align 8
  %908 = load %struct._object*, %struct._object** %_py_decref_tmp1507, align 8
  call void %907(%struct._object* %908)
  br label %if.end.1515

if.end.1515:                                      ; preds = %if.else.1512, %if.then.1511
  br label %do.end.1516

do.end.1516:                                      ; preds = %if.end.1515
  br label %if.end.1517

if.end.1517:                                      ; preds = %do.end.1516, %do.body.1500
  br label %do.end.1518

do.end.1518:                                      ; preds = %if.end.1517
  br label %if.end.1520

if.else.1519:                                     ; preds = %if.end.1456
  %909 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %909, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.374, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1520:                                      ; preds = %do.end.1518
  %910 = load %struct._expr*, %struct._expr** %left1356, align 8
  %911 = load %struct.asdl_int_seq*, %struct.asdl_int_seq** %ops, align 8
  %912 = load %struct.asdl_seq*, %struct.asdl_seq** %comparators, align 8
  %913 = load i32, i32* %lineno, align 4
  %914 = load i32, i32* %col_offset, align 4
  %915 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1521 = call %struct._expr* @_Py_Compare(%struct._expr* %910, %struct.asdl_int_seq* %911, %struct.asdl_seq* %912, i32 %913, i32 %914, %struct._arena* %915)
  %916 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call1521, %struct._expr** %916, align 8
  %917 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %918 = load %struct._expr*, %struct._expr** %917, align 8
  %cmp1522 = icmp eq %struct._expr* %918, null
  br i1 %cmp1522, label %if.then.1523, label %if.end.1524

if.then.1523:                                     ; preds = %if.end.1520
  br label %failed

if.end.1524:                                      ; preds = %if.end.1520
  store i32 0, i32* %retval
  br label %return

if.end.1525:                                      ; preds = %if.end.1352
  %919 = load %struct._object*, %struct._object** %obj.addr, align 8
  %920 = load %struct._typeobject*, %struct._typeobject** @Call_type, align 8
  %921 = bitcast %struct._typeobject* %920 to %struct._object*
  %call1526 = call i32 @PyObject_IsInstance(%struct._object* %919, %struct._object* %921)
  store i32 %call1526, i32* %isinstance, align 4
  %922 = load i32, i32* %isinstance, align 4
  %cmp1527 = icmp eq i32 %922, -1
  br i1 %cmp1527, label %if.then.1528, label %if.end.1529

if.then.1528:                                     ; preds = %if.end.1525
  store i32 1, i32* %retval
  br label %return

if.end.1529:                                      ; preds = %if.end.1525
  %923 = load i32, i32* %isinstance, align 4
  %tobool1530 = icmp ne i32 %923, 0
  br i1 %tobool1530, label %if.then.1531, label %if.end.1772

if.then.1531:                                     ; preds = %if.end.1529
  %924 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1538 = call i32 @_PyObject_HasAttrId(%struct._object* %924, %struct._Py_Identifier* @PyId_func)
  %tobool1539 = icmp ne i32 %call1538, 0
  br i1 %tobool1539, label %if.then.1540, label %if.else.1570

if.then.1540:                                     ; preds = %if.then.1531
  %925 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1543 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %925, %struct._Py_Identifier* @PyId_func)
  store %struct._object* %call1543, %struct._object** %tmp, align 8
  %926 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1544 = icmp eq %struct._object* %926, null
  br i1 %cmp1544, label %if.then.1545, label %if.end.1546

if.then.1545:                                     ; preds = %if.then.1540
  br label %failed

if.end.1546:                                      ; preds = %if.then.1540
  %927 = load %struct._object*, %struct._object** %tmp, align 8
  %928 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1547 = call i32 @obj2ast_expr(%struct._object* %927, %struct._expr** %func, %struct._arena* %928)
  store i32 %call1547, i32* %res1542, align 4
  %929 = load i32, i32* %res1542, align 4
  %cmp1548 = icmp ne i32 %929, 0
  br i1 %cmp1548, label %if.then.1549, label %if.end.1550

if.then.1549:                                     ; preds = %if.end.1546
  br label %failed

if.end.1550:                                      ; preds = %if.end.1546
  br label %do.body.1551

do.body.1551:                                     ; preds = %if.end.1550
  %930 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %930, %struct._object** %_py_tmp1553, align 8
  %931 = load %struct._object*, %struct._object** %_py_tmp1553, align 8
  %cmp1554 = icmp ne %struct._object* %931, null
  br i1 %cmp1554, label %if.then.1555, label %if.end.1568

if.then.1555:                                     ; preds = %do.body.1551
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1556

do.body.1556:                                     ; preds = %if.then.1555
  %932 = load %struct._object*, %struct._object** %_py_tmp1553, align 8
  store %struct._object* %932, %struct._object** %_py_decref_tmp1558, align 8
  %933 = load %struct._object*, %struct._object** %_py_decref_tmp1558, align 8
  %ob_refcnt1559 = getelementptr inbounds %struct._object, %struct._object* %933, i32 0, i32 0
  %934 = load i64, i64* %ob_refcnt1559, align 8
  %dec1560 = add i64 %934, -1
  store i64 %dec1560, i64* %ob_refcnt1559, align 8
  %cmp1561 = icmp ne i64 %dec1560, 0
  br i1 %cmp1561, label %if.then.1562, label %if.else.1563

if.then.1562:                                     ; preds = %do.body.1556
  br label %if.end.1566

if.else.1563:                                     ; preds = %do.body.1556
  %935 = load %struct._object*, %struct._object** %_py_decref_tmp1558, align 8
  %ob_type1564 = getelementptr inbounds %struct._object, %struct._object* %935, i32 0, i32 1
  %936 = load %struct._typeobject*, %struct._typeobject** %ob_type1564, align 8
  %tp_dealloc1565 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %936, i32 0, i32 4
  %937 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1565, align 8
  %938 = load %struct._object*, %struct._object** %_py_decref_tmp1558, align 8
  call void %937(%struct._object* %938)
  br label %if.end.1566

if.end.1566:                                      ; preds = %if.else.1563, %if.then.1562
  br label %do.end.1567

do.end.1567:                                      ; preds = %if.end.1566
  br label %if.end.1568

if.end.1568:                                      ; preds = %do.end.1567, %do.body.1551
  br label %do.end.1569

do.end.1569:                                      ; preds = %if.end.1568
  br label %if.end.1571

if.else.1570:                                     ; preds = %if.then.1531
  %939 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %939, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.375, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1571:                                      ; preds = %do.end.1569
  %940 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1572 = call i32 @_PyObject_HasAttrId(%struct._object* %940, %struct._Py_Identifier* @PyId_args)
  %tobool1573 = icmp ne i32 %call1572, 0
  br i1 %tobool1573, label %if.then.1574, label %if.else.1634

if.then.1574:                                     ; preds = %if.end.1571
  %941 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1581 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %941, %struct._Py_Identifier* @PyId_args)
  store %struct._object* %call1581, %struct._object** %tmp, align 8
  %942 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1582 = icmp eq %struct._object* %942, null
  br i1 %cmp1582, label %if.then.1583, label %if.end.1584

if.then.1583:                                     ; preds = %if.then.1574
  br label %failed

if.end.1584:                                      ; preds = %if.then.1574
  %943 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1585 = getelementptr inbounds %struct._object, %struct._object* %943, i32 0, i32 1
  %944 = load %struct._typeobject*, %struct._typeobject** %ob_type1585, align 8
  %tp_flags1586 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %944, i32 0, i32 19
  %945 = load i64, i64* %tp_flags1586, align 8
  %and1587 = and i64 %945, 33554432
  %cmp1588 = icmp ne i64 %and1587, 0
  br i1 %cmp1588, label %if.end.1593, label %if.then.1589

if.then.1589:                                     ; preds = %if.end.1584
  %946 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %947 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1590 = getelementptr inbounds %struct._object, %struct._object* %947, i32 0, i32 1
  %948 = load %struct._typeobject*, %struct._typeobject** %ob_type1590, align 8
  %tp_name1591 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %948, i32 0, i32 1
  %949 = load i8*, i8** %tp_name1591, align 8
  %call1592 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %946, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.376, i32 0, i32 0), i8* %949)
  br label %failed

if.end.1593:                                      ; preds = %if.end.1584
  %950 = load %struct._object*, %struct._object** %tmp, align 8
  %951 = bitcast %struct._object* %950 to %struct.PyVarObject*
  %ob_size1594 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %951, i32 0, i32 1
  %952 = load i64, i64* %ob_size1594, align 8
  store i64 %952, i64* %len1578, align 8
  %953 = load i64, i64* %len1578, align 8
  %954 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1595 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %953, %struct._arena* %954)
  store %struct.asdl_seq* %call1595, %struct.asdl_seq** %args1534, align 8
  %955 = load %struct.asdl_seq*, %struct.asdl_seq** %args1534, align 8
  %cmp1596 = icmp eq %struct.asdl_seq* %955, null
  br i1 %cmp1596, label %if.then.1597, label %if.end.1598

if.then.1597:                                     ; preds = %if.end.1593
  br label %failed

if.end.1598:                                      ; preds = %if.end.1593
  store i64 0, i64* %i1580, align 8
  br label %for.cond.1599

for.cond.1599:                                    ; preds = %for.inc.1612, %if.end.1598
  %956 = load i64, i64* %i1580, align 8
  %957 = load i64, i64* %len1578, align 8
  %cmp1600 = icmp slt i64 %956, %957
  br i1 %cmp1600, label %for.body.1601, label %for.end.1614

for.body.1601:                                    ; preds = %for.cond.1599
  %958 = load i64, i64* %i1580, align 8
  %959 = load %struct._object*, %struct._object** %tmp, align 8
  %960 = bitcast %struct._object* %959 to %struct.PyListObject*
  %ob_item1604 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %960, i32 0, i32 1
  %961 = load %struct._object**, %struct._object*** %ob_item1604, align 8
  %arrayidx1605 = getelementptr %struct._object*, %struct._object** %961, i64 %958
  %962 = load %struct._object*, %struct._object** %arrayidx1605, align 8
  %963 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1606 = call i32 @obj2ast_expr(%struct._object* %962, %struct._expr** %value1603, %struct._arena* %963)
  store i32 %call1606, i32* %res1576, align 4
  %964 = load i32, i32* %res1576, align 4
  %cmp1607 = icmp ne i32 %964, 0
  br i1 %cmp1607, label %if.then.1608, label %if.end.1609

if.then.1608:                                     ; preds = %for.body.1601
  br label %failed

if.end.1609:                                      ; preds = %for.body.1601
  %965 = load %struct._expr*, %struct._expr** %value1603, align 8
  %966 = bitcast %struct._expr* %965 to i8*
  %967 = load i64, i64* %i1580, align 8
  %968 = load %struct.asdl_seq*, %struct.asdl_seq** %args1534, align 8
  %elements1610 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %968, i32 0, i32 1
  %arrayidx1611 = getelementptr [1 x i8*], [1 x i8*]* %elements1610, i32 0, i64 %967
  store i8* %966, i8** %arrayidx1611, align 8
  br label %for.inc.1612

for.inc.1612:                                     ; preds = %if.end.1609
  %969 = load i64, i64* %i1580, align 8
  %inc1613 = add i64 %969, 1
  store i64 %inc1613, i64* %i1580, align 8
  br label %for.cond.1599

for.end.1614:                                     ; preds = %for.cond.1599
  br label %do.body.1615

do.body.1615:                                     ; preds = %for.end.1614
  %970 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %970, %struct._object** %_py_tmp1617, align 8
  %971 = load %struct._object*, %struct._object** %_py_tmp1617, align 8
  %cmp1618 = icmp ne %struct._object* %971, null
  br i1 %cmp1618, label %if.then.1619, label %if.end.1632

if.then.1619:                                     ; preds = %do.body.1615
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1620

do.body.1620:                                     ; preds = %if.then.1619
  %972 = load %struct._object*, %struct._object** %_py_tmp1617, align 8
  store %struct._object* %972, %struct._object** %_py_decref_tmp1622, align 8
  %973 = load %struct._object*, %struct._object** %_py_decref_tmp1622, align 8
  %ob_refcnt1623 = getelementptr inbounds %struct._object, %struct._object* %973, i32 0, i32 0
  %974 = load i64, i64* %ob_refcnt1623, align 8
  %dec1624 = add i64 %974, -1
  store i64 %dec1624, i64* %ob_refcnt1623, align 8
  %cmp1625 = icmp ne i64 %dec1624, 0
  br i1 %cmp1625, label %if.then.1626, label %if.else.1627

if.then.1626:                                     ; preds = %do.body.1620
  br label %if.end.1630

if.else.1627:                                     ; preds = %do.body.1620
  %975 = load %struct._object*, %struct._object** %_py_decref_tmp1622, align 8
  %ob_type1628 = getelementptr inbounds %struct._object, %struct._object* %975, i32 0, i32 1
  %976 = load %struct._typeobject*, %struct._typeobject** %ob_type1628, align 8
  %tp_dealloc1629 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %976, i32 0, i32 4
  %977 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1629, align 8
  %978 = load %struct._object*, %struct._object** %_py_decref_tmp1622, align 8
  call void %977(%struct._object* %978)
  br label %if.end.1630

if.end.1630:                                      ; preds = %if.else.1627, %if.then.1626
  br label %do.end.1631

do.end.1631:                                      ; preds = %if.end.1630
  br label %if.end.1632

if.end.1632:                                      ; preds = %do.end.1631, %do.body.1615
  br label %do.end.1633

do.end.1633:                                      ; preds = %if.end.1632
  br label %if.end.1635

if.else.1634:                                     ; preds = %if.end.1571
  %979 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %979, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.377, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1635:                                      ; preds = %do.end.1633
  %980 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1636 = call i32 @_PyObject_HasAttrId(%struct._object* %980, %struct._Py_Identifier* @PyId_keywords)
  %tobool1637 = icmp ne i32 %call1636, 0
  br i1 %tobool1637, label %if.then.1638, label %if.else.1698

if.then.1638:                                     ; preds = %if.end.1635
  %981 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1645 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %981, %struct._Py_Identifier* @PyId_keywords)
  store %struct._object* %call1645, %struct._object** %tmp, align 8
  %982 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1646 = icmp eq %struct._object* %982, null
  br i1 %cmp1646, label %if.then.1647, label %if.end.1648

if.then.1647:                                     ; preds = %if.then.1638
  br label %failed

if.end.1648:                                      ; preds = %if.then.1638
  %983 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1649 = getelementptr inbounds %struct._object, %struct._object* %983, i32 0, i32 1
  %984 = load %struct._typeobject*, %struct._typeobject** %ob_type1649, align 8
  %tp_flags1650 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %984, i32 0, i32 19
  %985 = load i64, i64* %tp_flags1650, align 8
  %and1651 = and i64 %985, 33554432
  %cmp1652 = icmp ne i64 %and1651, 0
  br i1 %cmp1652, label %if.end.1657, label %if.then.1653

if.then.1653:                                     ; preds = %if.end.1648
  %986 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %987 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type1654 = getelementptr inbounds %struct._object, %struct._object* %987, i32 0, i32 1
  %988 = load %struct._typeobject*, %struct._typeobject** %ob_type1654, align 8
  %tp_name1655 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %988, i32 0, i32 1
  %989 = load i8*, i8** %tp_name1655, align 8
  %call1656 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %986, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.378, i32 0, i32 0), i8* %989)
  br label %failed

if.end.1657:                                      ; preds = %if.end.1648
  %990 = load %struct._object*, %struct._object** %tmp, align 8
  %991 = bitcast %struct._object* %990 to %struct.PyVarObject*
  %ob_size1658 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %991, i32 0, i32 1
  %992 = load i64, i64* %ob_size1658, align 8
  store i64 %992, i64* %len1642, align 8
  %993 = load i64, i64* %len1642, align 8
  %994 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1659 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %993, %struct._arena* %994)
  store %struct.asdl_seq* %call1659, %struct.asdl_seq** %keywords, align 8
  %995 = load %struct.asdl_seq*, %struct.asdl_seq** %keywords, align 8
  %cmp1660 = icmp eq %struct.asdl_seq* %995, null
  br i1 %cmp1660, label %if.then.1661, label %if.end.1662

if.then.1661:                                     ; preds = %if.end.1657
  br label %failed

if.end.1662:                                      ; preds = %if.end.1657
  store i64 0, i64* %i1644, align 8
  br label %for.cond.1663

for.cond.1663:                                    ; preds = %for.inc.1676, %if.end.1662
  %996 = load i64, i64* %i1644, align 8
  %997 = load i64, i64* %len1642, align 8
  %cmp1664 = icmp slt i64 %996, %997
  br i1 %cmp1664, label %for.body.1665, label %for.end.1678

for.body.1665:                                    ; preds = %for.cond.1663
  %998 = load i64, i64* %i1644, align 8
  %999 = load %struct._object*, %struct._object** %tmp, align 8
  %1000 = bitcast %struct._object* %999 to %struct.PyListObject*
  %ob_item1668 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %1000, i32 0, i32 1
  %1001 = load %struct._object**, %struct._object*** %ob_item1668, align 8
  %arrayidx1669 = getelementptr %struct._object*, %struct._object** %1001, i64 %998
  %1002 = load %struct._object*, %struct._object** %arrayidx1669, align 8
  %1003 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1670 = call i32 @obj2ast_keyword(%struct._object* %1002, %struct._keyword** %value1667, %struct._arena* %1003)
  store i32 %call1670, i32* %res1640, align 4
  %1004 = load i32, i32* %res1640, align 4
  %cmp1671 = icmp ne i32 %1004, 0
  br i1 %cmp1671, label %if.then.1672, label %if.end.1673

if.then.1672:                                     ; preds = %for.body.1665
  br label %failed

if.end.1673:                                      ; preds = %for.body.1665
  %1005 = load %struct._keyword*, %struct._keyword** %value1667, align 8
  %1006 = bitcast %struct._keyword* %1005 to i8*
  %1007 = load i64, i64* %i1644, align 8
  %1008 = load %struct.asdl_seq*, %struct.asdl_seq** %keywords, align 8
  %elements1674 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1008, i32 0, i32 1
  %arrayidx1675 = getelementptr [1 x i8*], [1 x i8*]* %elements1674, i32 0, i64 %1007
  store i8* %1006, i8** %arrayidx1675, align 8
  br label %for.inc.1676

for.inc.1676:                                     ; preds = %if.end.1673
  %1009 = load i64, i64* %i1644, align 8
  %inc1677 = add i64 %1009, 1
  store i64 %inc1677, i64* %i1644, align 8
  br label %for.cond.1663

for.end.1678:                                     ; preds = %for.cond.1663
  br label %do.body.1679

do.body.1679:                                     ; preds = %for.end.1678
  %1010 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1010, %struct._object** %_py_tmp1681, align 8
  %1011 = load %struct._object*, %struct._object** %_py_tmp1681, align 8
  %cmp1682 = icmp ne %struct._object* %1011, null
  br i1 %cmp1682, label %if.then.1683, label %if.end.1696

if.then.1683:                                     ; preds = %do.body.1679
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1684

do.body.1684:                                     ; preds = %if.then.1683
  %1012 = load %struct._object*, %struct._object** %_py_tmp1681, align 8
  store %struct._object* %1012, %struct._object** %_py_decref_tmp1686, align 8
  %1013 = load %struct._object*, %struct._object** %_py_decref_tmp1686, align 8
  %ob_refcnt1687 = getelementptr inbounds %struct._object, %struct._object* %1013, i32 0, i32 0
  %1014 = load i64, i64* %ob_refcnt1687, align 8
  %dec1688 = add i64 %1014, -1
  store i64 %dec1688, i64* %ob_refcnt1687, align 8
  %cmp1689 = icmp ne i64 %dec1688, 0
  br i1 %cmp1689, label %if.then.1690, label %if.else.1691

if.then.1690:                                     ; preds = %do.body.1684
  br label %if.end.1694

if.else.1691:                                     ; preds = %do.body.1684
  %1015 = load %struct._object*, %struct._object** %_py_decref_tmp1686, align 8
  %ob_type1692 = getelementptr inbounds %struct._object, %struct._object* %1015, i32 0, i32 1
  %1016 = load %struct._typeobject*, %struct._typeobject** %ob_type1692, align 8
  %tp_dealloc1693 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1016, i32 0, i32 4
  %1017 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1693, align 8
  %1018 = load %struct._object*, %struct._object** %_py_decref_tmp1686, align 8
  call void %1017(%struct._object* %1018)
  br label %if.end.1694

if.end.1694:                                      ; preds = %if.else.1691, %if.then.1690
  br label %do.end.1695

do.end.1695:                                      ; preds = %if.end.1694
  br label %if.end.1696

if.end.1696:                                      ; preds = %do.end.1695, %do.body.1679
  br label %do.end.1697

do.end.1697:                                      ; preds = %if.end.1696
  br label %if.end.1699

if.else.1698:                                     ; preds = %if.end.1635
  %1019 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1019, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.379, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1699:                                      ; preds = %do.end.1697
  %1020 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1700 = call i32 @exists_not_none(%struct._object* %1020, %struct._Py_Identifier* @PyId_starargs)
  %tobool1701 = icmp ne i32 %call1700, 0
  br i1 %tobool1701, label %if.then.1702, label %if.else.1732

if.then.1702:                                     ; preds = %if.end.1699
  %1021 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1705 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1021, %struct._Py_Identifier* @PyId_starargs)
  store %struct._object* %call1705, %struct._object** %tmp, align 8
  %1022 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1706 = icmp eq %struct._object* %1022, null
  br i1 %cmp1706, label %if.then.1707, label %if.end.1708

if.then.1707:                                     ; preds = %if.then.1702
  br label %failed

if.end.1708:                                      ; preds = %if.then.1702
  %1023 = load %struct._object*, %struct._object** %tmp, align 8
  %1024 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1709 = call i32 @obj2ast_expr(%struct._object* %1023, %struct._expr** %starargs, %struct._arena* %1024)
  store i32 %call1709, i32* %res1704, align 4
  %1025 = load i32, i32* %res1704, align 4
  %cmp1710 = icmp ne i32 %1025, 0
  br i1 %cmp1710, label %if.then.1711, label %if.end.1712

if.then.1711:                                     ; preds = %if.end.1708
  br label %failed

if.end.1712:                                      ; preds = %if.end.1708
  br label %do.body.1713

do.body.1713:                                     ; preds = %if.end.1712
  %1026 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1026, %struct._object** %_py_tmp1715, align 8
  %1027 = load %struct._object*, %struct._object** %_py_tmp1715, align 8
  %cmp1716 = icmp ne %struct._object* %1027, null
  br i1 %cmp1716, label %if.then.1717, label %if.end.1730

if.then.1717:                                     ; preds = %do.body.1713
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1718

do.body.1718:                                     ; preds = %if.then.1717
  %1028 = load %struct._object*, %struct._object** %_py_tmp1715, align 8
  store %struct._object* %1028, %struct._object** %_py_decref_tmp1720, align 8
  %1029 = load %struct._object*, %struct._object** %_py_decref_tmp1720, align 8
  %ob_refcnt1721 = getelementptr inbounds %struct._object, %struct._object* %1029, i32 0, i32 0
  %1030 = load i64, i64* %ob_refcnt1721, align 8
  %dec1722 = add i64 %1030, -1
  store i64 %dec1722, i64* %ob_refcnt1721, align 8
  %cmp1723 = icmp ne i64 %dec1722, 0
  br i1 %cmp1723, label %if.then.1724, label %if.else.1725

if.then.1724:                                     ; preds = %do.body.1718
  br label %if.end.1728

if.else.1725:                                     ; preds = %do.body.1718
  %1031 = load %struct._object*, %struct._object** %_py_decref_tmp1720, align 8
  %ob_type1726 = getelementptr inbounds %struct._object, %struct._object* %1031, i32 0, i32 1
  %1032 = load %struct._typeobject*, %struct._typeobject** %ob_type1726, align 8
  %tp_dealloc1727 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1032, i32 0, i32 4
  %1033 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1727, align 8
  %1034 = load %struct._object*, %struct._object** %_py_decref_tmp1720, align 8
  call void %1033(%struct._object* %1034)
  br label %if.end.1728

if.end.1728:                                      ; preds = %if.else.1725, %if.then.1724
  br label %do.end.1729

do.end.1729:                                      ; preds = %if.end.1728
  br label %if.end.1730

if.end.1730:                                      ; preds = %do.end.1729, %do.body.1713
  br label %do.end.1731

do.end.1731:                                      ; preds = %if.end.1730
  br label %if.end.1733

if.else.1732:                                     ; preds = %if.end.1699
  store %struct._expr* null, %struct._expr** %starargs, align 8
  br label %if.end.1733

if.end.1733:                                      ; preds = %if.else.1732, %do.end.1731
  %1035 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1734 = call i32 @exists_not_none(%struct._object* %1035, %struct._Py_Identifier* @PyId_kwargs)
  %tobool1735 = icmp ne i32 %call1734, 0
  br i1 %tobool1735, label %if.then.1736, label %if.else.1766

if.then.1736:                                     ; preds = %if.end.1733
  %1036 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1739 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1036, %struct._Py_Identifier* @PyId_kwargs)
  store %struct._object* %call1739, %struct._object** %tmp, align 8
  %1037 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1740 = icmp eq %struct._object* %1037, null
  br i1 %cmp1740, label %if.then.1741, label %if.end.1742

if.then.1741:                                     ; preds = %if.then.1736
  br label %failed

if.end.1742:                                      ; preds = %if.then.1736
  %1038 = load %struct._object*, %struct._object** %tmp, align 8
  %1039 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1743 = call i32 @obj2ast_expr(%struct._object* %1038, %struct._expr** %kwargs, %struct._arena* %1039)
  store i32 %call1743, i32* %res1738, align 4
  %1040 = load i32, i32* %res1738, align 4
  %cmp1744 = icmp ne i32 %1040, 0
  br i1 %cmp1744, label %if.then.1745, label %if.end.1746

if.then.1745:                                     ; preds = %if.end.1742
  br label %failed

if.end.1746:                                      ; preds = %if.end.1742
  br label %do.body.1747

do.body.1747:                                     ; preds = %if.end.1746
  %1041 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1041, %struct._object** %_py_tmp1749, align 8
  %1042 = load %struct._object*, %struct._object** %_py_tmp1749, align 8
  %cmp1750 = icmp ne %struct._object* %1042, null
  br i1 %cmp1750, label %if.then.1751, label %if.end.1764

if.then.1751:                                     ; preds = %do.body.1747
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1752

do.body.1752:                                     ; preds = %if.then.1751
  %1043 = load %struct._object*, %struct._object** %_py_tmp1749, align 8
  store %struct._object* %1043, %struct._object** %_py_decref_tmp1754, align 8
  %1044 = load %struct._object*, %struct._object** %_py_decref_tmp1754, align 8
  %ob_refcnt1755 = getelementptr inbounds %struct._object, %struct._object* %1044, i32 0, i32 0
  %1045 = load i64, i64* %ob_refcnt1755, align 8
  %dec1756 = add i64 %1045, -1
  store i64 %dec1756, i64* %ob_refcnt1755, align 8
  %cmp1757 = icmp ne i64 %dec1756, 0
  br i1 %cmp1757, label %if.then.1758, label %if.else.1759

if.then.1758:                                     ; preds = %do.body.1752
  br label %if.end.1762

if.else.1759:                                     ; preds = %do.body.1752
  %1046 = load %struct._object*, %struct._object** %_py_decref_tmp1754, align 8
  %ob_type1760 = getelementptr inbounds %struct._object, %struct._object* %1046, i32 0, i32 1
  %1047 = load %struct._typeobject*, %struct._typeobject** %ob_type1760, align 8
  %tp_dealloc1761 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1047, i32 0, i32 4
  %1048 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1761, align 8
  %1049 = load %struct._object*, %struct._object** %_py_decref_tmp1754, align 8
  call void %1048(%struct._object* %1049)
  br label %if.end.1762

if.end.1762:                                      ; preds = %if.else.1759, %if.then.1758
  br label %do.end.1763

do.end.1763:                                      ; preds = %if.end.1762
  br label %if.end.1764

if.end.1764:                                      ; preds = %do.end.1763, %do.body.1747
  br label %do.end.1765

do.end.1765:                                      ; preds = %if.end.1764
  br label %if.end.1767

if.else.1766:                                     ; preds = %if.end.1733
  store %struct._expr* null, %struct._expr** %kwargs, align 8
  br label %if.end.1767

if.end.1767:                                      ; preds = %if.else.1766, %do.end.1765
  %1050 = load %struct._expr*, %struct._expr** %func, align 8
  %1051 = load %struct.asdl_seq*, %struct.asdl_seq** %args1534, align 8
  %1052 = load %struct.asdl_seq*, %struct.asdl_seq** %keywords, align 8
  %1053 = load %struct._expr*, %struct._expr** %starargs, align 8
  %1054 = load %struct._expr*, %struct._expr** %kwargs, align 8
  %1055 = load i32, i32* %lineno, align 4
  %1056 = load i32, i32* %col_offset, align 4
  %1057 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1768 = call %struct._expr* @_Py_Call(%struct._expr* %1050, %struct.asdl_seq* %1051, %struct.asdl_seq* %1052, %struct._expr* %1053, %struct._expr* %1054, i32 %1055, i32 %1056, %struct._arena* %1057)
  %1058 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call1768, %struct._expr** %1058, align 8
  %1059 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %1060 = load %struct._expr*, %struct._expr** %1059, align 8
  %cmp1769 = icmp eq %struct._expr* %1060, null
  br i1 %cmp1769, label %if.then.1770, label %if.end.1771

if.then.1770:                                     ; preds = %if.end.1767
  br label %failed

if.end.1771:                                      ; preds = %if.end.1767
  store i32 0, i32* %retval
  br label %return

if.end.1772:                                      ; preds = %if.end.1529
  %1061 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1062 = load %struct._typeobject*, %struct._typeobject** @Num_type, align 8
  %1063 = bitcast %struct._typeobject* %1062 to %struct._object*
  %call1773 = call i32 @PyObject_IsInstance(%struct._object* %1061, %struct._object* %1063)
  store i32 %call1773, i32* %isinstance, align 4
  %1064 = load i32, i32* %isinstance, align 4
  %cmp1774 = icmp eq i32 %1064, -1
  br i1 %cmp1774, label %if.then.1775, label %if.end.1776

if.then.1775:                                     ; preds = %if.end.1772
  store i32 1, i32* %retval
  br label %return

if.end.1776:                                      ; preds = %if.end.1772
  %1065 = load i32, i32* %isinstance, align 4
  %tobool1777 = icmp ne i32 %1065, 0
  br i1 %tobool1777, label %if.then.1778, label %if.end.1818

if.then.1778:                                     ; preds = %if.end.1776
  %1066 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1780 = call i32 @_PyObject_HasAttrId(%struct._object* %1066, %struct._Py_Identifier* @PyId_n)
  %tobool1781 = icmp ne i32 %call1780, 0
  br i1 %tobool1781, label %if.then.1782, label %if.else.1812

if.then.1782:                                     ; preds = %if.then.1778
  %1067 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1785 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1067, %struct._Py_Identifier* @PyId_n)
  store %struct._object* %call1785, %struct._object** %tmp, align 8
  %1068 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1786 = icmp eq %struct._object* %1068, null
  br i1 %cmp1786, label %if.then.1787, label %if.end.1788

if.then.1787:                                     ; preds = %if.then.1782
  br label %failed

if.end.1788:                                      ; preds = %if.then.1782
  %1069 = load %struct._object*, %struct._object** %tmp, align 8
  %1070 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1789 = call i32 @obj2ast_object(%struct._object* %1069, %struct._object** %n, %struct._arena* %1070)
  store i32 %call1789, i32* %res1784, align 4
  %1071 = load i32, i32* %res1784, align 4
  %cmp1790 = icmp ne i32 %1071, 0
  br i1 %cmp1790, label %if.then.1791, label %if.end.1792

if.then.1791:                                     ; preds = %if.end.1788
  br label %failed

if.end.1792:                                      ; preds = %if.end.1788
  br label %do.body.1793

do.body.1793:                                     ; preds = %if.end.1792
  %1072 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1072, %struct._object** %_py_tmp1795, align 8
  %1073 = load %struct._object*, %struct._object** %_py_tmp1795, align 8
  %cmp1796 = icmp ne %struct._object* %1073, null
  br i1 %cmp1796, label %if.then.1797, label %if.end.1810

if.then.1797:                                     ; preds = %do.body.1793
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1798

do.body.1798:                                     ; preds = %if.then.1797
  %1074 = load %struct._object*, %struct._object** %_py_tmp1795, align 8
  store %struct._object* %1074, %struct._object** %_py_decref_tmp1800, align 8
  %1075 = load %struct._object*, %struct._object** %_py_decref_tmp1800, align 8
  %ob_refcnt1801 = getelementptr inbounds %struct._object, %struct._object* %1075, i32 0, i32 0
  %1076 = load i64, i64* %ob_refcnt1801, align 8
  %dec1802 = add i64 %1076, -1
  store i64 %dec1802, i64* %ob_refcnt1801, align 8
  %cmp1803 = icmp ne i64 %dec1802, 0
  br i1 %cmp1803, label %if.then.1804, label %if.else.1805

if.then.1804:                                     ; preds = %do.body.1798
  br label %if.end.1808

if.else.1805:                                     ; preds = %do.body.1798
  %1077 = load %struct._object*, %struct._object** %_py_decref_tmp1800, align 8
  %ob_type1806 = getelementptr inbounds %struct._object, %struct._object* %1077, i32 0, i32 1
  %1078 = load %struct._typeobject*, %struct._typeobject** %ob_type1806, align 8
  %tp_dealloc1807 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1078, i32 0, i32 4
  %1079 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1807, align 8
  %1080 = load %struct._object*, %struct._object** %_py_decref_tmp1800, align 8
  call void %1079(%struct._object* %1080)
  br label %if.end.1808

if.end.1808:                                      ; preds = %if.else.1805, %if.then.1804
  br label %do.end.1809

do.end.1809:                                      ; preds = %if.end.1808
  br label %if.end.1810

if.end.1810:                                      ; preds = %do.end.1809, %do.body.1793
  br label %do.end.1811

do.end.1811:                                      ; preds = %if.end.1810
  br label %if.end.1813

if.else.1812:                                     ; preds = %if.then.1778
  %1081 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1081, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.380, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1813:                                      ; preds = %do.end.1811
  %1082 = load %struct._object*, %struct._object** %n, align 8
  %1083 = load i32, i32* %lineno, align 4
  %1084 = load i32, i32* %col_offset, align 4
  %1085 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1814 = call %struct._expr* @_Py_Num(%struct._object* %1082, i32 %1083, i32 %1084, %struct._arena* %1085)
  %1086 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call1814, %struct._expr** %1086, align 8
  %1087 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %1088 = load %struct._expr*, %struct._expr** %1087, align 8
  %cmp1815 = icmp eq %struct._expr* %1088, null
  br i1 %cmp1815, label %if.then.1816, label %if.end.1817

if.then.1816:                                     ; preds = %if.end.1813
  br label %failed

if.end.1817:                                      ; preds = %if.end.1813
  store i32 0, i32* %retval
  br label %return

if.end.1818:                                      ; preds = %if.end.1776
  %1089 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1090 = load %struct._typeobject*, %struct._typeobject** @Str_type, align 8
  %1091 = bitcast %struct._typeobject* %1090 to %struct._object*
  %call1819 = call i32 @PyObject_IsInstance(%struct._object* %1089, %struct._object* %1091)
  store i32 %call1819, i32* %isinstance, align 4
  %1092 = load i32, i32* %isinstance, align 4
  %cmp1820 = icmp eq i32 %1092, -1
  br i1 %cmp1820, label %if.then.1821, label %if.end.1822

if.then.1821:                                     ; preds = %if.end.1818
  store i32 1, i32* %retval
  br label %return

if.end.1822:                                      ; preds = %if.end.1818
  %1093 = load i32, i32* %isinstance, align 4
  %tobool1823 = icmp ne i32 %1093, 0
  br i1 %tobool1823, label %if.then.1824, label %if.end.1864

if.then.1824:                                     ; preds = %if.end.1822
  %1094 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1826 = call i32 @_PyObject_HasAttrId(%struct._object* %1094, %struct._Py_Identifier* @PyId_s)
  %tobool1827 = icmp ne i32 %call1826, 0
  br i1 %tobool1827, label %if.then.1828, label %if.else.1858

if.then.1828:                                     ; preds = %if.then.1824
  %1095 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1831 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1095, %struct._Py_Identifier* @PyId_s)
  store %struct._object* %call1831, %struct._object** %tmp, align 8
  %1096 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1832 = icmp eq %struct._object* %1096, null
  br i1 %cmp1832, label %if.then.1833, label %if.end.1834

if.then.1833:                                     ; preds = %if.then.1828
  br label %failed

if.end.1834:                                      ; preds = %if.then.1828
  %1097 = load %struct._object*, %struct._object** %tmp, align 8
  %1098 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1835 = call i32 @obj2ast_string(%struct._object* %1097, %struct._object** %s, %struct._arena* %1098)
  store i32 %call1835, i32* %res1830, align 4
  %1099 = load i32, i32* %res1830, align 4
  %cmp1836 = icmp ne i32 %1099, 0
  br i1 %cmp1836, label %if.then.1837, label %if.end.1838

if.then.1837:                                     ; preds = %if.end.1834
  br label %failed

if.end.1838:                                      ; preds = %if.end.1834
  br label %do.body.1839

do.body.1839:                                     ; preds = %if.end.1838
  %1100 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1100, %struct._object** %_py_tmp1841, align 8
  %1101 = load %struct._object*, %struct._object** %_py_tmp1841, align 8
  %cmp1842 = icmp ne %struct._object* %1101, null
  br i1 %cmp1842, label %if.then.1843, label %if.end.1856

if.then.1843:                                     ; preds = %do.body.1839
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1844

do.body.1844:                                     ; preds = %if.then.1843
  %1102 = load %struct._object*, %struct._object** %_py_tmp1841, align 8
  store %struct._object* %1102, %struct._object** %_py_decref_tmp1846, align 8
  %1103 = load %struct._object*, %struct._object** %_py_decref_tmp1846, align 8
  %ob_refcnt1847 = getelementptr inbounds %struct._object, %struct._object* %1103, i32 0, i32 0
  %1104 = load i64, i64* %ob_refcnt1847, align 8
  %dec1848 = add i64 %1104, -1
  store i64 %dec1848, i64* %ob_refcnt1847, align 8
  %cmp1849 = icmp ne i64 %dec1848, 0
  br i1 %cmp1849, label %if.then.1850, label %if.else.1851

if.then.1850:                                     ; preds = %do.body.1844
  br label %if.end.1854

if.else.1851:                                     ; preds = %do.body.1844
  %1105 = load %struct._object*, %struct._object** %_py_decref_tmp1846, align 8
  %ob_type1852 = getelementptr inbounds %struct._object, %struct._object* %1105, i32 0, i32 1
  %1106 = load %struct._typeobject*, %struct._typeobject** %ob_type1852, align 8
  %tp_dealloc1853 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1106, i32 0, i32 4
  %1107 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1853, align 8
  %1108 = load %struct._object*, %struct._object** %_py_decref_tmp1846, align 8
  call void %1107(%struct._object* %1108)
  br label %if.end.1854

if.end.1854:                                      ; preds = %if.else.1851, %if.then.1850
  br label %do.end.1855

do.end.1855:                                      ; preds = %if.end.1854
  br label %if.end.1856

if.end.1856:                                      ; preds = %do.end.1855, %do.body.1839
  br label %do.end.1857

do.end.1857:                                      ; preds = %if.end.1856
  br label %if.end.1859

if.else.1858:                                     ; preds = %if.then.1824
  %1109 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1109, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.381, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1859:                                      ; preds = %do.end.1857
  %1110 = load %struct._object*, %struct._object** %s, align 8
  %1111 = load i32, i32* %lineno, align 4
  %1112 = load i32, i32* %col_offset, align 4
  %1113 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1860 = call %struct._expr* @_Py_Str(%struct._object* %1110, i32 %1111, i32 %1112, %struct._arena* %1113)
  %1114 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call1860, %struct._expr** %1114, align 8
  %1115 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %1116 = load %struct._expr*, %struct._expr** %1115, align 8
  %cmp1861 = icmp eq %struct._expr* %1116, null
  br i1 %cmp1861, label %if.then.1862, label %if.end.1863

if.then.1862:                                     ; preds = %if.end.1859
  br label %failed

if.end.1863:                                      ; preds = %if.end.1859
  store i32 0, i32* %retval
  br label %return

if.end.1864:                                      ; preds = %if.end.1822
  %1117 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1118 = load %struct._typeobject*, %struct._typeobject** @Bytes_type, align 8
  %1119 = bitcast %struct._typeobject* %1118 to %struct._object*
  %call1865 = call i32 @PyObject_IsInstance(%struct._object* %1117, %struct._object* %1119)
  store i32 %call1865, i32* %isinstance, align 4
  %1120 = load i32, i32* %isinstance, align 4
  %cmp1866 = icmp eq i32 %1120, -1
  br i1 %cmp1866, label %if.then.1867, label %if.end.1868

if.then.1867:                                     ; preds = %if.end.1864
  store i32 1, i32* %retval
  br label %return

if.end.1868:                                      ; preds = %if.end.1864
  %1121 = load i32, i32* %isinstance, align 4
  %tobool1869 = icmp ne i32 %1121, 0
  br i1 %tobool1869, label %if.then.1870, label %if.end.1911

if.then.1870:                                     ; preds = %if.end.1868
  %1122 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1873 = call i32 @_PyObject_HasAttrId(%struct._object* %1122, %struct._Py_Identifier* @PyId_s)
  %tobool1874 = icmp ne i32 %call1873, 0
  br i1 %tobool1874, label %if.then.1875, label %if.else.1905

if.then.1875:                                     ; preds = %if.then.1870
  %1123 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1878 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1123, %struct._Py_Identifier* @PyId_s)
  store %struct._object* %call1878, %struct._object** %tmp, align 8
  %1124 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1879 = icmp eq %struct._object* %1124, null
  br i1 %cmp1879, label %if.then.1880, label %if.end.1881

if.then.1880:                                     ; preds = %if.then.1875
  br label %failed

if.end.1881:                                      ; preds = %if.then.1875
  %1125 = load %struct._object*, %struct._object** %tmp, align 8
  %1126 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1882 = call i32 @obj2ast_bytes(%struct._object* %1125, %struct._object** %s1872, %struct._arena* %1126)
  store i32 %call1882, i32* %res1877, align 4
  %1127 = load i32, i32* %res1877, align 4
  %cmp1883 = icmp ne i32 %1127, 0
  br i1 %cmp1883, label %if.then.1884, label %if.end.1885

if.then.1884:                                     ; preds = %if.end.1881
  br label %failed

if.end.1885:                                      ; preds = %if.end.1881
  br label %do.body.1886

do.body.1886:                                     ; preds = %if.end.1885
  %1128 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1128, %struct._object** %_py_tmp1888, align 8
  %1129 = load %struct._object*, %struct._object** %_py_tmp1888, align 8
  %cmp1889 = icmp ne %struct._object* %1129, null
  br i1 %cmp1889, label %if.then.1890, label %if.end.1903

if.then.1890:                                     ; preds = %do.body.1886
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1891

do.body.1891:                                     ; preds = %if.then.1890
  %1130 = load %struct._object*, %struct._object** %_py_tmp1888, align 8
  store %struct._object* %1130, %struct._object** %_py_decref_tmp1893, align 8
  %1131 = load %struct._object*, %struct._object** %_py_decref_tmp1893, align 8
  %ob_refcnt1894 = getelementptr inbounds %struct._object, %struct._object* %1131, i32 0, i32 0
  %1132 = load i64, i64* %ob_refcnt1894, align 8
  %dec1895 = add i64 %1132, -1
  store i64 %dec1895, i64* %ob_refcnt1894, align 8
  %cmp1896 = icmp ne i64 %dec1895, 0
  br i1 %cmp1896, label %if.then.1897, label %if.else.1898

if.then.1897:                                     ; preds = %do.body.1891
  br label %if.end.1901

if.else.1898:                                     ; preds = %do.body.1891
  %1133 = load %struct._object*, %struct._object** %_py_decref_tmp1893, align 8
  %ob_type1899 = getelementptr inbounds %struct._object, %struct._object* %1133, i32 0, i32 1
  %1134 = load %struct._typeobject*, %struct._typeobject** %ob_type1899, align 8
  %tp_dealloc1900 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1134, i32 0, i32 4
  %1135 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1900, align 8
  %1136 = load %struct._object*, %struct._object** %_py_decref_tmp1893, align 8
  call void %1135(%struct._object* %1136)
  br label %if.end.1901

if.end.1901:                                      ; preds = %if.else.1898, %if.then.1897
  br label %do.end.1902

do.end.1902:                                      ; preds = %if.end.1901
  br label %if.end.1903

if.end.1903:                                      ; preds = %do.end.1902, %do.body.1886
  br label %do.end.1904

do.end.1904:                                      ; preds = %if.end.1903
  br label %if.end.1906

if.else.1905:                                     ; preds = %if.then.1870
  %1137 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1137, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.382, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1906:                                      ; preds = %do.end.1904
  %1138 = load %struct._object*, %struct._object** %s1872, align 8
  %1139 = load i32, i32* %lineno, align 4
  %1140 = load i32, i32* %col_offset, align 4
  %1141 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1907 = call %struct._expr* @_Py_Bytes(%struct._object* %1138, i32 %1139, i32 %1140, %struct._arena* %1141)
  %1142 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call1907, %struct._expr** %1142, align 8
  %1143 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %1144 = load %struct._expr*, %struct._expr** %1143, align 8
  %cmp1908 = icmp eq %struct._expr* %1144, null
  br i1 %cmp1908, label %if.then.1909, label %if.end.1910

if.then.1909:                                     ; preds = %if.end.1906
  br label %failed

if.end.1910:                                      ; preds = %if.end.1906
  store i32 0, i32* %retval
  br label %return

if.end.1911:                                      ; preds = %if.end.1868
  %1145 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1146 = load %struct._typeobject*, %struct._typeobject** @NameConstant_type, align 8
  %1147 = bitcast %struct._typeobject* %1146 to %struct._object*
  %call1912 = call i32 @PyObject_IsInstance(%struct._object* %1145, %struct._object* %1147)
  store i32 %call1912, i32* %isinstance, align 4
  %1148 = load i32, i32* %isinstance, align 4
  %cmp1913 = icmp eq i32 %1148, -1
  br i1 %cmp1913, label %if.then.1914, label %if.end.1915

if.then.1914:                                     ; preds = %if.end.1911
  store i32 1, i32* %retval
  br label %return

if.end.1915:                                      ; preds = %if.end.1911
  %1149 = load i32, i32* %isinstance, align 4
  %tobool1916 = icmp ne i32 %1149, 0
  br i1 %tobool1916, label %if.then.1917, label %if.end.1958

if.then.1917:                                     ; preds = %if.end.1915
  %1150 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1920 = call i32 @_PyObject_HasAttrId(%struct._object* %1150, %struct._Py_Identifier* @PyId_value)
  %tobool1921 = icmp ne i32 %call1920, 0
  br i1 %tobool1921, label %if.then.1922, label %if.else.1952

if.then.1922:                                     ; preds = %if.then.1917
  %1151 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1925 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1151, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call1925, %struct._object** %tmp, align 8
  %1152 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1926 = icmp eq %struct._object* %1152, null
  br i1 %cmp1926, label %if.then.1927, label %if.end.1928

if.then.1927:                                     ; preds = %if.then.1922
  br label %failed

if.end.1928:                                      ; preds = %if.then.1922
  %1153 = load %struct._object*, %struct._object** %tmp, align 8
  %1154 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1929 = call i32 @obj2ast_singleton(%struct._object* %1153, %struct._object** %value1919, %struct._arena* %1154)
  store i32 %call1929, i32* %res1924, align 4
  %1155 = load i32, i32* %res1924, align 4
  %cmp1930 = icmp ne i32 %1155, 0
  br i1 %cmp1930, label %if.then.1931, label %if.end.1932

if.then.1931:                                     ; preds = %if.end.1928
  br label %failed

if.end.1932:                                      ; preds = %if.end.1928
  br label %do.body.1933

do.body.1933:                                     ; preds = %if.end.1932
  %1156 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1156, %struct._object** %_py_tmp1935, align 8
  %1157 = load %struct._object*, %struct._object** %_py_tmp1935, align 8
  %cmp1936 = icmp ne %struct._object* %1157, null
  br i1 %cmp1936, label %if.then.1937, label %if.end.1950

if.then.1937:                                     ; preds = %do.body.1933
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1938

do.body.1938:                                     ; preds = %if.then.1937
  %1158 = load %struct._object*, %struct._object** %_py_tmp1935, align 8
  store %struct._object* %1158, %struct._object** %_py_decref_tmp1940, align 8
  %1159 = load %struct._object*, %struct._object** %_py_decref_tmp1940, align 8
  %ob_refcnt1941 = getelementptr inbounds %struct._object, %struct._object* %1159, i32 0, i32 0
  %1160 = load i64, i64* %ob_refcnt1941, align 8
  %dec1942 = add i64 %1160, -1
  store i64 %dec1942, i64* %ob_refcnt1941, align 8
  %cmp1943 = icmp ne i64 %dec1942, 0
  br i1 %cmp1943, label %if.then.1944, label %if.else.1945

if.then.1944:                                     ; preds = %do.body.1938
  br label %if.end.1948

if.else.1945:                                     ; preds = %do.body.1938
  %1161 = load %struct._object*, %struct._object** %_py_decref_tmp1940, align 8
  %ob_type1946 = getelementptr inbounds %struct._object, %struct._object* %1161, i32 0, i32 1
  %1162 = load %struct._typeobject*, %struct._typeobject** %ob_type1946, align 8
  %tp_dealloc1947 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1162, i32 0, i32 4
  %1163 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1947, align 8
  %1164 = load %struct._object*, %struct._object** %_py_decref_tmp1940, align 8
  call void %1163(%struct._object* %1164)
  br label %if.end.1948

if.end.1948:                                      ; preds = %if.else.1945, %if.then.1944
  br label %do.end.1949

do.end.1949:                                      ; preds = %if.end.1948
  br label %if.end.1950

if.end.1950:                                      ; preds = %do.end.1949, %do.body.1933
  br label %do.end.1951

do.end.1951:                                      ; preds = %if.end.1950
  br label %if.end.1953

if.else.1952:                                     ; preds = %if.then.1917
  %1165 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1165, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.383, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.1953:                                      ; preds = %do.end.1951
  %1166 = load %struct._object*, %struct._object** %value1919, align 8
  %1167 = load i32, i32* %lineno, align 4
  %1168 = load i32, i32* %col_offset, align 4
  %1169 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1954 = call %struct._expr* @_Py_NameConstant(%struct._object* %1166, i32 %1167, i32 %1168, %struct._arena* %1169)
  %1170 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call1954, %struct._expr** %1170, align 8
  %1171 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %1172 = load %struct._expr*, %struct._expr** %1171, align 8
  %cmp1955 = icmp eq %struct._expr* %1172, null
  br i1 %cmp1955, label %if.then.1956, label %if.end.1957

if.then.1956:                                     ; preds = %if.end.1953
  br label %failed

if.end.1957:                                      ; preds = %if.end.1953
  store i32 0, i32* %retval
  br label %return

if.end.1958:                                      ; preds = %if.end.1915
  %1173 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1174 = load %struct._typeobject*, %struct._typeobject** @Ellipsis_type, align 8
  %1175 = bitcast %struct._typeobject* %1174 to %struct._object*
  %call1959 = call i32 @PyObject_IsInstance(%struct._object* %1173, %struct._object* %1175)
  store i32 %call1959, i32* %isinstance, align 4
  %1176 = load i32, i32* %isinstance, align 4
  %cmp1960 = icmp eq i32 %1176, -1
  br i1 %cmp1960, label %if.then.1961, label %if.end.1962

if.then.1961:                                     ; preds = %if.end.1958
  store i32 1, i32* %retval
  br label %return

if.end.1962:                                      ; preds = %if.end.1958
  %1177 = load i32, i32* %isinstance, align 4
  %tobool1963 = icmp ne i32 %1177, 0
  br i1 %tobool1963, label %if.then.1964, label %if.end.1969

if.then.1964:                                     ; preds = %if.end.1962
  %1178 = load i32, i32* %lineno, align 4
  %1179 = load i32, i32* %col_offset, align 4
  %1180 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1965 = call %struct._expr* @_Py_Ellipsis(i32 %1178, i32 %1179, %struct._arena* %1180)
  %1181 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call1965, %struct._expr** %1181, align 8
  %1182 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %1183 = load %struct._expr*, %struct._expr** %1182, align 8
  %cmp1966 = icmp eq %struct._expr* %1183, null
  br i1 %cmp1966, label %if.then.1967, label %if.end.1968

if.then.1967:                                     ; preds = %if.then.1964
  br label %failed

if.end.1968:                                      ; preds = %if.then.1964
  store i32 0, i32* %retval
  br label %return

if.end.1969:                                      ; preds = %if.end.1962
  %1184 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1185 = load %struct._typeobject*, %struct._typeobject** @Attribute_type, align 8
  %1186 = bitcast %struct._typeobject* %1185 to %struct._object*
  %call1970 = call i32 @PyObject_IsInstance(%struct._object* %1184, %struct._object* %1186)
  store i32 %call1970, i32* %isinstance, align 4
  %1187 = load i32, i32* %isinstance, align 4
  %cmp1971 = icmp eq i32 %1187, -1
  br i1 %cmp1971, label %if.then.1972, label %if.end.1973

if.then.1972:                                     ; preds = %if.end.1969
  store i32 1, i32* %retval
  br label %return

if.end.1973:                                      ; preds = %if.end.1969
  %1188 = load i32, i32* %isinstance, align 4
  %tobool1974 = icmp ne i32 %1188, 0
  br i1 %tobool1974, label %if.then.1975, label %if.end.2086

if.then.1975:                                     ; preds = %if.end.1973
  %1189 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1980 = call i32 @_PyObject_HasAttrId(%struct._object* %1189, %struct._Py_Identifier* @PyId_value)
  %tobool1981 = icmp ne i32 %call1980, 0
  br i1 %tobool1981, label %if.then.1982, label %if.else.2012

if.then.1982:                                     ; preds = %if.then.1975
  %1190 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1985 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1190, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call1985, %struct._object** %tmp, align 8
  %1191 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp1986 = icmp eq %struct._object* %1191, null
  br i1 %cmp1986, label %if.then.1987, label %if.end.1988

if.then.1987:                                     ; preds = %if.then.1982
  br label %failed

if.end.1988:                                      ; preds = %if.then.1982
  %1192 = load %struct._object*, %struct._object** %tmp, align 8
  %1193 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call1989 = call i32 @obj2ast_expr(%struct._object* %1192, %struct._expr** %value1977, %struct._arena* %1193)
  store i32 %call1989, i32* %res1984, align 4
  %1194 = load i32, i32* %res1984, align 4
  %cmp1990 = icmp ne i32 %1194, 0
  br i1 %cmp1990, label %if.then.1991, label %if.end.1992

if.then.1991:                                     ; preds = %if.end.1988
  br label %failed

if.end.1992:                                      ; preds = %if.end.1988
  br label %do.body.1993

do.body.1993:                                     ; preds = %if.end.1992
  %1195 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1195, %struct._object** %_py_tmp1995, align 8
  %1196 = load %struct._object*, %struct._object** %_py_tmp1995, align 8
  %cmp1996 = icmp ne %struct._object* %1196, null
  br i1 %cmp1996, label %if.then.1997, label %if.end.2010

if.then.1997:                                     ; preds = %do.body.1993
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.1998

do.body.1998:                                     ; preds = %if.then.1997
  %1197 = load %struct._object*, %struct._object** %_py_tmp1995, align 8
  store %struct._object* %1197, %struct._object** %_py_decref_tmp2000, align 8
  %1198 = load %struct._object*, %struct._object** %_py_decref_tmp2000, align 8
  %ob_refcnt2001 = getelementptr inbounds %struct._object, %struct._object* %1198, i32 0, i32 0
  %1199 = load i64, i64* %ob_refcnt2001, align 8
  %dec2002 = add i64 %1199, -1
  store i64 %dec2002, i64* %ob_refcnt2001, align 8
  %cmp2003 = icmp ne i64 %dec2002, 0
  br i1 %cmp2003, label %if.then.2004, label %if.else.2005

if.then.2004:                                     ; preds = %do.body.1998
  br label %if.end.2008

if.else.2005:                                     ; preds = %do.body.1998
  %1200 = load %struct._object*, %struct._object** %_py_decref_tmp2000, align 8
  %ob_type2006 = getelementptr inbounds %struct._object, %struct._object* %1200, i32 0, i32 1
  %1201 = load %struct._typeobject*, %struct._typeobject** %ob_type2006, align 8
  %tp_dealloc2007 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1201, i32 0, i32 4
  %1202 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2007, align 8
  %1203 = load %struct._object*, %struct._object** %_py_decref_tmp2000, align 8
  call void %1202(%struct._object* %1203)
  br label %if.end.2008

if.end.2008:                                      ; preds = %if.else.2005, %if.then.2004
  br label %do.end.2009

do.end.2009:                                      ; preds = %if.end.2008
  br label %if.end.2010

if.end.2010:                                      ; preds = %do.end.2009, %do.body.1993
  br label %do.end.2011

do.end.2011:                                      ; preds = %if.end.2010
  br label %if.end.2013

if.else.2012:                                     ; preds = %if.then.1975
  %1204 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1204, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.384, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2013:                                      ; preds = %do.end.2011
  %1205 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2014 = call i32 @_PyObject_HasAttrId(%struct._object* %1205, %struct._Py_Identifier* @PyId_attr)
  %tobool2015 = icmp ne i32 %call2014, 0
  br i1 %tobool2015, label %if.then.2016, label %if.else.2046

if.then.2016:                                     ; preds = %if.end.2013
  %1206 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2019 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1206, %struct._Py_Identifier* @PyId_attr)
  store %struct._object* %call2019, %struct._object** %tmp, align 8
  %1207 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2020 = icmp eq %struct._object* %1207, null
  br i1 %cmp2020, label %if.then.2021, label %if.end.2022

if.then.2021:                                     ; preds = %if.then.2016
  br label %failed

if.end.2022:                                      ; preds = %if.then.2016
  %1208 = load %struct._object*, %struct._object** %tmp, align 8
  %1209 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2023 = call i32 @obj2ast_identifier(%struct._object* %1208, %struct._object** %attr, %struct._arena* %1209)
  store i32 %call2023, i32* %res2018, align 4
  %1210 = load i32, i32* %res2018, align 4
  %cmp2024 = icmp ne i32 %1210, 0
  br i1 %cmp2024, label %if.then.2025, label %if.end.2026

if.then.2025:                                     ; preds = %if.end.2022
  br label %failed

if.end.2026:                                      ; preds = %if.end.2022
  br label %do.body.2027

do.body.2027:                                     ; preds = %if.end.2026
  %1211 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1211, %struct._object** %_py_tmp2029, align 8
  %1212 = load %struct._object*, %struct._object** %_py_tmp2029, align 8
  %cmp2030 = icmp ne %struct._object* %1212, null
  br i1 %cmp2030, label %if.then.2031, label %if.end.2044

if.then.2031:                                     ; preds = %do.body.2027
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2032

do.body.2032:                                     ; preds = %if.then.2031
  %1213 = load %struct._object*, %struct._object** %_py_tmp2029, align 8
  store %struct._object* %1213, %struct._object** %_py_decref_tmp2034, align 8
  %1214 = load %struct._object*, %struct._object** %_py_decref_tmp2034, align 8
  %ob_refcnt2035 = getelementptr inbounds %struct._object, %struct._object* %1214, i32 0, i32 0
  %1215 = load i64, i64* %ob_refcnt2035, align 8
  %dec2036 = add i64 %1215, -1
  store i64 %dec2036, i64* %ob_refcnt2035, align 8
  %cmp2037 = icmp ne i64 %dec2036, 0
  br i1 %cmp2037, label %if.then.2038, label %if.else.2039

if.then.2038:                                     ; preds = %do.body.2032
  br label %if.end.2042

if.else.2039:                                     ; preds = %do.body.2032
  %1216 = load %struct._object*, %struct._object** %_py_decref_tmp2034, align 8
  %ob_type2040 = getelementptr inbounds %struct._object, %struct._object* %1216, i32 0, i32 1
  %1217 = load %struct._typeobject*, %struct._typeobject** %ob_type2040, align 8
  %tp_dealloc2041 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1217, i32 0, i32 4
  %1218 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2041, align 8
  %1219 = load %struct._object*, %struct._object** %_py_decref_tmp2034, align 8
  call void %1218(%struct._object* %1219)
  br label %if.end.2042

if.end.2042:                                      ; preds = %if.else.2039, %if.then.2038
  br label %do.end.2043

do.end.2043:                                      ; preds = %if.end.2042
  br label %if.end.2044

if.end.2044:                                      ; preds = %do.end.2043, %do.body.2027
  br label %do.end.2045

do.end.2045:                                      ; preds = %if.end.2044
  br label %if.end.2047

if.else.2046:                                     ; preds = %if.end.2013
  %1220 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1220, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.385, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2047:                                      ; preds = %do.end.2045
  %1221 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2048 = call i32 @_PyObject_HasAttrId(%struct._object* %1221, %struct._Py_Identifier* @PyId_ctx)
  %tobool2049 = icmp ne i32 %call2048, 0
  br i1 %tobool2049, label %if.then.2050, label %if.else.2080

if.then.2050:                                     ; preds = %if.end.2047
  %1222 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2053 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1222, %struct._Py_Identifier* @PyId_ctx)
  store %struct._object* %call2053, %struct._object** %tmp, align 8
  %1223 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2054 = icmp eq %struct._object* %1223, null
  br i1 %cmp2054, label %if.then.2055, label %if.end.2056

if.then.2055:                                     ; preds = %if.then.2050
  br label %failed

if.end.2056:                                      ; preds = %if.then.2050
  %1224 = load %struct._object*, %struct._object** %tmp, align 8
  %1225 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2057 = call i32 @obj2ast_expr_context(%struct._object* %1224, i32* %ctx, %struct._arena* %1225)
  store i32 %call2057, i32* %res2052, align 4
  %1226 = load i32, i32* %res2052, align 4
  %cmp2058 = icmp ne i32 %1226, 0
  br i1 %cmp2058, label %if.then.2059, label %if.end.2060

if.then.2059:                                     ; preds = %if.end.2056
  br label %failed

if.end.2060:                                      ; preds = %if.end.2056
  br label %do.body.2061

do.body.2061:                                     ; preds = %if.end.2060
  %1227 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1227, %struct._object** %_py_tmp2063, align 8
  %1228 = load %struct._object*, %struct._object** %_py_tmp2063, align 8
  %cmp2064 = icmp ne %struct._object* %1228, null
  br i1 %cmp2064, label %if.then.2065, label %if.end.2078

if.then.2065:                                     ; preds = %do.body.2061
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2066

do.body.2066:                                     ; preds = %if.then.2065
  %1229 = load %struct._object*, %struct._object** %_py_tmp2063, align 8
  store %struct._object* %1229, %struct._object** %_py_decref_tmp2068, align 8
  %1230 = load %struct._object*, %struct._object** %_py_decref_tmp2068, align 8
  %ob_refcnt2069 = getelementptr inbounds %struct._object, %struct._object* %1230, i32 0, i32 0
  %1231 = load i64, i64* %ob_refcnt2069, align 8
  %dec2070 = add i64 %1231, -1
  store i64 %dec2070, i64* %ob_refcnt2069, align 8
  %cmp2071 = icmp ne i64 %dec2070, 0
  br i1 %cmp2071, label %if.then.2072, label %if.else.2073

if.then.2072:                                     ; preds = %do.body.2066
  br label %if.end.2076

if.else.2073:                                     ; preds = %do.body.2066
  %1232 = load %struct._object*, %struct._object** %_py_decref_tmp2068, align 8
  %ob_type2074 = getelementptr inbounds %struct._object, %struct._object* %1232, i32 0, i32 1
  %1233 = load %struct._typeobject*, %struct._typeobject** %ob_type2074, align 8
  %tp_dealloc2075 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1233, i32 0, i32 4
  %1234 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2075, align 8
  %1235 = load %struct._object*, %struct._object** %_py_decref_tmp2068, align 8
  call void %1234(%struct._object* %1235)
  br label %if.end.2076

if.end.2076:                                      ; preds = %if.else.2073, %if.then.2072
  br label %do.end.2077

do.end.2077:                                      ; preds = %if.end.2076
  br label %if.end.2078

if.end.2078:                                      ; preds = %do.end.2077, %do.body.2061
  br label %do.end.2079

do.end.2079:                                      ; preds = %if.end.2078
  br label %if.end.2081

if.else.2080:                                     ; preds = %if.end.2047
  %1236 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1236, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.386, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2081:                                      ; preds = %do.end.2079
  %1237 = load %struct._expr*, %struct._expr** %value1977, align 8
  %1238 = load %struct._object*, %struct._object** %attr, align 8
  %1239 = load i32, i32* %ctx, align 4
  %1240 = load i32, i32* %lineno, align 4
  %1241 = load i32, i32* %col_offset, align 4
  %1242 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2082 = call %struct._expr* @_Py_Attribute(%struct._expr* %1237, %struct._object* %1238, i32 %1239, i32 %1240, i32 %1241, %struct._arena* %1242)
  %1243 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call2082, %struct._expr** %1243, align 8
  %1244 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %1245 = load %struct._expr*, %struct._expr** %1244, align 8
  %cmp2083 = icmp eq %struct._expr* %1245, null
  br i1 %cmp2083, label %if.then.2084, label %if.end.2085

if.then.2084:                                     ; preds = %if.end.2081
  br label %failed

if.end.2085:                                      ; preds = %if.end.2081
  store i32 0, i32* %retval
  br label %return

if.end.2086:                                      ; preds = %if.end.1973
  %1246 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1247 = load %struct._typeobject*, %struct._typeobject** @Subscript_type, align 8
  %1248 = bitcast %struct._typeobject* %1247 to %struct._object*
  %call2087 = call i32 @PyObject_IsInstance(%struct._object* %1246, %struct._object* %1248)
  store i32 %call2087, i32* %isinstance, align 4
  %1249 = load i32, i32* %isinstance, align 4
  %cmp2088 = icmp eq i32 %1249, -1
  br i1 %cmp2088, label %if.then.2089, label %if.end.2090

if.then.2089:                                     ; preds = %if.end.2086
  store i32 1, i32* %retval
  br label %return

if.end.2090:                                      ; preds = %if.end.2086
  %1250 = load i32, i32* %isinstance, align 4
  %tobool2091 = icmp ne i32 %1250, 0
  br i1 %tobool2091, label %if.then.2092, label %if.end.2204

if.then.2092:                                     ; preds = %if.end.2090
  %1251 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2098 = call i32 @_PyObject_HasAttrId(%struct._object* %1251, %struct._Py_Identifier* @PyId_value)
  %tobool2099 = icmp ne i32 %call2098, 0
  br i1 %tobool2099, label %if.then.2100, label %if.else.2130

if.then.2100:                                     ; preds = %if.then.2092
  %1252 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2103 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1252, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call2103, %struct._object** %tmp, align 8
  %1253 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2104 = icmp eq %struct._object* %1253, null
  br i1 %cmp2104, label %if.then.2105, label %if.end.2106

if.then.2105:                                     ; preds = %if.then.2100
  br label %failed

if.end.2106:                                      ; preds = %if.then.2100
  %1254 = load %struct._object*, %struct._object** %tmp, align 8
  %1255 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2107 = call i32 @obj2ast_expr(%struct._object* %1254, %struct._expr** %value2094, %struct._arena* %1255)
  store i32 %call2107, i32* %res2102, align 4
  %1256 = load i32, i32* %res2102, align 4
  %cmp2108 = icmp ne i32 %1256, 0
  br i1 %cmp2108, label %if.then.2109, label %if.end.2110

if.then.2109:                                     ; preds = %if.end.2106
  br label %failed

if.end.2110:                                      ; preds = %if.end.2106
  br label %do.body.2111

do.body.2111:                                     ; preds = %if.end.2110
  %1257 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1257, %struct._object** %_py_tmp2113, align 8
  %1258 = load %struct._object*, %struct._object** %_py_tmp2113, align 8
  %cmp2114 = icmp ne %struct._object* %1258, null
  br i1 %cmp2114, label %if.then.2115, label %if.end.2128

if.then.2115:                                     ; preds = %do.body.2111
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2116

do.body.2116:                                     ; preds = %if.then.2115
  %1259 = load %struct._object*, %struct._object** %_py_tmp2113, align 8
  store %struct._object* %1259, %struct._object** %_py_decref_tmp2118, align 8
  %1260 = load %struct._object*, %struct._object** %_py_decref_tmp2118, align 8
  %ob_refcnt2119 = getelementptr inbounds %struct._object, %struct._object* %1260, i32 0, i32 0
  %1261 = load i64, i64* %ob_refcnt2119, align 8
  %dec2120 = add i64 %1261, -1
  store i64 %dec2120, i64* %ob_refcnt2119, align 8
  %cmp2121 = icmp ne i64 %dec2120, 0
  br i1 %cmp2121, label %if.then.2122, label %if.else.2123

if.then.2122:                                     ; preds = %do.body.2116
  br label %if.end.2126

if.else.2123:                                     ; preds = %do.body.2116
  %1262 = load %struct._object*, %struct._object** %_py_decref_tmp2118, align 8
  %ob_type2124 = getelementptr inbounds %struct._object, %struct._object* %1262, i32 0, i32 1
  %1263 = load %struct._typeobject*, %struct._typeobject** %ob_type2124, align 8
  %tp_dealloc2125 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1263, i32 0, i32 4
  %1264 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2125, align 8
  %1265 = load %struct._object*, %struct._object** %_py_decref_tmp2118, align 8
  call void %1264(%struct._object* %1265)
  br label %if.end.2126

if.end.2126:                                      ; preds = %if.else.2123, %if.then.2122
  br label %do.end.2127

do.end.2127:                                      ; preds = %if.end.2126
  br label %if.end.2128

if.end.2128:                                      ; preds = %do.end.2127, %do.body.2111
  br label %do.end.2129

do.end.2129:                                      ; preds = %if.end.2128
  br label %if.end.2131

if.else.2130:                                     ; preds = %if.then.2092
  %1266 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1266, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.387, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2131:                                      ; preds = %do.end.2129
  %1267 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2132 = call i32 @_PyObject_HasAttrId(%struct._object* %1267, %struct._Py_Identifier* @PyId_slice)
  %tobool2133 = icmp ne i32 %call2132, 0
  br i1 %tobool2133, label %if.then.2134, label %if.else.2164

if.then.2134:                                     ; preds = %if.end.2131
  %1268 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2137 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1268, %struct._Py_Identifier* @PyId_slice)
  store %struct._object* %call2137, %struct._object** %tmp, align 8
  %1269 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2138 = icmp eq %struct._object* %1269, null
  br i1 %cmp2138, label %if.then.2139, label %if.end.2140

if.then.2139:                                     ; preds = %if.then.2134
  br label %failed

if.end.2140:                                      ; preds = %if.then.2134
  %1270 = load %struct._object*, %struct._object** %tmp, align 8
  %1271 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2141 = call i32 @obj2ast_slice(%struct._object* %1270, %struct._slice** %slice, %struct._arena* %1271)
  store i32 %call2141, i32* %res2136, align 4
  %1272 = load i32, i32* %res2136, align 4
  %cmp2142 = icmp ne i32 %1272, 0
  br i1 %cmp2142, label %if.then.2143, label %if.end.2144

if.then.2143:                                     ; preds = %if.end.2140
  br label %failed

if.end.2144:                                      ; preds = %if.end.2140
  br label %do.body.2145

do.body.2145:                                     ; preds = %if.end.2144
  %1273 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1273, %struct._object** %_py_tmp2147, align 8
  %1274 = load %struct._object*, %struct._object** %_py_tmp2147, align 8
  %cmp2148 = icmp ne %struct._object* %1274, null
  br i1 %cmp2148, label %if.then.2149, label %if.end.2162

if.then.2149:                                     ; preds = %do.body.2145
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2150

do.body.2150:                                     ; preds = %if.then.2149
  %1275 = load %struct._object*, %struct._object** %_py_tmp2147, align 8
  store %struct._object* %1275, %struct._object** %_py_decref_tmp2152, align 8
  %1276 = load %struct._object*, %struct._object** %_py_decref_tmp2152, align 8
  %ob_refcnt2153 = getelementptr inbounds %struct._object, %struct._object* %1276, i32 0, i32 0
  %1277 = load i64, i64* %ob_refcnt2153, align 8
  %dec2154 = add i64 %1277, -1
  store i64 %dec2154, i64* %ob_refcnt2153, align 8
  %cmp2155 = icmp ne i64 %dec2154, 0
  br i1 %cmp2155, label %if.then.2156, label %if.else.2157

if.then.2156:                                     ; preds = %do.body.2150
  br label %if.end.2160

if.else.2157:                                     ; preds = %do.body.2150
  %1278 = load %struct._object*, %struct._object** %_py_decref_tmp2152, align 8
  %ob_type2158 = getelementptr inbounds %struct._object, %struct._object* %1278, i32 0, i32 1
  %1279 = load %struct._typeobject*, %struct._typeobject** %ob_type2158, align 8
  %tp_dealloc2159 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1279, i32 0, i32 4
  %1280 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2159, align 8
  %1281 = load %struct._object*, %struct._object** %_py_decref_tmp2152, align 8
  call void %1280(%struct._object* %1281)
  br label %if.end.2160

if.end.2160:                                      ; preds = %if.else.2157, %if.then.2156
  br label %do.end.2161

do.end.2161:                                      ; preds = %if.end.2160
  br label %if.end.2162

if.end.2162:                                      ; preds = %do.end.2161, %do.body.2145
  br label %do.end.2163

do.end.2163:                                      ; preds = %if.end.2162
  br label %if.end.2165

if.else.2164:                                     ; preds = %if.end.2131
  %1282 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1282, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.388, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2165:                                      ; preds = %do.end.2163
  %1283 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2166 = call i32 @_PyObject_HasAttrId(%struct._object* %1283, %struct._Py_Identifier* @PyId_ctx)
  %tobool2167 = icmp ne i32 %call2166, 0
  br i1 %tobool2167, label %if.then.2168, label %if.else.2198

if.then.2168:                                     ; preds = %if.end.2165
  %1284 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2171 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1284, %struct._Py_Identifier* @PyId_ctx)
  store %struct._object* %call2171, %struct._object** %tmp, align 8
  %1285 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2172 = icmp eq %struct._object* %1285, null
  br i1 %cmp2172, label %if.then.2173, label %if.end.2174

if.then.2173:                                     ; preds = %if.then.2168
  br label %failed

if.end.2174:                                      ; preds = %if.then.2168
  %1286 = load %struct._object*, %struct._object** %tmp, align 8
  %1287 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2175 = call i32 @obj2ast_expr_context(%struct._object* %1286, i32* %ctx2097, %struct._arena* %1287)
  store i32 %call2175, i32* %res2170, align 4
  %1288 = load i32, i32* %res2170, align 4
  %cmp2176 = icmp ne i32 %1288, 0
  br i1 %cmp2176, label %if.then.2177, label %if.end.2178

if.then.2177:                                     ; preds = %if.end.2174
  br label %failed

if.end.2178:                                      ; preds = %if.end.2174
  br label %do.body.2179

do.body.2179:                                     ; preds = %if.end.2178
  %1289 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1289, %struct._object** %_py_tmp2181, align 8
  %1290 = load %struct._object*, %struct._object** %_py_tmp2181, align 8
  %cmp2182 = icmp ne %struct._object* %1290, null
  br i1 %cmp2182, label %if.then.2183, label %if.end.2196

if.then.2183:                                     ; preds = %do.body.2179
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2184

do.body.2184:                                     ; preds = %if.then.2183
  %1291 = load %struct._object*, %struct._object** %_py_tmp2181, align 8
  store %struct._object* %1291, %struct._object** %_py_decref_tmp2186, align 8
  %1292 = load %struct._object*, %struct._object** %_py_decref_tmp2186, align 8
  %ob_refcnt2187 = getelementptr inbounds %struct._object, %struct._object* %1292, i32 0, i32 0
  %1293 = load i64, i64* %ob_refcnt2187, align 8
  %dec2188 = add i64 %1293, -1
  store i64 %dec2188, i64* %ob_refcnt2187, align 8
  %cmp2189 = icmp ne i64 %dec2188, 0
  br i1 %cmp2189, label %if.then.2190, label %if.else.2191

if.then.2190:                                     ; preds = %do.body.2184
  br label %if.end.2194

if.else.2191:                                     ; preds = %do.body.2184
  %1294 = load %struct._object*, %struct._object** %_py_decref_tmp2186, align 8
  %ob_type2192 = getelementptr inbounds %struct._object, %struct._object* %1294, i32 0, i32 1
  %1295 = load %struct._typeobject*, %struct._typeobject** %ob_type2192, align 8
  %tp_dealloc2193 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1295, i32 0, i32 4
  %1296 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2193, align 8
  %1297 = load %struct._object*, %struct._object** %_py_decref_tmp2186, align 8
  call void %1296(%struct._object* %1297)
  br label %if.end.2194

if.end.2194:                                      ; preds = %if.else.2191, %if.then.2190
  br label %do.end.2195

do.end.2195:                                      ; preds = %if.end.2194
  br label %if.end.2196

if.end.2196:                                      ; preds = %do.end.2195, %do.body.2179
  br label %do.end.2197

do.end.2197:                                      ; preds = %if.end.2196
  br label %if.end.2199

if.else.2198:                                     ; preds = %if.end.2165
  %1298 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1298, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.389, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2199:                                      ; preds = %do.end.2197
  %1299 = load %struct._expr*, %struct._expr** %value2094, align 8
  %1300 = load %struct._slice*, %struct._slice** %slice, align 8
  %1301 = load i32, i32* %ctx2097, align 4
  %1302 = load i32, i32* %lineno, align 4
  %1303 = load i32, i32* %col_offset, align 4
  %1304 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2200 = call %struct._expr* @_Py_Subscript(%struct._expr* %1299, %struct._slice* %1300, i32 %1301, i32 %1302, i32 %1303, %struct._arena* %1304)
  %1305 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call2200, %struct._expr** %1305, align 8
  %1306 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %1307 = load %struct._expr*, %struct._expr** %1306, align 8
  %cmp2201 = icmp eq %struct._expr* %1307, null
  br i1 %cmp2201, label %if.then.2202, label %if.end.2203

if.then.2202:                                     ; preds = %if.end.2199
  br label %failed

if.end.2203:                                      ; preds = %if.end.2199
  store i32 0, i32* %retval
  br label %return

if.end.2204:                                      ; preds = %if.end.2090
  %1308 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1309 = load %struct._typeobject*, %struct._typeobject** @Starred_type, align 8
  %1310 = bitcast %struct._typeobject* %1309 to %struct._object*
  %call2205 = call i32 @PyObject_IsInstance(%struct._object* %1308, %struct._object* %1310)
  store i32 %call2205, i32* %isinstance, align 4
  %1311 = load i32, i32* %isinstance, align 4
  %cmp2206 = icmp eq i32 %1311, -1
  br i1 %cmp2206, label %if.then.2207, label %if.end.2208

if.then.2207:                                     ; preds = %if.end.2204
  store i32 1, i32* %retval
  br label %return

if.end.2208:                                      ; preds = %if.end.2204
  %1312 = load i32, i32* %isinstance, align 4
  %tobool2209 = icmp ne i32 %1312, 0
  br i1 %tobool2209, label %if.then.2210, label %if.end.2287

if.then.2210:                                     ; preds = %if.end.2208
  %1313 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2215 = call i32 @_PyObject_HasAttrId(%struct._object* %1313, %struct._Py_Identifier* @PyId_value)
  %tobool2216 = icmp ne i32 %call2215, 0
  br i1 %tobool2216, label %if.then.2217, label %if.else.2247

if.then.2217:                                     ; preds = %if.then.2210
  %1314 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2220 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1314, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call2220, %struct._object** %tmp, align 8
  %1315 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2221 = icmp eq %struct._object* %1315, null
  br i1 %cmp2221, label %if.then.2222, label %if.end.2223

if.then.2222:                                     ; preds = %if.then.2217
  br label %failed

if.end.2223:                                      ; preds = %if.then.2217
  %1316 = load %struct._object*, %struct._object** %tmp, align 8
  %1317 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2224 = call i32 @obj2ast_expr(%struct._object* %1316, %struct._expr** %value2212, %struct._arena* %1317)
  store i32 %call2224, i32* %res2219, align 4
  %1318 = load i32, i32* %res2219, align 4
  %cmp2225 = icmp ne i32 %1318, 0
  br i1 %cmp2225, label %if.then.2226, label %if.end.2227

if.then.2226:                                     ; preds = %if.end.2223
  br label %failed

if.end.2227:                                      ; preds = %if.end.2223
  br label %do.body.2228

do.body.2228:                                     ; preds = %if.end.2227
  %1319 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1319, %struct._object** %_py_tmp2230, align 8
  %1320 = load %struct._object*, %struct._object** %_py_tmp2230, align 8
  %cmp2231 = icmp ne %struct._object* %1320, null
  br i1 %cmp2231, label %if.then.2232, label %if.end.2245

if.then.2232:                                     ; preds = %do.body.2228
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2233

do.body.2233:                                     ; preds = %if.then.2232
  %1321 = load %struct._object*, %struct._object** %_py_tmp2230, align 8
  store %struct._object* %1321, %struct._object** %_py_decref_tmp2235, align 8
  %1322 = load %struct._object*, %struct._object** %_py_decref_tmp2235, align 8
  %ob_refcnt2236 = getelementptr inbounds %struct._object, %struct._object* %1322, i32 0, i32 0
  %1323 = load i64, i64* %ob_refcnt2236, align 8
  %dec2237 = add i64 %1323, -1
  store i64 %dec2237, i64* %ob_refcnt2236, align 8
  %cmp2238 = icmp ne i64 %dec2237, 0
  br i1 %cmp2238, label %if.then.2239, label %if.else.2240

if.then.2239:                                     ; preds = %do.body.2233
  br label %if.end.2243

if.else.2240:                                     ; preds = %do.body.2233
  %1324 = load %struct._object*, %struct._object** %_py_decref_tmp2235, align 8
  %ob_type2241 = getelementptr inbounds %struct._object, %struct._object* %1324, i32 0, i32 1
  %1325 = load %struct._typeobject*, %struct._typeobject** %ob_type2241, align 8
  %tp_dealloc2242 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1325, i32 0, i32 4
  %1326 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2242, align 8
  %1327 = load %struct._object*, %struct._object** %_py_decref_tmp2235, align 8
  call void %1326(%struct._object* %1327)
  br label %if.end.2243

if.end.2243:                                      ; preds = %if.else.2240, %if.then.2239
  br label %do.end.2244

do.end.2244:                                      ; preds = %if.end.2243
  br label %if.end.2245

if.end.2245:                                      ; preds = %do.end.2244, %do.body.2228
  br label %do.end.2246

do.end.2246:                                      ; preds = %if.end.2245
  br label %if.end.2248

if.else.2247:                                     ; preds = %if.then.2210
  %1328 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1328, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.390, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2248:                                      ; preds = %do.end.2246
  %1329 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2249 = call i32 @_PyObject_HasAttrId(%struct._object* %1329, %struct._Py_Identifier* @PyId_ctx)
  %tobool2250 = icmp ne i32 %call2249, 0
  br i1 %tobool2250, label %if.then.2251, label %if.else.2281

if.then.2251:                                     ; preds = %if.end.2248
  %1330 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2254 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1330, %struct._Py_Identifier* @PyId_ctx)
  store %struct._object* %call2254, %struct._object** %tmp, align 8
  %1331 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2255 = icmp eq %struct._object* %1331, null
  br i1 %cmp2255, label %if.then.2256, label %if.end.2257

if.then.2256:                                     ; preds = %if.then.2251
  br label %failed

if.end.2257:                                      ; preds = %if.then.2251
  %1332 = load %struct._object*, %struct._object** %tmp, align 8
  %1333 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2258 = call i32 @obj2ast_expr_context(%struct._object* %1332, i32* %ctx2214, %struct._arena* %1333)
  store i32 %call2258, i32* %res2253, align 4
  %1334 = load i32, i32* %res2253, align 4
  %cmp2259 = icmp ne i32 %1334, 0
  br i1 %cmp2259, label %if.then.2260, label %if.end.2261

if.then.2260:                                     ; preds = %if.end.2257
  br label %failed

if.end.2261:                                      ; preds = %if.end.2257
  br label %do.body.2262

do.body.2262:                                     ; preds = %if.end.2261
  %1335 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1335, %struct._object** %_py_tmp2264, align 8
  %1336 = load %struct._object*, %struct._object** %_py_tmp2264, align 8
  %cmp2265 = icmp ne %struct._object* %1336, null
  br i1 %cmp2265, label %if.then.2266, label %if.end.2279

if.then.2266:                                     ; preds = %do.body.2262
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2267

do.body.2267:                                     ; preds = %if.then.2266
  %1337 = load %struct._object*, %struct._object** %_py_tmp2264, align 8
  store %struct._object* %1337, %struct._object** %_py_decref_tmp2269, align 8
  %1338 = load %struct._object*, %struct._object** %_py_decref_tmp2269, align 8
  %ob_refcnt2270 = getelementptr inbounds %struct._object, %struct._object* %1338, i32 0, i32 0
  %1339 = load i64, i64* %ob_refcnt2270, align 8
  %dec2271 = add i64 %1339, -1
  store i64 %dec2271, i64* %ob_refcnt2270, align 8
  %cmp2272 = icmp ne i64 %dec2271, 0
  br i1 %cmp2272, label %if.then.2273, label %if.else.2274

if.then.2273:                                     ; preds = %do.body.2267
  br label %if.end.2277

if.else.2274:                                     ; preds = %do.body.2267
  %1340 = load %struct._object*, %struct._object** %_py_decref_tmp2269, align 8
  %ob_type2275 = getelementptr inbounds %struct._object, %struct._object* %1340, i32 0, i32 1
  %1341 = load %struct._typeobject*, %struct._typeobject** %ob_type2275, align 8
  %tp_dealloc2276 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1341, i32 0, i32 4
  %1342 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2276, align 8
  %1343 = load %struct._object*, %struct._object** %_py_decref_tmp2269, align 8
  call void %1342(%struct._object* %1343)
  br label %if.end.2277

if.end.2277:                                      ; preds = %if.else.2274, %if.then.2273
  br label %do.end.2278

do.end.2278:                                      ; preds = %if.end.2277
  br label %if.end.2279

if.end.2279:                                      ; preds = %do.end.2278, %do.body.2262
  br label %do.end.2280

do.end.2280:                                      ; preds = %if.end.2279
  br label %if.end.2282

if.else.2281:                                     ; preds = %if.end.2248
  %1344 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1344, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.391, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2282:                                      ; preds = %do.end.2280
  %1345 = load %struct._expr*, %struct._expr** %value2212, align 8
  %1346 = load i32, i32* %ctx2214, align 4
  %1347 = load i32, i32* %lineno, align 4
  %1348 = load i32, i32* %col_offset, align 4
  %1349 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2283 = call %struct._expr* @_Py_Starred(%struct._expr* %1345, i32 %1346, i32 %1347, i32 %1348, %struct._arena* %1349)
  %1350 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call2283, %struct._expr** %1350, align 8
  %1351 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %1352 = load %struct._expr*, %struct._expr** %1351, align 8
  %cmp2284 = icmp eq %struct._expr* %1352, null
  br i1 %cmp2284, label %if.then.2285, label %if.end.2286

if.then.2285:                                     ; preds = %if.end.2282
  br label %failed

if.end.2286:                                      ; preds = %if.end.2282
  store i32 0, i32* %retval
  br label %return

if.end.2287:                                      ; preds = %if.end.2208
  %1353 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1354 = load %struct._typeobject*, %struct._typeobject** @Name_type, align 8
  %1355 = bitcast %struct._typeobject* %1354 to %struct._object*
  %call2288 = call i32 @PyObject_IsInstance(%struct._object* %1353, %struct._object* %1355)
  store i32 %call2288, i32* %isinstance, align 4
  %1356 = load i32, i32* %isinstance, align 4
  %cmp2289 = icmp eq i32 %1356, -1
  br i1 %cmp2289, label %if.then.2290, label %if.end.2291

if.then.2290:                                     ; preds = %if.end.2287
  store i32 1, i32* %retval
  br label %return

if.end.2291:                                      ; preds = %if.end.2287
  %1357 = load i32, i32* %isinstance, align 4
  %tobool2292 = icmp ne i32 %1357, 0
  br i1 %tobool2292, label %if.then.2293, label %if.end.2369

if.then.2293:                                     ; preds = %if.end.2291
  %1358 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2297 = call i32 @_PyObject_HasAttrId(%struct._object* %1358, %struct._Py_Identifier* @PyId_id)
  %tobool2298 = icmp ne i32 %call2297, 0
  br i1 %tobool2298, label %if.then.2299, label %if.else.2329

if.then.2299:                                     ; preds = %if.then.2293
  %1359 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2302 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1359, %struct._Py_Identifier* @PyId_id)
  store %struct._object* %call2302, %struct._object** %tmp, align 8
  %1360 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2303 = icmp eq %struct._object* %1360, null
  br i1 %cmp2303, label %if.then.2304, label %if.end.2305

if.then.2304:                                     ; preds = %if.then.2299
  br label %failed

if.end.2305:                                      ; preds = %if.then.2299
  %1361 = load %struct._object*, %struct._object** %tmp, align 8
  %1362 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2306 = call i32 @obj2ast_identifier(%struct._object* %1361, %struct._object** %id, %struct._arena* %1362)
  store i32 %call2306, i32* %res2301, align 4
  %1363 = load i32, i32* %res2301, align 4
  %cmp2307 = icmp ne i32 %1363, 0
  br i1 %cmp2307, label %if.then.2308, label %if.end.2309

if.then.2308:                                     ; preds = %if.end.2305
  br label %failed

if.end.2309:                                      ; preds = %if.end.2305
  br label %do.body.2310

do.body.2310:                                     ; preds = %if.end.2309
  %1364 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1364, %struct._object** %_py_tmp2312, align 8
  %1365 = load %struct._object*, %struct._object** %_py_tmp2312, align 8
  %cmp2313 = icmp ne %struct._object* %1365, null
  br i1 %cmp2313, label %if.then.2314, label %if.end.2327

if.then.2314:                                     ; preds = %do.body.2310
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2315

do.body.2315:                                     ; preds = %if.then.2314
  %1366 = load %struct._object*, %struct._object** %_py_tmp2312, align 8
  store %struct._object* %1366, %struct._object** %_py_decref_tmp2317, align 8
  %1367 = load %struct._object*, %struct._object** %_py_decref_tmp2317, align 8
  %ob_refcnt2318 = getelementptr inbounds %struct._object, %struct._object* %1367, i32 0, i32 0
  %1368 = load i64, i64* %ob_refcnt2318, align 8
  %dec2319 = add i64 %1368, -1
  store i64 %dec2319, i64* %ob_refcnt2318, align 8
  %cmp2320 = icmp ne i64 %dec2319, 0
  br i1 %cmp2320, label %if.then.2321, label %if.else.2322

if.then.2321:                                     ; preds = %do.body.2315
  br label %if.end.2325

if.else.2322:                                     ; preds = %do.body.2315
  %1369 = load %struct._object*, %struct._object** %_py_decref_tmp2317, align 8
  %ob_type2323 = getelementptr inbounds %struct._object, %struct._object* %1369, i32 0, i32 1
  %1370 = load %struct._typeobject*, %struct._typeobject** %ob_type2323, align 8
  %tp_dealloc2324 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1370, i32 0, i32 4
  %1371 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2324, align 8
  %1372 = load %struct._object*, %struct._object** %_py_decref_tmp2317, align 8
  call void %1371(%struct._object* %1372)
  br label %if.end.2325

if.end.2325:                                      ; preds = %if.else.2322, %if.then.2321
  br label %do.end.2326

do.end.2326:                                      ; preds = %if.end.2325
  br label %if.end.2327

if.end.2327:                                      ; preds = %do.end.2326, %do.body.2310
  br label %do.end.2328

do.end.2328:                                      ; preds = %if.end.2327
  br label %if.end.2330

if.else.2329:                                     ; preds = %if.then.2293
  %1373 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1373, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.392, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2330:                                      ; preds = %do.end.2328
  %1374 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2331 = call i32 @_PyObject_HasAttrId(%struct._object* %1374, %struct._Py_Identifier* @PyId_ctx)
  %tobool2332 = icmp ne i32 %call2331, 0
  br i1 %tobool2332, label %if.then.2333, label %if.else.2363

if.then.2333:                                     ; preds = %if.end.2330
  %1375 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2336 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1375, %struct._Py_Identifier* @PyId_ctx)
  store %struct._object* %call2336, %struct._object** %tmp, align 8
  %1376 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2337 = icmp eq %struct._object* %1376, null
  br i1 %cmp2337, label %if.then.2338, label %if.end.2339

if.then.2338:                                     ; preds = %if.then.2333
  br label %failed

if.end.2339:                                      ; preds = %if.then.2333
  %1377 = load %struct._object*, %struct._object** %tmp, align 8
  %1378 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2340 = call i32 @obj2ast_expr_context(%struct._object* %1377, i32* %ctx2296, %struct._arena* %1378)
  store i32 %call2340, i32* %res2335, align 4
  %1379 = load i32, i32* %res2335, align 4
  %cmp2341 = icmp ne i32 %1379, 0
  br i1 %cmp2341, label %if.then.2342, label %if.end.2343

if.then.2342:                                     ; preds = %if.end.2339
  br label %failed

if.end.2343:                                      ; preds = %if.end.2339
  br label %do.body.2344

do.body.2344:                                     ; preds = %if.end.2343
  %1380 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1380, %struct._object** %_py_tmp2346, align 8
  %1381 = load %struct._object*, %struct._object** %_py_tmp2346, align 8
  %cmp2347 = icmp ne %struct._object* %1381, null
  br i1 %cmp2347, label %if.then.2348, label %if.end.2361

if.then.2348:                                     ; preds = %do.body.2344
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2349

do.body.2349:                                     ; preds = %if.then.2348
  %1382 = load %struct._object*, %struct._object** %_py_tmp2346, align 8
  store %struct._object* %1382, %struct._object** %_py_decref_tmp2351, align 8
  %1383 = load %struct._object*, %struct._object** %_py_decref_tmp2351, align 8
  %ob_refcnt2352 = getelementptr inbounds %struct._object, %struct._object* %1383, i32 0, i32 0
  %1384 = load i64, i64* %ob_refcnt2352, align 8
  %dec2353 = add i64 %1384, -1
  store i64 %dec2353, i64* %ob_refcnt2352, align 8
  %cmp2354 = icmp ne i64 %dec2353, 0
  br i1 %cmp2354, label %if.then.2355, label %if.else.2356

if.then.2355:                                     ; preds = %do.body.2349
  br label %if.end.2359

if.else.2356:                                     ; preds = %do.body.2349
  %1385 = load %struct._object*, %struct._object** %_py_decref_tmp2351, align 8
  %ob_type2357 = getelementptr inbounds %struct._object, %struct._object* %1385, i32 0, i32 1
  %1386 = load %struct._typeobject*, %struct._typeobject** %ob_type2357, align 8
  %tp_dealloc2358 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1386, i32 0, i32 4
  %1387 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2358, align 8
  %1388 = load %struct._object*, %struct._object** %_py_decref_tmp2351, align 8
  call void %1387(%struct._object* %1388)
  br label %if.end.2359

if.end.2359:                                      ; preds = %if.else.2356, %if.then.2355
  br label %do.end.2360

do.end.2360:                                      ; preds = %if.end.2359
  br label %if.end.2361

if.end.2361:                                      ; preds = %do.end.2360, %do.body.2344
  br label %do.end.2362

do.end.2362:                                      ; preds = %if.end.2361
  br label %if.end.2364

if.else.2363:                                     ; preds = %if.end.2330
  %1389 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1389, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.393, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2364:                                      ; preds = %do.end.2362
  %1390 = load %struct._object*, %struct._object** %id, align 8
  %1391 = load i32, i32* %ctx2296, align 4
  %1392 = load i32, i32* %lineno, align 4
  %1393 = load i32, i32* %col_offset, align 4
  %1394 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2365 = call %struct._expr* @_Py_Name(%struct._object* %1390, i32 %1391, i32 %1392, i32 %1393, %struct._arena* %1394)
  %1395 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call2365, %struct._expr** %1395, align 8
  %1396 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %1397 = load %struct._expr*, %struct._expr** %1396, align 8
  %cmp2366 = icmp eq %struct._expr* %1397, null
  br i1 %cmp2366, label %if.then.2367, label %if.end.2368

if.then.2367:                                     ; preds = %if.end.2364
  br label %failed

if.end.2368:                                      ; preds = %if.end.2364
  store i32 0, i32* %retval
  br label %return

if.end.2369:                                      ; preds = %if.end.2291
  %1398 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1399 = load %struct._typeobject*, %struct._typeobject** @List_type, align 8
  %1400 = bitcast %struct._typeobject* %1399 to %struct._object*
  %call2370 = call i32 @PyObject_IsInstance(%struct._object* %1398, %struct._object* %1400)
  store i32 %call2370, i32* %isinstance, align 4
  %1401 = load i32, i32* %isinstance, align 4
  %cmp2371 = icmp eq i32 %1401, -1
  br i1 %cmp2371, label %if.then.2372, label %if.end.2373

if.then.2372:                                     ; preds = %if.end.2369
  store i32 1, i32* %retval
  br label %return

if.end.2373:                                      ; preds = %if.end.2369
  %1402 = load i32, i32* %isinstance, align 4
  %tobool2374 = icmp ne i32 %1402, 0
  br i1 %tobool2374, label %if.then.2375, label %if.end.2482

if.then.2375:                                     ; preds = %if.end.2373
  %1403 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2380 = call i32 @_PyObject_HasAttrId(%struct._object* %1403, %struct._Py_Identifier* @PyId_elts)
  %tobool2381 = icmp ne i32 %call2380, 0
  br i1 %tobool2381, label %if.then.2382, label %if.else.2442

if.then.2382:                                     ; preds = %if.then.2375
  %1404 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2389 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1404, %struct._Py_Identifier* @PyId_elts)
  store %struct._object* %call2389, %struct._object** %tmp, align 8
  %1405 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2390 = icmp eq %struct._object* %1405, null
  br i1 %cmp2390, label %if.then.2391, label %if.end.2392

if.then.2391:                                     ; preds = %if.then.2382
  br label %failed

if.end.2392:                                      ; preds = %if.then.2382
  %1406 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2393 = getelementptr inbounds %struct._object, %struct._object* %1406, i32 0, i32 1
  %1407 = load %struct._typeobject*, %struct._typeobject** %ob_type2393, align 8
  %tp_flags2394 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1407, i32 0, i32 19
  %1408 = load i64, i64* %tp_flags2394, align 8
  %and2395 = and i64 %1408, 33554432
  %cmp2396 = icmp ne i64 %and2395, 0
  br i1 %cmp2396, label %if.end.2401, label %if.then.2397

if.then.2397:                                     ; preds = %if.end.2392
  %1409 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1410 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2398 = getelementptr inbounds %struct._object, %struct._object* %1410, i32 0, i32 1
  %1411 = load %struct._typeobject*, %struct._typeobject** %ob_type2398, align 8
  %tp_name2399 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1411, i32 0, i32 1
  %1412 = load i8*, i8** %tp_name2399, align 8
  %call2400 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1409, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.394, i32 0, i32 0), i8* %1412)
  br label %failed

if.end.2401:                                      ; preds = %if.end.2392
  %1413 = load %struct._object*, %struct._object** %tmp, align 8
  %1414 = bitcast %struct._object* %1413 to %struct.PyVarObject*
  %ob_size2402 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1414, i32 0, i32 1
  %1415 = load i64, i64* %ob_size2402, align 8
  store i64 %1415, i64* %len2386, align 8
  %1416 = load i64, i64* %len2386, align 8
  %1417 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2403 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %1416, %struct._arena* %1417)
  store %struct.asdl_seq* %call2403, %struct.asdl_seq** %elts2377, align 8
  %1418 = load %struct.asdl_seq*, %struct.asdl_seq** %elts2377, align 8
  %cmp2404 = icmp eq %struct.asdl_seq* %1418, null
  br i1 %cmp2404, label %if.then.2405, label %if.end.2406

if.then.2405:                                     ; preds = %if.end.2401
  br label %failed

if.end.2406:                                      ; preds = %if.end.2401
  store i64 0, i64* %i2388, align 8
  br label %for.cond.2407

for.cond.2407:                                    ; preds = %for.inc.2420, %if.end.2406
  %1419 = load i64, i64* %i2388, align 8
  %1420 = load i64, i64* %len2386, align 8
  %cmp2408 = icmp slt i64 %1419, %1420
  br i1 %cmp2408, label %for.body.2409, label %for.end.2422

for.body.2409:                                    ; preds = %for.cond.2407
  %1421 = load i64, i64* %i2388, align 8
  %1422 = load %struct._object*, %struct._object** %tmp, align 8
  %1423 = bitcast %struct._object* %1422 to %struct.PyListObject*
  %ob_item2412 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %1423, i32 0, i32 1
  %1424 = load %struct._object**, %struct._object*** %ob_item2412, align 8
  %arrayidx2413 = getelementptr %struct._object*, %struct._object** %1424, i64 %1421
  %1425 = load %struct._object*, %struct._object** %arrayidx2413, align 8
  %1426 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2414 = call i32 @obj2ast_expr(%struct._object* %1425, %struct._expr** %value2411, %struct._arena* %1426)
  store i32 %call2414, i32* %res2384, align 4
  %1427 = load i32, i32* %res2384, align 4
  %cmp2415 = icmp ne i32 %1427, 0
  br i1 %cmp2415, label %if.then.2416, label %if.end.2417

if.then.2416:                                     ; preds = %for.body.2409
  br label %failed

if.end.2417:                                      ; preds = %for.body.2409
  %1428 = load %struct._expr*, %struct._expr** %value2411, align 8
  %1429 = bitcast %struct._expr* %1428 to i8*
  %1430 = load i64, i64* %i2388, align 8
  %1431 = load %struct.asdl_seq*, %struct.asdl_seq** %elts2377, align 8
  %elements2418 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1431, i32 0, i32 1
  %arrayidx2419 = getelementptr [1 x i8*], [1 x i8*]* %elements2418, i32 0, i64 %1430
  store i8* %1429, i8** %arrayidx2419, align 8
  br label %for.inc.2420

for.inc.2420:                                     ; preds = %if.end.2417
  %1432 = load i64, i64* %i2388, align 8
  %inc2421 = add i64 %1432, 1
  store i64 %inc2421, i64* %i2388, align 8
  br label %for.cond.2407

for.end.2422:                                     ; preds = %for.cond.2407
  br label %do.body.2423

do.body.2423:                                     ; preds = %for.end.2422
  %1433 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1433, %struct._object** %_py_tmp2425, align 8
  %1434 = load %struct._object*, %struct._object** %_py_tmp2425, align 8
  %cmp2426 = icmp ne %struct._object* %1434, null
  br i1 %cmp2426, label %if.then.2427, label %if.end.2440

if.then.2427:                                     ; preds = %do.body.2423
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2428

do.body.2428:                                     ; preds = %if.then.2427
  %1435 = load %struct._object*, %struct._object** %_py_tmp2425, align 8
  store %struct._object* %1435, %struct._object** %_py_decref_tmp2430, align 8
  %1436 = load %struct._object*, %struct._object** %_py_decref_tmp2430, align 8
  %ob_refcnt2431 = getelementptr inbounds %struct._object, %struct._object* %1436, i32 0, i32 0
  %1437 = load i64, i64* %ob_refcnt2431, align 8
  %dec2432 = add i64 %1437, -1
  store i64 %dec2432, i64* %ob_refcnt2431, align 8
  %cmp2433 = icmp ne i64 %dec2432, 0
  br i1 %cmp2433, label %if.then.2434, label %if.else.2435

if.then.2434:                                     ; preds = %do.body.2428
  br label %if.end.2438

if.else.2435:                                     ; preds = %do.body.2428
  %1438 = load %struct._object*, %struct._object** %_py_decref_tmp2430, align 8
  %ob_type2436 = getelementptr inbounds %struct._object, %struct._object* %1438, i32 0, i32 1
  %1439 = load %struct._typeobject*, %struct._typeobject** %ob_type2436, align 8
  %tp_dealloc2437 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1439, i32 0, i32 4
  %1440 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2437, align 8
  %1441 = load %struct._object*, %struct._object** %_py_decref_tmp2430, align 8
  call void %1440(%struct._object* %1441)
  br label %if.end.2438

if.end.2438:                                      ; preds = %if.else.2435, %if.then.2434
  br label %do.end.2439

do.end.2439:                                      ; preds = %if.end.2438
  br label %if.end.2440

if.end.2440:                                      ; preds = %do.end.2439, %do.body.2423
  br label %do.end.2441

do.end.2441:                                      ; preds = %if.end.2440
  br label %if.end.2443

if.else.2442:                                     ; preds = %if.then.2375
  %1442 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1442, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.395, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2443:                                      ; preds = %do.end.2441
  %1443 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2444 = call i32 @_PyObject_HasAttrId(%struct._object* %1443, %struct._Py_Identifier* @PyId_ctx)
  %tobool2445 = icmp ne i32 %call2444, 0
  br i1 %tobool2445, label %if.then.2446, label %if.else.2476

if.then.2446:                                     ; preds = %if.end.2443
  %1444 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2449 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1444, %struct._Py_Identifier* @PyId_ctx)
  store %struct._object* %call2449, %struct._object** %tmp, align 8
  %1445 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2450 = icmp eq %struct._object* %1445, null
  br i1 %cmp2450, label %if.then.2451, label %if.end.2452

if.then.2451:                                     ; preds = %if.then.2446
  br label %failed

if.end.2452:                                      ; preds = %if.then.2446
  %1446 = load %struct._object*, %struct._object** %tmp, align 8
  %1447 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2453 = call i32 @obj2ast_expr_context(%struct._object* %1446, i32* %ctx2379, %struct._arena* %1447)
  store i32 %call2453, i32* %res2448, align 4
  %1448 = load i32, i32* %res2448, align 4
  %cmp2454 = icmp ne i32 %1448, 0
  br i1 %cmp2454, label %if.then.2455, label %if.end.2456

if.then.2455:                                     ; preds = %if.end.2452
  br label %failed

if.end.2456:                                      ; preds = %if.end.2452
  br label %do.body.2457

do.body.2457:                                     ; preds = %if.end.2456
  %1449 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1449, %struct._object** %_py_tmp2459, align 8
  %1450 = load %struct._object*, %struct._object** %_py_tmp2459, align 8
  %cmp2460 = icmp ne %struct._object* %1450, null
  br i1 %cmp2460, label %if.then.2461, label %if.end.2474

if.then.2461:                                     ; preds = %do.body.2457
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2462

do.body.2462:                                     ; preds = %if.then.2461
  %1451 = load %struct._object*, %struct._object** %_py_tmp2459, align 8
  store %struct._object* %1451, %struct._object** %_py_decref_tmp2464, align 8
  %1452 = load %struct._object*, %struct._object** %_py_decref_tmp2464, align 8
  %ob_refcnt2465 = getelementptr inbounds %struct._object, %struct._object* %1452, i32 0, i32 0
  %1453 = load i64, i64* %ob_refcnt2465, align 8
  %dec2466 = add i64 %1453, -1
  store i64 %dec2466, i64* %ob_refcnt2465, align 8
  %cmp2467 = icmp ne i64 %dec2466, 0
  br i1 %cmp2467, label %if.then.2468, label %if.else.2469

if.then.2468:                                     ; preds = %do.body.2462
  br label %if.end.2472

if.else.2469:                                     ; preds = %do.body.2462
  %1454 = load %struct._object*, %struct._object** %_py_decref_tmp2464, align 8
  %ob_type2470 = getelementptr inbounds %struct._object, %struct._object* %1454, i32 0, i32 1
  %1455 = load %struct._typeobject*, %struct._typeobject** %ob_type2470, align 8
  %tp_dealloc2471 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1455, i32 0, i32 4
  %1456 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2471, align 8
  %1457 = load %struct._object*, %struct._object** %_py_decref_tmp2464, align 8
  call void %1456(%struct._object* %1457)
  br label %if.end.2472

if.end.2472:                                      ; preds = %if.else.2469, %if.then.2468
  br label %do.end.2473

do.end.2473:                                      ; preds = %if.end.2472
  br label %if.end.2474

if.end.2474:                                      ; preds = %do.end.2473, %do.body.2457
  br label %do.end.2475

do.end.2475:                                      ; preds = %if.end.2474
  br label %if.end.2477

if.else.2476:                                     ; preds = %if.end.2443
  %1458 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1458, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.396, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2477:                                      ; preds = %do.end.2475
  %1459 = load %struct.asdl_seq*, %struct.asdl_seq** %elts2377, align 8
  %1460 = load i32, i32* %ctx2379, align 4
  %1461 = load i32, i32* %lineno, align 4
  %1462 = load i32, i32* %col_offset, align 4
  %1463 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2478 = call %struct._expr* @_Py_List(%struct.asdl_seq* %1459, i32 %1460, i32 %1461, i32 %1462, %struct._arena* %1463)
  %1464 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call2478, %struct._expr** %1464, align 8
  %1465 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %1466 = load %struct._expr*, %struct._expr** %1465, align 8
  %cmp2479 = icmp eq %struct._expr* %1466, null
  br i1 %cmp2479, label %if.then.2480, label %if.end.2481

if.then.2480:                                     ; preds = %if.end.2477
  br label %failed

if.end.2481:                                      ; preds = %if.end.2477
  store i32 0, i32* %retval
  br label %return

if.end.2482:                                      ; preds = %if.end.2373
  %1467 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1468 = load %struct._typeobject*, %struct._typeobject** @Tuple_type, align 8
  %1469 = bitcast %struct._typeobject* %1468 to %struct._object*
  %call2483 = call i32 @PyObject_IsInstance(%struct._object* %1467, %struct._object* %1469)
  store i32 %call2483, i32* %isinstance, align 4
  %1470 = load i32, i32* %isinstance, align 4
  %cmp2484 = icmp eq i32 %1470, -1
  br i1 %cmp2484, label %if.then.2485, label %if.end.2486

if.then.2485:                                     ; preds = %if.end.2482
  store i32 1, i32* %retval
  br label %return

if.end.2486:                                      ; preds = %if.end.2482
  %1471 = load i32, i32* %isinstance, align 4
  %tobool2487 = icmp ne i32 %1471, 0
  br i1 %tobool2487, label %if.then.2488, label %if.end.2595

if.then.2488:                                     ; preds = %if.end.2486
  %1472 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2493 = call i32 @_PyObject_HasAttrId(%struct._object* %1472, %struct._Py_Identifier* @PyId_elts)
  %tobool2494 = icmp ne i32 %call2493, 0
  br i1 %tobool2494, label %if.then.2495, label %if.else.2555

if.then.2495:                                     ; preds = %if.then.2488
  %1473 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2502 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1473, %struct._Py_Identifier* @PyId_elts)
  store %struct._object* %call2502, %struct._object** %tmp, align 8
  %1474 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2503 = icmp eq %struct._object* %1474, null
  br i1 %cmp2503, label %if.then.2504, label %if.end.2505

if.then.2504:                                     ; preds = %if.then.2495
  br label %failed

if.end.2505:                                      ; preds = %if.then.2495
  %1475 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2506 = getelementptr inbounds %struct._object, %struct._object* %1475, i32 0, i32 1
  %1476 = load %struct._typeobject*, %struct._typeobject** %ob_type2506, align 8
  %tp_flags2507 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1476, i32 0, i32 19
  %1477 = load i64, i64* %tp_flags2507, align 8
  %and2508 = and i64 %1477, 33554432
  %cmp2509 = icmp ne i64 %and2508, 0
  br i1 %cmp2509, label %if.end.2514, label %if.then.2510

if.then.2510:                                     ; preds = %if.end.2505
  %1478 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1479 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type2511 = getelementptr inbounds %struct._object, %struct._object* %1479, i32 0, i32 1
  %1480 = load %struct._typeobject*, %struct._typeobject** %ob_type2511, align 8
  %tp_name2512 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1480, i32 0, i32 1
  %1481 = load i8*, i8** %tp_name2512, align 8
  %call2513 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1478, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.397, i32 0, i32 0), i8* %1481)
  br label %failed

if.end.2514:                                      ; preds = %if.end.2505
  %1482 = load %struct._object*, %struct._object** %tmp, align 8
  %1483 = bitcast %struct._object* %1482 to %struct.PyVarObject*
  %ob_size2515 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1483, i32 0, i32 1
  %1484 = load i64, i64* %ob_size2515, align 8
  store i64 %1484, i64* %len2499, align 8
  %1485 = load i64, i64* %len2499, align 8
  %1486 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2516 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %1485, %struct._arena* %1486)
  store %struct.asdl_seq* %call2516, %struct.asdl_seq** %elts2490, align 8
  %1487 = load %struct.asdl_seq*, %struct.asdl_seq** %elts2490, align 8
  %cmp2517 = icmp eq %struct.asdl_seq* %1487, null
  br i1 %cmp2517, label %if.then.2518, label %if.end.2519

if.then.2518:                                     ; preds = %if.end.2514
  br label %failed

if.end.2519:                                      ; preds = %if.end.2514
  store i64 0, i64* %i2501, align 8
  br label %for.cond.2520

for.cond.2520:                                    ; preds = %for.inc.2533, %if.end.2519
  %1488 = load i64, i64* %i2501, align 8
  %1489 = load i64, i64* %len2499, align 8
  %cmp2521 = icmp slt i64 %1488, %1489
  br i1 %cmp2521, label %for.body.2522, label %for.end.2535

for.body.2522:                                    ; preds = %for.cond.2520
  %1490 = load i64, i64* %i2501, align 8
  %1491 = load %struct._object*, %struct._object** %tmp, align 8
  %1492 = bitcast %struct._object* %1491 to %struct.PyListObject*
  %ob_item2525 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %1492, i32 0, i32 1
  %1493 = load %struct._object**, %struct._object*** %ob_item2525, align 8
  %arrayidx2526 = getelementptr %struct._object*, %struct._object** %1493, i64 %1490
  %1494 = load %struct._object*, %struct._object** %arrayidx2526, align 8
  %1495 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2527 = call i32 @obj2ast_expr(%struct._object* %1494, %struct._expr** %value2524, %struct._arena* %1495)
  store i32 %call2527, i32* %res2497, align 4
  %1496 = load i32, i32* %res2497, align 4
  %cmp2528 = icmp ne i32 %1496, 0
  br i1 %cmp2528, label %if.then.2529, label %if.end.2530

if.then.2529:                                     ; preds = %for.body.2522
  br label %failed

if.end.2530:                                      ; preds = %for.body.2522
  %1497 = load %struct._expr*, %struct._expr** %value2524, align 8
  %1498 = bitcast %struct._expr* %1497 to i8*
  %1499 = load i64, i64* %i2501, align 8
  %1500 = load %struct.asdl_seq*, %struct.asdl_seq** %elts2490, align 8
  %elements2531 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %1500, i32 0, i32 1
  %arrayidx2532 = getelementptr [1 x i8*], [1 x i8*]* %elements2531, i32 0, i64 %1499
  store i8* %1498, i8** %arrayidx2532, align 8
  br label %for.inc.2533

for.inc.2533:                                     ; preds = %if.end.2530
  %1501 = load i64, i64* %i2501, align 8
  %inc2534 = add i64 %1501, 1
  store i64 %inc2534, i64* %i2501, align 8
  br label %for.cond.2520

for.end.2535:                                     ; preds = %for.cond.2520
  br label %do.body.2536

do.body.2536:                                     ; preds = %for.end.2535
  %1502 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1502, %struct._object** %_py_tmp2538, align 8
  %1503 = load %struct._object*, %struct._object** %_py_tmp2538, align 8
  %cmp2539 = icmp ne %struct._object* %1503, null
  br i1 %cmp2539, label %if.then.2540, label %if.end.2553

if.then.2540:                                     ; preds = %do.body.2536
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2541

do.body.2541:                                     ; preds = %if.then.2540
  %1504 = load %struct._object*, %struct._object** %_py_tmp2538, align 8
  store %struct._object* %1504, %struct._object** %_py_decref_tmp2543, align 8
  %1505 = load %struct._object*, %struct._object** %_py_decref_tmp2543, align 8
  %ob_refcnt2544 = getelementptr inbounds %struct._object, %struct._object* %1505, i32 0, i32 0
  %1506 = load i64, i64* %ob_refcnt2544, align 8
  %dec2545 = add i64 %1506, -1
  store i64 %dec2545, i64* %ob_refcnt2544, align 8
  %cmp2546 = icmp ne i64 %dec2545, 0
  br i1 %cmp2546, label %if.then.2547, label %if.else.2548

if.then.2547:                                     ; preds = %do.body.2541
  br label %if.end.2551

if.else.2548:                                     ; preds = %do.body.2541
  %1507 = load %struct._object*, %struct._object** %_py_decref_tmp2543, align 8
  %ob_type2549 = getelementptr inbounds %struct._object, %struct._object* %1507, i32 0, i32 1
  %1508 = load %struct._typeobject*, %struct._typeobject** %ob_type2549, align 8
  %tp_dealloc2550 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1508, i32 0, i32 4
  %1509 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2550, align 8
  %1510 = load %struct._object*, %struct._object** %_py_decref_tmp2543, align 8
  call void %1509(%struct._object* %1510)
  br label %if.end.2551

if.end.2551:                                      ; preds = %if.else.2548, %if.then.2547
  br label %do.end.2552

do.end.2552:                                      ; preds = %if.end.2551
  br label %if.end.2553

if.end.2553:                                      ; preds = %do.end.2552, %do.body.2536
  br label %do.end.2554

do.end.2554:                                      ; preds = %if.end.2553
  br label %if.end.2556

if.else.2555:                                     ; preds = %if.then.2488
  %1511 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1511, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.398, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2556:                                      ; preds = %do.end.2554
  %1512 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2557 = call i32 @_PyObject_HasAttrId(%struct._object* %1512, %struct._Py_Identifier* @PyId_ctx)
  %tobool2558 = icmp ne i32 %call2557, 0
  br i1 %tobool2558, label %if.then.2559, label %if.else.2589

if.then.2559:                                     ; preds = %if.end.2556
  %1513 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2562 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1513, %struct._Py_Identifier* @PyId_ctx)
  store %struct._object* %call2562, %struct._object** %tmp, align 8
  %1514 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp2563 = icmp eq %struct._object* %1514, null
  br i1 %cmp2563, label %if.then.2564, label %if.end.2565

if.then.2564:                                     ; preds = %if.then.2559
  br label %failed

if.end.2565:                                      ; preds = %if.then.2559
  %1515 = load %struct._object*, %struct._object** %tmp, align 8
  %1516 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2566 = call i32 @obj2ast_expr_context(%struct._object* %1515, i32* %ctx2492, %struct._arena* %1516)
  store i32 %call2566, i32* %res2561, align 4
  %1517 = load i32, i32* %res2561, align 4
  %cmp2567 = icmp ne i32 %1517, 0
  br i1 %cmp2567, label %if.then.2568, label %if.end.2569

if.then.2568:                                     ; preds = %if.end.2565
  br label %failed

if.end.2569:                                      ; preds = %if.end.2565
  br label %do.body.2570

do.body.2570:                                     ; preds = %if.end.2569
  %1518 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1518, %struct._object** %_py_tmp2572, align 8
  %1519 = load %struct._object*, %struct._object** %_py_tmp2572, align 8
  %cmp2573 = icmp ne %struct._object* %1519, null
  br i1 %cmp2573, label %if.then.2574, label %if.end.2587

if.then.2574:                                     ; preds = %do.body.2570
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.2575

do.body.2575:                                     ; preds = %if.then.2574
  %1520 = load %struct._object*, %struct._object** %_py_tmp2572, align 8
  store %struct._object* %1520, %struct._object** %_py_decref_tmp2577, align 8
  %1521 = load %struct._object*, %struct._object** %_py_decref_tmp2577, align 8
  %ob_refcnt2578 = getelementptr inbounds %struct._object, %struct._object* %1521, i32 0, i32 0
  %1522 = load i64, i64* %ob_refcnt2578, align 8
  %dec2579 = add i64 %1522, -1
  store i64 %dec2579, i64* %ob_refcnt2578, align 8
  %cmp2580 = icmp ne i64 %dec2579, 0
  br i1 %cmp2580, label %if.then.2581, label %if.else.2582

if.then.2581:                                     ; preds = %do.body.2575
  br label %if.end.2585

if.else.2582:                                     ; preds = %do.body.2575
  %1523 = load %struct._object*, %struct._object** %_py_decref_tmp2577, align 8
  %ob_type2583 = getelementptr inbounds %struct._object, %struct._object* %1523, i32 0, i32 1
  %1524 = load %struct._typeobject*, %struct._typeobject** %ob_type2583, align 8
  %tp_dealloc2584 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1524, i32 0, i32 4
  %1525 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2584, align 8
  %1526 = load %struct._object*, %struct._object** %_py_decref_tmp2577, align 8
  call void %1525(%struct._object* %1526)
  br label %if.end.2585

if.end.2585:                                      ; preds = %if.else.2582, %if.then.2581
  br label %do.end.2586

do.end.2586:                                      ; preds = %if.end.2585
  br label %if.end.2587

if.end.2587:                                      ; preds = %do.end.2586, %do.body.2570
  br label %do.end.2588

do.end.2588:                                      ; preds = %if.end.2587
  br label %if.end.2590

if.else.2589:                                     ; preds = %if.end.2556
  %1527 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1527, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.399, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.2590:                                      ; preds = %do.end.2588
  %1528 = load %struct.asdl_seq*, %struct.asdl_seq** %elts2490, align 8
  %1529 = load i32, i32* %ctx2492, align 4
  %1530 = load i32, i32* %lineno, align 4
  %1531 = load i32, i32* %col_offset, align 4
  %1532 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call2591 = call %struct._expr* @_Py_Tuple(%struct.asdl_seq* %1528, i32 %1529, i32 %1530, i32 %1531, %struct._arena* %1532)
  %1533 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  store %struct._expr* %call2591, %struct._expr** %1533, align 8
  %1534 = load %struct._expr**, %struct._expr*** %out.addr, align 8
  %1535 = load %struct._expr*, %struct._expr** %1534, align 8
  %cmp2592 = icmp eq %struct._expr* %1535, null
  br i1 %cmp2592, label %if.then.2593, label %if.end.2594

if.then.2593:                                     ; preds = %if.end.2590
  br label %failed

if.end.2594:                                      ; preds = %if.end.2590
  store i32 0, i32* %retval
  br label %return

if.end.2595:                                      ; preds = %if.end.2486
  %1536 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %1537 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call2596 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1536, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.400, i32 0, i32 0), %struct._object* %1537)
  br label %failed

failed:                                           ; preds = %if.end.2595, %if.then.2593, %if.then.2568, %if.then.2564, %if.then.2529, %if.then.2518, %if.then.2510, %if.then.2504, %if.then.2480, %if.then.2455, %if.then.2451, %if.then.2416, %if.then.2405, %if.then.2397, %if.then.2391, %if.then.2367, %if.then.2342, %if.then.2338, %if.then.2308, %if.then.2304, %if.then.2285, %if.then.2260, %if.then.2256, %if.then.2226, %if.then.2222, %if.then.2202, %if.then.2177, %if.then.2173, %if.then.2143, %if.then.2139, %if.then.2109, %if.then.2105, %if.then.2084, %if.then.2059, %if.then.2055, %if.then.2025, %if.then.2021, %if.then.1991, %if.then.1987, %if.then.1967, %if.then.1956, %if.then.1931, %if.then.1927, %if.then.1909, %if.then.1884, %if.then.1880, %if.then.1862, %if.then.1837, %if.then.1833, %if.then.1816, %if.then.1791, %if.then.1787, %if.then.1770, %if.then.1745, %if.then.1741, %if.then.1711, %if.then.1707, %if.then.1672, %if.then.1661, %if.then.1653, %if.then.1647, %if.then.1608, %if.then.1597, %if.then.1589, %if.then.1583, %if.then.1549, %if.then.1545, %if.then.1523, %if.then.1493, %if.then.1482, %if.then.1474, %if.then.1468, %if.then.1429, %if.then.1418, %if.then.1410, %if.then.1404, %if.then.1370, %if.then.1366, %if.then.1346, %if.then.1321, %if.then.1317, %if.then.1299, %if.then.1274, %if.then.1270, %if.then.1252, %if.then.1222, %if.then.1211, %if.then.1203, %if.then.1197, %if.then.1163, %if.then.1159, %if.then.1139, %if.then.1109, %if.then.1098, %if.then.1090, %if.then.1084, %if.then.1050, %if.then.1046, %if.then.1016, %if.then.1012, %if.then.991, %if.then.961, %if.then.950, %if.then.942, %if.then.936, %if.then.902, %if.then.898, %if.then.878, %if.then.848, %if.then.837, %if.then.829, %if.then.823, %if.then.789, %if.then.785, %if.then.767, %if.then.737, %if.then.726, %if.then.718, %if.then.712, %if.then.691, %if.then.661, %if.then.650, %if.then.642, %if.then.636, %if.then.597, %if.then.586, %if.then.578, %if.then.572, %if.then.549, %if.then.524, %if.then.520, %if.then.490, %if.then.486, %if.then.456, %if.then.452, %if.then.432, %if.then.407, %if.then.403, %if.then.373, %if.then.369, %if.then.351, %if.then.326, %if.then.322, %if.then.292, %if.then.288, %if.then.269, %if.then.244, %if.then.240, %if.then.210, %if.then.206, %if.then.176, %if.then.172, %if.then.152, %if.then.126, %if.then.120, %if.then.114, %if.then.110, %if.then.78, %if.then.74, %if.then.36, %if.then.32, %if.then.11, %if.then.7
  br label %do.body.2597

do.body.2597:                                     ; preds = %failed
  %1538 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %1538, %struct._object** %_py_xdecref_tmp, align 8
  %1539 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp2599 = icmp ne %struct._object* %1539, null
  br i1 %cmp2599, label %if.then.2600, label %if.end.2613

if.then.2600:                                     ; preds = %do.body.2597
  br label %do.body.2601

do.body.2601:                                     ; preds = %if.then.2600
  %1540 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %1540, %struct._object** %_py_decref_tmp2603, align 8
  %1541 = load %struct._object*, %struct._object** %_py_decref_tmp2603, align 8
  %ob_refcnt2604 = getelementptr inbounds %struct._object, %struct._object* %1541, i32 0, i32 0
  %1542 = load i64, i64* %ob_refcnt2604, align 8
  %dec2605 = add i64 %1542, -1
  store i64 %dec2605, i64* %ob_refcnt2604, align 8
  %cmp2606 = icmp ne i64 %dec2605, 0
  br i1 %cmp2606, label %if.then.2607, label %if.else.2608

if.then.2607:                                     ; preds = %do.body.2601
  br label %if.end.2611

if.else.2608:                                     ; preds = %do.body.2601
  %1543 = load %struct._object*, %struct._object** %_py_decref_tmp2603, align 8
  %ob_type2609 = getelementptr inbounds %struct._object, %struct._object* %1543, i32 0, i32 1
  %1544 = load %struct._typeobject*, %struct._typeobject** %ob_type2609, align 8
  %tp_dealloc2610 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1544, i32 0, i32 4
  %1545 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc2610, align 8
  %1546 = load %struct._object*, %struct._object** %_py_decref_tmp2603, align 8
  call void %1545(%struct._object* %1546)
  br label %if.end.2611

if.end.2611:                                      ; preds = %if.else.2608, %if.then.2607
  br label %do.end.2612

do.end.2612:                                      ; preds = %if.end.2611
  br label %if.end.2613

if.end.2613:                                      ; preds = %do.end.2612, %do.body.2597
  br label %do.end.2614

do.end.2614:                                      ; preds = %if.end.2613
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %do.end.2614, %if.end.2594, %if.else.2589, %if.else.2555, %if.then.2485, %if.end.2481, %if.else.2476, %if.else.2442, %if.then.2372, %if.end.2368, %if.else.2363, %if.else.2329, %if.then.2290, %if.end.2286, %if.else.2281, %if.else.2247, %if.then.2207, %if.end.2203, %if.else.2198, %if.else.2164, %if.else.2130, %if.then.2089, %if.end.2085, %if.else.2080, %if.else.2046, %if.else.2012, %if.then.1972, %if.end.1968, %if.then.1961, %if.end.1957, %if.else.1952, %if.then.1914, %if.end.1910, %if.else.1905, %if.then.1867, %if.end.1863, %if.else.1858, %if.then.1821, %if.end.1817, %if.else.1812, %if.then.1775, %if.end.1771, %if.else.1698, %if.else.1634, %if.else.1570, %if.then.1528, %if.end.1524, %if.else.1519, %if.else.1455, %if.else.1391, %if.then.1351, %if.end.1347, %if.else.1342, %if.then.1304, %if.end.1300, %if.then.1257, %if.end.1253, %if.else.1248, %if.else.1184, %if.then.1144, %if.end.1140, %if.else.1135, %if.else.1071, %if.else.1037, %if.then.996, %if.end.992, %if.else.987, %if.else.923, %if.then.883, %if.end.879, %if.else.874, %if.else.810, %if.then.772, %if.end.768, %if.else.763, %if.then.696, %if.end.692, %if.else.687, %if.else.623, %if.then.554, %if.end.550, %if.else.545, %if.else.511, %if.else.477, %if.then.437, %if.end.433, %if.else.428, %if.else.394, %if.then.356, %if.end.352, %if.else.347, %if.else.313, %if.then.274, %if.end.270, %if.else.265, %if.else.231, %if.else.197, %if.then.157, %if.end.153, %if.else.148, %if.else.99, %if.then.61, %if.else.57, %if.else.23, %if.then
  %1547 = load i32, i32* %retval
  ret i32 %1547
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_int(%struct._object* %obj, i32* %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca i32*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %i = alloca i32, align 4
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store i32* %out, i32** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  %4 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.314, i32 0, i32 0), %struct._object* %4)
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call1 = call i64 @PyLong_AsLong(%struct._object* %5)
  %conv = trunc i64 %call1 to i32
  store i32 %conv, i32* %i, align 4
  %6 = load i32, i32* %i, align 4
  %cmp2 = icmp eq i32 %6, -1
  br i1 %cmp2, label %land.lhs.true, label %if.end.6

land.lhs.true:                                    ; preds = %if.end
  %call4 = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call4, null
  br i1 %tobool, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end.6:                                         ; preds = %land.lhs.true, %if.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32*, i32** %out.addr, align 8
  store i32 %7, i32* %8, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then
  %9 = load i32, i32* %retval
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_identifier(%struct._object* %obj, %struct._object** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._object**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._object** %out, %struct._object*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %1, @PyUnicode_Type
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct._object*, %struct._object** %obj.addr, align 8
  %cmp1 = icmp ne %struct._object* %2, @_Py_NoneStruct
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.315, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct._object*, %struct._object** %obj.addr, align 8
  %5 = load %struct._object**, %struct._object*** %out.addr, align 8
  %6 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i32 @obj2ast_object(%struct._object* %4, %struct._object** %5, %struct._arena* %6)
  store i32 %call, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_arguments(%struct._object* %obj, %struct._arguments** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._arguments**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %tmp = alloca %struct._object*, align 8
  %args = alloca %struct.asdl_seq*, align 8
  %vararg = alloca %struct._arg*, align 8
  %kwonlyargs = alloca %struct.asdl_seq*, align 8
  %kw_defaults = alloca %struct.asdl_seq*, align 8
  %kwarg = alloca %struct._arg*, align 8
  %defaults = alloca %struct.asdl_seq*, align 8
  %res = alloca i32, align 4
  %len = alloca i64, align 8
  %i = alloca i64, align 8
  %value = alloca %struct._arg*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %res45 = alloca i32, align 4
  %_py_tmp56 = alloca %struct._object*, align 8
  %_py_decref_tmp61 = alloca %struct._object*, align 8
  %res79 = alloca i32, align 4
  %len81 = alloca i64, align 8
  %i83 = alloca i64, align 8
  %value106 = alloca %struct._arg*, align 8
  %_py_tmp120 = alloca %struct._object*, align 8
  %_py_decref_tmp125 = alloca %struct._object*, align 8
  %res143 = alloca i32, align 4
  %len145 = alloca i64, align 8
  %i147 = alloca i64, align 8
  %value170 = alloca %struct._expr*, align 8
  %_py_tmp184 = alloca %struct._object*, align 8
  %_py_decref_tmp189 = alloca %struct._object*, align 8
  %res207 = alloca i32, align 4
  %_py_tmp218 = alloca %struct._object*, align 8
  %_py_decref_tmp223 = alloca %struct._object*, align 8
  %res241 = alloca i32, align 4
  %len243 = alloca i64, align 8
  %i245 = alloca i64, align 8
  %value268 = alloca %struct._expr*, align 8
  %_py_tmp282 = alloca %struct._object*, align 8
  %_py_decref_tmp287 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp308 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._arguments** %out, %struct._arguments*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  store %struct._object* null, %struct._object** %tmp, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i32 @_PyObject_HasAttrId(%struct._object* %0, %struct._Py_Identifier* @PyId_args)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else.39

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call10 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1, %struct._Py_Identifier* @PyId_args)
  store %struct._object* %call10, %struct._object** %tmp, align 8
  %2 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp = icmp eq %struct._object* %2, null
  br i1 %cmp, label %if.then.11, label %if.end

if.then.11:                                       ; preds = %if.then
  br label %failed

if.end:                                           ; preds = %if.then
  %3 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags, align 8
  %and = and i64 %5, 33554432
  %cmp12 = icmp ne i64 %and, 0
  br i1 %cmp12, label %if.end.16, label %if.then.13

if.then.13:                                       ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %7 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type14 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type14, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 1
  %9 = load i8*, i8** %tp_name, align 8
  %call15 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %6, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.316, i32 0, i32 0), i8* %9)
  br label %failed

if.end.16:                                        ; preds = %if.end
  %10 = load %struct._object*, %struct._object** %tmp, align 8
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1
  %12 = load i64, i64* %ob_size, align 8
  store i64 %12, i64* %len, align 8
  %13 = load i64, i64* %len, align 8
  %14 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call17 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %13, %struct._arena* %14)
  store %struct.asdl_seq* %call17, %struct.asdl_seq** %args, align 8
  %15 = load %struct.asdl_seq*, %struct.asdl_seq** %args, align 8
  %cmp18 = icmp eq %struct.asdl_seq* %15, null
  br i1 %cmp18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.16
  br label %failed

if.end.20:                                        ; preds = %if.end.16
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.20
  %16 = load i64, i64* %i, align 8
  %17 = load i64, i64* %len, align 8
  %cmp21 = icmp slt i64 %16, %17
  br i1 %cmp21, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load i64, i64* %i, align 8
  %19 = load %struct._object*, %struct._object** %tmp, align 8
  %20 = bitcast %struct._object* %19 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %20, i32 0, i32 1
  %21 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %21, i64 %18
  %22 = load %struct._object*, %struct._object** %arrayidx, align 8
  %23 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call23 = call i32 @obj2ast_arg(%struct._object* %22, %struct._arg** %value, %struct._arena* %23)
  store i32 %call23, i32* %res, align 4
  %24 = load i32, i32* %res, align 4
  %cmp24 = icmp ne i32 %24, 0
  br i1 %cmp24, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %for.body
  br label %failed

if.end.26:                                        ; preds = %for.body
  %25 = load %struct._arg*, %struct._arg** %value, align 8
  %26 = bitcast %struct._arg* %25 to i8*
  %27 = load i64, i64* %i, align 8
  %28 = load %struct.asdl_seq*, %struct.asdl_seq** %args, align 8
  %elements = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %28, i32 0, i32 1
  %arrayidx27 = getelementptr [1 x i8*], [1 x i8*]* %elements, i32 0, i64 %27
  store i8* %26, i8** %arrayidx27, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.26
  %29 = load i64, i64* %i, align 8
  %inc = add i64 %29, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %for.end
  %30 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %30, %struct._object** %_py_tmp, align 8
  %31 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp29 = icmp ne %struct._object* %31, null
  br i1 %cmp29, label %if.then.30, label %if.end.37

if.then.30:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.31

do.body.31:                                       ; preds = %if.then.30
  %32 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %32, %struct._object** %_py_decref_tmp, align 8
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0
  %34 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %34, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp33 = icmp ne i64 %dec, 0
  br i1 %cmp33, label %if.then.34, label %if.else

if.then.34:                                       ; preds = %do.body.31
  br label %if.end.36

if.else:                                          ; preds = %do.body.31
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type35 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type35, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 4
  %37 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %37(%struct._object* %38)
  br label %if.end.36

if.end.36:                                        ; preds = %if.else, %if.then.34
  br label %do.end

do.end:                                           ; preds = %if.end.36
  br label %if.end.37

if.end.37:                                        ; preds = %do.end, %do.body
  br label %do.end.38

do.end.38:                                        ; preds = %if.end.37
  br label %if.end.40

if.else.39:                                       ; preds = %entry
  %39 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %39, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.317, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.40:                                        ; preds = %do.end.38
  %40 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call41 = call i32 @exists_not_none(%struct._object* %40, %struct._Py_Identifier* @PyId_vararg)
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %if.then.43, label %if.else.73

if.then.43:                                       ; preds = %if.end.40
  %41 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call46 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %41, %struct._Py_Identifier* @PyId_vararg)
  store %struct._object* %call46, %struct._object** %tmp, align 8
  %42 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp47 = icmp eq %struct._object* %42, null
  br i1 %cmp47, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.then.43
  br label %failed

if.end.49:                                        ; preds = %if.then.43
  %43 = load %struct._object*, %struct._object** %tmp, align 8
  %44 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call50 = call i32 @obj2ast_arg(%struct._object* %43, %struct._arg** %vararg, %struct._arena* %44)
  store i32 %call50, i32* %res45, align 4
  %45 = load i32, i32* %res45, align 4
  %cmp51 = icmp ne i32 %45, 0
  br i1 %cmp51, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %if.end.49
  br label %failed

if.end.53:                                        ; preds = %if.end.49
  br label %do.body.54

do.body.54:                                       ; preds = %if.end.53
  %46 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %46, %struct._object** %_py_tmp56, align 8
  %47 = load %struct._object*, %struct._object** %_py_tmp56, align 8
  %cmp57 = icmp ne %struct._object* %47, null
  br i1 %cmp57, label %if.then.58, label %if.end.71

if.then.58:                                       ; preds = %do.body.54
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.59

do.body.59:                                       ; preds = %if.then.58
  %48 = load %struct._object*, %struct._object** %_py_tmp56, align 8
  store %struct._object* %48, %struct._object** %_py_decref_tmp61, align 8
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0
  %50 = load i64, i64* %ob_refcnt62, align 8
  %dec63 = add i64 %50, -1
  store i64 %dec63, i64* %ob_refcnt62, align 8
  %cmp64 = icmp ne i64 %dec63, 0
  br i1 %cmp64, label %if.then.65, label %if.else.66

if.then.65:                                       ; preds = %do.body.59
  br label %if.end.69

if.else.66:                                       ; preds = %do.body.59
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8
  %ob_type67 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type67, align 8
  %tp_dealloc68 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc68, align 8
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8
  call void %53(%struct._object* %54)
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.66, %if.then.65
  br label %do.end.70

do.end.70:                                        ; preds = %if.end.69
  br label %if.end.71

if.end.71:                                        ; preds = %do.end.70, %do.body.54
  br label %do.end.72

do.end.72:                                        ; preds = %if.end.71
  br label %if.end.74

if.else.73:                                       ; preds = %if.end.40
  store %struct._arg* null, %struct._arg** %vararg, align 8
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.73, %do.end.72
  %55 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call75 = call i32 @_PyObject_HasAttrId(%struct._object* %55, %struct._Py_Identifier* @PyId_kwonlyargs)
  %tobool76 = icmp ne i32 %call75, 0
  br i1 %tobool76, label %if.then.77, label %if.else.137

if.then.77:                                       ; preds = %if.end.74
  %56 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call84 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %56, %struct._Py_Identifier* @PyId_kwonlyargs)
  store %struct._object* %call84, %struct._object** %tmp, align 8
  %57 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp85 = icmp eq %struct._object* %57, null
  br i1 %cmp85, label %if.then.86, label %if.end.87

if.then.86:                                       ; preds = %if.then.77
  br label %failed

if.end.87:                                        ; preds = %if.then.77
  %58 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8
  %tp_flags89 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 19
  %60 = load i64, i64* %tp_flags89, align 8
  %and90 = and i64 %60, 33554432
  %cmp91 = icmp ne i64 %and90, 0
  br i1 %cmp91, label %if.end.96, label %if.then.92

if.then.92:                                       ; preds = %if.end.87
  %61 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %62 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type93 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type93, align 8
  %tp_name94 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 1
  %64 = load i8*, i8** %tp_name94, align 8
  %call95 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %61, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.318, i32 0, i32 0), i8* %64)
  br label %failed

if.end.96:                                        ; preds = %if.end.87
  %65 = load %struct._object*, %struct._object** %tmp, align 8
  %66 = bitcast %struct._object* %65 to %struct.PyVarObject*
  %ob_size97 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %66, i32 0, i32 1
  %67 = load i64, i64* %ob_size97, align 8
  store i64 %67, i64* %len81, align 8
  %68 = load i64, i64* %len81, align 8
  %69 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call98 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %68, %struct._arena* %69)
  store %struct.asdl_seq* %call98, %struct.asdl_seq** %kwonlyargs, align 8
  %70 = load %struct.asdl_seq*, %struct.asdl_seq** %kwonlyargs, align 8
  %cmp99 = icmp eq %struct.asdl_seq* %70, null
  br i1 %cmp99, label %if.then.100, label %if.end.101

if.then.100:                                      ; preds = %if.end.96
  br label %failed

if.end.101:                                       ; preds = %if.end.96
  store i64 0, i64* %i83, align 8
  br label %for.cond.102

for.cond.102:                                     ; preds = %for.inc.115, %if.end.101
  %71 = load i64, i64* %i83, align 8
  %72 = load i64, i64* %len81, align 8
  %cmp103 = icmp slt i64 %71, %72
  br i1 %cmp103, label %for.body.104, label %for.end.117

for.body.104:                                     ; preds = %for.cond.102
  %73 = load i64, i64* %i83, align 8
  %74 = load %struct._object*, %struct._object** %tmp, align 8
  %75 = bitcast %struct._object* %74 to %struct.PyListObject*
  %ob_item107 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %75, i32 0, i32 1
  %76 = load %struct._object**, %struct._object*** %ob_item107, align 8
  %arrayidx108 = getelementptr %struct._object*, %struct._object** %76, i64 %73
  %77 = load %struct._object*, %struct._object** %arrayidx108, align 8
  %78 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call109 = call i32 @obj2ast_arg(%struct._object* %77, %struct._arg** %value106, %struct._arena* %78)
  store i32 %call109, i32* %res79, align 4
  %79 = load i32, i32* %res79, align 4
  %cmp110 = icmp ne i32 %79, 0
  br i1 %cmp110, label %if.then.111, label %if.end.112

if.then.111:                                      ; preds = %for.body.104
  br label %failed

if.end.112:                                       ; preds = %for.body.104
  %80 = load %struct._arg*, %struct._arg** %value106, align 8
  %81 = bitcast %struct._arg* %80 to i8*
  %82 = load i64, i64* %i83, align 8
  %83 = load %struct.asdl_seq*, %struct.asdl_seq** %kwonlyargs, align 8
  %elements113 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %83, i32 0, i32 1
  %arrayidx114 = getelementptr [1 x i8*], [1 x i8*]* %elements113, i32 0, i64 %82
  store i8* %81, i8** %arrayidx114, align 8
  br label %for.inc.115

for.inc.115:                                      ; preds = %if.end.112
  %84 = load i64, i64* %i83, align 8
  %inc116 = add i64 %84, 1
  store i64 %inc116, i64* %i83, align 8
  br label %for.cond.102

for.end.117:                                      ; preds = %for.cond.102
  br label %do.body.118

do.body.118:                                      ; preds = %for.end.117
  %85 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %85, %struct._object** %_py_tmp120, align 8
  %86 = load %struct._object*, %struct._object** %_py_tmp120, align 8
  %cmp121 = icmp ne %struct._object* %86, null
  br i1 %cmp121, label %if.then.122, label %if.end.135

if.then.122:                                      ; preds = %do.body.118
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.123

do.body.123:                                      ; preds = %if.then.122
  %87 = load %struct._object*, %struct._object** %_py_tmp120, align 8
  store %struct._object* %87, %struct._object** %_py_decref_tmp125, align 8
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp125, align 8
  %ob_refcnt126 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 0
  %89 = load i64, i64* %ob_refcnt126, align 8
  %dec127 = add i64 %89, -1
  store i64 %dec127, i64* %ob_refcnt126, align 8
  %cmp128 = icmp ne i64 %dec127, 0
  br i1 %cmp128, label %if.then.129, label %if.else.130

if.then.129:                                      ; preds = %do.body.123
  br label %if.end.133

if.else.130:                                      ; preds = %do.body.123
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp125, align 8
  %ob_type131 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 1
  %91 = load %struct._typeobject*, %struct._typeobject** %ob_type131, align 8
  %tp_dealloc132 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %91, i32 0, i32 4
  %92 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc132, align 8
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp125, align 8
  call void %92(%struct._object* %93)
  br label %if.end.133

if.end.133:                                       ; preds = %if.else.130, %if.then.129
  br label %do.end.134

do.end.134:                                       ; preds = %if.end.133
  br label %if.end.135

if.end.135:                                       ; preds = %do.end.134, %do.body.118
  br label %do.end.136

do.end.136:                                       ; preds = %if.end.135
  br label %if.end.138

if.else.137:                                      ; preds = %if.end.74
  %94 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %94, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.319, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.138:                                       ; preds = %do.end.136
  %95 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call139 = call i32 @_PyObject_HasAttrId(%struct._object* %95, %struct._Py_Identifier* @PyId_kw_defaults)
  %tobool140 = icmp ne i32 %call139, 0
  br i1 %tobool140, label %if.then.141, label %if.else.201

if.then.141:                                      ; preds = %if.end.138
  %96 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call148 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %96, %struct._Py_Identifier* @PyId_kw_defaults)
  store %struct._object* %call148, %struct._object** %tmp, align 8
  %97 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp149 = icmp eq %struct._object* %97, null
  br i1 %cmp149, label %if.then.150, label %if.end.151

if.then.150:                                      ; preds = %if.then.141
  br label %failed

if.end.151:                                       ; preds = %if.then.141
  %98 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type152 = getelementptr inbounds %struct._object, %struct._object* %98, i32 0, i32 1
  %99 = load %struct._typeobject*, %struct._typeobject** %ob_type152, align 8
  %tp_flags153 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %99, i32 0, i32 19
  %100 = load i64, i64* %tp_flags153, align 8
  %and154 = and i64 %100, 33554432
  %cmp155 = icmp ne i64 %and154, 0
  br i1 %cmp155, label %if.end.160, label %if.then.156

if.then.156:                                      ; preds = %if.end.151
  %101 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %102 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type157 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 1
  %103 = load %struct._typeobject*, %struct._typeobject** %ob_type157, align 8
  %tp_name158 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %103, i32 0, i32 1
  %104 = load i8*, i8** %tp_name158, align 8
  %call159 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %101, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.320, i32 0, i32 0), i8* %104)
  br label %failed

if.end.160:                                       ; preds = %if.end.151
  %105 = load %struct._object*, %struct._object** %tmp, align 8
  %106 = bitcast %struct._object* %105 to %struct.PyVarObject*
  %ob_size161 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %106, i32 0, i32 1
  %107 = load i64, i64* %ob_size161, align 8
  store i64 %107, i64* %len145, align 8
  %108 = load i64, i64* %len145, align 8
  %109 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call162 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %108, %struct._arena* %109)
  store %struct.asdl_seq* %call162, %struct.asdl_seq** %kw_defaults, align 8
  %110 = load %struct.asdl_seq*, %struct.asdl_seq** %kw_defaults, align 8
  %cmp163 = icmp eq %struct.asdl_seq* %110, null
  br i1 %cmp163, label %if.then.164, label %if.end.165

if.then.164:                                      ; preds = %if.end.160
  br label %failed

if.end.165:                                       ; preds = %if.end.160
  store i64 0, i64* %i147, align 8
  br label %for.cond.166

for.cond.166:                                     ; preds = %for.inc.179, %if.end.165
  %111 = load i64, i64* %i147, align 8
  %112 = load i64, i64* %len145, align 8
  %cmp167 = icmp slt i64 %111, %112
  br i1 %cmp167, label %for.body.168, label %for.end.181

for.body.168:                                     ; preds = %for.cond.166
  %113 = load i64, i64* %i147, align 8
  %114 = load %struct._object*, %struct._object** %tmp, align 8
  %115 = bitcast %struct._object* %114 to %struct.PyListObject*
  %ob_item171 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %115, i32 0, i32 1
  %116 = load %struct._object**, %struct._object*** %ob_item171, align 8
  %arrayidx172 = getelementptr %struct._object*, %struct._object** %116, i64 %113
  %117 = load %struct._object*, %struct._object** %arrayidx172, align 8
  %118 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call173 = call i32 @obj2ast_expr(%struct._object* %117, %struct._expr** %value170, %struct._arena* %118)
  store i32 %call173, i32* %res143, align 4
  %119 = load i32, i32* %res143, align 4
  %cmp174 = icmp ne i32 %119, 0
  br i1 %cmp174, label %if.then.175, label %if.end.176

if.then.175:                                      ; preds = %for.body.168
  br label %failed

if.end.176:                                       ; preds = %for.body.168
  %120 = load %struct._expr*, %struct._expr** %value170, align 8
  %121 = bitcast %struct._expr* %120 to i8*
  %122 = load i64, i64* %i147, align 8
  %123 = load %struct.asdl_seq*, %struct.asdl_seq** %kw_defaults, align 8
  %elements177 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %123, i32 0, i32 1
  %arrayidx178 = getelementptr [1 x i8*], [1 x i8*]* %elements177, i32 0, i64 %122
  store i8* %121, i8** %arrayidx178, align 8
  br label %for.inc.179

for.inc.179:                                      ; preds = %if.end.176
  %124 = load i64, i64* %i147, align 8
  %inc180 = add i64 %124, 1
  store i64 %inc180, i64* %i147, align 8
  br label %for.cond.166

for.end.181:                                      ; preds = %for.cond.166
  br label %do.body.182

do.body.182:                                      ; preds = %for.end.181
  %125 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %125, %struct._object** %_py_tmp184, align 8
  %126 = load %struct._object*, %struct._object** %_py_tmp184, align 8
  %cmp185 = icmp ne %struct._object* %126, null
  br i1 %cmp185, label %if.then.186, label %if.end.199

if.then.186:                                      ; preds = %do.body.182
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.187

do.body.187:                                      ; preds = %if.then.186
  %127 = load %struct._object*, %struct._object** %_py_tmp184, align 8
  store %struct._object* %127, %struct._object** %_py_decref_tmp189, align 8
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp189, align 8
  %ob_refcnt190 = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 0
  %129 = load i64, i64* %ob_refcnt190, align 8
  %dec191 = add i64 %129, -1
  store i64 %dec191, i64* %ob_refcnt190, align 8
  %cmp192 = icmp ne i64 %dec191, 0
  br i1 %cmp192, label %if.then.193, label %if.else.194

if.then.193:                                      ; preds = %do.body.187
  br label %if.end.197

if.else.194:                                      ; preds = %do.body.187
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp189, align 8
  %ob_type195 = getelementptr inbounds %struct._object, %struct._object* %130, i32 0, i32 1
  %131 = load %struct._typeobject*, %struct._typeobject** %ob_type195, align 8
  %tp_dealloc196 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %131, i32 0, i32 4
  %132 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc196, align 8
  %133 = load %struct._object*, %struct._object** %_py_decref_tmp189, align 8
  call void %132(%struct._object* %133)
  br label %if.end.197

if.end.197:                                       ; preds = %if.else.194, %if.then.193
  br label %do.end.198

do.end.198:                                       ; preds = %if.end.197
  br label %if.end.199

if.end.199:                                       ; preds = %do.end.198, %do.body.182
  br label %do.end.200

do.end.200:                                       ; preds = %if.end.199
  br label %if.end.202

if.else.201:                                      ; preds = %if.end.138
  %134 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %134, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.321, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.202:                                       ; preds = %do.end.200
  %135 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call203 = call i32 @exists_not_none(%struct._object* %135, %struct._Py_Identifier* @PyId_kwarg)
  %tobool204 = icmp ne i32 %call203, 0
  br i1 %tobool204, label %if.then.205, label %if.else.235

if.then.205:                                      ; preds = %if.end.202
  %136 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call208 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %136, %struct._Py_Identifier* @PyId_kwarg)
  store %struct._object* %call208, %struct._object** %tmp, align 8
  %137 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp209 = icmp eq %struct._object* %137, null
  br i1 %cmp209, label %if.then.210, label %if.end.211

if.then.210:                                      ; preds = %if.then.205
  br label %failed

if.end.211:                                       ; preds = %if.then.205
  %138 = load %struct._object*, %struct._object** %tmp, align 8
  %139 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call212 = call i32 @obj2ast_arg(%struct._object* %138, %struct._arg** %kwarg, %struct._arena* %139)
  store i32 %call212, i32* %res207, align 4
  %140 = load i32, i32* %res207, align 4
  %cmp213 = icmp ne i32 %140, 0
  br i1 %cmp213, label %if.then.214, label %if.end.215

if.then.214:                                      ; preds = %if.end.211
  br label %failed

if.end.215:                                       ; preds = %if.end.211
  br label %do.body.216

do.body.216:                                      ; preds = %if.end.215
  %141 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %141, %struct._object** %_py_tmp218, align 8
  %142 = load %struct._object*, %struct._object** %_py_tmp218, align 8
  %cmp219 = icmp ne %struct._object* %142, null
  br i1 %cmp219, label %if.then.220, label %if.end.233

if.then.220:                                      ; preds = %do.body.216
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.221

do.body.221:                                      ; preds = %if.then.220
  %143 = load %struct._object*, %struct._object** %_py_tmp218, align 8
  store %struct._object* %143, %struct._object** %_py_decref_tmp223, align 8
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp223, align 8
  %ob_refcnt224 = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 0
  %145 = load i64, i64* %ob_refcnt224, align 8
  %dec225 = add i64 %145, -1
  store i64 %dec225, i64* %ob_refcnt224, align 8
  %cmp226 = icmp ne i64 %dec225, 0
  br i1 %cmp226, label %if.then.227, label %if.else.228

if.then.227:                                      ; preds = %do.body.221
  br label %if.end.231

if.else.228:                                      ; preds = %do.body.221
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp223, align 8
  %ob_type229 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 1
  %147 = load %struct._typeobject*, %struct._typeobject** %ob_type229, align 8
  %tp_dealloc230 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %147, i32 0, i32 4
  %148 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc230, align 8
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp223, align 8
  call void %148(%struct._object* %149)
  br label %if.end.231

if.end.231:                                       ; preds = %if.else.228, %if.then.227
  br label %do.end.232

do.end.232:                                       ; preds = %if.end.231
  br label %if.end.233

if.end.233:                                       ; preds = %do.end.232, %do.body.216
  br label %do.end.234

do.end.234:                                       ; preds = %if.end.233
  br label %if.end.236

if.else.235:                                      ; preds = %if.end.202
  store %struct._arg* null, %struct._arg** %kwarg, align 8
  br label %if.end.236

if.end.236:                                       ; preds = %if.else.235, %do.end.234
  %150 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call237 = call i32 @_PyObject_HasAttrId(%struct._object* %150, %struct._Py_Identifier* @PyId_defaults)
  %tobool238 = icmp ne i32 %call237, 0
  br i1 %tobool238, label %if.then.239, label %if.else.299

if.then.239:                                      ; preds = %if.end.236
  %151 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call246 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %151, %struct._Py_Identifier* @PyId_defaults)
  store %struct._object* %call246, %struct._object** %tmp, align 8
  %152 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp247 = icmp eq %struct._object* %152, null
  br i1 %cmp247, label %if.then.248, label %if.end.249

if.then.248:                                      ; preds = %if.then.239
  br label %failed

if.end.249:                                       ; preds = %if.then.239
  %153 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type250 = getelementptr inbounds %struct._object, %struct._object* %153, i32 0, i32 1
  %154 = load %struct._typeobject*, %struct._typeobject** %ob_type250, align 8
  %tp_flags251 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %154, i32 0, i32 19
  %155 = load i64, i64* %tp_flags251, align 8
  %and252 = and i64 %155, 33554432
  %cmp253 = icmp ne i64 %and252, 0
  br i1 %cmp253, label %if.end.258, label %if.then.254

if.then.254:                                      ; preds = %if.end.249
  %156 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %157 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type255 = getelementptr inbounds %struct._object, %struct._object* %157, i32 0, i32 1
  %158 = load %struct._typeobject*, %struct._typeobject** %ob_type255, align 8
  %tp_name256 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %158, i32 0, i32 1
  %159 = load i8*, i8** %tp_name256, align 8
  %call257 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %156, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.322, i32 0, i32 0), i8* %159)
  br label %failed

if.end.258:                                       ; preds = %if.end.249
  %160 = load %struct._object*, %struct._object** %tmp, align 8
  %161 = bitcast %struct._object* %160 to %struct.PyVarObject*
  %ob_size259 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %161, i32 0, i32 1
  %162 = load i64, i64* %ob_size259, align 8
  store i64 %162, i64* %len243, align 8
  %163 = load i64, i64* %len243, align 8
  %164 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call260 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %163, %struct._arena* %164)
  store %struct.asdl_seq* %call260, %struct.asdl_seq** %defaults, align 8
  %165 = load %struct.asdl_seq*, %struct.asdl_seq** %defaults, align 8
  %cmp261 = icmp eq %struct.asdl_seq* %165, null
  br i1 %cmp261, label %if.then.262, label %if.end.263

if.then.262:                                      ; preds = %if.end.258
  br label %failed

if.end.263:                                       ; preds = %if.end.258
  store i64 0, i64* %i245, align 8
  br label %for.cond.264

for.cond.264:                                     ; preds = %for.inc.277, %if.end.263
  %166 = load i64, i64* %i245, align 8
  %167 = load i64, i64* %len243, align 8
  %cmp265 = icmp slt i64 %166, %167
  br i1 %cmp265, label %for.body.266, label %for.end.279

for.body.266:                                     ; preds = %for.cond.264
  %168 = load i64, i64* %i245, align 8
  %169 = load %struct._object*, %struct._object** %tmp, align 8
  %170 = bitcast %struct._object* %169 to %struct.PyListObject*
  %ob_item269 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %170, i32 0, i32 1
  %171 = load %struct._object**, %struct._object*** %ob_item269, align 8
  %arrayidx270 = getelementptr %struct._object*, %struct._object** %171, i64 %168
  %172 = load %struct._object*, %struct._object** %arrayidx270, align 8
  %173 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call271 = call i32 @obj2ast_expr(%struct._object* %172, %struct._expr** %value268, %struct._arena* %173)
  store i32 %call271, i32* %res241, align 4
  %174 = load i32, i32* %res241, align 4
  %cmp272 = icmp ne i32 %174, 0
  br i1 %cmp272, label %if.then.273, label %if.end.274

if.then.273:                                      ; preds = %for.body.266
  br label %failed

if.end.274:                                       ; preds = %for.body.266
  %175 = load %struct._expr*, %struct._expr** %value268, align 8
  %176 = bitcast %struct._expr* %175 to i8*
  %177 = load i64, i64* %i245, align 8
  %178 = load %struct.asdl_seq*, %struct.asdl_seq** %defaults, align 8
  %elements275 = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %178, i32 0, i32 1
  %arrayidx276 = getelementptr [1 x i8*], [1 x i8*]* %elements275, i32 0, i64 %177
  store i8* %176, i8** %arrayidx276, align 8
  br label %for.inc.277

for.inc.277:                                      ; preds = %if.end.274
  %179 = load i64, i64* %i245, align 8
  %inc278 = add i64 %179, 1
  store i64 %inc278, i64* %i245, align 8
  br label %for.cond.264

for.end.279:                                      ; preds = %for.cond.264
  br label %do.body.280

do.body.280:                                      ; preds = %for.end.279
  %180 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %180, %struct._object** %_py_tmp282, align 8
  %181 = load %struct._object*, %struct._object** %_py_tmp282, align 8
  %cmp283 = icmp ne %struct._object* %181, null
  br i1 %cmp283, label %if.then.284, label %if.end.297

if.then.284:                                      ; preds = %do.body.280
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.285

do.body.285:                                      ; preds = %if.then.284
  %182 = load %struct._object*, %struct._object** %_py_tmp282, align 8
  store %struct._object* %182, %struct._object** %_py_decref_tmp287, align 8
  %183 = load %struct._object*, %struct._object** %_py_decref_tmp287, align 8
  %ob_refcnt288 = getelementptr inbounds %struct._object, %struct._object* %183, i32 0, i32 0
  %184 = load i64, i64* %ob_refcnt288, align 8
  %dec289 = add i64 %184, -1
  store i64 %dec289, i64* %ob_refcnt288, align 8
  %cmp290 = icmp ne i64 %dec289, 0
  br i1 %cmp290, label %if.then.291, label %if.else.292

if.then.291:                                      ; preds = %do.body.285
  br label %if.end.295

if.else.292:                                      ; preds = %do.body.285
  %185 = load %struct._object*, %struct._object** %_py_decref_tmp287, align 8
  %ob_type293 = getelementptr inbounds %struct._object, %struct._object* %185, i32 0, i32 1
  %186 = load %struct._typeobject*, %struct._typeobject** %ob_type293, align 8
  %tp_dealloc294 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %186, i32 0, i32 4
  %187 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc294, align 8
  %188 = load %struct._object*, %struct._object** %_py_decref_tmp287, align 8
  call void %187(%struct._object* %188)
  br label %if.end.295

if.end.295:                                       ; preds = %if.else.292, %if.then.291
  br label %do.end.296

do.end.296:                                       ; preds = %if.end.295
  br label %if.end.297

if.end.297:                                       ; preds = %do.end.296, %do.body.280
  br label %do.end.298

do.end.298:                                       ; preds = %if.end.297
  br label %if.end.300

if.else.299:                                      ; preds = %if.end.236
  %189 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %189, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.323, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.300:                                       ; preds = %do.end.298
  %190 = load %struct.asdl_seq*, %struct.asdl_seq** %args, align 8
  %191 = load %struct._arg*, %struct._arg** %vararg, align 8
  %192 = load %struct.asdl_seq*, %struct.asdl_seq** %kwonlyargs, align 8
  %193 = load %struct.asdl_seq*, %struct.asdl_seq** %kw_defaults, align 8
  %194 = load %struct._arg*, %struct._arg** %kwarg, align 8
  %195 = load %struct.asdl_seq*, %struct.asdl_seq** %defaults, align 8
  %196 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call301 = call %struct._arguments* @_Py_arguments(%struct.asdl_seq* %190, %struct._arg* %191, %struct.asdl_seq* %192, %struct.asdl_seq* %193, %struct._arg* %194, %struct.asdl_seq* %195, %struct._arena* %196)
  %197 = load %struct._arguments**, %struct._arguments*** %out.addr, align 8
  store %struct._arguments* %call301, %struct._arguments** %197, align 8
  store i32 0, i32* %retval
  br label %return

failed:                                           ; preds = %if.then.273, %if.then.262, %if.then.254, %if.then.248, %if.then.214, %if.then.210, %if.then.175, %if.then.164, %if.then.156, %if.then.150, %if.then.111, %if.then.100, %if.then.92, %if.then.86, %if.then.52, %if.then.48, %if.then.25, %if.then.19, %if.then.13, %if.then.11
  br label %do.body.302

do.body.302:                                      ; preds = %failed
  %198 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %198, %struct._object** %_py_xdecref_tmp, align 8
  %199 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp304 = icmp ne %struct._object* %199, null
  br i1 %cmp304, label %if.then.305, label %if.end.318

if.then.305:                                      ; preds = %do.body.302
  br label %do.body.306

do.body.306:                                      ; preds = %if.then.305
  %200 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %200, %struct._object** %_py_decref_tmp308, align 8
  %201 = load %struct._object*, %struct._object** %_py_decref_tmp308, align 8
  %ob_refcnt309 = getelementptr inbounds %struct._object, %struct._object* %201, i32 0, i32 0
  %202 = load i64, i64* %ob_refcnt309, align 8
  %dec310 = add i64 %202, -1
  store i64 %dec310, i64* %ob_refcnt309, align 8
  %cmp311 = icmp ne i64 %dec310, 0
  br i1 %cmp311, label %if.then.312, label %if.else.313

if.then.312:                                      ; preds = %do.body.306
  br label %if.end.316

if.else.313:                                      ; preds = %do.body.306
  %203 = load %struct._object*, %struct._object** %_py_decref_tmp308, align 8
  %ob_type314 = getelementptr inbounds %struct._object, %struct._object* %203, i32 0, i32 1
  %204 = load %struct._typeobject*, %struct._typeobject** %ob_type314, align 8
  %tp_dealloc315 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %204, i32 0, i32 4
  %205 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc315, align 8
  %206 = load %struct._object*, %struct._object** %_py_decref_tmp308, align 8
  call void %205(%struct._object* %206)
  br label %if.end.316

if.end.316:                                       ; preds = %if.else.313, %if.then.312
  br label %do.end.317

do.end.317:                                       ; preds = %if.end.316
  br label %if.end.318

if.end.318:                                       ; preds = %do.end.317, %do.body.302
  br label %do.end.319

do.end.319:                                       ; preds = %if.end.318
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %do.end.319, %if.end.300, %if.else.299, %if.else.201, %if.else.137, %if.else.39
  %207 = load i32, i32* %retval
  ret i32 %207
}

; Function Attrs: nounwind uwtable
define internal i32 @exists_not_none(%struct._object* %obj, %struct._Py_Identifier* %id) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %id.addr = alloca %struct._Py_Identifier*, align 8
  %isnone = alloca i32, align 4
  %attr = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._Py_Identifier* %id, %struct._Py_Identifier** %id.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1 = load %struct._Py_Identifier*, %struct._Py_Identifier** %id.addr, align 8
  %call = call %struct._object* @_PyObject_GetAttrId(%struct._object* %0, %struct._Py_Identifier* %1)
  store %struct._object* %call, %struct._object** %attr, align 8
  %2 = load %struct._object*, %struct._object** %attr, align 8
  %tobool = icmp ne %struct._object* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @PyErr_Clear()
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %attr, align 8
  %cmp = icmp eq %struct._object* %3, @_Py_NoneStruct
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %isnone, align 4
  br label %do.body

do.body:                                          ; preds = %if.end
  %4 = load %struct._object*, %struct._object** %attr, align 8
  store %struct._object* %4, %struct._object** %_py_decref_tmp, align 8
  %5 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0
  %6 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %6, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp1 = icmp ne i64 %dec, 0
  br i1 %cmp1, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %do.body
  br label %if.end.4

if.else:                                          ; preds = %do.body
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 4
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %9(%struct._object* %10)
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  br label %do.end

do.end:                                           ; preds = %if.end.4
  %11 = load i32, i32* %isnone, align 4
  %tobool5 = icmp ne i32 %11, 0
  %lnot = xor i1 %tobool5, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %retval
  br label %return

return:                                           ; preds = %do.end, %if.then
  %12 = load i32, i32* %retval
  ret i32 %12
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_keyword(%struct._object* %obj, %struct._keyword** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._keyword**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %tmp = alloca %struct._object*, align 8
  %arg = alloca %struct._object*, align 8
  %value = alloca %struct._expr*, align 8
  %res = alloca i32, align 4
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %res26 = alloca i32, align 4
  %_py_tmp37 = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp63 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._keyword** %out, %struct._keyword*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  store %struct._object* null, %struct._object** %tmp, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i32 @_PyObject_HasAttrId(%struct._object* %0, %struct._Py_Identifier* @PyId_arg)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else.20

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call4 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1, %struct._Py_Identifier* @PyId_arg)
  store %struct._object* %call4, %struct._object** %tmp, align 8
  %2 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp = icmp eq %struct._object* %2, null
  br i1 %cmp, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %if.then
  br label %failed

if.end:                                           ; preds = %if.then
  %3 = load %struct._object*, %struct._object** %tmp, align 8
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call6 = call i32 @obj2ast_identifier(%struct._object* %3, %struct._object** %arg, %struct._arena* %4)
  store i32 %call6, i32* %res, align 4
  %5 = load i32, i32* %res, align 4
  %cmp7 = icmp ne i32 %5, 0
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end
  br label %failed

if.end.9:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.end.9
  %6 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %6, %struct._object** %_py_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp11 = icmp ne %struct._object* %7, null
  br i1 %cmp11, label %if.then.12, label %if.end.18

if.then.12:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.13

do.body.13:                                       ; preds = %if.then.12
  %8 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0
  %10 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %10, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp15 = icmp ne i64 %dec, 0
  br i1 %cmp15, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %do.body.13
  br label %if.end.17

if.else:                                          ; preds = %do.body.13
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %13(%struct._object* %14)
  br label %if.end.17

if.end.17:                                        ; preds = %if.else, %if.then.16
  br label %do.end

do.end:                                           ; preds = %if.end.17
  br label %if.end.18

if.end.18:                                        ; preds = %do.end, %do.body
  br label %do.end.19

do.end.19:                                        ; preds = %if.end.18
  br label %if.end.21

if.else.20:                                       ; preds = %entry
  %15 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.325, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.21:                                        ; preds = %do.end.19
  %16 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call22 = call i32 @_PyObject_HasAttrId(%struct._object* %16, %struct._Py_Identifier* @PyId_value)
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.then.24, label %if.else.54

if.then.24:                                       ; preds = %if.end.21
  %17 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call27 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %17, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call27, %struct._object** %tmp, align 8
  %18 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp28 = icmp eq %struct._object* %18, null
  br i1 %cmp28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.then.24
  br label %failed

if.end.30:                                        ; preds = %if.then.24
  %19 = load %struct._object*, %struct._object** %tmp, align 8
  %20 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call31 = call i32 @obj2ast_expr(%struct._object* %19, %struct._expr** %value, %struct._arena* %20)
  store i32 %call31, i32* %res26, align 4
  %21 = load i32, i32* %res26, align 4
  %cmp32 = icmp ne i32 %21, 0
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.end.30
  br label %failed

if.end.34:                                        ; preds = %if.end.30
  br label %do.body.35

do.body.35:                                       ; preds = %if.end.34
  %22 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %22, %struct._object** %_py_tmp37, align 8
  %23 = load %struct._object*, %struct._object** %_py_tmp37, align 8
  %cmp38 = icmp ne %struct._object* %23, null
  br i1 %cmp38, label %if.then.39, label %if.end.52

if.then.39:                                       ; preds = %do.body.35
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.40

do.body.40:                                       ; preds = %if.then.39
  %24 = load %struct._object*, %struct._object** %_py_tmp37, align 8
  store %struct._object* %24, %struct._object** %_py_decref_tmp42, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt43, align 8
  %dec44 = add i64 %26, -1
  store i64 %dec44, i64* %ob_refcnt43, align 8
  %cmp45 = icmp ne i64 %dec44, 0
  br i1 %cmp45, label %if.then.46, label %if.else.47

if.then.46:                                       ; preds = %do.body.40
  br label %if.end.50

if.else.47:                                       ; preds = %do.body.40
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  call void %29(%struct._object* %30)
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  br label %do.end.51

do.end.51:                                        ; preds = %if.end.50
  br label %if.end.52

if.end.52:                                        ; preds = %do.end.51, %do.body.35
  br label %do.end.53

do.end.53:                                        ; preds = %if.end.52
  br label %if.end.55

if.else.54:                                       ; preds = %if.end.21
  %31 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %31, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.326, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.55:                                        ; preds = %do.end.53
  %32 = load %struct._object*, %struct._object** %arg, align 8
  %33 = load %struct._expr*, %struct._expr** %value, align 8
  %34 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call56 = call %struct._keyword* @_Py_keyword(%struct._object* %32, %struct._expr* %33, %struct._arena* %34)
  %35 = load %struct._keyword**, %struct._keyword*** %out.addr, align 8
  store %struct._keyword* %call56, %struct._keyword** %35, align 8
  store i32 0, i32* %retval
  br label %return

failed:                                           ; preds = %if.then.33, %if.then.29, %if.then.8, %if.then.5
  br label %do.body.57

do.body.57:                                       ; preds = %failed
  %36 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %36, %struct._object** %_py_xdecref_tmp, align 8
  %37 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp59 = icmp ne %struct._object* %37, null
  br i1 %cmp59, label %if.then.60, label %if.end.73

if.then.60:                                       ; preds = %do.body.57
  br label %do.body.61

do.body.61:                                       ; preds = %if.then.60
  %38 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %38, %struct._object** %_py_decref_tmp63, align 8
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0
  %40 = load i64, i64* %ob_refcnt64, align 8
  %dec65 = add i64 %40, -1
  store i64 %dec65, i64* %ob_refcnt64, align 8
  %cmp66 = icmp ne i64 %dec65, 0
  br i1 %cmp66, label %if.then.67, label %if.else.68

if.then.67:                                       ; preds = %do.body.61
  br label %if.end.71

if.else.68:                                       ; preds = %do.body.61
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  %ob_type69 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type69, align 8
  %tp_dealloc70 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc70, align 8
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  call void %43(%struct._object* %44)
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.68, %if.then.67
  br label %do.end.72

do.end.72:                                        ; preds = %if.end.71
  br label %if.end.73

if.end.73:                                        ; preds = %do.end.72, %do.body.57
  br label %do.end.74

do.end.74:                                        ; preds = %if.end.73
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %do.end.74, %if.end.55, %if.else.54, %if.else.20
  %45 = load i32, i32* %retval
  ret i32 %45
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_operator(%struct._object* %obj, i32* %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca i32*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %isinstance = alloca i32, align 4
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store i32* %out, i32** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1 = load %struct._typeobject*, %struct._typeobject** @Add_type, align 8
  %2 = bitcast %struct._typeobject* %1 to %struct._object*
  %call = call i32 @PyObject_IsInstance(%struct._object* %0, %struct._object* %2)
  store i32 %call, i32* %isinstance, align 4
  %3 = load i32, i32* %isinstance, align 4
  %cmp = icmp eq i32 %3, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %isinstance, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  %5 = load i32*, i32** %out.addr, align 8
  store i32 1, i32* %5, align 4
  store i32 0, i32* %retval
  br label %return

if.end.2:                                         ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %obj.addr, align 8
  %7 = load %struct._typeobject*, %struct._typeobject** @Sub_type, align 8
  %8 = bitcast %struct._typeobject* %7 to %struct._object*
  %call3 = call i32 @PyObject_IsInstance(%struct._object* %6, %struct._object* %8)
  store i32 %call3, i32* %isinstance, align 4
  %9 = load i32, i32* %isinstance, align 4
  %cmp4 = icmp eq i32 %9, -1
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.2
  store i32 1, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.end.2
  %10 = load i32, i32* %isinstance, align 4
  %tobool7 = icmp ne i32 %10, 0
  br i1 %tobool7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.6
  %11 = load i32*, i32** %out.addr, align 8
  store i32 2, i32* %11, align 4
  store i32 0, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %12 = load %struct._object*, %struct._object** %obj.addr, align 8
  %13 = load %struct._typeobject*, %struct._typeobject** @Mult_type, align 8
  %14 = bitcast %struct._typeobject* %13 to %struct._object*
  %call10 = call i32 @PyObject_IsInstance(%struct._object* %12, %struct._object* %14)
  store i32 %call10, i32* %isinstance, align 4
  %15 = load i32, i32* %isinstance, align 4
  %cmp11 = icmp eq i32 %15, -1
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end.9
  store i32 1, i32* %retval
  br label %return

if.end.13:                                        ; preds = %if.end.9
  %16 = load i32, i32* %isinstance, align 4
  %tobool14 = icmp ne i32 %16, 0
  br i1 %tobool14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.13
  %17 = load i32*, i32** %out.addr, align 8
  store i32 3, i32* %17, align 4
  store i32 0, i32* %retval
  br label %return

if.end.16:                                        ; preds = %if.end.13
  %18 = load %struct._object*, %struct._object** %obj.addr, align 8
  %19 = load %struct._typeobject*, %struct._typeobject** @Div_type, align 8
  %20 = bitcast %struct._typeobject* %19 to %struct._object*
  %call17 = call i32 @PyObject_IsInstance(%struct._object* %18, %struct._object* %20)
  store i32 %call17, i32* %isinstance, align 4
  %21 = load i32, i32* %isinstance, align 4
  %cmp18 = icmp eq i32 %21, -1
  br i1 %cmp18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.16
  store i32 1, i32* %retval
  br label %return

if.end.20:                                        ; preds = %if.end.16
  %22 = load i32, i32* %isinstance, align 4
  %tobool21 = icmp ne i32 %22, 0
  br i1 %tobool21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.20
  %23 = load i32*, i32** %out.addr, align 8
  store i32 4, i32* %23, align 4
  store i32 0, i32* %retval
  br label %return

if.end.23:                                        ; preds = %if.end.20
  %24 = load %struct._object*, %struct._object** %obj.addr, align 8
  %25 = load %struct._typeobject*, %struct._typeobject** @Mod_type, align 8
  %26 = bitcast %struct._typeobject* %25 to %struct._object*
  %call24 = call i32 @PyObject_IsInstance(%struct._object* %24, %struct._object* %26)
  store i32 %call24, i32* %isinstance, align 4
  %27 = load i32, i32* %isinstance, align 4
  %cmp25 = icmp eq i32 %27, -1
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.23
  store i32 1, i32* %retval
  br label %return

if.end.27:                                        ; preds = %if.end.23
  %28 = load i32, i32* %isinstance, align 4
  %tobool28 = icmp ne i32 %28, 0
  br i1 %tobool28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.end.27
  %29 = load i32*, i32** %out.addr, align 8
  store i32 5, i32* %29, align 4
  store i32 0, i32* %retval
  br label %return

if.end.30:                                        ; preds = %if.end.27
  %30 = load %struct._object*, %struct._object** %obj.addr, align 8
  %31 = load %struct._typeobject*, %struct._typeobject** @Pow_type, align 8
  %32 = bitcast %struct._typeobject* %31 to %struct._object*
  %call31 = call i32 @PyObject_IsInstance(%struct._object* %30, %struct._object* %32)
  store i32 %call31, i32* %isinstance, align 4
  %33 = load i32, i32* %isinstance, align 4
  %cmp32 = icmp eq i32 %33, -1
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.end.30
  store i32 1, i32* %retval
  br label %return

if.end.34:                                        ; preds = %if.end.30
  %34 = load i32, i32* %isinstance, align 4
  %tobool35 = icmp ne i32 %34, 0
  br i1 %tobool35, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %if.end.34
  %35 = load i32*, i32** %out.addr, align 8
  store i32 6, i32* %35, align 4
  store i32 0, i32* %retval
  br label %return

if.end.37:                                        ; preds = %if.end.34
  %36 = load %struct._object*, %struct._object** %obj.addr, align 8
  %37 = load %struct._typeobject*, %struct._typeobject** @LShift_type, align 8
  %38 = bitcast %struct._typeobject* %37 to %struct._object*
  %call38 = call i32 @PyObject_IsInstance(%struct._object* %36, %struct._object* %38)
  store i32 %call38, i32* %isinstance, align 4
  %39 = load i32, i32* %isinstance, align 4
  %cmp39 = icmp eq i32 %39, -1
  br i1 %cmp39, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %if.end.37
  store i32 1, i32* %retval
  br label %return

if.end.41:                                        ; preds = %if.end.37
  %40 = load i32, i32* %isinstance, align 4
  %tobool42 = icmp ne i32 %40, 0
  br i1 %tobool42, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.end.41
  %41 = load i32*, i32** %out.addr, align 8
  store i32 7, i32* %41, align 4
  store i32 0, i32* %retval
  br label %return

if.end.44:                                        ; preds = %if.end.41
  %42 = load %struct._object*, %struct._object** %obj.addr, align 8
  %43 = load %struct._typeobject*, %struct._typeobject** @RShift_type, align 8
  %44 = bitcast %struct._typeobject* %43 to %struct._object*
  %call45 = call i32 @PyObject_IsInstance(%struct._object* %42, %struct._object* %44)
  store i32 %call45, i32* %isinstance, align 4
  %45 = load i32, i32* %isinstance, align 4
  %cmp46 = icmp eq i32 %45, -1
  br i1 %cmp46, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %if.end.44
  store i32 1, i32* %retval
  br label %return

if.end.48:                                        ; preds = %if.end.44
  %46 = load i32, i32* %isinstance, align 4
  %tobool49 = icmp ne i32 %46, 0
  br i1 %tobool49, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %if.end.48
  %47 = load i32*, i32** %out.addr, align 8
  store i32 8, i32* %47, align 4
  store i32 0, i32* %retval
  br label %return

if.end.51:                                        ; preds = %if.end.48
  %48 = load %struct._object*, %struct._object** %obj.addr, align 8
  %49 = load %struct._typeobject*, %struct._typeobject** @BitOr_type, align 8
  %50 = bitcast %struct._typeobject* %49 to %struct._object*
  %call52 = call i32 @PyObject_IsInstance(%struct._object* %48, %struct._object* %50)
  store i32 %call52, i32* %isinstance, align 4
  %51 = load i32, i32* %isinstance, align 4
  %cmp53 = icmp eq i32 %51, -1
  br i1 %cmp53, label %if.then.54, label %if.end.55

if.then.54:                                       ; preds = %if.end.51
  store i32 1, i32* %retval
  br label %return

if.end.55:                                        ; preds = %if.end.51
  %52 = load i32, i32* %isinstance, align 4
  %tobool56 = icmp ne i32 %52, 0
  br i1 %tobool56, label %if.then.57, label %if.end.58

if.then.57:                                       ; preds = %if.end.55
  %53 = load i32*, i32** %out.addr, align 8
  store i32 9, i32* %53, align 4
  store i32 0, i32* %retval
  br label %return

if.end.58:                                        ; preds = %if.end.55
  %54 = load %struct._object*, %struct._object** %obj.addr, align 8
  %55 = load %struct._typeobject*, %struct._typeobject** @BitXor_type, align 8
  %56 = bitcast %struct._typeobject* %55 to %struct._object*
  %call59 = call i32 @PyObject_IsInstance(%struct._object* %54, %struct._object* %56)
  store i32 %call59, i32* %isinstance, align 4
  %57 = load i32, i32* %isinstance, align 4
  %cmp60 = icmp eq i32 %57, -1
  br i1 %cmp60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.end.58
  store i32 1, i32* %retval
  br label %return

if.end.62:                                        ; preds = %if.end.58
  %58 = load i32, i32* %isinstance, align 4
  %tobool63 = icmp ne i32 %58, 0
  br i1 %tobool63, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %if.end.62
  %59 = load i32*, i32** %out.addr, align 8
  store i32 10, i32* %59, align 4
  store i32 0, i32* %retval
  br label %return

if.end.65:                                        ; preds = %if.end.62
  %60 = load %struct._object*, %struct._object** %obj.addr, align 8
  %61 = load %struct._typeobject*, %struct._typeobject** @BitAnd_type, align 8
  %62 = bitcast %struct._typeobject* %61 to %struct._object*
  %call66 = call i32 @PyObject_IsInstance(%struct._object* %60, %struct._object* %62)
  store i32 %call66, i32* %isinstance, align 4
  %63 = load i32, i32* %isinstance, align 4
  %cmp67 = icmp eq i32 %63, -1
  br i1 %cmp67, label %if.then.68, label %if.end.69

if.then.68:                                       ; preds = %if.end.65
  store i32 1, i32* %retval
  br label %return

if.end.69:                                        ; preds = %if.end.65
  %64 = load i32, i32* %isinstance, align 4
  %tobool70 = icmp ne i32 %64, 0
  br i1 %tobool70, label %if.then.71, label %if.end.72

if.then.71:                                       ; preds = %if.end.69
  %65 = load i32*, i32** %out.addr, align 8
  store i32 11, i32* %65, align 4
  store i32 0, i32* %retval
  br label %return

if.end.72:                                        ; preds = %if.end.69
  %66 = load %struct._object*, %struct._object** %obj.addr, align 8
  %67 = load %struct._typeobject*, %struct._typeobject** @FloorDiv_type, align 8
  %68 = bitcast %struct._typeobject* %67 to %struct._object*
  %call73 = call i32 @PyObject_IsInstance(%struct._object* %66, %struct._object* %68)
  store i32 %call73, i32* %isinstance, align 4
  %69 = load i32, i32* %isinstance, align 4
  %cmp74 = icmp eq i32 %69, -1
  br i1 %cmp74, label %if.then.75, label %if.end.76

if.then.75:                                       ; preds = %if.end.72
  store i32 1, i32* %retval
  br label %return

if.end.76:                                        ; preds = %if.end.72
  %70 = load i32, i32* %isinstance, align 4
  %tobool77 = icmp ne i32 %70, 0
  br i1 %tobool77, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %if.end.76
  %71 = load i32*, i32** %out.addr, align 8
  store i32 12, i32* %71, align 4
  store i32 0, i32* %retval
  br label %return

if.end.79:                                        ; preds = %if.end.76
  %72 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %73 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call80 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %72, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.327, i32 0, i32 0), %struct._object* %73)
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.79, %if.then.78, %if.then.75, %if.then.71, %if.then.68, %if.then.64, %if.then.61, %if.then.57, %if.then.54, %if.then.50, %if.then.47, %if.then.43, %if.then.40, %if.then.36, %if.then.33, %if.then.29, %if.then.26, %if.then.22, %if.then.19, %if.then.15, %if.then.12, %if.then.8, %if.then.5, %if.then.1, %if.then
  %74 = load i32, i32* %retval
  ret i32 %74
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_withitem(%struct._object* %obj, %struct._withitem** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._withitem**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %tmp = alloca %struct._object*, align 8
  %context_expr = alloca %struct._expr*, align 8
  %optional_vars = alloca %struct._expr*, align 8
  %res = alloca i32, align 4
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %res26 = alloca i32, align 4
  %_py_tmp37 = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp63 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._withitem** %out, %struct._withitem*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  store %struct._object* null, %struct._object** %tmp, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i32 @_PyObject_HasAttrId(%struct._object* %0, %struct._Py_Identifier* @PyId_context_expr)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else.20

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call4 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1, %struct._Py_Identifier* @PyId_context_expr)
  store %struct._object* %call4, %struct._object** %tmp, align 8
  %2 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp = icmp eq %struct._object* %2, null
  br i1 %cmp, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %if.then
  br label %failed

if.end:                                           ; preds = %if.then
  %3 = load %struct._object*, %struct._object** %tmp, align 8
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call6 = call i32 @obj2ast_expr(%struct._object* %3, %struct._expr** %context_expr, %struct._arena* %4)
  store i32 %call6, i32* %res, align 4
  %5 = load i32, i32* %res, align 4
  %cmp7 = icmp ne i32 %5, 0
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end
  br label %failed

if.end.9:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.end.9
  %6 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %6, %struct._object** %_py_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp11 = icmp ne %struct._object* %7, null
  br i1 %cmp11, label %if.then.12, label %if.end.18

if.then.12:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.13

do.body.13:                                       ; preds = %if.then.12
  %8 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0
  %10 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %10, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp15 = icmp ne i64 %dec, 0
  br i1 %cmp15, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %do.body.13
  br label %if.end.17

if.else:                                          ; preds = %do.body.13
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %13(%struct._object* %14)
  br label %if.end.17

if.end.17:                                        ; preds = %if.else, %if.then.16
  br label %do.end

do.end:                                           ; preds = %if.end.17
  br label %if.end.18

if.end.18:                                        ; preds = %do.end, %do.body
  br label %do.end.19

do.end.19:                                        ; preds = %if.end.18
  br label %if.end.21

if.else.20:                                       ; preds = %entry
  %15 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.328, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.21:                                        ; preds = %do.end.19
  %16 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call22 = call i32 @exists_not_none(%struct._object* %16, %struct._Py_Identifier* @PyId_optional_vars)
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.then.24, label %if.else.54

if.then.24:                                       ; preds = %if.end.21
  %17 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call27 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %17, %struct._Py_Identifier* @PyId_optional_vars)
  store %struct._object* %call27, %struct._object** %tmp, align 8
  %18 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp28 = icmp eq %struct._object* %18, null
  br i1 %cmp28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.then.24
  br label %failed

if.end.30:                                        ; preds = %if.then.24
  %19 = load %struct._object*, %struct._object** %tmp, align 8
  %20 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call31 = call i32 @obj2ast_expr(%struct._object* %19, %struct._expr** %optional_vars, %struct._arena* %20)
  store i32 %call31, i32* %res26, align 4
  %21 = load i32, i32* %res26, align 4
  %cmp32 = icmp ne i32 %21, 0
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.end.30
  br label %failed

if.end.34:                                        ; preds = %if.end.30
  br label %do.body.35

do.body.35:                                       ; preds = %if.end.34
  %22 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %22, %struct._object** %_py_tmp37, align 8
  %23 = load %struct._object*, %struct._object** %_py_tmp37, align 8
  %cmp38 = icmp ne %struct._object* %23, null
  br i1 %cmp38, label %if.then.39, label %if.end.52

if.then.39:                                       ; preds = %do.body.35
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.40

do.body.40:                                       ; preds = %if.then.39
  %24 = load %struct._object*, %struct._object** %_py_tmp37, align 8
  store %struct._object* %24, %struct._object** %_py_decref_tmp42, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt43, align 8
  %dec44 = add i64 %26, -1
  store i64 %dec44, i64* %ob_refcnt43, align 8
  %cmp45 = icmp ne i64 %dec44, 0
  br i1 %cmp45, label %if.then.46, label %if.else.47

if.then.46:                                       ; preds = %do.body.40
  br label %if.end.50

if.else.47:                                       ; preds = %do.body.40
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  call void %29(%struct._object* %30)
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  br label %do.end.51

do.end.51:                                        ; preds = %if.end.50
  br label %if.end.52

if.end.52:                                        ; preds = %do.end.51, %do.body.35
  br label %do.end.53

do.end.53:                                        ; preds = %if.end.52
  br label %if.end.55

if.else.54:                                       ; preds = %if.end.21
  store %struct._expr* null, %struct._expr** %optional_vars, align 8
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.54, %do.end.53
  %31 = load %struct._expr*, %struct._expr** %context_expr, align 8
  %32 = load %struct._expr*, %struct._expr** %optional_vars, align 8
  %33 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call56 = call %struct._withitem* @_Py_withitem(%struct._expr* %31, %struct._expr* %32, %struct._arena* %33)
  %34 = load %struct._withitem**, %struct._withitem*** %out.addr, align 8
  store %struct._withitem* %call56, %struct._withitem** %34, align 8
  store i32 0, i32* %retval
  br label %return

failed:                                           ; preds = %if.then.33, %if.then.29, %if.then.8, %if.then.5
  br label %do.body.57

do.body.57:                                       ; preds = %failed
  %35 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %35, %struct._object** %_py_xdecref_tmp, align 8
  %36 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp59 = icmp ne %struct._object* %36, null
  br i1 %cmp59, label %if.then.60, label %if.end.73

if.then.60:                                       ; preds = %do.body.57
  br label %do.body.61

do.body.61:                                       ; preds = %if.then.60
  %37 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %37, %struct._object** %_py_decref_tmp63, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0
  %39 = load i64, i64* %ob_refcnt64, align 8
  %dec65 = add i64 %39, -1
  store i64 %dec65, i64* %ob_refcnt64, align 8
  %cmp66 = icmp ne i64 %dec65, 0
  br i1 %cmp66, label %if.then.67, label %if.else.68

if.then.67:                                       ; preds = %do.body.61
  br label %if.end.71

if.else.68:                                       ; preds = %do.body.61
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  %ob_type69 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type69, align 8
  %tp_dealloc70 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc70, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  call void %42(%struct._object* %43)
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.68, %if.then.67
  br label %do.end.72

do.end.72:                                        ; preds = %if.end.71
  br label %if.end.73

if.end.73:                                        ; preds = %do.end.72, %do.body.57
  br label %do.end.74

do.end.74:                                        ; preds = %if.end.73
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %do.end.74, %if.end.55, %if.else.20
  %44 = load i32, i32* %retval
  ret i32 %44
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_excepthandler(%struct._object* %obj, %struct._excepthandler** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._excepthandler**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %isinstance = alloca i32, align 4
  %tmp = alloca %struct._object*, align 8
  %lineno = alloca i32, align 4
  %col_offset = alloca i32, align 4
  %res = alloca i32, align 4
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %res29 = alloca i32, align 4
  %_py_tmp40 = alloca %struct._object*, align 8
  %_py_decref_tmp45 = alloca %struct._object*, align 8
  %type = alloca %struct._expr*, align 8
  %name = alloca %struct._object*, align 8
  %body = alloca %struct.asdl_seq*, align 8
  %res72 = alloca i32, align 4
  %_py_tmp83 = alloca %struct._object*, align 8
  %_py_decref_tmp88 = alloca %struct._object*, align 8
  %res106 = alloca i32, align 4
  %_py_tmp117 = alloca %struct._object*, align 8
  %_py_decref_tmp122 = alloca %struct._object*, align 8
  %res140 = alloca i32, align 4
  %len = alloca i64, align 8
  %i = alloca i64, align 8
  %value = alloca %struct._stmt*, align 8
  %_py_tmp166 = alloca %struct._object*, align 8
  %_py_decref_tmp171 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp197 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._excepthandler** %out, %struct._excepthandler*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  store %struct._object* null, %struct._object** %tmp, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %cmp = icmp eq %struct._object* %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._excepthandler**, %struct._excepthandler*** %out.addr, align 8
  store %struct._excepthandler* null, %struct._excepthandler** %1, align 8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i32 @_PyObject_HasAttrId(%struct._object* %2, %struct._Py_Identifier* @PyId_lineno)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then.3, label %if.else.23

if.then.3:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call5 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %3, %struct._Py_Identifier* @PyId_lineno)
  store %struct._object* %call5, %struct._object** %tmp, align 8
  %4 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp6 = icmp eq %struct._object* %4, null
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.then.3
  br label %failed

if.end.8:                                         ; preds = %if.then.3
  %5 = load %struct._object*, %struct._object** %tmp, align 8
  %6 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call9 = call i32 @obj2ast_int(%struct._object* %5, i32* %lineno, %struct._arena* %6)
  store i32 %call9, i32* %res, align 4
  %7 = load i32, i32* %res, align 4
  %cmp10 = icmp ne i32 %7, 0
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.8
  br label %failed

if.end.12:                                        ; preds = %if.end.8
  br label %do.body

do.body:                                          ; preds = %if.end.12
  %8 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %8, %struct._object** %_py_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp14 = icmp ne %struct._object* %9, null
  br i1 %cmp14, label %if.then.15, label %if.end.21

if.then.15:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.16

do.body.16:                                       ; preds = %if.then.15
  %10 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0
  %12 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %12, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp18 = icmp ne i64 %dec, 0
  br i1 %cmp18, label %if.then.19, label %if.else

if.then.19:                                       ; preds = %do.body.16
  br label %if.end.20

if.else:                                          ; preds = %do.body.16
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %15(%struct._object* %16)
  br label %if.end.20

if.end.20:                                        ; preds = %if.else, %if.then.19
  br label %do.end

do.end:                                           ; preds = %if.end.20
  br label %if.end.21

if.end.21:                                        ; preds = %do.end, %do.body
  br label %do.end.22

do.end.22:                                        ; preds = %if.end.21
  br label %if.end.24

if.else.23:                                       ; preds = %if.end
  %17 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.329, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.24:                                        ; preds = %do.end.22
  %18 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call25 = call i32 @_PyObject_HasAttrId(%struct._object* %18, %struct._Py_Identifier* @PyId_col_offset)
  %tobool26 = icmp ne i32 %call25, 0
  br i1 %tobool26, label %if.then.27, label %if.else.57

if.then.27:                                       ; preds = %if.end.24
  %19 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call30 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %19, %struct._Py_Identifier* @PyId_col_offset)
  store %struct._object* %call30, %struct._object** %tmp, align 8
  %20 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp31 = icmp eq %struct._object* %20, null
  br i1 %cmp31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.then.27
  br label %failed

if.end.33:                                        ; preds = %if.then.27
  %21 = load %struct._object*, %struct._object** %tmp, align 8
  %22 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call34 = call i32 @obj2ast_int(%struct._object* %21, i32* %col_offset, %struct._arena* %22)
  store i32 %call34, i32* %res29, align 4
  %23 = load i32, i32* %res29, align 4
  %cmp35 = icmp ne i32 %23, 0
  br i1 %cmp35, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %if.end.33
  br label %failed

if.end.37:                                        ; preds = %if.end.33
  br label %do.body.38

do.body.38:                                       ; preds = %if.end.37
  %24 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %24, %struct._object** %_py_tmp40, align 8
  %25 = load %struct._object*, %struct._object** %_py_tmp40, align 8
  %cmp41 = icmp ne %struct._object* %25, null
  br i1 %cmp41, label %if.then.42, label %if.end.55

if.then.42:                                       ; preds = %do.body.38
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.43

do.body.43:                                       ; preds = %if.then.42
  %26 = load %struct._object*, %struct._object** %_py_tmp40, align 8
  store %struct._object* %26, %struct._object** %_py_decref_tmp45, align 8
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0
  %28 = load i64, i64* %ob_refcnt46, align 8
  %dec47 = add i64 %28, -1
  store i64 %dec47, i64* %ob_refcnt46, align 8
  %cmp48 = icmp ne i64 %dec47, 0
  br i1 %cmp48, label %if.then.49, label %if.else.50

if.then.49:                                       ; preds = %do.body.43
  br label %if.end.53

if.else.50:                                       ; preds = %do.body.43
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8
  %tp_dealloc52 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc52, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  call void %31(%struct._object* %32)
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.50, %if.then.49
  br label %do.end.54

do.end.54:                                        ; preds = %if.end.53
  br label %if.end.55

if.end.55:                                        ; preds = %do.end.54, %do.body.38
  br label %do.end.56

do.end.56:                                        ; preds = %if.end.55
  br label %if.end.58

if.else.57:                                       ; preds = %if.end.24
  %33 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %33, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.330, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.58:                                        ; preds = %do.end.56
  %34 = load %struct._object*, %struct._object** %obj.addr, align 8
  %35 = load %struct._typeobject*, %struct._typeobject** @ExceptHandler_type, align 8
  %36 = bitcast %struct._typeobject* %35 to %struct._object*
  %call59 = call i32 @PyObject_IsInstance(%struct._object* %34, %struct._object* %36)
  store i32 %call59, i32* %isinstance, align 4
  %37 = load i32, i32* %isinstance, align 4
  %cmp60 = icmp eq i32 %37, -1
  br i1 %cmp60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.end.58
  store i32 1, i32* %retval
  br label %return

if.end.62:                                        ; preds = %if.end.58
  %38 = load i32, i32* %isinstance, align 4
  %tobool63 = icmp ne i32 %38, 0
  br i1 %tobool63, label %if.then.64, label %if.end.189

if.then.64:                                       ; preds = %if.end.62
  %39 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call68 = call i32 @exists_not_none(%struct._object* %39, %struct._Py_Identifier* @PyId_type)
  %tobool69 = icmp ne i32 %call68, 0
  br i1 %tobool69, label %if.then.70, label %if.else.100

if.then.70:                                       ; preds = %if.then.64
  %40 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call73 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %40, %struct._Py_Identifier* @PyId_type)
  store %struct._object* %call73, %struct._object** %tmp, align 8
  %41 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp74 = icmp eq %struct._object* %41, null
  br i1 %cmp74, label %if.then.75, label %if.end.76

if.then.75:                                       ; preds = %if.then.70
  br label %failed

if.end.76:                                        ; preds = %if.then.70
  %42 = load %struct._object*, %struct._object** %tmp, align 8
  %43 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call77 = call i32 @obj2ast_expr(%struct._object* %42, %struct._expr** %type, %struct._arena* %43)
  store i32 %call77, i32* %res72, align 4
  %44 = load i32, i32* %res72, align 4
  %cmp78 = icmp ne i32 %44, 0
  br i1 %cmp78, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %if.end.76
  br label %failed

if.end.80:                                        ; preds = %if.end.76
  br label %do.body.81

do.body.81:                                       ; preds = %if.end.80
  %45 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %45, %struct._object** %_py_tmp83, align 8
  %46 = load %struct._object*, %struct._object** %_py_tmp83, align 8
  %cmp84 = icmp ne %struct._object* %46, null
  br i1 %cmp84, label %if.then.85, label %if.end.98

if.then.85:                                       ; preds = %do.body.81
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.86

do.body.86:                                       ; preds = %if.then.85
  %47 = load %struct._object*, %struct._object** %_py_tmp83, align 8
  store %struct._object* %47, %struct._object** %_py_decref_tmp88, align 8
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8
  %ob_refcnt89 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0
  %49 = load i64, i64* %ob_refcnt89, align 8
  %dec90 = add i64 %49, -1
  store i64 %dec90, i64* %ob_refcnt89, align 8
  %cmp91 = icmp ne i64 %dec90, 0
  br i1 %cmp91, label %if.then.92, label %if.else.93

if.then.92:                                       ; preds = %do.body.86
  br label %if.end.96

if.else.93:                                       ; preds = %do.body.86
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 1
  %51 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %51, i32 0, i32 4
  %52 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8
  call void %52(%struct._object* %53)
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.then.92
  br label %do.end.97

do.end.97:                                        ; preds = %if.end.96
  br label %if.end.98

if.end.98:                                        ; preds = %do.end.97, %do.body.81
  br label %do.end.99

do.end.99:                                        ; preds = %if.end.98
  br label %if.end.101

if.else.100:                                      ; preds = %if.then.64
  store %struct._expr* null, %struct._expr** %type, align 8
  br label %if.end.101

if.end.101:                                       ; preds = %if.else.100, %do.end.99
  %54 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call102 = call i32 @exists_not_none(%struct._object* %54, %struct._Py_Identifier* @PyId_name)
  %tobool103 = icmp ne i32 %call102, 0
  br i1 %tobool103, label %if.then.104, label %if.else.134

if.then.104:                                      ; preds = %if.end.101
  %55 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call107 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %55, %struct._Py_Identifier* @PyId_name)
  store %struct._object* %call107, %struct._object** %tmp, align 8
  %56 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp108 = icmp eq %struct._object* %56, null
  br i1 %cmp108, label %if.then.109, label %if.end.110

if.then.109:                                      ; preds = %if.then.104
  br label %failed

if.end.110:                                       ; preds = %if.then.104
  %57 = load %struct._object*, %struct._object** %tmp, align 8
  %58 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call111 = call i32 @obj2ast_identifier(%struct._object* %57, %struct._object** %name, %struct._arena* %58)
  store i32 %call111, i32* %res106, align 4
  %59 = load i32, i32* %res106, align 4
  %cmp112 = icmp ne i32 %59, 0
  br i1 %cmp112, label %if.then.113, label %if.end.114

if.then.113:                                      ; preds = %if.end.110
  br label %failed

if.end.114:                                       ; preds = %if.end.110
  br label %do.body.115

do.body.115:                                      ; preds = %if.end.114
  %60 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %60, %struct._object** %_py_tmp117, align 8
  %61 = load %struct._object*, %struct._object** %_py_tmp117, align 8
  %cmp118 = icmp ne %struct._object* %61, null
  br i1 %cmp118, label %if.then.119, label %if.end.132

if.then.119:                                      ; preds = %do.body.115
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.120

do.body.120:                                      ; preds = %if.then.119
  %62 = load %struct._object*, %struct._object** %_py_tmp117, align 8
  store %struct._object* %62, %struct._object** %_py_decref_tmp122, align 8
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8
  %ob_refcnt123 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0
  %64 = load i64, i64* %ob_refcnt123, align 8
  %dec124 = add i64 %64, -1
  store i64 %dec124, i64* %ob_refcnt123, align 8
  %cmp125 = icmp ne i64 %dec124, 0
  br i1 %cmp125, label %if.then.126, label %if.else.127

if.then.126:                                      ; preds = %do.body.120
  br label %if.end.130

if.else.127:                                      ; preds = %do.body.120
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8
  %ob_type128 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type128, align 8
  %tp_dealloc129 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc129, align 8
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8
  call void %67(%struct._object* %68)
  br label %if.end.130

if.end.130:                                       ; preds = %if.else.127, %if.then.126
  br label %do.end.131

do.end.131:                                       ; preds = %if.end.130
  br label %if.end.132

if.end.132:                                       ; preds = %do.end.131, %do.body.115
  br label %do.end.133

do.end.133:                                       ; preds = %if.end.132
  br label %if.end.135

if.else.134:                                      ; preds = %if.end.101
  store %struct._object* null, %struct._object** %name, align 8
  br label %if.end.135

if.end.135:                                       ; preds = %if.else.134, %do.end.133
  %69 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call136 = call i32 @_PyObject_HasAttrId(%struct._object* %69, %struct._Py_Identifier* @PyId_body)
  %tobool137 = icmp ne i32 %call136, 0
  br i1 %tobool137, label %if.then.138, label %if.else.183

if.then.138:                                      ; preds = %if.end.135
  %70 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call143 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %70, %struct._Py_Identifier* @PyId_body)
  store %struct._object* %call143, %struct._object** %tmp, align 8
  %71 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp144 = icmp eq %struct._object* %71, null
  br i1 %cmp144, label %if.then.145, label %if.end.146

if.then.145:                                      ; preds = %if.then.138
  br label %failed

if.end.146:                                       ; preds = %if.then.138
  %72 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type147 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 1
  %73 = load %struct._typeobject*, %struct._typeobject** %ob_type147, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %73, i32 0, i32 19
  %74 = load i64, i64* %tp_flags, align 8
  %and = and i64 %74, 33554432
  %cmp148 = icmp ne i64 %and, 0
  br i1 %cmp148, label %if.end.152, label %if.then.149

if.then.149:                                      ; preds = %if.end.146
  %75 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %76 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type150 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type150, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 1
  %78 = load i8*, i8** %tp_name, align 8
  %call151 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %75, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.331, i32 0, i32 0), i8* %78)
  br label %failed

if.end.152:                                       ; preds = %if.end.146
  %79 = load %struct._object*, %struct._object** %tmp, align 8
  %80 = bitcast %struct._object* %79 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %80, i32 0, i32 1
  %81 = load i64, i64* %ob_size, align 8
  store i64 %81, i64* %len, align 8
  %82 = load i64, i64* %len, align 8
  %83 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call153 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %82, %struct._arena* %83)
  store %struct.asdl_seq* %call153, %struct.asdl_seq** %body, align 8
  %84 = load %struct.asdl_seq*, %struct.asdl_seq** %body, align 8
  %cmp154 = icmp eq %struct.asdl_seq* %84, null
  br i1 %cmp154, label %if.then.155, label %if.end.156

if.then.155:                                      ; preds = %if.end.152
  br label %failed

if.end.156:                                       ; preds = %if.end.152
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.156
  %85 = load i64, i64* %i, align 8
  %86 = load i64, i64* %len, align 8
  %cmp157 = icmp slt i64 %85, %86
  br i1 %cmp157, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %87 = load i64, i64* %i, align 8
  %88 = load %struct._object*, %struct._object** %tmp, align 8
  %89 = bitcast %struct._object* %88 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %89, i32 0, i32 1
  %90 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %90, i64 %87
  %91 = load %struct._object*, %struct._object** %arrayidx, align 8
  %92 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call159 = call i32 @obj2ast_stmt(%struct._object* %91, %struct._stmt** %value, %struct._arena* %92)
  store i32 %call159, i32* %res140, align 4
  %93 = load i32, i32* %res140, align 4
  %cmp160 = icmp ne i32 %93, 0
  br i1 %cmp160, label %if.then.161, label %if.end.162

if.then.161:                                      ; preds = %for.body
  br label %failed

if.end.162:                                       ; preds = %for.body
  %94 = load %struct._stmt*, %struct._stmt** %value, align 8
  %95 = bitcast %struct._stmt* %94 to i8*
  %96 = load i64, i64* %i, align 8
  %97 = load %struct.asdl_seq*, %struct.asdl_seq** %body, align 8
  %elements = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %97, i32 0, i32 1
  %arrayidx163 = getelementptr [1 x i8*], [1 x i8*]* %elements, i32 0, i64 %96
  store i8* %95, i8** %arrayidx163, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.162
  %98 = load i64, i64* %i, align 8
  %inc = add i64 %98, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body.164

do.body.164:                                      ; preds = %for.end
  %99 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %99, %struct._object** %_py_tmp166, align 8
  %100 = load %struct._object*, %struct._object** %_py_tmp166, align 8
  %cmp167 = icmp ne %struct._object* %100, null
  br i1 %cmp167, label %if.then.168, label %if.end.181

if.then.168:                                      ; preds = %do.body.164
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.169

do.body.169:                                      ; preds = %if.then.168
  %101 = load %struct._object*, %struct._object** %_py_tmp166, align 8
  store %struct._object* %101, %struct._object** %_py_decref_tmp171, align 8
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp171, align 8
  %ob_refcnt172 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 0
  %103 = load i64, i64* %ob_refcnt172, align 8
  %dec173 = add i64 %103, -1
  store i64 %dec173, i64* %ob_refcnt172, align 8
  %cmp174 = icmp ne i64 %dec173, 0
  br i1 %cmp174, label %if.then.175, label %if.else.176

if.then.175:                                      ; preds = %do.body.169
  br label %if.end.179

if.else.176:                                      ; preds = %do.body.169
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp171, align 8
  %ob_type177 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 1
  %105 = load %struct._typeobject*, %struct._typeobject** %ob_type177, align 8
  %tp_dealloc178 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 4
  %106 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc178, align 8
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp171, align 8
  call void %106(%struct._object* %107)
  br label %if.end.179

if.end.179:                                       ; preds = %if.else.176, %if.then.175
  br label %do.end.180

do.end.180:                                       ; preds = %if.end.179
  br label %if.end.181

if.end.181:                                       ; preds = %do.end.180, %do.body.164
  br label %do.end.182

do.end.182:                                       ; preds = %if.end.181
  br label %if.end.184

if.else.183:                                      ; preds = %if.end.135
  %108 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %108, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.332, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.184:                                       ; preds = %do.end.182
  %109 = load %struct._expr*, %struct._expr** %type, align 8
  %110 = load %struct._object*, %struct._object** %name, align 8
  %111 = load %struct.asdl_seq*, %struct.asdl_seq** %body, align 8
  %112 = load i32, i32* %lineno, align 4
  %113 = load i32, i32* %col_offset, align 4
  %114 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call185 = call %struct._excepthandler* @_Py_ExceptHandler(%struct._expr* %109, %struct._object* %110, %struct.asdl_seq* %111, i32 %112, i32 %113, %struct._arena* %114)
  %115 = load %struct._excepthandler**, %struct._excepthandler*** %out.addr, align 8
  store %struct._excepthandler* %call185, %struct._excepthandler** %115, align 8
  %116 = load %struct._excepthandler**, %struct._excepthandler*** %out.addr, align 8
  %117 = load %struct._excepthandler*, %struct._excepthandler** %116, align 8
  %cmp186 = icmp eq %struct._excepthandler* %117, null
  br i1 %cmp186, label %if.then.187, label %if.end.188

if.then.187:                                      ; preds = %if.end.184
  br label %failed

if.end.188:                                       ; preds = %if.end.184
  store i32 0, i32* %retval
  br label %return

if.end.189:                                       ; preds = %if.end.62
  %118 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %119 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call190 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %118, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.333, i32 0, i32 0), %struct._object* %119)
  br label %failed

failed:                                           ; preds = %if.end.189, %if.then.187, %if.then.161, %if.then.155, %if.then.149, %if.then.145, %if.then.113, %if.then.109, %if.then.79, %if.then.75, %if.then.36, %if.then.32, %if.then.11, %if.then.7
  br label %do.body.191

do.body.191:                                      ; preds = %failed
  %120 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %120, %struct._object** %_py_xdecref_tmp, align 8
  %121 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp193 = icmp ne %struct._object* %121, null
  br i1 %cmp193, label %if.then.194, label %if.end.207

if.then.194:                                      ; preds = %do.body.191
  br label %do.body.195

do.body.195:                                      ; preds = %if.then.194
  %122 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %122, %struct._object** %_py_decref_tmp197, align 8
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp197, align 8
  %ob_refcnt198 = getelementptr inbounds %struct._object, %struct._object* %123, i32 0, i32 0
  %124 = load i64, i64* %ob_refcnt198, align 8
  %dec199 = add i64 %124, -1
  store i64 %dec199, i64* %ob_refcnt198, align 8
  %cmp200 = icmp ne i64 %dec199, 0
  br i1 %cmp200, label %if.then.201, label %if.else.202

if.then.201:                                      ; preds = %do.body.195
  br label %if.end.205

if.else.202:                                      ; preds = %do.body.195
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp197, align 8
  %ob_type203 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 1
  %126 = load %struct._typeobject*, %struct._typeobject** %ob_type203, align 8
  %tp_dealloc204 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %126, i32 0, i32 4
  %127 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc204, align 8
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp197, align 8
  call void %127(%struct._object* %128)
  br label %if.end.205

if.end.205:                                       ; preds = %if.else.202, %if.then.201
  br label %do.end.206

do.end.206:                                       ; preds = %if.end.205
  br label %if.end.207

if.end.207:                                       ; preds = %do.end.206, %do.body.191
  br label %do.end.208

do.end.208:                                       ; preds = %if.end.207
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %do.end.208, %if.end.188, %if.else.183, %if.then.61, %if.else.57, %if.else.23, %if.then
  %129 = load i32, i32* %retval
  ret i32 %129
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_alias(%struct._object* %obj, %struct._alias** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._alias**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %tmp = alloca %struct._object*, align 8
  %name = alloca %struct._object*, align 8
  %asname = alloca %struct._object*, align 8
  %res = alloca i32, align 4
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %res26 = alloca i32, align 4
  %_py_tmp37 = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp63 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._alias** %out, %struct._alias*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  store %struct._object* null, %struct._object** %tmp, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i32 @_PyObject_HasAttrId(%struct._object* %0, %struct._Py_Identifier* @PyId_name)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else.20

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call4 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1, %struct._Py_Identifier* @PyId_name)
  store %struct._object* %call4, %struct._object** %tmp, align 8
  %2 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp = icmp eq %struct._object* %2, null
  br i1 %cmp, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %if.then
  br label %failed

if.end:                                           ; preds = %if.then
  %3 = load %struct._object*, %struct._object** %tmp, align 8
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call6 = call i32 @obj2ast_identifier(%struct._object* %3, %struct._object** %name, %struct._arena* %4)
  store i32 %call6, i32* %res, align 4
  %5 = load i32, i32* %res, align 4
  %cmp7 = icmp ne i32 %5, 0
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end
  br label %failed

if.end.9:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.end.9
  %6 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %6, %struct._object** %_py_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp11 = icmp ne %struct._object* %7, null
  br i1 %cmp11, label %if.then.12, label %if.end.18

if.then.12:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.13

do.body.13:                                       ; preds = %if.then.12
  %8 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0
  %10 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %10, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp15 = icmp ne i64 %dec, 0
  br i1 %cmp15, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %do.body.13
  br label %if.end.17

if.else:                                          ; preds = %do.body.13
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %13(%struct._object* %14)
  br label %if.end.17

if.end.17:                                        ; preds = %if.else, %if.then.16
  br label %do.end

do.end:                                           ; preds = %if.end.17
  br label %if.end.18

if.end.18:                                        ; preds = %do.end, %do.body
  br label %do.end.19

do.end.19:                                        ; preds = %if.end.18
  br label %if.end.21

if.else.20:                                       ; preds = %entry
  %15 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.334, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.21:                                        ; preds = %do.end.19
  %16 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call22 = call i32 @exists_not_none(%struct._object* %16, %struct._Py_Identifier* @PyId_asname)
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.then.24, label %if.else.54

if.then.24:                                       ; preds = %if.end.21
  %17 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call27 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %17, %struct._Py_Identifier* @PyId_asname)
  store %struct._object* %call27, %struct._object** %tmp, align 8
  %18 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp28 = icmp eq %struct._object* %18, null
  br i1 %cmp28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.then.24
  br label %failed

if.end.30:                                        ; preds = %if.then.24
  %19 = load %struct._object*, %struct._object** %tmp, align 8
  %20 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call31 = call i32 @obj2ast_identifier(%struct._object* %19, %struct._object** %asname, %struct._arena* %20)
  store i32 %call31, i32* %res26, align 4
  %21 = load i32, i32* %res26, align 4
  %cmp32 = icmp ne i32 %21, 0
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.end.30
  br label %failed

if.end.34:                                        ; preds = %if.end.30
  br label %do.body.35

do.body.35:                                       ; preds = %if.end.34
  %22 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %22, %struct._object** %_py_tmp37, align 8
  %23 = load %struct._object*, %struct._object** %_py_tmp37, align 8
  %cmp38 = icmp ne %struct._object* %23, null
  br i1 %cmp38, label %if.then.39, label %if.end.52

if.then.39:                                       ; preds = %do.body.35
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.40

do.body.40:                                       ; preds = %if.then.39
  %24 = load %struct._object*, %struct._object** %_py_tmp37, align 8
  store %struct._object* %24, %struct._object** %_py_decref_tmp42, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt43, align 8
  %dec44 = add i64 %26, -1
  store i64 %dec44, i64* %ob_refcnt43, align 8
  %cmp45 = icmp ne i64 %dec44, 0
  br i1 %cmp45, label %if.then.46, label %if.else.47

if.then.46:                                       ; preds = %do.body.40
  br label %if.end.50

if.else.47:                                       ; preds = %do.body.40
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  call void %29(%struct._object* %30)
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  br label %do.end.51

do.end.51:                                        ; preds = %if.end.50
  br label %if.end.52

if.end.52:                                        ; preds = %do.end.51, %do.body.35
  br label %do.end.53

do.end.53:                                        ; preds = %if.end.52
  br label %if.end.55

if.else.54:                                       ; preds = %if.end.21
  store %struct._object* null, %struct._object** %asname, align 8
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.54, %do.end.53
  %31 = load %struct._object*, %struct._object** %name, align 8
  %32 = load %struct._object*, %struct._object** %asname, align 8
  %33 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call56 = call %struct._alias* @_Py_alias(%struct._object* %31, %struct._object* %32, %struct._arena* %33)
  %34 = load %struct._alias**, %struct._alias*** %out.addr, align 8
  store %struct._alias* %call56, %struct._alias** %34, align 8
  store i32 0, i32* %retval
  br label %return

failed:                                           ; preds = %if.then.33, %if.then.29, %if.then.8, %if.then.5
  br label %do.body.57

do.body.57:                                       ; preds = %failed
  %35 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %35, %struct._object** %_py_xdecref_tmp, align 8
  %36 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp59 = icmp ne %struct._object* %36, null
  br i1 %cmp59, label %if.then.60, label %if.end.73

if.then.60:                                       ; preds = %do.body.57
  br label %do.body.61

do.body.61:                                       ; preds = %if.then.60
  %37 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %37, %struct._object** %_py_decref_tmp63, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0
  %39 = load i64, i64* %ob_refcnt64, align 8
  %dec65 = add i64 %39, -1
  store i64 %dec65, i64* %ob_refcnt64, align 8
  %cmp66 = icmp ne i64 %dec65, 0
  br i1 %cmp66, label %if.then.67, label %if.else.68

if.then.67:                                       ; preds = %do.body.61
  br label %if.end.71

if.else.68:                                       ; preds = %do.body.61
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  %ob_type69 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type69, align 8
  %tp_dealloc70 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc70, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  call void %42(%struct._object* %43)
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.68, %if.then.67
  br label %do.end.72

do.end.72:                                        ; preds = %if.end.71
  br label %if.end.73

if.end.73:                                        ; preds = %do.end.72, %do.body.57
  br label %do.end.74

do.end.74:                                        ; preds = %if.end.73
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %do.end.74, %if.end.55, %if.else.20
  %44 = load i32, i32* %retval
  ret i32 %44
}

declare i64 @PyLong_AsLong(%struct._object*) #1

declare %struct._object* @PyErr_Occurred() #1

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_object(%struct._object* %obj, %struct._object** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._object**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._object** %out, %struct._object*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %cmp = icmp eq %struct._object* %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %obj.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.then.1, label %if.end.5

if.then.1:                                        ; preds = %if.end
  %2 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %3 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i32 @PyArena_AddPyObject(%struct._arena* %2, %struct._object* %3)
  %cmp2 = icmp slt i32 %call, 0
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.then.1
  %4 = load %struct._object**, %struct._object*** %out.addr, align 8
  store %struct._object* null, %struct._object** %4, align 8
  store i32 -1, i32* %retval
  br label %return

if.end.4:                                         ; preds = %if.then.1
  %5 = load %struct._object*, %struct._object** %obj.addr, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0
  %6 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  br label %if.end.5

if.end.5:                                         ; preds = %if.end.4, %if.end
  %7 = load %struct._object*, %struct._object** %obj.addr, align 8
  %8 = load %struct._object**, %struct._object*** %out.addr, align 8
  store %struct._object* %7, %struct._object** %8, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.5, %if.then.3
  %9 = load i32, i32* %retval
  ret i32 %9
}

declare i32 @PyArena_AddPyObject(%struct._arena*, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_arg(%struct._object* %obj, %struct._arg** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._arg**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %tmp = alloca %struct._object*, align 8
  %arg = alloca %struct._object*, align 8
  %annotation = alloca %struct._expr*, align 8
  %res = alloca i32, align 4
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %res26 = alloca i32, align 4
  %_py_tmp37 = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp63 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._arg** %out, %struct._arg*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  store %struct._object* null, %struct._object** %tmp, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i32 @_PyObject_HasAttrId(%struct._object* %0, %struct._Py_Identifier* @PyId_arg)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else.20

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call4 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1, %struct._Py_Identifier* @PyId_arg)
  store %struct._object* %call4, %struct._object** %tmp, align 8
  %2 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp = icmp eq %struct._object* %2, null
  br i1 %cmp, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %if.then
  br label %failed

if.end:                                           ; preds = %if.then
  %3 = load %struct._object*, %struct._object** %tmp, align 8
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call6 = call i32 @obj2ast_identifier(%struct._object* %3, %struct._object** %arg, %struct._arena* %4)
  store i32 %call6, i32* %res, align 4
  %5 = load i32, i32* %res, align 4
  %cmp7 = icmp ne i32 %5, 0
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end
  br label %failed

if.end.9:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.end.9
  %6 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %6, %struct._object** %_py_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp11 = icmp ne %struct._object* %7, null
  br i1 %cmp11, label %if.then.12, label %if.end.18

if.then.12:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.13

do.body.13:                                       ; preds = %if.then.12
  %8 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0
  %10 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %10, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp15 = icmp ne i64 %dec, 0
  br i1 %cmp15, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %do.body.13
  br label %if.end.17

if.else:                                          ; preds = %do.body.13
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %13(%struct._object* %14)
  br label %if.end.17

if.end.17:                                        ; preds = %if.else, %if.then.16
  br label %do.end

do.end:                                           ; preds = %if.end.17
  br label %if.end.18

if.end.18:                                        ; preds = %do.end, %do.body
  br label %do.end.19

do.end.19:                                        ; preds = %if.end.18
  br label %if.end.21

if.else.20:                                       ; preds = %entry
  %15 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.324, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.21:                                        ; preds = %do.end.19
  %16 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call22 = call i32 @exists_not_none(%struct._object* %16, %struct._Py_Identifier* @PyId_annotation)
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.then.24, label %if.else.54

if.then.24:                                       ; preds = %if.end.21
  %17 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call27 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %17, %struct._Py_Identifier* @PyId_annotation)
  store %struct._object* %call27, %struct._object** %tmp, align 8
  %18 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp28 = icmp eq %struct._object* %18, null
  br i1 %cmp28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.then.24
  br label %failed

if.end.30:                                        ; preds = %if.then.24
  %19 = load %struct._object*, %struct._object** %tmp, align 8
  %20 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call31 = call i32 @obj2ast_expr(%struct._object* %19, %struct._expr** %annotation, %struct._arena* %20)
  store i32 %call31, i32* %res26, align 4
  %21 = load i32, i32* %res26, align 4
  %cmp32 = icmp ne i32 %21, 0
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.end.30
  br label %failed

if.end.34:                                        ; preds = %if.end.30
  br label %do.body.35

do.body.35:                                       ; preds = %if.end.34
  %22 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %22, %struct._object** %_py_tmp37, align 8
  %23 = load %struct._object*, %struct._object** %_py_tmp37, align 8
  %cmp38 = icmp ne %struct._object* %23, null
  br i1 %cmp38, label %if.then.39, label %if.end.52

if.then.39:                                       ; preds = %do.body.35
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.40

do.body.40:                                       ; preds = %if.then.39
  %24 = load %struct._object*, %struct._object** %_py_tmp37, align 8
  store %struct._object* %24, %struct._object** %_py_decref_tmp42, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt43, align 8
  %dec44 = add i64 %26, -1
  store i64 %dec44, i64* %ob_refcnt43, align 8
  %cmp45 = icmp ne i64 %dec44, 0
  br i1 %cmp45, label %if.then.46, label %if.else.47

if.then.46:                                       ; preds = %do.body.40
  br label %if.end.50

if.else.47:                                       ; preds = %do.body.40
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8
  call void %29(%struct._object* %30)
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  br label %do.end.51

do.end.51:                                        ; preds = %if.end.50
  br label %if.end.52

if.end.52:                                        ; preds = %do.end.51, %do.body.35
  br label %do.end.53

do.end.53:                                        ; preds = %if.end.52
  br label %if.end.55

if.else.54:                                       ; preds = %if.end.21
  store %struct._expr* null, %struct._expr** %annotation, align 8
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.54, %do.end.53
  %31 = load %struct._object*, %struct._object** %arg, align 8
  %32 = load %struct._expr*, %struct._expr** %annotation, align 8
  %33 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call56 = call %struct._arg* @_Py_arg(%struct._object* %31, %struct._expr* %32, %struct._arena* %33)
  %34 = load %struct._arg**, %struct._arg*** %out.addr, align 8
  store %struct._arg* %call56, %struct._arg** %34, align 8
  store i32 0, i32* %retval
  br label %return

failed:                                           ; preds = %if.then.33, %if.then.29, %if.then.8, %if.then.5
  br label %do.body.57

do.body.57:                                       ; preds = %failed
  %35 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %35, %struct._object** %_py_xdecref_tmp, align 8
  %36 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp59 = icmp ne %struct._object* %36, null
  br i1 %cmp59, label %if.then.60, label %if.end.73

if.then.60:                                       ; preds = %do.body.57
  br label %do.body.61

do.body.61:                                       ; preds = %if.then.60
  %37 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %37, %struct._object** %_py_decref_tmp63, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0
  %39 = load i64, i64* %ob_refcnt64, align 8
  %dec65 = add i64 %39, -1
  store i64 %dec65, i64* %ob_refcnt64, align 8
  %cmp66 = icmp ne i64 %dec65, 0
  br i1 %cmp66, label %if.then.67, label %if.else.68

if.then.67:                                       ; preds = %do.body.61
  br label %if.end.71

if.else.68:                                       ; preds = %do.body.61
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  %ob_type69 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type69, align 8
  %tp_dealloc70 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc70, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  call void %42(%struct._object* %43)
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.68, %if.then.67
  br label %do.end.72

do.end.72:                                        ; preds = %if.end.71
  br label %if.end.73

if.end.73:                                        ; preds = %do.end.72, %do.body.57
  br label %do.end.74

do.end.74:                                        ; preds = %if.end.73
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %do.end.74, %if.end.55, %if.else.20
  %44 = load i32, i32* %retval
  ret i32 %44
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_boolop(%struct._object* %obj, i32* %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca i32*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %isinstance = alloca i32, align 4
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store i32* %out, i32** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1 = load %struct._typeobject*, %struct._typeobject** @And_type, align 8
  %2 = bitcast %struct._typeobject* %1 to %struct._object*
  %call = call i32 @PyObject_IsInstance(%struct._object* %0, %struct._object* %2)
  store i32 %call, i32* %isinstance, align 4
  %3 = load i32, i32* %isinstance, align 4
  %cmp = icmp eq i32 %3, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %isinstance, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  %5 = load i32*, i32** %out.addr, align 8
  store i32 1, i32* %5, align 4
  store i32 0, i32* %retval
  br label %return

if.end.2:                                         ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %obj.addr, align 8
  %7 = load %struct._typeobject*, %struct._typeobject** @Or_type, align 8
  %8 = bitcast %struct._typeobject* %7 to %struct._object*
  %call3 = call i32 @PyObject_IsInstance(%struct._object* %6, %struct._object* %8)
  store i32 %call3, i32* %isinstance, align 4
  %9 = load i32, i32* %isinstance, align 4
  %cmp4 = icmp eq i32 %9, -1
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.2
  store i32 1, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.end.2
  %10 = load i32, i32* %isinstance, align 4
  %tobool7 = icmp ne i32 %10, 0
  br i1 %tobool7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.6
  %11 = load i32*, i32** %out.addr, align 8
  store i32 2, i32* %11, align 4
  store i32 0, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %12 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %13 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call10 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %12, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.401, i32 0, i32 0), %struct._object* %13)
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.9, %if.then.8, %if.then.5, %if.then.1, %if.then
  %14 = load i32, i32* %retval
  ret i32 %14
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_unaryop(%struct._object* %obj, i32* %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca i32*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %isinstance = alloca i32, align 4
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store i32* %out, i32** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1 = load %struct._typeobject*, %struct._typeobject** @Invert_type, align 8
  %2 = bitcast %struct._typeobject* %1 to %struct._object*
  %call = call i32 @PyObject_IsInstance(%struct._object* %0, %struct._object* %2)
  store i32 %call, i32* %isinstance, align 4
  %3 = load i32, i32* %isinstance, align 4
  %cmp = icmp eq i32 %3, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %isinstance, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  %5 = load i32*, i32** %out.addr, align 8
  store i32 1, i32* %5, align 4
  store i32 0, i32* %retval
  br label %return

if.end.2:                                         ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %obj.addr, align 8
  %7 = load %struct._typeobject*, %struct._typeobject** @Not_type, align 8
  %8 = bitcast %struct._typeobject* %7 to %struct._object*
  %call3 = call i32 @PyObject_IsInstance(%struct._object* %6, %struct._object* %8)
  store i32 %call3, i32* %isinstance, align 4
  %9 = load i32, i32* %isinstance, align 4
  %cmp4 = icmp eq i32 %9, -1
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.2
  store i32 1, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.end.2
  %10 = load i32, i32* %isinstance, align 4
  %tobool7 = icmp ne i32 %10, 0
  br i1 %tobool7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.6
  %11 = load i32*, i32** %out.addr, align 8
  store i32 2, i32* %11, align 4
  store i32 0, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %12 = load %struct._object*, %struct._object** %obj.addr, align 8
  %13 = load %struct._typeobject*, %struct._typeobject** @UAdd_type, align 8
  %14 = bitcast %struct._typeobject* %13 to %struct._object*
  %call10 = call i32 @PyObject_IsInstance(%struct._object* %12, %struct._object* %14)
  store i32 %call10, i32* %isinstance, align 4
  %15 = load i32, i32* %isinstance, align 4
  %cmp11 = icmp eq i32 %15, -1
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end.9
  store i32 1, i32* %retval
  br label %return

if.end.13:                                        ; preds = %if.end.9
  %16 = load i32, i32* %isinstance, align 4
  %tobool14 = icmp ne i32 %16, 0
  br i1 %tobool14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.13
  %17 = load i32*, i32** %out.addr, align 8
  store i32 3, i32* %17, align 4
  store i32 0, i32* %retval
  br label %return

if.end.16:                                        ; preds = %if.end.13
  %18 = load %struct._object*, %struct._object** %obj.addr, align 8
  %19 = load %struct._typeobject*, %struct._typeobject** @USub_type, align 8
  %20 = bitcast %struct._typeobject* %19 to %struct._object*
  %call17 = call i32 @PyObject_IsInstance(%struct._object* %18, %struct._object* %20)
  store i32 %call17, i32* %isinstance, align 4
  %21 = load i32, i32* %isinstance, align 4
  %cmp18 = icmp eq i32 %21, -1
  br i1 %cmp18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.16
  store i32 1, i32* %retval
  br label %return

if.end.20:                                        ; preds = %if.end.16
  %22 = load i32, i32* %isinstance, align 4
  %tobool21 = icmp ne i32 %22, 0
  br i1 %tobool21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.20
  %23 = load i32*, i32** %out.addr, align 8
  store i32 4, i32* %23, align 4
  store i32 0, i32* %retval
  br label %return

if.end.23:                                        ; preds = %if.end.20
  %24 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %25 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call24 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.402, i32 0, i32 0), %struct._object* %25)
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.23, %if.then.22, %if.then.19, %if.then.15, %if.then.12, %if.then.8, %if.then.5, %if.then.1, %if.then
  %26 = load i32, i32* %retval
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_comprehension(%struct._object* %obj, %struct._comprehension** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._comprehension**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %tmp = alloca %struct._object*, align 8
  %target = alloca %struct._expr*, align 8
  %iter = alloca %struct._expr*, align 8
  %ifs = alloca %struct.asdl_seq*, align 8
  %res = alloca i32, align 4
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %res27 = alloca i32, align 4
  %_py_tmp38 = alloca %struct._object*, align 8
  %_py_decref_tmp43 = alloca %struct._object*, align 8
  %res61 = alloca i32, align 4
  %len = alloca i64, align 8
  %i = alloca i64, align 8
  %value = alloca %struct._expr*, align 8
  %_py_tmp87 = alloca %struct._object*, align 8
  %_py_decref_tmp92 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp113 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._comprehension** %out, %struct._comprehension*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  store %struct._object* null, %struct._object** %tmp, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i32 @_PyObject_HasAttrId(%struct._object* %0, %struct._Py_Identifier* @PyId_target)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else.21

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call5 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %1, %struct._Py_Identifier* @PyId_target)
  store %struct._object* %call5, %struct._object** %tmp, align 8
  %2 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp = icmp eq %struct._object* %2, null
  br i1 %cmp, label %if.then.6, label %if.end

if.then.6:                                        ; preds = %if.then
  br label %failed

if.end:                                           ; preds = %if.then
  %3 = load %struct._object*, %struct._object** %tmp, align 8
  %4 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call7 = call i32 @obj2ast_expr(%struct._object* %3, %struct._expr** %target, %struct._arena* %4)
  store i32 %call7, i32* %res, align 4
  %5 = load i32, i32* %res, align 4
  %cmp8 = icmp ne i32 %5, 0
  br i1 %cmp8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end
  br label %failed

if.end.10:                                        ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.end.10
  %6 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %6, %struct._object** %_py_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp12 = icmp ne %struct._object* %7, null
  br i1 %cmp12, label %if.then.13, label %if.end.19

if.then.13:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.14

do.body.14:                                       ; preds = %if.then.13
  %8 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0
  %10 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %10, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp16 = icmp ne i64 %dec, 0
  br i1 %cmp16, label %if.then.17, label %if.else

if.then.17:                                       ; preds = %do.body.14
  br label %if.end.18

if.else:                                          ; preds = %do.body.14
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %13(%struct._object* %14)
  br label %if.end.18

if.end.18:                                        ; preds = %if.else, %if.then.17
  br label %do.end

do.end:                                           ; preds = %if.end.18
  br label %if.end.19

if.end.19:                                        ; preds = %do.end, %do.body
  br label %do.end.20

do.end.20:                                        ; preds = %if.end.19
  br label %if.end.22

if.else.21:                                       ; preds = %entry
  %15 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.403, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.22:                                        ; preds = %do.end.20
  %16 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call23 = call i32 @_PyObject_HasAttrId(%struct._object* %16, %struct._Py_Identifier* @PyId_iter)
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.then.25, label %if.else.55

if.then.25:                                       ; preds = %if.end.22
  %17 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call28 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %17, %struct._Py_Identifier* @PyId_iter)
  store %struct._object* %call28, %struct._object** %tmp, align 8
  %18 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp29 = icmp eq %struct._object* %18, null
  br i1 %cmp29, label %if.then.30, label %if.end.31

if.then.30:                                       ; preds = %if.then.25
  br label %failed

if.end.31:                                        ; preds = %if.then.25
  %19 = load %struct._object*, %struct._object** %tmp, align 8
  %20 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call32 = call i32 @obj2ast_expr(%struct._object* %19, %struct._expr** %iter, %struct._arena* %20)
  store i32 %call32, i32* %res27, align 4
  %21 = load i32, i32* %res27, align 4
  %cmp33 = icmp ne i32 %21, 0
  br i1 %cmp33, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %if.end.31
  br label %failed

if.end.35:                                        ; preds = %if.end.31
  br label %do.body.36

do.body.36:                                       ; preds = %if.end.35
  %22 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %22, %struct._object** %_py_tmp38, align 8
  %23 = load %struct._object*, %struct._object** %_py_tmp38, align 8
  %cmp39 = icmp ne %struct._object* %23, null
  br i1 %cmp39, label %if.then.40, label %if.end.53

if.then.40:                                       ; preds = %do.body.36
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.41

do.body.41:                                       ; preds = %if.then.40
  %24 = load %struct._object*, %struct._object** %_py_tmp38, align 8
  store %struct._object* %24, %struct._object** %_py_decref_tmp43, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt44, align 8
  %dec45 = add i64 %26, -1
  store i64 %dec45, i64* %ob_refcnt44, align 8
  %cmp46 = icmp ne i64 %dec45, 0
  br i1 %cmp46, label %if.then.47, label %if.else.48

if.then.47:                                       ; preds = %do.body.41
  br label %if.end.51

if.else.48:                                       ; preds = %do.body.41
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  %ob_type49 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type49, align 8
  %tp_dealloc50 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc50, align 8
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  call void %29(%struct._object* %30)
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.48, %if.then.47
  br label %do.end.52

do.end.52:                                        ; preds = %if.end.51
  br label %if.end.53

if.end.53:                                        ; preds = %do.end.52, %do.body.36
  br label %do.end.54

do.end.54:                                        ; preds = %if.end.53
  br label %if.end.56

if.else.55:                                       ; preds = %if.end.22
  %31 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %31, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.404, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.56:                                        ; preds = %do.end.54
  %32 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call57 = call i32 @_PyObject_HasAttrId(%struct._object* %32, %struct._Py_Identifier* @PyId_ifs)
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %if.then.59, label %if.else.104

if.then.59:                                       ; preds = %if.end.56
  %33 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call64 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %33, %struct._Py_Identifier* @PyId_ifs)
  store %struct._object* %call64, %struct._object** %tmp, align 8
  %34 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp65 = icmp eq %struct._object* %34, null
  br i1 %cmp65, label %if.then.66, label %if.end.67

if.then.66:                                       ; preds = %if.then.59
  br label %failed

if.end.67:                                        ; preds = %if.then.59
  %35 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type68 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type68, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 19
  %37 = load i64, i64* %tp_flags, align 8
  %and = and i64 %37, 33554432
  %cmp69 = icmp ne i64 %and, 0
  br i1 %cmp69, label %if.end.73, label %if.then.70

if.then.70:                                       ; preds = %if.end.67
  %38 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %39 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type71 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type71, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 1
  %41 = load i8*, i8** %tp_name, align 8
  %call72 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %38, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.405, i32 0, i32 0), i8* %41)
  br label %failed

if.end.73:                                        ; preds = %if.end.67
  %42 = load %struct._object*, %struct._object** %tmp, align 8
  %43 = bitcast %struct._object* %42 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %43, i32 0, i32 1
  %44 = load i64, i64* %ob_size, align 8
  store i64 %44, i64* %len, align 8
  %45 = load i64, i64* %len, align 8
  %46 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call74 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %45, %struct._arena* %46)
  store %struct.asdl_seq* %call74, %struct.asdl_seq** %ifs, align 8
  %47 = load %struct.asdl_seq*, %struct.asdl_seq** %ifs, align 8
  %cmp75 = icmp eq %struct.asdl_seq* %47, null
  br i1 %cmp75, label %if.then.76, label %if.end.77

if.then.76:                                       ; preds = %if.end.73
  br label %failed

if.end.77:                                        ; preds = %if.end.73
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.77
  %48 = load i64, i64* %i, align 8
  %49 = load i64, i64* %len, align 8
  %cmp78 = icmp slt i64 %48, %49
  br i1 %cmp78, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %50 = load i64, i64* %i, align 8
  %51 = load %struct._object*, %struct._object** %tmp, align 8
  %52 = bitcast %struct._object* %51 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %52, i32 0, i32 1
  %53 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %53, i64 %50
  %54 = load %struct._object*, %struct._object** %arrayidx, align 8
  %55 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call80 = call i32 @obj2ast_expr(%struct._object* %54, %struct._expr** %value, %struct._arena* %55)
  store i32 %call80, i32* %res61, align 4
  %56 = load i32, i32* %res61, align 4
  %cmp81 = icmp ne i32 %56, 0
  br i1 %cmp81, label %if.then.82, label %if.end.83

if.then.82:                                       ; preds = %for.body
  br label %failed

if.end.83:                                        ; preds = %for.body
  %57 = load %struct._expr*, %struct._expr** %value, align 8
  %58 = bitcast %struct._expr* %57 to i8*
  %59 = load i64, i64* %i, align 8
  %60 = load %struct.asdl_seq*, %struct.asdl_seq** %ifs, align 8
  %elements = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %60, i32 0, i32 1
  %arrayidx84 = getelementptr [1 x i8*], [1 x i8*]* %elements, i32 0, i64 %59
  store i8* %58, i8** %arrayidx84, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.83
  %61 = load i64, i64* %i, align 8
  %inc = add i64 %61, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body.85

do.body.85:                                       ; preds = %for.end
  %62 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %62, %struct._object** %_py_tmp87, align 8
  %63 = load %struct._object*, %struct._object** %_py_tmp87, align 8
  %cmp88 = icmp ne %struct._object* %63, null
  br i1 %cmp88, label %if.then.89, label %if.end.102

if.then.89:                                       ; preds = %do.body.85
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.90

do.body.90:                                       ; preds = %if.then.89
  %64 = load %struct._object*, %struct._object** %_py_tmp87, align 8
  store %struct._object* %64, %struct._object** %_py_decref_tmp92, align 8
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8
  %ob_refcnt93 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0
  %66 = load i64, i64* %ob_refcnt93, align 8
  %dec94 = add i64 %66, -1
  store i64 %dec94, i64* %ob_refcnt93, align 8
  %cmp95 = icmp ne i64 %dec94, 0
  br i1 %cmp95, label %if.then.96, label %if.else.97

if.then.96:                                       ; preds = %do.body.90
  br label %if.end.100

if.else.97:                                       ; preds = %do.body.90
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8
  %ob_type98 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type98, align 8
  %tp_dealloc99 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc99, align 8
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8
  call void %69(%struct._object* %70)
  br label %if.end.100

if.end.100:                                       ; preds = %if.else.97, %if.then.96
  br label %do.end.101

do.end.101:                                       ; preds = %if.end.100
  br label %if.end.102

if.end.102:                                       ; preds = %do.end.101, %do.body.85
  br label %do.end.103

do.end.103:                                       ; preds = %if.end.102
  br label %if.end.105

if.else.104:                                      ; preds = %if.end.56
  %71 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %71, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.406, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.105:                                       ; preds = %do.end.103
  %72 = load %struct._expr*, %struct._expr** %target, align 8
  %73 = load %struct._expr*, %struct._expr** %iter, align 8
  %74 = load %struct.asdl_seq*, %struct.asdl_seq** %ifs, align 8
  %75 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call106 = call %struct._comprehension* @_Py_comprehension(%struct._expr* %72, %struct._expr* %73, %struct.asdl_seq* %74, %struct._arena* %75)
  %76 = load %struct._comprehension**, %struct._comprehension*** %out.addr, align 8
  store %struct._comprehension* %call106, %struct._comprehension** %76, align 8
  store i32 0, i32* %retval
  br label %return

failed:                                           ; preds = %if.then.82, %if.then.76, %if.then.70, %if.then.66, %if.then.34, %if.then.30, %if.then.9, %if.then.6
  br label %do.body.107

do.body.107:                                      ; preds = %failed
  %77 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %77, %struct._object** %_py_xdecref_tmp, align 8
  %78 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp109 = icmp ne %struct._object* %78, null
  br i1 %cmp109, label %if.then.110, label %if.end.123

if.then.110:                                      ; preds = %do.body.107
  br label %do.body.111

do.body.111:                                      ; preds = %if.then.110
  %79 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %79, %struct._object** %_py_decref_tmp113, align 8
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8
  %ob_refcnt114 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0
  %81 = load i64, i64* %ob_refcnt114, align 8
  %dec115 = add i64 %81, -1
  store i64 %dec115, i64* %ob_refcnt114, align 8
  %cmp116 = icmp ne i64 %dec115, 0
  br i1 %cmp116, label %if.then.117, label %if.else.118

if.then.117:                                      ; preds = %do.body.111
  br label %if.end.121

if.else.118:                                      ; preds = %do.body.111
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8
  %ob_type119 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type119, align 8
  %tp_dealloc120 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc120, align 8
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8
  call void %84(%struct._object* %85)
  br label %if.end.121

if.end.121:                                       ; preds = %if.else.118, %if.then.117
  br label %do.end.122

do.end.122:                                       ; preds = %if.end.121
  br label %if.end.123

if.end.123:                                       ; preds = %do.end.122, %do.body.107
  br label %do.end.124

do.end.124:                                       ; preds = %if.end.123
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %do.end.124, %if.end.105, %if.else.104, %if.else.55, %if.else.21
  %86 = load i32, i32* %retval
  ret i32 %86
}

declare %struct.asdl_int_seq* @_Py_asdl_int_seq_new(i64, %struct._arena*) #1

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_cmpop(%struct._object* %obj, i32* %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca i32*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %isinstance = alloca i32, align 4
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store i32* %out, i32** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1 = load %struct._typeobject*, %struct._typeobject** @Eq_type, align 8
  %2 = bitcast %struct._typeobject* %1 to %struct._object*
  %call = call i32 @PyObject_IsInstance(%struct._object* %0, %struct._object* %2)
  store i32 %call, i32* %isinstance, align 4
  %3 = load i32, i32* %isinstance, align 4
  %cmp = icmp eq i32 %3, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %isinstance, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  %5 = load i32*, i32** %out.addr, align 8
  store i32 1, i32* %5, align 4
  store i32 0, i32* %retval
  br label %return

if.end.2:                                         ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %obj.addr, align 8
  %7 = load %struct._typeobject*, %struct._typeobject** @NotEq_type, align 8
  %8 = bitcast %struct._typeobject* %7 to %struct._object*
  %call3 = call i32 @PyObject_IsInstance(%struct._object* %6, %struct._object* %8)
  store i32 %call3, i32* %isinstance, align 4
  %9 = load i32, i32* %isinstance, align 4
  %cmp4 = icmp eq i32 %9, -1
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.2
  store i32 1, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.end.2
  %10 = load i32, i32* %isinstance, align 4
  %tobool7 = icmp ne i32 %10, 0
  br i1 %tobool7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.6
  %11 = load i32*, i32** %out.addr, align 8
  store i32 2, i32* %11, align 4
  store i32 0, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %12 = load %struct._object*, %struct._object** %obj.addr, align 8
  %13 = load %struct._typeobject*, %struct._typeobject** @Lt_type, align 8
  %14 = bitcast %struct._typeobject* %13 to %struct._object*
  %call10 = call i32 @PyObject_IsInstance(%struct._object* %12, %struct._object* %14)
  store i32 %call10, i32* %isinstance, align 4
  %15 = load i32, i32* %isinstance, align 4
  %cmp11 = icmp eq i32 %15, -1
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end.9
  store i32 1, i32* %retval
  br label %return

if.end.13:                                        ; preds = %if.end.9
  %16 = load i32, i32* %isinstance, align 4
  %tobool14 = icmp ne i32 %16, 0
  br i1 %tobool14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.13
  %17 = load i32*, i32** %out.addr, align 8
  store i32 3, i32* %17, align 4
  store i32 0, i32* %retval
  br label %return

if.end.16:                                        ; preds = %if.end.13
  %18 = load %struct._object*, %struct._object** %obj.addr, align 8
  %19 = load %struct._typeobject*, %struct._typeobject** @LtE_type, align 8
  %20 = bitcast %struct._typeobject* %19 to %struct._object*
  %call17 = call i32 @PyObject_IsInstance(%struct._object* %18, %struct._object* %20)
  store i32 %call17, i32* %isinstance, align 4
  %21 = load i32, i32* %isinstance, align 4
  %cmp18 = icmp eq i32 %21, -1
  br i1 %cmp18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.16
  store i32 1, i32* %retval
  br label %return

if.end.20:                                        ; preds = %if.end.16
  %22 = load i32, i32* %isinstance, align 4
  %tobool21 = icmp ne i32 %22, 0
  br i1 %tobool21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.20
  %23 = load i32*, i32** %out.addr, align 8
  store i32 4, i32* %23, align 4
  store i32 0, i32* %retval
  br label %return

if.end.23:                                        ; preds = %if.end.20
  %24 = load %struct._object*, %struct._object** %obj.addr, align 8
  %25 = load %struct._typeobject*, %struct._typeobject** @Gt_type, align 8
  %26 = bitcast %struct._typeobject* %25 to %struct._object*
  %call24 = call i32 @PyObject_IsInstance(%struct._object* %24, %struct._object* %26)
  store i32 %call24, i32* %isinstance, align 4
  %27 = load i32, i32* %isinstance, align 4
  %cmp25 = icmp eq i32 %27, -1
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.23
  store i32 1, i32* %retval
  br label %return

if.end.27:                                        ; preds = %if.end.23
  %28 = load i32, i32* %isinstance, align 4
  %tobool28 = icmp ne i32 %28, 0
  br i1 %tobool28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.end.27
  %29 = load i32*, i32** %out.addr, align 8
  store i32 5, i32* %29, align 4
  store i32 0, i32* %retval
  br label %return

if.end.30:                                        ; preds = %if.end.27
  %30 = load %struct._object*, %struct._object** %obj.addr, align 8
  %31 = load %struct._typeobject*, %struct._typeobject** @GtE_type, align 8
  %32 = bitcast %struct._typeobject* %31 to %struct._object*
  %call31 = call i32 @PyObject_IsInstance(%struct._object* %30, %struct._object* %32)
  store i32 %call31, i32* %isinstance, align 4
  %33 = load i32, i32* %isinstance, align 4
  %cmp32 = icmp eq i32 %33, -1
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.end.30
  store i32 1, i32* %retval
  br label %return

if.end.34:                                        ; preds = %if.end.30
  %34 = load i32, i32* %isinstance, align 4
  %tobool35 = icmp ne i32 %34, 0
  br i1 %tobool35, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %if.end.34
  %35 = load i32*, i32** %out.addr, align 8
  store i32 6, i32* %35, align 4
  store i32 0, i32* %retval
  br label %return

if.end.37:                                        ; preds = %if.end.34
  %36 = load %struct._object*, %struct._object** %obj.addr, align 8
  %37 = load %struct._typeobject*, %struct._typeobject** @Is_type, align 8
  %38 = bitcast %struct._typeobject* %37 to %struct._object*
  %call38 = call i32 @PyObject_IsInstance(%struct._object* %36, %struct._object* %38)
  store i32 %call38, i32* %isinstance, align 4
  %39 = load i32, i32* %isinstance, align 4
  %cmp39 = icmp eq i32 %39, -1
  br i1 %cmp39, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %if.end.37
  store i32 1, i32* %retval
  br label %return

if.end.41:                                        ; preds = %if.end.37
  %40 = load i32, i32* %isinstance, align 4
  %tobool42 = icmp ne i32 %40, 0
  br i1 %tobool42, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.end.41
  %41 = load i32*, i32** %out.addr, align 8
  store i32 7, i32* %41, align 4
  store i32 0, i32* %retval
  br label %return

if.end.44:                                        ; preds = %if.end.41
  %42 = load %struct._object*, %struct._object** %obj.addr, align 8
  %43 = load %struct._typeobject*, %struct._typeobject** @IsNot_type, align 8
  %44 = bitcast %struct._typeobject* %43 to %struct._object*
  %call45 = call i32 @PyObject_IsInstance(%struct._object* %42, %struct._object* %44)
  store i32 %call45, i32* %isinstance, align 4
  %45 = load i32, i32* %isinstance, align 4
  %cmp46 = icmp eq i32 %45, -1
  br i1 %cmp46, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %if.end.44
  store i32 1, i32* %retval
  br label %return

if.end.48:                                        ; preds = %if.end.44
  %46 = load i32, i32* %isinstance, align 4
  %tobool49 = icmp ne i32 %46, 0
  br i1 %tobool49, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %if.end.48
  %47 = load i32*, i32** %out.addr, align 8
  store i32 8, i32* %47, align 4
  store i32 0, i32* %retval
  br label %return

if.end.51:                                        ; preds = %if.end.48
  %48 = load %struct._object*, %struct._object** %obj.addr, align 8
  %49 = load %struct._typeobject*, %struct._typeobject** @In_type, align 8
  %50 = bitcast %struct._typeobject* %49 to %struct._object*
  %call52 = call i32 @PyObject_IsInstance(%struct._object* %48, %struct._object* %50)
  store i32 %call52, i32* %isinstance, align 4
  %51 = load i32, i32* %isinstance, align 4
  %cmp53 = icmp eq i32 %51, -1
  br i1 %cmp53, label %if.then.54, label %if.end.55

if.then.54:                                       ; preds = %if.end.51
  store i32 1, i32* %retval
  br label %return

if.end.55:                                        ; preds = %if.end.51
  %52 = load i32, i32* %isinstance, align 4
  %tobool56 = icmp ne i32 %52, 0
  br i1 %tobool56, label %if.then.57, label %if.end.58

if.then.57:                                       ; preds = %if.end.55
  %53 = load i32*, i32** %out.addr, align 8
  store i32 9, i32* %53, align 4
  store i32 0, i32* %retval
  br label %return

if.end.58:                                        ; preds = %if.end.55
  %54 = load %struct._object*, %struct._object** %obj.addr, align 8
  %55 = load %struct._typeobject*, %struct._typeobject** @NotIn_type, align 8
  %56 = bitcast %struct._typeobject* %55 to %struct._object*
  %call59 = call i32 @PyObject_IsInstance(%struct._object* %54, %struct._object* %56)
  store i32 %call59, i32* %isinstance, align 4
  %57 = load i32, i32* %isinstance, align 4
  %cmp60 = icmp eq i32 %57, -1
  br i1 %cmp60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.end.58
  store i32 1, i32* %retval
  br label %return

if.end.62:                                        ; preds = %if.end.58
  %58 = load i32, i32* %isinstance, align 4
  %tobool63 = icmp ne i32 %58, 0
  br i1 %tobool63, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %if.end.62
  %59 = load i32*, i32** %out.addr, align 8
  store i32 10, i32* %59, align 4
  store i32 0, i32* %retval
  br label %return

if.end.65:                                        ; preds = %if.end.62
  %60 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %61 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call66 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %60, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.407, i32 0, i32 0), %struct._object* %61)
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.65, %if.then.64, %if.then.61, %if.then.57, %if.then.54, %if.then.50, %if.then.47, %if.then.43, %if.then.40, %if.then.36, %if.then.33, %if.then.29, %if.then.26, %if.then.22, %if.then.19, %if.then.15, %if.then.12, %if.then.8, %if.then.5, %if.then.1, %if.then
  %62 = load i32, i32* %retval
  ret i32 %62
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_string(%struct._object* %obj, %struct._object** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._object**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._object** %out, %struct._object*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %1, @PyUnicode_Type
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct._object*, %struct._object** %obj.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %cmp2 = icmp eq %struct._typeobject* %3, @PyBytes_Type
  br i1 %cmp2, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.408, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load %struct._object*, %struct._object** %obj.addr, align 8
  %6 = load %struct._object**, %struct._object*** %out.addr, align 8
  %7 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i32 @obj2ast_object(%struct._object* %5, %struct._object** %6, %struct._arena* %7)
  store i32 %call, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_bytes(%struct._object* %obj, %struct._object** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._object**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._object** %out, %struct._object*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %1, @PyBytes_Type
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.409, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %obj.addr, align 8
  %4 = load %struct._object**, %struct._object*** %out.addr, align 8
  %5 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call = call i32 @obj2ast_object(%struct._object* %3, %struct._object** %4, %struct._arena* %5)
  store i32 %call, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_singleton(%struct._object* %obj, %struct._object** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._object**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._object** %out, %struct._object*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %cmp = icmp ne %struct._object* %0, @_Py_NoneStruct
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8
  %cmp1 = icmp ne %struct._object* %1, getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)
  br i1 %cmp1, label %land.lhs.true.2, label %if.end

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %2 = load %struct._object*, %struct._object** %obj.addr, align 8
  %cmp3 = icmp ne %struct._object* %2, getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0)
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.2
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.410, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.2, %land.lhs.true, %entry
  %4 = load %struct._object*, %struct._object** %obj.addr, align 8
  %5 = load %struct._object**, %struct._object*** %out.addr, align 8
  store %struct._object* %4, %struct._object** %5, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_expr_context(%struct._object* %obj, i32* %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca i32*, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %isinstance = alloca i32, align 4
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store i32* %out, i32** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %1 = load %struct._typeobject*, %struct._typeobject** @Load_type, align 8
  %2 = bitcast %struct._typeobject* %1 to %struct._object*
  %call = call i32 @PyObject_IsInstance(%struct._object* %0, %struct._object* %2)
  store i32 %call, i32* %isinstance, align 4
  %3 = load i32, i32* %isinstance, align 4
  %cmp = icmp eq i32 %3, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %isinstance, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  %5 = load i32*, i32** %out.addr, align 8
  store i32 1, i32* %5, align 4
  store i32 0, i32* %retval
  br label %return

if.end.2:                                         ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %obj.addr, align 8
  %7 = load %struct._typeobject*, %struct._typeobject** @Store_type, align 8
  %8 = bitcast %struct._typeobject* %7 to %struct._object*
  %call3 = call i32 @PyObject_IsInstance(%struct._object* %6, %struct._object* %8)
  store i32 %call3, i32* %isinstance, align 4
  %9 = load i32, i32* %isinstance, align 4
  %cmp4 = icmp eq i32 %9, -1
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.2
  store i32 1, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.end.2
  %10 = load i32, i32* %isinstance, align 4
  %tobool7 = icmp ne i32 %10, 0
  br i1 %tobool7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.6
  %11 = load i32*, i32** %out.addr, align 8
  store i32 2, i32* %11, align 4
  store i32 0, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %12 = load %struct._object*, %struct._object** %obj.addr, align 8
  %13 = load %struct._typeobject*, %struct._typeobject** @Del_type, align 8
  %14 = bitcast %struct._typeobject* %13 to %struct._object*
  %call10 = call i32 @PyObject_IsInstance(%struct._object* %12, %struct._object* %14)
  store i32 %call10, i32* %isinstance, align 4
  %15 = load i32, i32* %isinstance, align 4
  %cmp11 = icmp eq i32 %15, -1
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end.9
  store i32 1, i32* %retval
  br label %return

if.end.13:                                        ; preds = %if.end.9
  %16 = load i32, i32* %isinstance, align 4
  %tobool14 = icmp ne i32 %16, 0
  br i1 %tobool14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.13
  %17 = load i32*, i32** %out.addr, align 8
  store i32 3, i32* %17, align 4
  store i32 0, i32* %retval
  br label %return

if.end.16:                                        ; preds = %if.end.13
  %18 = load %struct._object*, %struct._object** %obj.addr, align 8
  %19 = load %struct._typeobject*, %struct._typeobject** @AugLoad_type, align 8
  %20 = bitcast %struct._typeobject* %19 to %struct._object*
  %call17 = call i32 @PyObject_IsInstance(%struct._object* %18, %struct._object* %20)
  store i32 %call17, i32* %isinstance, align 4
  %21 = load i32, i32* %isinstance, align 4
  %cmp18 = icmp eq i32 %21, -1
  br i1 %cmp18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.16
  store i32 1, i32* %retval
  br label %return

if.end.20:                                        ; preds = %if.end.16
  %22 = load i32, i32* %isinstance, align 4
  %tobool21 = icmp ne i32 %22, 0
  br i1 %tobool21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.20
  %23 = load i32*, i32** %out.addr, align 8
  store i32 4, i32* %23, align 4
  store i32 0, i32* %retval
  br label %return

if.end.23:                                        ; preds = %if.end.20
  %24 = load %struct._object*, %struct._object** %obj.addr, align 8
  %25 = load %struct._typeobject*, %struct._typeobject** @AugStore_type, align 8
  %26 = bitcast %struct._typeobject* %25 to %struct._object*
  %call24 = call i32 @PyObject_IsInstance(%struct._object* %24, %struct._object* %26)
  store i32 %call24, i32* %isinstance, align 4
  %27 = load i32, i32* %isinstance, align 4
  %cmp25 = icmp eq i32 %27, -1
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.23
  store i32 1, i32* %retval
  br label %return

if.end.27:                                        ; preds = %if.end.23
  %28 = load i32, i32* %isinstance, align 4
  %tobool28 = icmp ne i32 %28, 0
  br i1 %tobool28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.end.27
  %29 = load i32*, i32** %out.addr, align 8
  store i32 5, i32* %29, align 4
  store i32 0, i32* %retval
  br label %return

if.end.30:                                        ; preds = %if.end.27
  %30 = load %struct._object*, %struct._object** %obj.addr, align 8
  %31 = load %struct._typeobject*, %struct._typeobject** @Param_type, align 8
  %32 = bitcast %struct._typeobject* %31 to %struct._object*
  %call31 = call i32 @PyObject_IsInstance(%struct._object* %30, %struct._object* %32)
  store i32 %call31, i32* %isinstance, align 4
  %33 = load i32, i32* %isinstance, align 4
  %cmp32 = icmp eq i32 %33, -1
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.end.30
  store i32 1, i32* %retval
  br label %return

if.end.34:                                        ; preds = %if.end.30
  %34 = load i32, i32* %isinstance, align 4
  %tobool35 = icmp ne i32 %34, 0
  br i1 %tobool35, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %if.end.34
  %35 = load i32*, i32** %out.addr, align 8
  store i32 6, i32* %35, align 4
  store i32 0, i32* %retval
  br label %return

if.end.37:                                        ; preds = %if.end.34
  %36 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %37 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call38 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %36, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.411, i32 0, i32 0), %struct._object* %37)
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.37, %if.then.36, %if.then.33, %if.then.29, %if.then.26, %if.then.22, %if.then.19, %if.then.15, %if.then.12, %if.then.8, %if.then.5, %if.then.1, %if.then
  %38 = load i32, i32* %retval
  ret i32 %38
}

; Function Attrs: nounwind uwtable
define internal i32 @obj2ast_slice(%struct._object* %obj, %struct._slice** %out, %struct._arena* %arena) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %out.addr = alloca %struct._slice**, align 8
  %arena.addr = alloca %struct._arena*, align 8
  %isinstance = alloca i32, align 4
  %tmp = alloca %struct._object*, align 8
  %lower = alloca %struct._expr*, align 8
  %upper = alloca %struct._expr*, align 8
  %step = alloca %struct._expr*, align 8
  %res = alloca i32, align 4
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %res36 = alloca i32, align 4
  %_py_tmp47 = alloca %struct._object*, align 8
  %_py_decref_tmp52 = alloca %struct._object*, align 8
  %res70 = alloca i32, align 4
  %_py_tmp81 = alloca %struct._object*, align 8
  %_py_decref_tmp86 = alloca %struct._object*, align 8
  %dims = alloca %struct.asdl_seq*, align 8
  %res116 = alloca i32, align 4
  %len = alloca i64, align 8
  %i = alloca i64, align 8
  %value = alloca %struct._slice*, align 8
  %_py_tmp142 = alloca %struct._object*, align 8
  %_py_decref_tmp147 = alloca %struct._object*, align 8
  %value173 = alloca %struct._expr*, align 8
  %res178 = alloca i32, align 4
  %_py_tmp189 = alloca %struct._object*, align 8
  %_py_decref_tmp194 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp220 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store %struct._slice** %out, %struct._slice*** %out.addr, align 8
  store %struct._arena* %arena, %struct._arena** %arena.addr, align 8
  store %struct._object* null, %struct._object** %tmp, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %cmp = icmp eq %struct._object* %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._slice**, %struct._slice*** %out.addr, align 8
  store %struct._slice* null, %struct._slice** %1, align 8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %obj.addr, align 8
  %3 = load %struct._typeobject*, %struct._typeobject** @Slice_type, align 8
  %4 = bitcast %struct._typeobject* %3 to %struct._object*
  %call = call i32 @PyObject_IsInstance(%struct._object* %2, %struct._object* %4)
  store i32 %call, i32* %isinstance, align 4
  %5 = load i32, i32* %isinstance, align 4
  %cmp1 = icmp eq i32 %5, -1
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load i32, i32* %isinstance, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then.4, label %if.end.104

if.then.4:                                        ; preds = %if.end.3
  %7 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call8 = call i32 @exists_not_none(%struct._object* %7, %struct._Py_Identifier* @PyId_lower)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then.10, label %if.else.30

if.then.10:                                       ; preds = %if.then.4
  %8 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call12 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %8, %struct._Py_Identifier* @PyId_lower)
  store %struct._object* %call12, %struct._object** %tmp, align 8
  %9 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp13 = icmp eq %struct._object* %9, null
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.then.10
  br label %failed

if.end.15:                                        ; preds = %if.then.10
  %10 = load %struct._object*, %struct._object** %tmp, align 8
  %11 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call16 = call i32 @obj2ast_expr(%struct._object* %10, %struct._expr** %lower, %struct._arena* %11)
  store i32 %call16, i32* %res, align 4
  %12 = load i32, i32* %res, align 4
  %cmp17 = icmp ne i32 %12, 0
  br i1 %cmp17, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.end.15
  br label %failed

if.end.19:                                        ; preds = %if.end.15
  br label %do.body

do.body:                                          ; preds = %if.end.19
  %13 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %13, %struct._object** %_py_tmp, align 8
  %14 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp21 = icmp ne %struct._object* %14, null
  br i1 %cmp21, label %if.then.22, label %if.end.28

if.then.22:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.23

do.body.23:                                       ; preds = %if.then.22
  %15 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0
  %17 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %17, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp25 = icmp ne i64 %dec, 0
  br i1 %cmp25, label %if.then.26, label %if.else

if.then.26:                                       ; preds = %do.body.23
  br label %if.end.27

if.else:                                          ; preds = %do.body.23
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %20(%struct._object* %21)
  br label %if.end.27

if.end.27:                                        ; preds = %if.else, %if.then.26
  br label %do.end

do.end:                                           ; preds = %if.end.27
  br label %if.end.28

if.end.28:                                        ; preds = %do.end, %do.body
  br label %do.end.29

do.end.29:                                        ; preds = %if.end.28
  br label %if.end.31

if.else.30:                                       ; preds = %if.then.4
  store %struct._expr* null, %struct._expr** %lower, align 8
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.30, %do.end.29
  %22 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call32 = call i32 @exists_not_none(%struct._object* %22, %struct._Py_Identifier* @PyId_upper)
  %tobool33 = icmp ne i32 %call32, 0
  br i1 %tobool33, label %if.then.34, label %if.else.64

if.then.34:                                       ; preds = %if.end.31
  %23 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call37 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %23, %struct._Py_Identifier* @PyId_upper)
  store %struct._object* %call37, %struct._object** %tmp, align 8
  %24 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp38 = icmp eq %struct._object* %24, null
  br i1 %cmp38, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %if.then.34
  br label %failed

if.end.40:                                        ; preds = %if.then.34
  %25 = load %struct._object*, %struct._object** %tmp, align 8
  %26 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call41 = call i32 @obj2ast_expr(%struct._object* %25, %struct._expr** %upper, %struct._arena* %26)
  store i32 %call41, i32* %res36, align 4
  %27 = load i32, i32* %res36, align 4
  %cmp42 = icmp ne i32 %27, 0
  br i1 %cmp42, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.end.40
  br label %failed

if.end.44:                                        ; preds = %if.end.40
  br label %do.body.45

do.body.45:                                       ; preds = %if.end.44
  %28 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %28, %struct._object** %_py_tmp47, align 8
  %29 = load %struct._object*, %struct._object** %_py_tmp47, align 8
  %cmp48 = icmp ne %struct._object* %29, null
  br i1 %cmp48, label %if.then.49, label %if.end.62

if.then.49:                                       ; preds = %do.body.45
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.50

do.body.50:                                       ; preds = %if.then.49
  %30 = load %struct._object*, %struct._object** %_py_tmp47, align 8
  store %struct._object* %30, %struct._object** %_py_decref_tmp52, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8
  %ob_refcnt53 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0
  %32 = load i64, i64* %ob_refcnt53, align 8
  %dec54 = add i64 %32, -1
  store i64 %dec54, i64* %ob_refcnt53, align 8
  %cmp55 = icmp ne i64 %dec54, 0
  br i1 %cmp55, label %if.then.56, label %if.else.57

if.then.56:                                       ; preds = %do.body.50
  br label %if.end.60

if.else.57:                                       ; preds = %do.body.50
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8
  %ob_type58 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type58, align 8
  %tp_dealloc59 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc59, align 8
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8
  call void %35(%struct._object* %36)
  br label %if.end.60

if.end.60:                                        ; preds = %if.else.57, %if.then.56
  br label %do.end.61

do.end.61:                                        ; preds = %if.end.60
  br label %if.end.62

if.end.62:                                        ; preds = %do.end.61, %do.body.45
  br label %do.end.63

do.end.63:                                        ; preds = %if.end.62
  br label %if.end.65

if.else.64:                                       ; preds = %if.end.31
  store %struct._expr* null, %struct._expr** %upper, align 8
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.64, %do.end.63
  %37 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call66 = call i32 @exists_not_none(%struct._object* %37, %struct._Py_Identifier* @PyId_step)
  %tobool67 = icmp ne i32 %call66, 0
  br i1 %tobool67, label %if.then.68, label %if.else.98

if.then.68:                                       ; preds = %if.end.65
  %38 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call71 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %38, %struct._Py_Identifier* @PyId_step)
  store %struct._object* %call71, %struct._object** %tmp, align 8
  %39 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp72 = icmp eq %struct._object* %39, null
  br i1 %cmp72, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %if.then.68
  br label %failed

if.end.74:                                        ; preds = %if.then.68
  %40 = load %struct._object*, %struct._object** %tmp, align 8
  %41 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call75 = call i32 @obj2ast_expr(%struct._object* %40, %struct._expr** %step, %struct._arena* %41)
  store i32 %call75, i32* %res70, align 4
  %42 = load i32, i32* %res70, align 4
  %cmp76 = icmp ne i32 %42, 0
  br i1 %cmp76, label %if.then.77, label %if.end.78

if.then.77:                                       ; preds = %if.end.74
  br label %failed

if.end.78:                                        ; preds = %if.end.74
  br label %do.body.79

do.body.79:                                       ; preds = %if.end.78
  %43 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %43, %struct._object** %_py_tmp81, align 8
  %44 = load %struct._object*, %struct._object** %_py_tmp81, align 8
  %cmp82 = icmp ne %struct._object* %44, null
  br i1 %cmp82, label %if.then.83, label %if.end.96

if.then.83:                                       ; preds = %do.body.79
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.84

do.body.84:                                       ; preds = %if.then.83
  %45 = load %struct._object*, %struct._object** %_py_tmp81, align 8
  store %struct._object* %45, %struct._object** %_py_decref_tmp86, align 8
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8
  %ob_refcnt87 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0
  %47 = load i64, i64* %ob_refcnt87, align 8
  %dec88 = add i64 %47, -1
  store i64 %dec88, i64* %ob_refcnt87, align 8
  %cmp89 = icmp ne i64 %dec88, 0
  br i1 %cmp89, label %if.then.90, label %if.else.91

if.then.90:                                       ; preds = %do.body.84
  br label %if.end.94

if.else.91:                                       ; preds = %do.body.84
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8
  %ob_type92 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type92, align 8
  %tp_dealloc93 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc93, align 8
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8
  call void %50(%struct._object* %51)
  br label %if.end.94

if.end.94:                                        ; preds = %if.else.91, %if.then.90
  br label %do.end.95

do.end.95:                                        ; preds = %if.end.94
  br label %if.end.96

if.end.96:                                        ; preds = %do.end.95, %do.body.79
  br label %do.end.97

do.end.97:                                        ; preds = %if.end.96
  br label %if.end.99

if.else.98:                                       ; preds = %if.end.65
  store %struct._expr* null, %struct._expr** %step, align 8
  br label %if.end.99

if.end.99:                                        ; preds = %if.else.98, %do.end.97
  %52 = load %struct._expr*, %struct._expr** %lower, align 8
  %53 = load %struct._expr*, %struct._expr** %upper, align 8
  %54 = load %struct._expr*, %struct._expr** %step, align 8
  %55 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call100 = call %struct._slice* @_Py_Slice(%struct._expr* %52, %struct._expr* %53, %struct._expr* %54, %struct._arena* %55)
  %56 = load %struct._slice**, %struct._slice*** %out.addr, align 8
  store %struct._slice* %call100, %struct._slice** %56, align 8
  %57 = load %struct._slice**, %struct._slice*** %out.addr, align 8
  %58 = load %struct._slice*, %struct._slice** %57, align 8
  %cmp101 = icmp eq %struct._slice* %58, null
  br i1 %cmp101, label %if.then.102, label %if.end.103

if.then.102:                                      ; preds = %if.end.99
  br label %failed

if.end.103:                                       ; preds = %if.end.99
  store i32 0, i32* %retval
  br label %return

if.end.104:                                       ; preds = %if.end.3
  %59 = load %struct._object*, %struct._object** %obj.addr, align 8
  %60 = load %struct._typeobject*, %struct._typeobject** @ExtSlice_type, align 8
  %61 = bitcast %struct._typeobject* %60 to %struct._object*
  %call105 = call i32 @PyObject_IsInstance(%struct._object* %59, %struct._object* %61)
  store i32 %call105, i32* %isinstance, align 4
  %62 = load i32, i32* %isinstance, align 4
  %cmp106 = icmp eq i32 %62, -1
  br i1 %cmp106, label %if.then.107, label %if.end.108

if.then.107:                                      ; preds = %if.end.104
  store i32 1, i32* %retval
  br label %return

if.end.108:                                       ; preds = %if.end.104
  %63 = load i32, i32* %isinstance, align 4
  %tobool109 = icmp ne i32 %63, 0
  br i1 %tobool109, label %if.then.110, label %if.end.165

if.then.110:                                      ; preds = %if.end.108
  %64 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call112 = call i32 @_PyObject_HasAttrId(%struct._object* %64, %struct._Py_Identifier* @PyId_dims)
  %tobool113 = icmp ne i32 %call112, 0
  br i1 %tobool113, label %if.then.114, label %if.else.159

if.then.114:                                      ; preds = %if.then.110
  %65 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call119 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %65, %struct._Py_Identifier* @PyId_dims)
  store %struct._object* %call119, %struct._object** %tmp, align 8
  %66 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp120 = icmp eq %struct._object* %66, null
  br i1 %cmp120, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %if.then.114
  br label %failed

if.end.122:                                       ; preds = %if.then.114
  %67 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type123 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type123, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 19
  %69 = load i64, i64* %tp_flags, align 8
  %and = and i64 %69, 33554432
  %cmp124 = icmp ne i64 %and, 0
  br i1 %cmp124, label %if.end.128, label %if.then.125

if.then.125:                                      ; preds = %if.end.122
  %70 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %71 = load %struct._object*, %struct._object** %tmp, align 8
  %ob_type126 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type126, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 1
  %73 = load i8*, i8** %tp_name, align 8
  %call127 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %70, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.412, i32 0, i32 0), i8* %73)
  br label %failed

if.end.128:                                       ; preds = %if.end.122
  %74 = load %struct._object*, %struct._object** %tmp, align 8
  %75 = bitcast %struct._object* %74 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %75, i32 0, i32 1
  %76 = load i64, i64* %ob_size, align 8
  store i64 %76, i64* %len, align 8
  %77 = load i64, i64* %len, align 8
  %78 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call129 = call %struct.asdl_seq* @_Py_asdl_seq_new(i64 %77, %struct._arena* %78)
  store %struct.asdl_seq* %call129, %struct.asdl_seq** %dims, align 8
  %79 = load %struct.asdl_seq*, %struct.asdl_seq** %dims, align 8
  %cmp130 = icmp eq %struct.asdl_seq* %79, null
  br i1 %cmp130, label %if.then.131, label %if.end.132

if.then.131:                                      ; preds = %if.end.128
  br label %failed

if.end.132:                                       ; preds = %if.end.128
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.132
  %80 = load i64, i64* %i, align 8
  %81 = load i64, i64* %len, align 8
  %cmp133 = icmp slt i64 %80, %81
  br i1 %cmp133, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %82 = load i64, i64* %i, align 8
  %83 = load %struct._object*, %struct._object** %tmp, align 8
  %84 = bitcast %struct._object* %83 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %84, i32 0, i32 1
  %85 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %85, i64 %82
  %86 = load %struct._object*, %struct._object** %arrayidx, align 8
  %87 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call135 = call i32 @obj2ast_slice(%struct._object* %86, %struct._slice** %value, %struct._arena* %87)
  store i32 %call135, i32* %res116, align 4
  %88 = load i32, i32* %res116, align 4
  %cmp136 = icmp ne i32 %88, 0
  br i1 %cmp136, label %if.then.137, label %if.end.138

if.then.137:                                      ; preds = %for.body
  br label %failed

if.end.138:                                       ; preds = %for.body
  %89 = load %struct._slice*, %struct._slice** %value, align 8
  %90 = bitcast %struct._slice* %89 to i8*
  %91 = load i64, i64* %i, align 8
  %92 = load %struct.asdl_seq*, %struct.asdl_seq** %dims, align 8
  %elements = getelementptr inbounds %struct.asdl_seq, %struct.asdl_seq* %92, i32 0, i32 1
  %arrayidx139 = getelementptr [1 x i8*], [1 x i8*]* %elements, i32 0, i64 %91
  store i8* %90, i8** %arrayidx139, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.138
  %93 = load i64, i64* %i, align 8
  %inc = add i64 %93, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body.140

do.body.140:                                      ; preds = %for.end
  %94 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %94, %struct._object** %_py_tmp142, align 8
  %95 = load %struct._object*, %struct._object** %_py_tmp142, align 8
  %cmp143 = icmp ne %struct._object* %95, null
  br i1 %cmp143, label %if.then.144, label %if.end.157

if.then.144:                                      ; preds = %do.body.140
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.145

do.body.145:                                      ; preds = %if.then.144
  %96 = load %struct._object*, %struct._object** %_py_tmp142, align 8
  store %struct._object* %96, %struct._object** %_py_decref_tmp147, align 8
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8
  %ob_refcnt148 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 0
  %98 = load i64, i64* %ob_refcnt148, align 8
  %dec149 = add i64 %98, -1
  store i64 %dec149, i64* %ob_refcnt148, align 8
  %cmp150 = icmp ne i64 %dec149, 0
  br i1 %cmp150, label %if.then.151, label %if.else.152

if.then.151:                                      ; preds = %do.body.145
  br label %if.end.155

if.else.152:                                      ; preds = %do.body.145
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8
  %ob_type153 = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 1
  %100 = load %struct._typeobject*, %struct._typeobject** %ob_type153, align 8
  %tp_dealloc154 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %100, i32 0, i32 4
  %101 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc154, align 8
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8
  call void %101(%struct._object* %102)
  br label %if.end.155

if.end.155:                                       ; preds = %if.else.152, %if.then.151
  br label %do.end.156

do.end.156:                                       ; preds = %if.end.155
  br label %if.end.157

if.end.157:                                       ; preds = %do.end.156, %do.body.140
  br label %do.end.158

do.end.158:                                       ; preds = %if.end.157
  br label %if.end.160

if.else.159:                                      ; preds = %if.then.110
  %103 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %103, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.413, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.160:                                       ; preds = %do.end.158
  %104 = load %struct.asdl_seq*, %struct.asdl_seq** %dims, align 8
  %105 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call161 = call %struct._slice* @_Py_ExtSlice(%struct.asdl_seq* %104, %struct._arena* %105)
  %106 = load %struct._slice**, %struct._slice*** %out.addr, align 8
  store %struct._slice* %call161, %struct._slice** %106, align 8
  %107 = load %struct._slice**, %struct._slice*** %out.addr, align 8
  %108 = load %struct._slice*, %struct._slice** %107, align 8
  %cmp162 = icmp eq %struct._slice* %108, null
  br i1 %cmp162, label %if.then.163, label %if.end.164

if.then.163:                                      ; preds = %if.end.160
  br label %failed

if.end.164:                                       ; preds = %if.end.160
  store i32 0, i32* %retval
  br label %return

if.end.165:                                       ; preds = %if.end.108
  %109 = load %struct._object*, %struct._object** %obj.addr, align 8
  %110 = load %struct._typeobject*, %struct._typeobject** @Index_type, align 8
  %111 = bitcast %struct._typeobject* %110 to %struct._object*
  %call166 = call i32 @PyObject_IsInstance(%struct._object* %109, %struct._object* %111)
  store i32 %call166, i32* %isinstance, align 4
  %112 = load i32, i32* %isinstance, align 4
  %cmp167 = icmp eq i32 %112, -1
  br i1 %cmp167, label %if.then.168, label %if.end.169

if.then.168:                                      ; preds = %if.end.165
  store i32 1, i32* %retval
  br label %return

if.end.169:                                       ; preds = %if.end.165
  %113 = load i32, i32* %isinstance, align 4
  %tobool170 = icmp ne i32 %113, 0
  br i1 %tobool170, label %if.then.171, label %if.end.212

if.then.171:                                      ; preds = %if.end.169
  %114 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call174 = call i32 @_PyObject_HasAttrId(%struct._object* %114, %struct._Py_Identifier* @PyId_value)
  %tobool175 = icmp ne i32 %call174, 0
  br i1 %tobool175, label %if.then.176, label %if.else.206

if.then.176:                                      ; preds = %if.then.171
  %115 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call179 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %115, %struct._Py_Identifier* @PyId_value)
  store %struct._object* %call179, %struct._object** %tmp, align 8
  %116 = load %struct._object*, %struct._object** %tmp, align 8
  %cmp180 = icmp eq %struct._object* %116, null
  br i1 %cmp180, label %if.then.181, label %if.end.182

if.then.181:                                      ; preds = %if.then.176
  br label %failed

if.end.182:                                       ; preds = %if.then.176
  %117 = load %struct._object*, %struct._object** %tmp, align 8
  %118 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call183 = call i32 @obj2ast_expr(%struct._object* %117, %struct._expr** %value173, %struct._arena* %118)
  store i32 %call183, i32* %res178, align 4
  %119 = load i32, i32* %res178, align 4
  %cmp184 = icmp ne i32 %119, 0
  br i1 %cmp184, label %if.then.185, label %if.end.186

if.then.185:                                      ; preds = %if.end.182
  br label %failed

if.end.186:                                       ; preds = %if.end.182
  br label %do.body.187

do.body.187:                                      ; preds = %if.end.186
  %120 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %120, %struct._object** %_py_tmp189, align 8
  %121 = load %struct._object*, %struct._object** %_py_tmp189, align 8
  %cmp190 = icmp ne %struct._object* %121, null
  br i1 %cmp190, label %if.then.191, label %if.end.204

if.then.191:                                      ; preds = %do.body.187
  store %struct._object* null, %struct._object** %tmp, align 8
  br label %do.body.192

do.body.192:                                      ; preds = %if.then.191
  %122 = load %struct._object*, %struct._object** %_py_tmp189, align 8
  store %struct._object* %122, %struct._object** %_py_decref_tmp194, align 8
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8
  %ob_refcnt195 = getelementptr inbounds %struct._object, %struct._object* %123, i32 0, i32 0
  %124 = load i64, i64* %ob_refcnt195, align 8
  %dec196 = add i64 %124, -1
  store i64 %dec196, i64* %ob_refcnt195, align 8
  %cmp197 = icmp ne i64 %dec196, 0
  br i1 %cmp197, label %if.then.198, label %if.else.199

if.then.198:                                      ; preds = %do.body.192
  br label %if.end.202

if.else.199:                                      ; preds = %do.body.192
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8
  %ob_type200 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 1
  %126 = load %struct._typeobject*, %struct._typeobject** %ob_type200, align 8
  %tp_dealloc201 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %126, i32 0, i32 4
  %127 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc201, align 8
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8
  call void %127(%struct._object* %128)
  br label %if.end.202

if.end.202:                                       ; preds = %if.else.199, %if.then.198
  br label %do.end.203

do.end.203:                                       ; preds = %if.end.202
  br label %if.end.204

if.end.204:                                       ; preds = %do.end.203, %do.body.187
  br label %do.end.205

do.end.205:                                       ; preds = %if.end.204
  br label %if.end.207

if.else.206:                                      ; preds = %if.then.171
  %129 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %129, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.414, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end.207:                                       ; preds = %do.end.205
  %130 = load %struct._expr*, %struct._expr** %value173, align 8
  %131 = load %struct._arena*, %struct._arena** %arena.addr, align 8
  %call208 = call %struct._slice* @_Py_Index(%struct._expr* %130, %struct._arena* %131)
  %132 = load %struct._slice**, %struct._slice*** %out.addr, align 8
  store %struct._slice* %call208, %struct._slice** %132, align 8
  %133 = load %struct._slice**, %struct._slice*** %out.addr, align 8
  %134 = load %struct._slice*, %struct._slice** %133, align 8
  %cmp209 = icmp eq %struct._slice* %134, null
  br i1 %cmp209, label %if.then.210, label %if.end.211

if.then.210:                                      ; preds = %if.end.207
  br label %failed

if.end.211:                                       ; preds = %if.end.207
  store i32 0, i32* %retval
  br label %return

if.end.212:                                       ; preds = %if.end.169
  %135 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %136 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call213 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %135, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.415, i32 0, i32 0), %struct._object* %136)
  br label %failed

failed:                                           ; preds = %if.end.212, %if.then.210, %if.then.185, %if.then.181, %if.then.163, %if.then.137, %if.then.131, %if.then.125, %if.then.121, %if.then.102, %if.then.77, %if.then.73, %if.then.43, %if.then.39, %if.then.18, %if.then.14
  br label %do.body.214

do.body.214:                                      ; preds = %failed
  %137 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %137, %struct._object** %_py_xdecref_tmp, align 8
  %138 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp216 = icmp ne %struct._object* %138, null
  br i1 %cmp216, label %if.then.217, label %if.end.230

if.then.217:                                      ; preds = %do.body.214
  br label %do.body.218

do.body.218:                                      ; preds = %if.then.217
  %139 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %139, %struct._object** %_py_decref_tmp220, align 8
  %140 = load %struct._object*, %struct._object** %_py_decref_tmp220, align 8
  %ob_refcnt221 = getelementptr inbounds %struct._object, %struct._object* %140, i32 0, i32 0
  %141 = load i64, i64* %ob_refcnt221, align 8
  %dec222 = add i64 %141, -1
  store i64 %dec222, i64* %ob_refcnt221, align 8
  %cmp223 = icmp ne i64 %dec222, 0
  br i1 %cmp223, label %if.then.224, label %if.else.225

if.then.224:                                      ; preds = %do.body.218
  br label %if.end.228

if.else.225:                                      ; preds = %do.body.218
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp220, align 8
  %ob_type226 = getelementptr inbounds %struct._object, %struct._object* %142, i32 0, i32 1
  %143 = load %struct._typeobject*, %struct._typeobject** %ob_type226, align 8
  %tp_dealloc227 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %143, i32 0, i32 4
  %144 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc227, align 8
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp220, align 8
  call void %144(%struct._object* %145)
  br label %if.end.228

if.end.228:                                       ; preds = %if.else.225, %if.then.224
  br label %do.end.229

do.end.229:                                       ; preds = %if.end.228
  br label %if.end.230

if.end.230:                                       ; preds = %do.end.229, %do.body.214
  br label %do.end.231

do.end.231:                                       ; preds = %if.end.230
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %do.end.231, %if.end.211, %if.else.206, %if.then.168, %if.end.164, %if.else.159, %if.then.107, %if.end.103, %if.then.2, %if.then
  %146 = load i32, i32* %retval
  ret i32 %146
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
