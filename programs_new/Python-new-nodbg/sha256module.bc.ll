; ModuleID = './sha256module.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._object = type { i64, %struct._typeobject* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct.SHAobject = type { %struct._object, [8 x i32], i32, i32, [64 x i8], i32, i32 }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, i32* }
%struct.anon = type { i32 }
%struct.PyCompactUnicodeObject = type { %struct.PyASCIIObject, i64, i8*, i64 }
%struct.PyUnicodeObject = type { %struct.PyCompactUnicodeObject, %union.anon }
%union.anon = type { i8* }

@PyType_Type = external global %struct._typeobject, align 8
@SHA224type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i32 0, i32 0), i64 128, i64 0, void (%struct._object*)* @SHA_dealloc, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 262144, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([5 x %struct.PyMethodDef], [5 x %struct.PyMethodDef]* @SHA_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([2 x %struct.PyMemberDef], [2 x %struct.PyMemberDef]* @SHA_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([3 x %struct.PyGetSetDef], [3 x %struct.PyGetSetDef]* @SHA_getseters, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@SHA256type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i32 0, i32 0), i64 128, i64 0, void (%struct._object*)* @SHA_dealloc, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 262144, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([5 x %struct.PyMethodDef], [5 x %struct.PyMethodDef]* @SHA_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([2 x %struct.PyMemberDef], [2 x %struct.PyMemberDef]* @SHA_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([3 x %struct.PyGetSetDef], [3 x %struct.PyGetSetDef]* @SHA_getseters, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@_sha256module = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i8* null, i64 -1, %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @SHA_functions, i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, void (i8*)* null }, align 8
@.str = private unnamed_addr constant [11 x i8] c"SHA224Type\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"SHA256Type\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"_sha256.sha224\00", align 1
@SHA_methods = internal global [5 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.SHAobject*, %struct._object*)* @SHA256_copy to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @SHA256_copy__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.SHAobject*, %struct._object*)* @SHA256_digest to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @SHA256_digest__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.SHAobject*, %struct._object*)* @SHA256_hexdigest to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @SHA256_hexdigest__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.SHAobject*, %struct._object*)* @SHA256_update to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @SHA256_update__doc__, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@SHA_members = internal global [2 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0), i32 1, i64 124, i32 1, i8* null }, %struct.PyMemberDef zeroinitializer], align 16
@SHA_getseters = internal global [3 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* @SHA256_get_block_size, i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* @SHA256_get_name, i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.3 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@SHA256_copy__doc__ = internal global [34 x i8] c"Return a copy of the hash object.\00", align 16
@.str.4 = private unnamed_addr constant [7 x i8] c"digest\00", align 1
@SHA256_digest__doc__ = internal global [52 x i8] c"Return the digest value as a string of binary data.\00", align 16
@.str.5 = private unnamed_addr constant [10 x i8] c"hexdigest\00", align 1
@SHA256_hexdigest__doc__ = internal global [59 x i8] c"Return the digest value as a string of hexadecimal digits.\00", align 16
@.str.6 = private unnamed_addr constant [7 x i8] c"update\00", align 1
@SHA256_update__doc__ = internal global [58 x i8] c"Update this hash object's state with the provided string.\00", align 16
@Py_hexdigits = external global i8*, align 8
@.str.7 = private unnamed_addr constant [9 x i8] c"O:update\00", align 1
@PyExc_TypeError = external global %struct._object*, align 8
@.str.8 = private unnamed_addr constant [47 x i8] c"Unicode-objects must be encoded before hashing\00", align 1
@.str.9 = private unnamed_addr constant [42 x i8] c"object supporting the buffer API required\00", align 1
@PyExc_BufferError = external global %struct._object*, align 8
@.str.10 = private unnamed_addr constant [32 x i8] c"Buffer must be single dimension\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@.str.11 = private unnamed_addr constant [12 x i8] c"digest_size\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"block_size\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"sha256\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"sha224\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"_sha256.sha256\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"_sha256\00", align 1
@SHA_functions = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @SHA256_new to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @SHA256_new__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @SHA224_new to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @SHA224_new__doc__, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@SHA256_new__doc__ = internal global [72 x i8] c"Return a new SHA-256 hash object; optionally initialized with a string.\00", align 16
@SHA224_new__doc__ = internal global [72 x i8] c"Return a new SHA-224 hash object; optionally initialized with a string.\00", align 16
@SHA256_new.kwlist = internal global [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i8* null], align 16
@.str.18 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"|O:new\00", align 1
@SHA224_new.kwlist = internal global [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i8* null], align 16

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit__sha256() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %m = alloca %struct._object*, align 8
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @SHA224type, i32 0, i32 0, i32 0, i32 1), align 8
  %call = call i32 @PyType_Ready(%struct._typeobject* @SHA224type)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @SHA256type, i32 0, i32 0, i32 0, i32 1), align 8
  %call1 = call i32 @PyType_Ready(%struct._typeobject* @SHA256type)
  %cmp2 = icmp slt i32 %call1, 0
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  %call5 = call %struct._object* @PyModule_Create2(%struct.PyModuleDef* @_sha256module, i32 1013)
  store %struct._object* %call5, %struct._object** %m, align 8
  %0 = load %struct._object*, %struct._object** %m, align 8
  %cmp6 = icmp eq %struct._object* %0, null
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.8:                                         ; preds = %if.end.4
  %1 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @SHA224type, i32 0, i32 0, i32 0, i32 0), align 8
  %inc = add i64 %1, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @SHA224type, i32 0, i32 0, i32 0, i32 0), align 8
  %2 = load %struct._object*, %struct._object** %m, align 8
  %call9 = call i32 @PyModule_AddObject(%struct._object* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @SHA224type, i32 0, i32 0, i32 0))
  %3 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @SHA256type, i32 0, i32 0, i32 0, i32 0), align 8
  %inc10 = add i64 %3, 1
  store i64 %inc10, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @SHA256type, i32 0, i32 0, i32 0, i32 0), align 8
  %4 = load %struct._object*, %struct._object** %m, align 8
  %call11 = call i32 @PyModule_AddObject(%struct._object* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @SHA256type, i32 0, i32 0, i32 0))
  %5 = load %struct._object*, %struct._object** %m, align 8
  store %struct._object* %5, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.8, %if.then.7, %if.then.3, %if.then
  %6 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %6
}

declare i32 @PyType_Ready(%struct._typeobject*) #1

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #1

declare i32 @PyModule_AddObject(%struct._object*, i8*, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal void @SHA_dealloc(%struct._object* %ptr) #0 {
entry:
  %ptr.addr = alloca %struct._object*, align 8
  store %struct._object* %ptr, %struct._object** %ptr.addr, align 8
  %0 = load %struct._object*, %struct._object** %ptr.addr, align 8
  %1 = bitcast %struct._object* %0 to i8*
  call void @PyObject_Free(i8* %1)
  ret void
}

declare void @PyObject_Free(i8*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @SHA256_copy(%struct.SHAobject* %self, %struct._object* %unused) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.SHAobject*, align 8
  %unused.addr = alloca %struct._object*, align 8
  %newobj = alloca %struct.SHAobject*, align 8
  store %struct.SHAobject* %self, %struct.SHAobject** %self.addr, align 8
  store %struct._object* %unused, %struct._object** %unused.addr, align 8
  %0 = load %struct.SHAobject*, %struct.SHAobject** %self.addr, align 8
  %1 = bitcast %struct.SHAobject* %0 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %2, @SHA256type
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = call %struct.SHAobject* @newSHA256object()
  store %struct.SHAobject* %call, %struct.SHAobject** %newobj, align 8
  %cmp1 = icmp eq %struct.SHAobject* %call, null
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.7

if.else:                                          ; preds = %entry
  %call3 = call %struct.SHAobject* @newSHA224object()
  store %struct.SHAobject* %call3, %struct.SHAobject** %newobj, align 8
  %cmp4 = icmp eq %struct.SHAobject* %call3, null
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.else
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.6:                                         ; preds = %if.else
  br label %if.end.7

if.end.7:                                         ; preds = %if.end.6, %if.end
  %3 = load %struct.SHAobject*, %struct.SHAobject** %self.addr, align 8
  %4 = load %struct.SHAobject*, %struct.SHAobject** %newobj, align 8
  call void @SHAcopy(%struct.SHAobject* %3, %struct.SHAobject* %4)
  %5 = load %struct.SHAobject*, %struct.SHAobject** %newobj, align 8
  %6 = bitcast %struct.SHAobject* %5 to %struct._object*
  store %struct._object* %6, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.7, %if.then.5, %if.then.2
  %7 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %7
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @SHA256_digest(%struct.SHAobject* %self, %struct._object* %unused) #0 {
entry:
  %self.addr = alloca %struct.SHAobject*, align 8
  %unused.addr = alloca %struct._object*, align 8
  %digest = alloca [32 x i8], align 16
  %temp = alloca %struct.SHAobject, align 8
  store %struct.SHAobject* %self, %struct.SHAobject** %self.addr, align 8
  store %struct._object* %unused, %struct._object** %unused.addr, align 8
  %0 = load %struct.SHAobject*, %struct.SHAobject** %self.addr, align 8
  call void @SHAcopy(%struct.SHAobject* %0, %struct.SHAobject* %temp)
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %digest, i32 0, i32 0
  call void @sha_final(i8* %arraydecay, %struct.SHAobject* %temp)
  %arraydecay1 = getelementptr inbounds [32 x i8], [32 x i8]* %digest, i32 0, i32 0
  %1 = load %struct.SHAobject*, %struct.SHAobject** %self.addr, align 8
  %digestsize = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %1, i32 0, i32 6
  %2 = load i32, i32* %digestsize, align 4
  %conv = sext i32 %2 to i64
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* %arraydecay1, i64 %conv)
  ret %struct._object* %call
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @SHA256_hexdigest(%struct.SHAobject* %self, %struct._object* %unused) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.SHAobject*, align 8
  %unused.addr = alloca %struct._object*, align 8
  %digest = alloca [32 x i8], align 16
  %temp = alloca %struct.SHAobject, align 8
  %retval1 = alloca %struct._object*, align 8
  %hex_digest = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %c = alloca i8, align 1
  store %struct.SHAobject* %self, %struct.SHAobject** %self.addr, align 8
  store %struct._object* %unused, %struct._object** %unused.addr, align 8
  %0 = load %struct.SHAobject*, %struct.SHAobject** %self.addr, align 8
  call void @SHAcopy(%struct.SHAobject* %0, %struct.SHAobject* %temp)
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %digest, i32 0, i32 0
  call void @sha_final(i8* %arraydecay, %struct.SHAobject* %temp)
  %1 = load %struct.SHAobject*, %struct.SHAobject** %self.addr, align 8
  %digestsize = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %1, i32 0, i32 6
  %2 = load i32, i32* %digestsize, align 4
  %mul = mul i32 %2, 2
  %conv = sext i32 %mul to i64
  %call = call %struct._object* @PyUnicode_New(i64 %conv, i32 127)
  store %struct._object* %call, %struct._object** %retval1, align 8
  %3 = load %struct._object*, %struct._object** %retval1, align 8
  %tobool = icmp ne %struct._object* %3, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %retval1, align 8
  %5 = bitcast %struct._object* %4 to %struct.PyASCIIObject*
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %5, i32 0, i32 3
  %6 = bitcast %struct.anon* %state to i32*
  %bf.load = load i32, i32* %6, align 4
  %bf.lshr = lshr i32 %bf.load, 5
  %bf.clear = and i32 %bf.lshr, 1
  %tobool2 = icmp ne i32 %bf.clear, 0
  br i1 %tobool2, label %cond.true, label %cond.false.10

cond.true:                                        ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %retval1, align 8
  %8 = bitcast %struct._object* %7 to %struct.PyASCIIObject*
  %state3 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %8, i32 0, i32 3
  %9 = bitcast %struct.anon* %state3 to i32*
  %bf.load4 = load i32, i32* %9, align 4
  %bf.lshr5 = lshr i32 %bf.load4, 6
  %bf.clear6 = and i32 %bf.lshr5, 1
  %tobool7 = icmp ne i32 %bf.clear6, 0
  br i1 %tobool7, label %cond.true.8, label %cond.false

cond.true.8:                                      ; preds = %cond.true
  %10 = load %struct._object*, %struct._object** %retval1, align 8
  %11 = bitcast %struct._object* %10 to %struct.PyASCIIObject*
  %add.ptr = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %11, i64 1
  %12 = bitcast %struct.PyASCIIObject* %add.ptr to i8*
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %13 = load %struct._object*, %struct._object** %retval1, align 8
  %14 = bitcast %struct._object* %13 to %struct.PyCompactUnicodeObject*
  %add.ptr9 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %14, i64 1
  %15 = bitcast %struct.PyCompactUnicodeObject* %add.ptr9 to i8*
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.8
  %cond = phi i8* [ %12, %cond.true.8 ], [ %15, %cond.false ]
  br label %cond.end.11

cond.false.10:                                    ; preds = %if.end
  %16 = load %struct._object*, %struct._object** %retval1, align 8
  %17 = bitcast %struct._object* %16 to %struct.PyUnicodeObject*
  %data = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %17, i32 0, i32 1
  %any = bitcast %union.anon* %data to i8**
  %18 = load i8*, i8** %any, align 8
  br label %cond.end.11

cond.end.11:                                      ; preds = %cond.false.10, %cond.end
  %cond12 = phi i8* [ %cond, %cond.end ], [ %18, %cond.false.10 ]
  store i8* %cond12, i8** %hex_digest, align 8
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.11
  %19 = load i32, i32* %i, align 4
  %20 = load %struct.SHAobject*, %struct.SHAobject** %self.addr, align 8
  %digestsize13 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %20, i32 0, i32 6
  %21 = load i32, i32* %digestsize13, align 4
  %cmp = icmp slt i32 %19, %21
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i32, i32* %i, align 4
  %idxprom = sext i32 %22 to i64
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %digest, i32 0, i64 %idxprom
  %23 = load i8, i8* %arrayidx, align 1
  %conv15 = zext i8 %23 to i32
  %shr = ashr i32 %conv15, 4
  %and = and i32 %shr, 15
  %conv16 = trunc i32 %and to i8
  store i8 %conv16, i8* %c, align 1
  %24 = load i8, i8* %c, align 1
  %idxprom17 = zext i8 %24 to i64
  %25 = load i8*, i8** @Py_hexdigits, align 8
  %arrayidx18 = getelementptr i8, i8* %25, i64 %idxprom17
  %26 = load i8, i8* %arrayidx18, align 1
  %27 = load i32, i32* %j, align 4
  %inc = add i32 %27, 1
  store i32 %inc, i32* %j, align 4
  %idxprom19 = sext i32 %27 to i64
  %28 = load i8*, i8** %hex_digest, align 8
  %arrayidx20 = getelementptr i8, i8* %28, i64 %idxprom19
  store i8 %26, i8* %arrayidx20, align 1
  %29 = load i32, i32* %i, align 4
  %idxprom21 = sext i32 %29 to i64
  %arrayidx22 = getelementptr [32 x i8], [32 x i8]* %digest, i32 0, i64 %idxprom21
  %30 = load i8, i8* %arrayidx22, align 1
  %conv23 = zext i8 %30 to i32
  %and24 = and i32 %conv23, 15
  %conv25 = trunc i32 %and24 to i8
  store i8 %conv25, i8* %c, align 1
  %31 = load i8, i8* %c, align 1
  %idxprom26 = zext i8 %31 to i64
  %32 = load i8*, i8** @Py_hexdigits, align 8
  %arrayidx27 = getelementptr i8, i8* %32, i64 %idxprom26
  %33 = load i8, i8* %arrayidx27, align 1
  %34 = load i32, i32* %j, align 4
  %inc28 = add i32 %34, 1
  store i32 %inc28, i32* %j, align 4
  %idxprom29 = sext i32 %34 to i64
  %35 = load i8*, i8** %hex_digest, align 8
  %arrayidx30 = getelementptr i8, i8* %35, i64 %idxprom29
  store i8 %33, i8* %arrayidx30, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %36 = load i32, i32* %i, align 4
  %inc31 = add i32 %36, 1
  store i32 %inc31, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %37 = load %struct._object*, %struct._object** %retval1, align 8
  store %struct._object* %37, %struct._object** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %38 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %38
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @SHA256_update(%struct.SHAobject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.SHAobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %buf = alloca %struct.bufferinfo, align 8
  store %struct.SHAobject* %self, %struct.SHAobject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), %struct._object** %obj)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %if.end
  %1 = load %struct._object*, %struct._object** %obj, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 268435456
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %do.body
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.8, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.2:                                         ; preds = %do.body
  %5 = load %struct._object*, %struct._object** %obj, align 8
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8
  %tp_as_buffer = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 18
  %7 = load %struct.PyBufferProcs*, %struct.PyBufferProcs** %tp_as_buffer, align 8
  %cmp4 = icmp ne %struct.PyBufferProcs* %7, null
  br i1 %cmp4, label %land.lhs.true, label %if.then.8

land.lhs.true:                                    ; preds = %if.end.2
  %8 = load %struct._object*, %struct._object** %obj, align 8
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8
  %tp_as_buffer6 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 18
  %10 = load %struct.PyBufferProcs*, %struct.PyBufferProcs** %tp_as_buffer6, align 8
  %bf_getbuffer = getelementptr inbounds %struct.PyBufferProcs, %struct.PyBufferProcs* %10, i32 0, i32 0
  %11 = load i32 (%struct._object*, %struct.bufferinfo*, i32)*, i32 (%struct._object*, %struct.bufferinfo*, i32)** %bf_getbuffer, align 8
  %cmp7 = icmp ne i32 (%struct._object*, %struct.bufferinfo*, i32)* %11, null
  br i1 %cmp7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %land.lhs.true, %if.end.2
  %12 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.9:                                         ; preds = %land.lhs.true
  %13 = load %struct._object*, %struct._object** %obj, align 8
  %call10 = call i32 @PyObject_GetBuffer(%struct._object* %13, %struct.bufferinfo* %buf, i32 0)
  %cmp11 = icmp eq i32 %call10, -1
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end.9
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.13:                                        ; preds = %if.end.9
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 5
  %14 = load i32, i32* %ndim, align 4
  %cmp14 = icmp sgt i32 %14, 1
  br i1 %cmp14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.13
  %15 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i32 0, i32 0))
  call void @PyBuffer_Release(%struct.bufferinfo* %buf)
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.16:                                        ; preds = %if.end.13
  br label %do.end

do.end:                                           ; preds = %if.end.16
  %16 = load %struct.SHAobject*, %struct.SHAobject** %self.addr, align 8
  %buf17 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0
  %17 = load i8*, i8** %buf17, align 8
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2
  %18 = load i64, i64* %len, align 8
  call void @sha_update(%struct.SHAobject* %16, i8* %17, i64 %18)
  call void @PyBuffer_Release(%struct.bufferinfo* %buf)
  %19 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %19, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end, %if.then.15, %if.then.12, %if.then.8, %if.then.1, %if.then
  %20 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %20
}

; Function Attrs: nounwind uwtable
define internal %struct.SHAobject* @newSHA256object() #0 {
entry:
  %call = call %struct._object* @_PyObject_New(%struct._typeobject* @SHA256type)
  %0 = bitcast %struct._object* %call to %struct.SHAobject*
  ret %struct.SHAobject* %0
}

; Function Attrs: nounwind uwtable
define internal %struct.SHAobject* @newSHA224object() #0 {
entry:
  %call = call %struct._object* @_PyObject_New(%struct._typeobject* @SHA224type)
  %0 = bitcast %struct._object* %call to %struct.SHAobject*
  ret %struct.SHAobject* %0
}

; Function Attrs: nounwind uwtable
define internal void @SHAcopy(%struct.SHAobject* %src, %struct.SHAobject* %dest) #0 {
entry:
  %src.addr = alloca %struct.SHAobject*, align 8
  %dest.addr = alloca %struct.SHAobject*, align 8
  store %struct.SHAobject* %src, %struct.SHAobject** %src.addr, align 8
  store %struct.SHAobject* %dest, %struct.SHAobject** %dest.addr, align 8
  %0 = load %struct.SHAobject*, %struct.SHAobject** %src.addr, align 8
  %local = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %0, i32 0, i32 5
  %1 = load i32, i32* %local, align 4
  %2 = load %struct.SHAobject*, %struct.SHAobject** %dest.addr, align 8
  %local1 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %2, i32 0, i32 5
  store i32 %1, i32* %local1, align 4
  %3 = load %struct.SHAobject*, %struct.SHAobject** %src.addr, align 8
  %digestsize = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %3, i32 0, i32 6
  %4 = load i32, i32* %digestsize, align 4
  %5 = load %struct.SHAobject*, %struct.SHAobject** %dest.addr, align 8
  %digestsize2 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %5, i32 0, i32 6
  store i32 %4, i32* %digestsize2, align 4
  %6 = load %struct.SHAobject*, %struct.SHAobject** %src.addr, align 8
  %count_lo = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %6, i32 0, i32 2
  %7 = load i32, i32* %count_lo, align 4
  %8 = load %struct.SHAobject*, %struct.SHAobject** %dest.addr, align 8
  %count_lo3 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %8, i32 0, i32 2
  store i32 %7, i32* %count_lo3, align 4
  %9 = load %struct.SHAobject*, %struct.SHAobject** %src.addr, align 8
  %count_hi = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %9, i32 0, i32 3
  %10 = load i32, i32* %count_hi, align 4
  %11 = load %struct.SHAobject*, %struct.SHAobject** %dest.addr, align 8
  %count_hi4 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %11, i32 0, i32 3
  store i32 %10, i32* %count_hi4, align 4
  %12 = load %struct.SHAobject*, %struct.SHAobject** %dest.addr, align 8
  %digest = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %12, i32 0, i32 1
  %13 = bitcast [8 x i32]* %digest to i8*
  %14 = load %struct.SHAobject*, %struct.SHAobject** %src.addr, align 8
  %digest5 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %14, i32 0, i32 1
  %15 = bitcast [8 x i32]* %digest5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %15, i64 32, i32 8, i1 false)
  %16 = load %struct.SHAobject*, %struct.SHAobject** %dest.addr, align 8
  %data = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %16, i32 0, i32 4
  %17 = bitcast [64 x i8]* %data to i8*
  %18 = load %struct.SHAobject*, %struct.SHAobject** %src.addr, align 8
  %data6 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %18, i32 0, i32 4
  %19 = bitcast [64 x i8]* %data6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %19, i64 64, i32 8, i1 false)
  ret void
}

declare %struct._object* @_PyObject_New(%struct._typeobject*) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal void @sha_final(i8* %digest, %struct.SHAobject* %sha_info) #0 {
entry:
  %digest.addr = alloca i8*, align 8
  %sha_info.addr = alloca %struct.SHAobject*, align 8
  %count = alloca i32, align 4
  %lo_bit_count = alloca i32, align 4
  %hi_bit_count = alloca i32, align 4
  store i8* %digest, i8** %digest.addr, align 8
  store %struct.SHAobject* %sha_info, %struct.SHAobject** %sha_info.addr, align 8
  %0 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %count_lo = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %0, i32 0, i32 2
  %1 = load i32, i32* %count_lo, align 4
  store i32 %1, i32* %lo_bit_count, align 4
  %2 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %count_hi = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %2, i32 0, i32 3
  %3 = load i32, i32* %count_hi, align 4
  store i32 %3, i32* %hi_bit_count, align 4
  %4 = load i32, i32* %lo_bit_count, align 4
  %shr = lshr i32 %4, 3
  %and = and i32 %shr, 63
  store i32 %and, i32* %count, align 4
  %5 = load i32, i32* %count, align 4
  %inc = add i32 %5, 1
  store i32 %inc, i32* %count, align 4
  %idxprom = sext i32 %5 to i64
  %6 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %6, i32 0, i32 4
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %data, i32 0, i32 0
  %arrayidx = getelementptr i8, i8* %arraydecay, i64 %idxprom
  store i8 -128, i8* %arrayidx, align 1
  %7 = load i32, i32* %count, align 4
  %cmp = icmp sgt i32 %7, 56
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %8 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data1 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %8, i32 0, i32 4
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %data1, i32 0, i32 0
  %9 = load i32, i32* %count, align 4
  %idx.ext = sext i32 %9 to i64
  %add.ptr = getelementptr i8, i8* %arraydecay2, i64 %idx.ext
  %10 = load i32, i32* %count, align 4
  %sub = sub i32 64, %10
  %conv = sext i32 %sub to i64
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 0, i64 %conv, i32 1, i1 false)
  %11 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  call void @sha_transform(%struct.SHAobject* %11)
  %12 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data3 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %12, i32 0, i32 4
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %data3, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %arraydecay4, i8 0, i64 56, i32 1, i1 false)
  br label %if.end

if.else:                                          ; preds = %entry
  %13 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data5 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %13, i32 0, i32 4
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %data5, i32 0, i32 0
  %14 = load i32, i32* %count, align 4
  %idx.ext7 = sext i32 %14 to i64
  %add.ptr8 = getelementptr i8, i8* %arraydecay6, i64 %idx.ext7
  %15 = load i32, i32* %count, align 4
  %sub9 = sub i32 56, %15
  %conv10 = sext i32 %sub9 to i64
  call void @llvm.memset.p0i8.i64(i8* %add.ptr8, i8 0, i64 %conv10, i32 1, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load i32, i32* %hi_bit_count, align 4
  %shr11 = lshr i32 %16, 24
  %and12 = and i32 %shr11, 255
  %conv13 = trunc i32 %and12 to i8
  %17 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data14 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %17, i32 0, i32 4
  %arrayidx15 = getelementptr [64 x i8], [64 x i8]* %data14, i32 0, i64 56
  store i8 %conv13, i8* %arrayidx15, align 1
  %18 = load i32, i32* %hi_bit_count, align 4
  %shr16 = lshr i32 %18, 16
  %and17 = and i32 %shr16, 255
  %conv18 = trunc i32 %and17 to i8
  %19 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data19 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %19, i32 0, i32 4
  %arrayidx20 = getelementptr [64 x i8], [64 x i8]* %data19, i32 0, i64 57
  store i8 %conv18, i8* %arrayidx20, align 1
  %20 = load i32, i32* %hi_bit_count, align 4
  %shr21 = lshr i32 %20, 8
  %and22 = and i32 %shr21, 255
  %conv23 = trunc i32 %and22 to i8
  %21 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data24 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %21, i32 0, i32 4
  %arrayidx25 = getelementptr [64 x i8], [64 x i8]* %data24, i32 0, i64 58
  store i8 %conv23, i8* %arrayidx25, align 1
  %22 = load i32, i32* %hi_bit_count, align 4
  %shr26 = lshr i32 %22, 0
  %and27 = and i32 %shr26, 255
  %conv28 = trunc i32 %and27 to i8
  %23 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data29 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %23, i32 0, i32 4
  %arrayidx30 = getelementptr [64 x i8], [64 x i8]* %data29, i32 0, i64 59
  store i8 %conv28, i8* %arrayidx30, align 1
  %24 = load i32, i32* %lo_bit_count, align 4
  %shr31 = lshr i32 %24, 24
  %and32 = and i32 %shr31, 255
  %conv33 = trunc i32 %and32 to i8
  %25 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data34 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %25, i32 0, i32 4
  %arrayidx35 = getelementptr [64 x i8], [64 x i8]* %data34, i32 0, i64 60
  store i8 %conv33, i8* %arrayidx35, align 1
  %26 = load i32, i32* %lo_bit_count, align 4
  %shr36 = lshr i32 %26, 16
  %and37 = and i32 %shr36, 255
  %conv38 = trunc i32 %and37 to i8
  %27 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data39 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %27, i32 0, i32 4
  %arrayidx40 = getelementptr [64 x i8], [64 x i8]* %data39, i32 0, i64 61
  store i8 %conv38, i8* %arrayidx40, align 1
  %28 = load i32, i32* %lo_bit_count, align 4
  %shr41 = lshr i32 %28, 8
  %and42 = and i32 %shr41, 255
  %conv43 = trunc i32 %and42 to i8
  %29 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data44 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %29, i32 0, i32 4
  %arrayidx45 = getelementptr [64 x i8], [64 x i8]* %data44, i32 0, i64 62
  store i8 %conv43, i8* %arrayidx45, align 1
  %30 = load i32, i32* %lo_bit_count, align 4
  %shr46 = lshr i32 %30, 0
  %and47 = and i32 %shr46, 255
  %conv48 = trunc i32 %and47 to i8
  %31 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data49 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %31, i32 0, i32 4
  %arrayidx50 = getelementptr [64 x i8], [64 x i8]* %data49, i32 0, i64 63
  store i8 %conv48, i8* %arrayidx50, align 1
  %32 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  call void @sha_transform(%struct.SHAobject* %32)
  %33 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest51 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %33, i32 0, i32 1
  %arrayidx52 = getelementptr [8 x i32], [8 x i32]* %digest51, i32 0, i64 0
  %34 = load i32, i32* %arrayidx52, align 4
  %shr53 = lshr i32 %34, 24
  %and54 = and i32 %shr53, 255
  %conv55 = trunc i32 %and54 to i8
  %35 = load i8*, i8** %digest.addr, align 8
  %arrayidx56 = getelementptr i8, i8* %35, i64 0
  store i8 %conv55, i8* %arrayidx56, align 1
  %36 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest57 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %36, i32 0, i32 1
  %arrayidx58 = getelementptr [8 x i32], [8 x i32]* %digest57, i32 0, i64 0
  %37 = load i32, i32* %arrayidx58, align 4
  %shr59 = lshr i32 %37, 16
  %and60 = and i32 %shr59, 255
  %conv61 = trunc i32 %and60 to i8
  %38 = load i8*, i8** %digest.addr, align 8
  %arrayidx62 = getelementptr i8, i8* %38, i64 1
  store i8 %conv61, i8* %arrayidx62, align 1
  %39 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest63 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %39, i32 0, i32 1
  %arrayidx64 = getelementptr [8 x i32], [8 x i32]* %digest63, i32 0, i64 0
  %40 = load i32, i32* %arrayidx64, align 4
  %shr65 = lshr i32 %40, 8
  %and66 = and i32 %shr65, 255
  %conv67 = trunc i32 %and66 to i8
  %41 = load i8*, i8** %digest.addr, align 8
  %arrayidx68 = getelementptr i8, i8* %41, i64 2
  store i8 %conv67, i8* %arrayidx68, align 1
  %42 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest69 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %42, i32 0, i32 1
  %arrayidx70 = getelementptr [8 x i32], [8 x i32]* %digest69, i32 0, i64 0
  %43 = load i32, i32* %arrayidx70, align 4
  %and71 = and i32 %43, 255
  %conv72 = trunc i32 %and71 to i8
  %44 = load i8*, i8** %digest.addr, align 8
  %arrayidx73 = getelementptr i8, i8* %44, i64 3
  store i8 %conv72, i8* %arrayidx73, align 1
  %45 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest74 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %45, i32 0, i32 1
  %arrayidx75 = getelementptr [8 x i32], [8 x i32]* %digest74, i32 0, i64 1
  %46 = load i32, i32* %arrayidx75, align 4
  %shr76 = lshr i32 %46, 24
  %and77 = and i32 %shr76, 255
  %conv78 = trunc i32 %and77 to i8
  %47 = load i8*, i8** %digest.addr, align 8
  %arrayidx79 = getelementptr i8, i8* %47, i64 4
  store i8 %conv78, i8* %arrayidx79, align 1
  %48 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest80 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %48, i32 0, i32 1
  %arrayidx81 = getelementptr [8 x i32], [8 x i32]* %digest80, i32 0, i64 1
  %49 = load i32, i32* %arrayidx81, align 4
  %shr82 = lshr i32 %49, 16
  %and83 = and i32 %shr82, 255
  %conv84 = trunc i32 %and83 to i8
  %50 = load i8*, i8** %digest.addr, align 8
  %arrayidx85 = getelementptr i8, i8* %50, i64 5
  store i8 %conv84, i8* %arrayidx85, align 1
  %51 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest86 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %51, i32 0, i32 1
  %arrayidx87 = getelementptr [8 x i32], [8 x i32]* %digest86, i32 0, i64 1
  %52 = load i32, i32* %arrayidx87, align 4
  %shr88 = lshr i32 %52, 8
  %and89 = and i32 %shr88, 255
  %conv90 = trunc i32 %and89 to i8
  %53 = load i8*, i8** %digest.addr, align 8
  %arrayidx91 = getelementptr i8, i8* %53, i64 6
  store i8 %conv90, i8* %arrayidx91, align 1
  %54 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest92 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %54, i32 0, i32 1
  %arrayidx93 = getelementptr [8 x i32], [8 x i32]* %digest92, i32 0, i64 1
  %55 = load i32, i32* %arrayidx93, align 4
  %and94 = and i32 %55, 255
  %conv95 = trunc i32 %and94 to i8
  %56 = load i8*, i8** %digest.addr, align 8
  %arrayidx96 = getelementptr i8, i8* %56, i64 7
  store i8 %conv95, i8* %arrayidx96, align 1
  %57 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest97 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %57, i32 0, i32 1
  %arrayidx98 = getelementptr [8 x i32], [8 x i32]* %digest97, i32 0, i64 2
  %58 = load i32, i32* %arrayidx98, align 4
  %shr99 = lshr i32 %58, 24
  %and100 = and i32 %shr99, 255
  %conv101 = trunc i32 %and100 to i8
  %59 = load i8*, i8** %digest.addr, align 8
  %arrayidx102 = getelementptr i8, i8* %59, i64 8
  store i8 %conv101, i8* %arrayidx102, align 1
  %60 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest103 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %60, i32 0, i32 1
  %arrayidx104 = getelementptr [8 x i32], [8 x i32]* %digest103, i32 0, i64 2
  %61 = load i32, i32* %arrayidx104, align 4
  %shr105 = lshr i32 %61, 16
  %and106 = and i32 %shr105, 255
  %conv107 = trunc i32 %and106 to i8
  %62 = load i8*, i8** %digest.addr, align 8
  %arrayidx108 = getelementptr i8, i8* %62, i64 9
  store i8 %conv107, i8* %arrayidx108, align 1
  %63 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest109 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %63, i32 0, i32 1
  %arrayidx110 = getelementptr [8 x i32], [8 x i32]* %digest109, i32 0, i64 2
  %64 = load i32, i32* %arrayidx110, align 4
  %shr111 = lshr i32 %64, 8
  %and112 = and i32 %shr111, 255
  %conv113 = trunc i32 %and112 to i8
  %65 = load i8*, i8** %digest.addr, align 8
  %arrayidx114 = getelementptr i8, i8* %65, i64 10
  store i8 %conv113, i8* %arrayidx114, align 1
  %66 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest115 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %66, i32 0, i32 1
  %arrayidx116 = getelementptr [8 x i32], [8 x i32]* %digest115, i32 0, i64 2
  %67 = load i32, i32* %arrayidx116, align 4
  %and117 = and i32 %67, 255
  %conv118 = trunc i32 %and117 to i8
  %68 = load i8*, i8** %digest.addr, align 8
  %arrayidx119 = getelementptr i8, i8* %68, i64 11
  store i8 %conv118, i8* %arrayidx119, align 1
  %69 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest120 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %69, i32 0, i32 1
  %arrayidx121 = getelementptr [8 x i32], [8 x i32]* %digest120, i32 0, i64 3
  %70 = load i32, i32* %arrayidx121, align 4
  %shr122 = lshr i32 %70, 24
  %and123 = and i32 %shr122, 255
  %conv124 = trunc i32 %and123 to i8
  %71 = load i8*, i8** %digest.addr, align 8
  %arrayidx125 = getelementptr i8, i8* %71, i64 12
  store i8 %conv124, i8* %arrayidx125, align 1
  %72 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest126 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %72, i32 0, i32 1
  %arrayidx127 = getelementptr [8 x i32], [8 x i32]* %digest126, i32 0, i64 3
  %73 = load i32, i32* %arrayidx127, align 4
  %shr128 = lshr i32 %73, 16
  %and129 = and i32 %shr128, 255
  %conv130 = trunc i32 %and129 to i8
  %74 = load i8*, i8** %digest.addr, align 8
  %arrayidx131 = getelementptr i8, i8* %74, i64 13
  store i8 %conv130, i8* %arrayidx131, align 1
  %75 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest132 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %75, i32 0, i32 1
  %arrayidx133 = getelementptr [8 x i32], [8 x i32]* %digest132, i32 0, i64 3
  %76 = load i32, i32* %arrayidx133, align 4
  %shr134 = lshr i32 %76, 8
  %and135 = and i32 %shr134, 255
  %conv136 = trunc i32 %and135 to i8
  %77 = load i8*, i8** %digest.addr, align 8
  %arrayidx137 = getelementptr i8, i8* %77, i64 14
  store i8 %conv136, i8* %arrayidx137, align 1
  %78 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest138 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %78, i32 0, i32 1
  %arrayidx139 = getelementptr [8 x i32], [8 x i32]* %digest138, i32 0, i64 3
  %79 = load i32, i32* %arrayidx139, align 4
  %and140 = and i32 %79, 255
  %conv141 = trunc i32 %and140 to i8
  %80 = load i8*, i8** %digest.addr, align 8
  %arrayidx142 = getelementptr i8, i8* %80, i64 15
  store i8 %conv141, i8* %arrayidx142, align 1
  %81 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest143 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %81, i32 0, i32 1
  %arrayidx144 = getelementptr [8 x i32], [8 x i32]* %digest143, i32 0, i64 4
  %82 = load i32, i32* %arrayidx144, align 4
  %shr145 = lshr i32 %82, 24
  %and146 = and i32 %shr145, 255
  %conv147 = trunc i32 %and146 to i8
  %83 = load i8*, i8** %digest.addr, align 8
  %arrayidx148 = getelementptr i8, i8* %83, i64 16
  store i8 %conv147, i8* %arrayidx148, align 1
  %84 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest149 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %84, i32 0, i32 1
  %arrayidx150 = getelementptr [8 x i32], [8 x i32]* %digest149, i32 0, i64 4
  %85 = load i32, i32* %arrayidx150, align 4
  %shr151 = lshr i32 %85, 16
  %and152 = and i32 %shr151, 255
  %conv153 = trunc i32 %and152 to i8
  %86 = load i8*, i8** %digest.addr, align 8
  %arrayidx154 = getelementptr i8, i8* %86, i64 17
  store i8 %conv153, i8* %arrayidx154, align 1
  %87 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest155 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %87, i32 0, i32 1
  %arrayidx156 = getelementptr [8 x i32], [8 x i32]* %digest155, i32 0, i64 4
  %88 = load i32, i32* %arrayidx156, align 4
  %shr157 = lshr i32 %88, 8
  %and158 = and i32 %shr157, 255
  %conv159 = trunc i32 %and158 to i8
  %89 = load i8*, i8** %digest.addr, align 8
  %arrayidx160 = getelementptr i8, i8* %89, i64 18
  store i8 %conv159, i8* %arrayidx160, align 1
  %90 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest161 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %90, i32 0, i32 1
  %arrayidx162 = getelementptr [8 x i32], [8 x i32]* %digest161, i32 0, i64 4
  %91 = load i32, i32* %arrayidx162, align 4
  %and163 = and i32 %91, 255
  %conv164 = trunc i32 %and163 to i8
  %92 = load i8*, i8** %digest.addr, align 8
  %arrayidx165 = getelementptr i8, i8* %92, i64 19
  store i8 %conv164, i8* %arrayidx165, align 1
  %93 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest166 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %93, i32 0, i32 1
  %arrayidx167 = getelementptr [8 x i32], [8 x i32]* %digest166, i32 0, i64 5
  %94 = load i32, i32* %arrayidx167, align 4
  %shr168 = lshr i32 %94, 24
  %and169 = and i32 %shr168, 255
  %conv170 = trunc i32 %and169 to i8
  %95 = load i8*, i8** %digest.addr, align 8
  %arrayidx171 = getelementptr i8, i8* %95, i64 20
  store i8 %conv170, i8* %arrayidx171, align 1
  %96 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest172 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %96, i32 0, i32 1
  %arrayidx173 = getelementptr [8 x i32], [8 x i32]* %digest172, i32 0, i64 5
  %97 = load i32, i32* %arrayidx173, align 4
  %shr174 = lshr i32 %97, 16
  %and175 = and i32 %shr174, 255
  %conv176 = trunc i32 %and175 to i8
  %98 = load i8*, i8** %digest.addr, align 8
  %arrayidx177 = getelementptr i8, i8* %98, i64 21
  store i8 %conv176, i8* %arrayidx177, align 1
  %99 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest178 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %99, i32 0, i32 1
  %arrayidx179 = getelementptr [8 x i32], [8 x i32]* %digest178, i32 0, i64 5
  %100 = load i32, i32* %arrayidx179, align 4
  %shr180 = lshr i32 %100, 8
  %and181 = and i32 %shr180, 255
  %conv182 = trunc i32 %and181 to i8
  %101 = load i8*, i8** %digest.addr, align 8
  %arrayidx183 = getelementptr i8, i8* %101, i64 22
  store i8 %conv182, i8* %arrayidx183, align 1
  %102 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest184 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %102, i32 0, i32 1
  %arrayidx185 = getelementptr [8 x i32], [8 x i32]* %digest184, i32 0, i64 5
  %103 = load i32, i32* %arrayidx185, align 4
  %and186 = and i32 %103, 255
  %conv187 = trunc i32 %and186 to i8
  %104 = load i8*, i8** %digest.addr, align 8
  %arrayidx188 = getelementptr i8, i8* %104, i64 23
  store i8 %conv187, i8* %arrayidx188, align 1
  %105 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest189 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %105, i32 0, i32 1
  %arrayidx190 = getelementptr [8 x i32], [8 x i32]* %digest189, i32 0, i64 6
  %106 = load i32, i32* %arrayidx190, align 4
  %shr191 = lshr i32 %106, 24
  %and192 = and i32 %shr191, 255
  %conv193 = trunc i32 %and192 to i8
  %107 = load i8*, i8** %digest.addr, align 8
  %arrayidx194 = getelementptr i8, i8* %107, i64 24
  store i8 %conv193, i8* %arrayidx194, align 1
  %108 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest195 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %108, i32 0, i32 1
  %arrayidx196 = getelementptr [8 x i32], [8 x i32]* %digest195, i32 0, i64 6
  %109 = load i32, i32* %arrayidx196, align 4
  %shr197 = lshr i32 %109, 16
  %and198 = and i32 %shr197, 255
  %conv199 = trunc i32 %and198 to i8
  %110 = load i8*, i8** %digest.addr, align 8
  %arrayidx200 = getelementptr i8, i8* %110, i64 25
  store i8 %conv199, i8* %arrayidx200, align 1
  %111 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest201 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %111, i32 0, i32 1
  %arrayidx202 = getelementptr [8 x i32], [8 x i32]* %digest201, i32 0, i64 6
  %112 = load i32, i32* %arrayidx202, align 4
  %shr203 = lshr i32 %112, 8
  %and204 = and i32 %shr203, 255
  %conv205 = trunc i32 %and204 to i8
  %113 = load i8*, i8** %digest.addr, align 8
  %arrayidx206 = getelementptr i8, i8* %113, i64 26
  store i8 %conv205, i8* %arrayidx206, align 1
  %114 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest207 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %114, i32 0, i32 1
  %arrayidx208 = getelementptr [8 x i32], [8 x i32]* %digest207, i32 0, i64 6
  %115 = load i32, i32* %arrayidx208, align 4
  %and209 = and i32 %115, 255
  %conv210 = trunc i32 %and209 to i8
  %116 = load i8*, i8** %digest.addr, align 8
  %arrayidx211 = getelementptr i8, i8* %116, i64 27
  store i8 %conv210, i8* %arrayidx211, align 1
  %117 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest212 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %117, i32 0, i32 1
  %arrayidx213 = getelementptr [8 x i32], [8 x i32]* %digest212, i32 0, i64 7
  %118 = load i32, i32* %arrayidx213, align 4
  %shr214 = lshr i32 %118, 24
  %and215 = and i32 %shr214, 255
  %conv216 = trunc i32 %and215 to i8
  %119 = load i8*, i8** %digest.addr, align 8
  %arrayidx217 = getelementptr i8, i8* %119, i64 28
  store i8 %conv216, i8* %arrayidx217, align 1
  %120 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest218 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %120, i32 0, i32 1
  %arrayidx219 = getelementptr [8 x i32], [8 x i32]* %digest218, i32 0, i64 7
  %121 = load i32, i32* %arrayidx219, align 4
  %shr220 = lshr i32 %121, 16
  %and221 = and i32 %shr220, 255
  %conv222 = trunc i32 %and221 to i8
  %122 = load i8*, i8** %digest.addr, align 8
  %arrayidx223 = getelementptr i8, i8* %122, i64 29
  store i8 %conv222, i8* %arrayidx223, align 1
  %123 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest224 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %123, i32 0, i32 1
  %arrayidx225 = getelementptr [8 x i32], [8 x i32]* %digest224, i32 0, i64 7
  %124 = load i32, i32* %arrayidx225, align 4
  %shr226 = lshr i32 %124, 8
  %and227 = and i32 %shr226, 255
  %conv228 = trunc i32 %and227 to i8
  %125 = load i8*, i8** %digest.addr, align 8
  %arrayidx229 = getelementptr i8, i8* %125, i64 30
  store i8 %conv228, i8* %arrayidx229, align 1
  %126 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest230 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %126, i32 0, i32 1
  %arrayidx231 = getelementptr [8 x i32], [8 x i32]* %digest230, i32 0, i64 7
  %127 = load i32, i32* %arrayidx231, align 4
  %and232 = and i32 %127, 255
  %conv233 = trunc i32 %and232 to i8
  %128 = load i8*, i8** %digest.addr, align 8
  %arrayidx234 = getelementptr i8, i8* %128, i64 31
  store i8 %conv233, i8* %arrayidx234, align 1
  ret void
}

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal void @sha_transform(%struct.SHAobject* %sha_info) #0 {
entry:
  %sha_info.addr = alloca %struct.SHAobject*, align 8
  %i = alloca i32, align 4
  %S = alloca [8 x i32], align 16
  %W = alloca [64 x i32], align 16
  %t0 = alloca i32, align 4
  %t1 = alloca i32, align 4
  store %struct.SHAobject* %sha_info, %struct.SHAobject** %sha_info.addr, align 8
  %0 = bitcast [64 x i32]* %W to i8*
  %1 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %1, i32 0, i32 4
  %2 = bitcast [64 x i8]* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %2, i64 64, i32 8, i1 false)
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %W, i32 0, i32 0
  call void @longReverse(i32* %arraydecay, i32 64)
  store i32 16, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %3, 64
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4
  %sub = sub i32 %4, 2
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  %conv = zext i32 %5 to i64
  %and = and i64 %conv, 4294967295
  %shr = lshr i64 %and, 17
  %6 = load i32, i32* %i, align 4
  %sub1 = sub i32 %6, 2
  %idxprom2 = sext i32 %sub1 to i64
  %arrayidx3 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom2
  %7 = load i32, i32* %arrayidx3, align 4
  %conv4 = zext i32 %7 to i64
  %shl = shl i64 %conv4, 15
  %or = or i64 %shr, %shl
  %and5 = and i64 %or, 4294967295
  %8 = load i32, i32* %i, align 4
  %sub6 = sub i32 %8, 2
  %idxprom7 = sext i32 %sub6 to i64
  %arrayidx8 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom7
  %9 = load i32, i32* %arrayidx8, align 4
  %conv9 = zext i32 %9 to i64
  %and10 = and i64 %conv9, 4294967295
  %shr11 = lshr i64 %and10, 19
  %10 = load i32, i32* %i, align 4
  %sub12 = sub i32 %10, 2
  %idxprom13 = sext i32 %sub12 to i64
  %arrayidx14 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom13
  %11 = load i32, i32* %arrayidx14, align 4
  %conv15 = zext i32 %11 to i64
  %shl16 = shl i64 %conv15, 13
  %or17 = or i64 %shr11, %shl16
  %and18 = and i64 %or17, 4294967295
  %xor = xor i64 %and5, %and18
  %12 = load i32, i32* %i, align 4
  %sub19 = sub i32 %12, 2
  %idxprom20 = sext i32 %sub19 to i64
  %arrayidx21 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom20
  %13 = load i32, i32* %arrayidx21, align 4
  %conv22 = zext i32 %13 to i64
  %and23 = and i64 %conv22, 4294967295
  %shr24 = lshr i64 %and23, 10
  %xor25 = xor i64 %xor, %shr24
  %14 = load i32, i32* %i, align 4
  %sub26 = sub i32 %14, 7
  %idxprom27 = sext i32 %sub26 to i64
  %arrayidx28 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom27
  %15 = load i32, i32* %arrayidx28, align 4
  %conv29 = zext i32 %15 to i64
  %add = add i64 %xor25, %conv29
  %16 = load i32, i32* %i, align 4
  %sub30 = sub i32 %16, 15
  %idxprom31 = sext i32 %sub30 to i64
  %arrayidx32 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom31
  %17 = load i32, i32* %arrayidx32, align 4
  %conv33 = zext i32 %17 to i64
  %and34 = and i64 %conv33, 4294967295
  %shr35 = lshr i64 %and34, 7
  %18 = load i32, i32* %i, align 4
  %sub36 = sub i32 %18, 15
  %idxprom37 = sext i32 %sub36 to i64
  %arrayidx38 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom37
  %19 = load i32, i32* %arrayidx38, align 4
  %conv39 = zext i32 %19 to i64
  %shl40 = shl i64 %conv39, 25
  %or41 = or i64 %shr35, %shl40
  %and42 = and i64 %or41, 4294967295
  %20 = load i32, i32* %i, align 4
  %sub43 = sub i32 %20, 15
  %idxprom44 = sext i32 %sub43 to i64
  %arrayidx45 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom44
  %21 = load i32, i32* %arrayidx45, align 4
  %conv46 = zext i32 %21 to i64
  %and47 = and i64 %conv46, 4294967295
  %shr48 = lshr i64 %and47, 18
  %22 = load i32, i32* %i, align 4
  %sub49 = sub i32 %22, 15
  %idxprom50 = sext i32 %sub49 to i64
  %arrayidx51 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom50
  %23 = load i32, i32* %arrayidx51, align 4
  %conv52 = zext i32 %23 to i64
  %shl53 = shl i64 %conv52, 14
  %or54 = or i64 %shr48, %shl53
  %and55 = and i64 %or54, 4294967295
  %xor56 = xor i64 %and42, %and55
  %24 = load i32, i32* %i, align 4
  %sub57 = sub i32 %24, 15
  %idxprom58 = sext i32 %sub57 to i64
  %arrayidx59 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom58
  %25 = load i32, i32* %arrayidx59, align 4
  %conv60 = zext i32 %25 to i64
  %and61 = and i64 %conv60, 4294967295
  %shr62 = lshr i64 %and61, 3
  %xor63 = xor i64 %xor56, %shr62
  %add64 = add i64 %add, %xor63
  %26 = load i32, i32* %i, align 4
  %sub65 = sub i32 %26, 16
  %idxprom66 = sext i32 %sub65 to i64
  %arrayidx67 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom66
  %27 = load i32, i32* %arrayidx67, align 4
  %conv68 = zext i32 %27 to i64
  %add69 = add i64 %add64, %conv68
  %conv70 = trunc i64 %add69 to i32
  %28 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %28 to i64
  %arrayidx72 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 %idxprom71
  store i32 %conv70, i32* %arrayidx72, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4
  %inc = add i32 %29, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.73

for.cond.73:                                      ; preds = %for.inc.81, %for.end
  %30 = load i32, i32* %i, align 4
  %cmp74 = icmp slt i32 %30, 8
  br i1 %cmp74, label %for.body.76, label %for.end.83

for.body.76:                                      ; preds = %for.cond.73
  %31 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %31 to i64
  %32 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %32, i32 0, i32 1
  %arrayidx78 = getelementptr [8 x i32], [8 x i32]* %digest, i32 0, i64 %idxprom77
  %33 = load i32, i32* %arrayidx78, align 4
  %34 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %34 to i64
  %arrayidx80 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 %idxprom79
  store i32 %33, i32* %arrayidx80, align 4
  br label %for.inc.81

for.inc.81:                                       ; preds = %for.body.76
  %35 = load i32, i32* %i, align 4
  %inc82 = add i32 %35, 1
  store i32 %inc82, i32* %i, align 4
  br label %for.cond.73

for.end.83:                                       ; preds = %for.cond.73
  %arrayidx84 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %36 = load i32, i32* %arrayidx84, align 4
  %conv85 = zext i32 %36 to i64
  %arrayidx86 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %37 = load i32, i32* %arrayidx86, align 4
  %conv87 = zext i32 %37 to i64
  %and88 = and i64 %conv87, 4294967295
  %shr89 = lshr i64 %and88, 6
  %arrayidx90 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %38 = load i32, i32* %arrayidx90, align 4
  %conv91 = zext i32 %38 to i64
  %shl92 = shl i64 %conv91, 26
  %or93 = or i64 %shr89, %shl92
  %and94 = and i64 %or93, 4294967295
  %arrayidx95 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %39 = load i32, i32* %arrayidx95, align 4
  %conv96 = zext i32 %39 to i64
  %and97 = and i64 %conv96, 4294967295
  %shr98 = lshr i64 %and97, 11
  %arrayidx99 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %40 = load i32, i32* %arrayidx99, align 4
  %conv100 = zext i32 %40 to i64
  %shl101 = shl i64 %conv100, 21
  %or102 = or i64 %shr98, %shl101
  %and103 = and i64 %or102, 4294967295
  %xor104 = xor i64 %and94, %and103
  %arrayidx105 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %41 = load i32, i32* %arrayidx105, align 4
  %conv106 = zext i32 %41 to i64
  %and107 = and i64 %conv106, 4294967295
  %shr108 = lshr i64 %and107, 25
  %arrayidx109 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %42 = load i32, i32* %arrayidx109, align 4
  %conv110 = zext i32 %42 to i64
  %shl111 = shl i64 %conv110, 7
  %or112 = or i64 %shr108, %shl111
  %and113 = and i64 %or112, 4294967295
  %xor114 = xor i64 %xor104, %and113
  %add115 = add i64 %conv85, %xor114
  %arrayidx116 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %43 = load i32, i32* %arrayidx116, align 4
  %arrayidx117 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %44 = load i32, i32* %arrayidx117, align 4
  %arrayidx118 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %45 = load i32, i32* %arrayidx118, align 4
  %arrayidx119 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %46 = load i32, i32* %arrayidx119, align 4
  %xor120 = xor i32 %45, %46
  %and121 = and i32 %44, %xor120
  %xor122 = xor i32 %43, %and121
  %conv123 = zext i32 %xor122 to i64
  %add124 = add i64 %add115, %conv123
  %add125 = add i64 %add124, 1116352408
  %arrayidx126 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 0
  %47 = load i32, i32* %arrayidx126, align 4
  %conv127 = zext i32 %47 to i64
  %add128 = add i64 %add125, %conv127
  %conv129 = trunc i64 %add128 to i32
  store i32 %conv129, i32* %t0, align 4
  %arrayidx130 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %48 = load i32, i32* %arrayidx130, align 4
  %conv131 = zext i32 %48 to i64
  %and132 = and i64 %conv131, 4294967295
  %shr133 = lshr i64 %and132, 2
  %arrayidx134 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %49 = load i32, i32* %arrayidx134, align 4
  %conv135 = zext i32 %49 to i64
  %shl136 = shl i64 %conv135, 30
  %or137 = or i64 %shr133, %shl136
  %and138 = and i64 %or137, 4294967295
  %arrayidx139 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %50 = load i32, i32* %arrayidx139, align 4
  %conv140 = zext i32 %50 to i64
  %and141 = and i64 %conv140, 4294967295
  %shr142 = lshr i64 %and141, 13
  %arrayidx143 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %51 = load i32, i32* %arrayidx143, align 4
  %conv144 = zext i32 %51 to i64
  %shl145 = shl i64 %conv144, 19
  %or146 = or i64 %shr142, %shl145
  %and147 = and i64 %or146, 4294967295
  %xor148 = xor i64 %and138, %and147
  %arrayidx149 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %52 = load i32, i32* %arrayidx149, align 4
  %conv150 = zext i32 %52 to i64
  %and151 = and i64 %conv150, 4294967295
  %shr152 = lshr i64 %and151, 22
  %arrayidx153 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %53 = load i32, i32* %arrayidx153, align 4
  %conv154 = zext i32 %53 to i64
  %shl155 = shl i64 %conv154, 10
  %or156 = or i64 %shr152, %shl155
  %and157 = and i64 %or156, 4294967295
  %xor158 = xor i64 %xor148, %and157
  %arrayidx159 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %54 = load i32, i32* %arrayidx159, align 4
  %arrayidx160 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %55 = load i32, i32* %arrayidx160, align 4
  %or161 = or i32 %54, %55
  %arrayidx162 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %56 = load i32, i32* %arrayidx162, align 4
  %and163 = and i32 %or161, %56
  %arrayidx164 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %57 = load i32, i32* %arrayidx164, align 4
  %arrayidx165 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %58 = load i32, i32* %arrayidx165, align 4
  %and166 = and i32 %57, %58
  %or167 = or i32 %and163, %and166
  %conv168 = zext i32 %or167 to i64
  %add169 = add i64 %xor158, %conv168
  %conv170 = trunc i64 %add169 to i32
  store i32 %conv170, i32* %t1, align 4
  %59 = load i32, i32* %t0, align 4
  %arrayidx171 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %60 = load i32, i32* %arrayidx171, align 4
  %add172 = add i32 %60, %59
  store i32 %add172, i32* %arrayidx171, align 4
  %61 = load i32, i32* %t0, align 4
  %62 = load i32, i32* %t1, align 4
  %add173 = add i32 %61, %62
  %arrayidx174 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  store i32 %add173, i32* %arrayidx174, align 4
  %arrayidx175 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %63 = load i32, i32* %arrayidx175, align 4
  %conv176 = zext i32 %63 to i64
  %arrayidx177 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %64 = load i32, i32* %arrayidx177, align 4
  %conv178 = zext i32 %64 to i64
  %and179 = and i64 %conv178, 4294967295
  %shr180 = lshr i64 %and179, 6
  %arrayidx181 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %65 = load i32, i32* %arrayidx181, align 4
  %conv182 = zext i32 %65 to i64
  %shl183 = shl i64 %conv182, 26
  %or184 = or i64 %shr180, %shl183
  %and185 = and i64 %or184, 4294967295
  %arrayidx186 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %66 = load i32, i32* %arrayidx186, align 4
  %conv187 = zext i32 %66 to i64
  %and188 = and i64 %conv187, 4294967295
  %shr189 = lshr i64 %and188, 11
  %arrayidx190 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %67 = load i32, i32* %arrayidx190, align 4
  %conv191 = zext i32 %67 to i64
  %shl192 = shl i64 %conv191, 21
  %or193 = or i64 %shr189, %shl192
  %and194 = and i64 %or193, 4294967295
  %xor195 = xor i64 %and185, %and194
  %arrayidx196 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %68 = load i32, i32* %arrayidx196, align 4
  %conv197 = zext i32 %68 to i64
  %and198 = and i64 %conv197, 4294967295
  %shr199 = lshr i64 %and198, 25
  %arrayidx200 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %69 = load i32, i32* %arrayidx200, align 4
  %conv201 = zext i32 %69 to i64
  %shl202 = shl i64 %conv201, 7
  %or203 = or i64 %shr199, %shl202
  %and204 = and i64 %or203, 4294967295
  %xor205 = xor i64 %xor195, %and204
  %add206 = add i64 %conv176, %xor205
  %arrayidx207 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %70 = load i32, i32* %arrayidx207, align 4
  %arrayidx208 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %71 = load i32, i32* %arrayidx208, align 4
  %arrayidx209 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %72 = load i32, i32* %arrayidx209, align 4
  %arrayidx210 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %73 = load i32, i32* %arrayidx210, align 4
  %xor211 = xor i32 %72, %73
  %and212 = and i32 %71, %xor211
  %xor213 = xor i32 %70, %and212
  %conv214 = zext i32 %xor213 to i64
  %add215 = add i64 %add206, %conv214
  %add216 = add i64 %add215, 1899447441
  %arrayidx217 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 1
  %74 = load i32, i32* %arrayidx217, align 4
  %conv218 = zext i32 %74 to i64
  %add219 = add i64 %add216, %conv218
  %conv220 = trunc i64 %add219 to i32
  store i32 %conv220, i32* %t0, align 4
  %arrayidx221 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %75 = load i32, i32* %arrayidx221, align 4
  %conv222 = zext i32 %75 to i64
  %and223 = and i64 %conv222, 4294967295
  %shr224 = lshr i64 %and223, 2
  %arrayidx225 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %76 = load i32, i32* %arrayidx225, align 4
  %conv226 = zext i32 %76 to i64
  %shl227 = shl i64 %conv226, 30
  %or228 = or i64 %shr224, %shl227
  %and229 = and i64 %or228, 4294967295
  %arrayidx230 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %77 = load i32, i32* %arrayidx230, align 4
  %conv231 = zext i32 %77 to i64
  %and232 = and i64 %conv231, 4294967295
  %shr233 = lshr i64 %and232, 13
  %arrayidx234 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %78 = load i32, i32* %arrayidx234, align 4
  %conv235 = zext i32 %78 to i64
  %shl236 = shl i64 %conv235, 19
  %or237 = or i64 %shr233, %shl236
  %and238 = and i64 %or237, 4294967295
  %xor239 = xor i64 %and229, %and238
  %arrayidx240 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %79 = load i32, i32* %arrayidx240, align 4
  %conv241 = zext i32 %79 to i64
  %and242 = and i64 %conv241, 4294967295
  %shr243 = lshr i64 %and242, 22
  %arrayidx244 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %80 = load i32, i32* %arrayidx244, align 4
  %conv245 = zext i32 %80 to i64
  %shl246 = shl i64 %conv245, 10
  %or247 = or i64 %shr243, %shl246
  %and248 = and i64 %or247, 4294967295
  %xor249 = xor i64 %xor239, %and248
  %arrayidx250 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %81 = load i32, i32* %arrayidx250, align 4
  %arrayidx251 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %82 = load i32, i32* %arrayidx251, align 4
  %or252 = or i32 %81, %82
  %arrayidx253 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %83 = load i32, i32* %arrayidx253, align 4
  %and254 = and i32 %or252, %83
  %arrayidx255 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %84 = load i32, i32* %arrayidx255, align 4
  %arrayidx256 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %85 = load i32, i32* %arrayidx256, align 4
  %and257 = and i32 %84, %85
  %or258 = or i32 %and254, %and257
  %conv259 = zext i32 %or258 to i64
  %add260 = add i64 %xor249, %conv259
  %conv261 = trunc i64 %add260 to i32
  store i32 %conv261, i32* %t1, align 4
  %86 = load i32, i32* %t0, align 4
  %arrayidx262 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %87 = load i32, i32* %arrayidx262, align 4
  %add263 = add i32 %87, %86
  store i32 %add263, i32* %arrayidx262, align 4
  %88 = load i32, i32* %t0, align 4
  %89 = load i32, i32* %t1, align 4
  %add264 = add i32 %88, %89
  %arrayidx265 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  store i32 %add264, i32* %arrayidx265, align 4
  %arrayidx266 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %90 = load i32, i32* %arrayidx266, align 4
  %conv267 = zext i32 %90 to i64
  %arrayidx268 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %91 = load i32, i32* %arrayidx268, align 4
  %conv269 = zext i32 %91 to i64
  %and270 = and i64 %conv269, 4294967295
  %shr271 = lshr i64 %and270, 6
  %arrayidx272 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %92 = load i32, i32* %arrayidx272, align 4
  %conv273 = zext i32 %92 to i64
  %shl274 = shl i64 %conv273, 26
  %or275 = or i64 %shr271, %shl274
  %and276 = and i64 %or275, 4294967295
  %arrayidx277 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %93 = load i32, i32* %arrayidx277, align 4
  %conv278 = zext i32 %93 to i64
  %and279 = and i64 %conv278, 4294967295
  %shr280 = lshr i64 %and279, 11
  %arrayidx281 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %94 = load i32, i32* %arrayidx281, align 4
  %conv282 = zext i32 %94 to i64
  %shl283 = shl i64 %conv282, 21
  %or284 = or i64 %shr280, %shl283
  %and285 = and i64 %or284, 4294967295
  %xor286 = xor i64 %and276, %and285
  %arrayidx287 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %95 = load i32, i32* %arrayidx287, align 4
  %conv288 = zext i32 %95 to i64
  %and289 = and i64 %conv288, 4294967295
  %shr290 = lshr i64 %and289, 25
  %arrayidx291 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %96 = load i32, i32* %arrayidx291, align 4
  %conv292 = zext i32 %96 to i64
  %shl293 = shl i64 %conv292, 7
  %or294 = or i64 %shr290, %shl293
  %and295 = and i64 %or294, 4294967295
  %xor296 = xor i64 %xor286, %and295
  %add297 = add i64 %conv267, %xor296
  %arrayidx298 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %97 = load i32, i32* %arrayidx298, align 4
  %arrayidx299 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %98 = load i32, i32* %arrayidx299, align 4
  %arrayidx300 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %99 = load i32, i32* %arrayidx300, align 4
  %arrayidx301 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %100 = load i32, i32* %arrayidx301, align 4
  %xor302 = xor i32 %99, %100
  %and303 = and i32 %98, %xor302
  %xor304 = xor i32 %97, %and303
  %conv305 = zext i32 %xor304 to i64
  %add306 = add i64 %add297, %conv305
  %add307 = add i64 %add306, 3049323471
  %arrayidx308 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 2
  %101 = load i32, i32* %arrayidx308, align 4
  %conv309 = zext i32 %101 to i64
  %add310 = add i64 %add307, %conv309
  %conv311 = trunc i64 %add310 to i32
  store i32 %conv311, i32* %t0, align 4
  %arrayidx312 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %102 = load i32, i32* %arrayidx312, align 4
  %conv313 = zext i32 %102 to i64
  %and314 = and i64 %conv313, 4294967295
  %shr315 = lshr i64 %and314, 2
  %arrayidx316 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %103 = load i32, i32* %arrayidx316, align 4
  %conv317 = zext i32 %103 to i64
  %shl318 = shl i64 %conv317, 30
  %or319 = or i64 %shr315, %shl318
  %and320 = and i64 %or319, 4294967295
  %arrayidx321 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %104 = load i32, i32* %arrayidx321, align 4
  %conv322 = zext i32 %104 to i64
  %and323 = and i64 %conv322, 4294967295
  %shr324 = lshr i64 %and323, 13
  %arrayidx325 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %105 = load i32, i32* %arrayidx325, align 4
  %conv326 = zext i32 %105 to i64
  %shl327 = shl i64 %conv326, 19
  %or328 = or i64 %shr324, %shl327
  %and329 = and i64 %or328, 4294967295
  %xor330 = xor i64 %and320, %and329
  %arrayidx331 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %106 = load i32, i32* %arrayidx331, align 4
  %conv332 = zext i32 %106 to i64
  %and333 = and i64 %conv332, 4294967295
  %shr334 = lshr i64 %and333, 22
  %arrayidx335 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %107 = load i32, i32* %arrayidx335, align 4
  %conv336 = zext i32 %107 to i64
  %shl337 = shl i64 %conv336, 10
  %or338 = or i64 %shr334, %shl337
  %and339 = and i64 %or338, 4294967295
  %xor340 = xor i64 %xor330, %and339
  %arrayidx341 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %108 = load i32, i32* %arrayidx341, align 4
  %arrayidx342 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %109 = load i32, i32* %arrayidx342, align 4
  %or343 = or i32 %108, %109
  %arrayidx344 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %110 = load i32, i32* %arrayidx344, align 4
  %and345 = and i32 %or343, %110
  %arrayidx346 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %111 = load i32, i32* %arrayidx346, align 4
  %arrayidx347 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %112 = load i32, i32* %arrayidx347, align 4
  %and348 = and i32 %111, %112
  %or349 = or i32 %and345, %and348
  %conv350 = zext i32 %or349 to i64
  %add351 = add i64 %xor340, %conv350
  %conv352 = trunc i64 %add351 to i32
  store i32 %conv352, i32* %t1, align 4
  %113 = load i32, i32* %t0, align 4
  %arrayidx353 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %114 = load i32, i32* %arrayidx353, align 4
  %add354 = add i32 %114, %113
  store i32 %add354, i32* %arrayidx353, align 4
  %115 = load i32, i32* %t0, align 4
  %116 = load i32, i32* %t1, align 4
  %add355 = add i32 %115, %116
  %arrayidx356 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  store i32 %add355, i32* %arrayidx356, align 4
  %arrayidx357 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %117 = load i32, i32* %arrayidx357, align 4
  %conv358 = zext i32 %117 to i64
  %arrayidx359 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %118 = load i32, i32* %arrayidx359, align 4
  %conv360 = zext i32 %118 to i64
  %and361 = and i64 %conv360, 4294967295
  %shr362 = lshr i64 %and361, 6
  %arrayidx363 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %119 = load i32, i32* %arrayidx363, align 4
  %conv364 = zext i32 %119 to i64
  %shl365 = shl i64 %conv364, 26
  %or366 = or i64 %shr362, %shl365
  %and367 = and i64 %or366, 4294967295
  %arrayidx368 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %120 = load i32, i32* %arrayidx368, align 4
  %conv369 = zext i32 %120 to i64
  %and370 = and i64 %conv369, 4294967295
  %shr371 = lshr i64 %and370, 11
  %arrayidx372 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %121 = load i32, i32* %arrayidx372, align 4
  %conv373 = zext i32 %121 to i64
  %shl374 = shl i64 %conv373, 21
  %or375 = or i64 %shr371, %shl374
  %and376 = and i64 %or375, 4294967295
  %xor377 = xor i64 %and367, %and376
  %arrayidx378 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %122 = load i32, i32* %arrayidx378, align 4
  %conv379 = zext i32 %122 to i64
  %and380 = and i64 %conv379, 4294967295
  %shr381 = lshr i64 %and380, 25
  %arrayidx382 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %123 = load i32, i32* %arrayidx382, align 4
  %conv383 = zext i32 %123 to i64
  %shl384 = shl i64 %conv383, 7
  %or385 = or i64 %shr381, %shl384
  %and386 = and i64 %or385, 4294967295
  %xor387 = xor i64 %xor377, %and386
  %add388 = add i64 %conv358, %xor387
  %arrayidx389 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %124 = load i32, i32* %arrayidx389, align 4
  %arrayidx390 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %125 = load i32, i32* %arrayidx390, align 4
  %arrayidx391 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %126 = load i32, i32* %arrayidx391, align 4
  %arrayidx392 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %127 = load i32, i32* %arrayidx392, align 4
  %xor393 = xor i32 %126, %127
  %and394 = and i32 %125, %xor393
  %xor395 = xor i32 %124, %and394
  %conv396 = zext i32 %xor395 to i64
  %add397 = add i64 %add388, %conv396
  %add398 = add i64 %add397, 3921009573
  %arrayidx399 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 3
  %128 = load i32, i32* %arrayidx399, align 4
  %conv400 = zext i32 %128 to i64
  %add401 = add i64 %add398, %conv400
  %conv402 = trunc i64 %add401 to i32
  store i32 %conv402, i32* %t0, align 4
  %arrayidx403 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %129 = load i32, i32* %arrayidx403, align 4
  %conv404 = zext i32 %129 to i64
  %and405 = and i64 %conv404, 4294967295
  %shr406 = lshr i64 %and405, 2
  %arrayidx407 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %130 = load i32, i32* %arrayidx407, align 4
  %conv408 = zext i32 %130 to i64
  %shl409 = shl i64 %conv408, 30
  %or410 = or i64 %shr406, %shl409
  %and411 = and i64 %or410, 4294967295
  %arrayidx412 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %131 = load i32, i32* %arrayidx412, align 4
  %conv413 = zext i32 %131 to i64
  %and414 = and i64 %conv413, 4294967295
  %shr415 = lshr i64 %and414, 13
  %arrayidx416 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %132 = load i32, i32* %arrayidx416, align 4
  %conv417 = zext i32 %132 to i64
  %shl418 = shl i64 %conv417, 19
  %or419 = or i64 %shr415, %shl418
  %and420 = and i64 %or419, 4294967295
  %xor421 = xor i64 %and411, %and420
  %arrayidx422 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %133 = load i32, i32* %arrayidx422, align 4
  %conv423 = zext i32 %133 to i64
  %and424 = and i64 %conv423, 4294967295
  %shr425 = lshr i64 %and424, 22
  %arrayidx426 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %134 = load i32, i32* %arrayidx426, align 4
  %conv427 = zext i32 %134 to i64
  %shl428 = shl i64 %conv427, 10
  %or429 = or i64 %shr425, %shl428
  %and430 = and i64 %or429, 4294967295
  %xor431 = xor i64 %xor421, %and430
  %arrayidx432 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %135 = load i32, i32* %arrayidx432, align 4
  %arrayidx433 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %136 = load i32, i32* %arrayidx433, align 4
  %or434 = or i32 %135, %136
  %arrayidx435 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %137 = load i32, i32* %arrayidx435, align 4
  %and436 = and i32 %or434, %137
  %arrayidx437 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %138 = load i32, i32* %arrayidx437, align 4
  %arrayidx438 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %139 = load i32, i32* %arrayidx438, align 4
  %and439 = and i32 %138, %139
  %or440 = or i32 %and436, %and439
  %conv441 = zext i32 %or440 to i64
  %add442 = add i64 %xor431, %conv441
  %conv443 = trunc i64 %add442 to i32
  store i32 %conv443, i32* %t1, align 4
  %140 = load i32, i32* %t0, align 4
  %arrayidx444 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %141 = load i32, i32* %arrayidx444, align 4
  %add445 = add i32 %141, %140
  store i32 %add445, i32* %arrayidx444, align 4
  %142 = load i32, i32* %t0, align 4
  %143 = load i32, i32* %t1, align 4
  %add446 = add i32 %142, %143
  %arrayidx447 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  store i32 %add446, i32* %arrayidx447, align 4
  %arrayidx448 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %144 = load i32, i32* %arrayidx448, align 4
  %conv449 = zext i32 %144 to i64
  %arrayidx450 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %145 = load i32, i32* %arrayidx450, align 4
  %conv451 = zext i32 %145 to i64
  %and452 = and i64 %conv451, 4294967295
  %shr453 = lshr i64 %and452, 6
  %arrayidx454 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %146 = load i32, i32* %arrayidx454, align 4
  %conv455 = zext i32 %146 to i64
  %shl456 = shl i64 %conv455, 26
  %or457 = or i64 %shr453, %shl456
  %and458 = and i64 %or457, 4294967295
  %arrayidx459 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %147 = load i32, i32* %arrayidx459, align 4
  %conv460 = zext i32 %147 to i64
  %and461 = and i64 %conv460, 4294967295
  %shr462 = lshr i64 %and461, 11
  %arrayidx463 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %148 = load i32, i32* %arrayidx463, align 4
  %conv464 = zext i32 %148 to i64
  %shl465 = shl i64 %conv464, 21
  %or466 = or i64 %shr462, %shl465
  %and467 = and i64 %or466, 4294967295
  %xor468 = xor i64 %and458, %and467
  %arrayidx469 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %149 = load i32, i32* %arrayidx469, align 4
  %conv470 = zext i32 %149 to i64
  %and471 = and i64 %conv470, 4294967295
  %shr472 = lshr i64 %and471, 25
  %arrayidx473 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %150 = load i32, i32* %arrayidx473, align 4
  %conv474 = zext i32 %150 to i64
  %shl475 = shl i64 %conv474, 7
  %or476 = or i64 %shr472, %shl475
  %and477 = and i64 %or476, 4294967295
  %xor478 = xor i64 %xor468, %and477
  %add479 = add i64 %conv449, %xor478
  %arrayidx480 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %151 = load i32, i32* %arrayidx480, align 4
  %arrayidx481 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %152 = load i32, i32* %arrayidx481, align 4
  %arrayidx482 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %153 = load i32, i32* %arrayidx482, align 4
  %arrayidx483 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %154 = load i32, i32* %arrayidx483, align 4
  %xor484 = xor i32 %153, %154
  %and485 = and i32 %152, %xor484
  %xor486 = xor i32 %151, %and485
  %conv487 = zext i32 %xor486 to i64
  %add488 = add i64 %add479, %conv487
  %add489 = add i64 %add488, 961987163
  %arrayidx490 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 4
  %155 = load i32, i32* %arrayidx490, align 4
  %conv491 = zext i32 %155 to i64
  %add492 = add i64 %add489, %conv491
  %conv493 = trunc i64 %add492 to i32
  store i32 %conv493, i32* %t0, align 4
  %arrayidx494 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %156 = load i32, i32* %arrayidx494, align 4
  %conv495 = zext i32 %156 to i64
  %and496 = and i64 %conv495, 4294967295
  %shr497 = lshr i64 %and496, 2
  %arrayidx498 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %157 = load i32, i32* %arrayidx498, align 4
  %conv499 = zext i32 %157 to i64
  %shl500 = shl i64 %conv499, 30
  %or501 = or i64 %shr497, %shl500
  %and502 = and i64 %or501, 4294967295
  %arrayidx503 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %158 = load i32, i32* %arrayidx503, align 4
  %conv504 = zext i32 %158 to i64
  %and505 = and i64 %conv504, 4294967295
  %shr506 = lshr i64 %and505, 13
  %arrayidx507 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %159 = load i32, i32* %arrayidx507, align 4
  %conv508 = zext i32 %159 to i64
  %shl509 = shl i64 %conv508, 19
  %or510 = or i64 %shr506, %shl509
  %and511 = and i64 %or510, 4294967295
  %xor512 = xor i64 %and502, %and511
  %arrayidx513 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %160 = load i32, i32* %arrayidx513, align 4
  %conv514 = zext i32 %160 to i64
  %and515 = and i64 %conv514, 4294967295
  %shr516 = lshr i64 %and515, 22
  %arrayidx517 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %161 = load i32, i32* %arrayidx517, align 4
  %conv518 = zext i32 %161 to i64
  %shl519 = shl i64 %conv518, 10
  %or520 = or i64 %shr516, %shl519
  %and521 = and i64 %or520, 4294967295
  %xor522 = xor i64 %xor512, %and521
  %arrayidx523 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %162 = load i32, i32* %arrayidx523, align 4
  %arrayidx524 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %163 = load i32, i32* %arrayidx524, align 4
  %or525 = or i32 %162, %163
  %arrayidx526 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %164 = load i32, i32* %arrayidx526, align 4
  %and527 = and i32 %or525, %164
  %arrayidx528 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %165 = load i32, i32* %arrayidx528, align 4
  %arrayidx529 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %166 = load i32, i32* %arrayidx529, align 4
  %and530 = and i32 %165, %166
  %or531 = or i32 %and527, %and530
  %conv532 = zext i32 %or531 to i64
  %add533 = add i64 %xor522, %conv532
  %conv534 = trunc i64 %add533 to i32
  store i32 %conv534, i32* %t1, align 4
  %167 = load i32, i32* %t0, align 4
  %arrayidx535 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %168 = load i32, i32* %arrayidx535, align 4
  %add536 = add i32 %168, %167
  store i32 %add536, i32* %arrayidx535, align 4
  %169 = load i32, i32* %t0, align 4
  %170 = load i32, i32* %t1, align 4
  %add537 = add i32 %169, %170
  %arrayidx538 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  store i32 %add537, i32* %arrayidx538, align 4
  %arrayidx539 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %171 = load i32, i32* %arrayidx539, align 4
  %conv540 = zext i32 %171 to i64
  %arrayidx541 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %172 = load i32, i32* %arrayidx541, align 4
  %conv542 = zext i32 %172 to i64
  %and543 = and i64 %conv542, 4294967295
  %shr544 = lshr i64 %and543, 6
  %arrayidx545 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %173 = load i32, i32* %arrayidx545, align 4
  %conv546 = zext i32 %173 to i64
  %shl547 = shl i64 %conv546, 26
  %or548 = or i64 %shr544, %shl547
  %and549 = and i64 %or548, 4294967295
  %arrayidx550 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %174 = load i32, i32* %arrayidx550, align 4
  %conv551 = zext i32 %174 to i64
  %and552 = and i64 %conv551, 4294967295
  %shr553 = lshr i64 %and552, 11
  %arrayidx554 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %175 = load i32, i32* %arrayidx554, align 4
  %conv555 = zext i32 %175 to i64
  %shl556 = shl i64 %conv555, 21
  %or557 = or i64 %shr553, %shl556
  %and558 = and i64 %or557, 4294967295
  %xor559 = xor i64 %and549, %and558
  %arrayidx560 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %176 = load i32, i32* %arrayidx560, align 4
  %conv561 = zext i32 %176 to i64
  %and562 = and i64 %conv561, 4294967295
  %shr563 = lshr i64 %and562, 25
  %arrayidx564 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %177 = load i32, i32* %arrayidx564, align 4
  %conv565 = zext i32 %177 to i64
  %shl566 = shl i64 %conv565, 7
  %or567 = or i64 %shr563, %shl566
  %and568 = and i64 %or567, 4294967295
  %xor569 = xor i64 %xor559, %and568
  %add570 = add i64 %conv540, %xor569
  %arrayidx571 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %178 = load i32, i32* %arrayidx571, align 4
  %arrayidx572 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %179 = load i32, i32* %arrayidx572, align 4
  %arrayidx573 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %180 = load i32, i32* %arrayidx573, align 4
  %arrayidx574 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %181 = load i32, i32* %arrayidx574, align 4
  %xor575 = xor i32 %180, %181
  %and576 = and i32 %179, %xor575
  %xor577 = xor i32 %178, %and576
  %conv578 = zext i32 %xor577 to i64
  %add579 = add i64 %add570, %conv578
  %add580 = add i64 %add579, 1508970993
  %arrayidx581 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 5
  %182 = load i32, i32* %arrayidx581, align 4
  %conv582 = zext i32 %182 to i64
  %add583 = add i64 %add580, %conv582
  %conv584 = trunc i64 %add583 to i32
  store i32 %conv584, i32* %t0, align 4
  %arrayidx585 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %183 = load i32, i32* %arrayidx585, align 4
  %conv586 = zext i32 %183 to i64
  %and587 = and i64 %conv586, 4294967295
  %shr588 = lshr i64 %and587, 2
  %arrayidx589 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %184 = load i32, i32* %arrayidx589, align 4
  %conv590 = zext i32 %184 to i64
  %shl591 = shl i64 %conv590, 30
  %or592 = or i64 %shr588, %shl591
  %and593 = and i64 %or592, 4294967295
  %arrayidx594 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %185 = load i32, i32* %arrayidx594, align 4
  %conv595 = zext i32 %185 to i64
  %and596 = and i64 %conv595, 4294967295
  %shr597 = lshr i64 %and596, 13
  %arrayidx598 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %186 = load i32, i32* %arrayidx598, align 4
  %conv599 = zext i32 %186 to i64
  %shl600 = shl i64 %conv599, 19
  %or601 = or i64 %shr597, %shl600
  %and602 = and i64 %or601, 4294967295
  %xor603 = xor i64 %and593, %and602
  %arrayidx604 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %187 = load i32, i32* %arrayidx604, align 4
  %conv605 = zext i32 %187 to i64
  %and606 = and i64 %conv605, 4294967295
  %shr607 = lshr i64 %and606, 22
  %arrayidx608 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %188 = load i32, i32* %arrayidx608, align 4
  %conv609 = zext i32 %188 to i64
  %shl610 = shl i64 %conv609, 10
  %or611 = or i64 %shr607, %shl610
  %and612 = and i64 %or611, 4294967295
  %xor613 = xor i64 %xor603, %and612
  %arrayidx614 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %189 = load i32, i32* %arrayidx614, align 4
  %arrayidx615 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %190 = load i32, i32* %arrayidx615, align 4
  %or616 = or i32 %189, %190
  %arrayidx617 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %191 = load i32, i32* %arrayidx617, align 4
  %and618 = and i32 %or616, %191
  %arrayidx619 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %192 = load i32, i32* %arrayidx619, align 4
  %arrayidx620 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %193 = load i32, i32* %arrayidx620, align 4
  %and621 = and i32 %192, %193
  %or622 = or i32 %and618, %and621
  %conv623 = zext i32 %or622 to i64
  %add624 = add i64 %xor613, %conv623
  %conv625 = trunc i64 %add624 to i32
  store i32 %conv625, i32* %t1, align 4
  %194 = load i32, i32* %t0, align 4
  %arrayidx626 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %195 = load i32, i32* %arrayidx626, align 4
  %add627 = add i32 %195, %194
  store i32 %add627, i32* %arrayidx626, align 4
  %196 = load i32, i32* %t0, align 4
  %197 = load i32, i32* %t1, align 4
  %add628 = add i32 %196, %197
  %arrayidx629 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  store i32 %add628, i32* %arrayidx629, align 4
  %arrayidx630 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %198 = load i32, i32* %arrayidx630, align 4
  %conv631 = zext i32 %198 to i64
  %arrayidx632 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %199 = load i32, i32* %arrayidx632, align 4
  %conv633 = zext i32 %199 to i64
  %and634 = and i64 %conv633, 4294967295
  %shr635 = lshr i64 %and634, 6
  %arrayidx636 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %200 = load i32, i32* %arrayidx636, align 4
  %conv637 = zext i32 %200 to i64
  %shl638 = shl i64 %conv637, 26
  %or639 = or i64 %shr635, %shl638
  %and640 = and i64 %or639, 4294967295
  %arrayidx641 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %201 = load i32, i32* %arrayidx641, align 4
  %conv642 = zext i32 %201 to i64
  %and643 = and i64 %conv642, 4294967295
  %shr644 = lshr i64 %and643, 11
  %arrayidx645 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %202 = load i32, i32* %arrayidx645, align 4
  %conv646 = zext i32 %202 to i64
  %shl647 = shl i64 %conv646, 21
  %or648 = or i64 %shr644, %shl647
  %and649 = and i64 %or648, 4294967295
  %xor650 = xor i64 %and640, %and649
  %arrayidx651 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %203 = load i32, i32* %arrayidx651, align 4
  %conv652 = zext i32 %203 to i64
  %and653 = and i64 %conv652, 4294967295
  %shr654 = lshr i64 %and653, 25
  %arrayidx655 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %204 = load i32, i32* %arrayidx655, align 4
  %conv656 = zext i32 %204 to i64
  %shl657 = shl i64 %conv656, 7
  %or658 = or i64 %shr654, %shl657
  %and659 = and i64 %or658, 4294967295
  %xor660 = xor i64 %xor650, %and659
  %add661 = add i64 %conv631, %xor660
  %arrayidx662 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %205 = load i32, i32* %arrayidx662, align 4
  %arrayidx663 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %206 = load i32, i32* %arrayidx663, align 4
  %arrayidx664 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %207 = load i32, i32* %arrayidx664, align 4
  %arrayidx665 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %208 = load i32, i32* %arrayidx665, align 4
  %xor666 = xor i32 %207, %208
  %and667 = and i32 %206, %xor666
  %xor668 = xor i32 %205, %and667
  %conv669 = zext i32 %xor668 to i64
  %add670 = add i64 %add661, %conv669
  %add671 = add i64 %add670, 2453635748
  %arrayidx672 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 6
  %209 = load i32, i32* %arrayidx672, align 4
  %conv673 = zext i32 %209 to i64
  %add674 = add i64 %add671, %conv673
  %conv675 = trunc i64 %add674 to i32
  store i32 %conv675, i32* %t0, align 4
  %arrayidx676 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %210 = load i32, i32* %arrayidx676, align 4
  %conv677 = zext i32 %210 to i64
  %and678 = and i64 %conv677, 4294967295
  %shr679 = lshr i64 %and678, 2
  %arrayidx680 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %211 = load i32, i32* %arrayidx680, align 4
  %conv681 = zext i32 %211 to i64
  %shl682 = shl i64 %conv681, 30
  %or683 = or i64 %shr679, %shl682
  %and684 = and i64 %or683, 4294967295
  %arrayidx685 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %212 = load i32, i32* %arrayidx685, align 4
  %conv686 = zext i32 %212 to i64
  %and687 = and i64 %conv686, 4294967295
  %shr688 = lshr i64 %and687, 13
  %arrayidx689 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %213 = load i32, i32* %arrayidx689, align 4
  %conv690 = zext i32 %213 to i64
  %shl691 = shl i64 %conv690, 19
  %or692 = or i64 %shr688, %shl691
  %and693 = and i64 %or692, 4294967295
  %xor694 = xor i64 %and684, %and693
  %arrayidx695 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %214 = load i32, i32* %arrayidx695, align 4
  %conv696 = zext i32 %214 to i64
  %and697 = and i64 %conv696, 4294967295
  %shr698 = lshr i64 %and697, 22
  %arrayidx699 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %215 = load i32, i32* %arrayidx699, align 4
  %conv700 = zext i32 %215 to i64
  %shl701 = shl i64 %conv700, 10
  %or702 = or i64 %shr698, %shl701
  %and703 = and i64 %or702, 4294967295
  %xor704 = xor i64 %xor694, %and703
  %arrayidx705 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %216 = load i32, i32* %arrayidx705, align 4
  %arrayidx706 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %217 = load i32, i32* %arrayidx706, align 4
  %or707 = or i32 %216, %217
  %arrayidx708 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %218 = load i32, i32* %arrayidx708, align 4
  %and709 = and i32 %or707, %218
  %arrayidx710 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %219 = load i32, i32* %arrayidx710, align 4
  %arrayidx711 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %220 = load i32, i32* %arrayidx711, align 4
  %and712 = and i32 %219, %220
  %or713 = or i32 %and709, %and712
  %conv714 = zext i32 %or713 to i64
  %add715 = add i64 %xor704, %conv714
  %conv716 = trunc i64 %add715 to i32
  store i32 %conv716, i32* %t1, align 4
  %221 = load i32, i32* %t0, align 4
  %arrayidx717 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %222 = load i32, i32* %arrayidx717, align 4
  %add718 = add i32 %222, %221
  store i32 %add718, i32* %arrayidx717, align 4
  %223 = load i32, i32* %t0, align 4
  %224 = load i32, i32* %t1, align 4
  %add719 = add i32 %223, %224
  %arrayidx720 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  store i32 %add719, i32* %arrayidx720, align 4
  %arrayidx721 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %225 = load i32, i32* %arrayidx721, align 4
  %conv722 = zext i32 %225 to i64
  %arrayidx723 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %226 = load i32, i32* %arrayidx723, align 4
  %conv724 = zext i32 %226 to i64
  %and725 = and i64 %conv724, 4294967295
  %shr726 = lshr i64 %and725, 6
  %arrayidx727 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %227 = load i32, i32* %arrayidx727, align 4
  %conv728 = zext i32 %227 to i64
  %shl729 = shl i64 %conv728, 26
  %or730 = or i64 %shr726, %shl729
  %and731 = and i64 %or730, 4294967295
  %arrayidx732 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %228 = load i32, i32* %arrayidx732, align 4
  %conv733 = zext i32 %228 to i64
  %and734 = and i64 %conv733, 4294967295
  %shr735 = lshr i64 %and734, 11
  %arrayidx736 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %229 = load i32, i32* %arrayidx736, align 4
  %conv737 = zext i32 %229 to i64
  %shl738 = shl i64 %conv737, 21
  %or739 = or i64 %shr735, %shl738
  %and740 = and i64 %or739, 4294967295
  %xor741 = xor i64 %and731, %and740
  %arrayidx742 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %230 = load i32, i32* %arrayidx742, align 4
  %conv743 = zext i32 %230 to i64
  %and744 = and i64 %conv743, 4294967295
  %shr745 = lshr i64 %and744, 25
  %arrayidx746 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %231 = load i32, i32* %arrayidx746, align 4
  %conv747 = zext i32 %231 to i64
  %shl748 = shl i64 %conv747, 7
  %or749 = or i64 %shr745, %shl748
  %and750 = and i64 %or749, 4294967295
  %xor751 = xor i64 %xor741, %and750
  %add752 = add i64 %conv722, %xor751
  %arrayidx753 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %232 = load i32, i32* %arrayidx753, align 4
  %arrayidx754 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %233 = load i32, i32* %arrayidx754, align 4
  %arrayidx755 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %234 = load i32, i32* %arrayidx755, align 4
  %arrayidx756 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %235 = load i32, i32* %arrayidx756, align 4
  %xor757 = xor i32 %234, %235
  %and758 = and i32 %233, %xor757
  %xor759 = xor i32 %232, %and758
  %conv760 = zext i32 %xor759 to i64
  %add761 = add i64 %add752, %conv760
  %add762 = add i64 %add761, 2870763221
  %arrayidx763 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 7
  %236 = load i32, i32* %arrayidx763, align 4
  %conv764 = zext i32 %236 to i64
  %add765 = add i64 %add762, %conv764
  %conv766 = trunc i64 %add765 to i32
  store i32 %conv766, i32* %t0, align 4
  %arrayidx767 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %237 = load i32, i32* %arrayidx767, align 4
  %conv768 = zext i32 %237 to i64
  %and769 = and i64 %conv768, 4294967295
  %shr770 = lshr i64 %and769, 2
  %arrayidx771 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %238 = load i32, i32* %arrayidx771, align 4
  %conv772 = zext i32 %238 to i64
  %shl773 = shl i64 %conv772, 30
  %or774 = or i64 %shr770, %shl773
  %and775 = and i64 %or774, 4294967295
  %arrayidx776 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %239 = load i32, i32* %arrayidx776, align 4
  %conv777 = zext i32 %239 to i64
  %and778 = and i64 %conv777, 4294967295
  %shr779 = lshr i64 %and778, 13
  %arrayidx780 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %240 = load i32, i32* %arrayidx780, align 4
  %conv781 = zext i32 %240 to i64
  %shl782 = shl i64 %conv781, 19
  %or783 = or i64 %shr779, %shl782
  %and784 = and i64 %or783, 4294967295
  %xor785 = xor i64 %and775, %and784
  %arrayidx786 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %241 = load i32, i32* %arrayidx786, align 4
  %conv787 = zext i32 %241 to i64
  %and788 = and i64 %conv787, 4294967295
  %shr789 = lshr i64 %and788, 22
  %arrayidx790 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %242 = load i32, i32* %arrayidx790, align 4
  %conv791 = zext i32 %242 to i64
  %shl792 = shl i64 %conv791, 10
  %or793 = or i64 %shr789, %shl792
  %and794 = and i64 %or793, 4294967295
  %xor795 = xor i64 %xor785, %and794
  %arrayidx796 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %243 = load i32, i32* %arrayidx796, align 4
  %arrayidx797 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %244 = load i32, i32* %arrayidx797, align 4
  %or798 = or i32 %243, %244
  %arrayidx799 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %245 = load i32, i32* %arrayidx799, align 4
  %and800 = and i32 %or798, %245
  %arrayidx801 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %246 = load i32, i32* %arrayidx801, align 4
  %arrayidx802 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %247 = load i32, i32* %arrayidx802, align 4
  %and803 = and i32 %246, %247
  %or804 = or i32 %and800, %and803
  %conv805 = zext i32 %or804 to i64
  %add806 = add i64 %xor795, %conv805
  %conv807 = trunc i64 %add806 to i32
  store i32 %conv807, i32* %t1, align 4
  %248 = load i32, i32* %t0, align 4
  %arrayidx808 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %249 = load i32, i32* %arrayidx808, align 4
  %add809 = add i32 %249, %248
  store i32 %add809, i32* %arrayidx808, align 4
  %250 = load i32, i32* %t0, align 4
  %251 = load i32, i32* %t1, align 4
  %add810 = add i32 %250, %251
  %arrayidx811 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  store i32 %add810, i32* %arrayidx811, align 4
  %arrayidx812 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %252 = load i32, i32* %arrayidx812, align 4
  %conv813 = zext i32 %252 to i64
  %arrayidx814 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %253 = load i32, i32* %arrayidx814, align 4
  %conv815 = zext i32 %253 to i64
  %and816 = and i64 %conv815, 4294967295
  %shr817 = lshr i64 %and816, 6
  %arrayidx818 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %254 = load i32, i32* %arrayidx818, align 4
  %conv819 = zext i32 %254 to i64
  %shl820 = shl i64 %conv819, 26
  %or821 = or i64 %shr817, %shl820
  %and822 = and i64 %or821, 4294967295
  %arrayidx823 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %255 = load i32, i32* %arrayidx823, align 4
  %conv824 = zext i32 %255 to i64
  %and825 = and i64 %conv824, 4294967295
  %shr826 = lshr i64 %and825, 11
  %arrayidx827 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %256 = load i32, i32* %arrayidx827, align 4
  %conv828 = zext i32 %256 to i64
  %shl829 = shl i64 %conv828, 21
  %or830 = or i64 %shr826, %shl829
  %and831 = and i64 %or830, 4294967295
  %xor832 = xor i64 %and822, %and831
  %arrayidx833 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %257 = load i32, i32* %arrayidx833, align 4
  %conv834 = zext i32 %257 to i64
  %and835 = and i64 %conv834, 4294967295
  %shr836 = lshr i64 %and835, 25
  %arrayidx837 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %258 = load i32, i32* %arrayidx837, align 4
  %conv838 = zext i32 %258 to i64
  %shl839 = shl i64 %conv838, 7
  %or840 = or i64 %shr836, %shl839
  %and841 = and i64 %or840, 4294967295
  %xor842 = xor i64 %xor832, %and841
  %add843 = add i64 %conv813, %xor842
  %arrayidx844 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %259 = load i32, i32* %arrayidx844, align 4
  %arrayidx845 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %260 = load i32, i32* %arrayidx845, align 4
  %arrayidx846 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %261 = load i32, i32* %arrayidx846, align 4
  %arrayidx847 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %262 = load i32, i32* %arrayidx847, align 4
  %xor848 = xor i32 %261, %262
  %and849 = and i32 %260, %xor848
  %xor850 = xor i32 %259, %and849
  %conv851 = zext i32 %xor850 to i64
  %add852 = add i64 %add843, %conv851
  %add853 = add i64 %add852, 3624381080
  %arrayidx854 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 8
  %263 = load i32, i32* %arrayidx854, align 4
  %conv855 = zext i32 %263 to i64
  %add856 = add i64 %add853, %conv855
  %conv857 = trunc i64 %add856 to i32
  store i32 %conv857, i32* %t0, align 4
  %arrayidx858 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %264 = load i32, i32* %arrayidx858, align 4
  %conv859 = zext i32 %264 to i64
  %and860 = and i64 %conv859, 4294967295
  %shr861 = lshr i64 %and860, 2
  %arrayidx862 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %265 = load i32, i32* %arrayidx862, align 4
  %conv863 = zext i32 %265 to i64
  %shl864 = shl i64 %conv863, 30
  %or865 = or i64 %shr861, %shl864
  %and866 = and i64 %or865, 4294967295
  %arrayidx867 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %266 = load i32, i32* %arrayidx867, align 4
  %conv868 = zext i32 %266 to i64
  %and869 = and i64 %conv868, 4294967295
  %shr870 = lshr i64 %and869, 13
  %arrayidx871 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %267 = load i32, i32* %arrayidx871, align 4
  %conv872 = zext i32 %267 to i64
  %shl873 = shl i64 %conv872, 19
  %or874 = or i64 %shr870, %shl873
  %and875 = and i64 %or874, 4294967295
  %xor876 = xor i64 %and866, %and875
  %arrayidx877 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %268 = load i32, i32* %arrayidx877, align 4
  %conv878 = zext i32 %268 to i64
  %and879 = and i64 %conv878, 4294967295
  %shr880 = lshr i64 %and879, 22
  %arrayidx881 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %269 = load i32, i32* %arrayidx881, align 4
  %conv882 = zext i32 %269 to i64
  %shl883 = shl i64 %conv882, 10
  %or884 = or i64 %shr880, %shl883
  %and885 = and i64 %or884, 4294967295
  %xor886 = xor i64 %xor876, %and885
  %arrayidx887 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %270 = load i32, i32* %arrayidx887, align 4
  %arrayidx888 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %271 = load i32, i32* %arrayidx888, align 4
  %or889 = or i32 %270, %271
  %arrayidx890 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %272 = load i32, i32* %arrayidx890, align 4
  %and891 = and i32 %or889, %272
  %arrayidx892 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %273 = load i32, i32* %arrayidx892, align 4
  %arrayidx893 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %274 = load i32, i32* %arrayidx893, align 4
  %and894 = and i32 %273, %274
  %or895 = or i32 %and891, %and894
  %conv896 = zext i32 %or895 to i64
  %add897 = add i64 %xor886, %conv896
  %conv898 = trunc i64 %add897 to i32
  store i32 %conv898, i32* %t1, align 4
  %275 = load i32, i32* %t0, align 4
  %arrayidx899 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %276 = load i32, i32* %arrayidx899, align 4
  %add900 = add i32 %276, %275
  store i32 %add900, i32* %arrayidx899, align 4
  %277 = load i32, i32* %t0, align 4
  %278 = load i32, i32* %t1, align 4
  %add901 = add i32 %277, %278
  %arrayidx902 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  store i32 %add901, i32* %arrayidx902, align 4
  %arrayidx903 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %279 = load i32, i32* %arrayidx903, align 4
  %conv904 = zext i32 %279 to i64
  %arrayidx905 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %280 = load i32, i32* %arrayidx905, align 4
  %conv906 = zext i32 %280 to i64
  %and907 = and i64 %conv906, 4294967295
  %shr908 = lshr i64 %and907, 6
  %arrayidx909 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %281 = load i32, i32* %arrayidx909, align 4
  %conv910 = zext i32 %281 to i64
  %shl911 = shl i64 %conv910, 26
  %or912 = or i64 %shr908, %shl911
  %and913 = and i64 %or912, 4294967295
  %arrayidx914 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %282 = load i32, i32* %arrayidx914, align 4
  %conv915 = zext i32 %282 to i64
  %and916 = and i64 %conv915, 4294967295
  %shr917 = lshr i64 %and916, 11
  %arrayidx918 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %283 = load i32, i32* %arrayidx918, align 4
  %conv919 = zext i32 %283 to i64
  %shl920 = shl i64 %conv919, 21
  %or921 = or i64 %shr917, %shl920
  %and922 = and i64 %or921, 4294967295
  %xor923 = xor i64 %and913, %and922
  %arrayidx924 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %284 = load i32, i32* %arrayidx924, align 4
  %conv925 = zext i32 %284 to i64
  %and926 = and i64 %conv925, 4294967295
  %shr927 = lshr i64 %and926, 25
  %arrayidx928 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %285 = load i32, i32* %arrayidx928, align 4
  %conv929 = zext i32 %285 to i64
  %shl930 = shl i64 %conv929, 7
  %or931 = or i64 %shr927, %shl930
  %and932 = and i64 %or931, 4294967295
  %xor933 = xor i64 %xor923, %and932
  %add934 = add i64 %conv904, %xor933
  %arrayidx935 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %286 = load i32, i32* %arrayidx935, align 4
  %arrayidx936 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %287 = load i32, i32* %arrayidx936, align 4
  %arrayidx937 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %288 = load i32, i32* %arrayidx937, align 4
  %arrayidx938 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %289 = load i32, i32* %arrayidx938, align 4
  %xor939 = xor i32 %288, %289
  %and940 = and i32 %287, %xor939
  %xor941 = xor i32 %286, %and940
  %conv942 = zext i32 %xor941 to i64
  %add943 = add i64 %add934, %conv942
  %add944 = add i64 %add943, 310598401
  %arrayidx945 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 9
  %290 = load i32, i32* %arrayidx945, align 4
  %conv946 = zext i32 %290 to i64
  %add947 = add i64 %add944, %conv946
  %conv948 = trunc i64 %add947 to i32
  store i32 %conv948, i32* %t0, align 4
  %arrayidx949 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %291 = load i32, i32* %arrayidx949, align 4
  %conv950 = zext i32 %291 to i64
  %and951 = and i64 %conv950, 4294967295
  %shr952 = lshr i64 %and951, 2
  %arrayidx953 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %292 = load i32, i32* %arrayidx953, align 4
  %conv954 = zext i32 %292 to i64
  %shl955 = shl i64 %conv954, 30
  %or956 = or i64 %shr952, %shl955
  %and957 = and i64 %or956, 4294967295
  %arrayidx958 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %293 = load i32, i32* %arrayidx958, align 4
  %conv959 = zext i32 %293 to i64
  %and960 = and i64 %conv959, 4294967295
  %shr961 = lshr i64 %and960, 13
  %arrayidx962 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %294 = load i32, i32* %arrayidx962, align 4
  %conv963 = zext i32 %294 to i64
  %shl964 = shl i64 %conv963, 19
  %or965 = or i64 %shr961, %shl964
  %and966 = and i64 %or965, 4294967295
  %xor967 = xor i64 %and957, %and966
  %arrayidx968 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %295 = load i32, i32* %arrayidx968, align 4
  %conv969 = zext i32 %295 to i64
  %and970 = and i64 %conv969, 4294967295
  %shr971 = lshr i64 %and970, 22
  %arrayidx972 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %296 = load i32, i32* %arrayidx972, align 4
  %conv973 = zext i32 %296 to i64
  %shl974 = shl i64 %conv973, 10
  %or975 = or i64 %shr971, %shl974
  %and976 = and i64 %or975, 4294967295
  %xor977 = xor i64 %xor967, %and976
  %arrayidx978 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %297 = load i32, i32* %arrayidx978, align 4
  %arrayidx979 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %298 = load i32, i32* %arrayidx979, align 4
  %or980 = or i32 %297, %298
  %arrayidx981 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %299 = load i32, i32* %arrayidx981, align 4
  %and982 = and i32 %or980, %299
  %arrayidx983 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %300 = load i32, i32* %arrayidx983, align 4
  %arrayidx984 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %301 = load i32, i32* %arrayidx984, align 4
  %and985 = and i32 %300, %301
  %or986 = or i32 %and982, %and985
  %conv987 = zext i32 %or986 to i64
  %add988 = add i64 %xor977, %conv987
  %conv989 = trunc i64 %add988 to i32
  store i32 %conv989, i32* %t1, align 4
  %302 = load i32, i32* %t0, align 4
  %arrayidx990 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %303 = load i32, i32* %arrayidx990, align 4
  %add991 = add i32 %303, %302
  store i32 %add991, i32* %arrayidx990, align 4
  %304 = load i32, i32* %t0, align 4
  %305 = load i32, i32* %t1, align 4
  %add992 = add i32 %304, %305
  %arrayidx993 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  store i32 %add992, i32* %arrayidx993, align 4
  %arrayidx994 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %306 = load i32, i32* %arrayidx994, align 4
  %conv995 = zext i32 %306 to i64
  %arrayidx996 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %307 = load i32, i32* %arrayidx996, align 4
  %conv997 = zext i32 %307 to i64
  %and998 = and i64 %conv997, 4294967295
  %shr999 = lshr i64 %and998, 6
  %arrayidx1000 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %308 = load i32, i32* %arrayidx1000, align 4
  %conv1001 = zext i32 %308 to i64
  %shl1002 = shl i64 %conv1001, 26
  %or1003 = or i64 %shr999, %shl1002
  %and1004 = and i64 %or1003, 4294967295
  %arrayidx1005 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %309 = load i32, i32* %arrayidx1005, align 4
  %conv1006 = zext i32 %309 to i64
  %and1007 = and i64 %conv1006, 4294967295
  %shr1008 = lshr i64 %and1007, 11
  %arrayidx1009 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %310 = load i32, i32* %arrayidx1009, align 4
  %conv1010 = zext i32 %310 to i64
  %shl1011 = shl i64 %conv1010, 21
  %or1012 = or i64 %shr1008, %shl1011
  %and1013 = and i64 %or1012, 4294967295
  %xor1014 = xor i64 %and1004, %and1013
  %arrayidx1015 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %311 = load i32, i32* %arrayidx1015, align 4
  %conv1016 = zext i32 %311 to i64
  %and1017 = and i64 %conv1016, 4294967295
  %shr1018 = lshr i64 %and1017, 25
  %arrayidx1019 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %312 = load i32, i32* %arrayidx1019, align 4
  %conv1020 = zext i32 %312 to i64
  %shl1021 = shl i64 %conv1020, 7
  %or1022 = or i64 %shr1018, %shl1021
  %and1023 = and i64 %or1022, 4294967295
  %xor1024 = xor i64 %xor1014, %and1023
  %add1025 = add i64 %conv995, %xor1024
  %arrayidx1026 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %313 = load i32, i32* %arrayidx1026, align 4
  %arrayidx1027 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %314 = load i32, i32* %arrayidx1027, align 4
  %arrayidx1028 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %315 = load i32, i32* %arrayidx1028, align 4
  %arrayidx1029 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %316 = load i32, i32* %arrayidx1029, align 4
  %xor1030 = xor i32 %315, %316
  %and1031 = and i32 %314, %xor1030
  %xor1032 = xor i32 %313, %and1031
  %conv1033 = zext i32 %xor1032 to i64
  %add1034 = add i64 %add1025, %conv1033
  %add1035 = add i64 %add1034, 607225278
  %arrayidx1036 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 10
  %317 = load i32, i32* %arrayidx1036, align 4
  %conv1037 = zext i32 %317 to i64
  %add1038 = add i64 %add1035, %conv1037
  %conv1039 = trunc i64 %add1038 to i32
  store i32 %conv1039, i32* %t0, align 4
  %arrayidx1040 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %318 = load i32, i32* %arrayidx1040, align 4
  %conv1041 = zext i32 %318 to i64
  %and1042 = and i64 %conv1041, 4294967295
  %shr1043 = lshr i64 %and1042, 2
  %arrayidx1044 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %319 = load i32, i32* %arrayidx1044, align 4
  %conv1045 = zext i32 %319 to i64
  %shl1046 = shl i64 %conv1045, 30
  %or1047 = or i64 %shr1043, %shl1046
  %and1048 = and i64 %or1047, 4294967295
  %arrayidx1049 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %320 = load i32, i32* %arrayidx1049, align 4
  %conv1050 = zext i32 %320 to i64
  %and1051 = and i64 %conv1050, 4294967295
  %shr1052 = lshr i64 %and1051, 13
  %arrayidx1053 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %321 = load i32, i32* %arrayidx1053, align 4
  %conv1054 = zext i32 %321 to i64
  %shl1055 = shl i64 %conv1054, 19
  %or1056 = or i64 %shr1052, %shl1055
  %and1057 = and i64 %or1056, 4294967295
  %xor1058 = xor i64 %and1048, %and1057
  %arrayidx1059 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %322 = load i32, i32* %arrayidx1059, align 4
  %conv1060 = zext i32 %322 to i64
  %and1061 = and i64 %conv1060, 4294967295
  %shr1062 = lshr i64 %and1061, 22
  %arrayidx1063 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %323 = load i32, i32* %arrayidx1063, align 4
  %conv1064 = zext i32 %323 to i64
  %shl1065 = shl i64 %conv1064, 10
  %or1066 = or i64 %shr1062, %shl1065
  %and1067 = and i64 %or1066, 4294967295
  %xor1068 = xor i64 %xor1058, %and1067
  %arrayidx1069 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %324 = load i32, i32* %arrayidx1069, align 4
  %arrayidx1070 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %325 = load i32, i32* %arrayidx1070, align 4
  %or1071 = or i32 %324, %325
  %arrayidx1072 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %326 = load i32, i32* %arrayidx1072, align 4
  %and1073 = and i32 %or1071, %326
  %arrayidx1074 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %327 = load i32, i32* %arrayidx1074, align 4
  %arrayidx1075 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %328 = load i32, i32* %arrayidx1075, align 4
  %and1076 = and i32 %327, %328
  %or1077 = or i32 %and1073, %and1076
  %conv1078 = zext i32 %or1077 to i64
  %add1079 = add i64 %xor1068, %conv1078
  %conv1080 = trunc i64 %add1079 to i32
  store i32 %conv1080, i32* %t1, align 4
  %329 = load i32, i32* %t0, align 4
  %arrayidx1081 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %330 = load i32, i32* %arrayidx1081, align 4
  %add1082 = add i32 %330, %329
  store i32 %add1082, i32* %arrayidx1081, align 4
  %331 = load i32, i32* %t0, align 4
  %332 = load i32, i32* %t1, align 4
  %add1083 = add i32 %331, %332
  %arrayidx1084 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  store i32 %add1083, i32* %arrayidx1084, align 4
  %arrayidx1085 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %333 = load i32, i32* %arrayidx1085, align 4
  %conv1086 = zext i32 %333 to i64
  %arrayidx1087 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %334 = load i32, i32* %arrayidx1087, align 4
  %conv1088 = zext i32 %334 to i64
  %and1089 = and i64 %conv1088, 4294967295
  %shr1090 = lshr i64 %and1089, 6
  %arrayidx1091 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %335 = load i32, i32* %arrayidx1091, align 4
  %conv1092 = zext i32 %335 to i64
  %shl1093 = shl i64 %conv1092, 26
  %or1094 = or i64 %shr1090, %shl1093
  %and1095 = and i64 %or1094, 4294967295
  %arrayidx1096 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %336 = load i32, i32* %arrayidx1096, align 4
  %conv1097 = zext i32 %336 to i64
  %and1098 = and i64 %conv1097, 4294967295
  %shr1099 = lshr i64 %and1098, 11
  %arrayidx1100 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %337 = load i32, i32* %arrayidx1100, align 4
  %conv1101 = zext i32 %337 to i64
  %shl1102 = shl i64 %conv1101, 21
  %or1103 = or i64 %shr1099, %shl1102
  %and1104 = and i64 %or1103, 4294967295
  %xor1105 = xor i64 %and1095, %and1104
  %arrayidx1106 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %338 = load i32, i32* %arrayidx1106, align 4
  %conv1107 = zext i32 %338 to i64
  %and1108 = and i64 %conv1107, 4294967295
  %shr1109 = lshr i64 %and1108, 25
  %arrayidx1110 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %339 = load i32, i32* %arrayidx1110, align 4
  %conv1111 = zext i32 %339 to i64
  %shl1112 = shl i64 %conv1111, 7
  %or1113 = or i64 %shr1109, %shl1112
  %and1114 = and i64 %or1113, 4294967295
  %xor1115 = xor i64 %xor1105, %and1114
  %add1116 = add i64 %conv1086, %xor1115
  %arrayidx1117 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %340 = load i32, i32* %arrayidx1117, align 4
  %arrayidx1118 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %341 = load i32, i32* %arrayidx1118, align 4
  %arrayidx1119 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %342 = load i32, i32* %arrayidx1119, align 4
  %arrayidx1120 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %343 = load i32, i32* %arrayidx1120, align 4
  %xor1121 = xor i32 %342, %343
  %and1122 = and i32 %341, %xor1121
  %xor1123 = xor i32 %340, %and1122
  %conv1124 = zext i32 %xor1123 to i64
  %add1125 = add i64 %add1116, %conv1124
  %add1126 = add i64 %add1125, 1426881987
  %arrayidx1127 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 11
  %344 = load i32, i32* %arrayidx1127, align 4
  %conv1128 = zext i32 %344 to i64
  %add1129 = add i64 %add1126, %conv1128
  %conv1130 = trunc i64 %add1129 to i32
  store i32 %conv1130, i32* %t0, align 4
  %arrayidx1131 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %345 = load i32, i32* %arrayidx1131, align 4
  %conv1132 = zext i32 %345 to i64
  %and1133 = and i64 %conv1132, 4294967295
  %shr1134 = lshr i64 %and1133, 2
  %arrayidx1135 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %346 = load i32, i32* %arrayidx1135, align 4
  %conv1136 = zext i32 %346 to i64
  %shl1137 = shl i64 %conv1136, 30
  %or1138 = or i64 %shr1134, %shl1137
  %and1139 = and i64 %or1138, 4294967295
  %arrayidx1140 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %347 = load i32, i32* %arrayidx1140, align 4
  %conv1141 = zext i32 %347 to i64
  %and1142 = and i64 %conv1141, 4294967295
  %shr1143 = lshr i64 %and1142, 13
  %arrayidx1144 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %348 = load i32, i32* %arrayidx1144, align 4
  %conv1145 = zext i32 %348 to i64
  %shl1146 = shl i64 %conv1145, 19
  %or1147 = or i64 %shr1143, %shl1146
  %and1148 = and i64 %or1147, 4294967295
  %xor1149 = xor i64 %and1139, %and1148
  %arrayidx1150 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %349 = load i32, i32* %arrayidx1150, align 4
  %conv1151 = zext i32 %349 to i64
  %and1152 = and i64 %conv1151, 4294967295
  %shr1153 = lshr i64 %and1152, 22
  %arrayidx1154 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %350 = load i32, i32* %arrayidx1154, align 4
  %conv1155 = zext i32 %350 to i64
  %shl1156 = shl i64 %conv1155, 10
  %or1157 = or i64 %shr1153, %shl1156
  %and1158 = and i64 %or1157, 4294967295
  %xor1159 = xor i64 %xor1149, %and1158
  %arrayidx1160 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %351 = load i32, i32* %arrayidx1160, align 4
  %arrayidx1161 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %352 = load i32, i32* %arrayidx1161, align 4
  %or1162 = or i32 %351, %352
  %arrayidx1163 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %353 = load i32, i32* %arrayidx1163, align 4
  %and1164 = and i32 %or1162, %353
  %arrayidx1165 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %354 = load i32, i32* %arrayidx1165, align 4
  %arrayidx1166 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %355 = load i32, i32* %arrayidx1166, align 4
  %and1167 = and i32 %354, %355
  %or1168 = or i32 %and1164, %and1167
  %conv1169 = zext i32 %or1168 to i64
  %add1170 = add i64 %xor1159, %conv1169
  %conv1171 = trunc i64 %add1170 to i32
  store i32 %conv1171, i32* %t1, align 4
  %356 = load i32, i32* %t0, align 4
  %arrayidx1172 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %357 = load i32, i32* %arrayidx1172, align 4
  %add1173 = add i32 %357, %356
  store i32 %add1173, i32* %arrayidx1172, align 4
  %358 = load i32, i32* %t0, align 4
  %359 = load i32, i32* %t1, align 4
  %add1174 = add i32 %358, %359
  %arrayidx1175 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  store i32 %add1174, i32* %arrayidx1175, align 4
  %arrayidx1176 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %360 = load i32, i32* %arrayidx1176, align 4
  %conv1177 = zext i32 %360 to i64
  %arrayidx1178 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %361 = load i32, i32* %arrayidx1178, align 4
  %conv1179 = zext i32 %361 to i64
  %and1180 = and i64 %conv1179, 4294967295
  %shr1181 = lshr i64 %and1180, 6
  %arrayidx1182 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %362 = load i32, i32* %arrayidx1182, align 4
  %conv1183 = zext i32 %362 to i64
  %shl1184 = shl i64 %conv1183, 26
  %or1185 = or i64 %shr1181, %shl1184
  %and1186 = and i64 %or1185, 4294967295
  %arrayidx1187 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %363 = load i32, i32* %arrayidx1187, align 4
  %conv1188 = zext i32 %363 to i64
  %and1189 = and i64 %conv1188, 4294967295
  %shr1190 = lshr i64 %and1189, 11
  %arrayidx1191 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %364 = load i32, i32* %arrayidx1191, align 4
  %conv1192 = zext i32 %364 to i64
  %shl1193 = shl i64 %conv1192, 21
  %or1194 = or i64 %shr1190, %shl1193
  %and1195 = and i64 %or1194, 4294967295
  %xor1196 = xor i64 %and1186, %and1195
  %arrayidx1197 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %365 = load i32, i32* %arrayidx1197, align 4
  %conv1198 = zext i32 %365 to i64
  %and1199 = and i64 %conv1198, 4294967295
  %shr1200 = lshr i64 %and1199, 25
  %arrayidx1201 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %366 = load i32, i32* %arrayidx1201, align 4
  %conv1202 = zext i32 %366 to i64
  %shl1203 = shl i64 %conv1202, 7
  %or1204 = or i64 %shr1200, %shl1203
  %and1205 = and i64 %or1204, 4294967295
  %xor1206 = xor i64 %xor1196, %and1205
  %add1207 = add i64 %conv1177, %xor1206
  %arrayidx1208 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %367 = load i32, i32* %arrayidx1208, align 4
  %arrayidx1209 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %368 = load i32, i32* %arrayidx1209, align 4
  %arrayidx1210 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %369 = load i32, i32* %arrayidx1210, align 4
  %arrayidx1211 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %370 = load i32, i32* %arrayidx1211, align 4
  %xor1212 = xor i32 %369, %370
  %and1213 = and i32 %368, %xor1212
  %xor1214 = xor i32 %367, %and1213
  %conv1215 = zext i32 %xor1214 to i64
  %add1216 = add i64 %add1207, %conv1215
  %add1217 = add i64 %add1216, 1925078388
  %arrayidx1218 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 12
  %371 = load i32, i32* %arrayidx1218, align 4
  %conv1219 = zext i32 %371 to i64
  %add1220 = add i64 %add1217, %conv1219
  %conv1221 = trunc i64 %add1220 to i32
  store i32 %conv1221, i32* %t0, align 4
  %arrayidx1222 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %372 = load i32, i32* %arrayidx1222, align 4
  %conv1223 = zext i32 %372 to i64
  %and1224 = and i64 %conv1223, 4294967295
  %shr1225 = lshr i64 %and1224, 2
  %arrayidx1226 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %373 = load i32, i32* %arrayidx1226, align 4
  %conv1227 = zext i32 %373 to i64
  %shl1228 = shl i64 %conv1227, 30
  %or1229 = or i64 %shr1225, %shl1228
  %and1230 = and i64 %or1229, 4294967295
  %arrayidx1231 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %374 = load i32, i32* %arrayidx1231, align 4
  %conv1232 = zext i32 %374 to i64
  %and1233 = and i64 %conv1232, 4294967295
  %shr1234 = lshr i64 %and1233, 13
  %arrayidx1235 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %375 = load i32, i32* %arrayidx1235, align 4
  %conv1236 = zext i32 %375 to i64
  %shl1237 = shl i64 %conv1236, 19
  %or1238 = or i64 %shr1234, %shl1237
  %and1239 = and i64 %or1238, 4294967295
  %xor1240 = xor i64 %and1230, %and1239
  %arrayidx1241 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %376 = load i32, i32* %arrayidx1241, align 4
  %conv1242 = zext i32 %376 to i64
  %and1243 = and i64 %conv1242, 4294967295
  %shr1244 = lshr i64 %and1243, 22
  %arrayidx1245 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %377 = load i32, i32* %arrayidx1245, align 4
  %conv1246 = zext i32 %377 to i64
  %shl1247 = shl i64 %conv1246, 10
  %or1248 = or i64 %shr1244, %shl1247
  %and1249 = and i64 %or1248, 4294967295
  %xor1250 = xor i64 %xor1240, %and1249
  %arrayidx1251 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %378 = load i32, i32* %arrayidx1251, align 4
  %arrayidx1252 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %379 = load i32, i32* %arrayidx1252, align 4
  %or1253 = or i32 %378, %379
  %arrayidx1254 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %380 = load i32, i32* %arrayidx1254, align 4
  %and1255 = and i32 %or1253, %380
  %arrayidx1256 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %381 = load i32, i32* %arrayidx1256, align 4
  %arrayidx1257 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %382 = load i32, i32* %arrayidx1257, align 4
  %and1258 = and i32 %381, %382
  %or1259 = or i32 %and1255, %and1258
  %conv1260 = zext i32 %or1259 to i64
  %add1261 = add i64 %xor1250, %conv1260
  %conv1262 = trunc i64 %add1261 to i32
  store i32 %conv1262, i32* %t1, align 4
  %383 = load i32, i32* %t0, align 4
  %arrayidx1263 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %384 = load i32, i32* %arrayidx1263, align 4
  %add1264 = add i32 %384, %383
  store i32 %add1264, i32* %arrayidx1263, align 4
  %385 = load i32, i32* %t0, align 4
  %386 = load i32, i32* %t1, align 4
  %add1265 = add i32 %385, %386
  %arrayidx1266 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  store i32 %add1265, i32* %arrayidx1266, align 4
  %arrayidx1267 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %387 = load i32, i32* %arrayidx1267, align 4
  %conv1268 = zext i32 %387 to i64
  %arrayidx1269 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %388 = load i32, i32* %arrayidx1269, align 4
  %conv1270 = zext i32 %388 to i64
  %and1271 = and i64 %conv1270, 4294967295
  %shr1272 = lshr i64 %and1271, 6
  %arrayidx1273 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %389 = load i32, i32* %arrayidx1273, align 4
  %conv1274 = zext i32 %389 to i64
  %shl1275 = shl i64 %conv1274, 26
  %or1276 = or i64 %shr1272, %shl1275
  %and1277 = and i64 %or1276, 4294967295
  %arrayidx1278 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %390 = load i32, i32* %arrayidx1278, align 4
  %conv1279 = zext i32 %390 to i64
  %and1280 = and i64 %conv1279, 4294967295
  %shr1281 = lshr i64 %and1280, 11
  %arrayidx1282 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %391 = load i32, i32* %arrayidx1282, align 4
  %conv1283 = zext i32 %391 to i64
  %shl1284 = shl i64 %conv1283, 21
  %or1285 = or i64 %shr1281, %shl1284
  %and1286 = and i64 %or1285, 4294967295
  %xor1287 = xor i64 %and1277, %and1286
  %arrayidx1288 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %392 = load i32, i32* %arrayidx1288, align 4
  %conv1289 = zext i32 %392 to i64
  %and1290 = and i64 %conv1289, 4294967295
  %shr1291 = lshr i64 %and1290, 25
  %arrayidx1292 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %393 = load i32, i32* %arrayidx1292, align 4
  %conv1293 = zext i32 %393 to i64
  %shl1294 = shl i64 %conv1293, 7
  %or1295 = or i64 %shr1291, %shl1294
  %and1296 = and i64 %or1295, 4294967295
  %xor1297 = xor i64 %xor1287, %and1296
  %add1298 = add i64 %conv1268, %xor1297
  %arrayidx1299 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %394 = load i32, i32* %arrayidx1299, align 4
  %arrayidx1300 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %395 = load i32, i32* %arrayidx1300, align 4
  %arrayidx1301 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %396 = load i32, i32* %arrayidx1301, align 4
  %arrayidx1302 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %397 = load i32, i32* %arrayidx1302, align 4
  %xor1303 = xor i32 %396, %397
  %and1304 = and i32 %395, %xor1303
  %xor1305 = xor i32 %394, %and1304
  %conv1306 = zext i32 %xor1305 to i64
  %add1307 = add i64 %add1298, %conv1306
  %add1308 = add i64 %add1307, 2162078206
  %arrayidx1309 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 13
  %398 = load i32, i32* %arrayidx1309, align 4
  %conv1310 = zext i32 %398 to i64
  %add1311 = add i64 %add1308, %conv1310
  %conv1312 = trunc i64 %add1311 to i32
  store i32 %conv1312, i32* %t0, align 4
  %arrayidx1313 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %399 = load i32, i32* %arrayidx1313, align 4
  %conv1314 = zext i32 %399 to i64
  %and1315 = and i64 %conv1314, 4294967295
  %shr1316 = lshr i64 %and1315, 2
  %arrayidx1317 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %400 = load i32, i32* %arrayidx1317, align 4
  %conv1318 = zext i32 %400 to i64
  %shl1319 = shl i64 %conv1318, 30
  %or1320 = or i64 %shr1316, %shl1319
  %and1321 = and i64 %or1320, 4294967295
  %arrayidx1322 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %401 = load i32, i32* %arrayidx1322, align 4
  %conv1323 = zext i32 %401 to i64
  %and1324 = and i64 %conv1323, 4294967295
  %shr1325 = lshr i64 %and1324, 13
  %arrayidx1326 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %402 = load i32, i32* %arrayidx1326, align 4
  %conv1327 = zext i32 %402 to i64
  %shl1328 = shl i64 %conv1327, 19
  %or1329 = or i64 %shr1325, %shl1328
  %and1330 = and i64 %or1329, 4294967295
  %xor1331 = xor i64 %and1321, %and1330
  %arrayidx1332 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %403 = load i32, i32* %arrayidx1332, align 4
  %conv1333 = zext i32 %403 to i64
  %and1334 = and i64 %conv1333, 4294967295
  %shr1335 = lshr i64 %and1334, 22
  %arrayidx1336 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %404 = load i32, i32* %arrayidx1336, align 4
  %conv1337 = zext i32 %404 to i64
  %shl1338 = shl i64 %conv1337, 10
  %or1339 = or i64 %shr1335, %shl1338
  %and1340 = and i64 %or1339, 4294967295
  %xor1341 = xor i64 %xor1331, %and1340
  %arrayidx1342 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %405 = load i32, i32* %arrayidx1342, align 4
  %arrayidx1343 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %406 = load i32, i32* %arrayidx1343, align 4
  %or1344 = or i32 %405, %406
  %arrayidx1345 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %407 = load i32, i32* %arrayidx1345, align 4
  %and1346 = and i32 %or1344, %407
  %arrayidx1347 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %408 = load i32, i32* %arrayidx1347, align 4
  %arrayidx1348 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %409 = load i32, i32* %arrayidx1348, align 4
  %and1349 = and i32 %408, %409
  %or1350 = or i32 %and1346, %and1349
  %conv1351 = zext i32 %or1350 to i64
  %add1352 = add i64 %xor1341, %conv1351
  %conv1353 = trunc i64 %add1352 to i32
  store i32 %conv1353, i32* %t1, align 4
  %410 = load i32, i32* %t0, align 4
  %arrayidx1354 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %411 = load i32, i32* %arrayidx1354, align 4
  %add1355 = add i32 %411, %410
  store i32 %add1355, i32* %arrayidx1354, align 4
  %412 = load i32, i32* %t0, align 4
  %413 = load i32, i32* %t1, align 4
  %add1356 = add i32 %412, %413
  %arrayidx1357 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  store i32 %add1356, i32* %arrayidx1357, align 4
  %arrayidx1358 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %414 = load i32, i32* %arrayidx1358, align 4
  %conv1359 = zext i32 %414 to i64
  %arrayidx1360 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %415 = load i32, i32* %arrayidx1360, align 4
  %conv1361 = zext i32 %415 to i64
  %and1362 = and i64 %conv1361, 4294967295
  %shr1363 = lshr i64 %and1362, 6
  %arrayidx1364 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %416 = load i32, i32* %arrayidx1364, align 4
  %conv1365 = zext i32 %416 to i64
  %shl1366 = shl i64 %conv1365, 26
  %or1367 = or i64 %shr1363, %shl1366
  %and1368 = and i64 %or1367, 4294967295
  %arrayidx1369 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %417 = load i32, i32* %arrayidx1369, align 4
  %conv1370 = zext i32 %417 to i64
  %and1371 = and i64 %conv1370, 4294967295
  %shr1372 = lshr i64 %and1371, 11
  %arrayidx1373 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %418 = load i32, i32* %arrayidx1373, align 4
  %conv1374 = zext i32 %418 to i64
  %shl1375 = shl i64 %conv1374, 21
  %or1376 = or i64 %shr1372, %shl1375
  %and1377 = and i64 %or1376, 4294967295
  %xor1378 = xor i64 %and1368, %and1377
  %arrayidx1379 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %419 = load i32, i32* %arrayidx1379, align 4
  %conv1380 = zext i32 %419 to i64
  %and1381 = and i64 %conv1380, 4294967295
  %shr1382 = lshr i64 %and1381, 25
  %arrayidx1383 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %420 = load i32, i32* %arrayidx1383, align 4
  %conv1384 = zext i32 %420 to i64
  %shl1385 = shl i64 %conv1384, 7
  %or1386 = or i64 %shr1382, %shl1385
  %and1387 = and i64 %or1386, 4294967295
  %xor1388 = xor i64 %xor1378, %and1387
  %add1389 = add i64 %conv1359, %xor1388
  %arrayidx1390 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %421 = load i32, i32* %arrayidx1390, align 4
  %arrayidx1391 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %422 = load i32, i32* %arrayidx1391, align 4
  %arrayidx1392 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %423 = load i32, i32* %arrayidx1392, align 4
  %arrayidx1393 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %424 = load i32, i32* %arrayidx1393, align 4
  %xor1394 = xor i32 %423, %424
  %and1395 = and i32 %422, %xor1394
  %xor1396 = xor i32 %421, %and1395
  %conv1397 = zext i32 %xor1396 to i64
  %add1398 = add i64 %add1389, %conv1397
  %add1399 = add i64 %add1398, 2614888103
  %arrayidx1400 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 14
  %425 = load i32, i32* %arrayidx1400, align 4
  %conv1401 = zext i32 %425 to i64
  %add1402 = add i64 %add1399, %conv1401
  %conv1403 = trunc i64 %add1402 to i32
  store i32 %conv1403, i32* %t0, align 4
  %arrayidx1404 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %426 = load i32, i32* %arrayidx1404, align 4
  %conv1405 = zext i32 %426 to i64
  %and1406 = and i64 %conv1405, 4294967295
  %shr1407 = lshr i64 %and1406, 2
  %arrayidx1408 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %427 = load i32, i32* %arrayidx1408, align 4
  %conv1409 = zext i32 %427 to i64
  %shl1410 = shl i64 %conv1409, 30
  %or1411 = or i64 %shr1407, %shl1410
  %and1412 = and i64 %or1411, 4294967295
  %arrayidx1413 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %428 = load i32, i32* %arrayidx1413, align 4
  %conv1414 = zext i32 %428 to i64
  %and1415 = and i64 %conv1414, 4294967295
  %shr1416 = lshr i64 %and1415, 13
  %arrayidx1417 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %429 = load i32, i32* %arrayidx1417, align 4
  %conv1418 = zext i32 %429 to i64
  %shl1419 = shl i64 %conv1418, 19
  %or1420 = or i64 %shr1416, %shl1419
  %and1421 = and i64 %or1420, 4294967295
  %xor1422 = xor i64 %and1412, %and1421
  %arrayidx1423 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %430 = load i32, i32* %arrayidx1423, align 4
  %conv1424 = zext i32 %430 to i64
  %and1425 = and i64 %conv1424, 4294967295
  %shr1426 = lshr i64 %and1425, 22
  %arrayidx1427 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %431 = load i32, i32* %arrayidx1427, align 4
  %conv1428 = zext i32 %431 to i64
  %shl1429 = shl i64 %conv1428, 10
  %or1430 = or i64 %shr1426, %shl1429
  %and1431 = and i64 %or1430, 4294967295
  %xor1432 = xor i64 %xor1422, %and1431
  %arrayidx1433 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %432 = load i32, i32* %arrayidx1433, align 4
  %arrayidx1434 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %433 = load i32, i32* %arrayidx1434, align 4
  %or1435 = or i32 %432, %433
  %arrayidx1436 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %434 = load i32, i32* %arrayidx1436, align 4
  %and1437 = and i32 %or1435, %434
  %arrayidx1438 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %435 = load i32, i32* %arrayidx1438, align 4
  %arrayidx1439 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %436 = load i32, i32* %arrayidx1439, align 4
  %and1440 = and i32 %435, %436
  %or1441 = or i32 %and1437, %and1440
  %conv1442 = zext i32 %or1441 to i64
  %add1443 = add i64 %xor1432, %conv1442
  %conv1444 = trunc i64 %add1443 to i32
  store i32 %conv1444, i32* %t1, align 4
  %437 = load i32, i32* %t0, align 4
  %arrayidx1445 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %438 = load i32, i32* %arrayidx1445, align 4
  %add1446 = add i32 %438, %437
  store i32 %add1446, i32* %arrayidx1445, align 4
  %439 = load i32, i32* %t0, align 4
  %440 = load i32, i32* %t1, align 4
  %add1447 = add i32 %439, %440
  %arrayidx1448 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  store i32 %add1447, i32* %arrayidx1448, align 4
  %arrayidx1449 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %441 = load i32, i32* %arrayidx1449, align 4
  %conv1450 = zext i32 %441 to i64
  %arrayidx1451 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %442 = load i32, i32* %arrayidx1451, align 4
  %conv1452 = zext i32 %442 to i64
  %and1453 = and i64 %conv1452, 4294967295
  %shr1454 = lshr i64 %and1453, 6
  %arrayidx1455 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %443 = load i32, i32* %arrayidx1455, align 4
  %conv1456 = zext i32 %443 to i64
  %shl1457 = shl i64 %conv1456, 26
  %or1458 = or i64 %shr1454, %shl1457
  %and1459 = and i64 %or1458, 4294967295
  %arrayidx1460 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %444 = load i32, i32* %arrayidx1460, align 4
  %conv1461 = zext i32 %444 to i64
  %and1462 = and i64 %conv1461, 4294967295
  %shr1463 = lshr i64 %and1462, 11
  %arrayidx1464 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %445 = load i32, i32* %arrayidx1464, align 4
  %conv1465 = zext i32 %445 to i64
  %shl1466 = shl i64 %conv1465, 21
  %or1467 = or i64 %shr1463, %shl1466
  %and1468 = and i64 %or1467, 4294967295
  %xor1469 = xor i64 %and1459, %and1468
  %arrayidx1470 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %446 = load i32, i32* %arrayidx1470, align 4
  %conv1471 = zext i32 %446 to i64
  %and1472 = and i64 %conv1471, 4294967295
  %shr1473 = lshr i64 %and1472, 25
  %arrayidx1474 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %447 = load i32, i32* %arrayidx1474, align 4
  %conv1475 = zext i32 %447 to i64
  %shl1476 = shl i64 %conv1475, 7
  %or1477 = or i64 %shr1473, %shl1476
  %and1478 = and i64 %or1477, 4294967295
  %xor1479 = xor i64 %xor1469, %and1478
  %add1480 = add i64 %conv1450, %xor1479
  %arrayidx1481 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %448 = load i32, i32* %arrayidx1481, align 4
  %arrayidx1482 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %449 = load i32, i32* %arrayidx1482, align 4
  %arrayidx1483 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %450 = load i32, i32* %arrayidx1483, align 4
  %arrayidx1484 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %451 = load i32, i32* %arrayidx1484, align 4
  %xor1485 = xor i32 %450, %451
  %and1486 = and i32 %449, %xor1485
  %xor1487 = xor i32 %448, %and1486
  %conv1488 = zext i32 %xor1487 to i64
  %add1489 = add i64 %add1480, %conv1488
  %add1490 = add i64 %add1489, 3248222580
  %arrayidx1491 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 15
  %452 = load i32, i32* %arrayidx1491, align 4
  %conv1492 = zext i32 %452 to i64
  %add1493 = add i64 %add1490, %conv1492
  %conv1494 = trunc i64 %add1493 to i32
  store i32 %conv1494, i32* %t0, align 4
  %arrayidx1495 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %453 = load i32, i32* %arrayidx1495, align 4
  %conv1496 = zext i32 %453 to i64
  %and1497 = and i64 %conv1496, 4294967295
  %shr1498 = lshr i64 %and1497, 2
  %arrayidx1499 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %454 = load i32, i32* %arrayidx1499, align 4
  %conv1500 = zext i32 %454 to i64
  %shl1501 = shl i64 %conv1500, 30
  %or1502 = or i64 %shr1498, %shl1501
  %and1503 = and i64 %or1502, 4294967295
  %arrayidx1504 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %455 = load i32, i32* %arrayidx1504, align 4
  %conv1505 = zext i32 %455 to i64
  %and1506 = and i64 %conv1505, 4294967295
  %shr1507 = lshr i64 %and1506, 13
  %arrayidx1508 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %456 = load i32, i32* %arrayidx1508, align 4
  %conv1509 = zext i32 %456 to i64
  %shl1510 = shl i64 %conv1509, 19
  %or1511 = or i64 %shr1507, %shl1510
  %and1512 = and i64 %or1511, 4294967295
  %xor1513 = xor i64 %and1503, %and1512
  %arrayidx1514 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %457 = load i32, i32* %arrayidx1514, align 4
  %conv1515 = zext i32 %457 to i64
  %and1516 = and i64 %conv1515, 4294967295
  %shr1517 = lshr i64 %and1516, 22
  %arrayidx1518 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %458 = load i32, i32* %arrayidx1518, align 4
  %conv1519 = zext i32 %458 to i64
  %shl1520 = shl i64 %conv1519, 10
  %or1521 = or i64 %shr1517, %shl1520
  %and1522 = and i64 %or1521, 4294967295
  %xor1523 = xor i64 %xor1513, %and1522
  %arrayidx1524 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %459 = load i32, i32* %arrayidx1524, align 4
  %arrayidx1525 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %460 = load i32, i32* %arrayidx1525, align 4
  %or1526 = or i32 %459, %460
  %arrayidx1527 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %461 = load i32, i32* %arrayidx1527, align 4
  %and1528 = and i32 %or1526, %461
  %arrayidx1529 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %462 = load i32, i32* %arrayidx1529, align 4
  %arrayidx1530 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %463 = load i32, i32* %arrayidx1530, align 4
  %and1531 = and i32 %462, %463
  %or1532 = or i32 %and1528, %and1531
  %conv1533 = zext i32 %or1532 to i64
  %add1534 = add i64 %xor1523, %conv1533
  %conv1535 = trunc i64 %add1534 to i32
  store i32 %conv1535, i32* %t1, align 4
  %464 = load i32, i32* %t0, align 4
  %arrayidx1536 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %465 = load i32, i32* %arrayidx1536, align 4
  %add1537 = add i32 %465, %464
  store i32 %add1537, i32* %arrayidx1536, align 4
  %466 = load i32, i32* %t0, align 4
  %467 = load i32, i32* %t1, align 4
  %add1538 = add i32 %466, %467
  %arrayidx1539 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  store i32 %add1538, i32* %arrayidx1539, align 4
  %arrayidx1540 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %468 = load i32, i32* %arrayidx1540, align 4
  %conv1541 = zext i32 %468 to i64
  %arrayidx1542 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %469 = load i32, i32* %arrayidx1542, align 4
  %conv1543 = zext i32 %469 to i64
  %and1544 = and i64 %conv1543, 4294967295
  %shr1545 = lshr i64 %and1544, 6
  %arrayidx1546 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %470 = load i32, i32* %arrayidx1546, align 4
  %conv1547 = zext i32 %470 to i64
  %shl1548 = shl i64 %conv1547, 26
  %or1549 = or i64 %shr1545, %shl1548
  %and1550 = and i64 %or1549, 4294967295
  %arrayidx1551 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %471 = load i32, i32* %arrayidx1551, align 4
  %conv1552 = zext i32 %471 to i64
  %and1553 = and i64 %conv1552, 4294967295
  %shr1554 = lshr i64 %and1553, 11
  %arrayidx1555 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %472 = load i32, i32* %arrayidx1555, align 4
  %conv1556 = zext i32 %472 to i64
  %shl1557 = shl i64 %conv1556, 21
  %or1558 = or i64 %shr1554, %shl1557
  %and1559 = and i64 %or1558, 4294967295
  %xor1560 = xor i64 %and1550, %and1559
  %arrayidx1561 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %473 = load i32, i32* %arrayidx1561, align 4
  %conv1562 = zext i32 %473 to i64
  %and1563 = and i64 %conv1562, 4294967295
  %shr1564 = lshr i64 %and1563, 25
  %arrayidx1565 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %474 = load i32, i32* %arrayidx1565, align 4
  %conv1566 = zext i32 %474 to i64
  %shl1567 = shl i64 %conv1566, 7
  %or1568 = or i64 %shr1564, %shl1567
  %and1569 = and i64 %or1568, 4294967295
  %xor1570 = xor i64 %xor1560, %and1569
  %add1571 = add i64 %conv1541, %xor1570
  %arrayidx1572 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %475 = load i32, i32* %arrayidx1572, align 4
  %arrayidx1573 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %476 = load i32, i32* %arrayidx1573, align 4
  %arrayidx1574 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %477 = load i32, i32* %arrayidx1574, align 4
  %arrayidx1575 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %478 = load i32, i32* %arrayidx1575, align 4
  %xor1576 = xor i32 %477, %478
  %and1577 = and i32 %476, %xor1576
  %xor1578 = xor i32 %475, %and1577
  %conv1579 = zext i32 %xor1578 to i64
  %add1580 = add i64 %add1571, %conv1579
  %add1581 = add i64 %add1580, 3835390401
  %arrayidx1582 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 16
  %479 = load i32, i32* %arrayidx1582, align 4
  %conv1583 = zext i32 %479 to i64
  %add1584 = add i64 %add1581, %conv1583
  %conv1585 = trunc i64 %add1584 to i32
  store i32 %conv1585, i32* %t0, align 4
  %arrayidx1586 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %480 = load i32, i32* %arrayidx1586, align 4
  %conv1587 = zext i32 %480 to i64
  %and1588 = and i64 %conv1587, 4294967295
  %shr1589 = lshr i64 %and1588, 2
  %arrayidx1590 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %481 = load i32, i32* %arrayidx1590, align 4
  %conv1591 = zext i32 %481 to i64
  %shl1592 = shl i64 %conv1591, 30
  %or1593 = or i64 %shr1589, %shl1592
  %and1594 = and i64 %or1593, 4294967295
  %arrayidx1595 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %482 = load i32, i32* %arrayidx1595, align 4
  %conv1596 = zext i32 %482 to i64
  %and1597 = and i64 %conv1596, 4294967295
  %shr1598 = lshr i64 %and1597, 13
  %arrayidx1599 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %483 = load i32, i32* %arrayidx1599, align 4
  %conv1600 = zext i32 %483 to i64
  %shl1601 = shl i64 %conv1600, 19
  %or1602 = or i64 %shr1598, %shl1601
  %and1603 = and i64 %or1602, 4294967295
  %xor1604 = xor i64 %and1594, %and1603
  %arrayidx1605 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %484 = load i32, i32* %arrayidx1605, align 4
  %conv1606 = zext i32 %484 to i64
  %and1607 = and i64 %conv1606, 4294967295
  %shr1608 = lshr i64 %and1607, 22
  %arrayidx1609 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %485 = load i32, i32* %arrayidx1609, align 4
  %conv1610 = zext i32 %485 to i64
  %shl1611 = shl i64 %conv1610, 10
  %or1612 = or i64 %shr1608, %shl1611
  %and1613 = and i64 %or1612, 4294967295
  %xor1614 = xor i64 %xor1604, %and1613
  %arrayidx1615 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %486 = load i32, i32* %arrayidx1615, align 4
  %arrayidx1616 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %487 = load i32, i32* %arrayidx1616, align 4
  %or1617 = or i32 %486, %487
  %arrayidx1618 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %488 = load i32, i32* %arrayidx1618, align 4
  %and1619 = and i32 %or1617, %488
  %arrayidx1620 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %489 = load i32, i32* %arrayidx1620, align 4
  %arrayidx1621 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %490 = load i32, i32* %arrayidx1621, align 4
  %and1622 = and i32 %489, %490
  %or1623 = or i32 %and1619, %and1622
  %conv1624 = zext i32 %or1623 to i64
  %add1625 = add i64 %xor1614, %conv1624
  %conv1626 = trunc i64 %add1625 to i32
  store i32 %conv1626, i32* %t1, align 4
  %491 = load i32, i32* %t0, align 4
  %arrayidx1627 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %492 = load i32, i32* %arrayidx1627, align 4
  %add1628 = add i32 %492, %491
  store i32 %add1628, i32* %arrayidx1627, align 4
  %493 = load i32, i32* %t0, align 4
  %494 = load i32, i32* %t1, align 4
  %add1629 = add i32 %493, %494
  %arrayidx1630 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  store i32 %add1629, i32* %arrayidx1630, align 4
  %arrayidx1631 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %495 = load i32, i32* %arrayidx1631, align 4
  %conv1632 = zext i32 %495 to i64
  %arrayidx1633 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %496 = load i32, i32* %arrayidx1633, align 4
  %conv1634 = zext i32 %496 to i64
  %and1635 = and i64 %conv1634, 4294967295
  %shr1636 = lshr i64 %and1635, 6
  %arrayidx1637 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %497 = load i32, i32* %arrayidx1637, align 4
  %conv1638 = zext i32 %497 to i64
  %shl1639 = shl i64 %conv1638, 26
  %or1640 = or i64 %shr1636, %shl1639
  %and1641 = and i64 %or1640, 4294967295
  %arrayidx1642 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %498 = load i32, i32* %arrayidx1642, align 4
  %conv1643 = zext i32 %498 to i64
  %and1644 = and i64 %conv1643, 4294967295
  %shr1645 = lshr i64 %and1644, 11
  %arrayidx1646 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %499 = load i32, i32* %arrayidx1646, align 4
  %conv1647 = zext i32 %499 to i64
  %shl1648 = shl i64 %conv1647, 21
  %or1649 = or i64 %shr1645, %shl1648
  %and1650 = and i64 %or1649, 4294967295
  %xor1651 = xor i64 %and1641, %and1650
  %arrayidx1652 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %500 = load i32, i32* %arrayidx1652, align 4
  %conv1653 = zext i32 %500 to i64
  %and1654 = and i64 %conv1653, 4294967295
  %shr1655 = lshr i64 %and1654, 25
  %arrayidx1656 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %501 = load i32, i32* %arrayidx1656, align 4
  %conv1657 = zext i32 %501 to i64
  %shl1658 = shl i64 %conv1657, 7
  %or1659 = or i64 %shr1655, %shl1658
  %and1660 = and i64 %or1659, 4294967295
  %xor1661 = xor i64 %xor1651, %and1660
  %add1662 = add i64 %conv1632, %xor1661
  %arrayidx1663 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %502 = load i32, i32* %arrayidx1663, align 4
  %arrayidx1664 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %503 = load i32, i32* %arrayidx1664, align 4
  %arrayidx1665 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %504 = load i32, i32* %arrayidx1665, align 4
  %arrayidx1666 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %505 = load i32, i32* %arrayidx1666, align 4
  %xor1667 = xor i32 %504, %505
  %and1668 = and i32 %503, %xor1667
  %xor1669 = xor i32 %502, %and1668
  %conv1670 = zext i32 %xor1669 to i64
  %add1671 = add i64 %add1662, %conv1670
  %add1672 = add i64 %add1671, 4022224774
  %arrayidx1673 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 17
  %506 = load i32, i32* %arrayidx1673, align 4
  %conv1674 = zext i32 %506 to i64
  %add1675 = add i64 %add1672, %conv1674
  %conv1676 = trunc i64 %add1675 to i32
  store i32 %conv1676, i32* %t0, align 4
  %arrayidx1677 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %507 = load i32, i32* %arrayidx1677, align 4
  %conv1678 = zext i32 %507 to i64
  %and1679 = and i64 %conv1678, 4294967295
  %shr1680 = lshr i64 %and1679, 2
  %arrayidx1681 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %508 = load i32, i32* %arrayidx1681, align 4
  %conv1682 = zext i32 %508 to i64
  %shl1683 = shl i64 %conv1682, 30
  %or1684 = or i64 %shr1680, %shl1683
  %and1685 = and i64 %or1684, 4294967295
  %arrayidx1686 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %509 = load i32, i32* %arrayidx1686, align 4
  %conv1687 = zext i32 %509 to i64
  %and1688 = and i64 %conv1687, 4294967295
  %shr1689 = lshr i64 %and1688, 13
  %arrayidx1690 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %510 = load i32, i32* %arrayidx1690, align 4
  %conv1691 = zext i32 %510 to i64
  %shl1692 = shl i64 %conv1691, 19
  %or1693 = or i64 %shr1689, %shl1692
  %and1694 = and i64 %or1693, 4294967295
  %xor1695 = xor i64 %and1685, %and1694
  %arrayidx1696 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %511 = load i32, i32* %arrayidx1696, align 4
  %conv1697 = zext i32 %511 to i64
  %and1698 = and i64 %conv1697, 4294967295
  %shr1699 = lshr i64 %and1698, 22
  %arrayidx1700 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %512 = load i32, i32* %arrayidx1700, align 4
  %conv1701 = zext i32 %512 to i64
  %shl1702 = shl i64 %conv1701, 10
  %or1703 = or i64 %shr1699, %shl1702
  %and1704 = and i64 %or1703, 4294967295
  %xor1705 = xor i64 %xor1695, %and1704
  %arrayidx1706 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %513 = load i32, i32* %arrayidx1706, align 4
  %arrayidx1707 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %514 = load i32, i32* %arrayidx1707, align 4
  %or1708 = or i32 %513, %514
  %arrayidx1709 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %515 = load i32, i32* %arrayidx1709, align 4
  %and1710 = and i32 %or1708, %515
  %arrayidx1711 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %516 = load i32, i32* %arrayidx1711, align 4
  %arrayidx1712 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %517 = load i32, i32* %arrayidx1712, align 4
  %and1713 = and i32 %516, %517
  %or1714 = or i32 %and1710, %and1713
  %conv1715 = zext i32 %or1714 to i64
  %add1716 = add i64 %xor1705, %conv1715
  %conv1717 = trunc i64 %add1716 to i32
  store i32 %conv1717, i32* %t1, align 4
  %518 = load i32, i32* %t0, align 4
  %arrayidx1718 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %519 = load i32, i32* %arrayidx1718, align 4
  %add1719 = add i32 %519, %518
  store i32 %add1719, i32* %arrayidx1718, align 4
  %520 = load i32, i32* %t0, align 4
  %521 = load i32, i32* %t1, align 4
  %add1720 = add i32 %520, %521
  %arrayidx1721 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  store i32 %add1720, i32* %arrayidx1721, align 4
  %arrayidx1722 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %522 = load i32, i32* %arrayidx1722, align 4
  %conv1723 = zext i32 %522 to i64
  %arrayidx1724 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %523 = load i32, i32* %arrayidx1724, align 4
  %conv1725 = zext i32 %523 to i64
  %and1726 = and i64 %conv1725, 4294967295
  %shr1727 = lshr i64 %and1726, 6
  %arrayidx1728 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %524 = load i32, i32* %arrayidx1728, align 4
  %conv1729 = zext i32 %524 to i64
  %shl1730 = shl i64 %conv1729, 26
  %or1731 = or i64 %shr1727, %shl1730
  %and1732 = and i64 %or1731, 4294967295
  %arrayidx1733 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %525 = load i32, i32* %arrayidx1733, align 4
  %conv1734 = zext i32 %525 to i64
  %and1735 = and i64 %conv1734, 4294967295
  %shr1736 = lshr i64 %and1735, 11
  %arrayidx1737 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %526 = load i32, i32* %arrayidx1737, align 4
  %conv1738 = zext i32 %526 to i64
  %shl1739 = shl i64 %conv1738, 21
  %or1740 = or i64 %shr1736, %shl1739
  %and1741 = and i64 %or1740, 4294967295
  %xor1742 = xor i64 %and1732, %and1741
  %arrayidx1743 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %527 = load i32, i32* %arrayidx1743, align 4
  %conv1744 = zext i32 %527 to i64
  %and1745 = and i64 %conv1744, 4294967295
  %shr1746 = lshr i64 %and1745, 25
  %arrayidx1747 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %528 = load i32, i32* %arrayidx1747, align 4
  %conv1748 = zext i32 %528 to i64
  %shl1749 = shl i64 %conv1748, 7
  %or1750 = or i64 %shr1746, %shl1749
  %and1751 = and i64 %or1750, 4294967295
  %xor1752 = xor i64 %xor1742, %and1751
  %add1753 = add i64 %conv1723, %xor1752
  %arrayidx1754 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %529 = load i32, i32* %arrayidx1754, align 4
  %arrayidx1755 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %530 = load i32, i32* %arrayidx1755, align 4
  %arrayidx1756 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %531 = load i32, i32* %arrayidx1756, align 4
  %arrayidx1757 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %532 = load i32, i32* %arrayidx1757, align 4
  %xor1758 = xor i32 %531, %532
  %and1759 = and i32 %530, %xor1758
  %xor1760 = xor i32 %529, %and1759
  %conv1761 = zext i32 %xor1760 to i64
  %add1762 = add i64 %add1753, %conv1761
  %add1763 = add i64 %add1762, 264347078
  %arrayidx1764 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 18
  %533 = load i32, i32* %arrayidx1764, align 4
  %conv1765 = zext i32 %533 to i64
  %add1766 = add i64 %add1763, %conv1765
  %conv1767 = trunc i64 %add1766 to i32
  store i32 %conv1767, i32* %t0, align 4
  %arrayidx1768 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %534 = load i32, i32* %arrayidx1768, align 4
  %conv1769 = zext i32 %534 to i64
  %and1770 = and i64 %conv1769, 4294967295
  %shr1771 = lshr i64 %and1770, 2
  %arrayidx1772 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %535 = load i32, i32* %arrayidx1772, align 4
  %conv1773 = zext i32 %535 to i64
  %shl1774 = shl i64 %conv1773, 30
  %or1775 = or i64 %shr1771, %shl1774
  %and1776 = and i64 %or1775, 4294967295
  %arrayidx1777 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %536 = load i32, i32* %arrayidx1777, align 4
  %conv1778 = zext i32 %536 to i64
  %and1779 = and i64 %conv1778, 4294967295
  %shr1780 = lshr i64 %and1779, 13
  %arrayidx1781 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %537 = load i32, i32* %arrayidx1781, align 4
  %conv1782 = zext i32 %537 to i64
  %shl1783 = shl i64 %conv1782, 19
  %or1784 = or i64 %shr1780, %shl1783
  %and1785 = and i64 %or1784, 4294967295
  %xor1786 = xor i64 %and1776, %and1785
  %arrayidx1787 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %538 = load i32, i32* %arrayidx1787, align 4
  %conv1788 = zext i32 %538 to i64
  %and1789 = and i64 %conv1788, 4294967295
  %shr1790 = lshr i64 %and1789, 22
  %arrayidx1791 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %539 = load i32, i32* %arrayidx1791, align 4
  %conv1792 = zext i32 %539 to i64
  %shl1793 = shl i64 %conv1792, 10
  %or1794 = or i64 %shr1790, %shl1793
  %and1795 = and i64 %or1794, 4294967295
  %xor1796 = xor i64 %xor1786, %and1795
  %arrayidx1797 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %540 = load i32, i32* %arrayidx1797, align 4
  %arrayidx1798 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %541 = load i32, i32* %arrayidx1798, align 4
  %or1799 = or i32 %540, %541
  %arrayidx1800 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %542 = load i32, i32* %arrayidx1800, align 4
  %and1801 = and i32 %or1799, %542
  %arrayidx1802 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %543 = load i32, i32* %arrayidx1802, align 4
  %arrayidx1803 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %544 = load i32, i32* %arrayidx1803, align 4
  %and1804 = and i32 %543, %544
  %or1805 = or i32 %and1801, %and1804
  %conv1806 = zext i32 %or1805 to i64
  %add1807 = add i64 %xor1796, %conv1806
  %conv1808 = trunc i64 %add1807 to i32
  store i32 %conv1808, i32* %t1, align 4
  %545 = load i32, i32* %t0, align 4
  %arrayidx1809 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %546 = load i32, i32* %arrayidx1809, align 4
  %add1810 = add i32 %546, %545
  store i32 %add1810, i32* %arrayidx1809, align 4
  %547 = load i32, i32* %t0, align 4
  %548 = load i32, i32* %t1, align 4
  %add1811 = add i32 %547, %548
  %arrayidx1812 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  store i32 %add1811, i32* %arrayidx1812, align 4
  %arrayidx1813 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %549 = load i32, i32* %arrayidx1813, align 4
  %conv1814 = zext i32 %549 to i64
  %arrayidx1815 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %550 = load i32, i32* %arrayidx1815, align 4
  %conv1816 = zext i32 %550 to i64
  %and1817 = and i64 %conv1816, 4294967295
  %shr1818 = lshr i64 %and1817, 6
  %arrayidx1819 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %551 = load i32, i32* %arrayidx1819, align 4
  %conv1820 = zext i32 %551 to i64
  %shl1821 = shl i64 %conv1820, 26
  %or1822 = or i64 %shr1818, %shl1821
  %and1823 = and i64 %or1822, 4294967295
  %arrayidx1824 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %552 = load i32, i32* %arrayidx1824, align 4
  %conv1825 = zext i32 %552 to i64
  %and1826 = and i64 %conv1825, 4294967295
  %shr1827 = lshr i64 %and1826, 11
  %arrayidx1828 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %553 = load i32, i32* %arrayidx1828, align 4
  %conv1829 = zext i32 %553 to i64
  %shl1830 = shl i64 %conv1829, 21
  %or1831 = or i64 %shr1827, %shl1830
  %and1832 = and i64 %or1831, 4294967295
  %xor1833 = xor i64 %and1823, %and1832
  %arrayidx1834 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %554 = load i32, i32* %arrayidx1834, align 4
  %conv1835 = zext i32 %554 to i64
  %and1836 = and i64 %conv1835, 4294967295
  %shr1837 = lshr i64 %and1836, 25
  %arrayidx1838 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %555 = load i32, i32* %arrayidx1838, align 4
  %conv1839 = zext i32 %555 to i64
  %shl1840 = shl i64 %conv1839, 7
  %or1841 = or i64 %shr1837, %shl1840
  %and1842 = and i64 %or1841, 4294967295
  %xor1843 = xor i64 %xor1833, %and1842
  %add1844 = add i64 %conv1814, %xor1843
  %arrayidx1845 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %556 = load i32, i32* %arrayidx1845, align 4
  %arrayidx1846 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %557 = load i32, i32* %arrayidx1846, align 4
  %arrayidx1847 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %558 = load i32, i32* %arrayidx1847, align 4
  %arrayidx1848 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %559 = load i32, i32* %arrayidx1848, align 4
  %xor1849 = xor i32 %558, %559
  %and1850 = and i32 %557, %xor1849
  %xor1851 = xor i32 %556, %and1850
  %conv1852 = zext i32 %xor1851 to i64
  %add1853 = add i64 %add1844, %conv1852
  %add1854 = add i64 %add1853, 604807628
  %arrayidx1855 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 19
  %560 = load i32, i32* %arrayidx1855, align 4
  %conv1856 = zext i32 %560 to i64
  %add1857 = add i64 %add1854, %conv1856
  %conv1858 = trunc i64 %add1857 to i32
  store i32 %conv1858, i32* %t0, align 4
  %arrayidx1859 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %561 = load i32, i32* %arrayidx1859, align 4
  %conv1860 = zext i32 %561 to i64
  %and1861 = and i64 %conv1860, 4294967295
  %shr1862 = lshr i64 %and1861, 2
  %arrayidx1863 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %562 = load i32, i32* %arrayidx1863, align 4
  %conv1864 = zext i32 %562 to i64
  %shl1865 = shl i64 %conv1864, 30
  %or1866 = or i64 %shr1862, %shl1865
  %and1867 = and i64 %or1866, 4294967295
  %arrayidx1868 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %563 = load i32, i32* %arrayidx1868, align 4
  %conv1869 = zext i32 %563 to i64
  %and1870 = and i64 %conv1869, 4294967295
  %shr1871 = lshr i64 %and1870, 13
  %arrayidx1872 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %564 = load i32, i32* %arrayidx1872, align 4
  %conv1873 = zext i32 %564 to i64
  %shl1874 = shl i64 %conv1873, 19
  %or1875 = or i64 %shr1871, %shl1874
  %and1876 = and i64 %or1875, 4294967295
  %xor1877 = xor i64 %and1867, %and1876
  %arrayidx1878 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %565 = load i32, i32* %arrayidx1878, align 4
  %conv1879 = zext i32 %565 to i64
  %and1880 = and i64 %conv1879, 4294967295
  %shr1881 = lshr i64 %and1880, 22
  %arrayidx1882 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %566 = load i32, i32* %arrayidx1882, align 4
  %conv1883 = zext i32 %566 to i64
  %shl1884 = shl i64 %conv1883, 10
  %or1885 = or i64 %shr1881, %shl1884
  %and1886 = and i64 %or1885, 4294967295
  %xor1887 = xor i64 %xor1877, %and1886
  %arrayidx1888 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %567 = load i32, i32* %arrayidx1888, align 4
  %arrayidx1889 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %568 = load i32, i32* %arrayidx1889, align 4
  %or1890 = or i32 %567, %568
  %arrayidx1891 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %569 = load i32, i32* %arrayidx1891, align 4
  %and1892 = and i32 %or1890, %569
  %arrayidx1893 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %570 = load i32, i32* %arrayidx1893, align 4
  %arrayidx1894 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %571 = load i32, i32* %arrayidx1894, align 4
  %and1895 = and i32 %570, %571
  %or1896 = or i32 %and1892, %and1895
  %conv1897 = zext i32 %or1896 to i64
  %add1898 = add i64 %xor1887, %conv1897
  %conv1899 = trunc i64 %add1898 to i32
  store i32 %conv1899, i32* %t1, align 4
  %572 = load i32, i32* %t0, align 4
  %arrayidx1900 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %573 = load i32, i32* %arrayidx1900, align 4
  %add1901 = add i32 %573, %572
  store i32 %add1901, i32* %arrayidx1900, align 4
  %574 = load i32, i32* %t0, align 4
  %575 = load i32, i32* %t1, align 4
  %add1902 = add i32 %574, %575
  %arrayidx1903 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  store i32 %add1902, i32* %arrayidx1903, align 4
  %arrayidx1904 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %576 = load i32, i32* %arrayidx1904, align 4
  %conv1905 = zext i32 %576 to i64
  %arrayidx1906 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %577 = load i32, i32* %arrayidx1906, align 4
  %conv1907 = zext i32 %577 to i64
  %and1908 = and i64 %conv1907, 4294967295
  %shr1909 = lshr i64 %and1908, 6
  %arrayidx1910 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %578 = load i32, i32* %arrayidx1910, align 4
  %conv1911 = zext i32 %578 to i64
  %shl1912 = shl i64 %conv1911, 26
  %or1913 = or i64 %shr1909, %shl1912
  %and1914 = and i64 %or1913, 4294967295
  %arrayidx1915 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %579 = load i32, i32* %arrayidx1915, align 4
  %conv1916 = zext i32 %579 to i64
  %and1917 = and i64 %conv1916, 4294967295
  %shr1918 = lshr i64 %and1917, 11
  %arrayidx1919 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %580 = load i32, i32* %arrayidx1919, align 4
  %conv1920 = zext i32 %580 to i64
  %shl1921 = shl i64 %conv1920, 21
  %or1922 = or i64 %shr1918, %shl1921
  %and1923 = and i64 %or1922, 4294967295
  %xor1924 = xor i64 %and1914, %and1923
  %arrayidx1925 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %581 = load i32, i32* %arrayidx1925, align 4
  %conv1926 = zext i32 %581 to i64
  %and1927 = and i64 %conv1926, 4294967295
  %shr1928 = lshr i64 %and1927, 25
  %arrayidx1929 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %582 = load i32, i32* %arrayidx1929, align 4
  %conv1930 = zext i32 %582 to i64
  %shl1931 = shl i64 %conv1930, 7
  %or1932 = or i64 %shr1928, %shl1931
  %and1933 = and i64 %or1932, 4294967295
  %xor1934 = xor i64 %xor1924, %and1933
  %add1935 = add i64 %conv1905, %xor1934
  %arrayidx1936 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %583 = load i32, i32* %arrayidx1936, align 4
  %arrayidx1937 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %584 = load i32, i32* %arrayidx1937, align 4
  %arrayidx1938 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %585 = load i32, i32* %arrayidx1938, align 4
  %arrayidx1939 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %586 = load i32, i32* %arrayidx1939, align 4
  %xor1940 = xor i32 %585, %586
  %and1941 = and i32 %584, %xor1940
  %xor1942 = xor i32 %583, %and1941
  %conv1943 = zext i32 %xor1942 to i64
  %add1944 = add i64 %add1935, %conv1943
  %add1945 = add i64 %add1944, 770255983
  %arrayidx1946 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 20
  %587 = load i32, i32* %arrayidx1946, align 4
  %conv1947 = zext i32 %587 to i64
  %add1948 = add i64 %add1945, %conv1947
  %conv1949 = trunc i64 %add1948 to i32
  store i32 %conv1949, i32* %t0, align 4
  %arrayidx1950 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %588 = load i32, i32* %arrayidx1950, align 4
  %conv1951 = zext i32 %588 to i64
  %and1952 = and i64 %conv1951, 4294967295
  %shr1953 = lshr i64 %and1952, 2
  %arrayidx1954 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %589 = load i32, i32* %arrayidx1954, align 4
  %conv1955 = zext i32 %589 to i64
  %shl1956 = shl i64 %conv1955, 30
  %or1957 = or i64 %shr1953, %shl1956
  %and1958 = and i64 %or1957, 4294967295
  %arrayidx1959 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %590 = load i32, i32* %arrayidx1959, align 4
  %conv1960 = zext i32 %590 to i64
  %and1961 = and i64 %conv1960, 4294967295
  %shr1962 = lshr i64 %and1961, 13
  %arrayidx1963 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %591 = load i32, i32* %arrayidx1963, align 4
  %conv1964 = zext i32 %591 to i64
  %shl1965 = shl i64 %conv1964, 19
  %or1966 = or i64 %shr1962, %shl1965
  %and1967 = and i64 %or1966, 4294967295
  %xor1968 = xor i64 %and1958, %and1967
  %arrayidx1969 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %592 = load i32, i32* %arrayidx1969, align 4
  %conv1970 = zext i32 %592 to i64
  %and1971 = and i64 %conv1970, 4294967295
  %shr1972 = lshr i64 %and1971, 22
  %arrayidx1973 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %593 = load i32, i32* %arrayidx1973, align 4
  %conv1974 = zext i32 %593 to i64
  %shl1975 = shl i64 %conv1974, 10
  %or1976 = or i64 %shr1972, %shl1975
  %and1977 = and i64 %or1976, 4294967295
  %xor1978 = xor i64 %xor1968, %and1977
  %arrayidx1979 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %594 = load i32, i32* %arrayidx1979, align 4
  %arrayidx1980 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %595 = load i32, i32* %arrayidx1980, align 4
  %or1981 = or i32 %594, %595
  %arrayidx1982 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %596 = load i32, i32* %arrayidx1982, align 4
  %and1983 = and i32 %or1981, %596
  %arrayidx1984 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %597 = load i32, i32* %arrayidx1984, align 4
  %arrayidx1985 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %598 = load i32, i32* %arrayidx1985, align 4
  %and1986 = and i32 %597, %598
  %or1987 = or i32 %and1983, %and1986
  %conv1988 = zext i32 %or1987 to i64
  %add1989 = add i64 %xor1978, %conv1988
  %conv1990 = trunc i64 %add1989 to i32
  store i32 %conv1990, i32* %t1, align 4
  %599 = load i32, i32* %t0, align 4
  %arrayidx1991 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %600 = load i32, i32* %arrayidx1991, align 4
  %add1992 = add i32 %600, %599
  store i32 %add1992, i32* %arrayidx1991, align 4
  %601 = load i32, i32* %t0, align 4
  %602 = load i32, i32* %t1, align 4
  %add1993 = add i32 %601, %602
  %arrayidx1994 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  store i32 %add1993, i32* %arrayidx1994, align 4
  %arrayidx1995 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %603 = load i32, i32* %arrayidx1995, align 4
  %conv1996 = zext i32 %603 to i64
  %arrayidx1997 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %604 = load i32, i32* %arrayidx1997, align 4
  %conv1998 = zext i32 %604 to i64
  %and1999 = and i64 %conv1998, 4294967295
  %shr2000 = lshr i64 %and1999, 6
  %arrayidx2001 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %605 = load i32, i32* %arrayidx2001, align 4
  %conv2002 = zext i32 %605 to i64
  %shl2003 = shl i64 %conv2002, 26
  %or2004 = or i64 %shr2000, %shl2003
  %and2005 = and i64 %or2004, 4294967295
  %arrayidx2006 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %606 = load i32, i32* %arrayidx2006, align 4
  %conv2007 = zext i32 %606 to i64
  %and2008 = and i64 %conv2007, 4294967295
  %shr2009 = lshr i64 %and2008, 11
  %arrayidx2010 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %607 = load i32, i32* %arrayidx2010, align 4
  %conv2011 = zext i32 %607 to i64
  %shl2012 = shl i64 %conv2011, 21
  %or2013 = or i64 %shr2009, %shl2012
  %and2014 = and i64 %or2013, 4294967295
  %xor2015 = xor i64 %and2005, %and2014
  %arrayidx2016 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %608 = load i32, i32* %arrayidx2016, align 4
  %conv2017 = zext i32 %608 to i64
  %and2018 = and i64 %conv2017, 4294967295
  %shr2019 = lshr i64 %and2018, 25
  %arrayidx2020 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %609 = load i32, i32* %arrayidx2020, align 4
  %conv2021 = zext i32 %609 to i64
  %shl2022 = shl i64 %conv2021, 7
  %or2023 = or i64 %shr2019, %shl2022
  %and2024 = and i64 %or2023, 4294967295
  %xor2025 = xor i64 %xor2015, %and2024
  %add2026 = add i64 %conv1996, %xor2025
  %arrayidx2027 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %610 = load i32, i32* %arrayidx2027, align 4
  %arrayidx2028 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %611 = load i32, i32* %arrayidx2028, align 4
  %arrayidx2029 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %612 = load i32, i32* %arrayidx2029, align 4
  %arrayidx2030 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %613 = load i32, i32* %arrayidx2030, align 4
  %xor2031 = xor i32 %612, %613
  %and2032 = and i32 %611, %xor2031
  %xor2033 = xor i32 %610, %and2032
  %conv2034 = zext i32 %xor2033 to i64
  %add2035 = add i64 %add2026, %conv2034
  %add2036 = add i64 %add2035, 1249150122
  %arrayidx2037 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 21
  %614 = load i32, i32* %arrayidx2037, align 4
  %conv2038 = zext i32 %614 to i64
  %add2039 = add i64 %add2036, %conv2038
  %conv2040 = trunc i64 %add2039 to i32
  store i32 %conv2040, i32* %t0, align 4
  %arrayidx2041 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %615 = load i32, i32* %arrayidx2041, align 4
  %conv2042 = zext i32 %615 to i64
  %and2043 = and i64 %conv2042, 4294967295
  %shr2044 = lshr i64 %and2043, 2
  %arrayidx2045 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %616 = load i32, i32* %arrayidx2045, align 4
  %conv2046 = zext i32 %616 to i64
  %shl2047 = shl i64 %conv2046, 30
  %or2048 = or i64 %shr2044, %shl2047
  %and2049 = and i64 %or2048, 4294967295
  %arrayidx2050 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %617 = load i32, i32* %arrayidx2050, align 4
  %conv2051 = zext i32 %617 to i64
  %and2052 = and i64 %conv2051, 4294967295
  %shr2053 = lshr i64 %and2052, 13
  %arrayidx2054 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %618 = load i32, i32* %arrayidx2054, align 4
  %conv2055 = zext i32 %618 to i64
  %shl2056 = shl i64 %conv2055, 19
  %or2057 = or i64 %shr2053, %shl2056
  %and2058 = and i64 %or2057, 4294967295
  %xor2059 = xor i64 %and2049, %and2058
  %arrayidx2060 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %619 = load i32, i32* %arrayidx2060, align 4
  %conv2061 = zext i32 %619 to i64
  %and2062 = and i64 %conv2061, 4294967295
  %shr2063 = lshr i64 %and2062, 22
  %arrayidx2064 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %620 = load i32, i32* %arrayidx2064, align 4
  %conv2065 = zext i32 %620 to i64
  %shl2066 = shl i64 %conv2065, 10
  %or2067 = or i64 %shr2063, %shl2066
  %and2068 = and i64 %or2067, 4294967295
  %xor2069 = xor i64 %xor2059, %and2068
  %arrayidx2070 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %621 = load i32, i32* %arrayidx2070, align 4
  %arrayidx2071 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %622 = load i32, i32* %arrayidx2071, align 4
  %or2072 = or i32 %621, %622
  %arrayidx2073 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %623 = load i32, i32* %arrayidx2073, align 4
  %and2074 = and i32 %or2072, %623
  %arrayidx2075 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %624 = load i32, i32* %arrayidx2075, align 4
  %arrayidx2076 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %625 = load i32, i32* %arrayidx2076, align 4
  %and2077 = and i32 %624, %625
  %or2078 = or i32 %and2074, %and2077
  %conv2079 = zext i32 %or2078 to i64
  %add2080 = add i64 %xor2069, %conv2079
  %conv2081 = trunc i64 %add2080 to i32
  store i32 %conv2081, i32* %t1, align 4
  %626 = load i32, i32* %t0, align 4
  %arrayidx2082 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %627 = load i32, i32* %arrayidx2082, align 4
  %add2083 = add i32 %627, %626
  store i32 %add2083, i32* %arrayidx2082, align 4
  %628 = load i32, i32* %t0, align 4
  %629 = load i32, i32* %t1, align 4
  %add2084 = add i32 %628, %629
  %arrayidx2085 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  store i32 %add2084, i32* %arrayidx2085, align 4
  %arrayidx2086 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %630 = load i32, i32* %arrayidx2086, align 4
  %conv2087 = zext i32 %630 to i64
  %arrayidx2088 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %631 = load i32, i32* %arrayidx2088, align 4
  %conv2089 = zext i32 %631 to i64
  %and2090 = and i64 %conv2089, 4294967295
  %shr2091 = lshr i64 %and2090, 6
  %arrayidx2092 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %632 = load i32, i32* %arrayidx2092, align 4
  %conv2093 = zext i32 %632 to i64
  %shl2094 = shl i64 %conv2093, 26
  %or2095 = or i64 %shr2091, %shl2094
  %and2096 = and i64 %or2095, 4294967295
  %arrayidx2097 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %633 = load i32, i32* %arrayidx2097, align 4
  %conv2098 = zext i32 %633 to i64
  %and2099 = and i64 %conv2098, 4294967295
  %shr2100 = lshr i64 %and2099, 11
  %arrayidx2101 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %634 = load i32, i32* %arrayidx2101, align 4
  %conv2102 = zext i32 %634 to i64
  %shl2103 = shl i64 %conv2102, 21
  %or2104 = or i64 %shr2100, %shl2103
  %and2105 = and i64 %or2104, 4294967295
  %xor2106 = xor i64 %and2096, %and2105
  %arrayidx2107 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %635 = load i32, i32* %arrayidx2107, align 4
  %conv2108 = zext i32 %635 to i64
  %and2109 = and i64 %conv2108, 4294967295
  %shr2110 = lshr i64 %and2109, 25
  %arrayidx2111 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %636 = load i32, i32* %arrayidx2111, align 4
  %conv2112 = zext i32 %636 to i64
  %shl2113 = shl i64 %conv2112, 7
  %or2114 = or i64 %shr2110, %shl2113
  %and2115 = and i64 %or2114, 4294967295
  %xor2116 = xor i64 %xor2106, %and2115
  %add2117 = add i64 %conv2087, %xor2116
  %arrayidx2118 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %637 = load i32, i32* %arrayidx2118, align 4
  %arrayidx2119 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %638 = load i32, i32* %arrayidx2119, align 4
  %arrayidx2120 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %639 = load i32, i32* %arrayidx2120, align 4
  %arrayidx2121 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %640 = load i32, i32* %arrayidx2121, align 4
  %xor2122 = xor i32 %639, %640
  %and2123 = and i32 %638, %xor2122
  %xor2124 = xor i32 %637, %and2123
  %conv2125 = zext i32 %xor2124 to i64
  %add2126 = add i64 %add2117, %conv2125
  %add2127 = add i64 %add2126, 1555081692
  %arrayidx2128 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 22
  %641 = load i32, i32* %arrayidx2128, align 4
  %conv2129 = zext i32 %641 to i64
  %add2130 = add i64 %add2127, %conv2129
  %conv2131 = trunc i64 %add2130 to i32
  store i32 %conv2131, i32* %t0, align 4
  %arrayidx2132 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %642 = load i32, i32* %arrayidx2132, align 4
  %conv2133 = zext i32 %642 to i64
  %and2134 = and i64 %conv2133, 4294967295
  %shr2135 = lshr i64 %and2134, 2
  %arrayidx2136 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %643 = load i32, i32* %arrayidx2136, align 4
  %conv2137 = zext i32 %643 to i64
  %shl2138 = shl i64 %conv2137, 30
  %or2139 = or i64 %shr2135, %shl2138
  %and2140 = and i64 %or2139, 4294967295
  %arrayidx2141 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %644 = load i32, i32* %arrayidx2141, align 4
  %conv2142 = zext i32 %644 to i64
  %and2143 = and i64 %conv2142, 4294967295
  %shr2144 = lshr i64 %and2143, 13
  %arrayidx2145 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %645 = load i32, i32* %arrayidx2145, align 4
  %conv2146 = zext i32 %645 to i64
  %shl2147 = shl i64 %conv2146, 19
  %or2148 = or i64 %shr2144, %shl2147
  %and2149 = and i64 %or2148, 4294967295
  %xor2150 = xor i64 %and2140, %and2149
  %arrayidx2151 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %646 = load i32, i32* %arrayidx2151, align 4
  %conv2152 = zext i32 %646 to i64
  %and2153 = and i64 %conv2152, 4294967295
  %shr2154 = lshr i64 %and2153, 22
  %arrayidx2155 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %647 = load i32, i32* %arrayidx2155, align 4
  %conv2156 = zext i32 %647 to i64
  %shl2157 = shl i64 %conv2156, 10
  %or2158 = or i64 %shr2154, %shl2157
  %and2159 = and i64 %or2158, 4294967295
  %xor2160 = xor i64 %xor2150, %and2159
  %arrayidx2161 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %648 = load i32, i32* %arrayidx2161, align 4
  %arrayidx2162 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %649 = load i32, i32* %arrayidx2162, align 4
  %or2163 = or i32 %648, %649
  %arrayidx2164 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %650 = load i32, i32* %arrayidx2164, align 4
  %and2165 = and i32 %or2163, %650
  %arrayidx2166 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %651 = load i32, i32* %arrayidx2166, align 4
  %arrayidx2167 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %652 = load i32, i32* %arrayidx2167, align 4
  %and2168 = and i32 %651, %652
  %or2169 = or i32 %and2165, %and2168
  %conv2170 = zext i32 %or2169 to i64
  %add2171 = add i64 %xor2160, %conv2170
  %conv2172 = trunc i64 %add2171 to i32
  store i32 %conv2172, i32* %t1, align 4
  %653 = load i32, i32* %t0, align 4
  %arrayidx2173 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %654 = load i32, i32* %arrayidx2173, align 4
  %add2174 = add i32 %654, %653
  store i32 %add2174, i32* %arrayidx2173, align 4
  %655 = load i32, i32* %t0, align 4
  %656 = load i32, i32* %t1, align 4
  %add2175 = add i32 %655, %656
  %arrayidx2176 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  store i32 %add2175, i32* %arrayidx2176, align 4
  %arrayidx2177 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %657 = load i32, i32* %arrayidx2177, align 4
  %conv2178 = zext i32 %657 to i64
  %arrayidx2179 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %658 = load i32, i32* %arrayidx2179, align 4
  %conv2180 = zext i32 %658 to i64
  %and2181 = and i64 %conv2180, 4294967295
  %shr2182 = lshr i64 %and2181, 6
  %arrayidx2183 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %659 = load i32, i32* %arrayidx2183, align 4
  %conv2184 = zext i32 %659 to i64
  %shl2185 = shl i64 %conv2184, 26
  %or2186 = or i64 %shr2182, %shl2185
  %and2187 = and i64 %or2186, 4294967295
  %arrayidx2188 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %660 = load i32, i32* %arrayidx2188, align 4
  %conv2189 = zext i32 %660 to i64
  %and2190 = and i64 %conv2189, 4294967295
  %shr2191 = lshr i64 %and2190, 11
  %arrayidx2192 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %661 = load i32, i32* %arrayidx2192, align 4
  %conv2193 = zext i32 %661 to i64
  %shl2194 = shl i64 %conv2193, 21
  %or2195 = or i64 %shr2191, %shl2194
  %and2196 = and i64 %or2195, 4294967295
  %xor2197 = xor i64 %and2187, %and2196
  %arrayidx2198 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %662 = load i32, i32* %arrayidx2198, align 4
  %conv2199 = zext i32 %662 to i64
  %and2200 = and i64 %conv2199, 4294967295
  %shr2201 = lshr i64 %and2200, 25
  %arrayidx2202 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %663 = load i32, i32* %arrayidx2202, align 4
  %conv2203 = zext i32 %663 to i64
  %shl2204 = shl i64 %conv2203, 7
  %or2205 = or i64 %shr2201, %shl2204
  %and2206 = and i64 %or2205, 4294967295
  %xor2207 = xor i64 %xor2197, %and2206
  %add2208 = add i64 %conv2178, %xor2207
  %arrayidx2209 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %664 = load i32, i32* %arrayidx2209, align 4
  %arrayidx2210 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %665 = load i32, i32* %arrayidx2210, align 4
  %arrayidx2211 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %666 = load i32, i32* %arrayidx2211, align 4
  %arrayidx2212 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %667 = load i32, i32* %arrayidx2212, align 4
  %xor2213 = xor i32 %666, %667
  %and2214 = and i32 %665, %xor2213
  %xor2215 = xor i32 %664, %and2214
  %conv2216 = zext i32 %xor2215 to i64
  %add2217 = add i64 %add2208, %conv2216
  %add2218 = add i64 %add2217, 1996064986
  %arrayidx2219 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 23
  %668 = load i32, i32* %arrayidx2219, align 4
  %conv2220 = zext i32 %668 to i64
  %add2221 = add i64 %add2218, %conv2220
  %conv2222 = trunc i64 %add2221 to i32
  store i32 %conv2222, i32* %t0, align 4
  %arrayidx2223 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %669 = load i32, i32* %arrayidx2223, align 4
  %conv2224 = zext i32 %669 to i64
  %and2225 = and i64 %conv2224, 4294967295
  %shr2226 = lshr i64 %and2225, 2
  %arrayidx2227 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %670 = load i32, i32* %arrayidx2227, align 4
  %conv2228 = zext i32 %670 to i64
  %shl2229 = shl i64 %conv2228, 30
  %or2230 = or i64 %shr2226, %shl2229
  %and2231 = and i64 %or2230, 4294967295
  %arrayidx2232 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %671 = load i32, i32* %arrayidx2232, align 4
  %conv2233 = zext i32 %671 to i64
  %and2234 = and i64 %conv2233, 4294967295
  %shr2235 = lshr i64 %and2234, 13
  %arrayidx2236 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %672 = load i32, i32* %arrayidx2236, align 4
  %conv2237 = zext i32 %672 to i64
  %shl2238 = shl i64 %conv2237, 19
  %or2239 = or i64 %shr2235, %shl2238
  %and2240 = and i64 %or2239, 4294967295
  %xor2241 = xor i64 %and2231, %and2240
  %arrayidx2242 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %673 = load i32, i32* %arrayidx2242, align 4
  %conv2243 = zext i32 %673 to i64
  %and2244 = and i64 %conv2243, 4294967295
  %shr2245 = lshr i64 %and2244, 22
  %arrayidx2246 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %674 = load i32, i32* %arrayidx2246, align 4
  %conv2247 = zext i32 %674 to i64
  %shl2248 = shl i64 %conv2247, 10
  %or2249 = or i64 %shr2245, %shl2248
  %and2250 = and i64 %or2249, 4294967295
  %xor2251 = xor i64 %xor2241, %and2250
  %arrayidx2252 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %675 = load i32, i32* %arrayidx2252, align 4
  %arrayidx2253 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %676 = load i32, i32* %arrayidx2253, align 4
  %or2254 = or i32 %675, %676
  %arrayidx2255 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %677 = load i32, i32* %arrayidx2255, align 4
  %and2256 = and i32 %or2254, %677
  %arrayidx2257 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %678 = load i32, i32* %arrayidx2257, align 4
  %arrayidx2258 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %679 = load i32, i32* %arrayidx2258, align 4
  %and2259 = and i32 %678, %679
  %or2260 = or i32 %and2256, %and2259
  %conv2261 = zext i32 %or2260 to i64
  %add2262 = add i64 %xor2251, %conv2261
  %conv2263 = trunc i64 %add2262 to i32
  store i32 %conv2263, i32* %t1, align 4
  %680 = load i32, i32* %t0, align 4
  %arrayidx2264 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %681 = load i32, i32* %arrayidx2264, align 4
  %add2265 = add i32 %681, %680
  store i32 %add2265, i32* %arrayidx2264, align 4
  %682 = load i32, i32* %t0, align 4
  %683 = load i32, i32* %t1, align 4
  %add2266 = add i32 %682, %683
  %arrayidx2267 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  store i32 %add2266, i32* %arrayidx2267, align 4
  %arrayidx2268 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %684 = load i32, i32* %arrayidx2268, align 4
  %conv2269 = zext i32 %684 to i64
  %arrayidx2270 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %685 = load i32, i32* %arrayidx2270, align 4
  %conv2271 = zext i32 %685 to i64
  %and2272 = and i64 %conv2271, 4294967295
  %shr2273 = lshr i64 %and2272, 6
  %arrayidx2274 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %686 = load i32, i32* %arrayidx2274, align 4
  %conv2275 = zext i32 %686 to i64
  %shl2276 = shl i64 %conv2275, 26
  %or2277 = or i64 %shr2273, %shl2276
  %and2278 = and i64 %or2277, 4294967295
  %arrayidx2279 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %687 = load i32, i32* %arrayidx2279, align 4
  %conv2280 = zext i32 %687 to i64
  %and2281 = and i64 %conv2280, 4294967295
  %shr2282 = lshr i64 %and2281, 11
  %arrayidx2283 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %688 = load i32, i32* %arrayidx2283, align 4
  %conv2284 = zext i32 %688 to i64
  %shl2285 = shl i64 %conv2284, 21
  %or2286 = or i64 %shr2282, %shl2285
  %and2287 = and i64 %or2286, 4294967295
  %xor2288 = xor i64 %and2278, %and2287
  %arrayidx2289 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %689 = load i32, i32* %arrayidx2289, align 4
  %conv2290 = zext i32 %689 to i64
  %and2291 = and i64 %conv2290, 4294967295
  %shr2292 = lshr i64 %and2291, 25
  %arrayidx2293 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %690 = load i32, i32* %arrayidx2293, align 4
  %conv2294 = zext i32 %690 to i64
  %shl2295 = shl i64 %conv2294, 7
  %or2296 = or i64 %shr2292, %shl2295
  %and2297 = and i64 %or2296, 4294967295
  %xor2298 = xor i64 %xor2288, %and2297
  %add2299 = add i64 %conv2269, %xor2298
  %arrayidx2300 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %691 = load i32, i32* %arrayidx2300, align 4
  %arrayidx2301 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %692 = load i32, i32* %arrayidx2301, align 4
  %arrayidx2302 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %693 = load i32, i32* %arrayidx2302, align 4
  %arrayidx2303 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %694 = load i32, i32* %arrayidx2303, align 4
  %xor2304 = xor i32 %693, %694
  %and2305 = and i32 %692, %xor2304
  %xor2306 = xor i32 %691, %and2305
  %conv2307 = zext i32 %xor2306 to i64
  %add2308 = add i64 %add2299, %conv2307
  %add2309 = add i64 %add2308, 2554220882
  %arrayidx2310 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 24
  %695 = load i32, i32* %arrayidx2310, align 4
  %conv2311 = zext i32 %695 to i64
  %add2312 = add i64 %add2309, %conv2311
  %conv2313 = trunc i64 %add2312 to i32
  store i32 %conv2313, i32* %t0, align 4
  %arrayidx2314 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %696 = load i32, i32* %arrayidx2314, align 4
  %conv2315 = zext i32 %696 to i64
  %and2316 = and i64 %conv2315, 4294967295
  %shr2317 = lshr i64 %and2316, 2
  %arrayidx2318 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %697 = load i32, i32* %arrayidx2318, align 4
  %conv2319 = zext i32 %697 to i64
  %shl2320 = shl i64 %conv2319, 30
  %or2321 = or i64 %shr2317, %shl2320
  %and2322 = and i64 %or2321, 4294967295
  %arrayidx2323 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %698 = load i32, i32* %arrayidx2323, align 4
  %conv2324 = zext i32 %698 to i64
  %and2325 = and i64 %conv2324, 4294967295
  %shr2326 = lshr i64 %and2325, 13
  %arrayidx2327 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %699 = load i32, i32* %arrayidx2327, align 4
  %conv2328 = zext i32 %699 to i64
  %shl2329 = shl i64 %conv2328, 19
  %or2330 = or i64 %shr2326, %shl2329
  %and2331 = and i64 %or2330, 4294967295
  %xor2332 = xor i64 %and2322, %and2331
  %arrayidx2333 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %700 = load i32, i32* %arrayidx2333, align 4
  %conv2334 = zext i32 %700 to i64
  %and2335 = and i64 %conv2334, 4294967295
  %shr2336 = lshr i64 %and2335, 22
  %arrayidx2337 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %701 = load i32, i32* %arrayidx2337, align 4
  %conv2338 = zext i32 %701 to i64
  %shl2339 = shl i64 %conv2338, 10
  %or2340 = or i64 %shr2336, %shl2339
  %and2341 = and i64 %or2340, 4294967295
  %xor2342 = xor i64 %xor2332, %and2341
  %arrayidx2343 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %702 = load i32, i32* %arrayidx2343, align 4
  %arrayidx2344 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %703 = load i32, i32* %arrayidx2344, align 4
  %or2345 = or i32 %702, %703
  %arrayidx2346 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %704 = load i32, i32* %arrayidx2346, align 4
  %and2347 = and i32 %or2345, %704
  %arrayidx2348 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %705 = load i32, i32* %arrayidx2348, align 4
  %arrayidx2349 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %706 = load i32, i32* %arrayidx2349, align 4
  %and2350 = and i32 %705, %706
  %or2351 = or i32 %and2347, %and2350
  %conv2352 = zext i32 %or2351 to i64
  %add2353 = add i64 %xor2342, %conv2352
  %conv2354 = trunc i64 %add2353 to i32
  store i32 %conv2354, i32* %t1, align 4
  %707 = load i32, i32* %t0, align 4
  %arrayidx2355 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %708 = load i32, i32* %arrayidx2355, align 4
  %add2356 = add i32 %708, %707
  store i32 %add2356, i32* %arrayidx2355, align 4
  %709 = load i32, i32* %t0, align 4
  %710 = load i32, i32* %t1, align 4
  %add2357 = add i32 %709, %710
  %arrayidx2358 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  store i32 %add2357, i32* %arrayidx2358, align 4
  %arrayidx2359 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %711 = load i32, i32* %arrayidx2359, align 4
  %conv2360 = zext i32 %711 to i64
  %arrayidx2361 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %712 = load i32, i32* %arrayidx2361, align 4
  %conv2362 = zext i32 %712 to i64
  %and2363 = and i64 %conv2362, 4294967295
  %shr2364 = lshr i64 %and2363, 6
  %arrayidx2365 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %713 = load i32, i32* %arrayidx2365, align 4
  %conv2366 = zext i32 %713 to i64
  %shl2367 = shl i64 %conv2366, 26
  %or2368 = or i64 %shr2364, %shl2367
  %and2369 = and i64 %or2368, 4294967295
  %arrayidx2370 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %714 = load i32, i32* %arrayidx2370, align 4
  %conv2371 = zext i32 %714 to i64
  %and2372 = and i64 %conv2371, 4294967295
  %shr2373 = lshr i64 %and2372, 11
  %arrayidx2374 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %715 = load i32, i32* %arrayidx2374, align 4
  %conv2375 = zext i32 %715 to i64
  %shl2376 = shl i64 %conv2375, 21
  %or2377 = or i64 %shr2373, %shl2376
  %and2378 = and i64 %or2377, 4294967295
  %xor2379 = xor i64 %and2369, %and2378
  %arrayidx2380 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %716 = load i32, i32* %arrayidx2380, align 4
  %conv2381 = zext i32 %716 to i64
  %and2382 = and i64 %conv2381, 4294967295
  %shr2383 = lshr i64 %and2382, 25
  %arrayidx2384 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %717 = load i32, i32* %arrayidx2384, align 4
  %conv2385 = zext i32 %717 to i64
  %shl2386 = shl i64 %conv2385, 7
  %or2387 = or i64 %shr2383, %shl2386
  %and2388 = and i64 %or2387, 4294967295
  %xor2389 = xor i64 %xor2379, %and2388
  %add2390 = add i64 %conv2360, %xor2389
  %arrayidx2391 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %718 = load i32, i32* %arrayidx2391, align 4
  %arrayidx2392 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %719 = load i32, i32* %arrayidx2392, align 4
  %arrayidx2393 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %720 = load i32, i32* %arrayidx2393, align 4
  %arrayidx2394 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %721 = load i32, i32* %arrayidx2394, align 4
  %xor2395 = xor i32 %720, %721
  %and2396 = and i32 %719, %xor2395
  %xor2397 = xor i32 %718, %and2396
  %conv2398 = zext i32 %xor2397 to i64
  %add2399 = add i64 %add2390, %conv2398
  %add2400 = add i64 %add2399, 2821834349
  %arrayidx2401 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 25
  %722 = load i32, i32* %arrayidx2401, align 4
  %conv2402 = zext i32 %722 to i64
  %add2403 = add i64 %add2400, %conv2402
  %conv2404 = trunc i64 %add2403 to i32
  store i32 %conv2404, i32* %t0, align 4
  %arrayidx2405 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %723 = load i32, i32* %arrayidx2405, align 4
  %conv2406 = zext i32 %723 to i64
  %and2407 = and i64 %conv2406, 4294967295
  %shr2408 = lshr i64 %and2407, 2
  %arrayidx2409 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %724 = load i32, i32* %arrayidx2409, align 4
  %conv2410 = zext i32 %724 to i64
  %shl2411 = shl i64 %conv2410, 30
  %or2412 = or i64 %shr2408, %shl2411
  %and2413 = and i64 %or2412, 4294967295
  %arrayidx2414 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %725 = load i32, i32* %arrayidx2414, align 4
  %conv2415 = zext i32 %725 to i64
  %and2416 = and i64 %conv2415, 4294967295
  %shr2417 = lshr i64 %and2416, 13
  %arrayidx2418 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %726 = load i32, i32* %arrayidx2418, align 4
  %conv2419 = zext i32 %726 to i64
  %shl2420 = shl i64 %conv2419, 19
  %or2421 = or i64 %shr2417, %shl2420
  %and2422 = and i64 %or2421, 4294967295
  %xor2423 = xor i64 %and2413, %and2422
  %arrayidx2424 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %727 = load i32, i32* %arrayidx2424, align 4
  %conv2425 = zext i32 %727 to i64
  %and2426 = and i64 %conv2425, 4294967295
  %shr2427 = lshr i64 %and2426, 22
  %arrayidx2428 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %728 = load i32, i32* %arrayidx2428, align 4
  %conv2429 = zext i32 %728 to i64
  %shl2430 = shl i64 %conv2429, 10
  %or2431 = or i64 %shr2427, %shl2430
  %and2432 = and i64 %or2431, 4294967295
  %xor2433 = xor i64 %xor2423, %and2432
  %arrayidx2434 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %729 = load i32, i32* %arrayidx2434, align 4
  %arrayidx2435 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %730 = load i32, i32* %arrayidx2435, align 4
  %or2436 = or i32 %729, %730
  %arrayidx2437 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %731 = load i32, i32* %arrayidx2437, align 4
  %and2438 = and i32 %or2436, %731
  %arrayidx2439 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %732 = load i32, i32* %arrayidx2439, align 4
  %arrayidx2440 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %733 = load i32, i32* %arrayidx2440, align 4
  %and2441 = and i32 %732, %733
  %or2442 = or i32 %and2438, %and2441
  %conv2443 = zext i32 %or2442 to i64
  %add2444 = add i64 %xor2433, %conv2443
  %conv2445 = trunc i64 %add2444 to i32
  store i32 %conv2445, i32* %t1, align 4
  %734 = load i32, i32* %t0, align 4
  %arrayidx2446 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %735 = load i32, i32* %arrayidx2446, align 4
  %add2447 = add i32 %735, %734
  store i32 %add2447, i32* %arrayidx2446, align 4
  %736 = load i32, i32* %t0, align 4
  %737 = load i32, i32* %t1, align 4
  %add2448 = add i32 %736, %737
  %arrayidx2449 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  store i32 %add2448, i32* %arrayidx2449, align 4
  %arrayidx2450 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %738 = load i32, i32* %arrayidx2450, align 4
  %conv2451 = zext i32 %738 to i64
  %arrayidx2452 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %739 = load i32, i32* %arrayidx2452, align 4
  %conv2453 = zext i32 %739 to i64
  %and2454 = and i64 %conv2453, 4294967295
  %shr2455 = lshr i64 %and2454, 6
  %arrayidx2456 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %740 = load i32, i32* %arrayidx2456, align 4
  %conv2457 = zext i32 %740 to i64
  %shl2458 = shl i64 %conv2457, 26
  %or2459 = or i64 %shr2455, %shl2458
  %and2460 = and i64 %or2459, 4294967295
  %arrayidx2461 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %741 = load i32, i32* %arrayidx2461, align 4
  %conv2462 = zext i32 %741 to i64
  %and2463 = and i64 %conv2462, 4294967295
  %shr2464 = lshr i64 %and2463, 11
  %arrayidx2465 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %742 = load i32, i32* %arrayidx2465, align 4
  %conv2466 = zext i32 %742 to i64
  %shl2467 = shl i64 %conv2466, 21
  %or2468 = or i64 %shr2464, %shl2467
  %and2469 = and i64 %or2468, 4294967295
  %xor2470 = xor i64 %and2460, %and2469
  %arrayidx2471 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %743 = load i32, i32* %arrayidx2471, align 4
  %conv2472 = zext i32 %743 to i64
  %and2473 = and i64 %conv2472, 4294967295
  %shr2474 = lshr i64 %and2473, 25
  %arrayidx2475 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %744 = load i32, i32* %arrayidx2475, align 4
  %conv2476 = zext i32 %744 to i64
  %shl2477 = shl i64 %conv2476, 7
  %or2478 = or i64 %shr2474, %shl2477
  %and2479 = and i64 %or2478, 4294967295
  %xor2480 = xor i64 %xor2470, %and2479
  %add2481 = add i64 %conv2451, %xor2480
  %arrayidx2482 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %745 = load i32, i32* %arrayidx2482, align 4
  %arrayidx2483 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %746 = load i32, i32* %arrayidx2483, align 4
  %arrayidx2484 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %747 = load i32, i32* %arrayidx2484, align 4
  %arrayidx2485 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %748 = load i32, i32* %arrayidx2485, align 4
  %xor2486 = xor i32 %747, %748
  %and2487 = and i32 %746, %xor2486
  %xor2488 = xor i32 %745, %and2487
  %conv2489 = zext i32 %xor2488 to i64
  %add2490 = add i64 %add2481, %conv2489
  %add2491 = add i64 %add2490, 2952996808
  %arrayidx2492 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 26
  %749 = load i32, i32* %arrayidx2492, align 4
  %conv2493 = zext i32 %749 to i64
  %add2494 = add i64 %add2491, %conv2493
  %conv2495 = trunc i64 %add2494 to i32
  store i32 %conv2495, i32* %t0, align 4
  %arrayidx2496 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %750 = load i32, i32* %arrayidx2496, align 4
  %conv2497 = zext i32 %750 to i64
  %and2498 = and i64 %conv2497, 4294967295
  %shr2499 = lshr i64 %and2498, 2
  %arrayidx2500 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %751 = load i32, i32* %arrayidx2500, align 4
  %conv2501 = zext i32 %751 to i64
  %shl2502 = shl i64 %conv2501, 30
  %or2503 = or i64 %shr2499, %shl2502
  %and2504 = and i64 %or2503, 4294967295
  %arrayidx2505 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %752 = load i32, i32* %arrayidx2505, align 4
  %conv2506 = zext i32 %752 to i64
  %and2507 = and i64 %conv2506, 4294967295
  %shr2508 = lshr i64 %and2507, 13
  %arrayidx2509 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %753 = load i32, i32* %arrayidx2509, align 4
  %conv2510 = zext i32 %753 to i64
  %shl2511 = shl i64 %conv2510, 19
  %or2512 = or i64 %shr2508, %shl2511
  %and2513 = and i64 %or2512, 4294967295
  %xor2514 = xor i64 %and2504, %and2513
  %arrayidx2515 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %754 = load i32, i32* %arrayidx2515, align 4
  %conv2516 = zext i32 %754 to i64
  %and2517 = and i64 %conv2516, 4294967295
  %shr2518 = lshr i64 %and2517, 22
  %arrayidx2519 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %755 = load i32, i32* %arrayidx2519, align 4
  %conv2520 = zext i32 %755 to i64
  %shl2521 = shl i64 %conv2520, 10
  %or2522 = or i64 %shr2518, %shl2521
  %and2523 = and i64 %or2522, 4294967295
  %xor2524 = xor i64 %xor2514, %and2523
  %arrayidx2525 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %756 = load i32, i32* %arrayidx2525, align 4
  %arrayidx2526 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %757 = load i32, i32* %arrayidx2526, align 4
  %or2527 = or i32 %756, %757
  %arrayidx2528 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %758 = load i32, i32* %arrayidx2528, align 4
  %and2529 = and i32 %or2527, %758
  %arrayidx2530 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %759 = load i32, i32* %arrayidx2530, align 4
  %arrayidx2531 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %760 = load i32, i32* %arrayidx2531, align 4
  %and2532 = and i32 %759, %760
  %or2533 = or i32 %and2529, %and2532
  %conv2534 = zext i32 %or2533 to i64
  %add2535 = add i64 %xor2524, %conv2534
  %conv2536 = trunc i64 %add2535 to i32
  store i32 %conv2536, i32* %t1, align 4
  %761 = load i32, i32* %t0, align 4
  %arrayidx2537 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %762 = load i32, i32* %arrayidx2537, align 4
  %add2538 = add i32 %762, %761
  store i32 %add2538, i32* %arrayidx2537, align 4
  %763 = load i32, i32* %t0, align 4
  %764 = load i32, i32* %t1, align 4
  %add2539 = add i32 %763, %764
  %arrayidx2540 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  store i32 %add2539, i32* %arrayidx2540, align 4
  %arrayidx2541 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %765 = load i32, i32* %arrayidx2541, align 4
  %conv2542 = zext i32 %765 to i64
  %arrayidx2543 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %766 = load i32, i32* %arrayidx2543, align 4
  %conv2544 = zext i32 %766 to i64
  %and2545 = and i64 %conv2544, 4294967295
  %shr2546 = lshr i64 %and2545, 6
  %arrayidx2547 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %767 = load i32, i32* %arrayidx2547, align 4
  %conv2548 = zext i32 %767 to i64
  %shl2549 = shl i64 %conv2548, 26
  %or2550 = or i64 %shr2546, %shl2549
  %and2551 = and i64 %or2550, 4294967295
  %arrayidx2552 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %768 = load i32, i32* %arrayidx2552, align 4
  %conv2553 = zext i32 %768 to i64
  %and2554 = and i64 %conv2553, 4294967295
  %shr2555 = lshr i64 %and2554, 11
  %arrayidx2556 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %769 = load i32, i32* %arrayidx2556, align 4
  %conv2557 = zext i32 %769 to i64
  %shl2558 = shl i64 %conv2557, 21
  %or2559 = or i64 %shr2555, %shl2558
  %and2560 = and i64 %or2559, 4294967295
  %xor2561 = xor i64 %and2551, %and2560
  %arrayidx2562 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %770 = load i32, i32* %arrayidx2562, align 4
  %conv2563 = zext i32 %770 to i64
  %and2564 = and i64 %conv2563, 4294967295
  %shr2565 = lshr i64 %and2564, 25
  %arrayidx2566 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %771 = load i32, i32* %arrayidx2566, align 4
  %conv2567 = zext i32 %771 to i64
  %shl2568 = shl i64 %conv2567, 7
  %or2569 = or i64 %shr2565, %shl2568
  %and2570 = and i64 %or2569, 4294967295
  %xor2571 = xor i64 %xor2561, %and2570
  %add2572 = add i64 %conv2542, %xor2571
  %arrayidx2573 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %772 = load i32, i32* %arrayidx2573, align 4
  %arrayidx2574 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %773 = load i32, i32* %arrayidx2574, align 4
  %arrayidx2575 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %774 = load i32, i32* %arrayidx2575, align 4
  %arrayidx2576 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %775 = load i32, i32* %arrayidx2576, align 4
  %xor2577 = xor i32 %774, %775
  %and2578 = and i32 %773, %xor2577
  %xor2579 = xor i32 %772, %and2578
  %conv2580 = zext i32 %xor2579 to i64
  %add2581 = add i64 %add2572, %conv2580
  %add2582 = add i64 %add2581, 3210313671
  %arrayidx2583 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 27
  %776 = load i32, i32* %arrayidx2583, align 4
  %conv2584 = zext i32 %776 to i64
  %add2585 = add i64 %add2582, %conv2584
  %conv2586 = trunc i64 %add2585 to i32
  store i32 %conv2586, i32* %t0, align 4
  %arrayidx2587 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %777 = load i32, i32* %arrayidx2587, align 4
  %conv2588 = zext i32 %777 to i64
  %and2589 = and i64 %conv2588, 4294967295
  %shr2590 = lshr i64 %and2589, 2
  %arrayidx2591 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %778 = load i32, i32* %arrayidx2591, align 4
  %conv2592 = zext i32 %778 to i64
  %shl2593 = shl i64 %conv2592, 30
  %or2594 = or i64 %shr2590, %shl2593
  %and2595 = and i64 %or2594, 4294967295
  %arrayidx2596 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %779 = load i32, i32* %arrayidx2596, align 4
  %conv2597 = zext i32 %779 to i64
  %and2598 = and i64 %conv2597, 4294967295
  %shr2599 = lshr i64 %and2598, 13
  %arrayidx2600 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %780 = load i32, i32* %arrayidx2600, align 4
  %conv2601 = zext i32 %780 to i64
  %shl2602 = shl i64 %conv2601, 19
  %or2603 = or i64 %shr2599, %shl2602
  %and2604 = and i64 %or2603, 4294967295
  %xor2605 = xor i64 %and2595, %and2604
  %arrayidx2606 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %781 = load i32, i32* %arrayidx2606, align 4
  %conv2607 = zext i32 %781 to i64
  %and2608 = and i64 %conv2607, 4294967295
  %shr2609 = lshr i64 %and2608, 22
  %arrayidx2610 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %782 = load i32, i32* %arrayidx2610, align 4
  %conv2611 = zext i32 %782 to i64
  %shl2612 = shl i64 %conv2611, 10
  %or2613 = or i64 %shr2609, %shl2612
  %and2614 = and i64 %or2613, 4294967295
  %xor2615 = xor i64 %xor2605, %and2614
  %arrayidx2616 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %783 = load i32, i32* %arrayidx2616, align 4
  %arrayidx2617 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %784 = load i32, i32* %arrayidx2617, align 4
  %or2618 = or i32 %783, %784
  %arrayidx2619 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %785 = load i32, i32* %arrayidx2619, align 4
  %and2620 = and i32 %or2618, %785
  %arrayidx2621 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %786 = load i32, i32* %arrayidx2621, align 4
  %arrayidx2622 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %787 = load i32, i32* %arrayidx2622, align 4
  %and2623 = and i32 %786, %787
  %or2624 = or i32 %and2620, %and2623
  %conv2625 = zext i32 %or2624 to i64
  %add2626 = add i64 %xor2615, %conv2625
  %conv2627 = trunc i64 %add2626 to i32
  store i32 %conv2627, i32* %t1, align 4
  %788 = load i32, i32* %t0, align 4
  %arrayidx2628 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %789 = load i32, i32* %arrayidx2628, align 4
  %add2629 = add i32 %789, %788
  store i32 %add2629, i32* %arrayidx2628, align 4
  %790 = load i32, i32* %t0, align 4
  %791 = load i32, i32* %t1, align 4
  %add2630 = add i32 %790, %791
  %arrayidx2631 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  store i32 %add2630, i32* %arrayidx2631, align 4
  %arrayidx2632 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %792 = load i32, i32* %arrayidx2632, align 4
  %conv2633 = zext i32 %792 to i64
  %arrayidx2634 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %793 = load i32, i32* %arrayidx2634, align 4
  %conv2635 = zext i32 %793 to i64
  %and2636 = and i64 %conv2635, 4294967295
  %shr2637 = lshr i64 %and2636, 6
  %arrayidx2638 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %794 = load i32, i32* %arrayidx2638, align 4
  %conv2639 = zext i32 %794 to i64
  %shl2640 = shl i64 %conv2639, 26
  %or2641 = or i64 %shr2637, %shl2640
  %and2642 = and i64 %or2641, 4294967295
  %arrayidx2643 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %795 = load i32, i32* %arrayidx2643, align 4
  %conv2644 = zext i32 %795 to i64
  %and2645 = and i64 %conv2644, 4294967295
  %shr2646 = lshr i64 %and2645, 11
  %arrayidx2647 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %796 = load i32, i32* %arrayidx2647, align 4
  %conv2648 = zext i32 %796 to i64
  %shl2649 = shl i64 %conv2648, 21
  %or2650 = or i64 %shr2646, %shl2649
  %and2651 = and i64 %or2650, 4294967295
  %xor2652 = xor i64 %and2642, %and2651
  %arrayidx2653 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %797 = load i32, i32* %arrayidx2653, align 4
  %conv2654 = zext i32 %797 to i64
  %and2655 = and i64 %conv2654, 4294967295
  %shr2656 = lshr i64 %and2655, 25
  %arrayidx2657 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %798 = load i32, i32* %arrayidx2657, align 4
  %conv2658 = zext i32 %798 to i64
  %shl2659 = shl i64 %conv2658, 7
  %or2660 = or i64 %shr2656, %shl2659
  %and2661 = and i64 %or2660, 4294967295
  %xor2662 = xor i64 %xor2652, %and2661
  %add2663 = add i64 %conv2633, %xor2662
  %arrayidx2664 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %799 = load i32, i32* %arrayidx2664, align 4
  %arrayidx2665 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %800 = load i32, i32* %arrayidx2665, align 4
  %arrayidx2666 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %801 = load i32, i32* %arrayidx2666, align 4
  %arrayidx2667 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %802 = load i32, i32* %arrayidx2667, align 4
  %xor2668 = xor i32 %801, %802
  %and2669 = and i32 %800, %xor2668
  %xor2670 = xor i32 %799, %and2669
  %conv2671 = zext i32 %xor2670 to i64
  %add2672 = add i64 %add2663, %conv2671
  %add2673 = add i64 %add2672, 3336571891
  %arrayidx2674 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 28
  %803 = load i32, i32* %arrayidx2674, align 4
  %conv2675 = zext i32 %803 to i64
  %add2676 = add i64 %add2673, %conv2675
  %conv2677 = trunc i64 %add2676 to i32
  store i32 %conv2677, i32* %t0, align 4
  %arrayidx2678 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %804 = load i32, i32* %arrayidx2678, align 4
  %conv2679 = zext i32 %804 to i64
  %and2680 = and i64 %conv2679, 4294967295
  %shr2681 = lshr i64 %and2680, 2
  %arrayidx2682 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %805 = load i32, i32* %arrayidx2682, align 4
  %conv2683 = zext i32 %805 to i64
  %shl2684 = shl i64 %conv2683, 30
  %or2685 = or i64 %shr2681, %shl2684
  %and2686 = and i64 %or2685, 4294967295
  %arrayidx2687 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %806 = load i32, i32* %arrayidx2687, align 4
  %conv2688 = zext i32 %806 to i64
  %and2689 = and i64 %conv2688, 4294967295
  %shr2690 = lshr i64 %and2689, 13
  %arrayidx2691 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %807 = load i32, i32* %arrayidx2691, align 4
  %conv2692 = zext i32 %807 to i64
  %shl2693 = shl i64 %conv2692, 19
  %or2694 = or i64 %shr2690, %shl2693
  %and2695 = and i64 %or2694, 4294967295
  %xor2696 = xor i64 %and2686, %and2695
  %arrayidx2697 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %808 = load i32, i32* %arrayidx2697, align 4
  %conv2698 = zext i32 %808 to i64
  %and2699 = and i64 %conv2698, 4294967295
  %shr2700 = lshr i64 %and2699, 22
  %arrayidx2701 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %809 = load i32, i32* %arrayidx2701, align 4
  %conv2702 = zext i32 %809 to i64
  %shl2703 = shl i64 %conv2702, 10
  %or2704 = or i64 %shr2700, %shl2703
  %and2705 = and i64 %or2704, 4294967295
  %xor2706 = xor i64 %xor2696, %and2705
  %arrayidx2707 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %810 = load i32, i32* %arrayidx2707, align 4
  %arrayidx2708 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %811 = load i32, i32* %arrayidx2708, align 4
  %or2709 = or i32 %810, %811
  %arrayidx2710 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %812 = load i32, i32* %arrayidx2710, align 4
  %and2711 = and i32 %or2709, %812
  %arrayidx2712 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %813 = load i32, i32* %arrayidx2712, align 4
  %arrayidx2713 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %814 = load i32, i32* %arrayidx2713, align 4
  %and2714 = and i32 %813, %814
  %or2715 = or i32 %and2711, %and2714
  %conv2716 = zext i32 %or2715 to i64
  %add2717 = add i64 %xor2706, %conv2716
  %conv2718 = trunc i64 %add2717 to i32
  store i32 %conv2718, i32* %t1, align 4
  %815 = load i32, i32* %t0, align 4
  %arrayidx2719 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %816 = load i32, i32* %arrayidx2719, align 4
  %add2720 = add i32 %816, %815
  store i32 %add2720, i32* %arrayidx2719, align 4
  %817 = load i32, i32* %t0, align 4
  %818 = load i32, i32* %t1, align 4
  %add2721 = add i32 %817, %818
  %arrayidx2722 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  store i32 %add2721, i32* %arrayidx2722, align 4
  %arrayidx2723 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %819 = load i32, i32* %arrayidx2723, align 4
  %conv2724 = zext i32 %819 to i64
  %arrayidx2725 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %820 = load i32, i32* %arrayidx2725, align 4
  %conv2726 = zext i32 %820 to i64
  %and2727 = and i64 %conv2726, 4294967295
  %shr2728 = lshr i64 %and2727, 6
  %arrayidx2729 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %821 = load i32, i32* %arrayidx2729, align 4
  %conv2730 = zext i32 %821 to i64
  %shl2731 = shl i64 %conv2730, 26
  %or2732 = or i64 %shr2728, %shl2731
  %and2733 = and i64 %or2732, 4294967295
  %arrayidx2734 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %822 = load i32, i32* %arrayidx2734, align 4
  %conv2735 = zext i32 %822 to i64
  %and2736 = and i64 %conv2735, 4294967295
  %shr2737 = lshr i64 %and2736, 11
  %arrayidx2738 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %823 = load i32, i32* %arrayidx2738, align 4
  %conv2739 = zext i32 %823 to i64
  %shl2740 = shl i64 %conv2739, 21
  %or2741 = or i64 %shr2737, %shl2740
  %and2742 = and i64 %or2741, 4294967295
  %xor2743 = xor i64 %and2733, %and2742
  %arrayidx2744 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %824 = load i32, i32* %arrayidx2744, align 4
  %conv2745 = zext i32 %824 to i64
  %and2746 = and i64 %conv2745, 4294967295
  %shr2747 = lshr i64 %and2746, 25
  %arrayidx2748 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %825 = load i32, i32* %arrayidx2748, align 4
  %conv2749 = zext i32 %825 to i64
  %shl2750 = shl i64 %conv2749, 7
  %or2751 = or i64 %shr2747, %shl2750
  %and2752 = and i64 %or2751, 4294967295
  %xor2753 = xor i64 %xor2743, %and2752
  %add2754 = add i64 %conv2724, %xor2753
  %arrayidx2755 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %826 = load i32, i32* %arrayidx2755, align 4
  %arrayidx2756 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %827 = load i32, i32* %arrayidx2756, align 4
  %arrayidx2757 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %828 = load i32, i32* %arrayidx2757, align 4
  %arrayidx2758 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %829 = load i32, i32* %arrayidx2758, align 4
  %xor2759 = xor i32 %828, %829
  %and2760 = and i32 %827, %xor2759
  %xor2761 = xor i32 %826, %and2760
  %conv2762 = zext i32 %xor2761 to i64
  %add2763 = add i64 %add2754, %conv2762
  %add2764 = add i64 %add2763, 3584528711
  %arrayidx2765 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 29
  %830 = load i32, i32* %arrayidx2765, align 4
  %conv2766 = zext i32 %830 to i64
  %add2767 = add i64 %add2764, %conv2766
  %conv2768 = trunc i64 %add2767 to i32
  store i32 %conv2768, i32* %t0, align 4
  %arrayidx2769 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %831 = load i32, i32* %arrayidx2769, align 4
  %conv2770 = zext i32 %831 to i64
  %and2771 = and i64 %conv2770, 4294967295
  %shr2772 = lshr i64 %and2771, 2
  %arrayidx2773 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %832 = load i32, i32* %arrayidx2773, align 4
  %conv2774 = zext i32 %832 to i64
  %shl2775 = shl i64 %conv2774, 30
  %or2776 = or i64 %shr2772, %shl2775
  %and2777 = and i64 %or2776, 4294967295
  %arrayidx2778 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %833 = load i32, i32* %arrayidx2778, align 4
  %conv2779 = zext i32 %833 to i64
  %and2780 = and i64 %conv2779, 4294967295
  %shr2781 = lshr i64 %and2780, 13
  %arrayidx2782 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %834 = load i32, i32* %arrayidx2782, align 4
  %conv2783 = zext i32 %834 to i64
  %shl2784 = shl i64 %conv2783, 19
  %or2785 = or i64 %shr2781, %shl2784
  %and2786 = and i64 %or2785, 4294967295
  %xor2787 = xor i64 %and2777, %and2786
  %arrayidx2788 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %835 = load i32, i32* %arrayidx2788, align 4
  %conv2789 = zext i32 %835 to i64
  %and2790 = and i64 %conv2789, 4294967295
  %shr2791 = lshr i64 %and2790, 22
  %arrayidx2792 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %836 = load i32, i32* %arrayidx2792, align 4
  %conv2793 = zext i32 %836 to i64
  %shl2794 = shl i64 %conv2793, 10
  %or2795 = or i64 %shr2791, %shl2794
  %and2796 = and i64 %or2795, 4294967295
  %xor2797 = xor i64 %xor2787, %and2796
  %arrayidx2798 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %837 = load i32, i32* %arrayidx2798, align 4
  %arrayidx2799 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %838 = load i32, i32* %arrayidx2799, align 4
  %or2800 = or i32 %837, %838
  %arrayidx2801 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %839 = load i32, i32* %arrayidx2801, align 4
  %and2802 = and i32 %or2800, %839
  %arrayidx2803 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %840 = load i32, i32* %arrayidx2803, align 4
  %arrayidx2804 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %841 = load i32, i32* %arrayidx2804, align 4
  %and2805 = and i32 %840, %841
  %or2806 = or i32 %and2802, %and2805
  %conv2807 = zext i32 %or2806 to i64
  %add2808 = add i64 %xor2797, %conv2807
  %conv2809 = trunc i64 %add2808 to i32
  store i32 %conv2809, i32* %t1, align 4
  %842 = load i32, i32* %t0, align 4
  %arrayidx2810 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %843 = load i32, i32* %arrayidx2810, align 4
  %add2811 = add i32 %843, %842
  store i32 %add2811, i32* %arrayidx2810, align 4
  %844 = load i32, i32* %t0, align 4
  %845 = load i32, i32* %t1, align 4
  %add2812 = add i32 %844, %845
  %arrayidx2813 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  store i32 %add2812, i32* %arrayidx2813, align 4
  %arrayidx2814 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %846 = load i32, i32* %arrayidx2814, align 4
  %conv2815 = zext i32 %846 to i64
  %arrayidx2816 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %847 = load i32, i32* %arrayidx2816, align 4
  %conv2817 = zext i32 %847 to i64
  %and2818 = and i64 %conv2817, 4294967295
  %shr2819 = lshr i64 %and2818, 6
  %arrayidx2820 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %848 = load i32, i32* %arrayidx2820, align 4
  %conv2821 = zext i32 %848 to i64
  %shl2822 = shl i64 %conv2821, 26
  %or2823 = or i64 %shr2819, %shl2822
  %and2824 = and i64 %or2823, 4294967295
  %arrayidx2825 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %849 = load i32, i32* %arrayidx2825, align 4
  %conv2826 = zext i32 %849 to i64
  %and2827 = and i64 %conv2826, 4294967295
  %shr2828 = lshr i64 %and2827, 11
  %arrayidx2829 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %850 = load i32, i32* %arrayidx2829, align 4
  %conv2830 = zext i32 %850 to i64
  %shl2831 = shl i64 %conv2830, 21
  %or2832 = or i64 %shr2828, %shl2831
  %and2833 = and i64 %or2832, 4294967295
  %xor2834 = xor i64 %and2824, %and2833
  %arrayidx2835 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %851 = load i32, i32* %arrayidx2835, align 4
  %conv2836 = zext i32 %851 to i64
  %and2837 = and i64 %conv2836, 4294967295
  %shr2838 = lshr i64 %and2837, 25
  %arrayidx2839 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %852 = load i32, i32* %arrayidx2839, align 4
  %conv2840 = zext i32 %852 to i64
  %shl2841 = shl i64 %conv2840, 7
  %or2842 = or i64 %shr2838, %shl2841
  %and2843 = and i64 %or2842, 4294967295
  %xor2844 = xor i64 %xor2834, %and2843
  %add2845 = add i64 %conv2815, %xor2844
  %arrayidx2846 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %853 = load i32, i32* %arrayidx2846, align 4
  %arrayidx2847 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %854 = load i32, i32* %arrayidx2847, align 4
  %arrayidx2848 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %855 = load i32, i32* %arrayidx2848, align 4
  %arrayidx2849 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %856 = load i32, i32* %arrayidx2849, align 4
  %xor2850 = xor i32 %855, %856
  %and2851 = and i32 %854, %xor2850
  %xor2852 = xor i32 %853, %and2851
  %conv2853 = zext i32 %xor2852 to i64
  %add2854 = add i64 %add2845, %conv2853
  %add2855 = add i64 %add2854, 113926993
  %arrayidx2856 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 30
  %857 = load i32, i32* %arrayidx2856, align 4
  %conv2857 = zext i32 %857 to i64
  %add2858 = add i64 %add2855, %conv2857
  %conv2859 = trunc i64 %add2858 to i32
  store i32 %conv2859, i32* %t0, align 4
  %arrayidx2860 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %858 = load i32, i32* %arrayidx2860, align 4
  %conv2861 = zext i32 %858 to i64
  %and2862 = and i64 %conv2861, 4294967295
  %shr2863 = lshr i64 %and2862, 2
  %arrayidx2864 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %859 = load i32, i32* %arrayidx2864, align 4
  %conv2865 = zext i32 %859 to i64
  %shl2866 = shl i64 %conv2865, 30
  %or2867 = or i64 %shr2863, %shl2866
  %and2868 = and i64 %or2867, 4294967295
  %arrayidx2869 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %860 = load i32, i32* %arrayidx2869, align 4
  %conv2870 = zext i32 %860 to i64
  %and2871 = and i64 %conv2870, 4294967295
  %shr2872 = lshr i64 %and2871, 13
  %arrayidx2873 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %861 = load i32, i32* %arrayidx2873, align 4
  %conv2874 = zext i32 %861 to i64
  %shl2875 = shl i64 %conv2874, 19
  %or2876 = or i64 %shr2872, %shl2875
  %and2877 = and i64 %or2876, 4294967295
  %xor2878 = xor i64 %and2868, %and2877
  %arrayidx2879 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %862 = load i32, i32* %arrayidx2879, align 4
  %conv2880 = zext i32 %862 to i64
  %and2881 = and i64 %conv2880, 4294967295
  %shr2882 = lshr i64 %and2881, 22
  %arrayidx2883 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %863 = load i32, i32* %arrayidx2883, align 4
  %conv2884 = zext i32 %863 to i64
  %shl2885 = shl i64 %conv2884, 10
  %or2886 = or i64 %shr2882, %shl2885
  %and2887 = and i64 %or2886, 4294967295
  %xor2888 = xor i64 %xor2878, %and2887
  %arrayidx2889 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %864 = load i32, i32* %arrayidx2889, align 4
  %arrayidx2890 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %865 = load i32, i32* %arrayidx2890, align 4
  %or2891 = or i32 %864, %865
  %arrayidx2892 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %866 = load i32, i32* %arrayidx2892, align 4
  %and2893 = and i32 %or2891, %866
  %arrayidx2894 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %867 = load i32, i32* %arrayidx2894, align 4
  %arrayidx2895 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %868 = load i32, i32* %arrayidx2895, align 4
  %and2896 = and i32 %867, %868
  %or2897 = or i32 %and2893, %and2896
  %conv2898 = zext i32 %or2897 to i64
  %add2899 = add i64 %xor2888, %conv2898
  %conv2900 = trunc i64 %add2899 to i32
  store i32 %conv2900, i32* %t1, align 4
  %869 = load i32, i32* %t0, align 4
  %arrayidx2901 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %870 = load i32, i32* %arrayidx2901, align 4
  %add2902 = add i32 %870, %869
  store i32 %add2902, i32* %arrayidx2901, align 4
  %871 = load i32, i32* %t0, align 4
  %872 = load i32, i32* %t1, align 4
  %add2903 = add i32 %871, %872
  %arrayidx2904 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  store i32 %add2903, i32* %arrayidx2904, align 4
  %arrayidx2905 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %873 = load i32, i32* %arrayidx2905, align 4
  %conv2906 = zext i32 %873 to i64
  %arrayidx2907 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %874 = load i32, i32* %arrayidx2907, align 4
  %conv2908 = zext i32 %874 to i64
  %and2909 = and i64 %conv2908, 4294967295
  %shr2910 = lshr i64 %and2909, 6
  %arrayidx2911 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %875 = load i32, i32* %arrayidx2911, align 4
  %conv2912 = zext i32 %875 to i64
  %shl2913 = shl i64 %conv2912, 26
  %or2914 = or i64 %shr2910, %shl2913
  %and2915 = and i64 %or2914, 4294967295
  %arrayidx2916 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %876 = load i32, i32* %arrayidx2916, align 4
  %conv2917 = zext i32 %876 to i64
  %and2918 = and i64 %conv2917, 4294967295
  %shr2919 = lshr i64 %and2918, 11
  %arrayidx2920 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %877 = load i32, i32* %arrayidx2920, align 4
  %conv2921 = zext i32 %877 to i64
  %shl2922 = shl i64 %conv2921, 21
  %or2923 = or i64 %shr2919, %shl2922
  %and2924 = and i64 %or2923, 4294967295
  %xor2925 = xor i64 %and2915, %and2924
  %arrayidx2926 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %878 = load i32, i32* %arrayidx2926, align 4
  %conv2927 = zext i32 %878 to i64
  %and2928 = and i64 %conv2927, 4294967295
  %shr2929 = lshr i64 %and2928, 25
  %arrayidx2930 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %879 = load i32, i32* %arrayidx2930, align 4
  %conv2931 = zext i32 %879 to i64
  %shl2932 = shl i64 %conv2931, 7
  %or2933 = or i64 %shr2929, %shl2932
  %and2934 = and i64 %or2933, 4294967295
  %xor2935 = xor i64 %xor2925, %and2934
  %add2936 = add i64 %conv2906, %xor2935
  %arrayidx2937 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %880 = load i32, i32* %arrayidx2937, align 4
  %arrayidx2938 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %881 = load i32, i32* %arrayidx2938, align 4
  %arrayidx2939 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %882 = load i32, i32* %arrayidx2939, align 4
  %arrayidx2940 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %883 = load i32, i32* %arrayidx2940, align 4
  %xor2941 = xor i32 %882, %883
  %and2942 = and i32 %881, %xor2941
  %xor2943 = xor i32 %880, %and2942
  %conv2944 = zext i32 %xor2943 to i64
  %add2945 = add i64 %add2936, %conv2944
  %add2946 = add i64 %add2945, 338241895
  %arrayidx2947 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 31
  %884 = load i32, i32* %arrayidx2947, align 4
  %conv2948 = zext i32 %884 to i64
  %add2949 = add i64 %add2946, %conv2948
  %conv2950 = trunc i64 %add2949 to i32
  store i32 %conv2950, i32* %t0, align 4
  %arrayidx2951 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %885 = load i32, i32* %arrayidx2951, align 4
  %conv2952 = zext i32 %885 to i64
  %and2953 = and i64 %conv2952, 4294967295
  %shr2954 = lshr i64 %and2953, 2
  %arrayidx2955 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %886 = load i32, i32* %arrayidx2955, align 4
  %conv2956 = zext i32 %886 to i64
  %shl2957 = shl i64 %conv2956, 30
  %or2958 = or i64 %shr2954, %shl2957
  %and2959 = and i64 %or2958, 4294967295
  %arrayidx2960 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %887 = load i32, i32* %arrayidx2960, align 4
  %conv2961 = zext i32 %887 to i64
  %and2962 = and i64 %conv2961, 4294967295
  %shr2963 = lshr i64 %and2962, 13
  %arrayidx2964 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %888 = load i32, i32* %arrayidx2964, align 4
  %conv2965 = zext i32 %888 to i64
  %shl2966 = shl i64 %conv2965, 19
  %or2967 = or i64 %shr2963, %shl2966
  %and2968 = and i64 %or2967, 4294967295
  %xor2969 = xor i64 %and2959, %and2968
  %arrayidx2970 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %889 = load i32, i32* %arrayidx2970, align 4
  %conv2971 = zext i32 %889 to i64
  %and2972 = and i64 %conv2971, 4294967295
  %shr2973 = lshr i64 %and2972, 22
  %arrayidx2974 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %890 = load i32, i32* %arrayidx2974, align 4
  %conv2975 = zext i32 %890 to i64
  %shl2976 = shl i64 %conv2975, 10
  %or2977 = or i64 %shr2973, %shl2976
  %and2978 = and i64 %or2977, 4294967295
  %xor2979 = xor i64 %xor2969, %and2978
  %arrayidx2980 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %891 = load i32, i32* %arrayidx2980, align 4
  %arrayidx2981 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %892 = load i32, i32* %arrayidx2981, align 4
  %or2982 = or i32 %891, %892
  %arrayidx2983 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %893 = load i32, i32* %arrayidx2983, align 4
  %and2984 = and i32 %or2982, %893
  %arrayidx2985 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %894 = load i32, i32* %arrayidx2985, align 4
  %arrayidx2986 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %895 = load i32, i32* %arrayidx2986, align 4
  %and2987 = and i32 %894, %895
  %or2988 = or i32 %and2984, %and2987
  %conv2989 = zext i32 %or2988 to i64
  %add2990 = add i64 %xor2979, %conv2989
  %conv2991 = trunc i64 %add2990 to i32
  store i32 %conv2991, i32* %t1, align 4
  %896 = load i32, i32* %t0, align 4
  %arrayidx2992 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %897 = load i32, i32* %arrayidx2992, align 4
  %add2993 = add i32 %897, %896
  store i32 %add2993, i32* %arrayidx2992, align 4
  %898 = load i32, i32* %t0, align 4
  %899 = load i32, i32* %t1, align 4
  %add2994 = add i32 %898, %899
  %arrayidx2995 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  store i32 %add2994, i32* %arrayidx2995, align 4
  %arrayidx2996 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %900 = load i32, i32* %arrayidx2996, align 4
  %conv2997 = zext i32 %900 to i64
  %arrayidx2998 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %901 = load i32, i32* %arrayidx2998, align 4
  %conv2999 = zext i32 %901 to i64
  %and3000 = and i64 %conv2999, 4294967295
  %shr3001 = lshr i64 %and3000, 6
  %arrayidx3002 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %902 = load i32, i32* %arrayidx3002, align 4
  %conv3003 = zext i32 %902 to i64
  %shl3004 = shl i64 %conv3003, 26
  %or3005 = or i64 %shr3001, %shl3004
  %and3006 = and i64 %or3005, 4294967295
  %arrayidx3007 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %903 = load i32, i32* %arrayidx3007, align 4
  %conv3008 = zext i32 %903 to i64
  %and3009 = and i64 %conv3008, 4294967295
  %shr3010 = lshr i64 %and3009, 11
  %arrayidx3011 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %904 = load i32, i32* %arrayidx3011, align 4
  %conv3012 = zext i32 %904 to i64
  %shl3013 = shl i64 %conv3012, 21
  %or3014 = or i64 %shr3010, %shl3013
  %and3015 = and i64 %or3014, 4294967295
  %xor3016 = xor i64 %and3006, %and3015
  %arrayidx3017 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %905 = load i32, i32* %arrayidx3017, align 4
  %conv3018 = zext i32 %905 to i64
  %and3019 = and i64 %conv3018, 4294967295
  %shr3020 = lshr i64 %and3019, 25
  %arrayidx3021 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %906 = load i32, i32* %arrayidx3021, align 4
  %conv3022 = zext i32 %906 to i64
  %shl3023 = shl i64 %conv3022, 7
  %or3024 = or i64 %shr3020, %shl3023
  %and3025 = and i64 %or3024, 4294967295
  %xor3026 = xor i64 %xor3016, %and3025
  %add3027 = add i64 %conv2997, %xor3026
  %arrayidx3028 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %907 = load i32, i32* %arrayidx3028, align 4
  %arrayidx3029 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %908 = load i32, i32* %arrayidx3029, align 4
  %arrayidx3030 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %909 = load i32, i32* %arrayidx3030, align 4
  %arrayidx3031 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %910 = load i32, i32* %arrayidx3031, align 4
  %xor3032 = xor i32 %909, %910
  %and3033 = and i32 %908, %xor3032
  %xor3034 = xor i32 %907, %and3033
  %conv3035 = zext i32 %xor3034 to i64
  %add3036 = add i64 %add3027, %conv3035
  %add3037 = add i64 %add3036, 666307205
  %arrayidx3038 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 32
  %911 = load i32, i32* %arrayidx3038, align 4
  %conv3039 = zext i32 %911 to i64
  %add3040 = add i64 %add3037, %conv3039
  %conv3041 = trunc i64 %add3040 to i32
  store i32 %conv3041, i32* %t0, align 4
  %arrayidx3042 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %912 = load i32, i32* %arrayidx3042, align 4
  %conv3043 = zext i32 %912 to i64
  %and3044 = and i64 %conv3043, 4294967295
  %shr3045 = lshr i64 %and3044, 2
  %arrayidx3046 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %913 = load i32, i32* %arrayidx3046, align 4
  %conv3047 = zext i32 %913 to i64
  %shl3048 = shl i64 %conv3047, 30
  %or3049 = or i64 %shr3045, %shl3048
  %and3050 = and i64 %or3049, 4294967295
  %arrayidx3051 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %914 = load i32, i32* %arrayidx3051, align 4
  %conv3052 = zext i32 %914 to i64
  %and3053 = and i64 %conv3052, 4294967295
  %shr3054 = lshr i64 %and3053, 13
  %arrayidx3055 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %915 = load i32, i32* %arrayidx3055, align 4
  %conv3056 = zext i32 %915 to i64
  %shl3057 = shl i64 %conv3056, 19
  %or3058 = or i64 %shr3054, %shl3057
  %and3059 = and i64 %or3058, 4294967295
  %xor3060 = xor i64 %and3050, %and3059
  %arrayidx3061 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %916 = load i32, i32* %arrayidx3061, align 4
  %conv3062 = zext i32 %916 to i64
  %and3063 = and i64 %conv3062, 4294967295
  %shr3064 = lshr i64 %and3063, 22
  %arrayidx3065 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %917 = load i32, i32* %arrayidx3065, align 4
  %conv3066 = zext i32 %917 to i64
  %shl3067 = shl i64 %conv3066, 10
  %or3068 = or i64 %shr3064, %shl3067
  %and3069 = and i64 %or3068, 4294967295
  %xor3070 = xor i64 %xor3060, %and3069
  %arrayidx3071 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %918 = load i32, i32* %arrayidx3071, align 4
  %arrayidx3072 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %919 = load i32, i32* %arrayidx3072, align 4
  %or3073 = or i32 %918, %919
  %arrayidx3074 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %920 = load i32, i32* %arrayidx3074, align 4
  %and3075 = and i32 %or3073, %920
  %arrayidx3076 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %921 = load i32, i32* %arrayidx3076, align 4
  %arrayidx3077 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %922 = load i32, i32* %arrayidx3077, align 4
  %and3078 = and i32 %921, %922
  %or3079 = or i32 %and3075, %and3078
  %conv3080 = zext i32 %or3079 to i64
  %add3081 = add i64 %xor3070, %conv3080
  %conv3082 = trunc i64 %add3081 to i32
  store i32 %conv3082, i32* %t1, align 4
  %923 = load i32, i32* %t0, align 4
  %arrayidx3083 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %924 = load i32, i32* %arrayidx3083, align 4
  %add3084 = add i32 %924, %923
  store i32 %add3084, i32* %arrayidx3083, align 4
  %925 = load i32, i32* %t0, align 4
  %926 = load i32, i32* %t1, align 4
  %add3085 = add i32 %925, %926
  %arrayidx3086 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  store i32 %add3085, i32* %arrayidx3086, align 4
  %arrayidx3087 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %927 = load i32, i32* %arrayidx3087, align 4
  %conv3088 = zext i32 %927 to i64
  %arrayidx3089 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %928 = load i32, i32* %arrayidx3089, align 4
  %conv3090 = zext i32 %928 to i64
  %and3091 = and i64 %conv3090, 4294967295
  %shr3092 = lshr i64 %and3091, 6
  %arrayidx3093 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %929 = load i32, i32* %arrayidx3093, align 4
  %conv3094 = zext i32 %929 to i64
  %shl3095 = shl i64 %conv3094, 26
  %or3096 = or i64 %shr3092, %shl3095
  %and3097 = and i64 %or3096, 4294967295
  %arrayidx3098 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %930 = load i32, i32* %arrayidx3098, align 4
  %conv3099 = zext i32 %930 to i64
  %and3100 = and i64 %conv3099, 4294967295
  %shr3101 = lshr i64 %and3100, 11
  %arrayidx3102 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %931 = load i32, i32* %arrayidx3102, align 4
  %conv3103 = zext i32 %931 to i64
  %shl3104 = shl i64 %conv3103, 21
  %or3105 = or i64 %shr3101, %shl3104
  %and3106 = and i64 %or3105, 4294967295
  %xor3107 = xor i64 %and3097, %and3106
  %arrayidx3108 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %932 = load i32, i32* %arrayidx3108, align 4
  %conv3109 = zext i32 %932 to i64
  %and3110 = and i64 %conv3109, 4294967295
  %shr3111 = lshr i64 %and3110, 25
  %arrayidx3112 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %933 = load i32, i32* %arrayidx3112, align 4
  %conv3113 = zext i32 %933 to i64
  %shl3114 = shl i64 %conv3113, 7
  %or3115 = or i64 %shr3111, %shl3114
  %and3116 = and i64 %or3115, 4294967295
  %xor3117 = xor i64 %xor3107, %and3116
  %add3118 = add i64 %conv3088, %xor3117
  %arrayidx3119 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %934 = load i32, i32* %arrayidx3119, align 4
  %arrayidx3120 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %935 = load i32, i32* %arrayidx3120, align 4
  %arrayidx3121 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %936 = load i32, i32* %arrayidx3121, align 4
  %arrayidx3122 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %937 = load i32, i32* %arrayidx3122, align 4
  %xor3123 = xor i32 %936, %937
  %and3124 = and i32 %935, %xor3123
  %xor3125 = xor i32 %934, %and3124
  %conv3126 = zext i32 %xor3125 to i64
  %add3127 = add i64 %add3118, %conv3126
  %add3128 = add i64 %add3127, 773529912
  %arrayidx3129 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 33
  %938 = load i32, i32* %arrayidx3129, align 4
  %conv3130 = zext i32 %938 to i64
  %add3131 = add i64 %add3128, %conv3130
  %conv3132 = trunc i64 %add3131 to i32
  store i32 %conv3132, i32* %t0, align 4
  %arrayidx3133 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %939 = load i32, i32* %arrayidx3133, align 4
  %conv3134 = zext i32 %939 to i64
  %and3135 = and i64 %conv3134, 4294967295
  %shr3136 = lshr i64 %and3135, 2
  %arrayidx3137 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %940 = load i32, i32* %arrayidx3137, align 4
  %conv3138 = zext i32 %940 to i64
  %shl3139 = shl i64 %conv3138, 30
  %or3140 = or i64 %shr3136, %shl3139
  %and3141 = and i64 %or3140, 4294967295
  %arrayidx3142 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %941 = load i32, i32* %arrayidx3142, align 4
  %conv3143 = zext i32 %941 to i64
  %and3144 = and i64 %conv3143, 4294967295
  %shr3145 = lshr i64 %and3144, 13
  %arrayidx3146 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %942 = load i32, i32* %arrayidx3146, align 4
  %conv3147 = zext i32 %942 to i64
  %shl3148 = shl i64 %conv3147, 19
  %or3149 = or i64 %shr3145, %shl3148
  %and3150 = and i64 %or3149, 4294967295
  %xor3151 = xor i64 %and3141, %and3150
  %arrayidx3152 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %943 = load i32, i32* %arrayidx3152, align 4
  %conv3153 = zext i32 %943 to i64
  %and3154 = and i64 %conv3153, 4294967295
  %shr3155 = lshr i64 %and3154, 22
  %arrayidx3156 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %944 = load i32, i32* %arrayidx3156, align 4
  %conv3157 = zext i32 %944 to i64
  %shl3158 = shl i64 %conv3157, 10
  %or3159 = or i64 %shr3155, %shl3158
  %and3160 = and i64 %or3159, 4294967295
  %xor3161 = xor i64 %xor3151, %and3160
  %arrayidx3162 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %945 = load i32, i32* %arrayidx3162, align 4
  %arrayidx3163 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %946 = load i32, i32* %arrayidx3163, align 4
  %or3164 = or i32 %945, %946
  %arrayidx3165 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %947 = load i32, i32* %arrayidx3165, align 4
  %and3166 = and i32 %or3164, %947
  %arrayidx3167 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %948 = load i32, i32* %arrayidx3167, align 4
  %arrayidx3168 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %949 = load i32, i32* %arrayidx3168, align 4
  %and3169 = and i32 %948, %949
  %or3170 = or i32 %and3166, %and3169
  %conv3171 = zext i32 %or3170 to i64
  %add3172 = add i64 %xor3161, %conv3171
  %conv3173 = trunc i64 %add3172 to i32
  store i32 %conv3173, i32* %t1, align 4
  %950 = load i32, i32* %t0, align 4
  %arrayidx3174 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %951 = load i32, i32* %arrayidx3174, align 4
  %add3175 = add i32 %951, %950
  store i32 %add3175, i32* %arrayidx3174, align 4
  %952 = load i32, i32* %t0, align 4
  %953 = load i32, i32* %t1, align 4
  %add3176 = add i32 %952, %953
  %arrayidx3177 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  store i32 %add3176, i32* %arrayidx3177, align 4
  %arrayidx3178 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %954 = load i32, i32* %arrayidx3178, align 4
  %conv3179 = zext i32 %954 to i64
  %arrayidx3180 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %955 = load i32, i32* %arrayidx3180, align 4
  %conv3181 = zext i32 %955 to i64
  %and3182 = and i64 %conv3181, 4294967295
  %shr3183 = lshr i64 %and3182, 6
  %arrayidx3184 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %956 = load i32, i32* %arrayidx3184, align 4
  %conv3185 = zext i32 %956 to i64
  %shl3186 = shl i64 %conv3185, 26
  %or3187 = or i64 %shr3183, %shl3186
  %and3188 = and i64 %or3187, 4294967295
  %arrayidx3189 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %957 = load i32, i32* %arrayidx3189, align 4
  %conv3190 = zext i32 %957 to i64
  %and3191 = and i64 %conv3190, 4294967295
  %shr3192 = lshr i64 %and3191, 11
  %arrayidx3193 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %958 = load i32, i32* %arrayidx3193, align 4
  %conv3194 = zext i32 %958 to i64
  %shl3195 = shl i64 %conv3194, 21
  %or3196 = or i64 %shr3192, %shl3195
  %and3197 = and i64 %or3196, 4294967295
  %xor3198 = xor i64 %and3188, %and3197
  %arrayidx3199 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %959 = load i32, i32* %arrayidx3199, align 4
  %conv3200 = zext i32 %959 to i64
  %and3201 = and i64 %conv3200, 4294967295
  %shr3202 = lshr i64 %and3201, 25
  %arrayidx3203 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %960 = load i32, i32* %arrayidx3203, align 4
  %conv3204 = zext i32 %960 to i64
  %shl3205 = shl i64 %conv3204, 7
  %or3206 = or i64 %shr3202, %shl3205
  %and3207 = and i64 %or3206, 4294967295
  %xor3208 = xor i64 %xor3198, %and3207
  %add3209 = add i64 %conv3179, %xor3208
  %arrayidx3210 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %961 = load i32, i32* %arrayidx3210, align 4
  %arrayidx3211 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %962 = load i32, i32* %arrayidx3211, align 4
  %arrayidx3212 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %963 = load i32, i32* %arrayidx3212, align 4
  %arrayidx3213 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %964 = load i32, i32* %arrayidx3213, align 4
  %xor3214 = xor i32 %963, %964
  %and3215 = and i32 %962, %xor3214
  %xor3216 = xor i32 %961, %and3215
  %conv3217 = zext i32 %xor3216 to i64
  %add3218 = add i64 %add3209, %conv3217
  %add3219 = add i64 %add3218, 1294757372
  %arrayidx3220 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 34
  %965 = load i32, i32* %arrayidx3220, align 4
  %conv3221 = zext i32 %965 to i64
  %add3222 = add i64 %add3219, %conv3221
  %conv3223 = trunc i64 %add3222 to i32
  store i32 %conv3223, i32* %t0, align 4
  %arrayidx3224 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %966 = load i32, i32* %arrayidx3224, align 4
  %conv3225 = zext i32 %966 to i64
  %and3226 = and i64 %conv3225, 4294967295
  %shr3227 = lshr i64 %and3226, 2
  %arrayidx3228 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %967 = load i32, i32* %arrayidx3228, align 4
  %conv3229 = zext i32 %967 to i64
  %shl3230 = shl i64 %conv3229, 30
  %or3231 = or i64 %shr3227, %shl3230
  %and3232 = and i64 %or3231, 4294967295
  %arrayidx3233 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %968 = load i32, i32* %arrayidx3233, align 4
  %conv3234 = zext i32 %968 to i64
  %and3235 = and i64 %conv3234, 4294967295
  %shr3236 = lshr i64 %and3235, 13
  %arrayidx3237 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %969 = load i32, i32* %arrayidx3237, align 4
  %conv3238 = zext i32 %969 to i64
  %shl3239 = shl i64 %conv3238, 19
  %or3240 = or i64 %shr3236, %shl3239
  %and3241 = and i64 %or3240, 4294967295
  %xor3242 = xor i64 %and3232, %and3241
  %arrayidx3243 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %970 = load i32, i32* %arrayidx3243, align 4
  %conv3244 = zext i32 %970 to i64
  %and3245 = and i64 %conv3244, 4294967295
  %shr3246 = lshr i64 %and3245, 22
  %arrayidx3247 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %971 = load i32, i32* %arrayidx3247, align 4
  %conv3248 = zext i32 %971 to i64
  %shl3249 = shl i64 %conv3248, 10
  %or3250 = or i64 %shr3246, %shl3249
  %and3251 = and i64 %or3250, 4294967295
  %xor3252 = xor i64 %xor3242, %and3251
  %arrayidx3253 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %972 = load i32, i32* %arrayidx3253, align 4
  %arrayidx3254 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %973 = load i32, i32* %arrayidx3254, align 4
  %or3255 = or i32 %972, %973
  %arrayidx3256 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %974 = load i32, i32* %arrayidx3256, align 4
  %and3257 = and i32 %or3255, %974
  %arrayidx3258 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %975 = load i32, i32* %arrayidx3258, align 4
  %arrayidx3259 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %976 = load i32, i32* %arrayidx3259, align 4
  %and3260 = and i32 %975, %976
  %or3261 = or i32 %and3257, %and3260
  %conv3262 = zext i32 %or3261 to i64
  %add3263 = add i64 %xor3252, %conv3262
  %conv3264 = trunc i64 %add3263 to i32
  store i32 %conv3264, i32* %t1, align 4
  %977 = load i32, i32* %t0, align 4
  %arrayidx3265 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %978 = load i32, i32* %arrayidx3265, align 4
  %add3266 = add i32 %978, %977
  store i32 %add3266, i32* %arrayidx3265, align 4
  %979 = load i32, i32* %t0, align 4
  %980 = load i32, i32* %t1, align 4
  %add3267 = add i32 %979, %980
  %arrayidx3268 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  store i32 %add3267, i32* %arrayidx3268, align 4
  %arrayidx3269 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %981 = load i32, i32* %arrayidx3269, align 4
  %conv3270 = zext i32 %981 to i64
  %arrayidx3271 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %982 = load i32, i32* %arrayidx3271, align 4
  %conv3272 = zext i32 %982 to i64
  %and3273 = and i64 %conv3272, 4294967295
  %shr3274 = lshr i64 %and3273, 6
  %arrayidx3275 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %983 = load i32, i32* %arrayidx3275, align 4
  %conv3276 = zext i32 %983 to i64
  %shl3277 = shl i64 %conv3276, 26
  %or3278 = or i64 %shr3274, %shl3277
  %and3279 = and i64 %or3278, 4294967295
  %arrayidx3280 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %984 = load i32, i32* %arrayidx3280, align 4
  %conv3281 = zext i32 %984 to i64
  %and3282 = and i64 %conv3281, 4294967295
  %shr3283 = lshr i64 %and3282, 11
  %arrayidx3284 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %985 = load i32, i32* %arrayidx3284, align 4
  %conv3285 = zext i32 %985 to i64
  %shl3286 = shl i64 %conv3285, 21
  %or3287 = or i64 %shr3283, %shl3286
  %and3288 = and i64 %or3287, 4294967295
  %xor3289 = xor i64 %and3279, %and3288
  %arrayidx3290 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %986 = load i32, i32* %arrayidx3290, align 4
  %conv3291 = zext i32 %986 to i64
  %and3292 = and i64 %conv3291, 4294967295
  %shr3293 = lshr i64 %and3292, 25
  %arrayidx3294 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %987 = load i32, i32* %arrayidx3294, align 4
  %conv3295 = zext i32 %987 to i64
  %shl3296 = shl i64 %conv3295, 7
  %or3297 = or i64 %shr3293, %shl3296
  %and3298 = and i64 %or3297, 4294967295
  %xor3299 = xor i64 %xor3289, %and3298
  %add3300 = add i64 %conv3270, %xor3299
  %arrayidx3301 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %988 = load i32, i32* %arrayidx3301, align 4
  %arrayidx3302 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %989 = load i32, i32* %arrayidx3302, align 4
  %arrayidx3303 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %990 = load i32, i32* %arrayidx3303, align 4
  %arrayidx3304 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %991 = load i32, i32* %arrayidx3304, align 4
  %xor3305 = xor i32 %990, %991
  %and3306 = and i32 %989, %xor3305
  %xor3307 = xor i32 %988, %and3306
  %conv3308 = zext i32 %xor3307 to i64
  %add3309 = add i64 %add3300, %conv3308
  %add3310 = add i64 %add3309, 1396182291
  %arrayidx3311 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 35
  %992 = load i32, i32* %arrayidx3311, align 4
  %conv3312 = zext i32 %992 to i64
  %add3313 = add i64 %add3310, %conv3312
  %conv3314 = trunc i64 %add3313 to i32
  store i32 %conv3314, i32* %t0, align 4
  %arrayidx3315 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %993 = load i32, i32* %arrayidx3315, align 4
  %conv3316 = zext i32 %993 to i64
  %and3317 = and i64 %conv3316, 4294967295
  %shr3318 = lshr i64 %and3317, 2
  %arrayidx3319 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %994 = load i32, i32* %arrayidx3319, align 4
  %conv3320 = zext i32 %994 to i64
  %shl3321 = shl i64 %conv3320, 30
  %or3322 = or i64 %shr3318, %shl3321
  %and3323 = and i64 %or3322, 4294967295
  %arrayidx3324 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %995 = load i32, i32* %arrayidx3324, align 4
  %conv3325 = zext i32 %995 to i64
  %and3326 = and i64 %conv3325, 4294967295
  %shr3327 = lshr i64 %and3326, 13
  %arrayidx3328 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %996 = load i32, i32* %arrayidx3328, align 4
  %conv3329 = zext i32 %996 to i64
  %shl3330 = shl i64 %conv3329, 19
  %or3331 = or i64 %shr3327, %shl3330
  %and3332 = and i64 %or3331, 4294967295
  %xor3333 = xor i64 %and3323, %and3332
  %arrayidx3334 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %997 = load i32, i32* %arrayidx3334, align 4
  %conv3335 = zext i32 %997 to i64
  %and3336 = and i64 %conv3335, 4294967295
  %shr3337 = lshr i64 %and3336, 22
  %arrayidx3338 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %998 = load i32, i32* %arrayidx3338, align 4
  %conv3339 = zext i32 %998 to i64
  %shl3340 = shl i64 %conv3339, 10
  %or3341 = or i64 %shr3337, %shl3340
  %and3342 = and i64 %or3341, 4294967295
  %xor3343 = xor i64 %xor3333, %and3342
  %arrayidx3344 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %999 = load i32, i32* %arrayidx3344, align 4
  %arrayidx3345 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1000 = load i32, i32* %arrayidx3345, align 4
  %or3346 = or i32 %999, %1000
  %arrayidx3347 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1001 = load i32, i32* %arrayidx3347, align 4
  %and3348 = and i32 %or3346, %1001
  %arrayidx3349 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1002 = load i32, i32* %arrayidx3349, align 4
  %arrayidx3350 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1003 = load i32, i32* %arrayidx3350, align 4
  %and3351 = and i32 %1002, %1003
  %or3352 = or i32 %and3348, %and3351
  %conv3353 = zext i32 %or3352 to i64
  %add3354 = add i64 %xor3343, %conv3353
  %conv3355 = trunc i64 %add3354 to i32
  store i32 %conv3355, i32* %t1, align 4
  %1004 = load i32, i32* %t0, align 4
  %arrayidx3356 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1005 = load i32, i32* %arrayidx3356, align 4
  %add3357 = add i32 %1005, %1004
  store i32 %add3357, i32* %arrayidx3356, align 4
  %1006 = load i32, i32* %t0, align 4
  %1007 = load i32, i32* %t1, align 4
  %add3358 = add i32 %1006, %1007
  %arrayidx3359 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  store i32 %add3358, i32* %arrayidx3359, align 4
  %arrayidx3360 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1008 = load i32, i32* %arrayidx3360, align 4
  %conv3361 = zext i32 %1008 to i64
  %arrayidx3362 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1009 = load i32, i32* %arrayidx3362, align 4
  %conv3363 = zext i32 %1009 to i64
  %and3364 = and i64 %conv3363, 4294967295
  %shr3365 = lshr i64 %and3364, 6
  %arrayidx3366 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1010 = load i32, i32* %arrayidx3366, align 4
  %conv3367 = zext i32 %1010 to i64
  %shl3368 = shl i64 %conv3367, 26
  %or3369 = or i64 %shr3365, %shl3368
  %and3370 = and i64 %or3369, 4294967295
  %arrayidx3371 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1011 = load i32, i32* %arrayidx3371, align 4
  %conv3372 = zext i32 %1011 to i64
  %and3373 = and i64 %conv3372, 4294967295
  %shr3374 = lshr i64 %and3373, 11
  %arrayidx3375 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1012 = load i32, i32* %arrayidx3375, align 4
  %conv3376 = zext i32 %1012 to i64
  %shl3377 = shl i64 %conv3376, 21
  %or3378 = or i64 %shr3374, %shl3377
  %and3379 = and i64 %or3378, 4294967295
  %xor3380 = xor i64 %and3370, %and3379
  %arrayidx3381 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1013 = load i32, i32* %arrayidx3381, align 4
  %conv3382 = zext i32 %1013 to i64
  %and3383 = and i64 %conv3382, 4294967295
  %shr3384 = lshr i64 %and3383, 25
  %arrayidx3385 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1014 = load i32, i32* %arrayidx3385, align 4
  %conv3386 = zext i32 %1014 to i64
  %shl3387 = shl i64 %conv3386, 7
  %or3388 = or i64 %shr3384, %shl3387
  %and3389 = and i64 %or3388, 4294967295
  %xor3390 = xor i64 %xor3380, %and3389
  %add3391 = add i64 %conv3361, %xor3390
  %arrayidx3392 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1015 = load i32, i32* %arrayidx3392, align 4
  %arrayidx3393 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1016 = load i32, i32* %arrayidx3393, align 4
  %arrayidx3394 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1017 = load i32, i32* %arrayidx3394, align 4
  %arrayidx3395 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1018 = load i32, i32* %arrayidx3395, align 4
  %xor3396 = xor i32 %1017, %1018
  %and3397 = and i32 %1016, %xor3396
  %xor3398 = xor i32 %1015, %and3397
  %conv3399 = zext i32 %xor3398 to i64
  %add3400 = add i64 %add3391, %conv3399
  %add3401 = add i64 %add3400, 1695183700
  %arrayidx3402 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 36
  %1019 = load i32, i32* %arrayidx3402, align 4
  %conv3403 = zext i32 %1019 to i64
  %add3404 = add i64 %add3401, %conv3403
  %conv3405 = trunc i64 %add3404 to i32
  store i32 %conv3405, i32* %t0, align 4
  %arrayidx3406 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1020 = load i32, i32* %arrayidx3406, align 4
  %conv3407 = zext i32 %1020 to i64
  %and3408 = and i64 %conv3407, 4294967295
  %shr3409 = lshr i64 %and3408, 2
  %arrayidx3410 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1021 = load i32, i32* %arrayidx3410, align 4
  %conv3411 = zext i32 %1021 to i64
  %shl3412 = shl i64 %conv3411, 30
  %or3413 = or i64 %shr3409, %shl3412
  %and3414 = and i64 %or3413, 4294967295
  %arrayidx3415 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1022 = load i32, i32* %arrayidx3415, align 4
  %conv3416 = zext i32 %1022 to i64
  %and3417 = and i64 %conv3416, 4294967295
  %shr3418 = lshr i64 %and3417, 13
  %arrayidx3419 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1023 = load i32, i32* %arrayidx3419, align 4
  %conv3420 = zext i32 %1023 to i64
  %shl3421 = shl i64 %conv3420, 19
  %or3422 = or i64 %shr3418, %shl3421
  %and3423 = and i64 %or3422, 4294967295
  %xor3424 = xor i64 %and3414, %and3423
  %arrayidx3425 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1024 = load i32, i32* %arrayidx3425, align 4
  %conv3426 = zext i32 %1024 to i64
  %and3427 = and i64 %conv3426, 4294967295
  %shr3428 = lshr i64 %and3427, 22
  %arrayidx3429 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1025 = load i32, i32* %arrayidx3429, align 4
  %conv3430 = zext i32 %1025 to i64
  %shl3431 = shl i64 %conv3430, 10
  %or3432 = or i64 %shr3428, %shl3431
  %and3433 = and i64 %or3432, 4294967295
  %xor3434 = xor i64 %xor3424, %and3433
  %arrayidx3435 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1026 = load i32, i32* %arrayidx3435, align 4
  %arrayidx3436 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1027 = load i32, i32* %arrayidx3436, align 4
  %or3437 = or i32 %1026, %1027
  %arrayidx3438 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1028 = load i32, i32* %arrayidx3438, align 4
  %and3439 = and i32 %or3437, %1028
  %arrayidx3440 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1029 = load i32, i32* %arrayidx3440, align 4
  %arrayidx3441 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1030 = load i32, i32* %arrayidx3441, align 4
  %and3442 = and i32 %1029, %1030
  %or3443 = or i32 %and3439, %and3442
  %conv3444 = zext i32 %or3443 to i64
  %add3445 = add i64 %xor3434, %conv3444
  %conv3446 = trunc i64 %add3445 to i32
  store i32 %conv3446, i32* %t1, align 4
  %1031 = load i32, i32* %t0, align 4
  %arrayidx3447 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1032 = load i32, i32* %arrayidx3447, align 4
  %add3448 = add i32 %1032, %1031
  store i32 %add3448, i32* %arrayidx3447, align 4
  %1033 = load i32, i32* %t0, align 4
  %1034 = load i32, i32* %t1, align 4
  %add3449 = add i32 %1033, %1034
  %arrayidx3450 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  store i32 %add3449, i32* %arrayidx3450, align 4
  %arrayidx3451 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1035 = load i32, i32* %arrayidx3451, align 4
  %conv3452 = zext i32 %1035 to i64
  %arrayidx3453 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1036 = load i32, i32* %arrayidx3453, align 4
  %conv3454 = zext i32 %1036 to i64
  %and3455 = and i64 %conv3454, 4294967295
  %shr3456 = lshr i64 %and3455, 6
  %arrayidx3457 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1037 = load i32, i32* %arrayidx3457, align 4
  %conv3458 = zext i32 %1037 to i64
  %shl3459 = shl i64 %conv3458, 26
  %or3460 = or i64 %shr3456, %shl3459
  %and3461 = and i64 %or3460, 4294967295
  %arrayidx3462 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1038 = load i32, i32* %arrayidx3462, align 4
  %conv3463 = zext i32 %1038 to i64
  %and3464 = and i64 %conv3463, 4294967295
  %shr3465 = lshr i64 %and3464, 11
  %arrayidx3466 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1039 = load i32, i32* %arrayidx3466, align 4
  %conv3467 = zext i32 %1039 to i64
  %shl3468 = shl i64 %conv3467, 21
  %or3469 = or i64 %shr3465, %shl3468
  %and3470 = and i64 %or3469, 4294967295
  %xor3471 = xor i64 %and3461, %and3470
  %arrayidx3472 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1040 = load i32, i32* %arrayidx3472, align 4
  %conv3473 = zext i32 %1040 to i64
  %and3474 = and i64 %conv3473, 4294967295
  %shr3475 = lshr i64 %and3474, 25
  %arrayidx3476 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1041 = load i32, i32* %arrayidx3476, align 4
  %conv3477 = zext i32 %1041 to i64
  %shl3478 = shl i64 %conv3477, 7
  %or3479 = or i64 %shr3475, %shl3478
  %and3480 = and i64 %or3479, 4294967295
  %xor3481 = xor i64 %xor3471, %and3480
  %add3482 = add i64 %conv3452, %xor3481
  %arrayidx3483 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1042 = load i32, i32* %arrayidx3483, align 4
  %arrayidx3484 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1043 = load i32, i32* %arrayidx3484, align 4
  %arrayidx3485 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1044 = load i32, i32* %arrayidx3485, align 4
  %arrayidx3486 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1045 = load i32, i32* %arrayidx3486, align 4
  %xor3487 = xor i32 %1044, %1045
  %and3488 = and i32 %1043, %xor3487
  %xor3489 = xor i32 %1042, %and3488
  %conv3490 = zext i32 %xor3489 to i64
  %add3491 = add i64 %add3482, %conv3490
  %add3492 = add i64 %add3491, 1986661051
  %arrayidx3493 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 37
  %1046 = load i32, i32* %arrayidx3493, align 4
  %conv3494 = zext i32 %1046 to i64
  %add3495 = add i64 %add3492, %conv3494
  %conv3496 = trunc i64 %add3495 to i32
  store i32 %conv3496, i32* %t0, align 4
  %arrayidx3497 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1047 = load i32, i32* %arrayidx3497, align 4
  %conv3498 = zext i32 %1047 to i64
  %and3499 = and i64 %conv3498, 4294967295
  %shr3500 = lshr i64 %and3499, 2
  %arrayidx3501 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1048 = load i32, i32* %arrayidx3501, align 4
  %conv3502 = zext i32 %1048 to i64
  %shl3503 = shl i64 %conv3502, 30
  %or3504 = or i64 %shr3500, %shl3503
  %and3505 = and i64 %or3504, 4294967295
  %arrayidx3506 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1049 = load i32, i32* %arrayidx3506, align 4
  %conv3507 = zext i32 %1049 to i64
  %and3508 = and i64 %conv3507, 4294967295
  %shr3509 = lshr i64 %and3508, 13
  %arrayidx3510 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1050 = load i32, i32* %arrayidx3510, align 4
  %conv3511 = zext i32 %1050 to i64
  %shl3512 = shl i64 %conv3511, 19
  %or3513 = or i64 %shr3509, %shl3512
  %and3514 = and i64 %or3513, 4294967295
  %xor3515 = xor i64 %and3505, %and3514
  %arrayidx3516 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1051 = load i32, i32* %arrayidx3516, align 4
  %conv3517 = zext i32 %1051 to i64
  %and3518 = and i64 %conv3517, 4294967295
  %shr3519 = lshr i64 %and3518, 22
  %arrayidx3520 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1052 = load i32, i32* %arrayidx3520, align 4
  %conv3521 = zext i32 %1052 to i64
  %shl3522 = shl i64 %conv3521, 10
  %or3523 = or i64 %shr3519, %shl3522
  %and3524 = and i64 %or3523, 4294967295
  %xor3525 = xor i64 %xor3515, %and3524
  %arrayidx3526 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1053 = load i32, i32* %arrayidx3526, align 4
  %arrayidx3527 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1054 = load i32, i32* %arrayidx3527, align 4
  %or3528 = or i32 %1053, %1054
  %arrayidx3529 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1055 = load i32, i32* %arrayidx3529, align 4
  %and3530 = and i32 %or3528, %1055
  %arrayidx3531 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1056 = load i32, i32* %arrayidx3531, align 4
  %arrayidx3532 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1057 = load i32, i32* %arrayidx3532, align 4
  %and3533 = and i32 %1056, %1057
  %or3534 = or i32 %and3530, %and3533
  %conv3535 = zext i32 %or3534 to i64
  %add3536 = add i64 %xor3525, %conv3535
  %conv3537 = trunc i64 %add3536 to i32
  store i32 %conv3537, i32* %t1, align 4
  %1058 = load i32, i32* %t0, align 4
  %arrayidx3538 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1059 = load i32, i32* %arrayidx3538, align 4
  %add3539 = add i32 %1059, %1058
  store i32 %add3539, i32* %arrayidx3538, align 4
  %1060 = load i32, i32* %t0, align 4
  %1061 = load i32, i32* %t1, align 4
  %add3540 = add i32 %1060, %1061
  %arrayidx3541 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  store i32 %add3540, i32* %arrayidx3541, align 4
  %arrayidx3542 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1062 = load i32, i32* %arrayidx3542, align 4
  %conv3543 = zext i32 %1062 to i64
  %arrayidx3544 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1063 = load i32, i32* %arrayidx3544, align 4
  %conv3545 = zext i32 %1063 to i64
  %and3546 = and i64 %conv3545, 4294967295
  %shr3547 = lshr i64 %and3546, 6
  %arrayidx3548 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1064 = load i32, i32* %arrayidx3548, align 4
  %conv3549 = zext i32 %1064 to i64
  %shl3550 = shl i64 %conv3549, 26
  %or3551 = or i64 %shr3547, %shl3550
  %and3552 = and i64 %or3551, 4294967295
  %arrayidx3553 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1065 = load i32, i32* %arrayidx3553, align 4
  %conv3554 = zext i32 %1065 to i64
  %and3555 = and i64 %conv3554, 4294967295
  %shr3556 = lshr i64 %and3555, 11
  %arrayidx3557 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1066 = load i32, i32* %arrayidx3557, align 4
  %conv3558 = zext i32 %1066 to i64
  %shl3559 = shl i64 %conv3558, 21
  %or3560 = or i64 %shr3556, %shl3559
  %and3561 = and i64 %or3560, 4294967295
  %xor3562 = xor i64 %and3552, %and3561
  %arrayidx3563 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1067 = load i32, i32* %arrayidx3563, align 4
  %conv3564 = zext i32 %1067 to i64
  %and3565 = and i64 %conv3564, 4294967295
  %shr3566 = lshr i64 %and3565, 25
  %arrayidx3567 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1068 = load i32, i32* %arrayidx3567, align 4
  %conv3568 = zext i32 %1068 to i64
  %shl3569 = shl i64 %conv3568, 7
  %or3570 = or i64 %shr3566, %shl3569
  %and3571 = and i64 %or3570, 4294967295
  %xor3572 = xor i64 %xor3562, %and3571
  %add3573 = add i64 %conv3543, %xor3572
  %arrayidx3574 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1069 = load i32, i32* %arrayidx3574, align 4
  %arrayidx3575 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1070 = load i32, i32* %arrayidx3575, align 4
  %arrayidx3576 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1071 = load i32, i32* %arrayidx3576, align 4
  %arrayidx3577 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1072 = load i32, i32* %arrayidx3577, align 4
  %xor3578 = xor i32 %1071, %1072
  %and3579 = and i32 %1070, %xor3578
  %xor3580 = xor i32 %1069, %and3579
  %conv3581 = zext i32 %xor3580 to i64
  %add3582 = add i64 %add3573, %conv3581
  %add3583 = add i64 %add3582, 2177026350
  %arrayidx3584 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 38
  %1073 = load i32, i32* %arrayidx3584, align 4
  %conv3585 = zext i32 %1073 to i64
  %add3586 = add i64 %add3583, %conv3585
  %conv3587 = trunc i64 %add3586 to i32
  store i32 %conv3587, i32* %t0, align 4
  %arrayidx3588 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1074 = load i32, i32* %arrayidx3588, align 4
  %conv3589 = zext i32 %1074 to i64
  %and3590 = and i64 %conv3589, 4294967295
  %shr3591 = lshr i64 %and3590, 2
  %arrayidx3592 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1075 = load i32, i32* %arrayidx3592, align 4
  %conv3593 = zext i32 %1075 to i64
  %shl3594 = shl i64 %conv3593, 30
  %or3595 = or i64 %shr3591, %shl3594
  %and3596 = and i64 %or3595, 4294967295
  %arrayidx3597 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1076 = load i32, i32* %arrayidx3597, align 4
  %conv3598 = zext i32 %1076 to i64
  %and3599 = and i64 %conv3598, 4294967295
  %shr3600 = lshr i64 %and3599, 13
  %arrayidx3601 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1077 = load i32, i32* %arrayidx3601, align 4
  %conv3602 = zext i32 %1077 to i64
  %shl3603 = shl i64 %conv3602, 19
  %or3604 = or i64 %shr3600, %shl3603
  %and3605 = and i64 %or3604, 4294967295
  %xor3606 = xor i64 %and3596, %and3605
  %arrayidx3607 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1078 = load i32, i32* %arrayidx3607, align 4
  %conv3608 = zext i32 %1078 to i64
  %and3609 = and i64 %conv3608, 4294967295
  %shr3610 = lshr i64 %and3609, 22
  %arrayidx3611 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1079 = load i32, i32* %arrayidx3611, align 4
  %conv3612 = zext i32 %1079 to i64
  %shl3613 = shl i64 %conv3612, 10
  %or3614 = or i64 %shr3610, %shl3613
  %and3615 = and i64 %or3614, 4294967295
  %xor3616 = xor i64 %xor3606, %and3615
  %arrayidx3617 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1080 = load i32, i32* %arrayidx3617, align 4
  %arrayidx3618 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1081 = load i32, i32* %arrayidx3618, align 4
  %or3619 = or i32 %1080, %1081
  %arrayidx3620 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1082 = load i32, i32* %arrayidx3620, align 4
  %and3621 = and i32 %or3619, %1082
  %arrayidx3622 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1083 = load i32, i32* %arrayidx3622, align 4
  %arrayidx3623 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1084 = load i32, i32* %arrayidx3623, align 4
  %and3624 = and i32 %1083, %1084
  %or3625 = or i32 %and3621, %and3624
  %conv3626 = zext i32 %or3625 to i64
  %add3627 = add i64 %xor3616, %conv3626
  %conv3628 = trunc i64 %add3627 to i32
  store i32 %conv3628, i32* %t1, align 4
  %1085 = load i32, i32* %t0, align 4
  %arrayidx3629 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1086 = load i32, i32* %arrayidx3629, align 4
  %add3630 = add i32 %1086, %1085
  store i32 %add3630, i32* %arrayidx3629, align 4
  %1087 = load i32, i32* %t0, align 4
  %1088 = load i32, i32* %t1, align 4
  %add3631 = add i32 %1087, %1088
  %arrayidx3632 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  store i32 %add3631, i32* %arrayidx3632, align 4
  %arrayidx3633 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1089 = load i32, i32* %arrayidx3633, align 4
  %conv3634 = zext i32 %1089 to i64
  %arrayidx3635 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1090 = load i32, i32* %arrayidx3635, align 4
  %conv3636 = zext i32 %1090 to i64
  %and3637 = and i64 %conv3636, 4294967295
  %shr3638 = lshr i64 %and3637, 6
  %arrayidx3639 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1091 = load i32, i32* %arrayidx3639, align 4
  %conv3640 = zext i32 %1091 to i64
  %shl3641 = shl i64 %conv3640, 26
  %or3642 = or i64 %shr3638, %shl3641
  %and3643 = and i64 %or3642, 4294967295
  %arrayidx3644 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1092 = load i32, i32* %arrayidx3644, align 4
  %conv3645 = zext i32 %1092 to i64
  %and3646 = and i64 %conv3645, 4294967295
  %shr3647 = lshr i64 %and3646, 11
  %arrayidx3648 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1093 = load i32, i32* %arrayidx3648, align 4
  %conv3649 = zext i32 %1093 to i64
  %shl3650 = shl i64 %conv3649, 21
  %or3651 = or i64 %shr3647, %shl3650
  %and3652 = and i64 %or3651, 4294967295
  %xor3653 = xor i64 %and3643, %and3652
  %arrayidx3654 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1094 = load i32, i32* %arrayidx3654, align 4
  %conv3655 = zext i32 %1094 to i64
  %and3656 = and i64 %conv3655, 4294967295
  %shr3657 = lshr i64 %and3656, 25
  %arrayidx3658 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1095 = load i32, i32* %arrayidx3658, align 4
  %conv3659 = zext i32 %1095 to i64
  %shl3660 = shl i64 %conv3659, 7
  %or3661 = or i64 %shr3657, %shl3660
  %and3662 = and i64 %or3661, 4294967295
  %xor3663 = xor i64 %xor3653, %and3662
  %add3664 = add i64 %conv3634, %xor3663
  %arrayidx3665 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1096 = load i32, i32* %arrayidx3665, align 4
  %arrayidx3666 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1097 = load i32, i32* %arrayidx3666, align 4
  %arrayidx3667 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1098 = load i32, i32* %arrayidx3667, align 4
  %arrayidx3668 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1099 = load i32, i32* %arrayidx3668, align 4
  %xor3669 = xor i32 %1098, %1099
  %and3670 = and i32 %1097, %xor3669
  %xor3671 = xor i32 %1096, %and3670
  %conv3672 = zext i32 %xor3671 to i64
  %add3673 = add i64 %add3664, %conv3672
  %add3674 = add i64 %add3673, 2456956037
  %arrayidx3675 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 39
  %1100 = load i32, i32* %arrayidx3675, align 4
  %conv3676 = zext i32 %1100 to i64
  %add3677 = add i64 %add3674, %conv3676
  %conv3678 = trunc i64 %add3677 to i32
  store i32 %conv3678, i32* %t0, align 4
  %arrayidx3679 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1101 = load i32, i32* %arrayidx3679, align 4
  %conv3680 = zext i32 %1101 to i64
  %and3681 = and i64 %conv3680, 4294967295
  %shr3682 = lshr i64 %and3681, 2
  %arrayidx3683 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1102 = load i32, i32* %arrayidx3683, align 4
  %conv3684 = zext i32 %1102 to i64
  %shl3685 = shl i64 %conv3684, 30
  %or3686 = or i64 %shr3682, %shl3685
  %and3687 = and i64 %or3686, 4294967295
  %arrayidx3688 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1103 = load i32, i32* %arrayidx3688, align 4
  %conv3689 = zext i32 %1103 to i64
  %and3690 = and i64 %conv3689, 4294967295
  %shr3691 = lshr i64 %and3690, 13
  %arrayidx3692 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1104 = load i32, i32* %arrayidx3692, align 4
  %conv3693 = zext i32 %1104 to i64
  %shl3694 = shl i64 %conv3693, 19
  %or3695 = or i64 %shr3691, %shl3694
  %and3696 = and i64 %or3695, 4294967295
  %xor3697 = xor i64 %and3687, %and3696
  %arrayidx3698 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1105 = load i32, i32* %arrayidx3698, align 4
  %conv3699 = zext i32 %1105 to i64
  %and3700 = and i64 %conv3699, 4294967295
  %shr3701 = lshr i64 %and3700, 22
  %arrayidx3702 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1106 = load i32, i32* %arrayidx3702, align 4
  %conv3703 = zext i32 %1106 to i64
  %shl3704 = shl i64 %conv3703, 10
  %or3705 = or i64 %shr3701, %shl3704
  %and3706 = and i64 %or3705, 4294967295
  %xor3707 = xor i64 %xor3697, %and3706
  %arrayidx3708 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1107 = load i32, i32* %arrayidx3708, align 4
  %arrayidx3709 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1108 = load i32, i32* %arrayidx3709, align 4
  %or3710 = or i32 %1107, %1108
  %arrayidx3711 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1109 = load i32, i32* %arrayidx3711, align 4
  %and3712 = and i32 %or3710, %1109
  %arrayidx3713 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1110 = load i32, i32* %arrayidx3713, align 4
  %arrayidx3714 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1111 = load i32, i32* %arrayidx3714, align 4
  %and3715 = and i32 %1110, %1111
  %or3716 = or i32 %and3712, %and3715
  %conv3717 = zext i32 %or3716 to i64
  %add3718 = add i64 %xor3707, %conv3717
  %conv3719 = trunc i64 %add3718 to i32
  store i32 %conv3719, i32* %t1, align 4
  %1112 = load i32, i32* %t0, align 4
  %arrayidx3720 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1113 = load i32, i32* %arrayidx3720, align 4
  %add3721 = add i32 %1113, %1112
  store i32 %add3721, i32* %arrayidx3720, align 4
  %1114 = load i32, i32* %t0, align 4
  %1115 = load i32, i32* %t1, align 4
  %add3722 = add i32 %1114, %1115
  %arrayidx3723 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  store i32 %add3722, i32* %arrayidx3723, align 4
  %arrayidx3724 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1116 = load i32, i32* %arrayidx3724, align 4
  %conv3725 = zext i32 %1116 to i64
  %arrayidx3726 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1117 = load i32, i32* %arrayidx3726, align 4
  %conv3727 = zext i32 %1117 to i64
  %and3728 = and i64 %conv3727, 4294967295
  %shr3729 = lshr i64 %and3728, 6
  %arrayidx3730 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1118 = load i32, i32* %arrayidx3730, align 4
  %conv3731 = zext i32 %1118 to i64
  %shl3732 = shl i64 %conv3731, 26
  %or3733 = or i64 %shr3729, %shl3732
  %and3734 = and i64 %or3733, 4294967295
  %arrayidx3735 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1119 = load i32, i32* %arrayidx3735, align 4
  %conv3736 = zext i32 %1119 to i64
  %and3737 = and i64 %conv3736, 4294967295
  %shr3738 = lshr i64 %and3737, 11
  %arrayidx3739 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1120 = load i32, i32* %arrayidx3739, align 4
  %conv3740 = zext i32 %1120 to i64
  %shl3741 = shl i64 %conv3740, 21
  %or3742 = or i64 %shr3738, %shl3741
  %and3743 = and i64 %or3742, 4294967295
  %xor3744 = xor i64 %and3734, %and3743
  %arrayidx3745 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1121 = load i32, i32* %arrayidx3745, align 4
  %conv3746 = zext i32 %1121 to i64
  %and3747 = and i64 %conv3746, 4294967295
  %shr3748 = lshr i64 %and3747, 25
  %arrayidx3749 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1122 = load i32, i32* %arrayidx3749, align 4
  %conv3750 = zext i32 %1122 to i64
  %shl3751 = shl i64 %conv3750, 7
  %or3752 = or i64 %shr3748, %shl3751
  %and3753 = and i64 %or3752, 4294967295
  %xor3754 = xor i64 %xor3744, %and3753
  %add3755 = add i64 %conv3725, %xor3754
  %arrayidx3756 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1123 = load i32, i32* %arrayidx3756, align 4
  %arrayidx3757 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1124 = load i32, i32* %arrayidx3757, align 4
  %arrayidx3758 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1125 = load i32, i32* %arrayidx3758, align 4
  %arrayidx3759 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1126 = load i32, i32* %arrayidx3759, align 4
  %xor3760 = xor i32 %1125, %1126
  %and3761 = and i32 %1124, %xor3760
  %xor3762 = xor i32 %1123, %and3761
  %conv3763 = zext i32 %xor3762 to i64
  %add3764 = add i64 %add3755, %conv3763
  %add3765 = add i64 %add3764, 2730485921
  %arrayidx3766 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 40
  %1127 = load i32, i32* %arrayidx3766, align 4
  %conv3767 = zext i32 %1127 to i64
  %add3768 = add i64 %add3765, %conv3767
  %conv3769 = trunc i64 %add3768 to i32
  store i32 %conv3769, i32* %t0, align 4
  %arrayidx3770 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1128 = load i32, i32* %arrayidx3770, align 4
  %conv3771 = zext i32 %1128 to i64
  %and3772 = and i64 %conv3771, 4294967295
  %shr3773 = lshr i64 %and3772, 2
  %arrayidx3774 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1129 = load i32, i32* %arrayidx3774, align 4
  %conv3775 = zext i32 %1129 to i64
  %shl3776 = shl i64 %conv3775, 30
  %or3777 = or i64 %shr3773, %shl3776
  %and3778 = and i64 %or3777, 4294967295
  %arrayidx3779 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1130 = load i32, i32* %arrayidx3779, align 4
  %conv3780 = zext i32 %1130 to i64
  %and3781 = and i64 %conv3780, 4294967295
  %shr3782 = lshr i64 %and3781, 13
  %arrayidx3783 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1131 = load i32, i32* %arrayidx3783, align 4
  %conv3784 = zext i32 %1131 to i64
  %shl3785 = shl i64 %conv3784, 19
  %or3786 = or i64 %shr3782, %shl3785
  %and3787 = and i64 %or3786, 4294967295
  %xor3788 = xor i64 %and3778, %and3787
  %arrayidx3789 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1132 = load i32, i32* %arrayidx3789, align 4
  %conv3790 = zext i32 %1132 to i64
  %and3791 = and i64 %conv3790, 4294967295
  %shr3792 = lshr i64 %and3791, 22
  %arrayidx3793 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1133 = load i32, i32* %arrayidx3793, align 4
  %conv3794 = zext i32 %1133 to i64
  %shl3795 = shl i64 %conv3794, 10
  %or3796 = or i64 %shr3792, %shl3795
  %and3797 = and i64 %or3796, 4294967295
  %xor3798 = xor i64 %xor3788, %and3797
  %arrayidx3799 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1134 = load i32, i32* %arrayidx3799, align 4
  %arrayidx3800 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1135 = load i32, i32* %arrayidx3800, align 4
  %or3801 = or i32 %1134, %1135
  %arrayidx3802 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1136 = load i32, i32* %arrayidx3802, align 4
  %and3803 = and i32 %or3801, %1136
  %arrayidx3804 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1137 = load i32, i32* %arrayidx3804, align 4
  %arrayidx3805 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1138 = load i32, i32* %arrayidx3805, align 4
  %and3806 = and i32 %1137, %1138
  %or3807 = or i32 %and3803, %and3806
  %conv3808 = zext i32 %or3807 to i64
  %add3809 = add i64 %xor3798, %conv3808
  %conv3810 = trunc i64 %add3809 to i32
  store i32 %conv3810, i32* %t1, align 4
  %1139 = load i32, i32* %t0, align 4
  %arrayidx3811 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1140 = load i32, i32* %arrayidx3811, align 4
  %add3812 = add i32 %1140, %1139
  store i32 %add3812, i32* %arrayidx3811, align 4
  %1141 = load i32, i32* %t0, align 4
  %1142 = load i32, i32* %t1, align 4
  %add3813 = add i32 %1141, %1142
  %arrayidx3814 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  store i32 %add3813, i32* %arrayidx3814, align 4
  %arrayidx3815 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1143 = load i32, i32* %arrayidx3815, align 4
  %conv3816 = zext i32 %1143 to i64
  %arrayidx3817 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1144 = load i32, i32* %arrayidx3817, align 4
  %conv3818 = zext i32 %1144 to i64
  %and3819 = and i64 %conv3818, 4294967295
  %shr3820 = lshr i64 %and3819, 6
  %arrayidx3821 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1145 = load i32, i32* %arrayidx3821, align 4
  %conv3822 = zext i32 %1145 to i64
  %shl3823 = shl i64 %conv3822, 26
  %or3824 = or i64 %shr3820, %shl3823
  %and3825 = and i64 %or3824, 4294967295
  %arrayidx3826 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1146 = load i32, i32* %arrayidx3826, align 4
  %conv3827 = zext i32 %1146 to i64
  %and3828 = and i64 %conv3827, 4294967295
  %shr3829 = lshr i64 %and3828, 11
  %arrayidx3830 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1147 = load i32, i32* %arrayidx3830, align 4
  %conv3831 = zext i32 %1147 to i64
  %shl3832 = shl i64 %conv3831, 21
  %or3833 = or i64 %shr3829, %shl3832
  %and3834 = and i64 %or3833, 4294967295
  %xor3835 = xor i64 %and3825, %and3834
  %arrayidx3836 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1148 = load i32, i32* %arrayidx3836, align 4
  %conv3837 = zext i32 %1148 to i64
  %and3838 = and i64 %conv3837, 4294967295
  %shr3839 = lshr i64 %and3838, 25
  %arrayidx3840 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1149 = load i32, i32* %arrayidx3840, align 4
  %conv3841 = zext i32 %1149 to i64
  %shl3842 = shl i64 %conv3841, 7
  %or3843 = or i64 %shr3839, %shl3842
  %and3844 = and i64 %or3843, 4294967295
  %xor3845 = xor i64 %xor3835, %and3844
  %add3846 = add i64 %conv3816, %xor3845
  %arrayidx3847 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1150 = load i32, i32* %arrayidx3847, align 4
  %arrayidx3848 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1151 = load i32, i32* %arrayidx3848, align 4
  %arrayidx3849 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1152 = load i32, i32* %arrayidx3849, align 4
  %arrayidx3850 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1153 = load i32, i32* %arrayidx3850, align 4
  %xor3851 = xor i32 %1152, %1153
  %and3852 = and i32 %1151, %xor3851
  %xor3853 = xor i32 %1150, %and3852
  %conv3854 = zext i32 %xor3853 to i64
  %add3855 = add i64 %add3846, %conv3854
  %add3856 = add i64 %add3855, 2820302411
  %arrayidx3857 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 41
  %1154 = load i32, i32* %arrayidx3857, align 4
  %conv3858 = zext i32 %1154 to i64
  %add3859 = add i64 %add3856, %conv3858
  %conv3860 = trunc i64 %add3859 to i32
  store i32 %conv3860, i32* %t0, align 4
  %arrayidx3861 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1155 = load i32, i32* %arrayidx3861, align 4
  %conv3862 = zext i32 %1155 to i64
  %and3863 = and i64 %conv3862, 4294967295
  %shr3864 = lshr i64 %and3863, 2
  %arrayidx3865 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1156 = load i32, i32* %arrayidx3865, align 4
  %conv3866 = zext i32 %1156 to i64
  %shl3867 = shl i64 %conv3866, 30
  %or3868 = or i64 %shr3864, %shl3867
  %and3869 = and i64 %or3868, 4294967295
  %arrayidx3870 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1157 = load i32, i32* %arrayidx3870, align 4
  %conv3871 = zext i32 %1157 to i64
  %and3872 = and i64 %conv3871, 4294967295
  %shr3873 = lshr i64 %and3872, 13
  %arrayidx3874 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1158 = load i32, i32* %arrayidx3874, align 4
  %conv3875 = zext i32 %1158 to i64
  %shl3876 = shl i64 %conv3875, 19
  %or3877 = or i64 %shr3873, %shl3876
  %and3878 = and i64 %or3877, 4294967295
  %xor3879 = xor i64 %and3869, %and3878
  %arrayidx3880 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1159 = load i32, i32* %arrayidx3880, align 4
  %conv3881 = zext i32 %1159 to i64
  %and3882 = and i64 %conv3881, 4294967295
  %shr3883 = lshr i64 %and3882, 22
  %arrayidx3884 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1160 = load i32, i32* %arrayidx3884, align 4
  %conv3885 = zext i32 %1160 to i64
  %shl3886 = shl i64 %conv3885, 10
  %or3887 = or i64 %shr3883, %shl3886
  %and3888 = and i64 %or3887, 4294967295
  %xor3889 = xor i64 %xor3879, %and3888
  %arrayidx3890 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1161 = load i32, i32* %arrayidx3890, align 4
  %arrayidx3891 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1162 = load i32, i32* %arrayidx3891, align 4
  %or3892 = or i32 %1161, %1162
  %arrayidx3893 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1163 = load i32, i32* %arrayidx3893, align 4
  %and3894 = and i32 %or3892, %1163
  %arrayidx3895 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1164 = load i32, i32* %arrayidx3895, align 4
  %arrayidx3896 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1165 = load i32, i32* %arrayidx3896, align 4
  %and3897 = and i32 %1164, %1165
  %or3898 = or i32 %and3894, %and3897
  %conv3899 = zext i32 %or3898 to i64
  %add3900 = add i64 %xor3889, %conv3899
  %conv3901 = trunc i64 %add3900 to i32
  store i32 %conv3901, i32* %t1, align 4
  %1166 = load i32, i32* %t0, align 4
  %arrayidx3902 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1167 = load i32, i32* %arrayidx3902, align 4
  %add3903 = add i32 %1167, %1166
  store i32 %add3903, i32* %arrayidx3902, align 4
  %1168 = load i32, i32* %t0, align 4
  %1169 = load i32, i32* %t1, align 4
  %add3904 = add i32 %1168, %1169
  %arrayidx3905 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  store i32 %add3904, i32* %arrayidx3905, align 4
  %arrayidx3906 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1170 = load i32, i32* %arrayidx3906, align 4
  %conv3907 = zext i32 %1170 to i64
  %arrayidx3908 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1171 = load i32, i32* %arrayidx3908, align 4
  %conv3909 = zext i32 %1171 to i64
  %and3910 = and i64 %conv3909, 4294967295
  %shr3911 = lshr i64 %and3910, 6
  %arrayidx3912 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1172 = load i32, i32* %arrayidx3912, align 4
  %conv3913 = zext i32 %1172 to i64
  %shl3914 = shl i64 %conv3913, 26
  %or3915 = or i64 %shr3911, %shl3914
  %and3916 = and i64 %or3915, 4294967295
  %arrayidx3917 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1173 = load i32, i32* %arrayidx3917, align 4
  %conv3918 = zext i32 %1173 to i64
  %and3919 = and i64 %conv3918, 4294967295
  %shr3920 = lshr i64 %and3919, 11
  %arrayidx3921 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1174 = load i32, i32* %arrayidx3921, align 4
  %conv3922 = zext i32 %1174 to i64
  %shl3923 = shl i64 %conv3922, 21
  %or3924 = or i64 %shr3920, %shl3923
  %and3925 = and i64 %or3924, 4294967295
  %xor3926 = xor i64 %and3916, %and3925
  %arrayidx3927 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1175 = load i32, i32* %arrayidx3927, align 4
  %conv3928 = zext i32 %1175 to i64
  %and3929 = and i64 %conv3928, 4294967295
  %shr3930 = lshr i64 %and3929, 25
  %arrayidx3931 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1176 = load i32, i32* %arrayidx3931, align 4
  %conv3932 = zext i32 %1176 to i64
  %shl3933 = shl i64 %conv3932, 7
  %or3934 = or i64 %shr3930, %shl3933
  %and3935 = and i64 %or3934, 4294967295
  %xor3936 = xor i64 %xor3926, %and3935
  %add3937 = add i64 %conv3907, %xor3936
  %arrayidx3938 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1177 = load i32, i32* %arrayidx3938, align 4
  %arrayidx3939 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1178 = load i32, i32* %arrayidx3939, align 4
  %arrayidx3940 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1179 = load i32, i32* %arrayidx3940, align 4
  %arrayidx3941 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1180 = load i32, i32* %arrayidx3941, align 4
  %xor3942 = xor i32 %1179, %1180
  %and3943 = and i32 %1178, %xor3942
  %xor3944 = xor i32 %1177, %and3943
  %conv3945 = zext i32 %xor3944 to i64
  %add3946 = add i64 %add3937, %conv3945
  %add3947 = add i64 %add3946, 3259730800
  %arrayidx3948 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 42
  %1181 = load i32, i32* %arrayidx3948, align 4
  %conv3949 = zext i32 %1181 to i64
  %add3950 = add i64 %add3947, %conv3949
  %conv3951 = trunc i64 %add3950 to i32
  store i32 %conv3951, i32* %t0, align 4
  %arrayidx3952 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1182 = load i32, i32* %arrayidx3952, align 4
  %conv3953 = zext i32 %1182 to i64
  %and3954 = and i64 %conv3953, 4294967295
  %shr3955 = lshr i64 %and3954, 2
  %arrayidx3956 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1183 = load i32, i32* %arrayidx3956, align 4
  %conv3957 = zext i32 %1183 to i64
  %shl3958 = shl i64 %conv3957, 30
  %or3959 = or i64 %shr3955, %shl3958
  %and3960 = and i64 %or3959, 4294967295
  %arrayidx3961 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1184 = load i32, i32* %arrayidx3961, align 4
  %conv3962 = zext i32 %1184 to i64
  %and3963 = and i64 %conv3962, 4294967295
  %shr3964 = lshr i64 %and3963, 13
  %arrayidx3965 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1185 = load i32, i32* %arrayidx3965, align 4
  %conv3966 = zext i32 %1185 to i64
  %shl3967 = shl i64 %conv3966, 19
  %or3968 = or i64 %shr3964, %shl3967
  %and3969 = and i64 %or3968, 4294967295
  %xor3970 = xor i64 %and3960, %and3969
  %arrayidx3971 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1186 = load i32, i32* %arrayidx3971, align 4
  %conv3972 = zext i32 %1186 to i64
  %and3973 = and i64 %conv3972, 4294967295
  %shr3974 = lshr i64 %and3973, 22
  %arrayidx3975 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1187 = load i32, i32* %arrayidx3975, align 4
  %conv3976 = zext i32 %1187 to i64
  %shl3977 = shl i64 %conv3976, 10
  %or3978 = or i64 %shr3974, %shl3977
  %and3979 = and i64 %or3978, 4294967295
  %xor3980 = xor i64 %xor3970, %and3979
  %arrayidx3981 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1188 = load i32, i32* %arrayidx3981, align 4
  %arrayidx3982 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1189 = load i32, i32* %arrayidx3982, align 4
  %or3983 = or i32 %1188, %1189
  %arrayidx3984 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1190 = load i32, i32* %arrayidx3984, align 4
  %and3985 = and i32 %or3983, %1190
  %arrayidx3986 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1191 = load i32, i32* %arrayidx3986, align 4
  %arrayidx3987 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1192 = load i32, i32* %arrayidx3987, align 4
  %and3988 = and i32 %1191, %1192
  %or3989 = or i32 %and3985, %and3988
  %conv3990 = zext i32 %or3989 to i64
  %add3991 = add i64 %xor3980, %conv3990
  %conv3992 = trunc i64 %add3991 to i32
  store i32 %conv3992, i32* %t1, align 4
  %1193 = load i32, i32* %t0, align 4
  %arrayidx3993 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1194 = load i32, i32* %arrayidx3993, align 4
  %add3994 = add i32 %1194, %1193
  store i32 %add3994, i32* %arrayidx3993, align 4
  %1195 = load i32, i32* %t0, align 4
  %1196 = load i32, i32* %t1, align 4
  %add3995 = add i32 %1195, %1196
  %arrayidx3996 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  store i32 %add3995, i32* %arrayidx3996, align 4
  %arrayidx3997 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1197 = load i32, i32* %arrayidx3997, align 4
  %conv3998 = zext i32 %1197 to i64
  %arrayidx3999 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1198 = load i32, i32* %arrayidx3999, align 4
  %conv4000 = zext i32 %1198 to i64
  %and4001 = and i64 %conv4000, 4294967295
  %shr4002 = lshr i64 %and4001, 6
  %arrayidx4003 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1199 = load i32, i32* %arrayidx4003, align 4
  %conv4004 = zext i32 %1199 to i64
  %shl4005 = shl i64 %conv4004, 26
  %or4006 = or i64 %shr4002, %shl4005
  %and4007 = and i64 %or4006, 4294967295
  %arrayidx4008 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1200 = load i32, i32* %arrayidx4008, align 4
  %conv4009 = zext i32 %1200 to i64
  %and4010 = and i64 %conv4009, 4294967295
  %shr4011 = lshr i64 %and4010, 11
  %arrayidx4012 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1201 = load i32, i32* %arrayidx4012, align 4
  %conv4013 = zext i32 %1201 to i64
  %shl4014 = shl i64 %conv4013, 21
  %or4015 = or i64 %shr4011, %shl4014
  %and4016 = and i64 %or4015, 4294967295
  %xor4017 = xor i64 %and4007, %and4016
  %arrayidx4018 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1202 = load i32, i32* %arrayidx4018, align 4
  %conv4019 = zext i32 %1202 to i64
  %and4020 = and i64 %conv4019, 4294967295
  %shr4021 = lshr i64 %and4020, 25
  %arrayidx4022 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1203 = load i32, i32* %arrayidx4022, align 4
  %conv4023 = zext i32 %1203 to i64
  %shl4024 = shl i64 %conv4023, 7
  %or4025 = or i64 %shr4021, %shl4024
  %and4026 = and i64 %or4025, 4294967295
  %xor4027 = xor i64 %xor4017, %and4026
  %add4028 = add i64 %conv3998, %xor4027
  %arrayidx4029 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1204 = load i32, i32* %arrayidx4029, align 4
  %arrayidx4030 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1205 = load i32, i32* %arrayidx4030, align 4
  %arrayidx4031 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1206 = load i32, i32* %arrayidx4031, align 4
  %arrayidx4032 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1207 = load i32, i32* %arrayidx4032, align 4
  %xor4033 = xor i32 %1206, %1207
  %and4034 = and i32 %1205, %xor4033
  %xor4035 = xor i32 %1204, %and4034
  %conv4036 = zext i32 %xor4035 to i64
  %add4037 = add i64 %add4028, %conv4036
  %add4038 = add i64 %add4037, 3345764771
  %arrayidx4039 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 43
  %1208 = load i32, i32* %arrayidx4039, align 4
  %conv4040 = zext i32 %1208 to i64
  %add4041 = add i64 %add4038, %conv4040
  %conv4042 = trunc i64 %add4041 to i32
  store i32 %conv4042, i32* %t0, align 4
  %arrayidx4043 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1209 = load i32, i32* %arrayidx4043, align 4
  %conv4044 = zext i32 %1209 to i64
  %and4045 = and i64 %conv4044, 4294967295
  %shr4046 = lshr i64 %and4045, 2
  %arrayidx4047 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1210 = load i32, i32* %arrayidx4047, align 4
  %conv4048 = zext i32 %1210 to i64
  %shl4049 = shl i64 %conv4048, 30
  %or4050 = or i64 %shr4046, %shl4049
  %and4051 = and i64 %or4050, 4294967295
  %arrayidx4052 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1211 = load i32, i32* %arrayidx4052, align 4
  %conv4053 = zext i32 %1211 to i64
  %and4054 = and i64 %conv4053, 4294967295
  %shr4055 = lshr i64 %and4054, 13
  %arrayidx4056 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1212 = load i32, i32* %arrayidx4056, align 4
  %conv4057 = zext i32 %1212 to i64
  %shl4058 = shl i64 %conv4057, 19
  %or4059 = or i64 %shr4055, %shl4058
  %and4060 = and i64 %or4059, 4294967295
  %xor4061 = xor i64 %and4051, %and4060
  %arrayidx4062 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1213 = load i32, i32* %arrayidx4062, align 4
  %conv4063 = zext i32 %1213 to i64
  %and4064 = and i64 %conv4063, 4294967295
  %shr4065 = lshr i64 %and4064, 22
  %arrayidx4066 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1214 = load i32, i32* %arrayidx4066, align 4
  %conv4067 = zext i32 %1214 to i64
  %shl4068 = shl i64 %conv4067, 10
  %or4069 = or i64 %shr4065, %shl4068
  %and4070 = and i64 %or4069, 4294967295
  %xor4071 = xor i64 %xor4061, %and4070
  %arrayidx4072 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1215 = load i32, i32* %arrayidx4072, align 4
  %arrayidx4073 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1216 = load i32, i32* %arrayidx4073, align 4
  %or4074 = or i32 %1215, %1216
  %arrayidx4075 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1217 = load i32, i32* %arrayidx4075, align 4
  %and4076 = and i32 %or4074, %1217
  %arrayidx4077 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1218 = load i32, i32* %arrayidx4077, align 4
  %arrayidx4078 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1219 = load i32, i32* %arrayidx4078, align 4
  %and4079 = and i32 %1218, %1219
  %or4080 = or i32 %and4076, %and4079
  %conv4081 = zext i32 %or4080 to i64
  %add4082 = add i64 %xor4071, %conv4081
  %conv4083 = trunc i64 %add4082 to i32
  store i32 %conv4083, i32* %t1, align 4
  %1220 = load i32, i32* %t0, align 4
  %arrayidx4084 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1221 = load i32, i32* %arrayidx4084, align 4
  %add4085 = add i32 %1221, %1220
  store i32 %add4085, i32* %arrayidx4084, align 4
  %1222 = load i32, i32* %t0, align 4
  %1223 = load i32, i32* %t1, align 4
  %add4086 = add i32 %1222, %1223
  %arrayidx4087 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  store i32 %add4086, i32* %arrayidx4087, align 4
  %arrayidx4088 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1224 = load i32, i32* %arrayidx4088, align 4
  %conv4089 = zext i32 %1224 to i64
  %arrayidx4090 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1225 = load i32, i32* %arrayidx4090, align 4
  %conv4091 = zext i32 %1225 to i64
  %and4092 = and i64 %conv4091, 4294967295
  %shr4093 = lshr i64 %and4092, 6
  %arrayidx4094 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1226 = load i32, i32* %arrayidx4094, align 4
  %conv4095 = zext i32 %1226 to i64
  %shl4096 = shl i64 %conv4095, 26
  %or4097 = or i64 %shr4093, %shl4096
  %and4098 = and i64 %or4097, 4294967295
  %arrayidx4099 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1227 = load i32, i32* %arrayidx4099, align 4
  %conv4100 = zext i32 %1227 to i64
  %and4101 = and i64 %conv4100, 4294967295
  %shr4102 = lshr i64 %and4101, 11
  %arrayidx4103 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1228 = load i32, i32* %arrayidx4103, align 4
  %conv4104 = zext i32 %1228 to i64
  %shl4105 = shl i64 %conv4104, 21
  %or4106 = or i64 %shr4102, %shl4105
  %and4107 = and i64 %or4106, 4294967295
  %xor4108 = xor i64 %and4098, %and4107
  %arrayidx4109 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1229 = load i32, i32* %arrayidx4109, align 4
  %conv4110 = zext i32 %1229 to i64
  %and4111 = and i64 %conv4110, 4294967295
  %shr4112 = lshr i64 %and4111, 25
  %arrayidx4113 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1230 = load i32, i32* %arrayidx4113, align 4
  %conv4114 = zext i32 %1230 to i64
  %shl4115 = shl i64 %conv4114, 7
  %or4116 = or i64 %shr4112, %shl4115
  %and4117 = and i64 %or4116, 4294967295
  %xor4118 = xor i64 %xor4108, %and4117
  %add4119 = add i64 %conv4089, %xor4118
  %arrayidx4120 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1231 = load i32, i32* %arrayidx4120, align 4
  %arrayidx4121 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1232 = load i32, i32* %arrayidx4121, align 4
  %arrayidx4122 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1233 = load i32, i32* %arrayidx4122, align 4
  %arrayidx4123 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1234 = load i32, i32* %arrayidx4123, align 4
  %xor4124 = xor i32 %1233, %1234
  %and4125 = and i32 %1232, %xor4124
  %xor4126 = xor i32 %1231, %and4125
  %conv4127 = zext i32 %xor4126 to i64
  %add4128 = add i64 %add4119, %conv4127
  %add4129 = add i64 %add4128, 3516065817
  %arrayidx4130 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 44
  %1235 = load i32, i32* %arrayidx4130, align 4
  %conv4131 = zext i32 %1235 to i64
  %add4132 = add i64 %add4129, %conv4131
  %conv4133 = trunc i64 %add4132 to i32
  store i32 %conv4133, i32* %t0, align 4
  %arrayidx4134 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1236 = load i32, i32* %arrayidx4134, align 4
  %conv4135 = zext i32 %1236 to i64
  %and4136 = and i64 %conv4135, 4294967295
  %shr4137 = lshr i64 %and4136, 2
  %arrayidx4138 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1237 = load i32, i32* %arrayidx4138, align 4
  %conv4139 = zext i32 %1237 to i64
  %shl4140 = shl i64 %conv4139, 30
  %or4141 = or i64 %shr4137, %shl4140
  %and4142 = and i64 %or4141, 4294967295
  %arrayidx4143 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1238 = load i32, i32* %arrayidx4143, align 4
  %conv4144 = zext i32 %1238 to i64
  %and4145 = and i64 %conv4144, 4294967295
  %shr4146 = lshr i64 %and4145, 13
  %arrayidx4147 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1239 = load i32, i32* %arrayidx4147, align 4
  %conv4148 = zext i32 %1239 to i64
  %shl4149 = shl i64 %conv4148, 19
  %or4150 = or i64 %shr4146, %shl4149
  %and4151 = and i64 %or4150, 4294967295
  %xor4152 = xor i64 %and4142, %and4151
  %arrayidx4153 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1240 = load i32, i32* %arrayidx4153, align 4
  %conv4154 = zext i32 %1240 to i64
  %and4155 = and i64 %conv4154, 4294967295
  %shr4156 = lshr i64 %and4155, 22
  %arrayidx4157 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1241 = load i32, i32* %arrayidx4157, align 4
  %conv4158 = zext i32 %1241 to i64
  %shl4159 = shl i64 %conv4158, 10
  %or4160 = or i64 %shr4156, %shl4159
  %and4161 = and i64 %or4160, 4294967295
  %xor4162 = xor i64 %xor4152, %and4161
  %arrayidx4163 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1242 = load i32, i32* %arrayidx4163, align 4
  %arrayidx4164 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1243 = load i32, i32* %arrayidx4164, align 4
  %or4165 = or i32 %1242, %1243
  %arrayidx4166 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1244 = load i32, i32* %arrayidx4166, align 4
  %and4167 = and i32 %or4165, %1244
  %arrayidx4168 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1245 = load i32, i32* %arrayidx4168, align 4
  %arrayidx4169 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1246 = load i32, i32* %arrayidx4169, align 4
  %and4170 = and i32 %1245, %1246
  %or4171 = or i32 %and4167, %and4170
  %conv4172 = zext i32 %or4171 to i64
  %add4173 = add i64 %xor4162, %conv4172
  %conv4174 = trunc i64 %add4173 to i32
  store i32 %conv4174, i32* %t1, align 4
  %1247 = load i32, i32* %t0, align 4
  %arrayidx4175 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1248 = load i32, i32* %arrayidx4175, align 4
  %add4176 = add i32 %1248, %1247
  store i32 %add4176, i32* %arrayidx4175, align 4
  %1249 = load i32, i32* %t0, align 4
  %1250 = load i32, i32* %t1, align 4
  %add4177 = add i32 %1249, %1250
  %arrayidx4178 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  store i32 %add4177, i32* %arrayidx4178, align 4
  %arrayidx4179 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1251 = load i32, i32* %arrayidx4179, align 4
  %conv4180 = zext i32 %1251 to i64
  %arrayidx4181 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1252 = load i32, i32* %arrayidx4181, align 4
  %conv4182 = zext i32 %1252 to i64
  %and4183 = and i64 %conv4182, 4294967295
  %shr4184 = lshr i64 %and4183, 6
  %arrayidx4185 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1253 = load i32, i32* %arrayidx4185, align 4
  %conv4186 = zext i32 %1253 to i64
  %shl4187 = shl i64 %conv4186, 26
  %or4188 = or i64 %shr4184, %shl4187
  %and4189 = and i64 %or4188, 4294967295
  %arrayidx4190 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1254 = load i32, i32* %arrayidx4190, align 4
  %conv4191 = zext i32 %1254 to i64
  %and4192 = and i64 %conv4191, 4294967295
  %shr4193 = lshr i64 %and4192, 11
  %arrayidx4194 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1255 = load i32, i32* %arrayidx4194, align 4
  %conv4195 = zext i32 %1255 to i64
  %shl4196 = shl i64 %conv4195, 21
  %or4197 = or i64 %shr4193, %shl4196
  %and4198 = and i64 %or4197, 4294967295
  %xor4199 = xor i64 %and4189, %and4198
  %arrayidx4200 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1256 = load i32, i32* %arrayidx4200, align 4
  %conv4201 = zext i32 %1256 to i64
  %and4202 = and i64 %conv4201, 4294967295
  %shr4203 = lshr i64 %and4202, 25
  %arrayidx4204 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1257 = load i32, i32* %arrayidx4204, align 4
  %conv4205 = zext i32 %1257 to i64
  %shl4206 = shl i64 %conv4205, 7
  %or4207 = or i64 %shr4203, %shl4206
  %and4208 = and i64 %or4207, 4294967295
  %xor4209 = xor i64 %xor4199, %and4208
  %add4210 = add i64 %conv4180, %xor4209
  %arrayidx4211 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1258 = load i32, i32* %arrayidx4211, align 4
  %arrayidx4212 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1259 = load i32, i32* %arrayidx4212, align 4
  %arrayidx4213 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1260 = load i32, i32* %arrayidx4213, align 4
  %arrayidx4214 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1261 = load i32, i32* %arrayidx4214, align 4
  %xor4215 = xor i32 %1260, %1261
  %and4216 = and i32 %1259, %xor4215
  %xor4217 = xor i32 %1258, %and4216
  %conv4218 = zext i32 %xor4217 to i64
  %add4219 = add i64 %add4210, %conv4218
  %add4220 = add i64 %add4219, 3600352804
  %arrayidx4221 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 45
  %1262 = load i32, i32* %arrayidx4221, align 4
  %conv4222 = zext i32 %1262 to i64
  %add4223 = add i64 %add4220, %conv4222
  %conv4224 = trunc i64 %add4223 to i32
  store i32 %conv4224, i32* %t0, align 4
  %arrayidx4225 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1263 = load i32, i32* %arrayidx4225, align 4
  %conv4226 = zext i32 %1263 to i64
  %and4227 = and i64 %conv4226, 4294967295
  %shr4228 = lshr i64 %and4227, 2
  %arrayidx4229 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1264 = load i32, i32* %arrayidx4229, align 4
  %conv4230 = zext i32 %1264 to i64
  %shl4231 = shl i64 %conv4230, 30
  %or4232 = or i64 %shr4228, %shl4231
  %and4233 = and i64 %or4232, 4294967295
  %arrayidx4234 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1265 = load i32, i32* %arrayidx4234, align 4
  %conv4235 = zext i32 %1265 to i64
  %and4236 = and i64 %conv4235, 4294967295
  %shr4237 = lshr i64 %and4236, 13
  %arrayidx4238 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1266 = load i32, i32* %arrayidx4238, align 4
  %conv4239 = zext i32 %1266 to i64
  %shl4240 = shl i64 %conv4239, 19
  %or4241 = or i64 %shr4237, %shl4240
  %and4242 = and i64 %or4241, 4294967295
  %xor4243 = xor i64 %and4233, %and4242
  %arrayidx4244 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1267 = load i32, i32* %arrayidx4244, align 4
  %conv4245 = zext i32 %1267 to i64
  %and4246 = and i64 %conv4245, 4294967295
  %shr4247 = lshr i64 %and4246, 22
  %arrayidx4248 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1268 = load i32, i32* %arrayidx4248, align 4
  %conv4249 = zext i32 %1268 to i64
  %shl4250 = shl i64 %conv4249, 10
  %or4251 = or i64 %shr4247, %shl4250
  %and4252 = and i64 %or4251, 4294967295
  %xor4253 = xor i64 %xor4243, %and4252
  %arrayidx4254 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1269 = load i32, i32* %arrayidx4254, align 4
  %arrayidx4255 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1270 = load i32, i32* %arrayidx4255, align 4
  %or4256 = or i32 %1269, %1270
  %arrayidx4257 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1271 = load i32, i32* %arrayidx4257, align 4
  %and4258 = and i32 %or4256, %1271
  %arrayidx4259 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1272 = load i32, i32* %arrayidx4259, align 4
  %arrayidx4260 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1273 = load i32, i32* %arrayidx4260, align 4
  %and4261 = and i32 %1272, %1273
  %or4262 = or i32 %and4258, %and4261
  %conv4263 = zext i32 %or4262 to i64
  %add4264 = add i64 %xor4253, %conv4263
  %conv4265 = trunc i64 %add4264 to i32
  store i32 %conv4265, i32* %t1, align 4
  %1274 = load i32, i32* %t0, align 4
  %arrayidx4266 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1275 = load i32, i32* %arrayidx4266, align 4
  %add4267 = add i32 %1275, %1274
  store i32 %add4267, i32* %arrayidx4266, align 4
  %1276 = load i32, i32* %t0, align 4
  %1277 = load i32, i32* %t1, align 4
  %add4268 = add i32 %1276, %1277
  %arrayidx4269 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  store i32 %add4268, i32* %arrayidx4269, align 4
  %arrayidx4270 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1278 = load i32, i32* %arrayidx4270, align 4
  %conv4271 = zext i32 %1278 to i64
  %arrayidx4272 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1279 = load i32, i32* %arrayidx4272, align 4
  %conv4273 = zext i32 %1279 to i64
  %and4274 = and i64 %conv4273, 4294967295
  %shr4275 = lshr i64 %and4274, 6
  %arrayidx4276 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1280 = load i32, i32* %arrayidx4276, align 4
  %conv4277 = zext i32 %1280 to i64
  %shl4278 = shl i64 %conv4277, 26
  %or4279 = or i64 %shr4275, %shl4278
  %and4280 = and i64 %or4279, 4294967295
  %arrayidx4281 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1281 = load i32, i32* %arrayidx4281, align 4
  %conv4282 = zext i32 %1281 to i64
  %and4283 = and i64 %conv4282, 4294967295
  %shr4284 = lshr i64 %and4283, 11
  %arrayidx4285 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1282 = load i32, i32* %arrayidx4285, align 4
  %conv4286 = zext i32 %1282 to i64
  %shl4287 = shl i64 %conv4286, 21
  %or4288 = or i64 %shr4284, %shl4287
  %and4289 = and i64 %or4288, 4294967295
  %xor4290 = xor i64 %and4280, %and4289
  %arrayidx4291 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1283 = load i32, i32* %arrayidx4291, align 4
  %conv4292 = zext i32 %1283 to i64
  %and4293 = and i64 %conv4292, 4294967295
  %shr4294 = lshr i64 %and4293, 25
  %arrayidx4295 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1284 = load i32, i32* %arrayidx4295, align 4
  %conv4296 = zext i32 %1284 to i64
  %shl4297 = shl i64 %conv4296, 7
  %or4298 = or i64 %shr4294, %shl4297
  %and4299 = and i64 %or4298, 4294967295
  %xor4300 = xor i64 %xor4290, %and4299
  %add4301 = add i64 %conv4271, %xor4300
  %arrayidx4302 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1285 = load i32, i32* %arrayidx4302, align 4
  %arrayidx4303 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1286 = load i32, i32* %arrayidx4303, align 4
  %arrayidx4304 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1287 = load i32, i32* %arrayidx4304, align 4
  %arrayidx4305 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1288 = load i32, i32* %arrayidx4305, align 4
  %xor4306 = xor i32 %1287, %1288
  %and4307 = and i32 %1286, %xor4306
  %xor4308 = xor i32 %1285, %and4307
  %conv4309 = zext i32 %xor4308 to i64
  %add4310 = add i64 %add4301, %conv4309
  %add4311 = add i64 %add4310, 4094571909
  %arrayidx4312 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 46
  %1289 = load i32, i32* %arrayidx4312, align 4
  %conv4313 = zext i32 %1289 to i64
  %add4314 = add i64 %add4311, %conv4313
  %conv4315 = trunc i64 %add4314 to i32
  store i32 %conv4315, i32* %t0, align 4
  %arrayidx4316 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1290 = load i32, i32* %arrayidx4316, align 4
  %conv4317 = zext i32 %1290 to i64
  %and4318 = and i64 %conv4317, 4294967295
  %shr4319 = lshr i64 %and4318, 2
  %arrayidx4320 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1291 = load i32, i32* %arrayidx4320, align 4
  %conv4321 = zext i32 %1291 to i64
  %shl4322 = shl i64 %conv4321, 30
  %or4323 = or i64 %shr4319, %shl4322
  %and4324 = and i64 %or4323, 4294967295
  %arrayidx4325 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1292 = load i32, i32* %arrayidx4325, align 4
  %conv4326 = zext i32 %1292 to i64
  %and4327 = and i64 %conv4326, 4294967295
  %shr4328 = lshr i64 %and4327, 13
  %arrayidx4329 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1293 = load i32, i32* %arrayidx4329, align 4
  %conv4330 = zext i32 %1293 to i64
  %shl4331 = shl i64 %conv4330, 19
  %or4332 = or i64 %shr4328, %shl4331
  %and4333 = and i64 %or4332, 4294967295
  %xor4334 = xor i64 %and4324, %and4333
  %arrayidx4335 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1294 = load i32, i32* %arrayidx4335, align 4
  %conv4336 = zext i32 %1294 to i64
  %and4337 = and i64 %conv4336, 4294967295
  %shr4338 = lshr i64 %and4337, 22
  %arrayidx4339 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1295 = load i32, i32* %arrayidx4339, align 4
  %conv4340 = zext i32 %1295 to i64
  %shl4341 = shl i64 %conv4340, 10
  %or4342 = or i64 %shr4338, %shl4341
  %and4343 = and i64 %or4342, 4294967295
  %xor4344 = xor i64 %xor4334, %and4343
  %arrayidx4345 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1296 = load i32, i32* %arrayidx4345, align 4
  %arrayidx4346 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1297 = load i32, i32* %arrayidx4346, align 4
  %or4347 = or i32 %1296, %1297
  %arrayidx4348 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1298 = load i32, i32* %arrayidx4348, align 4
  %and4349 = and i32 %or4347, %1298
  %arrayidx4350 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1299 = load i32, i32* %arrayidx4350, align 4
  %arrayidx4351 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1300 = load i32, i32* %arrayidx4351, align 4
  %and4352 = and i32 %1299, %1300
  %or4353 = or i32 %and4349, %and4352
  %conv4354 = zext i32 %or4353 to i64
  %add4355 = add i64 %xor4344, %conv4354
  %conv4356 = trunc i64 %add4355 to i32
  store i32 %conv4356, i32* %t1, align 4
  %1301 = load i32, i32* %t0, align 4
  %arrayidx4357 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1302 = load i32, i32* %arrayidx4357, align 4
  %add4358 = add i32 %1302, %1301
  store i32 %add4358, i32* %arrayidx4357, align 4
  %1303 = load i32, i32* %t0, align 4
  %1304 = load i32, i32* %t1, align 4
  %add4359 = add i32 %1303, %1304
  %arrayidx4360 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  store i32 %add4359, i32* %arrayidx4360, align 4
  %arrayidx4361 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1305 = load i32, i32* %arrayidx4361, align 4
  %conv4362 = zext i32 %1305 to i64
  %arrayidx4363 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1306 = load i32, i32* %arrayidx4363, align 4
  %conv4364 = zext i32 %1306 to i64
  %and4365 = and i64 %conv4364, 4294967295
  %shr4366 = lshr i64 %and4365, 6
  %arrayidx4367 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1307 = load i32, i32* %arrayidx4367, align 4
  %conv4368 = zext i32 %1307 to i64
  %shl4369 = shl i64 %conv4368, 26
  %or4370 = or i64 %shr4366, %shl4369
  %and4371 = and i64 %or4370, 4294967295
  %arrayidx4372 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1308 = load i32, i32* %arrayidx4372, align 4
  %conv4373 = zext i32 %1308 to i64
  %and4374 = and i64 %conv4373, 4294967295
  %shr4375 = lshr i64 %and4374, 11
  %arrayidx4376 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1309 = load i32, i32* %arrayidx4376, align 4
  %conv4377 = zext i32 %1309 to i64
  %shl4378 = shl i64 %conv4377, 21
  %or4379 = or i64 %shr4375, %shl4378
  %and4380 = and i64 %or4379, 4294967295
  %xor4381 = xor i64 %and4371, %and4380
  %arrayidx4382 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1310 = load i32, i32* %arrayidx4382, align 4
  %conv4383 = zext i32 %1310 to i64
  %and4384 = and i64 %conv4383, 4294967295
  %shr4385 = lshr i64 %and4384, 25
  %arrayidx4386 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1311 = load i32, i32* %arrayidx4386, align 4
  %conv4387 = zext i32 %1311 to i64
  %shl4388 = shl i64 %conv4387, 7
  %or4389 = or i64 %shr4385, %shl4388
  %and4390 = and i64 %or4389, 4294967295
  %xor4391 = xor i64 %xor4381, %and4390
  %add4392 = add i64 %conv4362, %xor4391
  %arrayidx4393 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1312 = load i32, i32* %arrayidx4393, align 4
  %arrayidx4394 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1313 = load i32, i32* %arrayidx4394, align 4
  %arrayidx4395 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1314 = load i32, i32* %arrayidx4395, align 4
  %arrayidx4396 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1315 = load i32, i32* %arrayidx4396, align 4
  %xor4397 = xor i32 %1314, %1315
  %and4398 = and i32 %1313, %xor4397
  %xor4399 = xor i32 %1312, %and4398
  %conv4400 = zext i32 %xor4399 to i64
  %add4401 = add i64 %add4392, %conv4400
  %add4402 = add i64 %add4401, 275423344
  %arrayidx4403 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 47
  %1316 = load i32, i32* %arrayidx4403, align 4
  %conv4404 = zext i32 %1316 to i64
  %add4405 = add i64 %add4402, %conv4404
  %conv4406 = trunc i64 %add4405 to i32
  store i32 %conv4406, i32* %t0, align 4
  %arrayidx4407 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1317 = load i32, i32* %arrayidx4407, align 4
  %conv4408 = zext i32 %1317 to i64
  %and4409 = and i64 %conv4408, 4294967295
  %shr4410 = lshr i64 %and4409, 2
  %arrayidx4411 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1318 = load i32, i32* %arrayidx4411, align 4
  %conv4412 = zext i32 %1318 to i64
  %shl4413 = shl i64 %conv4412, 30
  %or4414 = or i64 %shr4410, %shl4413
  %and4415 = and i64 %or4414, 4294967295
  %arrayidx4416 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1319 = load i32, i32* %arrayidx4416, align 4
  %conv4417 = zext i32 %1319 to i64
  %and4418 = and i64 %conv4417, 4294967295
  %shr4419 = lshr i64 %and4418, 13
  %arrayidx4420 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1320 = load i32, i32* %arrayidx4420, align 4
  %conv4421 = zext i32 %1320 to i64
  %shl4422 = shl i64 %conv4421, 19
  %or4423 = or i64 %shr4419, %shl4422
  %and4424 = and i64 %or4423, 4294967295
  %xor4425 = xor i64 %and4415, %and4424
  %arrayidx4426 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1321 = load i32, i32* %arrayidx4426, align 4
  %conv4427 = zext i32 %1321 to i64
  %and4428 = and i64 %conv4427, 4294967295
  %shr4429 = lshr i64 %and4428, 22
  %arrayidx4430 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1322 = load i32, i32* %arrayidx4430, align 4
  %conv4431 = zext i32 %1322 to i64
  %shl4432 = shl i64 %conv4431, 10
  %or4433 = or i64 %shr4429, %shl4432
  %and4434 = and i64 %or4433, 4294967295
  %xor4435 = xor i64 %xor4425, %and4434
  %arrayidx4436 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1323 = load i32, i32* %arrayidx4436, align 4
  %arrayidx4437 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1324 = load i32, i32* %arrayidx4437, align 4
  %or4438 = or i32 %1323, %1324
  %arrayidx4439 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1325 = load i32, i32* %arrayidx4439, align 4
  %and4440 = and i32 %or4438, %1325
  %arrayidx4441 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1326 = load i32, i32* %arrayidx4441, align 4
  %arrayidx4442 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1327 = load i32, i32* %arrayidx4442, align 4
  %and4443 = and i32 %1326, %1327
  %or4444 = or i32 %and4440, %and4443
  %conv4445 = zext i32 %or4444 to i64
  %add4446 = add i64 %xor4435, %conv4445
  %conv4447 = trunc i64 %add4446 to i32
  store i32 %conv4447, i32* %t1, align 4
  %1328 = load i32, i32* %t0, align 4
  %arrayidx4448 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1329 = load i32, i32* %arrayidx4448, align 4
  %add4449 = add i32 %1329, %1328
  store i32 %add4449, i32* %arrayidx4448, align 4
  %1330 = load i32, i32* %t0, align 4
  %1331 = load i32, i32* %t1, align 4
  %add4450 = add i32 %1330, %1331
  %arrayidx4451 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  store i32 %add4450, i32* %arrayidx4451, align 4
  %arrayidx4452 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1332 = load i32, i32* %arrayidx4452, align 4
  %conv4453 = zext i32 %1332 to i64
  %arrayidx4454 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1333 = load i32, i32* %arrayidx4454, align 4
  %conv4455 = zext i32 %1333 to i64
  %and4456 = and i64 %conv4455, 4294967295
  %shr4457 = lshr i64 %and4456, 6
  %arrayidx4458 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1334 = load i32, i32* %arrayidx4458, align 4
  %conv4459 = zext i32 %1334 to i64
  %shl4460 = shl i64 %conv4459, 26
  %or4461 = or i64 %shr4457, %shl4460
  %and4462 = and i64 %or4461, 4294967295
  %arrayidx4463 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1335 = load i32, i32* %arrayidx4463, align 4
  %conv4464 = zext i32 %1335 to i64
  %and4465 = and i64 %conv4464, 4294967295
  %shr4466 = lshr i64 %and4465, 11
  %arrayidx4467 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1336 = load i32, i32* %arrayidx4467, align 4
  %conv4468 = zext i32 %1336 to i64
  %shl4469 = shl i64 %conv4468, 21
  %or4470 = or i64 %shr4466, %shl4469
  %and4471 = and i64 %or4470, 4294967295
  %xor4472 = xor i64 %and4462, %and4471
  %arrayidx4473 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1337 = load i32, i32* %arrayidx4473, align 4
  %conv4474 = zext i32 %1337 to i64
  %and4475 = and i64 %conv4474, 4294967295
  %shr4476 = lshr i64 %and4475, 25
  %arrayidx4477 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1338 = load i32, i32* %arrayidx4477, align 4
  %conv4478 = zext i32 %1338 to i64
  %shl4479 = shl i64 %conv4478, 7
  %or4480 = or i64 %shr4476, %shl4479
  %and4481 = and i64 %or4480, 4294967295
  %xor4482 = xor i64 %xor4472, %and4481
  %add4483 = add i64 %conv4453, %xor4482
  %arrayidx4484 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1339 = load i32, i32* %arrayidx4484, align 4
  %arrayidx4485 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1340 = load i32, i32* %arrayidx4485, align 4
  %arrayidx4486 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1341 = load i32, i32* %arrayidx4486, align 4
  %arrayidx4487 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1342 = load i32, i32* %arrayidx4487, align 4
  %xor4488 = xor i32 %1341, %1342
  %and4489 = and i32 %1340, %xor4488
  %xor4490 = xor i32 %1339, %and4489
  %conv4491 = zext i32 %xor4490 to i64
  %add4492 = add i64 %add4483, %conv4491
  %add4493 = add i64 %add4492, 430227734
  %arrayidx4494 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 48
  %1343 = load i32, i32* %arrayidx4494, align 4
  %conv4495 = zext i32 %1343 to i64
  %add4496 = add i64 %add4493, %conv4495
  %conv4497 = trunc i64 %add4496 to i32
  store i32 %conv4497, i32* %t0, align 4
  %arrayidx4498 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1344 = load i32, i32* %arrayidx4498, align 4
  %conv4499 = zext i32 %1344 to i64
  %and4500 = and i64 %conv4499, 4294967295
  %shr4501 = lshr i64 %and4500, 2
  %arrayidx4502 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1345 = load i32, i32* %arrayidx4502, align 4
  %conv4503 = zext i32 %1345 to i64
  %shl4504 = shl i64 %conv4503, 30
  %or4505 = or i64 %shr4501, %shl4504
  %and4506 = and i64 %or4505, 4294967295
  %arrayidx4507 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1346 = load i32, i32* %arrayidx4507, align 4
  %conv4508 = zext i32 %1346 to i64
  %and4509 = and i64 %conv4508, 4294967295
  %shr4510 = lshr i64 %and4509, 13
  %arrayidx4511 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1347 = load i32, i32* %arrayidx4511, align 4
  %conv4512 = zext i32 %1347 to i64
  %shl4513 = shl i64 %conv4512, 19
  %or4514 = or i64 %shr4510, %shl4513
  %and4515 = and i64 %or4514, 4294967295
  %xor4516 = xor i64 %and4506, %and4515
  %arrayidx4517 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1348 = load i32, i32* %arrayidx4517, align 4
  %conv4518 = zext i32 %1348 to i64
  %and4519 = and i64 %conv4518, 4294967295
  %shr4520 = lshr i64 %and4519, 22
  %arrayidx4521 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1349 = load i32, i32* %arrayidx4521, align 4
  %conv4522 = zext i32 %1349 to i64
  %shl4523 = shl i64 %conv4522, 10
  %or4524 = or i64 %shr4520, %shl4523
  %and4525 = and i64 %or4524, 4294967295
  %xor4526 = xor i64 %xor4516, %and4525
  %arrayidx4527 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1350 = load i32, i32* %arrayidx4527, align 4
  %arrayidx4528 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1351 = load i32, i32* %arrayidx4528, align 4
  %or4529 = or i32 %1350, %1351
  %arrayidx4530 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1352 = load i32, i32* %arrayidx4530, align 4
  %and4531 = and i32 %or4529, %1352
  %arrayidx4532 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1353 = load i32, i32* %arrayidx4532, align 4
  %arrayidx4533 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1354 = load i32, i32* %arrayidx4533, align 4
  %and4534 = and i32 %1353, %1354
  %or4535 = or i32 %and4531, %and4534
  %conv4536 = zext i32 %or4535 to i64
  %add4537 = add i64 %xor4526, %conv4536
  %conv4538 = trunc i64 %add4537 to i32
  store i32 %conv4538, i32* %t1, align 4
  %1355 = load i32, i32* %t0, align 4
  %arrayidx4539 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1356 = load i32, i32* %arrayidx4539, align 4
  %add4540 = add i32 %1356, %1355
  store i32 %add4540, i32* %arrayidx4539, align 4
  %1357 = load i32, i32* %t0, align 4
  %1358 = load i32, i32* %t1, align 4
  %add4541 = add i32 %1357, %1358
  %arrayidx4542 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  store i32 %add4541, i32* %arrayidx4542, align 4
  %arrayidx4543 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1359 = load i32, i32* %arrayidx4543, align 4
  %conv4544 = zext i32 %1359 to i64
  %arrayidx4545 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1360 = load i32, i32* %arrayidx4545, align 4
  %conv4546 = zext i32 %1360 to i64
  %and4547 = and i64 %conv4546, 4294967295
  %shr4548 = lshr i64 %and4547, 6
  %arrayidx4549 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1361 = load i32, i32* %arrayidx4549, align 4
  %conv4550 = zext i32 %1361 to i64
  %shl4551 = shl i64 %conv4550, 26
  %or4552 = or i64 %shr4548, %shl4551
  %and4553 = and i64 %or4552, 4294967295
  %arrayidx4554 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1362 = load i32, i32* %arrayidx4554, align 4
  %conv4555 = zext i32 %1362 to i64
  %and4556 = and i64 %conv4555, 4294967295
  %shr4557 = lshr i64 %and4556, 11
  %arrayidx4558 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1363 = load i32, i32* %arrayidx4558, align 4
  %conv4559 = zext i32 %1363 to i64
  %shl4560 = shl i64 %conv4559, 21
  %or4561 = or i64 %shr4557, %shl4560
  %and4562 = and i64 %or4561, 4294967295
  %xor4563 = xor i64 %and4553, %and4562
  %arrayidx4564 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1364 = load i32, i32* %arrayidx4564, align 4
  %conv4565 = zext i32 %1364 to i64
  %and4566 = and i64 %conv4565, 4294967295
  %shr4567 = lshr i64 %and4566, 25
  %arrayidx4568 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1365 = load i32, i32* %arrayidx4568, align 4
  %conv4569 = zext i32 %1365 to i64
  %shl4570 = shl i64 %conv4569, 7
  %or4571 = or i64 %shr4567, %shl4570
  %and4572 = and i64 %or4571, 4294967295
  %xor4573 = xor i64 %xor4563, %and4572
  %add4574 = add i64 %conv4544, %xor4573
  %arrayidx4575 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1366 = load i32, i32* %arrayidx4575, align 4
  %arrayidx4576 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1367 = load i32, i32* %arrayidx4576, align 4
  %arrayidx4577 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1368 = load i32, i32* %arrayidx4577, align 4
  %arrayidx4578 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1369 = load i32, i32* %arrayidx4578, align 4
  %xor4579 = xor i32 %1368, %1369
  %and4580 = and i32 %1367, %xor4579
  %xor4581 = xor i32 %1366, %and4580
  %conv4582 = zext i32 %xor4581 to i64
  %add4583 = add i64 %add4574, %conv4582
  %add4584 = add i64 %add4583, 506948616
  %arrayidx4585 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 49
  %1370 = load i32, i32* %arrayidx4585, align 4
  %conv4586 = zext i32 %1370 to i64
  %add4587 = add i64 %add4584, %conv4586
  %conv4588 = trunc i64 %add4587 to i32
  store i32 %conv4588, i32* %t0, align 4
  %arrayidx4589 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1371 = load i32, i32* %arrayidx4589, align 4
  %conv4590 = zext i32 %1371 to i64
  %and4591 = and i64 %conv4590, 4294967295
  %shr4592 = lshr i64 %and4591, 2
  %arrayidx4593 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1372 = load i32, i32* %arrayidx4593, align 4
  %conv4594 = zext i32 %1372 to i64
  %shl4595 = shl i64 %conv4594, 30
  %or4596 = or i64 %shr4592, %shl4595
  %and4597 = and i64 %or4596, 4294967295
  %arrayidx4598 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1373 = load i32, i32* %arrayidx4598, align 4
  %conv4599 = zext i32 %1373 to i64
  %and4600 = and i64 %conv4599, 4294967295
  %shr4601 = lshr i64 %and4600, 13
  %arrayidx4602 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1374 = load i32, i32* %arrayidx4602, align 4
  %conv4603 = zext i32 %1374 to i64
  %shl4604 = shl i64 %conv4603, 19
  %or4605 = or i64 %shr4601, %shl4604
  %and4606 = and i64 %or4605, 4294967295
  %xor4607 = xor i64 %and4597, %and4606
  %arrayidx4608 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1375 = load i32, i32* %arrayidx4608, align 4
  %conv4609 = zext i32 %1375 to i64
  %and4610 = and i64 %conv4609, 4294967295
  %shr4611 = lshr i64 %and4610, 22
  %arrayidx4612 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1376 = load i32, i32* %arrayidx4612, align 4
  %conv4613 = zext i32 %1376 to i64
  %shl4614 = shl i64 %conv4613, 10
  %or4615 = or i64 %shr4611, %shl4614
  %and4616 = and i64 %or4615, 4294967295
  %xor4617 = xor i64 %xor4607, %and4616
  %arrayidx4618 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1377 = load i32, i32* %arrayidx4618, align 4
  %arrayidx4619 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1378 = load i32, i32* %arrayidx4619, align 4
  %or4620 = or i32 %1377, %1378
  %arrayidx4621 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1379 = load i32, i32* %arrayidx4621, align 4
  %and4622 = and i32 %or4620, %1379
  %arrayidx4623 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1380 = load i32, i32* %arrayidx4623, align 4
  %arrayidx4624 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1381 = load i32, i32* %arrayidx4624, align 4
  %and4625 = and i32 %1380, %1381
  %or4626 = or i32 %and4622, %and4625
  %conv4627 = zext i32 %or4626 to i64
  %add4628 = add i64 %xor4617, %conv4627
  %conv4629 = trunc i64 %add4628 to i32
  store i32 %conv4629, i32* %t1, align 4
  %1382 = load i32, i32* %t0, align 4
  %arrayidx4630 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1383 = load i32, i32* %arrayidx4630, align 4
  %add4631 = add i32 %1383, %1382
  store i32 %add4631, i32* %arrayidx4630, align 4
  %1384 = load i32, i32* %t0, align 4
  %1385 = load i32, i32* %t1, align 4
  %add4632 = add i32 %1384, %1385
  %arrayidx4633 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  store i32 %add4632, i32* %arrayidx4633, align 4
  %arrayidx4634 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1386 = load i32, i32* %arrayidx4634, align 4
  %conv4635 = zext i32 %1386 to i64
  %arrayidx4636 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1387 = load i32, i32* %arrayidx4636, align 4
  %conv4637 = zext i32 %1387 to i64
  %and4638 = and i64 %conv4637, 4294967295
  %shr4639 = lshr i64 %and4638, 6
  %arrayidx4640 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1388 = load i32, i32* %arrayidx4640, align 4
  %conv4641 = zext i32 %1388 to i64
  %shl4642 = shl i64 %conv4641, 26
  %or4643 = or i64 %shr4639, %shl4642
  %and4644 = and i64 %or4643, 4294967295
  %arrayidx4645 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1389 = load i32, i32* %arrayidx4645, align 4
  %conv4646 = zext i32 %1389 to i64
  %and4647 = and i64 %conv4646, 4294967295
  %shr4648 = lshr i64 %and4647, 11
  %arrayidx4649 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1390 = load i32, i32* %arrayidx4649, align 4
  %conv4650 = zext i32 %1390 to i64
  %shl4651 = shl i64 %conv4650, 21
  %or4652 = or i64 %shr4648, %shl4651
  %and4653 = and i64 %or4652, 4294967295
  %xor4654 = xor i64 %and4644, %and4653
  %arrayidx4655 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1391 = load i32, i32* %arrayidx4655, align 4
  %conv4656 = zext i32 %1391 to i64
  %and4657 = and i64 %conv4656, 4294967295
  %shr4658 = lshr i64 %and4657, 25
  %arrayidx4659 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1392 = load i32, i32* %arrayidx4659, align 4
  %conv4660 = zext i32 %1392 to i64
  %shl4661 = shl i64 %conv4660, 7
  %or4662 = or i64 %shr4658, %shl4661
  %and4663 = and i64 %or4662, 4294967295
  %xor4664 = xor i64 %xor4654, %and4663
  %add4665 = add i64 %conv4635, %xor4664
  %arrayidx4666 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1393 = load i32, i32* %arrayidx4666, align 4
  %arrayidx4667 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1394 = load i32, i32* %arrayidx4667, align 4
  %arrayidx4668 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1395 = load i32, i32* %arrayidx4668, align 4
  %arrayidx4669 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1396 = load i32, i32* %arrayidx4669, align 4
  %xor4670 = xor i32 %1395, %1396
  %and4671 = and i32 %1394, %xor4670
  %xor4672 = xor i32 %1393, %and4671
  %conv4673 = zext i32 %xor4672 to i64
  %add4674 = add i64 %add4665, %conv4673
  %add4675 = add i64 %add4674, 659060556
  %arrayidx4676 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 50
  %1397 = load i32, i32* %arrayidx4676, align 4
  %conv4677 = zext i32 %1397 to i64
  %add4678 = add i64 %add4675, %conv4677
  %conv4679 = trunc i64 %add4678 to i32
  store i32 %conv4679, i32* %t0, align 4
  %arrayidx4680 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1398 = load i32, i32* %arrayidx4680, align 4
  %conv4681 = zext i32 %1398 to i64
  %and4682 = and i64 %conv4681, 4294967295
  %shr4683 = lshr i64 %and4682, 2
  %arrayidx4684 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1399 = load i32, i32* %arrayidx4684, align 4
  %conv4685 = zext i32 %1399 to i64
  %shl4686 = shl i64 %conv4685, 30
  %or4687 = or i64 %shr4683, %shl4686
  %and4688 = and i64 %or4687, 4294967295
  %arrayidx4689 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1400 = load i32, i32* %arrayidx4689, align 4
  %conv4690 = zext i32 %1400 to i64
  %and4691 = and i64 %conv4690, 4294967295
  %shr4692 = lshr i64 %and4691, 13
  %arrayidx4693 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1401 = load i32, i32* %arrayidx4693, align 4
  %conv4694 = zext i32 %1401 to i64
  %shl4695 = shl i64 %conv4694, 19
  %or4696 = or i64 %shr4692, %shl4695
  %and4697 = and i64 %or4696, 4294967295
  %xor4698 = xor i64 %and4688, %and4697
  %arrayidx4699 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1402 = load i32, i32* %arrayidx4699, align 4
  %conv4700 = zext i32 %1402 to i64
  %and4701 = and i64 %conv4700, 4294967295
  %shr4702 = lshr i64 %and4701, 22
  %arrayidx4703 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1403 = load i32, i32* %arrayidx4703, align 4
  %conv4704 = zext i32 %1403 to i64
  %shl4705 = shl i64 %conv4704, 10
  %or4706 = or i64 %shr4702, %shl4705
  %and4707 = and i64 %or4706, 4294967295
  %xor4708 = xor i64 %xor4698, %and4707
  %arrayidx4709 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1404 = load i32, i32* %arrayidx4709, align 4
  %arrayidx4710 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1405 = load i32, i32* %arrayidx4710, align 4
  %or4711 = or i32 %1404, %1405
  %arrayidx4712 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1406 = load i32, i32* %arrayidx4712, align 4
  %and4713 = and i32 %or4711, %1406
  %arrayidx4714 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1407 = load i32, i32* %arrayidx4714, align 4
  %arrayidx4715 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1408 = load i32, i32* %arrayidx4715, align 4
  %and4716 = and i32 %1407, %1408
  %or4717 = or i32 %and4713, %and4716
  %conv4718 = zext i32 %or4717 to i64
  %add4719 = add i64 %xor4708, %conv4718
  %conv4720 = trunc i64 %add4719 to i32
  store i32 %conv4720, i32* %t1, align 4
  %1409 = load i32, i32* %t0, align 4
  %arrayidx4721 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1410 = load i32, i32* %arrayidx4721, align 4
  %add4722 = add i32 %1410, %1409
  store i32 %add4722, i32* %arrayidx4721, align 4
  %1411 = load i32, i32* %t0, align 4
  %1412 = load i32, i32* %t1, align 4
  %add4723 = add i32 %1411, %1412
  %arrayidx4724 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  store i32 %add4723, i32* %arrayidx4724, align 4
  %arrayidx4725 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1413 = load i32, i32* %arrayidx4725, align 4
  %conv4726 = zext i32 %1413 to i64
  %arrayidx4727 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1414 = load i32, i32* %arrayidx4727, align 4
  %conv4728 = zext i32 %1414 to i64
  %and4729 = and i64 %conv4728, 4294967295
  %shr4730 = lshr i64 %and4729, 6
  %arrayidx4731 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1415 = load i32, i32* %arrayidx4731, align 4
  %conv4732 = zext i32 %1415 to i64
  %shl4733 = shl i64 %conv4732, 26
  %or4734 = or i64 %shr4730, %shl4733
  %and4735 = and i64 %or4734, 4294967295
  %arrayidx4736 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1416 = load i32, i32* %arrayidx4736, align 4
  %conv4737 = zext i32 %1416 to i64
  %and4738 = and i64 %conv4737, 4294967295
  %shr4739 = lshr i64 %and4738, 11
  %arrayidx4740 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1417 = load i32, i32* %arrayidx4740, align 4
  %conv4741 = zext i32 %1417 to i64
  %shl4742 = shl i64 %conv4741, 21
  %or4743 = or i64 %shr4739, %shl4742
  %and4744 = and i64 %or4743, 4294967295
  %xor4745 = xor i64 %and4735, %and4744
  %arrayidx4746 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1418 = load i32, i32* %arrayidx4746, align 4
  %conv4747 = zext i32 %1418 to i64
  %and4748 = and i64 %conv4747, 4294967295
  %shr4749 = lshr i64 %and4748, 25
  %arrayidx4750 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1419 = load i32, i32* %arrayidx4750, align 4
  %conv4751 = zext i32 %1419 to i64
  %shl4752 = shl i64 %conv4751, 7
  %or4753 = or i64 %shr4749, %shl4752
  %and4754 = and i64 %or4753, 4294967295
  %xor4755 = xor i64 %xor4745, %and4754
  %add4756 = add i64 %conv4726, %xor4755
  %arrayidx4757 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1420 = load i32, i32* %arrayidx4757, align 4
  %arrayidx4758 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1421 = load i32, i32* %arrayidx4758, align 4
  %arrayidx4759 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1422 = load i32, i32* %arrayidx4759, align 4
  %arrayidx4760 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1423 = load i32, i32* %arrayidx4760, align 4
  %xor4761 = xor i32 %1422, %1423
  %and4762 = and i32 %1421, %xor4761
  %xor4763 = xor i32 %1420, %and4762
  %conv4764 = zext i32 %xor4763 to i64
  %add4765 = add i64 %add4756, %conv4764
  %add4766 = add i64 %add4765, 883997877
  %arrayidx4767 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 51
  %1424 = load i32, i32* %arrayidx4767, align 4
  %conv4768 = zext i32 %1424 to i64
  %add4769 = add i64 %add4766, %conv4768
  %conv4770 = trunc i64 %add4769 to i32
  store i32 %conv4770, i32* %t0, align 4
  %arrayidx4771 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1425 = load i32, i32* %arrayidx4771, align 4
  %conv4772 = zext i32 %1425 to i64
  %and4773 = and i64 %conv4772, 4294967295
  %shr4774 = lshr i64 %and4773, 2
  %arrayidx4775 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1426 = load i32, i32* %arrayidx4775, align 4
  %conv4776 = zext i32 %1426 to i64
  %shl4777 = shl i64 %conv4776, 30
  %or4778 = or i64 %shr4774, %shl4777
  %and4779 = and i64 %or4778, 4294967295
  %arrayidx4780 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1427 = load i32, i32* %arrayidx4780, align 4
  %conv4781 = zext i32 %1427 to i64
  %and4782 = and i64 %conv4781, 4294967295
  %shr4783 = lshr i64 %and4782, 13
  %arrayidx4784 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1428 = load i32, i32* %arrayidx4784, align 4
  %conv4785 = zext i32 %1428 to i64
  %shl4786 = shl i64 %conv4785, 19
  %or4787 = or i64 %shr4783, %shl4786
  %and4788 = and i64 %or4787, 4294967295
  %xor4789 = xor i64 %and4779, %and4788
  %arrayidx4790 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1429 = load i32, i32* %arrayidx4790, align 4
  %conv4791 = zext i32 %1429 to i64
  %and4792 = and i64 %conv4791, 4294967295
  %shr4793 = lshr i64 %and4792, 22
  %arrayidx4794 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1430 = load i32, i32* %arrayidx4794, align 4
  %conv4795 = zext i32 %1430 to i64
  %shl4796 = shl i64 %conv4795, 10
  %or4797 = or i64 %shr4793, %shl4796
  %and4798 = and i64 %or4797, 4294967295
  %xor4799 = xor i64 %xor4789, %and4798
  %arrayidx4800 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1431 = load i32, i32* %arrayidx4800, align 4
  %arrayidx4801 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1432 = load i32, i32* %arrayidx4801, align 4
  %or4802 = or i32 %1431, %1432
  %arrayidx4803 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1433 = load i32, i32* %arrayidx4803, align 4
  %and4804 = and i32 %or4802, %1433
  %arrayidx4805 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1434 = load i32, i32* %arrayidx4805, align 4
  %arrayidx4806 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1435 = load i32, i32* %arrayidx4806, align 4
  %and4807 = and i32 %1434, %1435
  %or4808 = or i32 %and4804, %and4807
  %conv4809 = zext i32 %or4808 to i64
  %add4810 = add i64 %xor4799, %conv4809
  %conv4811 = trunc i64 %add4810 to i32
  store i32 %conv4811, i32* %t1, align 4
  %1436 = load i32, i32* %t0, align 4
  %arrayidx4812 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1437 = load i32, i32* %arrayidx4812, align 4
  %add4813 = add i32 %1437, %1436
  store i32 %add4813, i32* %arrayidx4812, align 4
  %1438 = load i32, i32* %t0, align 4
  %1439 = load i32, i32* %t1, align 4
  %add4814 = add i32 %1438, %1439
  %arrayidx4815 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  store i32 %add4814, i32* %arrayidx4815, align 4
  %arrayidx4816 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1440 = load i32, i32* %arrayidx4816, align 4
  %conv4817 = zext i32 %1440 to i64
  %arrayidx4818 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1441 = load i32, i32* %arrayidx4818, align 4
  %conv4819 = zext i32 %1441 to i64
  %and4820 = and i64 %conv4819, 4294967295
  %shr4821 = lshr i64 %and4820, 6
  %arrayidx4822 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1442 = load i32, i32* %arrayidx4822, align 4
  %conv4823 = zext i32 %1442 to i64
  %shl4824 = shl i64 %conv4823, 26
  %or4825 = or i64 %shr4821, %shl4824
  %and4826 = and i64 %or4825, 4294967295
  %arrayidx4827 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1443 = load i32, i32* %arrayidx4827, align 4
  %conv4828 = zext i32 %1443 to i64
  %and4829 = and i64 %conv4828, 4294967295
  %shr4830 = lshr i64 %and4829, 11
  %arrayidx4831 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1444 = load i32, i32* %arrayidx4831, align 4
  %conv4832 = zext i32 %1444 to i64
  %shl4833 = shl i64 %conv4832, 21
  %or4834 = or i64 %shr4830, %shl4833
  %and4835 = and i64 %or4834, 4294967295
  %xor4836 = xor i64 %and4826, %and4835
  %arrayidx4837 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1445 = load i32, i32* %arrayidx4837, align 4
  %conv4838 = zext i32 %1445 to i64
  %and4839 = and i64 %conv4838, 4294967295
  %shr4840 = lshr i64 %and4839, 25
  %arrayidx4841 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1446 = load i32, i32* %arrayidx4841, align 4
  %conv4842 = zext i32 %1446 to i64
  %shl4843 = shl i64 %conv4842, 7
  %or4844 = or i64 %shr4840, %shl4843
  %and4845 = and i64 %or4844, 4294967295
  %xor4846 = xor i64 %xor4836, %and4845
  %add4847 = add i64 %conv4817, %xor4846
  %arrayidx4848 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1447 = load i32, i32* %arrayidx4848, align 4
  %arrayidx4849 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1448 = load i32, i32* %arrayidx4849, align 4
  %arrayidx4850 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1449 = load i32, i32* %arrayidx4850, align 4
  %arrayidx4851 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1450 = load i32, i32* %arrayidx4851, align 4
  %xor4852 = xor i32 %1449, %1450
  %and4853 = and i32 %1448, %xor4852
  %xor4854 = xor i32 %1447, %and4853
  %conv4855 = zext i32 %xor4854 to i64
  %add4856 = add i64 %add4847, %conv4855
  %add4857 = add i64 %add4856, 958139571
  %arrayidx4858 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 52
  %1451 = load i32, i32* %arrayidx4858, align 4
  %conv4859 = zext i32 %1451 to i64
  %add4860 = add i64 %add4857, %conv4859
  %conv4861 = trunc i64 %add4860 to i32
  store i32 %conv4861, i32* %t0, align 4
  %arrayidx4862 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1452 = load i32, i32* %arrayidx4862, align 4
  %conv4863 = zext i32 %1452 to i64
  %and4864 = and i64 %conv4863, 4294967295
  %shr4865 = lshr i64 %and4864, 2
  %arrayidx4866 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1453 = load i32, i32* %arrayidx4866, align 4
  %conv4867 = zext i32 %1453 to i64
  %shl4868 = shl i64 %conv4867, 30
  %or4869 = or i64 %shr4865, %shl4868
  %and4870 = and i64 %or4869, 4294967295
  %arrayidx4871 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1454 = load i32, i32* %arrayidx4871, align 4
  %conv4872 = zext i32 %1454 to i64
  %and4873 = and i64 %conv4872, 4294967295
  %shr4874 = lshr i64 %and4873, 13
  %arrayidx4875 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1455 = load i32, i32* %arrayidx4875, align 4
  %conv4876 = zext i32 %1455 to i64
  %shl4877 = shl i64 %conv4876, 19
  %or4878 = or i64 %shr4874, %shl4877
  %and4879 = and i64 %or4878, 4294967295
  %xor4880 = xor i64 %and4870, %and4879
  %arrayidx4881 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1456 = load i32, i32* %arrayidx4881, align 4
  %conv4882 = zext i32 %1456 to i64
  %and4883 = and i64 %conv4882, 4294967295
  %shr4884 = lshr i64 %and4883, 22
  %arrayidx4885 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1457 = load i32, i32* %arrayidx4885, align 4
  %conv4886 = zext i32 %1457 to i64
  %shl4887 = shl i64 %conv4886, 10
  %or4888 = or i64 %shr4884, %shl4887
  %and4889 = and i64 %or4888, 4294967295
  %xor4890 = xor i64 %xor4880, %and4889
  %arrayidx4891 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1458 = load i32, i32* %arrayidx4891, align 4
  %arrayidx4892 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1459 = load i32, i32* %arrayidx4892, align 4
  %or4893 = or i32 %1458, %1459
  %arrayidx4894 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1460 = load i32, i32* %arrayidx4894, align 4
  %and4895 = and i32 %or4893, %1460
  %arrayidx4896 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1461 = load i32, i32* %arrayidx4896, align 4
  %arrayidx4897 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1462 = load i32, i32* %arrayidx4897, align 4
  %and4898 = and i32 %1461, %1462
  %or4899 = or i32 %and4895, %and4898
  %conv4900 = zext i32 %or4899 to i64
  %add4901 = add i64 %xor4890, %conv4900
  %conv4902 = trunc i64 %add4901 to i32
  store i32 %conv4902, i32* %t1, align 4
  %1463 = load i32, i32* %t0, align 4
  %arrayidx4903 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1464 = load i32, i32* %arrayidx4903, align 4
  %add4904 = add i32 %1464, %1463
  store i32 %add4904, i32* %arrayidx4903, align 4
  %1465 = load i32, i32* %t0, align 4
  %1466 = load i32, i32* %t1, align 4
  %add4905 = add i32 %1465, %1466
  %arrayidx4906 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  store i32 %add4905, i32* %arrayidx4906, align 4
  %arrayidx4907 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1467 = load i32, i32* %arrayidx4907, align 4
  %conv4908 = zext i32 %1467 to i64
  %arrayidx4909 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1468 = load i32, i32* %arrayidx4909, align 4
  %conv4910 = zext i32 %1468 to i64
  %and4911 = and i64 %conv4910, 4294967295
  %shr4912 = lshr i64 %and4911, 6
  %arrayidx4913 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1469 = load i32, i32* %arrayidx4913, align 4
  %conv4914 = zext i32 %1469 to i64
  %shl4915 = shl i64 %conv4914, 26
  %or4916 = or i64 %shr4912, %shl4915
  %and4917 = and i64 %or4916, 4294967295
  %arrayidx4918 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1470 = load i32, i32* %arrayidx4918, align 4
  %conv4919 = zext i32 %1470 to i64
  %and4920 = and i64 %conv4919, 4294967295
  %shr4921 = lshr i64 %and4920, 11
  %arrayidx4922 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1471 = load i32, i32* %arrayidx4922, align 4
  %conv4923 = zext i32 %1471 to i64
  %shl4924 = shl i64 %conv4923, 21
  %or4925 = or i64 %shr4921, %shl4924
  %and4926 = and i64 %or4925, 4294967295
  %xor4927 = xor i64 %and4917, %and4926
  %arrayidx4928 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1472 = load i32, i32* %arrayidx4928, align 4
  %conv4929 = zext i32 %1472 to i64
  %and4930 = and i64 %conv4929, 4294967295
  %shr4931 = lshr i64 %and4930, 25
  %arrayidx4932 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1473 = load i32, i32* %arrayidx4932, align 4
  %conv4933 = zext i32 %1473 to i64
  %shl4934 = shl i64 %conv4933, 7
  %or4935 = or i64 %shr4931, %shl4934
  %and4936 = and i64 %or4935, 4294967295
  %xor4937 = xor i64 %xor4927, %and4936
  %add4938 = add i64 %conv4908, %xor4937
  %arrayidx4939 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1474 = load i32, i32* %arrayidx4939, align 4
  %arrayidx4940 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1475 = load i32, i32* %arrayidx4940, align 4
  %arrayidx4941 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1476 = load i32, i32* %arrayidx4941, align 4
  %arrayidx4942 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1477 = load i32, i32* %arrayidx4942, align 4
  %xor4943 = xor i32 %1476, %1477
  %and4944 = and i32 %1475, %xor4943
  %xor4945 = xor i32 %1474, %and4944
  %conv4946 = zext i32 %xor4945 to i64
  %add4947 = add i64 %add4938, %conv4946
  %add4948 = add i64 %add4947, 1322822218
  %arrayidx4949 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 53
  %1478 = load i32, i32* %arrayidx4949, align 4
  %conv4950 = zext i32 %1478 to i64
  %add4951 = add i64 %add4948, %conv4950
  %conv4952 = trunc i64 %add4951 to i32
  store i32 %conv4952, i32* %t0, align 4
  %arrayidx4953 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1479 = load i32, i32* %arrayidx4953, align 4
  %conv4954 = zext i32 %1479 to i64
  %and4955 = and i64 %conv4954, 4294967295
  %shr4956 = lshr i64 %and4955, 2
  %arrayidx4957 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1480 = load i32, i32* %arrayidx4957, align 4
  %conv4958 = zext i32 %1480 to i64
  %shl4959 = shl i64 %conv4958, 30
  %or4960 = or i64 %shr4956, %shl4959
  %and4961 = and i64 %or4960, 4294967295
  %arrayidx4962 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1481 = load i32, i32* %arrayidx4962, align 4
  %conv4963 = zext i32 %1481 to i64
  %and4964 = and i64 %conv4963, 4294967295
  %shr4965 = lshr i64 %and4964, 13
  %arrayidx4966 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1482 = load i32, i32* %arrayidx4966, align 4
  %conv4967 = zext i32 %1482 to i64
  %shl4968 = shl i64 %conv4967, 19
  %or4969 = or i64 %shr4965, %shl4968
  %and4970 = and i64 %or4969, 4294967295
  %xor4971 = xor i64 %and4961, %and4970
  %arrayidx4972 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1483 = load i32, i32* %arrayidx4972, align 4
  %conv4973 = zext i32 %1483 to i64
  %and4974 = and i64 %conv4973, 4294967295
  %shr4975 = lshr i64 %and4974, 22
  %arrayidx4976 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1484 = load i32, i32* %arrayidx4976, align 4
  %conv4977 = zext i32 %1484 to i64
  %shl4978 = shl i64 %conv4977, 10
  %or4979 = or i64 %shr4975, %shl4978
  %and4980 = and i64 %or4979, 4294967295
  %xor4981 = xor i64 %xor4971, %and4980
  %arrayidx4982 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1485 = load i32, i32* %arrayidx4982, align 4
  %arrayidx4983 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1486 = load i32, i32* %arrayidx4983, align 4
  %or4984 = or i32 %1485, %1486
  %arrayidx4985 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1487 = load i32, i32* %arrayidx4985, align 4
  %and4986 = and i32 %or4984, %1487
  %arrayidx4987 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1488 = load i32, i32* %arrayidx4987, align 4
  %arrayidx4988 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1489 = load i32, i32* %arrayidx4988, align 4
  %and4989 = and i32 %1488, %1489
  %or4990 = or i32 %and4986, %and4989
  %conv4991 = zext i32 %or4990 to i64
  %add4992 = add i64 %xor4981, %conv4991
  %conv4993 = trunc i64 %add4992 to i32
  store i32 %conv4993, i32* %t1, align 4
  %1490 = load i32, i32* %t0, align 4
  %arrayidx4994 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1491 = load i32, i32* %arrayidx4994, align 4
  %add4995 = add i32 %1491, %1490
  store i32 %add4995, i32* %arrayidx4994, align 4
  %1492 = load i32, i32* %t0, align 4
  %1493 = load i32, i32* %t1, align 4
  %add4996 = add i32 %1492, %1493
  %arrayidx4997 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  store i32 %add4996, i32* %arrayidx4997, align 4
  %arrayidx4998 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1494 = load i32, i32* %arrayidx4998, align 4
  %conv4999 = zext i32 %1494 to i64
  %arrayidx5000 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1495 = load i32, i32* %arrayidx5000, align 4
  %conv5001 = zext i32 %1495 to i64
  %and5002 = and i64 %conv5001, 4294967295
  %shr5003 = lshr i64 %and5002, 6
  %arrayidx5004 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1496 = load i32, i32* %arrayidx5004, align 4
  %conv5005 = zext i32 %1496 to i64
  %shl5006 = shl i64 %conv5005, 26
  %or5007 = or i64 %shr5003, %shl5006
  %and5008 = and i64 %or5007, 4294967295
  %arrayidx5009 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1497 = load i32, i32* %arrayidx5009, align 4
  %conv5010 = zext i32 %1497 to i64
  %and5011 = and i64 %conv5010, 4294967295
  %shr5012 = lshr i64 %and5011, 11
  %arrayidx5013 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1498 = load i32, i32* %arrayidx5013, align 4
  %conv5014 = zext i32 %1498 to i64
  %shl5015 = shl i64 %conv5014, 21
  %or5016 = or i64 %shr5012, %shl5015
  %and5017 = and i64 %or5016, 4294967295
  %xor5018 = xor i64 %and5008, %and5017
  %arrayidx5019 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1499 = load i32, i32* %arrayidx5019, align 4
  %conv5020 = zext i32 %1499 to i64
  %and5021 = and i64 %conv5020, 4294967295
  %shr5022 = lshr i64 %and5021, 25
  %arrayidx5023 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1500 = load i32, i32* %arrayidx5023, align 4
  %conv5024 = zext i32 %1500 to i64
  %shl5025 = shl i64 %conv5024, 7
  %or5026 = or i64 %shr5022, %shl5025
  %and5027 = and i64 %or5026, 4294967295
  %xor5028 = xor i64 %xor5018, %and5027
  %add5029 = add i64 %conv4999, %xor5028
  %arrayidx5030 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1501 = load i32, i32* %arrayidx5030, align 4
  %arrayidx5031 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1502 = load i32, i32* %arrayidx5031, align 4
  %arrayidx5032 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1503 = load i32, i32* %arrayidx5032, align 4
  %arrayidx5033 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1504 = load i32, i32* %arrayidx5033, align 4
  %xor5034 = xor i32 %1503, %1504
  %and5035 = and i32 %1502, %xor5034
  %xor5036 = xor i32 %1501, %and5035
  %conv5037 = zext i32 %xor5036 to i64
  %add5038 = add i64 %add5029, %conv5037
  %add5039 = add i64 %add5038, 1537002063
  %arrayidx5040 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 54
  %1505 = load i32, i32* %arrayidx5040, align 4
  %conv5041 = zext i32 %1505 to i64
  %add5042 = add i64 %add5039, %conv5041
  %conv5043 = trunc i64 %add5042 to i32
  store i32 %conv5043, i32* %t0, align 4
  %arrayidx5044 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1506 = load i32, i32* %arrayidx5044, align 4
  %conv5045 = zext i32 %1506 to i64
  %and5046 = and i64 %conv5045, 4294967295
  %shr5047 = lshr i64 %and5046, 2
  %arrayidx5048 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1507 = load i32, i32* %arrayidx5048, align 4
  %conv5049 = zext i32 %1507 to i64
  %shl5050 = shl i64 %conv5049, 30
  %or5051 = or i64 %shr5047, %shl5050
  %and5052 = and i64 %or5051, 4294967295
  %arrayidx5053 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1508 = load i32, i32* %arrayidx5053, align 4
  %conv5054 = zext i32 %1508 to i64
  %and5055 = and i64 %conv5054, 4294967295
  %shr5056 = lshr i64 %and5055, 13
  %arrayidx5057 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1509 = load i32, i32* %arrayidx5057, align 4
  %conv5058 = zext i32 %1509 to i64
  %shl5059 = shl i64 %conv5058, 19
  %or5060 = or i64 %shr5056, %shl5059
  %and5061 = and i64 %or5060, 4294967295
  %xor5062 = xor i64 %and5052, %and5061
  %arrayidx5063 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1510 = load i32, i32* %arrayidx5063, align 4
  %conv5064 = zext i32 %1510 to i64
  %and5065 = and i64 %conv5064, 4294967295
  %shr5066 = lshr i64 %and5065, 22
  %arrayidx5067 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1511 = load i32, i32* %arrayidx5067, align 4
  %conv5068 = zext i32 %1511 to i64
  %shl5069 = shl i64 %conv5068, 10
  %or5070 = or i64 %shr5066, %shl5069
  %and5071 = and i64 %or5070, 4294967295
  %xor5072 = xor i64 %xor5062, %and5071
  %arrayidx5073 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1512 = load i32, i32* %arrayidx5073, align 4
  %arrayidx5074 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1513 = load i32, i32* %arrayidx5074, align 4
  %or5075 = or i32 %1512, %1513
  %arrayidx5076 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1514 = load i32, i32* %arrayidx5076, align 4
  %and5077 = and i32 %or5075, %1514
  %arrayidx5078 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1515 = load i32, i32* %arrayidx5078, align 4
  %arrayidx5079 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1516 = load i32, i32* %arrayidx5079, align 4
  %and5080 = and i32 %1515, %1516
  %or5081 = or i32 %and5077, %and5080
  %conv5082 = zext i32 %or5081 to i64
  %add5083 = add i64 %xor5072, %conv5082
  %conv5084 = trunc i64 %add5083 to i32
  store i32 %conv5084, i32* %t1, align 4
  %1517 = load i32, i32* %t0, align 4
  %arrayidx5085 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1518 = load i32, i32* %arrayidx5085, align 4
  %add5086 = add i32 %1518, %1517
  store i32 %add5086, i32* %arrayidx5085, align 4
  %1519 = load i32, i32* %t0, align 4
  %1520 = load i32, i32* %t1, align 4
  %add5087 = add i32 %1519, %1520
  %arrayidx5088 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  store i32 %add5087, i32* %arrayidx5088, align 4
  %arrayidx5089 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1521 = load i32, i32* %arrayidx5089, align 4
  %conv5090 = zext i32 %1521 to i64
  %arrayidx5091 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1522 = load i32, i32* %arrayidx5091, align 4
  %conv5092 = zext i32 %1522 to i64
  %and5093 = and i64 %conv5092, 4294967295
  %shr5094 = lshr i64 %and5093, 6
  %arrayidx5095 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1523 = load i32, i32* %arrayidx5095, align 4
  %conv5096 = zext i32 %1523 to i64
  %shl5097 = shl i64 %conv5096, 26
  %or5098 = or i64 %shr5094, %shl5097
  %and5099 = and i64 %or5098, 4294967295
  %arrayidx5100 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1524 = load i32, i32* %arrayidx5100, align 4
  %conv5101 = zext i32 %1524 to i64
  %and5102 = and i64 %conv5101, 4294967295
  %shr5103 = lshr i64 %and5102, 11
  %arrayidx5104 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1525 = load i32, i32* %arrayidx5104, align 4
  %conv5105 = zext i32 %1525 to i64
  %shl5106 = shl i64 %conv5105, 21
  %or5107 = or i64 %shr5103, %shl5106
  %and5108 = and i64 %or5107, 4294967295
  %xor5109 = xor i64 %and5099, %and5108
  %arrayidx5110 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1526 = load i32, i32* %arrayidx5110, align 4
  %conv5111 = zext i32 %1526 to i64
  %and5112 = and i64 %conv5111, 4294967295
  %shr5113 = lshr i64 %and5112, 25
  %arrayidx5114 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1527 = load i32, i32* %arrayidx5114, align 4
  %conv5115 = zext i32 %1527 to i64
  %shl5116 = shl i64 %conv5115, 7
  %or5117 = or i64 %shr5113, %shl5116
  %and5118 = and i64 %or5117, 4294967295
  %xor5119 = xor i64 %xor5109, %and5118
  %add5120 = add i64 %conv5090, %xor5119
  %arrayidx5121 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1528 = load i32, i32* %arrayidx5121, align 4
  %arrayidx5122 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1529 = load i32, i32* %arrayidx5122, align 4
  %arrayidx5123 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1530 = load i32, i32* %arrayidx5123, align 4
  %arrayidx5124 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1531 = load i32, i32* %arrayidx5124, align 4
  %xor5125 = xor i32 %1530, %1531
  %and5126 = and i32 %1529, %xor5125
  %xor5127 = xor i32 %1528, %and5126
  %conv5128 = zext i32 %xor5127 to i64
  %add5129 = add i64 %add5120, %conv5128
  %add5130 = add i64 %add5129, 1747873779
  %arrayidx5131 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 55
  %1532 = load i32, i32* %arrayidx5131, align 4
  %conv5132 = zext i32 %1532 to i64
  %add5133 = add i64 %add5130, %conv5132
  %conv5134 = trunc i64 %add5133 to i32
  store i32 %conv5134, i32* %t0, align 4
  %arrayidx5135 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1533 = load i32, i32* %arrayidx5135, align 4
  %conv5136 = zext i32 %1533 to i64
  %and5137 = and i64 %conv5136, 4294967295
  %shr5138 = lshr i64 %and5137, 2
  %arrayidx5139 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1534 = load i32, i32* %arrayidx5139, align 4
  %conv5140 = zext i32 %1534 to i64
  %shl5141 = shl i64 %conv5140, 30
  %or5142 = or i64 %shr5138, %shl5141
  %and5143 = and i64 %or5142, 4294967295
  %arrayidx5144 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1535 = load i32, i32* %arrayidx5144, align 4
  %conv5145 = zext i32 %1535 to i64
  %and5146 = and i64 %conv5145, 4294967295
  %shr5147 = lshr i64 %and5146, 13
  %arrayidx5148 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1536 = load i32, i32* %arrayidx5148, align 4
  %conv5149 = zext i32 %1536 to i64
  %shl5150 = shl i64 %conv5149, 19
  %or5151 = or i64 %shr5147, %shl5150
  %and5152 = and i64 %or5151, 4294967295
  %xor5153 = xor i64 %and5143, %and5152
  %arrayidx5154 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1537 = load i32, i32* %arrayidx5154, align 4
  %conv5155 = zext i32 %1537 to i64
  %and5156 = and i64 %conv5155, 4294967295
  %shr5157 = lshr i64 %and5156, 22
  %arrayidx5158 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1538 = load i32, i32* %arrayidx5158, align 4
  %conv5159 = zext i32 %1538 to i64
  %shl5160 = shl i64 %conv5159, 10
  %or5161 = or i64 %shr5157, %shl5160
  %and5162 = and i64 %or5161, 4294967295
  %xor5163 = xor i64 %xor5153, %and5162
  %arrayidx5164 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1539 = load i32, i32* %arrayidx5164, align 4
  %arrayidx5165 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1540 = load i32, i32* %arrayidx5165, align 4
  %or5166 = or i32 %1539, %1540
  %arrayidx5167 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1541 = load i32, i32* %arrayidx5167, align 4
  %and5168 = and i32 %or5166, %1541
  %arrayidx5169 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1542 = load i32, i32* %arrayidx5169, align 4
  %arrayidx5170 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1543 = load i32, i32* %arrayidx5170, align 4
  %and5171 = and i32 %1542, %1543
  %or5172 = or i32 %and5168, %and5171
  %conv5173 = zext i32 %or5172 to i64
  %add5174 = add i64 %xor5163, %conv5173
  %conv5175 = trunc i64 %add5174 to i32
  store i32 %conv5175, i32* %t1, align 4
  %1544 = load i32, i32* %t0, align 4
  %arrayidx5176 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1545 = load i32, i32* %arrayidx5176, align 4
  %add5177 = add i32 %1545, %1544
  store i32 %add5177, i32* %arrayidx5176, align 4
  %1546 = load i32, i32* %t0, align 4
  %1547 = load i32, i32* %t1, align 4
  %add5178 = add i32 %1546, %1547
  %arrayidx5179 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  store i32 %add5178, i32* %arrayidx5179, align 4
  %arrayidx5180 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1548 = load i32, i32* %arrayidx5180, align 4
  %conv5181 = zext i32 %1548 to i64
  %arrayidx5182 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1549 = load i32, i32* %arrayidx5182, align 4
  %conv5183 = zext i32 %1549 to i64
  %and5184 = and i64 %conv5183, 4294967295
  %shr5185 = lshr i64 %and5184, 6
  %arrayidx5186 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1550 = load i32, i32* %arrayidx5186, align 4
  %conv5187 = zext i32 %1550 to i64
  %shl5188 = shl i64 %conv5187, 26
  %or5189 = or i64 %shr5185, %shl5188
  %and5190 = and i64 %or5189, 4294967295
  %arrayidx5191 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1551 = load i32, i32* %arrayidx5191, align 4
  %conv5192 = zext i32 %1551 to i64
  %and5193 = and i64 %conv5192, 4294967295
  %shr5194 = lshr i64 %and5193, 11
  %arrayidx5195 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1552 = load i32, i32* %arrayidx5195, align 4
  %conv5196 = zext i32 %1552 to i64
  %shl5197 = shl i64 %conv5196, 21
  %or5198 = or i64 %shr5194, %shl5197
  %and5199 = and i64 %or5198, 4294967295
  %xor5200 = xor i64 %and5190, %and5199
  %arrayidx5201 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1553 = load i32, i32* %arrayidx5201, align 4
  %conv5202 = zext i32 %1553 to i64
  %and5203 = and i64 %conv5202, 4294967295
  %shr5204 = lshr i64 %and5203, 25
  %arrayidx5205 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1554 = load i32, i32* %arrayidx5205, align 4
  %conv5206 = zext i32 %1554 to i64
  %shl5207 = shl i64 %conv5206, 7
  %or5208 = or i64 %shr5204, %shl5207
  %and5209 = and i64 %or5208, 4294967295
  %xor5210 = xor i64 %xor5200, %and5209
  %add5211 = add i64 %conv5181, %xor5210
  %arrayidx5212 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1555 = load i32, i32* %arrayidx5212, align 4
  %arrayidx5213 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1556 = load i32, i32* %arrayidx5213, align 4
  %arrayidx5214 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1557 = load i32, i32* %arrayidx5214, align 4
  %arrayidx5215 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1558 = load i32, i32* %arrayidx5215, align 4
  %xor5216 = xor i32 %1557, %1558
  %and5217 = and i32 %1556, %xor5216
  %xor5218 = xor i32 %1555, %and5217
  %conv5219 = zext i32 %xor5218 to i64
  %add5220 = add i64 %add5211, %conv5219
  %add5221 = add i64 %add5220, 1955562222
  %arrayidx5222 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 56
  %1559 = load i32, i32* %arrayidx5222, align 4
  %conv5223 = zext i32 %1559 to i64
  %add5224 = add i64 %add5221, %conv5223
  %conv5225 = trunc i64 %add5224 to i32
  store i32 %conv5225, i32* %t0, align 4
  %arrayidx5226 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1560 = load i32, i32* %arrayidx5226, align 4
  %conv5227 = zext i32 %1560 to i64
  %and5228 = and i64 %conv5227, 4294967295
  %shr5229 = lshr i64 %and5228, 2
  %arrayidx5230 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1561 = load i32, i32* %arrayidx5230, align 4
  %conv5231 = zext i32 %1561 to i64
  %shl5232 = shl i64 %conv5231, 30
  %or5233 = or i64 %shr5229, %shl5232
  %and5234 = and i64 %or5233, 4294967295
  %arrayidx5235 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1562 = load i32, i32* %arrayidx5235, align 4
  %conv5236 = zext i32 %1562 to i64
  %and5237 = and i64 %conv5236, 4294967295
  %shr5238 = lshr i64 %and5237, 13
  %arrayidx5239 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1563 = load i32, i32* %arrayidx5239, align 4
  %conv5240 = zext i32 %1563 to i64
  %shl5241 = shl i64 %conv5240, 19
  %or5242 = or i64 %shr5238, %shl5241
  %and5243 = and i64 %or5242, 4294967295
  %xor5244 = xor i64 %and5234, %and5243
  %arrayidx5245 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1564 = load i32, i32* %arrayidx5245, align 4
  %conv5246 = zext i32 %1564 to i64
  %and5247 = and i64 %conv5246, 4294967295
  %shr5248 = lshr i64 %and5247, 22
  %arrayidx5249 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1565 = load i32, i32* %arrayidx5249, align 4
  %conv5250 = zext i32 %1565 to i64
  %shl5251 = shl i64 %conv5250, 10
  %or5252 = or i64 %shr5248, %shl5251
  %and5253 = and i64 %or5252, 4294967295
  %xor5254 = xor i64 %xor5244, %and5253
  %arrayidx5255 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1566 = load i32, i32* %arrayidx5255, align 4
  %arrayidx5256 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1567 = load i32, i32* %arrayidx5256, align 4
  %or5257 = or i32 %1566, %1567
  %arrayidx5258 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1568 = load i32, i32* %arrayidx5258, align 4
  %and5259 = and i32 %or5257, %1568
  %arrayidx5260 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1569 = load i32, i32* %arrayidx5260, align 4
  %arrayidx5261 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1570 = load i32, i32* %arrayidx5261, align 4
  %and5262 = and i32 %1569, %1570
  %or5263 = or i32 %and5259, %and5262
  %conv5264 = zext i32 %or5263 to i64
  %add5265 = add i64 %xor5254, %conv5264
  %conv5266 = trunc i64 %add5265 to i32
  store i32 %conv5266, i32* %t1, align 4
  %1571 = load i32, i32* %t0, align 4
  %arrayidx5267 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1572 = load i32, i32* %arrayidx5267, align 4
  %add5268 = add i32 %1572, %1571
  store i32 %add5268, i32* %arrayidx5267, align 4
  %1573 = load i32, i32* %t0, align 4
  %1574 = load i32, i32* %t1, align 4
  %add5269 = add i32 %1573, %1574
  %arrayidx5270 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  store i32 %add5269, i32* %arrayidx5270, align 4
  %arrayidx5271 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1575 = load i32, i32* %arrayidx5271, align 4
  %conv5272 = zext i32 %1575 to i64
  %arrayidx5273 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1576 = load i32, i32* %arrayidx5273, align 4
  %conv5274 = zext i32 %1576 to i64
  %and5275 = and i64 %conv5274, 4294967295
  %shr5276 = lshr i64 %and5275, 6
  %arrayidx5277 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1577 = load i32, i32* %arrayidx5277, align 4
  %conv5278 = zext i32 %1577 to i64
  %shl5279 = shl i64 %conv5278, 26
  %or5280 = or i64 %shr5276, %shl5279
  %and5281 = and i64 %or5280, 4294967295
  %arrayidx5282 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1578 = load i32, i32* %arrayidx5282, align 4
  %conv5283 = zext i32 %1578 to i64
  %and5284 = and i64 %conv5283, 4294967295
  %shr5285 = lshr i64 %and5284, 11
  %arrayidx5286 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1579 = load i32, i32* %arrayidx5286, align 4
  %conv5287 = zext i32 %1579 to i64
  %shl5288 = shl i64 %conv5287, 21
  %or5289 = or i64 %shr5285, %shl5288
  %and5290 = and i64 %or5289, 4294967295
  %xor5291 = xor i64 %and5281, %and5290
  %arrayidx5292 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1580 = load i32, i32* %arrayidx5292, align 4
  %conv5293 = zext i32 %1580 to i64
  %and5294 = and i64 %conv5293, 4294967295
  %shr5295 = lshr i64 %and5294, 25
  %arrayidx5296 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1581 = load i32, i32* %arrayidx5296, align 4
  %conv5297 = zext i32 %1581 to i64
  %shl5298 = shl i64 %conv5297, 7
  %or5299 = or i64 %shr5295, %shl5298
  %and5300 = and i64 %or5299, 4294967295
  %xor5301 = xor i64 %xor5291, %and5300
  %add5302 = add i64 %conv5272, %xor5301
  %arrayidx5303 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1582 = load i32, i32* %arrayidx5303, align 4
  %arrayidx5304 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1583 = load i32, i32* %arrayidx5304, align 4
  %arrayidx5305 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1584 = load i32, i32* %arrayidx5305, align 4
  %arrayidx5306 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1585 = load i32, i32* %arrayidx5306, align 4
  %xor5307 = xor i32 %1584, %1585
  %and5308 = and i32 %1583, %xor5307
  %xor5309 = xor i32 %1582, %and5308
  %conv5310 = zext i32 %xor5309 to i64
  %add5311 = add i64 %add5302, %conv5310
  %add5312 = add i64 %add5311, 2024104815
  %arrayidx5313 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 57
  %1586 = load i32, i32* %arrayidx5313, align 4
  %conv5314 = zext i32 %1586 to i64
  %add5315 = add i64 %add5312, %conv5314
  %conv5316 = trunc i64 %add5315 to i32
  store i32 %conv5316, i32* %t0, align 4
  %arrayidx5317 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1587 = load i32, i32* %arrayidx5317, align 4
  %conv5318 = zext i32 %1587 to i64
  %and5319 = and i64 %conv5318, 4294967295
  %shr5320 = lshr i64 %and5319, 2
  %arrayidx5321 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1588 = load i32, i32* %arrayidx5321, align 4
  %conv5322 = zext i32 %1588 to i64
  %shl5323 = shl i64 %conv5322, 30
  %or5324 = or i64 %shr5320, %shl5323
  %and5325 = and i64 %or5324, 4294967295
  %arrayidx5326 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1589 = load i32, i32* %arrayidx5326, align 4
  %conv5327 = zext i32 %1589 to i64
  %and5328 = and i64 %conv5327, 4294967295
  %shr5329 = lshr i64 %and5328, 13
  %arrayidx5330 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1590 = load i32, i32* %arrayidx5330, align 4
  %conv5331 = zext i32 %1590 to i64
  %shl5332 = shl i64 %conv5331, 19
  %or5333 = or i64 %shr5329, %shl5332
  %and5334 = and i64 %or5333, 4294967295
  %xor5335 = xor i64 %and5325, %and5334
  %arrayidx5336 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1591 = load i32, i32* %arrayidx5336, align 4
  %conv5337 = zext i32 %1591 to i64
  %and5338 = and i64 %conv5337, 4294967295
  %shr5339 = lshr i64 %and5338, 22
  %arrayidx5340 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1592 = load i32, i32* %arrayidx5340, align 4
  %conv5341 = zext i32 %1592 to i64
  %shl5342 = shl i64 %conv5341, 10
  %or5343 = or i64 %shr5339, %shl5342
  %and5344 = and i64 %or5343, 4294967295
  %xor5345 = xor i64 %xor5335, %and5344
  %arrayidx5346 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1593 = load i32, i32* %arrayidx5346, align 4
  %arrayidx5347 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1594 = load i32, i32* %arrayidx5347, align 4
  %or5348 = or i32 %1593, %1594
  %arrayidx5349 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1595 = load i32, i32* %arrayidx5349, align 4
  %and5350 = and i32 %or5348, %1595
  %arrayidx5351 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1596 = load i32, i32* %arrayidx5351, align 4
  %arrayidx5352 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1597 = load i32, i32* %arrayidx5352, align 4
  %and5353 = and i32 %1596, %1597
  %or5354 = or i32 %and5350, %and5353
  %conv5355 = zext i32 %or5354 to i64
  %add5356 = add i64 %xor5345, %conv5355
  %conv5357 = trunc i64 %add5356 to i32
  store i32 %conv5357, i32* %t1, align 4
  %1598 = load i32, i32* %t0, align 4
  %arrayidx5358 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1599 = load i32, i32* %arrayidx5358, align 4
  %add5359 = add i32 %1599, %1598
  store i32 %add5359, i32* %arrayidx5358, align 4
  %1600 = load i32, i32* %t0, align 4
  %1601 = load i32, i32* %t1, align 4
  %add5360 = add i32 %1600, %1601
  %arrayidx5361 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  store i32 %add5360, i32* %arrayidx5361, align 4
  %arrayidx5362 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1602 = load i32, i32* %arrayidx5362, align 4
  %conv5363 = zext i32 %1602 to i64
  %arrayidx5364 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1603 = load i32, i32* %arrayidx5364, align 4
  %conv5365 = zext i32 %1603 to i64
  %and5366 = and i64 %conv5365, 4294967295
  %shr5367 = lshr i64 %and5366, 6
  %arrayidx5368 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1604 = load i32, i32* %arrayidx5368, align 4
  %conv5369 = zext i32 %1604 to i64
  %shl5370 = shl i64 %conv5369, 26
  %or5371 = or i64 %shr5367, %shl5370
  %and5372 = and i64 %or5371, 4294967295
  %arrayidx5373 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1605 = load i32, i32* %arrayidx5373, align 4
  %conv5374 = zext i32 %1605 to i64
  %and5375 = and i64 %conv5374, 4294967295
  %shr5376 = lshr i64 %and5375, 11
  %arrayidx5377 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1606 = load i32, i32* %arrayidx5377, align 4
  %conv5378 = zext i32 %1606 to i64
  %shl5379 = shl i64 %conv5378, 21
  %or5380 = or i64 %shr5376, %shl5379
  %and5381 = and i64 %or5380, 4294967295
  %xor5382 = xor i64 %and5372, %and5381
  %arrayidx5383 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1607 = load i32, i32* %arrayidx5383, align 4
  %conv5384 = zext i32 %1607 to i64
  %and5385 = and i64 %conv5384, 4294967295
  %shr5386 = lshr i64 %and5385, 25
  %arrayidx5387 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1608 = load i32, i32* %arrayidx5387, align 4
  %conv5388 = zext i32 %1608 to i64
  %shl5389 = shl i64 %conv5388, 7
  %or5390 = or i64 %shr5386, %shl5389
  %and5391 = and i64 %or5390, 4294967295
  %xor5392 = xor i64 %xor5382, %and5391
  %add5393 = add i64 %conv5363, %xor5392
  %arrayidx5394 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1609 = load i32, i32* %arrayidx5394, align 4
  %arrayidx5395 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1610 = load i32, i32* %arrayidx5395, align 4
  %arrayidx5396 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1611 = load i32, i32* %arrayidx5396, align 4
  %arrayidx5397 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1612 = load i32, i32* %arrayidx5397, align 4
  %xor5398 = xor i32 %1611, %1612
  %and5399 = and i32 %1610, %xor5398
  %xor5400 = xor i32 %1609, %and5399
  %conv5401 = zext i32 %xor5400 to i64
  %add5402 = add i64 %add5393, %conv5401
  %add5403 = add i64 %add5402, 2227730452
  %arrayidx5404 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 58
  %1613 = load i32, i32* %arrayidx5404, align 4
  %conv5405 = zext i32 %1613 to i64
  %add5406 = add i64 %add5403, %conv5405
  %conv5407 = trunc i64 %add5406 to i32
  store i32 %conv5407, i32* %t0, align 4
  %arrayidx5408 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1614 = load i32, i32* %arrayidx5408, align 4
  %conv5409 = zext i32 %1614 to i64
  %and5410 = and i64 %conv5409, 4294967295
  %shr5411 = lshr i64 %and5410, 2
  %arrayidx5412 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1615 = load i32, i32* %arrayidx5412, align 4
  %conv5413 = zext i32 %1615 to i64
  %shl5414 = shl i64 %conv5413, 30
  %or5415 = or i64 %shr5411, %shl5414
  %and5416 = and i64 %or5415, 4294967295
  %arrayidx5417 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1616 = load i32, i32* %arrayidx5417, align 4
  %conv5418 = zext i32 %1616 to i64
  %and5419 = and i64 %conv5418, 4294967295
  %shr5420 = lshr i64 %and5419, 13
  %arrayidx5421 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1617 = load i32, i32* %arrayidx5421, align 4
  %conv5422 = zext i32 %1617 to i64
  %shl5423 = shl i64 %conv5422, 19
  %or5424 = or i64 %shr5420, %shl5423
  %and5425 = and i64 %or5424, 4294967295
  %xor5426 = xor i64 %and5416, %and5425
  %arrayidx5427 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1618 = load i32, i32* %arrayidx5427, align 4
  %conv5428 = zext i32 %1618 to i64
  %and5429 = and i64 %conv5428, 4294967295
  %shr5430 = lshr i64 %and5429, 22
  %arrayidx5431 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1619 = load i32, i32* %arrayidx5431, align 4
  %conv5432 = zext i32 %1619 to i64
  %shl5433 = shl i64 %conv5432, 10
  %or5434 = or i64 %shr5430, %shl5433
  %and5435 = and i64 %or5434, 4294967295
  %xor5436 = xor i64 %xor5426, %and5435
  %arrayidx5437 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1620 = load i32, i32* %arrayidx5437, align 4
  %arrayidx5438 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1621 = load i32, i32* %arrayidx5438, align 4
  %or5439 = or i32 %1620, %1621
  %arrayidx5440 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1622 = load i32, i32* %arrayidx5440, align 4
  %and5441 = and i32 %or5439, %1622
  %arrayidx5442 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1623 = load i32, i32* %arrayidx5442, align 4
  %arrayidx5443 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1624 = load i32, i32* %arrayidx5443, align 4
  %and5444 = and i32 %1623, %1624
  %or5445 = or i32 %and5441, %and5444
  %conv5446 = zext i32 %or5445 to i64
  %add5447 = add i64 %xor5436, %conv5446
  %conv5448 = trunc i64 %add5447 to i32
  store i32 %conv5448, i32* %t1, align 4
  %1625 = load i32, i32* %t0, align 4
  %arrayidx5449 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1626 = load i32, i32* %arrayidx5449, align 4
  %add5450 = add i32 %1626, %1625
  store i32 %add5450, i32* %arrayidx5449, align 4
  %1627 = load i32, i32* %t0, align 4
  %1628 = load i32, i32* %t1, align 4
  %add5451 = add i32 %1627, %1628
  %arrayidx5452 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  store i32 %add5451, i32* %arrayidx5452, align 4
  %arrayidx5453 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1629 = load i32, i32* %arrayidx5453, align 4
  %conv5454 = zext i32 %1629 to i64
  %arrayidx5455 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1630 = load i32, i32* %arrayidx5455, align 4
  %conv5456 = zext i32 %1630 to i64
  %and5457 = and i64 %conv5456, 4294967295
  %shr5458 = lshr i64 %and5457, 6
  %arrayidx5459 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1631 = load i32, i32* %arrayidx5459, align 4
  %conv5460 = zext i32 %1631 to i64
  %shl5461 = shl i64 %conv5460, 26
  %or5462 = or i64 %shr5458, %shl5461
  %and5463 = and i64 %or5462, 4294967295
  %arrayidx5464 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1632 = load i32, i32* %arrayidx5464, align 4
  %conv5465 = zext i32 %1632 to i64
  %and5466 = and i64 %conv5465, 4294967295
  %shr5467 = lshr i64 %and5466, 11
  %arrayidx5468 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1633 = load i32, i32* %arrayidx5468, align 4
  %conv5469 = zext i32 %1633 to i64
  %shl5470 = shl i64 %conv5469, 21
  %or5471 = or i64 %shr5467, %shl5470
  %and5472 = and i64 %or5471, 4294967295
  %xor5473 = xor i64 %and5463, %and5472
  %arrayidx5474 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1634 = load i32, i32* %arrayidx5474, align 4
  %conv5475 = zext i32 %1634 to i64
  %and5476 = and i64 %conv5475, 4294967295
  %shr5477 = lshr i64 %and5476, 25
  %arrayidx5478 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1635 = load i32, i32* %arrayidx5478, align 4
  %conv5479 = zext i32 %1635 to i64
  %shl5480 = shl i64 %conv5479, 7
  %or5481 = or i64 %shr5477, %shl5480
  %and5482 = and i64 %or5481, 4294967295
  %xor5483 = xor i64 %xor5473, %and5482
  %add5484 = add i64 %conv5454, %xor5483
  %arrayidx5485 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1636 = load i32, i32* %arrayidx5485, align 4
  %arrayidx5486 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1637 = load i32, i32* %arrayidx5486, align 4
  %arrayidx5487 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1638 = load i32, i32* %arrayidx5487, align 4
  %arrayidx5488 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1639 = load i32, i32* %arrayidx5488, align 4
  %xor5489 = xor i32 %1638, %1639
  %and5490 = and i32 %1637, %xor5489
  %xor5491 = xor i32 %1636, %and5490
  %conv5492 = zext i32 %xor5491 to i64
  %add5493 = add i64 %add5484, %conv5492
  %add5494 = add i64 %add5493, 2361852424
  %arrayidx5495 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 59
  %1640 = load i32, i32* %arrayidx5495, align 4
  %conv5496 = zext i32 %1640 to i64
  %add5497 = add i64 %add5494, %conv5496
  %conv5498 = trunc i64 %add5497 to i32
  store i32 %conv5498, i32* %t0, align 4
  %arrayidx5499 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1641 = load i32, i32* %arrayidx5499, align 4
  %conv5500 = zext i32 %1641 to i64
  %and5501 = and i64 %conv5500, 4294967295
  %shr5502 = lshr i64 %and5501, 2
  %arrayidx5503 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1642 = load i32, i32* %arrayidx5503, align 4
  %conv5504 = zext i32 %1642 to i64
  %shl5505 = shl i64 %conv5504, 30
  %or5506 = or i64 %shr5502, %shl5505
  %and5507 = and i64 %or5506, 4294967295
  %arrayidx5508 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1643 = load i32, i32* %arrayidx5508, align 4
  %conv5509 = zext i32 %1643 to i64
  %and5510 = and i64 %conv5509, 4294967295
  %shr5511 = lshr i64 %and5510, 13
  %arrayidx5512 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1644 = load i32, i32* %arrayidx5512, align 4
  %conv5513 = zext i32 %1644 to i64
  %shl5514 = shl i64 %conv5513, 19
  %or5515 = or i64 %shr5511, %shl5514
  %and5516 = and i64 %or5515, 4294967295
  %xor5517 = xor i64 %and5507, %and5516
  %arrayidx5518 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1645 = load i32, i32* %arrayidx5518, align 4
  %conv5519 = zext i32 %1645 to i64
  %and5520 = and i64 %conv5519, 4294967295
  %shr5521 = lshr i64 %and5520, 22
  %arrayidx5522 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1646 = load i32, i32* %arrayidx5522, align 4
  %conv5523 = zext i32 %1646 to i64
  %shl5524 = shl i64 %conv5523, 10
  %or5525 = or i64 %shr5521, %shl5524
  %and5526 = and i64 %or5525, 4294967295
  %xor5527 = xor i64 %xor5517, %and5526
  %arrayidx5528 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1647 = load i32, i32* %arrayidx5528, align 4
  %arrayidx5529 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1648 = load i32, i32* %arrayidx5529, align 4
  %or5530 = or i32 %1647, %1648
  %arrayidx5531 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1649 = load i32, i32* %arrayidx5531, align 4
  %and5532 = and i32 %or5530, %1649
  %arrayidx5533 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1650 = load i32, i32* %arrayidx5533, align 4
  %arrayidx5534 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1651 = load i32, i32* %arrayidx5534, align 4
  %and5535 = and i32 %1650, %1651
  %or5536 = or i32 %and5532, %and5535
  %conv5537 = zext i32 %or5536 to i64
  %add5538 = add i64 %xor5527, %conv5537
  %conv5539 = trunc i64 %add5538 to i32
  store i32 %conv5539, i32* %t1, align 4
  %1652 = load i32, i32* %t0, align 4
  %arrayidx5540 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1653 = load i32, i32* %arrayidx5540, align 4
  %add5541 = add i32 %1653, %1652
  store i32 %add5541, i32* %arrayidx5540, align 4
  %1654 = load i32, i32* %t0, align 4
  %1655 = load i32, i32* %t1, align 4
  %add5542 = add i32 %1654, %1655
  %arrayidx5543 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  store i32 %add5542, i32* %arrayidx5543, align 4
  %arrayidx5544 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1656 = load i32, i32* %arrayidx5544, align 4
  %conv5545 = zext i32 %1656 to i64
  %arrayidx5546 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1657 = load i32, i32* %arrayidx5546, align 4
  %conv5547 = zext i32 %1657 to i64
  %and5548 = and i64 %conv5547, 4294967295
  %shr5549 = lshr i64 %and5548, 6
  %arrayidx5550 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1658 = load i32, i32* %arrayidx5550, align 4
  %conv5551 = zext i32 %1658 to i64
  %shl5552 = shl i64 %conv5551, 26
  %or5553 = or i64 %shr5549, %shl5552
  %and5554 = and i64 %or5553, 4294967295
  %arrayidx5555 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1659 = load i32, i32* %arrayidx5555, align 4
  %conv5556 = zext i32 %1659 to i64
  %and5557 = and i64 %conv5556, 4294967295
  %shr5558 = lshr i64 %and5557, 11
  %arrayidx5559 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1660 = load i32, i32* %arrayidx5559, align 4
  %conv5560 = zext i32 %1660 to i64
  %shl5561 = shl i64 %conv5560, 21
  %or5562 = or i64 %shr5558, %shl5561
  %and5563 = and i64 %or5562, 4294967295
  %xor5564 = xor i64 %and5554, %and5563
  %arrayidx5565 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1661 = load i32, i32* %arrayidx5565, align 4
  %conv5566 = zext i32 %1661 to i64
  %and5567 = and i64 %conv5566, 4294967295
  %shr5568 = lshr i64 %and5567, 25
  %arrayidx5569 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1662 = load i32, i32* %arrayidx5569, align 4
  %conv5570 = zext i32 %1662 to i64
  %shl5571 = shl i64 %conv5570, 7
  %or5572 = or i64 %shr5568, %shl5571
  %and5573 = and i64 %or5572, 4294967295
  %xor5574 = xor i64 %xor5564, %and5573
  %add5575 = add i64 %conv5545, %xor5574
  %arrayidx5576 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1663 = load i32, i32* %arrayidx5576, align 4
  %arrayidx5577 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1664 = load i32, i32* %arrayidx5577, align 4
  %arrayidx5578 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1665 = load i32, i32* %arrayidx5578, align 4
  %arrayidx5579 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1666 = load i32, i32* %arrayidx5579, align 4
  %xor5580 = xor i32 %1665, %1666
  %and5581 = and i32 %1664, %xor5580
  %xor5582 = xor i32 %1663, %and5581
  %conv5583 = zext i32 %xor5582 to i64
  %add5584 = add i64 %add5575, %conv5583
  %add5585 = add i64 %add5584, 2428436474
  %arrayidx5586 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 60
  %1667 = load i32, i32* %arrayidx5586, align 4
  %conv5587 = zext i32 %1667 to i64
  %add5588 = add i64 %add5585, %conv5587
  %conv5589 = trunc i64 %add5588 to i32
  store i32 %conv5589, i32* %t0, align 4
  %arrayidx5590 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1668 = load i32, i32* %arrayidx5590, align 4
  %conv5591 = zext i32 %1668 to i64
  %and5592 = and i64 %conv5591, 4294967295
  %shr5593 = lshr i64 %and5592, 2
  %arrayidx5594 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1669 = load i32, i32* %arrayidx5594, align 4
  %conv5595 = zext i32 %1669 to i64
  %shl5596 = shl i64 %conv5595, 30
  %or5597 = or i64 %shr5593, %shl5596
  %and5598 = and i64 %or5597, 4294967295
  %arrayidx5599 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1670 = load i32, i32* %arrayidx5599, align 4
  %conv5600 = zext i32 %1670 to i64
  %and5601 = and i64 %conv5600, 4294967295
  %shr5602 = lshr i64 %and5601, 13
  %arrayidx5603 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1671 = load i32, i32* %arrayidx5603, align 4
  %conv5604 = zext i32 %1671 to i64
  %shl5605 = shl i64 %conv5604, 19
  %or5606 = or i64 %shr5602, %shl5605
  %and5607 = and i64 %or5606, 4294967295
  %xor5608 = xor i64 %and5598, %and5607
  %arrayidx5609 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1672 = load i32, i32* %arrayidx5609, align 4
  %conv5610 = zext i32 %1672 to i64
  %and5611 = and i64 %conv5610, 4294967295
  %shr5612 = lshr i64 %and5611, 22
  %arrayidx5613 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1673 = load i32, i32* %arrayidx5613, align 4
  %conv5614 = zext i32 %1673 to i64
  %shl5615 = shl i64 %conv5614, 10
  %or5616 = or i64 %shr5612, %shl5615
  %and5617 = and i64 %or5616, 4294967295
  %xor5618 = xor i64 %xor5608, %and5617
  %arrayidx5619 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1674 = load i32, i32* %arrayidx5619, align 4
  %arrayidx5620 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1675 = load i32, i32* %arrayidx5620, align 4
  %or5621 = or i32 %1674, %1675
  %arrayidx5622 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1676 = load i32, i32* %arrayidx5622, align 4
  %and5623 = and i32 %or5621, %1676
  %arrayidx5624 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1677 = load i32, i32* %arrayidx5624, align 4
  %arrayidx5625 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1678 = load i32, i32* %arrayidx5625, align 4
  %and5626 = and i32 %1677, %1678
  %or5627 = or i32 %and5623, %and5626
  %conv5628 = zext i32 %or5627 to i64
  %add5629 = add i64 %xor5618, %conv5628
  %conv5630 = trunc i64 %add5629 to i32
  store i32 %conv5630, i32* %t1, align 4
  %1679 = load i32, i32* %t0, align 4
  %arrayidx5631 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1680 = load i32, i32* %arrayidx5631, align 4
  %add5632 = add i32 %1680, %1679
  store i32 %add5632, i32* %arrayidx5631, align 4
  %1681 = load i32, i32* %t0, align 4
  %1682 = load i32, i32* %t1, align 4
  %add5633 = add i32 %1681, %1682
  %arrayidx5634 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  store i32 %add5633, i32* %arrayidx5634, align 4
  %arrayidx5635 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1683 = load i32, i32* %arrayidx5635, align 4
  %conv5636 = zext i32 %1683 to i64
  %arrayidx5637 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1684 = load i32, i32* %arrayidx5637, align 4
  %conv5638 = zext i32 %1684 to i64
  %and5639 = and i64 %conv5638, 4294967295
  %shr5640 = lshr i64 %and5639, 6
  %arrayidx5641 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1685 = load i32, i32* %arrayidx5641, align 4
  %conv5642 = zext i32 %1685 to i64
  %shl5643 = shl i64 %conv5642, 26
  %or5644 = or i64 %shr5640, %shl5643
  %and5645 = and i64 %or5644, 4294967295
  %arrayidx5646 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1686 = load i32, i32* %arrayidx5646, align 4
  %conv5647 = zext i32 %1686 to i64
  %and5648 = and i64 %conv5647, 4294967295
  %shr5649 = lshr i64 %and5648, 11
  %arrayidx5650 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1687 = load i32, i32* %arrayidx5650, align 4
  %conv5651 = zext i32 %1687 to i64
  %shl5652 = shl i64 %conv5651, 21
  %or5653 = or i64 %shr5649, %shl5652
  %and5654 = and i64 %or5653, 4294967295
  %xor5655 = xor i64 %and5645, %and5654
  %arrayidx5656 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1688 = load i32, i32* %arrayidx5656, align 4
  %conv5657 = zext i32 %1688 to i64
  %and5658 = and i64 %conv5657, 4294967295
  %shr5659 = lshr i64 %and5658, 25
  %arrayidx5660 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1689 = load i32, i32* %arrayidx5660, align 4
  %conv5661 = zext i32 %1689 to i64
  %shl5662 = shl i64 %conv5661, 7
  %or5663 = or i64 %shr5659, %shl5662
  %and5664 = and i64 %or5663, 4294967295
  %xor5665 = xor i64 %xor5655, %and5664
  %add5666 = add i64 %conv5636, %xor5665
  %arrayidx5667 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1690 = load i32, i32* %arrayidx5667, align 4
  %arrayidx5668 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1691 = load i32, i32* %arrayidx5668, align 4
  %arrayidx5669 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1692 = load i32, i32* %arrayidx5669, align 4
  %arrayidx5670 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1693 = load i32, i32* %arrayidx5670, align 4
  %xor5671 = xor i32 %1692, %1693
  %and5672 = and i32 %1691, %xor5671
  %xor5673 = xor i32 %1690, %and5672
  %conv5674 = zext i32 %xor5673 to i64
  %add5675 = add i64 %add5666, %conv5674
  %add5676 = add i64 %add5675, 2756734187
  %arrayidx5677 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 61
  %1694 = load i32, i32* %arrayidx5677, align 4
  %conv5678 = zext i32 %1694 to i64
  %add5679 = add i64 %add5676, %conv5678
  %conv5680 = trunc i64 %add5679 to i32
  store i32 %conv5680, i32* %t0, align 4
  %arrayidx5681 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1695 = load i32, i32* %arrayidx5681, align 4
  %conv5682 = zext i32 %1695 to i64
  %and5683 = and i64 %conv5682, 4294967295
  %shr5684 = lshr i64 %and5683, 2
  %arrayidx5685 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1696 = load i32, i32* %arrayidx5685, align 4
  %conv5686 = zext i32 %1696 to i64
  %shl5687 = shl i64 %conv5686, 30
  %or5688 = or i64 %shr5684, %shl5687
  %and5689 = and i64 %or5688, 4294967295
  %arrayidx5690 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1697 = load i32, i32* %arrayidx5690, align 4
  %conv5691 = zext i32 %1697 to i64
  %and5692 = and i64 %conv5691, 4294967295
  %shr5693 = lshr i64 %and5692, 13
  %arrayidx5694 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1698 = load i32, i32* %arrayidx5694, align 4
  %conv5695 = zext i32 %1698 to i64
  %shl5696 = shl i64 %conv5695, 19
  %or5697 = or i64 %shr5693, %shl5696
  %and5698 = and i64 %or5697, 4294967295
  %xor5699 = xor i64 %and5689, %and5698
  %arrayidx5700 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1699 = load i32, i32* %arrayidx5700, align 4
  %conv5701 = zext i32 %1699 to i64
  %and5702 = and i64 %conv5701, 4294967295
  %shr5703 = lshr i64 %and5702, 22
  %arrayidx5704 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1700 = load i32, i32* %arrayidx5704, align 4
  %conv5705 = zext i32 %1700 to i64
  %shl5706 = shl i64 %conv5705, 10
  %or5707 = or i64 %shr5703, %shl5706
  %and5708 = and i64 %or5707, 4294967295
  %xor5709 = xor i64 %xor5699, %and5708
  %arrayidx5710 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1701 = load i32, i32* %arrayidx5710, align 4
  %arrayidx5711 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1702 = load i32, i32* %arrayidx5711, align 4
  %or5712 = or i32 %1701, %1702
  %arrayidx5713 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1703 = load i32, i32* %arrayidx5713, align 4
  %and5714 = and i32 %or5712, %1703
  %arrayidx5715 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1704 = load i32, i32* %arrayidx5715, align 4
  %arrayidx5716 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1705 = load i32, i32* %arrayidx5716, align 4
  %and5717 = and i32 %1704, %1705
  %or5718 = or i32 %and5714, %and5717
  %conv5719 = zext i32 %or5718 to i64
  %add5720 = add i64 %xor5709, %conv5719
  %conv5721 = trunc i64 %add5720 to i32
  store i32 %conv5721, i32* %t1, align 4
  %1706 = load i32, i32* %t0, align 4
  %arrayidx5722 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1707 = load i32, i32* %arrayidx5722, align 4
  %add5723 = add i32 %1707, %1706
  store i32 %add5723, i32* %arrayidx5722, align 4
  %1708 = load i32, i32* %t0, align 4
  %1709 = load i32, i32* %t1, align 4
  %add5724 = add i32 %1708, %1709
  %arrayidx5725 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  store i32 %add5724, i32* %arrayidx5725, align 4
  %arrayidx5726 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1710 = load i32, i32* %arrayidx5726, align 4
  %conv5727 = zext i32 %1710 to i64
  %arrayidx5728 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1711 = load i32, i32* %arrayidx5728, align 4
  %conv5729 = zext i32 %1711 to i64
  %and5730 = and i64 %conv5729, 4294967295
  %shr5731 = lshr i64 %and5730, 6
  %arrayidx5732 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1712 = load i32, i32* %arrayidx5732, align 4
  %conv5733 = zext i32 %1712 to i64
  %shl5734 = shl i64 %conv5733, 26
  %or5735 = or i64 %shr5731, %shl5734
  %and5736 = and i64 %or5735, 4294967295
  %arrayidx5737 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1713 = load i32, i32* %arrayidx5737, align 4
  %conv5738 = zext i32 %1713 to i64
  %and5739 = and i64 %conv5738, 4294967295
  %shr5740 = lshr i64 %and5739, 11
  %arrayidx5741 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1714 = load i32, i32* %arrayidx5741, align 4
  %conv5742 = zext i32 %1714 to i64
  %shl5743 = shl i64 %conv5742, 21
  %or5744 = or i64 %shr5740, %shl5743
  %and5745 = and i64 %or5744, 4294967295
  %xor5746 = xor i64 %and5736, %and5745
  %arrayidx5747 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1715 = load i32, i32* %arrayidx5747, align 4
  %conv5748 = zext i32 %1715 to i64
  %and5749 = and i64 %conv5748, 4294967295
  %shr5750 = lshr i64 %and5749, 25
  %arrayidx5751 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1716 = load i32, i32* %arrayidx5751, align 4
  %conv5752 = zext i32 %1716 to i64
  %shl5753 = shl i64 %conv5752, 7
  %or5754 = or i64 %shr5750, %shl5753
  %and5755 = and i64 %or5754, 4294967295
  %xor5756 = xor i64 %xor5746, %and5755
  %add5757 = add i64 %conv5727, %xor5756
  %arrayidx5758 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1717 = load i32, i32* %arrayidx5758, align 4
  %arrayidx5759 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1718 = load i32, i32* %arrayidx5759, align 4
  %arrayidx5760 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1719 = load i32, i32* %arrayidx5760, align 4
  %arrayidx5761 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1720 = load i32, i32* %arrayidx5761, align 4
  %xor5762 = xor i32 %1719, %1720
  %and5763 = and i32 %1718, %xor5762
  %xor5764 = xor i32 %1717, %and5763
  %conv5765 = zext i32 %xor5764 to i64
  %add5766 = add i64 %add5757, %conv5765
  %add5767 = add i64 %add5766, 3204031479
  %arrayidx5768 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 62
  %1721 = load i32, i32* %arrayidx5768, align 4
  %conv5769 = zext i32 %1721 to i64
  %add5770 = add i64 %add5767, %conv5769
  %conv5771 = trunc i64 %add5770 to i32
  store i32 %conv5771, i32* %t0, align 4
  %arrayidx5772 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1722 = load i32, i32* %arrayidx5772, align 4
  %conv5773 = zext i32 %1722 to i64
  %and5774 = and i64 %conv5773, 4294967295
  %shr5775 = lshr i64 %and5774, 2
  %arrayidx5776 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1723 = load i32, i32* %arrayidx5776, align 4
  %conv5777 = zext i32 %1723 to i64
  %shl5778 = shl i64 %conv5777, 30
  %or5779 = or i64 %shr5775, %shl5778
  %and5780 = and i64 %or5779, 4294967295
  %arrayidx5781 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1724 = load i32, i32* %arrayidx5781, align 4
  %conv5782 = zext i32 %1724 to i64
  %and5783 = and i64 %conv5782, 4294967295
  %shr5784 = lshr i64 %and5783, 13
  %arrayidx5785 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1725 = load i32, i32* %arrayidx5785, align 4
  %conv5786 = zext i32 %1725 to i64
  %shl5787 = shl i64 %conv5786, 19
  %or5788 = or i64 %shr5784, %shl5787
  %and5789 = and i64 %or5788, 4294967295
  %xor5790 = xor i64 %and5780, %and5789
  %arrayidx5791 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1726 = load i32, i32* %arrayidx5791, align 4
  %conv5792 = zext i32 %1726 to i64
  %and5793 = and i64 %conv5792, 4294967295
  %shr5794 = lshr i64 %and5793, 22
  %arrayidx5795 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1727 = load i32, i32* %arrayidx5795, align 4
  %conv5796 = zext i32 %1727 to i64
  %shl5797 = shl i64 %conv5796, 10
  %or5798 = or i64 %shr5794, %shl5797
  %and5799 = and i64 %or5798, 4294967295
  %xor5800 = xor i64 %xor5790, %and5799
  %arrayidx5801 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1728 = load i32, i32* %arrayidx5801, align 4
  %arrayidx5802 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1729 = load i32, i32* %arrayidx5802, align 4
  %or5803 = or i32 %1728, %1729
  %arrayidx5804 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1730 = load i32, i32* %arrayidx5804, align 4
  %and5805 = and i32 %or5803, %1730
  %arrayidx5806 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1731 = load i32, i32* %arrayidx5806, align 4
  %arrayidx5807 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1732 = load i32, i32* %arrayidx5807, align 4
  %and5808 = and i32 %1731, %1732
  %or5809 = or i32 %and5805, %and5808
  %conv5810 = zext i32 %or5809 to i64
  %add5811 = add i64 %xor5800, %conv5810
  %conv5812 = trunc i64 %add5811 to i32
  store i32 %conv5812, i32* %t1, align 4
  %1733 = load i32, i32* %t0, align 4
  %arrayidx5813 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1734 = load i32, i32* %arrayidx5813, align 4
  %add5814 = add i32 %1734, %1733
  store i32 %add5814, i32* %arrayidx5813, align 4
  %1735 = load i32, i32* %t0, align 4
  %1736 = load i32, i32* %t1, align 4
  %add5815 = add i32 %1735, %1736
  %arrayidx5816 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  store i32 %add5815, i32* %arrayidx5816, align 4
  %arrayidx5817 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  %1737 = load i32, i32* %arrayidx5817, align 4
  %conv5818 = zext i32 %1737 to i64
  %arrayidx5819 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1738 = load i32, i32* %arrayidx5819, align 4
  %conv5820 = zext i32 %1738 to i64
  %and5821 = and i64 %conv5820, 4294967295
  %shr5822 = lshr i64 %and5821, 6
  %arrayidx5823 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1739 = load i32, i32* %arrayidx5823, align 4
  %conv5824 = zext i32 %1739 to i64
  %shl5825 = shl i64 %conv5824, 26
  %or5826 = or i64 %shr5822, %shl5825
  %and5827 = and i64 %or5826, 4294967295
  %arrayidx5828 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1740 = load i32, i32* %arrayidx5828, align 4
  %conv5829 = zext i32 %1740 to i64
  %and5830 = and i64 %conv5829, 4294967295
  %shr5831 = lshr i64 %and5830, 11
  %arrayidx5832 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1741 = load i32, i32* %arrayidx5832, align 4
  %conv5833 = zext i32 %1741 to i64
  %shl5834 = shl i64 %conv5833, 21
  %or5835 = or i64 %shr5831, %shl5834
  %and5836 = and i64 %or5835, 4294967295
  %xor5837 = xor i64 %and5827, %and5836
  %arrayidx5838 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1742 = load i32, i32* %arrayidx5838, align 4
  %conv5839 = zext i32 %1742 to i64
  %and5840 = and i64 %conv5839, 4294967295
  %shr5841 = lshr i64 %and5840, 25
  %arrayidx5842 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1743 = load i32, i32* %arrayidx5842, align 4
  %conv5843 = zext i32 %1743 to i64
  %shl5844 = shl i64 %conv5843, 7
  %or5845 = or i64 %shr5841, %shl5844
  %and5846 = and i64 %or5845, 4294967295
  %xor5847 = xor i64 %xor5837, %and5846
  %add5848 = add i64 %conv5818, %xor5847
  %arrayidx5849 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1744 = load i32, i32* %arrayidx5849, align 4
  %arrayidx5850 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 5
  %1745 = load i32, i32* %arrayidx5850, align 4
  %arrayidx5851 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 6
  %1746 = load i32, i32* %arrayidx5851, align 4
  %arrayidx5852 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 7
  %1747 = load i32, i32* %arrayidx5852, align 4
  %xor5853 = xor i32 %1746, %1747
  %and5854 = and i32 %1745, %xor5853
  %xor5855 = xor i32 %1744, %and5854
  %conv5856 = zext i32 %xor5855 to i64
  %add5857 = add i64 %add5848, %conv5856
  %add5858 = add i64 %add5857, 3329325298
  %arrayidx5859 = getelementptr [64 x i32], [64 x i32]* %W, i32 0, i64 63
  %1748 = load i32, i32* %arrayidx5859, align 4
  %conv5860 = zext i32 %1748 to i64
  %add5861 = add i64 %add5858, %conv5860
  %conv5862 = trunc i64 %add5861 to i32
  store i32 %conv5862, i32* %t0, align 4
  %arrayidx5863 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1749 = load i32, i32* %arrayidx5863, align 4
  %conv5864 = zext i32 %1749 to i64
  %and5865 = and i64 %conv5864, 4294967295
  %shr5866 = lshr i64 %and5865, 2
  %arrayidx5867 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1750 = load i32, i32* %arrayidx5867, align 4
  %conv5868 = zext i32 %1750 to i64
  %shl5869 = shl i64 %conv5868, 30
  %or5870 = or i64 %shr5866, %shl5869
  %and5871 = and i64 %or5870, 4294967295
  %arrayidx5872 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1751 = load i32, i32* %arrayidx5872, align 4
  %conv5873 = zext i32 %1751 to i64
  %and5874 = and i64 %conv5873, 4294967295
  %shr5875 = lshr i64 %and5874, 13
  %arrayidx5876 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1752 = load i32, i32* %arrayidx5876, align 4
  %conv5877 = zext i32 %1752 to i64
  %shl5878 = shl i64 %conv5877, 19
  %or5879 = or i64 %shr5875, %shl5878
  %and5880 = and i64 %or5879, 4294967295
  %xor5881 = xor i64 %and5871, %and5880
  %arrayidx5882 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1753 = load i32, i32* %arrayidx5882, align 4
  %conv5883 = zext i32 %1753 to i64
  %and5884 = and i64 %conv5883, 4294967295
  %shr5885 = lshr i64 %and5884, 22
  %arrayidx5886 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1754 = load i32, i32* %arrayidx5886, align 4
  %conv5887 = zext i32 %1754 to i64
  %shl5888 = shl i64 %conv5887, 10
  %or5889 = or i64 %shr5885, %shl5888
  %and5890 = and i64 %or5889, 4294967295
  %xor5891 = xor i64 %xor5881, %and5890
  %arrayidx5892 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1755 = load i32, i32* %arrayidx5892, align 4
  %arrayidx5893 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1756 = load i32, i32* %arrayidx5893, align 4
  %or5894 = or i32 %1755, %1756
  %arrayidx5895 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 3
  %1757 = load i32, i32* %arrayidx5895, align 4
  %and5896 = and i32 %or5894, %1757
  %arrayidx5897 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 1
  %1758 = load i32, i32* %arrayidx5897, align 4
  %arrayidx5898 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 2
  %1759 = load i32, i32* %arrayidx5898, align 4
  %and5899 = and i32 %1758, %1759
  %or5900 = or i32 %and5896, %and5899
  %conv5901 = zext i32 %or5900 to i64
  %add5902 = add i64 %xor5891, %conv5901
  %conv5903 = trunc i64 %add5902 to i32
  store i32 %conv5903, i32* %t1, align 4
  %1760 = load i32, i32* %t0, align 4
  %arrayidx5904 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 4
  %1761 = load i32, i32* %arrayidx5904, align 4
  %add5905 = add i32 %1761, %1760
  store i32 %add5905, i32* %arrayidx5904, align 4
  %1762 = load i32, i32* %t0, align 4
  %1763 = load i32, i32* %t1, align 4
  %add5906 = add i32 %1762, %1763
  %arrayidx5907 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 0
  store i32 %add5906, i32* %arrayidx5907, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.5908

for.cond.5908:                                    ; preds = %for.inc.5921, %for.end.83
  %1764 = load i32, i32* %i, align 4
  %cmp5909 = icmp slt i32 %1764, 8
  br i1 %cmp5909, label %for.body.5911, label %for.end.5923

for.body.5911:                                    ; preds = %for.cond.5908
  %1765 = load i32, i32* %i, align 4
  %idxprom5912 = sext i32 %1765 to i64
  %1766 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest5913 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %1766, i32 0, i32 1
  %arrayidx5914 = getelementptr [8 x i32], [8 x i32]* %digest5913, i32 0, i64 %idxprom5912
  %1767 = load i32, i32* %arrayidx5914, align 4
  %1768 = load i32, i32* %i, align 4
  %idxprom5915 = sext i32 %1768 to i64
  %arrayidx5916 = getelementptr [8 x i32], [8 x i32]* %S, i32 0, i64 %idxprom5915
  %1769 = load i32, i32* %arrayidx5916, align 4
  %add5917 = add i32 %1767, %1769
  %1770 = load i32, i32* %i, align 4
  %idxprom5918 = sext i32 %1770 to i64
  %1771 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest5919 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %1771, i32 0, i32 1
  %arrayidx5920 = getelementptr [8 x i32], [8 x i32]* %digest5919, i32 0, i64 %idxprom5918
  store i32 %add5917, i32* %arrayidx5920, align 4
  br label %for.inc.5921

for.inc.5921:                                     ; preds = %for.body.5911
  %1772 = load i32, i32* %i, align 4
  %inc5922 = add i32 %1772, 1
  store i32 %inc5922, i32* %i, align 4
  br label %for.cond.5908

for.end.5923:                                     ; preds = %for.cond.5908
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @longReverse(i32* %buffer, i32 %byteCount) #0 {
entry:
  %buffer.addr = alloca i32*, align 8
  %byteCount.addr = alloca i32, align 4
  %value = alloca i32, align 4
  store i32* %buffer, i32** %buffer.addr, align 8
  store i32 %byteCount, i32* %byteCount.addr, align 4
  %0 = load i32, i32* %byteCount.addr, align 4
  %conv = sext i32 %0 to i64
  %div = udiv i64 %conv, 4
  %conv1 = trunc i64 %div to i32
  store i32 %conv1, i32* %byteCount.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i32, i32* %byteCount.addr, align 4
  %dec = add i32 %1, -1
  store i32 %dec, i32* %byteCount.addr, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load i32*, i32** %buffer.addr, align 8
  %3 = load i32, i32* %2, align 4
  store i32 %3, i32* %value, align 4
  %4 = load i32, i32* %value, align 4
  %conv2 = zext i32 %4 to i64
  %and = and i64 %conv2, 4278255360
  %shr = ashr i64 %and, 8
  %5 = load i32, i32* %value, align 4
  %conv3 = zext i32 %5 to i64
  %and4 = and i64 %conv3, 16711935
  %shl = shl i64 %and4, 8
  %or = or i64 %shr, %shl
  %conv5 = trunc i64 %or to i32
  store i32 %conv5, i32* %value, align 4
  %6 = load i32, i32* %value, align 4
  %shl6 = shl i32 %6, 16
  %7 = load i32, i32* %value, align 4
  %shr7 = lshr i32 %7, 16
  %or8 = or i32 %shl6, %shr7
  %8 = load i32*, i32** %buffer.addr, align 8
  %incdec.ptr = getelementptr i32, i32* %8, i32 1
  store i32* %incdec.ptr, i32** %buffer.addr, align 8
  store i32 %or8, i32* %8, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

declare %struct._object* @PyUnicode_New(i64, i32) #1

declare i32 @PyArg_ParseTuple(%struct._object*, i8*, ...) #1

declare void @PyErr_SetString(%struct._object*, i8*) #1

declare i32 @PyObject_GetBuffer(%struct._object*, %struct.bufferinfo*, i32) #1

declare void @PyBuffer_Release(%struct.bufferinfo*) #1

; Function Attrs: nounwind uwtable
define internal void @sha_update(%struct.SHAobject* %sha_info, i8* %buffer, i64 %count) #0 {
entry:
  %sha_info.addr = alloca %struct.SHAobject*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %clo = alloca i32, align 4
  store %struct.SHAobject* %sha_info, %struct.SHAobject** %sha_info.addr, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  store i64 %count, i64* %count.addr, align 8
  %0 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %count_lo = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %0, i32 0, i32 2
  %1 = load i32, i32* %count_lo, align 4
  %2 = load i64, i64* %count.addr, align 8
  %conv = trunc i64 %2 to i32
  %shl = shl i32 %conv, 3
  %add = add i32 %1, %shl
  store i32 %add, i32* %clo, align 4
  %3 = load i32, i32* %clo, align 4
  %4 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %count_lo1 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %4, i32 0, i32 2
  %5 = load i32, i32* %count_lo1, align 4
  %cmp = icmp ult i32 %3, %5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %count_hi = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %6, i32 0, i32 3
  %7 = load i32, i32* %count_hi, align 4
  %inc = add i32 %7, 1
  store i32 %inc, i32* %count_hi, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %clo, align 4
  %9 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %count_lo3 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %9, i32 0, i32 2
  store i32 %8, i32* %count_lo3, align 4
  %10 = load i64, i64* %count.addr, align 8
  %conv4 = trunc i64 %10 to i32
  %shr = lshr i32 %conv4, 29
  %11 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %count_hi5 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %11, i32 0, i32 3
  %12 = load i32, i32* %count_hi5, align 4
  %add6 = add i32 %12, %shr
  store i32 %add6, i32* %count_hi5, align 4
  %13 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %local = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %13, i32 0, i32 5
  %14 = load i32, i32* %local, align 4
  %tobool = icmp ne i32 %14, 0
  br i1 %tobool, label %if.then.7, label %if.end.25

if.then.7:                                        ; preds = %if.end
  %15 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %local8 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %15, i32 0, i32 5
  %16 = load i32, i32* %local8, align 4
  %sub = sub i32 64, %16
  %conv9 = sext i32 %sub to i64
  store i64 %conv9, i64* %i, align 8
  %17 = load i64, i64* %i, align 8
  %18 = load i64, i64* %count.addr, align 8
  %cmp10 = icmp sgt i64 %17, %18
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.then.7
  %19 = load i64, i64* %count.addr, align 8
  store i64 %19, i64* %i, align 8
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.12, %if.then.7
  %20 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %20, i32 0, i32 4
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %data, i32 0, i32 0
  %21 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %local14 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %21, i32 0, i32 5
  %22 = load i32, i32* %local14, align 4
  %idx.ext = sext i32 %22 to i64
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 %idx.ext
  %23 = load i8*, i8** %buffer.addr, align 8
  %24 = load i64, i64* %i, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %23, i64 %24, i32 1, i1 false)
  %25 = load i64, i64* %i, align 8
  %26 = load i64, i64* %count.addr, align 8
  %sub15 = sub i64 %26, %25
  store i64 %sub15, i64* %count.addr, align 8
  %27 = load i64, i64* %i, align 8
  %28 = load i8*, i8** %buffer.addr, align 8
  %add.ptr16 = getelementptr i8, i8* %28, i64 %27
  store i8* %add.ptr16, i8** %buffer.addr, align 8
  %29 = load i64, i64* %i, align 8
  %conv17 = trunc i64 %29 to i32
  %30 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %local18 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %30, i32 0, i32 5
  %31 = load i32, i32* %local18, align 4
  %add19 = add i32 %31, %conv17
  store i32 %add19, i32* %local18, align 4
  %32 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %local20 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %32, i32 0, i32 5
  %33 = load i32, i32* %local20, align 4
  %cmp21 = icmp eq i32 %33, 64
  br i1 %cmp21, label %if.then.23, label %if.else

if.then.23:                                       ; preds = %if.end.13
  %34 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  call void @sha_transform(%struct.SHAobject* %34)
  br label %if.end.24

if.else:                                          ; preds = %if.end.13
  br label %return

if.end.24:                                        ; preds = %if.then.23
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24, %if.end
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.25
  %35 = load i64, i64* %count.addr, align 8
  %cmp26 = icmp sge i64 %35, 64
  br i1 %cmp26, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %36 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data28 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %36, i32 0, i32 4
  %37 = bitcast [64 x i8]* %data28 to i8*
  %38 = load i8*, i8** %buffer.addr, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 64, i32 1, i1 false)
  %39 = load i8*, i8** %buffer.addr, align 8
  %add.ptr29 = getelementptr i8, i8* %39, i64 64
  store i8* %add.ptr29, i8** %buffer.addr, align 8
  %40 = load i64, i64* %count.addr, align 8
  %sub30 = sub i64 %40, 64
  store i64 %sub30, i64* %count.addr, align 8
  %41 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  call void @sha_transform(%struct.SHAobject* %41)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %42 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %data31 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %42, i32 0, i32 4
  %43 = bitcast [64 x i8]* %data31 to i8*
  %44 = load i8*, i8** %buffer.addr, align 8
  %45 = load i64, i64* %count.addr, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 %45, i32 1, i1 false)
  %46 = load i64, i64* %count.addr, align 8
  %conv32 = trunc i64 %46 to i32
  %47 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %local33 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %47, i32 0, i32 5
  store i32 %conv32, i32* %local33, align 4
  br label %return

return:                                           ; preds = %while.end, %if.else
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @SHA256_get_block_size(%struct._object* %self, i8* %closure) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %closure.addr = alloca i8*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store i8* %closure, i8** %closure.addr, align 8
  %call = call %struct._object* @PyLong_FromLong(i64 64)
  ret %struct._object* %call
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @SHA256_get_name(%struct._object* %self, i8* %closure) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %closure.addr = alloca i8*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store i8* %closure, i8** %closure.addr, align 8
  %0 = load %struct._object*, %struct._object** %self.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct.SHAobject*
  %digestsize = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %1, i32 0, i32 6
  %2 = load i32, i32* %digestsize, align 4
  %cmp = icmp eq i32 %2, 32
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyUnicode_FromStringAndSize(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i64 6)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.else:                                          ; preds = %entry
  %call1 = call %struct._object* @PyUnicode_FromStringAndSize(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), i64 6)
  store %struct._object* %call1, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %3 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %3
}

declare %struct._object* @PyLong_FromLong(i64) #1

declare %struct._object* @PyUnicode_FromStringAndSize(i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @SHA256_new(%struct._object* %self, %struct._object* %args, %struct._object* %kwdict) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwdict.addr = alloca %struct._object*, align 8
  %new = alloca %struct.SHAobject*, align 8
  %data_obj = alloca %struct._object*, align 8
  %buf = alloca %struct.bufferinfo, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwdict, %struct._object** %kwdict.addr, align 8
  store %struct._object* null, %struct._object** %data_obj, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %1 = load %struct._object*, %struct._object** %kwdict.addr, align 8
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %0, %struct._object* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @SHA256_new.kwlist, i32 0, i32 0), %struct._object** %data_obj)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %data_obj, align 8
  %tobool1 = icmp ne %struct._object* %2, null
  br i1 %tobool1, label %if.then.2, label %if.end.19

if.then.2:                                        ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.then.2
  %3 = load %struct._object*, %struct._object** %data_obj, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags, align 8
  %and = and i64 %5, 268435456
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %do.body
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.8, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.4:                                         ; preds = %do.body
  %7 = load %struct._object*, %struct._object** %data_obj, align 8
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8
  %tp_as_buffer = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 18
  %9 = load %struct.PyBufferProcs*, %struct.PyBufferProcs** %tp_as_buffer, align 8
  %cmp6 = icmp ne %struct.PyBufferProcs* %9, null
  br i1 %cmp6, label %land.lhs.true, label %if.then.10

land.lhs.true:                                    ; preds = %if.end.4
  %10 = load %struct._object*, %struct._object** %data_obj, align 8
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8
  %tp_as_buffer8 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 18
  %12 = load %struct.PyBufferProcs*, %struct.PyBufferProcs** %tp_as_buffer8, align 8
  %bf_getbuffer = getelementptr inbounds %struct.PyBufferProcs, %struct.PyBufferProcs* %12, i32 0, i32 0
  %13 = load i32 (%struct._object*, %struct.bufferinfo*, i32)*, i32 (%struct._object*, %struct.bufferinfo*, i32)** %bf_getbuffer, align 8
  %cmp9 = icmp ne i32 (%struct._object*, %struct.bufferinfo*, i32)* %13, null
  br i1 %cmp9, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %land.lhs.true, %if.end.4
  %14 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.11:                                        ; preds = %land.lhs.true
  %15 = load %struct._object*, %struct._object** %data_obj, align 8
  %call12 = call i32 @PyObject_GetBuffer(%struct._object* %15, %struct.bufferinfo* %buf, i32 0)
  %cmp13 = icmp eq i32 %call12, -1
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.11
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.15:                                        ; preds = %if.end.11
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 5
  %16 = load i32, i32* %ndim, align 4
  %cmp16 = icmp sgt i32 %16, 1
  br i1 %cmp16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.15
  %17 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i32 0, i32 0))
  call void @PyBuffer_Release(%struct.bufferinfo* %buf)
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.18:                                        ; preds = %if.end.15
  br label %do.end

do.end:                                           ; preds = %if.end.18
  br label %if.end.19

if.end.19:                                        ; preds = %do.end, %if.end
  %call20 = call %struct.SHAobject* @newSHA256object()
  store %struct.SHAobject* %call20, %struct.SHAobject** %new, align 8
  %cmp21 = icmp eq %struct.SHAobject* %call20, null
  br i1 %cmp21, label %if.then.22, label %if.end.26

if.then.22:                                       ; preds = %if.end.19
  %18 = load %struct._object*, %struct._object** %data_obj, align 8
  %tobool23 = icmp ne %struct._object* %18, null
  br i1 %tobool23, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.then.22
  call void @PyBuffer_Release(%struct.bufferinfo* %buf)
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.24, %if.then.22
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.26:                                        ; preds = %if.end.19
  %19 = load %struct.SHAobject*, %struct.SHAobject** %new, align 8
  call void @sha_init(%struct.SHAobject* %19)
  %call27 = call %struct._object* @PyErr_Occurred()
  %tobool28 = icmp ne %struct._object* %call27, null
  br i1 %tobool28, label %if.then.29, label %if.end.39

if.then.29:                                       ; preds = %if.end.26
  br label %do.body.30

do.body.30:                                       ; preds = %if.then.29
  %20 = load %struct.SHAobject*, %struct.SHAobject** %new, align 8
  %21 = bitcast %struct.SHAobject* %20 to %struct._object*
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0
  %23 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %23, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp31 = icmp ne i64 %dec, 0
  br i1 %cmp31, label %if.then.32, label %if.else

if.then.32:                                       ; preds = %do.body.30
  br label %if.end.34

if.else:                                          ; preds = %do.body.30
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %26(%struct._object* %27)
  br label %if.end.34

if.end.34:                                        ; preds = %if.else, %if.then.32
  br label %do.end.35

do.end.35:                                        ; preds = %if.end.34
  %28 = load %struct._object*, %struct._object** %data_obj, align 8
  %tobool36 = icmp ne %struct._object* %28, null
  br i1 %tobool36, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %do.end.35
  call void @PyBuffer_Release(%struct.bufferinfo* %buf)
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.37, %do.end.35
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.39:                                        ; preds = %if.end.26
  %29 = load %struct._object*, %struct._object** %data_obj, align 8
  %tobool40 = icmp ne %struct._object* %29, null
  br i1 %tobool40, label %if.then.41, label %if.end.43

if.then.41:                                       ; preds = %if.end.39
  %30 = load %struct.SHAobject*, %struct.SHAobject** %new, align 8
  %buf42 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0
  %31 = load i8*, i8** %buf42, align 8
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2
  %32 = load i64, i64* %len, align 8
  call void @sha_update(%struct.SHAobject* %30, i8* %31, i64 %32)
  call void @PyBuffer_Release(%struct.bufferinfo* %buf)
  br label %if.end.43

if.end.43:                                        ; preds = %if.then.41, %if.end.39
  %33 = load %struct.SHAobject*, %struct.SHAobject** %new, align 8
  %34 = bitcast %struct.SHAobject* %33 to %struct._object*
  store %struct._object* %34, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.43, %if.end.38, %if.end.25, %if.then.17, %if.then.14, %if.then.10, %if.then.3, %if.then
  %35 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %35
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @SHA224_new(%struct._object* %self, %struct._object* %args, %struct._object* %kwdict) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwdict.addr = alloca %struct._object*, align 8
  %new = alloca %struct.SHAobject*, align 8
  %data_obj = alloca %struct._object*, align 8
  %buf = alloca %struct.bufferinfo, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwdict, %struct._object** %kwdict.addr, align 8
  store %struct._object* null, %struct._object** %data_obj, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %1 = load %struct._object*, %struct._object** %kwdict.addr, align 8
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %0, %struct._object* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @SHA224_new.kwlist, i32 0, i32 0), %struct._object** %data_obj)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %data_obj, align 8
  %tobool1 = icmp ne %struct._object* %2, null
  br i1 %tobool1, label %if.then.2, label %if.end.19

if.then.2:                                        ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.then.2
  %3 = load %struct._object*, %struct._object** %data_obj, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags, align 8
  %and = and i64 %5, 268435456
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %do.body
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.8, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.4:                                         ; preds = %do.body
  %7 = load %struct._object*, %struct._object** %data_obj, align 8
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8
  %tp_as_buffer = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 18
  %9 = load %struct.PyBufferProcs*, %struct.PyBufferProcs** %tp_as_buffer, align 8
  %cmp6 = icmp ne %struct.PyBufferProcs* %9, null
  br i1 %cmp6, label %land.lhs.true, label %if.then.10

land.lhs.true:                                    ; preds = %if.end.4
  %10 = load %struct._object*, %struct._object** %data_obj, align 8
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8
  %tp_as_buffer8 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 18
  %12 = load %struct.PyBufferProcs*, %struct.PyBufferProcs** %tp_as_buffer8, align 8
  %bf_getbuffer = getelementptr inbounds %struct.PyBufferProcs, %struct.PyBufferProcs* %12, i32 0, i32 0
  %13 = load i32 (%struct._object*, %struct.bufferinfo*, i32)*, i32 (%struct._object*, %struct.bufferinfo*, i32)** %bf_getbuffer, align 8
  %cmp9 = icmp ne i32 (%struct._object*, %struct.bufferinfo*, i32)* %13, null
  br i1 %cmp9, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %land.lhs.true, %if.end.4
  %14 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.11:                                        ; preds = %land.lhs.true
  %15 = load %struct._object*, %struct._object** %data_obj, align 8
  %call12 = call i32 @PyObject_GetBuffer(%struct._object* %15, %struct.bufferinfo* %buf, i32 0)
  %cmp13 = icmp eq i32 %call12, -1
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.11
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.15:                                        ; preds = %if.end.11
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 5
  %16 = load i32, i32* %ndim, align 4
  %cmp16 = icmp sgt i32 %16, 1
  br i1 %cmp16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.15
  %17 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i32 0, i32 0))
  call void @PyBuffer_Release(%struct.bufferinfo* %buf)
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.18:                                        ; preds = %if.end.15
  br label %do.end

do.end:                                           ; preds = %if.end.18
  br label %if.end.19

if.end.19:                                        ; preds = %do.end, %if.end
  %call20 = call %struct.SHAobject* @newSHA224object()
  store %struct.SHAobject* %call20, %struct.SHAobject** %new, align 8
  %cmp21 = icmp eq %struct.SHAobject* %call20, null
  br i1 %cmp21, label %if.then.22, label %if.end.26

if.then.22:                                       ; preds = %if.end.19
  %18 = load %struct._object*, %struct._object** %data_obj, align 8
  %tobool23 = icmp ne %struct._object* %18, null
  br i1 %tobool23, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.then.22
  call void @PyBuffer_Release(%struct.bufferinfo* %buf)
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.24, %if.then.22
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.26:                                        ; preds = %if.end.19
  %19 = load %struct.SHAobject*, %struct.SHAobject** %new, align 8
  call void @sha224_init(%struct.SHAobject* %19)
  %call27 = call %struct._object* @PyErr_Occurred()
  %tobool28 = icmp ne %struct._object* %call27, null
  br i1 %tobool28, label %if.then.29, label %if.end.39

if.then.29:                                       ; preds = %if.end.26
  br label %do.body.30

do.body.30:                                       ; preds = %if.then.29
  %20 = load %struct.SHAobject*, %struct.SHAobject** %new, align 8
  %21 = bitcast %struct.SHAobject* %20 to %struct._object*
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0
  %23 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %23, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp31 = icmp ne i64 %dec, 0
  br i1 %cmp31, label %if.then.32, label %if.else

if.then.32:                                       ; preds = %do.body.30
  br label %if.end.34

if.else:                                          ; preds = %do.body.30
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %26(%struct._object* %27)
  br label %if.end.34

if.end.34:                                        ; preds = %if.else, %if.then.32
  br label %do.end.35

do.end.35:                                        ; preds = %if.end.34
  %28 = load %struct._object*, %struct._object** %data_obj, align 8
  %tobool36 = icmp ne %struct._object* %28, null
  br i1 %tobool36, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %do.end.35
  call void @PyBuffer_Release(%struct.bufferinfo* %buf)
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.37, %do.end.35
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.39:                                        ; preds = %if.end.26
  %29 = load %struct._object*, %struct._object** %data_obj, align 8
  %tobool40 = icmp ne %struct._object* %29, null
  br i1 %tobool40, label %if.then.41, label %if.end.43

if.then.41:                                       ; preds = %if.end.39
  %30 = load %struct.SHAobject*, %struct.SHAobject** %new, align 8
  %buf42 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0
  %31 = load i8*, i8** %buf42, align 8
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2
  %32 = load i64, i64* %len, align 8
  call void @sha_update(%struct.SHAobject* %30, i8* %31, i64 %32)
  call void @PyBuffer_Release(%struct.bufferinfo* %buf)
  br label %if.end.43

if.end.43:                                        ; preds = %if.then.41, %if.end.39
  %33 = load %struct.SHAobject*, %struct.SHAobject** %new, align 8
  %34 = bitcast %struct.SHAobject* %33 to %struct._object*
  store %struct._object* %34, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.43, %if.end.38, %if.end.25, %if.then.17, %if.then.14, %if.then.10, %if.then.3, %if.then
  %35 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %35
}

declare i32 @PyArg_ParseTupleAndKeywords(%struct._object*, %struct._object*, i8*, i8**, ...) #1

; Function Attrs: nounwind uwtable
define internal void @sha_init(%struct.SHAobject* %sha_info) #0 {
entry:
  %sha_info.addr = alloca %struct.SHAobject*, align 8
  store %struct.SHAobject* %sha_info, %struct.SHAobject** %sha_info.addr, align 8
  %0 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %0, i32 0, i32 1
  %arrayidx = getelementptr [8 x i32], [8 x i32]* %digest, i32 0, i64 0
  store i32 1779033703, i32* %arrayidx, align 4
  %1 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest1 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %1, i32 0, i32 1
  %arrayidx2 = getelementptr [8 x i32], [8 x i32]* %digest1, i32 0, i64 1
  store i32 -1150833019, i32* %arrayidx2, align 4
  %2 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest3 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %2, i32 0, i32 1
  %arrayidx4 = getelementptr [8 x i32], [8 x i32]* %digest3, i32 0, i64 2
  store i32 1013904242, i32* %arrayidx4, align 4
  %3 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest5 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %3, i32 0, i32 1
  %arrayidx6 = getelementptr [8 x i32], [8 x i32]* %digest5, i32 0, i64 3
  store i32 -1521486534, i32* %arrayidx6, align 4
  %4 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest7 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %4, i32 0, i32 1
  %arrayidx8 = getelementptr [8 x i32], [8 x i32]* %digest7, i32 0, i64 4
  store i32 1359893119, i32* %arrayidx8, align 4
  %5 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest9 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %5, i32 0, i32 1
  %arrayidx10 = getelementptr [8 x i32], [8 x i32]* %digest9, i32 0, i64 5
  store i32 -1694144372, i32* %arrayidx10, align 4
  %6 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest11 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %6, i32 0, i32 1
  %arrayidx12 = getelementptr [8 x i32], [8 x i32]* %digest11, i32 0, i64 6
  store i32 528734635, i32* %arrayidx12, align 4
  %7 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest13 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %7, i32 0, i32 1
  %arrayidx14 = getelementptr [8 x i32], [8 x i32]* %digest13, i32 0, i64 7
  store i32 1541459225, i32* %arrayidx14, align 4
  %8 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %count_lo = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %8, i32 0, i32 2
  store i32 0, i32* %count_lo, align 4
  %9 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %count_hi = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %9, i32 0, i32 3
  store i32 0, i32* %count_hi, align 4
  %10 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %local = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %10, i32 0, i32 5
  store i32 0, i32* %local, align 4
  %11 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digestsize = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %11, i32 0, i32 6
  store i32 32, i32* %digestsize, align 4
  ret void
}

declare %struct._object* @PyErr_Occurred() #1

; Function Attrs: nounwind uwtable
define internal void @sha224_init(%struct.SHAobject* %sha_info) #0 {
entry:
  %sha_info.addr = alloca %struct.SHAobject*, align 8
  store %struct.SHAobject* %sha_info, %struct.SHAobject** %sha_info.addr, align 8
  %0 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %0, i32 0, i32 1
  %arrayidx = getelementptr [8 x i32], [8 x i32]* %digest, i32 0, i64 0
  store i32 -1056596264, i32* %arrayidx, align 4
  %1 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest1 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %1, i32 0, i32 1
  %arrayidx2 = getelementptr [8 x i32], [8 x i32]* %digest1, i32 0, i64 1
  store i32 914150663, i32* %arrayidx2, align 4
  %2 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest3 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %2, i32 0, i32 1
  %arrayidx4 = getelementptr [8 x i32], [8 x i32]* %digest3, i32 0, i64 2
  store i32 812702999, i32* %arrayidx4, align 4
  %3 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest5 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %3, i32 0, i32 1
  %arrayidx6 = getelementptr [8 x i32], [8 x i32]* %digest5, i32 0, i64 3
  store i32 -150054599, i32* %arrayidx6, align 4
  %4 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest7 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %4, i32 0, i32 1
  %arrayidx8 = getelementptr [8 x i32], [8 x i32]* %digest7, i32 0, i64 4
  store i32 -4191439, i32* %arrayidx8, align 4
  %5 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest9 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %5, i32 0, i32 1
  %arrayidx10 = getelementptr [8 x i32], [8 x i32]* %digest9, i32 0, i64 5
  store i32 1750603025, i32* %arrayidx10, align 4
  %6 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest11 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %6, i32 0, i32 1
  %arrayidx12 = getelementptr [8 x i32], [8 x i32]* %digest11, i32 0, i64 6
  store i32 1694076839, i32* %arrayidx12, align 4
  %7 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digest13 = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %7, i32 0, i32 1
  %arrayidx14 = getelementptr [8 x i32], [8 x i32]* %digest13, i32 0, i64 7
  store i32 -1090891868, i32* %arrayidx14, align 4
  %8 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %count_lo = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %8, i32 0, i32 2
  store i32 0, i32* %count_lo, align 4
  %9 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %count_hi = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %9, i32 0, i32 3
  store i32 0, i32* %count_hi, align 4
  %10 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %local = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %10, i32 0, i32 5
  store i32 0, i32* %local, align 4
  %11 = load %struct.SHAobject*, %struct.SHAobject** %sha_info.addr, align 8
  %digestsize = getelementptr inbounds %struct.SHAobject, %struct.SHAobject* %11, i32 0, i32 6
  store i32 28, i32* %digestsize, align 4
  ret void
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"PIC Level", i32 2}
!1 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
