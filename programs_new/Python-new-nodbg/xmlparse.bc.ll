; ModuleID = './xmlparse.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.XML_Feature = type { i32, i8*, i64 }
%struct.XML_ParserStruct = type { i8*, i8*, i8*, %struct.XML_Memory_Handling_Suite, i8*, i8*, i8*, i64, i8*, i8*, i8*, void (i8*, i8*, i8**)*, void (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*)*, void (i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)*, void (i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, i32 (i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, %struct.XML_ParserStruct*, void (i8*, i8*, i32)*, i32 (i8*, i8*, %struct.XML_Encoding*)*, void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i32)*, %struct.encoding*, %struct.INIT_ENCODING, %struct.encoding*, i8*, i8, i8, i8*, i8*, i8*, void (i8*)*, %struct.prolog_state, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)*, i32, i8*, i8*, i8*, %struct.open_internal_entity*, %struct.open_internal_entity*, i8, i32, %struct.ENTITY*, i8*, i8*, i8*, i8*, i8*, i8*, %struct.ELEMENT_TYPE*, %struct.attribute_id*, i8, i8, %struct.DTD*, i8*, %struct.tag*, %struct.tag*, %struct.binding*, %struct.binding*, i32, i32, i32, %struct.ATTRIBUTE*, %struct.NS_ATT*, i64, i8, %struct.position, %struct.STRING_POOL, %struct.STRING_POOL, i8*, i32, i8, %struct.XML_ParserStruct*, %struct.XML_ParsingStatus, i8, i8, i32, i64 }
%struct.XML_Memory_Handling_Suite = type { i8* (i64)*, i8* (i8*, i64)*, void (i8*)* }
%struct.XML_Encoding = type { [256 x i32], i8*, i32 (i8*, i8*)*, void (i8*)* }
%struct.XML_cp = type { i32, i32, i8*, i32, %struct.XML_cp* }
%struct.INIT_ENCODING = type { %struct.encoding, %struct.encoding** }
%struct.encoding = type { [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*], i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*, i8*)*, i32 (%struct.encoding*, i8*)*, i8* (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)*, i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*, i8*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)*, i32 (%struct.encoding*, i8*, i8*, i8**)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i16**, i16*)*, i32, i8, i8 }
%struct.prolog_state = type { i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)*, i32, i32, i32, i32, i32 }
%struct.open_internal_entity = type { i8*, i8*, %struct.open_internal_entity*, %struct.ENTITY*, i32, i8 }
%struct.ENTITY = type { i8*, i8*, i32, i32, i8*, i8*, i8*, i8*, i8, i8, i8 }
%struct.ELEMENT_TYPE = type { i8*, %struct.prefix*, %struct.attribute_id*, i32, i32, %struct.DEFAULT_ATTRIBUTE* }
%struct.prefix = type { i8*, %struct.binding* }
%struct.DEFAULT_ATTRIBUTE = type { %struct.attribute_id*, i8, i8* }
%struct.attribute_id = type { i8*, %struct.prefix*, i8, i8 }
%struct.DTD = type { %struct.HASH_TABLE, %struct.HASH_TABLE, %struct.HASH_TABLE, %struct.HASH_TABLE, %struct.STRING_POOL, %struct.STRING_POOL, i8, i8, i8, i8, %struct.HASH_TABLE, %struct.prefix, i8, %struct.CONTENT_SCAFFOLD*, i32, i32, i32, i32, i32* }
%struct.HASH_TABLE = type { %struct.NAMED**, i8, i64, i64, %struct.XML_Memory_Handling_Suite* }
%struct.NAMED = type { i8* }
%struct.CONTENT_SCAFFOLD = type { i32, i32, i8*, i32, i32, i32, i32 }
%struct.tag = type { %struct.tag*, i8*, i32, %struct.TAG_NAME, i8*, i8*, %struct.binding* }
%struct.TAG_NAME = type { i8*, i8*, i8*, i32, i32, i32 }
%struct.binding = type { %struct.prefix*, %struct.binding*, %struct.binding*, %struct.attribute_id*, i8*, i32, i32 }
%struct.ATTRIBUTE = type { i8*, i8*, i8*, i8 }
%struct.NS_ATT = type { i64, i64, i8* }
%struct.position = type { i64, i64 }
%struct.STRING_POOL = type { %struct.block*, %struct.block*, i8*, i8*, i8*, %struct.XML_Memory_Handling_Suite* }
%struct.block = type { %struct.block*, i32, [1 x i8] }
%struct.XML_ParsingStatus = type { i32, i8 }
%struct.HASH_TABLE_ITER = type { %struct.NAMED**, %struct.NAMED** }
%struct.XML_Expat_Version = type { i32, i32, i32 }

@PyExpat_XML_ErrorString.message = internal constant [41 x i8*] [i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.39, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"no element found\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"not well-formed (invalid token)\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"unclosed token\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"partial character\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"mismatched tag\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"duplicate attribute\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"junk after document element\00", align 1
@.str.9 = private unnamed_addr constant [35 x i8] c"illegal parameter entity reference\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"undefined entity\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"recursive entity reference\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"asynchronous entity\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"reference to invalid character number\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"reference to binary entity\00", align 1
@.str.15 = private unnamed_addr constant [42 x i8] c"reference to external entity in attribute\00", align 1
@.str.16 = private unnamed_addr constant [47 x i8] c"XML or text declaration not at start of entity\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"unknown encoding\00", align 1
@.str.18 = private unnamed_addr constant [51 x i8] c"encoding specified in XML declaration is incorrect\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"unclosed CDATA section\00", align 1
@.str.20 = private unnamed_addr constant [46 x i8] c"error in processing external entity reference\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"document is not standalone\00", align 1
@.str.22 = private unnamed_addr constant [51 x i8] c"unexpected parser state - please send a bug report\00", align 1
@.str.23 = private unnamed_addr constant [36 x i8] c"entity declared in parameter entity\00", align 1
@.str.24 = private unnamed_addr constant [52 x i8] c"requested feature requires XML_DTD support in Expat\00", align 1
@.str.25 = private unnamed_addr constant [45 x i8] c"cannot change setting once parsing has begun\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"unbound prefix\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"must not undeclare prefix\00", align 1
@.str.28 = private unnamed_addr constant [38 x i8] c"incomplete markup in parameter entity\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"XML declaration not well-formed\00", align 1
@.str.30 = private unnamed_addr constant [33 x i8] c"text declaration not well-formed\00", align 1
@.str.31 = private unnamed_addr constant [34 x i8] c"illegal character(s) in public id\00", align 1
@.str.32 = private unnamed_addr constant [17 x i8] c"parser suspended\00", align 1
@.str.33 = private unnamed_addr constant [21 x i8] c"parser not suspended\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"parsing aborted\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"parsing finished\00", align 1
@.str.36 = private unnamed_addr constant [44 x i8] c"cannot suspend in external parameter entity\00", align 1
@.str.37 = private unnamed_addr constant [80 x i8] c"reserved prefix (xml) must not be undeclared or bound to another namespace name\00", align 1
@.str.38 = private unnamed_addr constant [59 x i8] c"reserved prefix (xmlns) must not be declared or undeclared\00", align 1
@.str.39 = private unnamed_addr constant [64 x i8] c"prefix must not be bound to one of the reserved namespace names\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"expat_2.1.0\00", align 1
@PyExpat_XML_GetFeatureList.features = internal constant [6 x %struct.XML_Feature] [%struct.XML_Feature { i32 6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i32 0, i32 0), i64 1 }, %struct.XML_Feature { i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i32 0, i32 0), i64 1 }, %struct.XML_Feature { i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), i64 0 }, %struct.XML_Feature { i32 4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i32 0, i32 0), i64 1024 }, %struct.XML_Feature { i32 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), i64 0 }, %struct.XML_Feature zeroinitializer], align 16
@.str.41 = private unnamed_addr constant [17 x i8] c"sizeof(XML_Char)\00", align 1
@.str.42 = private unnamed_addr constant [18 x i8] c"sizeof(XML_LChar)\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"XML_DTD\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"XML_CONTEXT_BYTES\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"XML_NS\00", align 1
@doProlog.externalSubsetName = internal constant [2 x i8] c"#\00", align 1
@doProlog.atypeCDATA = internal constant [6 x i8] c"CDATA\00", align 1
@doProlog.atypeID = internal constant [3 x i8] c"ID\00", align 1
@doProlog.atypeIDREF = internal constant [6 x i8] c"IDREF\00", align 1
@doProlog.atypeIDREFS = internal constant [7 x i8] c"IDREFS\00", align 1
@doProlog.atypeENTITY = internal constant [7 x i8] c"ENTITY\00", align 1
@doProlog.atypeENTITIES = internal constant [9 x i8] c"ENTITIES\00", align 1
@doProlog.atypeNMTOKEN = internal constant [8 x i8] c"NMTOKEN\00", align 1
@doProlog.atypeNMTOKENS = internal constant [9 x i8] c"NMTOKENS\00", align 1
@doProlog.notationPrefix = internal constant [10 x i8] c"NOTATION(\00", align 1
@doProlog.enumValueSep = internal constant [2 x i8] c"|\00", align 1
@doProlog.enumValueStart = internal constant [2 x i8] c"(\00", align 1
@addBinding.xmlNamespace = internal constant [37 x i8] c"http://www.w3.org/XML/1998/namespace\00", align 16
@addBinding.xmlLen = internal constant i32 36, align 4
@addBinding.xmlnsNamespace = internal constant [30 x i8] c"http://www.w3.org/2000/xmlns/\00", align 16
@addBinding.xmlnsLen = internal constant i32 29, align 4
@implicitContext = internal constant [41 x i8] c"xml=http://www.w3.org/XML/1998/namespace\00", align 16

; Function Attrs: nounwind uwtable
define %struct.XML_ParserStruct* @PyExpat_XML_ParserCreate(i8* %encodingName) #0 {
entry:
  %encodingName.addr = alloca i8*, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8
  %0 = load i8*, i8** %encodingName.addr, align 8
  %call = call %struct.XML_ParserStruct* @PyExpat_XML_ParserCreate_MM(i8* %0, %struct.XML_Memory_Handling_Suite* null, i8* null)
  ret %struct.XML_ParserStruct* %call
}

; Function Attrs: nounwind uwtable
define %struct.XML_ParserStruct* @PyExpat_XML_ParserCreate_MM(i8* %encodingName, %struct.XML_Memory_Handling_Suite* %memsuite, i8* %nameSep) #0 {
entry:
  %encodingName.addr = alloca i8*, align 8
  %memsuite.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %nameSep.addr = alloca i8*, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8
  store %struct.XML_Memory_Handling_Suite* %memsuite, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8
  store i8* %nameSep, i8** %nameSep.addr, align 8
  %0 = load i8*, i8** %encodingName.addr, align 8
  %1 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8
  %2 = load i8*, i8** %nameSep.addr, align 8
  %call = call %struct.XML_ParserStruct* @parserCreate(i8* %0, %struct.XML_Memory_Handling_Suite* %1, i8* %2, %struct.DTD* null)
  ret %struct.XML_ParserStruct* %call
}

; Function Attrs: nounwind uwtable
define %struct.XML_ParserStruct* @PyExpat_XML_ParserCreateNS(i8* %encodingName, i8 signext %nsSep) #0 {
entry:
  %encodingName.addr = alloca i8*, align 8
  %nsSep.addr = alloca i8, align 1
  %tmp = alloca [2 x i8], align 1
  store i8* %encodingName, i8** %encodingName.addr, align 8
  store i8 %nsSep, i8* %nsSep.addr, align 1
  %0 = load i8, i8* %nsSep.addr, align 1
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i32 0, i32 0
  store i8 %0, i8* %arraydecay, align 1
  %1 = load i8*, i8** %encodingName.addr, align 8
  %arraydecay1 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i32 0, i32 0
  %call = call %struct.XML_ParserStruct* @PyExpat_XML_ParserCreate_MM(i8* %1, %struct.XML_Memory_Handling_Suite* null, i8* %arraydecay1)
  ret %struct.XML_ParserStruct* %call
}

; Function Attrs: nounwind uwtable
define internal %struct.XML_ParserStruct* @parserCreate(i8* %encodingName, %struct.XML_Memory_Handling_Suite* %memsuite, i8* %nameSep, %struct.DTD* %dtd) #0 {
entry:
  %retval = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  %memsuite.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %nameSep.addr = alloca i8*, align 8
  %dtd.addr = alloca %struct.DTD*, align 8
  %parser = alloca %struct.XML_ParserStruct*, align 8
  %mtemp = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %mtemp6 = alloca %struct.XML_Memory_Handling_Suite*, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8
  store %struct.XML_Memory_Handling_Suite* %memsuite, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8
  store i8* %nameSep, i8** %nameSep.addr, align 8
  store %struct.DTD* %dtd, %struct.DTD** %dtd.addr, align 8
  %0 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8
  %tobool = icmp ne %struct.XML_Memory_Handling_Suite* %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %1, i32 0, i32 0
  %2 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %call = call i8* %2(i64 936)
  %3 = bitcast i8* %call to %struct.XML_ParserStruct*
  store %struct.XML_ParserStruct* %3, %struct.XML_ParserStruct** %parser, align 8
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %cmp = icmp ne %struct.XML_ParserStruct* %4, null
  br i1 %cmp, label %if.then.1, label %if.end

if.then.1:                                        ; preds = %if.then
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 3
  store %struct.XML_Memory_Handling_Suite* %m_mem, %struct.XML_Memory_Handling_Suite** %mtemp, align 8
  %6 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8
  %malloc_fcn2 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %6, i32 0, i32 0
  %7 = load i8* (i64)*, i8* (i64)** %malloc_fcn2, align 8
  %8 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp, align 8
  %malloc_fcn3 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %8, i32 0, i32 0
  store i8* (i64)* %7, i8* (i64)** %malloc_fcn3, align 8
  %9 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %9, i32 0, i32 1
  %10 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8
  %11 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp, align 8
  %realloc_fcn4 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %11, i32 0, i32 1
  store i8* (i8*, i64)* %10, i8* (i8*, i64)** %realloc_fcn4, align 8
  %12 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %memsuite.addr, align 8
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %12, i32 0, i32 2
  %13 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %14 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp, align 8
  %free_fcn5 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %14, i32 0, i32 2
  store void (i8*)* %13, void (i8*)** %free_fcn5, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.1, %if.then
  br label %if.end.15

if.else:                                          ; preds = %entry
  %call7 = call noalias i8* @malloc(i64 936) #2
  %15 = bitcast i8* %call7 to %struct.XML_ParserStruct*
  store %struct.XML_ParserStruct* %15, %struct.XML_ParserStruct** %parser, align 8
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %cmp8 = icmp ne %struct.XML_ParserStruct* %16, null
  br i1 %cmp8, label %if.then.9, label %if.end.14

if.then.9:                                        ; preds = %if.else
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 3
  store %struct.XML_Memory_Handling_Suite* %m_mem10, %struct.XML_Memory_Handling_Suite** %mtemp6, align 8
  %18 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp6, align 8
  %malloc_fcn11 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %18, i32 0, i32 0
  store i8* (i64)* @malloc, i8* (i64)** %malloc_fcn11, align 8
  %19 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp6, align 8
  %realloc_fcn12 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %19, i32 0, i32 1
  store i8* (i8*, i64)* @realloc, i8* (i8*, i64)** %realloc_fcn12, align 8
  %20 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mtemp6, align 8
  %free_fcn13 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %20, i32 0, i32 2
  store void (i8*)* @free, void (i8*)** %free_fcn13, align 8
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.9, %if.else
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.end
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %tobool16 = icmp ne %struct.XML_ParserStruct* %21, null
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %if.end.15
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  store %struct.XML_ParserStruct* %22, %struct.XML_ParserStruct** %retval
  br label %return

if.end.18:                                        ; preds = %if.end.15
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 2
  store i8* null, i8** %m_buffer, align 8
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_bufferLim = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 6
  store i8* null, i8** %m_bufferLim, align 8
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_attsSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 71
  store i32 16, i32* %m_attsSize, align 4
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 3
  %malloc_fcn20 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem19, i32 0, i32 0
  %27 = load i8* (i64)*, i8* (i64)** %malloc_fcn20, align 8
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_attsSize21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 71
  %29 = load i32, i32* %m_attsSize21, align 4
  %conv = sext i32 %29 to i64
  %mul = mul i64 %conv, 32
  %call22 = call i8* %27(i64 %mul)
  %30 = bitcast i8* %call22 to %struct.ATTRIBUTE*
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_atts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 74
  store %struct.ATTRIBUTE* %30, %struct.ATTRIBUTE** %m_atts, align 8
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_atts23 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 74
  %33 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts23, align 8
  %cmp24 = icmp eq %struct.ATTRIBUTE* %33, null
  br i1 %cmp24, label %if.then.26, label %if.end.29

if.then.26:                                       ; preds = %if.end.18
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 3
  %free_fcn28 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem27, i32 0, i32 2
  %35 = load void (i8*)*, void (i8*)** %free_fcn28, align 8
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %37 = bitcast %struct.XML_ParserStruct* %36 to i8*
  call void %35(i8* %37)
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval
  br label %return

if.end.29:                                        ; preds = %if.end.18
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem30 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 3
  %malloc_fcn31 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem30, i32 0, i32 0
  %39 = load i8* (i64)*, i8* (i64)** %malloc_fcn31, align 8
  %call32 = call i8* %39(i64 1024)
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 9
  store i8* %call32, i8** %m_dataBuf, align 8
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_dataBuf33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 9
  %42 = load i8*, i8** %m_dataBuf33, align 8
  %cmp34 = icmp eq i8* %42, null
  br i1 %cmp34, label %if.then.36, label %if.end.42

if.then.36:                                       ; preds = %if.end.29
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 3
  %free_fcn38 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem37, i32 0, i32 2
  %44 = load void (i8*)*, void (i8*)** %free_fcn38, align 8
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_atts39 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 74
  %46 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts39, align 8
  %47 = bitcast %struct.ATTRIBUTE* %46 to i8*
  call void %44(i8* %47)
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem40 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 3
  %free_fcn41 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem40, i32 0, i32 2
  %49 = load void (i8*)*, void (i8*)** %free_fcn41, align 8
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %51 = bitcast %struct.XML_ParserStruct* %50 to i8*
  call void %49(i8* %51)
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval
  br label %return

if.end.42:                                        ; preds = %if.end.29
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_dataBuf43 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 9
  %53 = load i8*, i8** %m_dataBuf43, align 8
  %add.ptr = getelementptr i8, i8* %53, i64 1024
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_dataBufEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 10
  store i8* %add.ptr, i8** %m_dataBufEnd, align 8
  %55 = load %struct.DTD*, %struct.DTD** %dtd.addr, align 8
  %tobool44 = icmp ne %struct.DTD* %55, null
  br i1 %tobool44, label %if.then.45, label %if.else.46

if.then.45:                                       ; preds = %if.end.42
  %56 = load %struct.DTD*, %struct.DTD** %dtd.addr, align 8
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 65
  store %struct.DTD* %56, %struct.DTD** %m_dtd, align 8
  br label %if.end.63

if.else.46:                                       ; preds = %if.end.42
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem47 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 3
  %call48 = call %struct.DTD* @dtdCreate(%struct.XML_Memory_Handling_Suite* %m_mem47)
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_dtd49 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 65
  store %struct.DTD* %call48, %struct.DTD** %m_dtd49, align 8
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_dtd50 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 65
  %61 = load %struct.DTD*, %struct.DTD** %m_dtd50, align 8
  %cmp51 = icmp eq %struct.DTD* %61, null
  br i1 %cmp51, label %if.then.53, label %if.end.62

if.then.53:                                       ; preds = %if.else.46
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem54 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 3
  %free_fcn55 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem54, i32 0, i32 2
  %63 = load void (i8*)*, void (i8*)** %free_fcn55, align 8
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_dataBuf56 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 9
  %65 = load i8*, i8** %m_dataBuf56, align 8
  call void %63(i8* %65)
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem57 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 3
  %free_fcn58 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem57, i32 0, i32 2
  %67 = load void (i8*)*, void (i8*)** %free_fcn58, align 8
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_atts59 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 74
  %69 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts59, align 8
  %70 = bitcast %struct.ATTRIBUTE* %69 to i8*
  call void %67(i8* %70)
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem60 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 3
  %free_fcn61 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem60, i32 0, i32 2
  %72 = load void (i8*)*, void (i8*)** %free_fcn61, align 8
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %74 = bitcast %struct.XML_ParserStruct* %73 to i8*
  call void %72(i8* %74)
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval
  br label %return

if.end.62:                                        ; preds = %if.else.46
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %if.then.45
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 70
  store %struct.binding* null, %struct.binding** %m_freeBindingList, align 8
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_freeTagList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 68
  store %struct.tag* null, %struct.tag** %m_freeTagList, align 8
  %77 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %77, i32 0, i32 51
  store %struct.open_internal_entity* null, %struct.open_internal_entity** %m_freeInternalEntities, align 8
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_groupSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 82
  store i32 0, i32* %m_groupSize, align 4
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_groupConnector = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 81
  store i8* null, i8** %m_groupConnector, align 8
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_unknownEncodingHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %80, i32 0, i32 29
  store i32 (i8*, i8*, %struct.XML_Encoding*)* null, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler, align 8
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_unknownEncodingHandlerData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 42
  store i8* null, i8** %m_unknownEncodingHandlerData, align 8
  %82 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %82, i32 0, i32 83
  store i8 33, i8* %m_namespaceSeparator, align 1
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 38
  store i8 0, i8* %m_ns, align 1
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 39
  store i8 0, i8* %m_ns_triplets, align 1
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_nsAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 75
  store %struct.NS_ATT* null, %struct.NS_ATT** %m_nsAtts, align 8
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_nsAttsVersion = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 76
  store i64 0, i64* %m_nsAttsVersion, align 8
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_nsAttsPower = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 77
  store i8 0, i8* %m_nsAttsPower, align 1
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %88, i32 0, i32 79
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem64 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 3
  call void @poolInit(%struct.STRING_POOL* %m_tempPool, %struct.XML_Memory_Handling_Suite* %m_mem64)
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %90, i32 0, i32 80
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem65 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %91, i32 0, i32 3
  call void @poolInit(%struct.STRING_POOL* %m_temp2Pool, %struct.XML_Memory_Handling_Suite* %m_mem65)
  %92 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %93 = load i8*, i8** %encodingName.addr, align 8
  call void @parserInit(%struct.XML_ParserStruct* %92, i8* %93)
  %94 = load i8*, i8** %encodingName.addr, align 8
  %tobool66 = icmp ne i8* %94, null
  br i1 %tobool66, label %land.lhs.true, label %if.end.69

land.lhs.true:                                    ; preds = %if.end.63
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %95, i32 0, i32 37
  %96 = load i8*, i8** %m_protocolEncodingName, align 8
  %tobool67 = icmp ne i8* %96, null
  br i1 %tobool67, label %if.end.69, label %if.then.68

if.then.68:                                       ; preds = %land.lhs.true
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  call void @PyExpat_XML_ParserFree(%struct.XML_ParserStruct* %97)
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval
  br label %return

if.end.69:                                        ; preds = %land.lhs.true, %if.end.63
  %98 = load i8*, i8** %nameSep.addr, align 8
  %tobool70 = icmp ne i8* %98, null
  br i1 %tobool70, label %if.then.71, label %if.else.75

if.then.71:                                       ; preds = %if.end.69
  %99 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_ns72 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %99, i32 0, i32 38
  store i8 1, i8* %m_ns72, align 1
  %call73 = call %struct.encoding* @PyExpat_XmlGetUtf8InternalEncodingNS()
  %100 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %100, i32 0, i32 36
  store %struct.encoding* %call73, %struct.encoding** %m_internalEncoding, align 8
  %101 = load i8*, i8** %nameSep.addr, align 8
  %102 = load i8, i8* %101, align 1
  %103 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_namespaceSeparator74 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %103, i32 0, i32 83
  store i8 %102, i8* %m_namespaceSeparator74, align 1
  br label %if.end.78

if.else.75:                                       ; preds = %if.end.69
  %call76 = call %struct.encoding* @PyExpat_XmlGetUtf8InternalEncoding()
  %104 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_internalEncoding77 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %104, i32 0, i32 36
  store %struct.encoding* %call76, %struct.encoding** %m_internalEncoding77, align 8
  br label %if.end.78

if.end.78:                                        ; preds = %if.else.75, %if.then.71
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  store %struct.XML_ParserStruct* %105, %struct.XML_ParserStruct** %retval
  br label %return

return:                                           ; preds = %if.end.78, %if.then.68, %if.then.53, %if.then.36, %if.then.26, %if.then.17
  %106 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %retval
  ret %struct.XML_ParserStruct* %106
}

; Function Attrs: nounwind uwtable
define zeroext i8 @PyExpat_XML_ParserReset(%struct.XML_ParserStruct* %parser, i8* %encodingName) #0 {
entry:
  %retval = alloca i8, align 1
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  %tStk = alloca %struct.tag*, align 8
  %openEntityList = alloca %struct.open_internal_entity*, align 8
  %tag = alloca %struct.tag*, align 8
  %openEntity = alloca %struct.open_internal_entity*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 84
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8
  %tobool = icmp ne %struct.XML_ParserStruct* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 67
  %3 = load %struct.tag*, %struct.tag** %m_tagStack, align 8
  store %struct.tag* %3, %struct.tag** %tStk, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load %struct.tag*, %struct.tag** %tStk, align 8
  %tobool1 = icmp ne %struct.tag* %4, null
  br i1 %tobool1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = load %struct.tag*, %struct.tag** %tStk, align 8
  store %struct.tag* %5, %struct.tag** %tag, align 8
  %6 = load %struct.tag*, %struct.tag** %tStk, align 8
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %6, i32 0, i32 0
  %7 = load %struct.tag*, %struct.tag** %parent, align 8
  store %struct.tag* %7, %struct.tag** %tStk, align 8
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeTagList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 68
  %9 = load %struct.tag*, %struct.tag** %m_freeTagList, align 8
  %10 = load %struct.tag*, %struct.tag** %tag, align 8
  %parent2 = getelementptr inbounds %struct.tag, %struct.tag* %10, i32 0, i32 0
  store %struct.tag* %9, %struct.tag** %parent2, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %12 = load %struct.tag*, %struct.tag** %tag, align 8
  %bindings = getelementptr inbounds %struct.tag, %struct.tag* %12, i32 0, i32 6
  %13 = load %struct.binding*, %struct.binding** %bindings, align 8
  call void @moveToFreeBindingList(%struct.XML_ParserStruct* %11, %struct.binding* %13)
  %14 = load %struct.tag*, %struct.tag** %tag, align 8
  %bindings3 = getelementptr inbounds %struct.tag, %struct.tag* %14, i32 0, i32 6
  store %struct.binding* null, %struct.binding** %bindings3, align 8
  %15 = load %struct.tag*, %struct.tag** %tag, align 8
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeTagList4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 68
  store %struct.tag* %15, %struct.tag** %m_freeTagList4, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 50
  %18 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8
  store %struct.open_internal_entity* %18, %struct.open_internal_entity** %openEntityList, align 8
  br label %while.cond.5

while.cond.5:                                     ; preds = %while.body.7, %while.end
  %19 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntityList, align 8
  %tobool6 = icmp ne %struct.open_internal_entity* %19, null
  br i1 %tobool6, label %while.body.7, label %while.end.10

while.body.7:                                     ; preds = %while.cond.5
  %20 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntityList, align 8
  store %struct.open_internal_entity* %20, %struct.open_internal_entity** %openEntity, align 8
  %21 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %next = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %21, i32 0, i32 2
  %22 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next, align 8
  store %struct.open_internal_entity* %22, %struct.open_internal_entity** %openEntityList, align 8
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 51
  %24 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities, align 8
  %25 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %next8 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %25, i32 0, i32 2
  store %struct.open_internal_entity* %24, %struct.open_internal_entity** %next8, align 8
  %26 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeInternalEntities9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 51
  store %struct.open_internal_entity* %26, %struct.open_internal_entity** %m_freeInternalEntities9, align 8
  br label %while.cond.5

while.end.10:                                     ; preds = %while.cond.5
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_inheritedBindings = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 69
  %30 = load %struct.binding*, %struct.binding** %m_inheritedBindings, align 8
  call void @moveToFreeBindingList(%struct.XML_ParserStruct* %28, %struct.binding* %30)
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 3
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2
  %32 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingMem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 40
  %34 = load i8*, i8** %m_unknownEncodingMem, align 8
  call void %32(i8* %34)
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingRelease = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 43
  %36 = load void (i8*)*, void (i8*)** %m_unknownEncodingRelease, align 8
  %tobool11 = icmp ne void (i8*)* %36, null
  br i1 %tobool11, label %if.then.12, label %if.end.14

if.then.12:                                       ; preds = %while.end.10
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingRelease13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 43
  %38 = load void (i8*)*, void (i8*)** %m_unknownEncodingRelease13, align 8
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 41
  %40 = load i8*, i8** %m_unknownEncodingData, align 8
  call void %38(i8* %40)
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.12, %while.end.10
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 79
  call void @poolClear(%struct.STRING_POOL* %m_tempPool)
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 80
  call void @poolClear(%struct.STRING_POOL* %m_temp2Pool)
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %44 = load i8*, i8** %encodingName.addr, align 8
  call void @parserInit(%struct.XML_ParserStruct* %43, i8* %44)
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 65
  %46 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 3
  call void @dtdReset(%struct.DTD* %46, %struct.XML_Memory_Handling_Suite* %m_mem15)
  store i8 1, i8* %retval
  br label %return

return:                                           ; preds = %if.end.14, %if.then
  %48 = load i8, i8* %retval
  ret i8 %48
}

; Function Attrs: nounwind uwtable
define internal void @moveToFreeBindingList(%struct.XML_ParserStruct* %parser, %struct.binding* %bindings) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %bindings.addr = alloca %struct.binding*, align 8
  %b = alloca %struct.binding*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.binding* %bindings, %struct.binding** %bindings.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.binding*, %struct.binding** %bindings.addr, align 8
  %tobool = icmp ne %struct.binding* %0, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load %struct.binding*, %struct.binding** %bindings.addr, align 8
  store %struct.binding* %1, %struct.binding** %b, align 8
  %2 = load %struct.binding*, %struct.binding** %bindings.addr, align 8
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %2, i32 0, i32 1
  %3 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8
  store %struct.binding* %3, %struct.binding** %bindings.addr, align 8
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 70
  %5 = load %struct.binding*, %struct.binding** %m_freeBindingList, align 8
  %6 = load %struct.binding*, %struct.binding** %b, align 8
  %nextTagBinding1 = getelementptr inbounds %struct.binding, %struct.binding* %6, i32 0, i32 1
  store %struct.binding* %5, %struct.binding** %nextTagBinding1, align 8
  %7 = load %struct.binding*, %struct.binding** %b, align 8
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeBindingList2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 70
  store %struct.binding* %7, %struct.binding** %m_freeBindingList2, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @poolClear(%struct.STRING_POOL* %pool) #0 {
entry:
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %p = alloca %struct.block*, align 8
  %tem = alloca %struct.block*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 1
  %1 = load %struct.block*, %struct.block** %freeBlocks, align 8
  %tobool = icmp ne %struct.block* %1, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 0
  %3 = load %struct.block*, %struct.block** %blocks, align 8
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks1 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 1
  store %struct.block* %3, %struct.block** %freeBlocks1, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %5 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %5, i32 0, i32 0
  %6 = load %struct.block*, %struct.block** %blocks2, align 8
  store %struct.block* %6, %struct.block** %p, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.else
  %7 = load %struct.block*, %struct.block** %p, align 8
  %tobool3 = icmp ne %struct.block* %7, null
  br i1 %tobool3, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load %struct.block*, %struct.block** %p, align 8
  %next = getelementptr inbounds %struct.block, %struct.block* %8, i32 0, i32 0
  %9 = load %struct.block*, %struct.block** %next, align 8
  store %struct.block* %9, %struct.block** %tem, align 8
  %10 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks4 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %10, i32 0, i32 1
  %11 = load %struct.block*, %struct.block** %freeBlocks4, align 8
  %12 = load %struct.block*, %struct.block** %p, align 8
  %next5 = getelementptr inbounds %struct.block, %struct.block* %12, i32 0, i32 0
  store %struct.block* %11, %struct.block** %next5, align 8
  %13 = load %struct.block*, %struct.block** %p, align 8
  %14 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks6 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %14, i32 0, i32 1
  store %struct.block* %13, %struct.block** %freeBlocks6, align 8
  %15 = load %struct.block*, %struct.block** %tem, align 8
  store %struct.block* %15, %struct.block** %p, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then
  %16 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks7 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %16, i32 0, i32 0
  store %struct.block* null, %struct.block** %blocks7, align 8
  %17 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %17, i32 0, i32 4
  store i8* null, i8** %start, align 8
  %18 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %18, i32 0, i32 3
  store i8* null, i8** %ptr, align 8
  %19 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %19, i32 0, i32 2
  store i8* null, i8** %end, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @parserInit(%struct.XML_ParserStruct* %parser, i8* %encodingName) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologInitProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 44
  call void @PyExpat_XmlPrologStateInit(%struct.prolog_state* %m_prologState)
  %2 = load i8*, i8** %encodingName.addr, align 8
  %cmp = icmp ne i8* %2, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 79
  %4 = load i8*, i8** %encodingName.addr, align 8
  %call = call i8* @poolCopyString(%struct.STRING_POOL* %m_tempPool, i8* %4)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ null, %cond.false ]
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 37
  store i8* %cond, i8** %m_protocolEncodingName, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_curBase = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 66
  store i8* null, i8** %m_curBase, align 8
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_initEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 35
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 34
  %call1 = call i32 @PyExpat_XmlInitEncoding(%struct.INIT_ENCODING* %m_initEncoding, %struct.encoding** %m_encoding, i8* null)
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_userData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 0
  store i8* null, i8** %m_userData, align 8
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 1
  store i8* null, i8** %m_handlerArg, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 11
  store void (i8*, i8*, i8**)* null, void (i8*, i8*, i8**)** %m_startElementHandler, align 8
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 12
  store void (i8*, i8*)* null, void (i8*, i8*)** %m_endElementHandler, align 8
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 13
  store void (i8*, i8*, i32)* null, void (i8*, i8*, i32)** %m_characterDataHandler, align 8
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processingInstructionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 14
  store void (i8*, i8*, i8*)* null, void (i8*, i8*, i8*)** %m_processingInstructionHandler, align 8
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_commentHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 15
  store void (i8*, i8*)* null, void (i8*, i8*)** %m_commentHandler, align 8
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 16
  store void (i8*)* null, void (i8*)** %m_startCdataSectionHandler, align 8
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 17
  store void (i8*)* null, void (i8*)** %m_endCdataSectionHandler, align 8
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 18
  store void (i8*, i8*, i32)* null, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 19
  store void (i8*, i8*, i8*, i8*, i32)* null, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler, align 8
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 20
  store void (i8*)* null, void (i8*)** %m_endDoctypeDeclHandler, align 8
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unparsedEntityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 21
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* null, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler, align 8
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notationDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 22
  store void (i8*, i8*, i8*, i8*, i8*)* null, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler, align 8
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 23
  store void (i8*, i8*, i8*)* null, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 24
  store void (i8*, i8*)* null, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notStandaloneHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 25
  store i32 (i8*)* null, i32 (i8*)** %m_notStandaloneHandler, align 8
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 26
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* null, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 27
  store %struct.XML_ParserStruct* %27, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 28
  store void (i8*, i8*, i32)* null, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 30
  store void (i8*, i8*, %struct.XML_cp*)* null, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler, align 8
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attlistDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 31
  store void (i8*, i8*, i8*, i8*, i8*, i32)* null, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler, align 8
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 32
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* null, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler, align 8
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_xmlDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 33
  store void (i8*, i8*, i8*, i32)* null, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler, align 8
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 2
  %35 = load i8*, i8** %m_buffer, align 8
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 4
  store i8* %35, i8** %m_bufferPtr, align 8
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 2
  %38 = load i8*, i8** %m_buffer2, align 8
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 5
  store i8* %38, i8** %m_bufferEnd, align 8
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parseEndByteIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 7
  store i64 0, i64* %m_parseEndByteIndex, align 8
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 8
  store i8* null, i8** %m_parseEndPtr, align 8
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declElementType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 61
  store %struct.ELEMENT_TYPE* null, %struct.ELEMENT_TYPE** %m_declElementType, align 8
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 62
  store %struct.attribute_id* null, %struct.attribute_id** %m_declAttributeId, align 8
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 54
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity, align 8
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 55
  store i8* null, i8** %m_doctypeName, align 8
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeSysid = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 56
  store i8* null, i8** %m_doctypeSysid, align 8
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypePubid = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 57
  store i8* null, i8** %m_doctypePubid, align 8
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 58
  store i8* null, i8** %m_declAttributeType, align 8
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 59
  store i8* null, i8** %m_declNotationName, align 8
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationPublicId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 60
  store i8* null, i8** %m_declNotationPublicId, align 8
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeIsCdata = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 63
  store i8 0, i8* %m_declAttributeIsCdata, align 1
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeIsId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 64
  store i8 0, i8* %m_declAttributeIsId, align 1
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 78
  %54 = bitcast %struct.position* %m_position to i8*
  call void @llvm.memset.p0i8.i64(i8* %54, i8 0, i64 16, i32 8, i1 false)
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 46
  store i32 0, i32* %m_errorCode, align 4
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %56, i32 0, i32 47
  store i8* null, i8** %m_eventPtr, align 8
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 48
  store i8* null, i8** %m_eventEndPtr, align 8
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 49
  store i8* null, i8** %m_positionPtr, align 8
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 50
  store %struct.open_internal_entity* null, %struct.open_internal_entity** %m_openInternalEntities, align 8
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 52
  store i8 1, i8* %m_defaultExpandInternalEntities, align 1
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagLevel = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 53
  store i32 0, i32* %m_tagLevel, align 4
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 67
  store %struct.tag* null, %struct.tag** %m_tagStack, align 8
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_inheritedBindings = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 69
  store %struct.binding* null, %struct.binding** %m_inheritedBindings, align 8
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nSpecifiedAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 72
  store i32 0, i32* %m_nSpecifiedAtts, align 4
  %65 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingMem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %65, i32 0, i32 40
  store i8* null, i8** %m_unknownEncodingMem, align 8
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingRelease = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 43
  store void (i8*)* null, void (i8*)** %m_unknownEncodingRelease, align 8
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %67, i32 0, i32 41
  store i8* null, i8** %m_unknownEncodingData, align 8
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 84
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %m_parentParser, align 8
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  store i32 0, i32* %parsing, align 4
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_isParamEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 86
  store i8 0, i8* %m_isParamEntity, align 1
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_useForeignDTD = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 87
  store i8 0, i8* %m_useForeignDTD, align 1
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_paramEntityParsing = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 88
  store i32 0, i32* %m_paramEntityParsing, align 4
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %73, i32 0, i32 89
  store i64 0, i64* %m_hash_secret_salt, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dtdReset(%struct.DTD* %p, %struct.XML_Memory_Handling_Suite* %ms) #0 {
entry:
  %p.addr = alloca %struct.DTD*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %e = alloca %struct.ELEMENT_TYPE*, align 8
  store %struct.DTD* %p, %struct.DTD** %p.addr, align 8
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %0 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %0, i32 0, i32 1
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %elementTypes)
  br label %for.cond

for.cond:                                         ; preds = %if.end.2, %entry
  %call = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter)
  %1 = bitcast %struct.NAMED* %call to %struct.ELEMENT_TYPE*
  store %struct.ELEMENT_TYPE* %1, %struct.ELEMENT_TYPE** %e, align 8
  %2 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8
  %tobool = icmp ne %struct.ELEMENT_TYPE* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.cond
  br label %for.end

if.end:                                           ; preds = %for.cond
  %3 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8
  %allocDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %3, i32 0, i32 4
  %4 = load i32, i32* %allocDefaultAtts, align 4
  %cmp = icmp ne i32 %4, 0
  br i1 %cmp, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  %5 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %5, i32 0, i32 2
  %6 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %7 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %7, i32 0, i32 5
  %8 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8
  %9 = bitcast %struct.DEFAULT_ATTRIBUTE* %8 to i8*
  call void %6(i8* %9)
  br label %if.end.2

if.end.2:                                         ; preds = %if.then.1, %if.end
  br label %for.cond

for.end:                                          ; preds = %if.then
  %10 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %10, i32 0, i32 0
  call void @hashTableClear(%struct.HASH_TABLE* %generalEntities)
  %11 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %paramEntityRead = getelementptr inbounds %struct.DTD, %struct.DTD* %11, i32 0, i32 9
  store i8 0, i8* %paramEntityRead, align 1
  %12 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %paramEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 10
  call void @hashTableClear(%struct.HASH_TABLE* %paramEntities)
  %13 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %elementTypes3 = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 1
  call void @hashTableClear(%struct.HASH_TABLE* %elementTypes3)
  %14 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %14, i32 0, i32 2
  call void @hashTableClear(%struct.HASH_TABLE* %attributeIds)
  %15 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 3
  call void @hashTableClear(%struct.HASH_TABLE* %prefixes)
  %16 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 4
  call void @poolClear(%struct.STRING_POOL* %pool)
  %17 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 5
  call void @poolClear(%struct.STRING_POOL* %entityValuePool)
  %18 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 11
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix, i32 0, i32 0
  store i8* null, i8** %name, align 8
  %19 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %defaultPrefix4 = getelementptr inbounds %struct.DTD, %struct.DTD* %19, i32 0, i32 11
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix4, i32 0, i32 1
  store %struct.binding* null, %struct.binding** %binding, align 8
  %20 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %in_eldecl = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 12
  store i8 0, i8* %in_eldecl, align 1
  %21 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %free_fcn5 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %21, i32 0, i32 2
  %22 = load void (i8*)*, void (i8*)** %free_fcn5, align 8
  %23 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %23, i32 0, i32 18
  %24 = load i32*, i32** %scaffIndex, align 8
  %25 = bitcast i32* %24 to i8*
  call void %22(i8* %25)
  %26 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %scaffIndex6 = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 18
  store i32* null, i32** %scaffIndex6, align 8
  %27 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %free_fcn7 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %27, i32 0, i32 2
  %28 = load void (i8*)*, void (i8*)** %free_fcn7, align 8
  %29 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %29, i32 0, i32 13
  %30 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8
  %31 = bitcast %struct.CONTENT_SCAFFOLD* %30 to i8*
  call void %28(i8* %31)
  %32 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %scaffold8 = getelementptr inbounds %struct.DTD, %struct.DTD* %32, i32 0, i32 13
  store %struct.CONTENT_SCAFFOLD* null, %struct.CONTENT_SCAFFOLD** %scaffold8, align 8
  %33 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %33, i32 0, i32 17
  store i32 0, i32* %scaffLevel, align 4
  %34 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %scaffSize = getelementptr inbounds %struct.DTD, %struct.DTD* %34, i32 0, i32 15
  store i32 0, i32* %scaffSize, align 4
  %35 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %35, i32 0, i32 16
  store i32 0, i32* %scaffCount, align 4
  %36 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %36, i32 0, i32 14
  store i32 0, i32* %contentStringLen, align 4
  %37 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %37, i32 0, i32 6
  store i8 1, i8* %keepProcessing, align 1
  %38 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %38, i32 0, i32 7
  store i8 0, i8* %hasParamEntityRefs, align 1
  %39 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %39, i32 0, i32 8
  store i8 0, i8* %standalone, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_SetEncoding(%struct.XML_ParserStruct* %parser, i8* %encodingName) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %1 = load i32, i32* %parsing, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0
  %3 = load i32, i32* %parsing2, align 4
  %cmp3 = icmp eq i32 %3, 3
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %encodingName.addr, align 8
  %cmp4 = icmp eq i8* %4, null
  br i1 %cmp4, label %if.then.5, label %if.else

if.then.5:                                        ; preds = %if.end
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 37
  store i8* null, i8** %m_protocolEncodingName, align 8
  br label %if.end.10

if.else:                                          ; preds = %if.end
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 79
  %7 = load i8*, i8** %encodingName.addr, align 8
  %call = call i8* @poolCopyString(%struct.STRING_POOL* %m_tempPool, i8* %7)
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_protocolEncodingName6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 37
  store i8* %call, i8** %m_protocolEncodingName6, align 8
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_protocolEncodingName7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 37
  %10 = load i8*, i8** %m_protocolEncodingName7, align 8
  %tobool = icmp ne i8* %10, null
  br i1 %tobool, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.else
  store i32 0, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.else
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.then.5
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.10, %if.then.8, %if.then
  %11 = load i32, i32* %retval
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define internal i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %s) #0 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %s.addr = alloca i8*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 3
  %1 = load i8*, i8** %ptr, align 8
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 2
  %3 = load i8*, i8** %end, align 8
  %cmp = icmp eq i8* %1, %3
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %4)
  %tobool = icmp ne i8 %call, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then

cond.false:                                       ; preds = %land.lhs.true, %do.body
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %7 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr1 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %7, i32 0, i32 3
  %8 = load i8*, i8** %ptr1, align 8
  %incdec.ptr = getelementptr i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %ptr1, align 8
  store i8 %6, i8* %8, align 1
  br i1 true, label %if.end, label %if.then

if.then:                                          ; preds = %cond.false, %cond.true
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %cond.false, %cond.true
  br label %do.cond

do.cond:                                          ; preds = %if.end
  %9 = load i8*, i8** %s.addr, align 8
  %incdec.ptr2 = getelementptr i8, i8* %9, i32 1
  store i8* %incdec.ptr2, i8** %s.addr, align 8
  %10 = load i8, i8* %9, align 1
  %tobool3 = icmp ne i8 %10, 0
  br i1 %tobool3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 4
  %12 = load i8*, i8** %start, align 8
  store i8* %12, i8** %s.addr, align 8
  %13 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr4 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %13, i32 0, i32 3
  %14 = load i8*, i8** %ptr4, align 8
  %15 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %15, i32 0, i32 4
  store i8* %14, i8** %start5, align 8
  %16 = load i8*, i8** %s.addr, align 8
  store i8* %16, i8** %retval
  br label %return

return:                                           ; preds = %do.end, %if.then
  %17 = load i8*, i8** %retval
  ret i8* %17
}

; Function Attrs: nounwind uwtable
define %struct.XML_ParserStruct* @PyExpat_XML_ExternalEntityParserCreate(%struct.XML_ParserStruct* %oldParser, i8* %context, i8* %encodingName) #0 {
entry:
  %retval = alloca %struct.XML_ParserStruct*, align 8
  %oldParser.addr = alloca %struct.XML_ParserStruct*, align 8
  %context.addr = alloca i8*, align 8
  %encodingName.addr = alloca i8*, align 8
  %parser = alloca %struct.XML_ParserStruct*, align 8
  %newDtd = alloca %struct.DTD*, align 8
  %oldDtd = alloca %struct.DTD*, align 8
  %oldStartElementHandler = alloca void (i8*, i8*, i8**)*, align 8
  %oldEndElementHandler = alloca void (i8*, i8*)*, align 8
  %oldCharacterDataHandler = alloca void (i8*, i8*, i32)*, align 8
  %oldProcessingInstructionHandler = alloca void (i8*, i8*, i8*)*, align 8
  %oldCommentHandler = alloca void (i8*, i8*)*, align 8
  %oldStartCdataSectionHandler = alloca void (i8*)*, align 8
  %oldEndCdataSectionHandler = alloca void (i8*)*, align 8
  %oldDefaultHandler = alloca void (i8*, i8*, i32)*, align 8
  %oldUnparsedEntityDeclHandler = alloca void (i8*, i8*, i8*, i8*, i8*, i8*)*, align 8
  %oldNotationDeclHandler = alloca void (i8*, i8*, i8*, i8*, i8*)*, align 8
  %oldStartNamespaceDeclHandler = alloca void (i8*, i8*, i8*)*, align 8
  %oldEndNamespaceDeclHandler = alloca void (i8*, i8*)*, align 8
  %oldNotStandaloneHandler = alloca i32 (i8*)*, align 8
  %oldExternalEntityRefHandler = alloca i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, align 8
  %oldSkippedEntityHandler = alloca void (i8*, i8*, i32)*, align 8
  %oldUnknownEncodingHandler = alloca i32 (i8*, i8*, %struct.XML_Encoding*)*, align 8
  %oldElementDeclHandler = alloca void (i8*, i8*, %struct.XML_cp*)*, align 8
  %oldAttlistDeclHandler = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  %oldEntityDeclHandler = alloca void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, align 8
  %oldXmlDeclHandler = alloca void (i8*, i8*, i8*, i32)*, align 8
  %oldDeclElementType = alloca %struct.ELEMENT_TYPE*, align 8
  %oldUserData = alloca i8*, align 8
  %oldHandlerArg = alloca i8*, align 8
  %oldDefaultExpandInternalEntities = alloca i8, align 1
  %oldExternalEntityRefHandlerArg = alloca %struct.XML_ParserStruct*, align 8
  %oldParamEntityParsing = alloca i32, align 4
  %oldInEntityValue = alloca i32, align 4
  %oldns_triplets = alloca i8, align 1
  %oldhash_secret_salt = alloca i64, align 8
  %tmp = alloca [2 x i8], align 1
  store %struct.XML_ParserStruct* %oldParser, %struct.XML_ParserStruct** %oldParser.addr, align 8
  store i8* %context, i8** %context.addr, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  store %struct.XML_ParserStruct* %0, %struct.XML_ParserStruct** %parser, align 8
  store %struct.DTD* null, %struct.DTD** %newDtd, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %2, %struct.DTD** %oldDtd, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 11
  %4 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler, align 8
  store void (i8*, i8*, i8**)* %4, void (i8*, i8*, i8**)** %oldStartElementHandler, align 8
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 12
  %6 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler, align 8
  store void (i8*, i8*)* %6, void (i8*, i8*)** %oldEndElementHandler, align 8
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 13
  %8 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler, align 8
  store void (i8*, i8*, i32)* %8, void (i8*, i8*, i32)** %oldCharacterDataHandler, align 8
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_processingInstructionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 14
  %10 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_processingInstructionHandler, align 8
  store void (i8*, i8*, i8*)* %10, void (i8*, i8*, i8*)** %oldProcessingInstructionHandler, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_commentHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 15
  %12 = load void (i8*, i8*)*, void (i8*, i8*)** %m_commentHandler, align 8
  store void (i8*, i8*)* %12, void (i8*, i8*)** %oldCommentHandler, align 8
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 16
  %14 = load void (i8*)*, void (i8*)** %m_startCdataSectionHandler, align 8
  store void (i8*)* %14, void (i8*)** %oldStartCdataSectionHandler, align 8
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 17
  %16 = load void (i8*)*, void (i8*)** %m_endCdataSectionHandler, align 8
  store void (i8*)* %16, void (i8*)** %oldEndCdataSectionHandler, align 8
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 18
  %18 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  store void (i8*, i8*, i32)* %18, void (i8*, i8*, i32)** %oldDefaultHandler, align 8
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_unparsedEntityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 21
  %20 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler, align 8
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* %20, void (i8*, i8*, i8*, i8*, i8*, i8*)** %oldUnparsedEntityDeclHandler, align 8
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_notationDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 22
  %22 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler, align 8
  store void (i8*, i8*, i8*, i8*, i8*)* %22, void (i8*, i8*, i8*, i8*, i8*)** %oldNotationDeclHandler, align 8
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 23
  %24 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8
  store void (i8*, i8*, i8*)* %24, void (i8*, i8*, i8*)** %oldStartNamespaceDeclHandler, align 8
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 24
  %26 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8
  store void (i8*, i8*)* %26, void (i8*, i8*)** %oldEndNamespaceDeclHandler, align 8
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_notStandaloneHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 25
  %28 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler, align 8
  store i32 (i8*)* %28, i32 (i8*)** %oldNotStandaloneHandler, align 8
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 26
  %30 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %30, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %oldExternalEntityRefHandler, align 8
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 28
  %32 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8
  store void (i8*, i8*, i32)* %32, void (i8*, i8*, i32)** %oldSkippedEntityHandler, align 8
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_unknownEncodingHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 29
  %34 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler, align 8
  store i32 (i8*, i8*, %struct.XML_Encoding*)* %34, i32 (i8*, i8*, %struct.XML_Encoding*)** %oldUnknownEncodingHandler, align 8
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_elementDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 30
  %36 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler, align 8
  store void (i8*, i8*, %struct.XML_cp*)* %36, void (i8*, i8*, %struct.XML_cp*)** %oldElementDeclHandler, align 8
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_attlistDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 31
  %38 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler, align 8
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %38, void (i8*, i8*, i8*, i8*, i8*, i32)** %oldAttlistDeclHandler, align 8
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_entityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 32
  %40 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler, align 8
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %40, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %oldEntityDeclHandler, align 8
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_xmlDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 33
  %42 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler, align 8
  store void (i8*, i8*, i8*, i32)* %42, void (i8*, i8*, i8*, i32)** %oldXmlDeclHandler, align 8
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_declElementType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 61
  %44 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType, align 8
  store %struct.ELEMENT_TYPE* %44, %struct.ELEMENT_TYPE** %oldDeclElementType, align 8
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_userData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 0
  %46 = load i8*, i8** %m_userData, align 8
  store i8* %46, i8** %oldUserData, align 8
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 1
  %48 = load i8*, i8** %m_handlerArg, align 8
  store i8* %48, i8** %oldHandlerArg, align 8
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 52
  %50 = load i8, i8* %m_defaultExpandInternalEntities, align 1
  store i8 %50, i8* %oldDefaultExpandInternalEntities, align 1
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 27
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8
  store %struct.XML_ParserStruct* %52, %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg, align 8
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_paramEntityParsing = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 88
  %54 = load i32, i32* %m_paramEntityParsing, align 4
  store i32 %54, i32* %oldParamEntityParsing, align 4
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 44
  %inEntityValue = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState, i32 0, i32 5
  %56 = load i32, i32* %inEntityValue, align 4
  store i32 %56, i32* %oldInEntityValue, align 4
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 39
  %58 = load i8, i8* %m_ns_triplets, align 1
  store i8 %58, i8* %oldns_triplets, align 1
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 89
  %60 = load i64, i64* %m_hash_secret_salt, align 8
  store i64 %60, i64* %oldhash_secret_salt, align 8
  %61 = load i8*, i8** %context.addr, align 8
  %tobool = icmp ne i8* %61, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %62 = load %struct.DTD*, %struct.DTD** %oldDtd, align 8
  store %struct.DTD* %62, %struct.DTD** %newDtd, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 38
  %64 = load i8, i8* %m_ns, align 1
  %tobool1 = icmp ne i8 %64, 0
  br i1 %tobool1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.end
  %65 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %65, i32 0, i32 83
  %66 = load i8, i8* %m_namespaceSeparator, align 1
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i32 0, i32 0
  store i8 %66, i8* %arraydecay, align 1
  %67 = load i8*, i8** %encodingName.addr, align 8
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 3
  %arraydecay3 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i32 0, i32 0
  %69 = load %struct.DTD*, %struct.DTD** %newDtd, align 8
  %call = call %struct.XML_ParserStruct* @parserCreate(i8* %67, %struct.XML_Memory_Handling_Suite* %m_mem, i8* %arraydecay3, %struct.DTD* %69)
  store %struct.XML_ParserStruct* %call, %struct.XML_ParserStruct** %parser, align 8
  br label %if.end.6

if.else:                                          ; preds = %if.end
  %70 = load i8*, i8** %encodingName.addr, align 8
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 3
  %72 = load %struct.DTD*, %struct.DTD** %newDtd, align 8
  %call5 = call %struct.XML_ParserStruct* @parserCreate(i8* %70, %struct.XML_Memory_Handling_Suite* %m_mem4, i8* null, %struct.DTD* %72)
  store %struct.XML_ParserStruct* %call5, %struct.XML_ParserStruct** %parser, align 8
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %tobool7 = icmp ne %struct.XML_ParserStruct* %73, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.6
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval
  br label %return

if.end.9:                                         ; preds = %if.end.6
  %74 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %oldStartElementHandler, align 8
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_startElementHandler10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 11
  store void (i8*, i8*, i8**)* %74, void (i8*, i8*, i8**)** %m_startElementHandler10, align 8
  %76 = load void (i8*, i8*)*, void (i8*, i8*)** %oldEndElementHandler, align 8
  %77 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_endElementHandler11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %77, i32 0, i32 12
  store void (i8*, i8*)* %76, void (i8*, i8*)** %m_endElementHandler11, align 8
  %78 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %oldCharacterDataHandler, align 8
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_characterDataHandler12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 13
  store void (i8*, i8*, i32)* %78, void (i8*, i8*, i32)** %m_characterDataHandler12, align 8
  %80 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %oldProcessingInstructionHandler, align 8
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_processingInstructionHandler13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 14
  store void (i8*, i8*, i8*)* %80, void (i8*, i8*, i8*)** %m_processingInstructionHandler13, align 8
  %82 = load void (i8*, i8*)*, void (i8*, i8*)** %oldCommentHandler, align 8
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_commentHandler14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 15
  store void (i8*, i8*)* %82, void (i8*, i8*)** %m_commentHandler14, align 8
  %84 = load void (i8*)*, void (i8*)** %oldStartCdataSectionHandler, align 8
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_startCdataSectionHandler15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 16
  store void (i8*)* %84, void (i8*)** %m_startCdataSectionHandler15, align 8
  %86 = load void (i8*)*, void (i8*)** %oldEndCdataSectionHandler, align 8
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_endCdataSectionHandler16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 17
  store void (i8*)* %86, void (i8*)** %m_endCdataSectionHandler16, align 8
  %88 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %oldDefaultHandler, align 8
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_defaultHandler17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 18
  store void (i8*, i8*, i32)* %88, void (i8*, i8*, i32)** %m_defaultHandler17, align 8
  %90 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %oldUnparsedEntityDeclHandler, align 8
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_unparsedEntityDeclHandler18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %91, i32 0, i32 21
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* %90, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler18, align 8
  %92 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %oldNotationDeclHandler, align 8
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_notationDeclHandler19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 22
  store void (i8*, i8*, i8*, i8*, i8*)* %92, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler19, align 8
  %94 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %oldStartNamespaceDeclHandler, align 8
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_startNamespaceDeclHandler20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %95, i32 0, i32 23
  store void (i8*, i8*, i8*)* %94, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler20, align 8
  %96 = load void (i8*, i8*)*, void (i8*, i8*)** %oldEndNamespaceDeclHandler, align 8
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_endNamespaceDeclHandler21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %97, i32 0, i32 24
  store void (i8*, i8*)* %96, void (i8*, i8*)** %m_endNamespaceDeclHandler21, align 8
  %98 = load i32 (i8*)*, i32 (i8*)** %oldNotStandaloneHandler, align 8
  %99 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_notStandaloneHandler22 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %99, i32 0, i32 25
  store i32 (i8*)* %98, i32 (i8*)** %m_notStandaloneHandler22, align 8
  %100 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %oldExternalEntityRefHandler, align 8
  %101 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_externalEntityRefHandler23 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %101, i32 0, i32 26
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %100, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler23, align 8
  %102 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %oldSkippedEntityHandler, align 8
  %103 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_skippedEntityHandler24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %103, i32 0, i32 28
  store void (i8*, i8*, i32)* %102, void (i8*, i8*, i32)** %m_skippedEntityHandler24, align 8
  %104 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %oldUnknownEncodingHandler, align 8
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_unknownEncodingHandler25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %105, i32 0, i32 29
  store i32 (i8*, i8*, %struct.XML_Encoding*)* %104, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler25, align 8
  %106 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %oldElementDeclHandler, align 8
  %107 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_elementDeclHandler26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %107, i32 0, i32 30
  store void (i8*, i8*, %struct.XML_cp*)* %106, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler26, align 8
  %108 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %oldAttlistDeclHandler, align 8
  %109 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_attlistDeclHandler27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %109, i32 0, i32 31
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %108, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler27, align 8
  %110 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %oldEntityDeclHandler, align 8
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_entityDeclHandler28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 32
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %110, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler28, align 8
  %112 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %oldXmlDeclHandler, align 8
  %113 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_xmlDeclHandler29 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %113, i32 0, i32 33
  store void (i8*, i8*, i8*, i32)* %112, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler29, align 8
  %114 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldDeclElementType, align 8
  %115 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_declElementType30 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %115, i32 0, i32 61
  store %struct.ELEMENT_TYPE* %114, %struct.ELEMENT_TYPE** %m_declElementType30, align 8
  %116 = load i8*, i8** %oldUserData, align 8
  %117 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_userData31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %117, i32 0, i32 0
  store i8* %116, i8** %m_userData31, align 8
  %118 = load i8*, i8** %oldUserData, align 8
  %119 = load i8*, i8** %oldHandlerArg, align 8
  %cmp = icmp eq i8* %118, %119
  br i1 %cmp, label %if.then.32, label %if.else.35

if.then.32:                                       ; preds = %if.end.9
  %120 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_userData33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %120, i32 0, i32 0
  %121 = load i8*, i8** %m_userData33, align 8
  %122 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_handlerArg34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %122, i32 0, i32 1
  store i8* %121, i8** %m_handlerArg34, align 8
  br label %if.end.37

if.else.35:                                       ; preds = %if.end.9
  %123 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %124 = bitcast %struct.XML_ParserStruct* %123 to i8*
  %125 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_handlerArg36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %125, i32 0, i32 1
  store i8* %124, i8** %m_handlerArg36, align 8
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.35, %if.then.32
  %126 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg, align 8
  %127 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %cmp38 = icmp ne %struct.XML_ParserStruct* %126, %127
  br i1 %cmp38, label %if.then.39, label %if.end.41

if.then.39:                                       ; preds = %if.end.37
  %128 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldExternalEntityRefHandlerArg, align 8
  %129 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_externalEntityRefHandlerArg40 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %129, i32 0, i32 27
  store %struct.XML_ParserStruct* %128, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg40, align 8
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.39, %if.end.37
  %130 = load i8, i8* %oldDefaultExpandInternalEntities, align 1
  %131 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_defaultExpandInternalEntities42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %131, i32 0, i32 52
  store i8 %130, i8* %m_defaultExpandInternalEntities42, align 1
  %132 = load i8, i8* %oldns_triplets, align 1
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_ns_triplets43 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 39
  store i8 %132, i8* %m_ns_triplets43, align 1
  %134 = load i64, i64* %oldhash_secret_salt, align 8
  %135 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_hash_secret_salt44 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %135, i32 0, i32 89
  store i64 %134, i64* %m_hash_secret_salt44, align 8
  %136 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %137 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %137, i32 0, i32 84
  store %struct.XML_ParserStruct* %136, %struct.XML_ParserStruct** %m_parentParser, align 8
  %138 = load i32, i32* %oldParamEntityParsing, align 4
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_paramEntityParsing45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %139, i32 0, i32 88
  store i32 %138, i32* %m_paramEntityParsing45, align 4
  %140 = load i32, i32* %oldInEntityValue, align 4
  %141 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_prologState46 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %141, i32 0, i32 44
  %inEntityValue47 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState46, i32 0, i32 5
  store i32 %140, i32* %inEntityValue47, align 4
  %142 = load i8*, i8** %context.addr, align 8
  %tobool48 = icmp ne i8* %142, null
  br i1 %tobool48, label %if.then.49, label %if.else.58

if.then.49:                                       ; preds = %if.end.41
  %143 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %144 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_dtd50 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %144, i32 0, i32 65
  %145 = load %struct.DTD*, %struct.DTD** %m_dtd50, align 8
  %146 = load %struct.DTD*, %struct.DTD** %oldDtd, align 8
  %147 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_mem51 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %147, i32 0, i32 3
  %call52 = call i32 @dtdCopy(%struct.XML_ParserStruct* %143, %struct.DTD* %145, %struct.DTD* %146, %struct.XML_Memory_Handling_Suite* %m_mem51)
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %lor.lhs.false, label %if.then.56

lor.lhs.false:                                    ; preds = %if.then.49
  %148 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %149 = load i8*, i8** %context.addr, align 8
  %call54 = call zeroext i8 @setContext(%struct.XML_ParserStruct* %148, i8* %149)
  %tobool55 = icmp ne i8 %call54, 0
  br i1 %tobool55, label %if.end.57, label %if.then.56

if.then.56:                                       ; preds = %lor.lhs.false, %if.then.49
  %150 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  call void @PyExpat_XML_ParserFree(%struct.XML_ParserStruct* %150)
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %retval
  br label %return

if.end.57:                                        ; preds = %lor.lhs.false
  %151 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %151, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityInitProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  br label %if.end.61

if.else.58:                                       ; preds = %if.end.41
  %152 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_isParamEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %152, i32 0, i32 86
  store i8 1, i8* %m_isParamEntity, align 1
  %153 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_prologState59 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %153, i32 0, i32 44
  call void @PyExpat_XmlPrologStateInitExternalEntity(%struct.prolog_state* %m_prologState59)
  %154 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %m_processor60 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %154, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalParEntInitProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor60, align 8
  br label %if.end.61

if.end.61:                                        ; preds = %if.else.58, %if.end.57
  %155 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  store %struct.XML_ParserStruct* %155, %struct.XML_ParserStruct** %retval
  br label %return

return:                                           ; preds = %if.end.61, %if.then.56, %if.then.8
  %156 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %retval
  ret %struct.XML_ParserStruct* %156
}

; Function Attrs: nounwind uwtable
define internal i32 @dtdCopy(%struct.XML_ParserStruct* %oldParser, %struct.DTD* %newDtd, %struct.DTD* %oldDtd, %struct.XML_Memory_Handling_Suite* %ms) #0 {
entry:
  %retval = alloca i32, align 4
  %oldParser.addr = alloca %struct.XML_ParserStruct*, align 8
  %newDtd.addr = alloca %struct.DTD*, align 8
  %oldDtd.addr = alloca %struct.DTD*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %name = alloca i8*, align 8
  %oldP = alloca %struct.prefix*, align 8
  %newA = alloca %struct.attribute_id*, align 8
  %name12 = alloca i8*, align 8
  %oldA = alloca %struct.attribute_id*, align 8
  %i = alloca i32, align 4
  %newE = alloca %struct.ELEMENT_TYPE*, align 8
  %name56 = alloca i8*, align 8
  %oldE = alloca %struct.ELEMENT_TYPE*, align 8
  store %struct.XML_ParserStruct* %oldParser, %struct.XML_ParserStruct** %oldParser.addr, align 8
  store %struct.DTD* %newDtd, %struct.DTD** %newDtd.addr, align 8
  store %struct.DTD* %oldDtd, %struct.DTD** %oldDtd.addr, align 8
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %0 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %0, i32 0, i32 3
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %prefixes)
  br label %for.cond

for.cond:                                         ; preds = %if.end.10, %entry
  %call = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter)
  %1 = bitcast %struct.NAMED* %call to %struct.prefix*
  store %struct.prefix* %1, %struct.prefix** %oldP, align 8
  %2 = load %struct.prefix*, %struct.prefix** %oldP, align 8
  %tobool = icmp ne %struct.prefix* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.cond
  br label %for.end

if.end:                                           ; preds = %for.cond
  %3 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %3, i32 0, i32 4
  %4 = load %struct.prefix*, %struct.prefix** %oldP, align 8
  %name1 = getelementptr inbounds %struct.prefix, %struct.prefix* %4, i32 0, i32 0
  %5 = load i8*, i8** %name1, align 8
  %call2 = call i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %5)
  store i8* %call2, i8** %name, align 8
  %6 = load i8*, i8** %name, align 8
  %tobool3 = icmp ne i8* %6, null
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.5:                                         ; preds = %if.end
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %8 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %prefixes6 = getelementptr inbounds %struct.DTD, %struct.DTD* %8, i32 0, i32 3
  %9 = load i8*, i8** %name, align 8
  %call7 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %7, %struct.HASH_TABLE* %prefixes6, i8* %9, i64 16)
  %tobool8 = icmp ne %struct.NAMED* %call7, null
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.5
  store i32 0, i32* %retval
  br label %return

if.end.10:                                        ; preds = %if.end.5
  br label %for.cond

for.end:                                          ; preds = %if.then
  %10 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %10, i32 0, i32 2
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %attributeIds)
  br label %for.cond.11

for.cond.11:                                      ; preds = %if.end.53, %for.end
  %call13 = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter)
  %11 = bitcast %struct.NAMED* %call13 to %struct.attribute_id*
  store %struct.attribute_id* %11, %struct.attribute_id** %oldA, align 8
  %12 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8
  %tobool14 = icmp ne %struct.attribute_id* %12, null
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %for.cond.11
  br label %for.end.54

if.end.16:                                        ; preds = %for.cond.11
  %13 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %pool17 = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 4
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool17, i32 0, i32 3
  %14 = load i8*, i8** %ptr, align 8
  %15 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %pool18 = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 4
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool18, i32 0, i32 2
  %16 = load i8*, i8** %end, align 8
  %cmp = icmp eq i8* %14, %16
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.end.16
  %17 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %pool19 = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 4
  %call20 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool19)
  %tobool21 = icmp ne i8 %call20, 0
  br i1 %tobool21, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end.25, label %if.then.24

cond.false:                                       ; preds = %land.lhs.true, %if.end.16
  %18 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %pool22 = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 4
  %ptr23 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool22, i32 0, i32 3
  %19 = load i8*, i8** %ptr23, align 8
  %incdec.ptr = getelementptr i8, i8* %19, i32 1
  store i8* %incdec.ptr, i8** %ptr23, align 8
  store i8 0, i8* %19, align 1
  br i1 true, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval
  br label %return

if.end.25:                                        ; preds = %cond.false, %cond.true
  %20 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %pool26 = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 4
  %21 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8
  %name27 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %21, i32 0, i32 0
  %22 = load i8*, i8** %name27, align 8
  %call28 = call i8* @poolCopyString(%struct.STRING_POOL* %pool26, i8* %22)
  store i8* %call28, i8** %name12, align 8
  %23 = load i8*, i8** %name12, align 8
  %tobool29 = icmp ne i8* %23, null
  br i1 %tobool29, label %if.end.31, label %if.then.30

if.then.30:                                       ; preds = %if.end.25
  store i32 0, i32* %retval
  br label %return

if.end.31:                                        ; preds = %if.end.25
  %24 = load i8*, i8** %name12, align 8
  %incdec.ptr32 = getelementptr i8, i8* %24, i32 1
  store i8* %incdec.ptr32, i8** %name12, align 8
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %26 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %attributeIds33 = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 2
  %27 = load i8*, i8** %name12, align 8
  %call34 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %25, %struct.HASH_TABLE* %attributeIds33, i8* %27, i64 24)
  %28 = bitcast %struct.NAMED* %call34 to %struct.attribute_id*
  store %struct.attribute_id* %28, %struct.attribute_id** %newA, align 8
  %29 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8
  %tobool35 = icmp ne %struct.attribute_id* %29, null
  br i1 %tobool35, label %if.end.37, label %if.then.36

if.then.36:                                       ; preds = %if.end.31
  store i32 0, i32* %retval
  br label %return

if.end.37:                                        ; preds = %if.end.31
  %30 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8
  %maybeTokenized = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %30, i32 0, i32 2
  %31 = load i8, i8* %maybeTokenized, align 1
  %32 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8
  %maybeTokenized38 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %32, i32 0, i32 2
  store i8 %31, i8* %maybeTokenized38, align 1
  %33 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8
  %prefix = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %33, i32 0, i32 1
  %34 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %tobool39 = icmp ne %struct.prefix* %34, null
  br i1 %tobool39, label %if.then.40, label %if.end.53

if.then.40:                                       ; preds = %if.end.37
  %35 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8
  %xmlns = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %35, i32 0, i32 3
  %36 = load i8, i8* %xmlns, align 1
  %37 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8
  %xmlns41 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %37, i32 0, i32 3
  store i8 %36, i8* %xmlns41, align 1
  %38 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8
  %prefix42 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %38, i32 0, i32 1
  %39 = load %struct.prefix*, %struct.prefix** %prefix42, align 8
  %40 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %40, i32 0, i32 11
  %cmp43 = icmp eq %struct.prefix* %39, %defaultPrefix
  br i1 %cmp43, label %if.then.44, label %if.else

if.then.44:                                       ; preds = %if.then.40
  %41 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %defaultPrefix45 = getelementptr inbounds %struct.DTD, %struct.DTD* %41, i32 0, i32 11
  %42 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8
  %prefix46 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %42, i32 0, i32 1
  store %struct.prefix* %defaultPrefix45, %struct.prefix** %prefix46, align 8
  br label %if.end.52

if.else:                                          ; preds = %if.then.40
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %44 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %prefixes47 = getelementptr inbounds %struct.DTD, %struct.DTD* %44, i32 0, i32 3
  %45 = load %struct.attribute_id*, %struct.attribute_id** %oldA, align 8
  %prefix48 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %45, i32 0, i32 1
  %46 = load %struct.prefix*, %struct.prefix** %prefix48, align 8
  %name49 = getelementptr inbounds %struct.prefix, %struct.prefix* %46, i32 0, i32 0
  %47 = load i8*, i8** %name49, align 8
  %call50 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %43, %struct.HASH_TABLE* %prefixes47, i8* %47, i64 0)
  %48 = bitcast %struct.NAMED* %call50 to %struct.prefix*
  %49 = load %struct.attribute_id*, %struct.attribute_id** %newA, align 8
  %prefix51 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %49, i32 0, i32 1
  store %struct.prefix* %48, %struct.prefix** %prefix51, align 8
  br label %if.end.52

if.end.52:                                        ; preds = %if.else, %if.then.44
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52, %if.end.37
  br label %for.cond.11

for.end.54:                                       ; preds = %if.then.15
  %50 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %50, i32 0, i32 1
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %elementTypes)
  br label %for.cond.55

for.cond.55:                                      ; preds = %for.end.147, %for.end.54
  %call57 = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter)
  %51 = bitcast %struct.NAMED* %call57 to %struct.ELEMENT_TYPE*
  store %struct.ELEMENT_TYPE* %51, %struct.ELEMENT_TYPE** %oldE, align 8
  %52 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %tobool58 = icmp ne %struct.ELEMENT_TYPE* %52, null
  br i1 %tobool58, label %if.end.60, label %if.then.59

if.then.59:                                       ; preds = %for.cond.55
  br label %for.end.148

if.end.60:                                        ; preds = %for.cond.55
  %53 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %pool61 = getelementptr inbounds %struct.DTD, %struct.DTD* %53, i32 0, i32 4
  %54 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %name62 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %54, i32 0, i32 0
  %55 = load i8*, i8** %name62, align 8
  %call63 = call i8* @poolCopyString(%struct.STRING_POOL* %pool61, i8* %55)
  store i8* %call63, i8** %name56, align 8
  %56 = load i8*, i8** %name56, align 8
  %tobool64 = icmp ne i8* %56, null
  br i1 %tobool64, label %if.end.66, label %if.then.65

if.then.65:                                       ; preds = %if.end.60
  store i32 0, i32* %retval
  br label %return

if.end.66:                                        ; preds = %if.end.60
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %58 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %elementTypes67 = getelementptr inbounds %struct.DTD, %struct.DTD* %58, i32 0, i32 1
  %59 = load i8*, i8** %name56, align 8
  %call68 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %57, %struct.HASH_TABLE* %elementTypes67, i8* %59, i64 40)
  %60 = bitcast %struct.NAMED* %call68 to %struct.ELEMENT_TYPE*
  store %struct.ELEMENT_TYPE* %60, %struct.ELEMENT_TYPE** %newE, align 8
  %61 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %tobool69 = icmp ne %struct.ELEMENT_TYPE* %61, null
  br i1 %tobool69, label %if.end.71, label %if.then.70

if.then.70:                                       ; preds = %if.end.66
  store i32 0, i32* %retval
  br label %return

if.end.71:                                        ; preds = %if.end.66
  %62 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %nDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %62, i32 0, i32 3
  %63 = load i32, i32* %nDefaultAtts, align 4
  %tobool72 = icmp ne i32 %63, 0
  br i1 %tobool72, label %if.then.73, label %if.end.80

if.then.73:                                       ; preds = %if.end.71
  %64 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %64, i32 0, i32 0
  %65 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %66 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %nDefaultAtts74 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %66, i32 0, i32 3
  %67 = load i32, i32* %nDefaultAtts74, align 4
  %conv = sext i32 %67 to i64
  %mul = mul i64 %conv, 24
  %call75 = call i8* %65(i64 %mul)
  %68 = bitcast i8* %call75 to %struct.DEFAULT_ATTRIBUTE*
  %69 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %69, i32 0, i32 5
  store %struct.DEFAULT_ATTRIBUTE* %68, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8
  %70 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %defaultAtts76 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %70, i32 0, i32 5
  %71 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts76, align 8
  %tobool77 = icmp ne %struct.DEFAULT_ATTRIBUTE* %71, null
  br i1 %tobool77, label %if.end.79, label %if.then.78

if.then.78:                                       ; preds = %if.then.73
  %72 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %72, i32 0, i32 2
  %73 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %74 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %75 = bitcast %struct.ELEMENT_TYPE* %74 to i8*
  call void %73(i8* %75)
  store i32 0, i32* %retval
  br label %return

if.end.79:                                        ; preds = %if.then.73
  br label %if.end.80

if.end.80:                                        ; preds = %if.end.79, %if.end.71
  %76 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %idAtt = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %76, i32 0, i32 2
  %77 = load %struct.attribute_id*, %struct.attribute_id** %idAtt, align 8
  %tobool81 = icmp ne %struct.attribute_id* %77, null
  br i1 %tobool81, label %if.then.82, label %if.end.88

if.then.82:                                       ; preds = %if.end.80
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %79 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %attributeIds83 = getelementptr inbounds %struct.DTD, %struct.DTD* %79, i32 0, i32 2
  %80 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %idAtt84 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %80, i32 0, i32 2
  %81 = load %struct.attribute_id*, %struct.attribute_id** %idAtt84, align 8
  %name85 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %81, i32 0, i32 0
  %82 = load i8*, i8** %name85, align 8
  %call86 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %78, %struct.HASH_TABLE* %attributeIds83, i8* %82, i64 0)
  %83 = bitcast %struct.NAMED* %call86 to %struct.attribute_id*
  %84 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %idAtt87 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %84, i32 0, i32 2
  store %struct.attribute_id* %83, %struct.attribute_id** %idAtt87, align 8
  br label %if.end.88

if.end.88:                                        ; preds = %if.then.82, %if.end.80
  %85 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %nDefaultAtts89 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %85, i32 0, i32 3
  %86 = load i32, i32* %nDefaultAtts89, align 4
  %87 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %nDefaultAtts90 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %87, i32 0, i32 3
  store i32 %86, i32* %nDefaultAtts90, align 4
  %88 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %allocDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %88, i32 0, i32 4
  store i32 %86, i32* %allocDefaultAtts, align 4
  %89 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %prefix91 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %89, i32 0, i32 1
  %90 = load %struct.prefix*, %struct.prefix** %prefix91, align 8
  %tobool92 = icmp ne %struct.prefix* %90, null
  br i1 %tobool92, label %if.then.93, label %if.end.99

if.then.93:                                       ; preds = %if.end.88
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %92 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %prefixes94 = getelementptr inbounds %struct.DTD, %struct.DTD* %92, i32 0, i32 3
  %93 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %prefix95 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %93, i32 0, i32 1
  %94 = load %struct.prefix*, %struct.prefix** %prefix95, align 8
  %name96 = getelementptr inbounds %struct.prefix, %struct.prefix* %94, i32 0, i32 0
  %95 = load i8*, i8** %name96, align 8
  %call97 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %91, %struct.HASH_TABLE* %prefixes94, i8* %95, i64 0)
  %96 = bitcast %struct.NAMED* %call97 to %struct.prefix*
  %97 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %prefix98 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %97, i32 0, i32 1
  store %struct.prefix* %96, %struct.prefix** %prefix98, align 8
  br label %if.end.99

if.end.99:                                        ; preds = %if.then.93, %if.end.88
  store i32 0, i32* %i, align 4
  br label %for.cond.100

for.cond.100:                                     ; preds = %for.inc, %if.end.99
  %98 = load i32, i32* %i, align 4
  %99 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %nDefaultAtts101 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %99, i32 0, i32 3
  %100 = load i32, i32* %nDefaultAtts101, align 4
  %cmp102 = icmp slt i32 %98, %100
  br i1 %cmp102, label %for.body, label %for.end.147

for.body:                                         ; preds = %for.cond.100
  %101 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %102 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %attributeIds104 = getelementptr inbounds %struct.DTD, %struct.DTD* %102, i32 0, i32 2
  %103 = load i32, i32* %i, align 4
  %idxprom = sext i32 %103 to i64
  %104 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %defaultAtts105 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %104, i32 0, i32 5
  %105 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts105, align 8
  %arrayidx = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %105, i64 %idxprom
  %id = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx, i32 0, i32 0
  %106 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8
  %name106 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %106, i32 0, i32 0
  %107 = load i8*, i8** %name106, align 8
  %call107 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %101, %struct.HASH_TABLE* %attributeIds104, i8* %107, i64 0)
  %108 = bitcast %struct.NAMED* %call107 to %struct.attribute_id*
  %109 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %109 to i64
  %110 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %defaultAtts109 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %110, i32 0, i32 5
  %111 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts109, align 8
  %arrayidx110 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %111, i64 %idxprom108
  %id111 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx110, i32 0, i32 0
  store %struct.attribute_id* %108, %struct.attribute_id** %id111, align 8
  %112 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %112 to i64
  %113 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %defaultAtts113 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %113, i32 0, i32 5
  %114 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts113, align 8
  %arrayidx114 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %114, i64 %idxprom112
  %isCdata = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx114, i32 0, i32 1
  %115 = load i8, i8* %isCdata, align 1
  %116 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %116 to i64
  %117 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %defaultAtts116 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %117, i32 0, i32 5
  %118 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts116, align 8
  %arrayidx117 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %118, i64 %idxprom115
  %isCdata118 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx117, i32 0, i32 1
  store i8 %115, i8* %isCdata118, align 1
  %119 = load i32, i32* %i, align 4
  %idxprom119 = sext i32 %119 to i64
  %120 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %defaultAtts120 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %120, i32 0, i32 5
  %121 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts120, align 8
  %arrayidx121 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %121, i64 %idxprom119
  %value = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx121, i32 0, i32 2
  %122 = load i8*, i8** %value, align 8
  %tobool122 = icmp ne i8* %122, null
  br i1 %tobool122, label %if.then.123, label %if.else.141

if.then.123:                                      ; preds = %for.body
  %123 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %pool124 = getelementptr inbounds %struct.DTD, %struct.DTD* %123, i32 0, i32 4
  %124 = load i32, i32* %i, align 4
  %idxprom125 = sext i32 %124 to i64
  %125 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %oldE, align 8
  %defaultAtts126 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %125, i32 0, i32 5
  %126 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts126, align 8
  %arrayidx127 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %126, i64 %idxprom125
  %value128 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx127, i32 0, i32 2
  %127 = load i8*, i8** %value128, align 8
  %call129 = call i8* @poolCopyString(%struct.STRING_POOL* %pool124, i8* %127)
  %128 = load i32, i32* %i, align 4
  %idxprom130 = sext i32 %128 to i64
  %129 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %defaultAtts131 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %129, i32 0, i32 5
  %130 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts131, align 8
  %arrayidx132 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %130, i64 %idxprom130
  %value133 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx132, i32 0, i32 2
  store i8* %call129, i8** %value133, align 8
  %131 = load i32, i32* %i, align 4
  %idxprom134 = sext i32 %131 to i64
  %132 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %defaultAtts135 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %132, i32 0, i32 5
  %133 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts135, align 8
  %arrayidx136 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %133, i64 %idxprom134
  %value137 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx136, i32 0, i32 2
  %134 = load i8*, i8** %value137, align 8
  %tobool138 = icmp ne i8* %134, null
  br i1 %tobool138, label %if.end.140, label %if.then.139

if.then.139:                                      ; preds = %if.then.123
  store i32 0, i32* %retval
  br label %return

if.end.140:                                       ; preds = %if.then.123
  br label %if.end.146

if.else.141:                                      ; preds = %for.body
  %135 = load i32, i32* %i, align 4
  %idxprom142 = sext i32 %135 to i64
  %136 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %newE, align 8
  %defaultAtts143 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %136, i32 0, i32 5
  %137 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts143, align 8
  %arrayidx144 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %137, i64 %idxprom142
  %value145 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx144, i32 0, i32 2
  store i8* null, i8** %value145, align 8
  br label %if.end.146

if.end.146:                                       ; preds = %if.else.141, %if.end.140
  br label %for.inc

for.inc:                                          ; preds = %if.end.146
  %138 = load i32, i32* %i, align 4
  %inc = add i32 %138, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.100

for.end.147:                                      ; preds = %for.cond.100
  br label %for.cond.55

for.end.148:                                      ; preds = %if.then.59
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %140 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %140, i32 0, i32 0
  %141 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %pool149 = getelementptr inbounds %struct.DTD, %struct.DTD* %141, i32 0, i32 4
  %142 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %generalEntities150 = getelementptr inbounds %struct.DTD, %struct.DTD* %142, i32 0, i32 0
  %call151 = call i32 @copyEntityTable(%struct.XML_ParserStruct* %139, %struct.HASH_TABLE* %generalEntities, %struct.STRING_POOL* %pool149, %struct.HASH_TABLE* %generalEntities150)
  %tobool152 = icmp ne i32 %call151, 0
  br i1 %tobool152, label %if.end.154, label %if.then.153

if.then.153:                                      ; preds = %for.end.148
  store i32 0, i32* %retval
  br label %return

if.end.154:                                       ; preds = %for.end.148
  %143 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %144 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %paramEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %144, i32 0, i32 10
  %145 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %pool155 = getelementptr inbounds %struct.DTD, %struct.DTD* %145, i32 0, i32 4
  %146 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %paramEntities156 = getelementptr inbounds %struct.DTD, %struct.DTD* %146, i32 0, i32 10
  %call157 = call i32 @copyEntityTable(%struct.XML_ParserStruct* %143, %struct.HASH_TABLE* %paramEntities, %struct.STRING_POOL* %pool155, %struct.HASH_TABLE* %paramEntities156)
  %tobool158 = icmp ne i32 %call157, 0
  br i1 %tobool158, label %if.end.160, label %if.then.159

if.then.159:                                      ; preds = %if.end.154
  store i32 0, i32* %retval
  br label %return

if.end.160:                                       ; preds = %if.end.154
  %147 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %paramEntityRead = getelementptr inbounds %struct.DTD, %struct.DTD* %147, i32 0, i32 9
  %148 = load i8, i8* %paramEntityRead, align 1
  %149 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %paramEntityRead161 = getelementptr inbounds %struct.DTD, %struct.DTD* %149, i32 0, i32 9
  store i8 %148, i8* %paramEntityRead161, align 1
  %150 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %150, i32 0, i32 6
  %151 = load i8, i8* %keepProcessing, align 1
  %152 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %keepProcessing162 = getelementptr inbounds %struct.DTD, %struct.DTD* %152, i32 0, i32 6
  store i8 %151, i8* %keepProcessing162, align 1
  %153 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %153, i32 0, i32 7
  %154 = load i8, i8* %hasParamEntityRefs, align 1
  %155 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %hasParamEntityRefs163 = getelementptr inbounds %struct.DTD, %struct.DTD* %155, i32 0, i32 7
  store i8 %154, i8* %hasParamEntityRefs163, align 1
  %156 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %156, i32 0, i32 8
  %157 = load i8, i8* %standalone, align 1
  %158 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %standalone164 = getelementptr inbounds %struct.DTD, %struct.DTD* %158, i32 0, i32 8
  store i8 %157, i8* %standalone164, align 1
  %159 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %in_eldecl = getelementptr inbounds %struct.DTD, %struct.DTD* %159, i32 0, i32 12
  %160 = load i8, i8* %in_eldecl, align 1
  %161 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %in_eldecl165 = getelementptr inbounds %struct.DTD, %struct.DTD* %161, i32 0, i32 12
  store i8 %160, i8* %in_eldecl165, align 1
  %162 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %162, i32 0, i32 13
  %163 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8
  %164 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %scaffold166 = getelementptr inbounds %struct.DTD, %struct.DTD* %164, i32 0, i32 13
  store %struct.CONTENT_SCAFFOLD* %163, %struct.CONTENT_SCAFFOLD** %scaffold166, align 8
  %165 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %165, i32 0, i32 14
  %166 = load i32, i32* %contentStringLen, align 4
  %167 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %contentStringLen167 = getelementptr inbounds %struct.DTD, %struct.DTD* %167, i32 0, i32 14
  store i32 %166, i32* %contentStringLen167, align 4
  %168 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %scaffSize = getelementptr inbounds %struct.DTD, %struct.DTD* %168, i32 0, i32 15
  %169 = load i32, i32* %scaffSize, align 4
  %170 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %scaffSize168 = getelementptr inbounds %struct.DTD, %struct.DTD* %170, i32 0, i32 15
  store i32 %169, i32* %scaffSize168, align 4
  %171 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %171, i32 0, i32 17
  %172 = load i32, i32* %scaffLevel, align 4
  %173 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %scaffLevel169 = getelementptr inbounds %struct.DTD, %struct.DTD* %173, i32 0, i32 17
  store i32 %172, i32* %scaffLevel169, align 4
  %174 = load %struct.DTD*, %struct.DTD** %oldDtd.addr, align 8
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %174, i32 0, i32 18
  %175 = load i32*, i32** %scaffIndex, align 8
  %176 = load %struct.DTD*, %struct.DTD** %newDtd.addr, align 8
  %scaffIndex170 = getelementptr inbounds %struct.DTD, %struct.DTD* %176, i32 0, i32 18
  store i32* %175, i32** %scaffIndex170, align 8
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.160, %if.then.159, %if.then.153, %if.then.139, %if.then.78, %if.then.70, %if.then.65, %if.then.36, %if.then.30, %if.then.24, %if.then.9, %if.then.4
  %177 = load i32, i32* %retval
  ret i32 %177
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @setContext(%struct.XML_ParserStruct* %parser, i8* %context) #0 {
entry:
  %retval = alloca i8, align 1
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %context.addr = alloca i8*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %s = alloca i8*, align 8
  %e = alloca %struct.ENTITY*, align 8
  %prefix = alloca %struct.prefix*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %context, i8** %context.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  %2 = load i8*, i8** %context.addr, align 8
  store i8* %2, i8** %s, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.161, %entry
  %3 = load i8*, i8** %context.addr, align 8
  %4 = load i8, i8* %3, align 1
  %conv = sext i8 %4 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %s, align 8
  %6 = load i8, i8* %5, align 1
  %conv2 = sext i8 %6 to i32
  %cmp3 = icmp eq i32 %conv2, 12
  br i1 %cmp3, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %7 = load i8*, i8** %s, align 8
  %8 = load i8, i8* %7, align 1
  %conv5 = sext i8 %8 to i32
  %cmp6 = icmp eq i32 %conv5, 0
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 79
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool, i32 0, i32 3
  %10 = load i8*, i8** %ptr, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 79
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool8, i32 0, i32 2
  %12 = load i8*, i8** %end, align 8
  %cmp9 = icmp eq i8* %10, %12
  br i1 %cmp9, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.then
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 79
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool11)
  %tobool = icmp ne i8 %call, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then.14

cond.false:                                       ; preds = %land.lhs.true, %if.then
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 79
  %ptr13 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool12, i32 0, i32 3
  %15 = load i8*, i8** %ptr13, align 8
  %incdec.ptr = getelementptr i8, i8* %15, i32 1
  store i8* %incdec.ptr, i8** %ptr13, align 8
  store i8 0, i8* %15, align 1
  br i1 true, label %if.end, label %if.then.14

if.then.14:                                       ; preds = %cond.false, %cond.true
  store i8 0, i8* %retval
  br label %return

if.end:                                           ; preds = %cond.false, %cond.true
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %17 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 0
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 79
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool15, i32 0, i32 4
  %19 = load i8*, i8** %start, align 8
  %call16 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %16, %struct.HASH_TABLE* %generalEntities, i8* %19, i64 0)
  %20 = bitcast %struct.NAMED* %call16 to %struct.ENTITY*
  store %struct.ENTITY* %20, %struct.ENTITY** %e, align 8
  %21 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8
  %tobool17 = icmp ne %struct.ENTITY* %21, null
  br i1 %tobool17, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.end
  %22 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %22, i32 0, i32 8
  store i8 1, i8* %open, align 1
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.18, %if.end
  %23 = load i8*, i8** %s, align 8
  %24 = load i8, i8* %23, align 1
  %conv20 = sext i8 %24 to i32
  %cmp21 = icmp ne i32 %conv20, 0
  br i1 %cmp21, label %if.then.23, label %if.end.25

if.then.23:                                       ; preds = %if.end.19
  %25 = load i8*, i8** %s, align 8
  %incdec.ptr24 = getelementptr i8, i8* %25, i32 1
  store i8* %incdec.ptr24, i8** %s, align 8
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.23, %if.end.19
  %26 = load i8*, i8** %s, align 8
  store i8* %26, i8** %context.addr, align 8
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 79
  %start27 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool26, i32 0, i32 4
  %28 = load i8*, i8** %start27, align 8
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 79
  %ptr29 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool28, i32 0, i32 3
  store i8* %28, i8** %ptr29, align 8
  br label %if.end.161

if.else:                                          ; preds = %lor.lhs.false
  %30 = load i8*, i8** %s, align 8
  %31 = load i8, i8* %30, align 1
  %conv30 = sext i8 %31 to i32
  %cmp31 = icmp eq i32 %conv30, 61
  br i1 %cmp31, label %if.then.33, label %if.else.141

if.then.33:                                       ; preds = %if.else
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 79
  %ptr35 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool34, i32 0, i32 3
  %33 = load i8*, i8** %ptr35, align 8
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 79
  %start37 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool36, i32 0, i32 4
  %35 = load i8*, i8** %start37, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %33 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %35 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp38 = icmp eq i64 %sub.ptr.sub, 0
  br i1 %cmp38, label %if.then.40, label %if.else.41

if.then.40:                                       ; preds = %if.then.33
  %36 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %36, i32 0, i32 11
  store %struct.prefix* %defaultPrefix, %struct.prefix** %prefix, align 8
  br label %if.end.82

if.else.41:                                       ; preds = %if.then.33
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 79
  %ptr43 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool42, i32 0, i32 3
  %38 = load i8*, i8** %ptr43, align 8
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool44 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 79
  %end45 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool44, i32 0, i32 2
  %40 = load i8*, i8** %end45, align 8
  %cmp46 = icmp eq i8* %38, %40
  br i1 %cmp46, label %land.lhs.true.48, label %cond.false.53

land.lhs.true.48:                                 ; preds = %if.else.41
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool49 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 79
  %call50 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool49)
  %tobool51 = icmp ne i8 %call50, 0
  br i1 %tobool51, label %cond.false.53, label %cond.true.52

cond.true.52:                                     ; preds = %land.lhs.true.48
  br i1 false, label %if.end.58, label %if.then.57

cond.false.53:                                    ; preds = %land.lhs.true.48, %if.else.41
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool54 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 79
  %ptr55 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool54, i32 0, i32 3
  %43 = load i8*, i8** %ptr55, align 8
  %incdec.ptr56 = getelementptr i8, i8* %43, i32 1
  store i8* %incdec.ptr56, i8** %ptr55, align 8
  store i8 0, i8* %43, align 1
  br i1 true, label %if.end.58, label %if.then.57

if.then.57:                                       ; preds = %cond.false.53, %cond.true.52
  store i8 0, i8* %retval
  br label %return

if.end.58:                                        ; preds = %cond.false.53, %cond.true.52
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %45 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %45, i32 0, i32 3
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool59 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 79
  %start60 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool59, i32 0, i32 4
  %47 = load i8*, i8** %start60, align 8
  %call61 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %44, %struct.HASH_TABLE* %prefixes, i8* %47, i64 16)
  %48 = bitcast %struct.NAMED* %call61 to %struct.prefix*
  store %struct.prefix* %48, %struct.prefix** %prefix, align 8
  %49 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %tobool62 = icmp ne %struct.prefix* %49, null
  br i1 %tobool62, label %if.end.64, label %if.then.63

if.then.63:                                       ; preds = %if.end.58
  store i8 0, i8* %retval
  br label %return

if.end.64:                                        ; preds = %if.end.58
  %50 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %50, i32 0, i32 0
  %51 = load i8*, i8** %name, align 8
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool65 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 79
  %start66 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool65, i32 0, i32 4
  %53 = load i8*, i8** %start66, align 8
  %cmp67 = icmp eq i8* %51, %53
  br i1 %cmp67, label %if.then.69, label %if.end.77

if.then.69:                                       ; preds = %if.end.64
  %54 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %54, i32 0, i32 4
  %55 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %name70 = getelementptr inbounds %struct.prefix, %struct.prefix* %55, i32 0, i32 0
  %56 = load i8*, i8** %name70, align 8
  %call71 = call i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %56)
  %57 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %name72 = getelementptr inbounds %struct.prefix, %struct.prefix* %57, i32 0, i32 0
  store i8* %call71, i8** %name72, align 8
  %58 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %name73 = getelementptr inbounds %struct.prefix, %struct.prefix* %58, i32 0, i32 0
  %59 = load i8*, i8** %name73, align 8
  %tobool74 = icmp ne i8* %59, null
  br i1 %tobool74, label %if.end.76, label %if.then.75

if.then.75:                                       ; preds = %if.then.69
  store i8 0, i8* %retval
  br label %return

if.end.76:                                        ; preds = %if.then.69
  br label %if.end.77

if.end.77:                                        ; preds = %if.end.76, %if.end.64
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool78 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 79
  %start79 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool78, i32 0, i32 4
  %61 = load i8*, i8** %start79, align 8
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool80 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 79
  %ptr81 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool80, i32 0, i32 3
  store i8* %61, i8** %ptr81, align 8
  br label %if.end.82

if.end.82:                                        ; preds = %if.end.77, %if.then.40
  %63 = load i8*, i8** %s, align 8
  %add.ptr = getelementptr i8, i8* %63, i64 1
  store i8* %add.ptr, i8** %context.addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.82
  %64 = load i8*, i8** %context.addr, align 8
  %65 = load i8, i8* %64, align 1
  %conv83 = sext i8 %65 to i32
  %cmp84 = icmp ne i32 %conv83, 12
  br i1 %cmp84, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %66 = load i8*, i8** %context.addr, align 8
  %67 = load i8, i8* %66, align 1
  %conv86 = sext i8 %67 to i32
  %cmp87 = icmp ne i32 %conv86, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %68 = phi i1 [ false, %for.cond ], [ %cmp87, %land.rhs ]
  br i1 %68, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool89 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 79
  %ptr90 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool89, i32 0, i32 3
  %70 = load i8*, i8** %ptr90, align 8
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool91 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 79
  %end92 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool91, i32 0, i32 2
  %72 = load i8*, i8** %end92, align 8
  %cmp93 = icmp eq i8* %70, %72
  br i1 %cmp93, label %land.lhs.true.95, label %cond.false.100

land.lhs.true.95:                                 ; preds = %for.body
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool96 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %73, i32 0, i32 79
  %call97 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool96)
  %tobool98 = icmp ne i8 %call97, 0
  br i1 %tobool98, label %cond.false.100, label %cond.true.99

cond.true.99:                                     ; preds = %land.lhs.true.95
  br i1 false, label %if.end.105, label %if.then.104

cond.false.100:                                   ; preds = %land.lhs.true.95, %for.body
  %74 = load i8*, i8** %context.addr, align 8
  %75 = load i8, i8* %74, align 1
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool101 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 79
  %ptr102 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool101, i32 0, i32 3
  %77 = load i8*, i8** %ptr102, align 8
  %incdec.ptr103 = getelementptr i8, i8* %77, i32 1
  store i8* %incdec.ptr103, i8** %ptr102, align 8
  store i8 %75, i8* %77, align 1
  br i1 true, label %if.end.105, label %if.then.104

if.then.104:                                      ; preds = %cond.false.100, %cond.true.99
  store i8 0, i8* %retval
  br label %return

if.end.105:                                       ; preds = %cond.false.100, %cond.true.99
  br label %for.inc

for.inc:                                          ; preds = %if.end.105
  %78 = load i8*, i8** %context.addr, align 8
  %incdec.ptr106 = getelementptr i8, i8* %78, i32 1
  store i8* %incdec.ptr106, i8** %context.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %land.end
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool107 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 79
  %ptr108 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool107, i32 0, i32 3
  %80 = load i8*, i8** %ptr108, align 8
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool109 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 79
  %end110 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool109, i32 0, i32 2
  %82 = load i8*, i8** %end110, align 8
  %cmp111 = icmp eq i8* %80, %82
  br i1 %cmp111, label %land.lhs.true.113, label %cond.false.118

land.lhs.true.113:                                ; preds = %for.end
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool114 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 79
  %call115 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool114)
  %tobool116 = icmp ne i8 %call115, 0
  br i1 %tobool116, label %cond.false.118, label %cond.true.117

cond.true.117:                                    ; preds = %land.lhs.true.113
  br i1 false, label %if.end.123, label %if.then.122

cond.false.118:                                   ; preds = %land.lhs.true.113, %for.end
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool119 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 79
  %ptr120 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool119, i32 0, i32 3
  %85 = load i8*, i8** %ptr120, align 8
  %incdec.ptr121 = getelementptr i8, i8* %85, i32 1
  store i8* %incdec.ptr121, i8** %ptr120, align 8
  store i8 0, i8* %85, align 1
  br i1 true, label %if.end.123, label %if.then.122

if.then.122:                                      ; preds = %cond.false.118, %cond.true.117
  store i8 0, i8* %retval
  br label %return

if.end.123:                                       ; preds = %cond.false.118, %cond.true.117
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %87 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool124 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %88, i32 0, i32 79
  %start125 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool124, i32 0, i32 4
  %89 = load i8*, i8** %start125, align 8
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_inheritedBindings = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %90, i32 0, i32 69
  %call126 = call i32 @addBinding(%struct.XML_ParserStruct* %86, %struct.prefix* %87, %struct.attribute_id* null, i8* %89, %struct.binding** %m_inheritedBindings)
  %cmp127 = icmp ne i32 %call126, 0
  br i1 %cmp127, label %if.then.129, label %if.end.130

if.then.129:                                      ; preds = %if.end.123
  store i8 0, i8* %retval
  br label %return

if.end.130:                                       ; preds = %if.end.123
  %91 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool131 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %91, i32 0, i32 79
  %start132 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool131, i32 0, i32 4
  %92 = load i8*, i8** %start132, align 8
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool133 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 79
  %ptr134 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool133, i32 0, i32 3
  store i8* %92, i8** %ptr134, align 8
  %94 = load i8*, i8** %context.addr, align 8
  %95 = load i8, i8* %94, align 1
  %conv135 = sext i8 %95 to i32
  %cmp136 = icmp ne i32 %conv135, 0
  br i1 %cmp136, label %if.then.138, label %if.end.140

if.then.138:                                      ; preds = %if.end.130
  %96 = load i8*, i8** %context.addr, align 8
  %incdec.ptr139 = getelementptr i8, i8* %96, i32 1
  store i8* %incdec.ptr139, i8** %context.addr, align 8
  br label %if.end.140

if.end.140:                                       ; preds = %if.then.138, %if.end.130
  %97 = load i8*, i8** %context.addr, align 8
  store i8* %97, i8** %s, align 8
  br label %if.end.160

if.else.141:                                      ; preds = %if.else
  %98 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool142 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %98, i32 0, i32 79
  %ptr143 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool142, i32 0, i32 3
  %99 = load i8*, i8** %ptr143, align 8
  %100 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool144 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %100, i32 0, i32 79
  %end145 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool144, i32 0, i32 2
  %101 = load i8*, i8** %end145, align 8
  %cmp146 = icmp eq i8* %99, %101
  br i1 %cmp146, label %land.lhs.true.148, label %cond.false.153

land.lhs.true.148:                                ; preds = %if.else.141
  %102 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool149 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %102, i32 0, i32 79
  %call150 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool149)
  %tobool151 = icmp ne i8 %call150, 0
  br i1 %tobool151, label %cond.false.153, label %cond.true.152

cond.true.152:                                    ; preds = %land.lhs.true.148
  br i1 false, label %if.end.158, label %if.then.157

cond.false.153:                                   ; preds = %land.lhs.true.148, %if.else.141
  %103 = load i8*, i8** %s, align 8
  %104 = load i8, i8* %103, align 1
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool154 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %105, i32 0, i32 79
  %ptr155 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool154, i32 0, i32 3
  %106 = load i8*, i8** %ptr155, align 8
  %incdec.ptr156 = getelementptr i8, i8* %106, i32 1
  store i8* %incdec.ptr156, i8** %ptr155, align 8
  store i8 %104, i8* %106, align 1
  br i1 true, label %if.end.158, label %if.then.157

if.then.157:                                      ; preds = %cond.false.153, %cond.true.152
  store i8 0, i8* %retval
  br label %return

if.end.158:                                       ; preds = %cond.false.153, %cond.true.152
  %107 = load i8*, i8** %s, align 8
  %incdec.ptr159 = getelementptr i8, i8* %107, i32 1
  store i8* %incdec.ptr159, i8** %s, align 8
  br label %if.end.160

if.end.160:                                       ; preds = %if.end.158, %if.end.140
  br label %if.end.161

if.end.161:                                       ; preds = %if.end.160, %if.end.25
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then.157, %if.then.129, %if.then.122, %if.then.104, %if.then.75, %if.then.63, %if.then.57, %if.then.14
  %108 = load i8, i8* %retval
  ret i8 %108
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_ParserFree(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %tagList = alloca %struct.tag*, align 8
  %entityList = alloca %struct.open_internal_entity*, align 8
  %p = alloca %struct.tag*, align 8
  %openEntity = alloca %struct.open_internal_entity*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %cmp = icmp eq %struct.XML_ParserStruct* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 67
  %2 = load %struct.tag*, %struct.tag** %m_tagStack, align 8
  store %struct.tag* %2, %struct.tag** %tagList, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end.8, %if.end
  %3 = load %struct.tag*, %struct.tag** %tagList, align 8
  %cmp1 = icmp eq %struct.tag* %3, null
  br i1 %cmp1, label %if.then.2, label %if.end.8

if.then.2:                                        ; preds = %for.cond
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeTagList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 68
  %5 = load %struct.tag*, %struct.tag** %m_freeTagList, align 8
  %cmp3 = icmp eq %struct.tag* %5, null
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.then.2
  br label %for.end

if.end.5:                                         ; preds = %if.then.2
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeTagList6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 68
  %7 = load %struct.tag*, %struct.tag** %m_freeTagList6, align 8
  store %struct.tag* %7, %struct.tag** %tagList, align 8
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeTagList7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 68
  store %struct.tag* null, %struct.tag** %m_freeTagList7, align 8
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.5, %for.cond
  %9 = load %struct.tag*, %struct.tag** %tagList, align 8
  store %struct.tag* %9, %struct.tag** %p, align 8
  %10 = load %struct.tag*, %struct.tag** %tagList, align 8
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %10, i32 0, i32 0
  %11 = load %struct.tag*, %struct.tag** %parent, align 8
  store %struct.tag* %11, %struct.tag** %tagList, align 8
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 3
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2
  %13 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %14 = load %struct.tag*, %struct.tag** %p, align 8
  %buf = getelementptr inbounds %struct.tag, %struct.tag* %14, i32 0, i32 4
  %15 = load i8*, i8** %buf, align 8
  call void %13(i8* %15)
  %16 = load %struct.tag*, %struct.tag** %p, align 8
  %bindings = getelementptr inbounds %struct.tag, %struct.tag* %16, i32 0, i32 6
  %17 = load %struct.binding*, %struct.binding** %bindings, align 8
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @destroyBindings(%struct.binding* %17, %struct.XML_ParserStruct* %18)
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 3
  %free_fcn10 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem9, i32 0, i32 2
  %20 = load void (i8*)*, void (i8*)** %free_fcn10, align 8
  %21 = load %struct.tag*, %struct.tag** %p, align 8
  %22 = bitcast %struct.tag* %21 to i8*
  call void %20(i8* %22)
  br label %for.cond

for.end:                                          ; preds = %if.then.4
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 50
  %24 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8
  store %struct.open_internal_entity* %24, %struct.open_internal_entity** %entityList, align 8
  br label %for.cond.11

for.cond.11:                                      ; preds = %if.end.19, %for.end
  %25 = load %struct.open_internal_entity*, %struct.open_internal_entity** %entityList, align 8
  %cmp12 = icmp eq %struct.open_internal_entity* %25, null
  br i1 %cmp12, label %if.then.13, label %if.end.19

if.then.13:                                       ; preds = %for.cond.11
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 51
  %27 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities, align 8
  %cmp14 = icmp eq %struct.open_internal_entity* %27, null
  br i1 %cmp14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.then.13
  br label %for.end.22

if.end.16:                                        ; preds = %if.then.13
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeInternalEntities17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 51
  %29 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities17, align 8
  store %struct.open_internal_entity* %29, %struct.open_internal_entity** %entityList, align 8
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeInternalEntities18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 51
  store %struct.open_internal_entity* null, %struct.open_internal_entity** %m_freeInternalEntities18, align 8
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.16, %for.cond.11
  %31 = load %struct.open_internal_entity*, %struct.open_internal_entity** %entityList, align 8
  store %struct.open_internal_entity* %31, %struct.open_internal_entity** %openEntity, align 8
  %32 = load %struct.open_internal_entity*, %struct.open_internal_entity** %entityList, align 8
  %next = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %32, i32 0, i32 2
  %33 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next, align 8
  store %struct.open_internal_entity* %33, %struct.open_internal_entity** %entityList, align 8
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 3
  %free_fcn21 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem20, i32 0, i32 2
  %35 = load void (i8*)*, void (i8*)** %free_fcn21, align 8
  %36 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %37 = bitcast %struct.open_internal_entity* %36 to i8*
  call void %35(i8* %37)
  br label %for.cond.11

for.end.22:                                       ; preds = %if.then.15
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 70
  %39 = load %struct.binding*, %struct.binding** %m_freeBindingList, align 8
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @destroyBindings(%struct.binding* %39, %struct.XML_ParserStruct* %40)
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_inheritedBindings = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 69
  %42 = load %struct.binding*, %struct.binding** %m_inheritedBindings, align 8
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  call void @destroyBindings(%struct.binding* %42, %struct.XML_ParserStruct* %43)
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 79
  call void @poolDestroy(%struct.STRING_POOL* %m_tempPool)
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 80
  call void @poolDestroy(%struct.STRING_POOL* %m_temp2Pool)
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_isParamEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 86
  %47 = load i8, i8* %m_isParamEntity, align 1
  %tobool = icmp ne i8 %47, 0
  br i1 %tobool, label %if.end.28, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.end.22
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 65
  %49 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  %tobool23 = icmp ne %struct.DTD* %49, null
  br i1 %tobool23, label %if.then.24, label %if.end.28

if.then.24:                                       ; preds = %land.lhs.true
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 65
  %51 = load %struct.DTD*, %struct.DTD** %m_dtd25, align 8
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 84
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8
  %tobool26 = icmp ne %struct.XML_ParserStruct* %53, null
  %lnot = xor i1 %tobool26, true
  %lnot.ext = zext i1 %lnot to i32
  %conv = trunc i32 %lnot.ext to i8
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 3
  call void @dtdDestroy(%struct.DTD* %51, i8 zeroext %conv, %struct.XML_Memory_Handling_Suite* %m_mem27)
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.24, %land.lhs.true, %for.end.22
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem29 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 3
  %free_fcn30 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem29, i32 0, i32 2
  %56 = load void (i8*)*, void (i8*)** %free_fcn30, align 8
  %57 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %57, i32 0, i32 74
  %58 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts, align 8
  %59 = bitcast %struct.ATTRIBUTE* %58 to i8*
  call void %56(i8* %59)
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 3
  %free_fcn32 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem31, i32 0, i32 2
  %61 = load void (i8*)*, void (i8*)** %free_fcn32, align 8
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupConnector = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 81
  %63 = load i8*, i8** %m_groupConnector, align 8
  call void %61(i8* %63)
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 3
  %free_fcn34 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem33, i32 0, i32 2
  %65 = load void (i8*)*, void (i8*)** %free_fcn34, align 8
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 2
  %67 = load i8*, i8** %m_buffer, align 8
  call void %65(i8* %67)
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem35 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 3
  %free_fcn36 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem35, i32 0, i32 2
  %69 = load void (i8*)*, void (i8*)** %free_fcn36, align 8
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 9
  %71 = load i8*, i8** %m_dataBuf, align 8
  call void %69(i8* %71)
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 3
  %free_fcn38 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem37, i32 0, i32 2
  %73 = load void (i8*)*, void (i8*)** %free_fcn38, align 8
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 75
  %75 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts, align 8
  %76 = bitcast %struct.NS_ATT* %75 to i8*
  call void %73(i8* %76)
  %77 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem39 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %77, i32 0, i32 3
  %free_fcn40 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem39, i32 0, i32 2
  %78 = load void (i8*)*, void (i8*)** %free_fcn40, align 8
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingMem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 40
  %80 = load i8*, i8** %m_unknownEncodingMem, align 8
  call void %78(i8* %80)
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingRelease = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 43
  %82 = load void (i8*)*, void (i8*)** %m_unknownEncodingRelease, align 8
  %tobool41 = icmp ne void (i8*)* %82, null
  br i1 %tobool41, label %if.then.42, label %if.end.44

if.then.42:                                       ; preds = %if.end.28
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingRelease43 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 43
  %84 = load void (i8*)*, void (i8*)** %m_unknownEncodingRelease43, align 8
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 41
  %86 = load i8*, i8** %m_unknownEncodingData, align 8
  call void %84(i8* %86)
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.42, %if.end.28
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 3
  %free_fcn46 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem45, i32 0, i32 2
  %88 = load void (i8*)*, void (i8*)** %free_fcn46, align 8
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %90 = bitcast %struct.XML_ParserStruct* %89 to i8*
  call void %88(i8* %90)
  br label %return

return:                                           ; preds = %if.end.44, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @externalEntityInitProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %start, i8** %start.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call = call i32 @initializeEncoding(%struct.XML_ParserStruct* %0)
  store i32 %call, i32* %result, align 4
  %1 = load i32, i32* %result, align 4
  %cmp = icmp ne i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %result, align 4
  store i32 %2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityInitProcessor2, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %5 = load i8*, i8** %start.addr, align 8
  %6 = load i8*, i8** %end.addr, align 8
  %7 = load i8**, i8*** %endPtr.addr, align 8
  %call1 = call i32 @externalEntityInitProcessor2(%struct.XML_ParserStruct* %4, i8* %5, i8* %6, i8** %7)
  store i32 %call1, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval
  ret i32 %8
}

declare void @PyExpat_XmlPrologStateInitExternalEntity(%struct.prolog_state*) #1

; Function Attrs: nounwind uwtable
define internal i32 @externalParEntInitProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call = call i32 @initializeEncoding(%struct.XML_ParserStruct* %0)
  store i32 %call, i32* %result, align 4
  %1 = load i32, i32* %result, align 4
  %cmp = icmp ne i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %result, align 4
  store i32 %2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 65
  %4 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  %paramEntityRead = getelementptr inbounds %struct.DTD, %struct.DTD* %4, i32 0, i32 9
  store i8 1, i8* %paramEntityRead, align 1
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 44
  %inEntityValue = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState, i32 0, i32 5
  %6 = load i32, i32* %inEntityValue, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.end
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @entityValueInitProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %9 = load i8*, i8** %s.addr, align 8
  %10 = load i8*, i8** %end.addr, align 8
  %11 = load i8**, i8*** %nextPtr.addr, align 8
  %call2 = call i32 @entityValueInitProcessor(%struct.XML_ParserStruct* %8, i8* %9, i8* %10, i8** %11)
  store i32 %call2, i32* %retval
  br label %return

if.else:                                          ; preds = %if.end
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalParEntProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor3, align 8
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %14 = load i8*, i8** %s.addr, align 8
  %15 = load i8*, i8** %end.addr, align 8
  %16 = load i8**, i8*** %nextPtr.addr, align 8
  %call4 = call i32 @externalParEntProcessor(%struct.XML_ParserStruct* %13, i8* %14, i8* %15, i8** %16)
  store i32 %call4, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then.1, %if.then
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal void @destroyBindings(%struct.binding* %bindings, %struct.XML_ParserStruct* %parser) #0 {
entry:
  %bindings.addr = alloca %struct.binding*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %b = alloca %struct.binding*, align 8
  store %struct.binding* %bindings, %struct.binding** %bindings.addr, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end, %entry
  %0 = load %struct.binding*, %struct.binding** %bindings.addr, align 8
  store %struct.binding* %0, %struct.binding** %b, align 8
  %1 = load %struct.binding*, %struct.binding** %b, align 8
  %tobool = icmp ne %struct.binding* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.cond
  br label %for.end

if.end:                                           ; preds = %for.cond
  %2 = load %struct.binding*, %struct.binding** %b, align 8
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %2, i32 0, i32 1
  %3 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8
  store %struct.binding* %3, %struct.binding** %bindings.addr, align 8
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 3
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2
  %5 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %6 = load %struct.binding*, %struct.binding** %b, align 8
  %uri = getelementptr inbounds %struct.binding, %struct.binding* %6, i32 0, i32 4
  %7 = load i8*, i8** %uri, align 8
  call void %5(i8* %7)
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 3
  %free_fcn2 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem1, i32 0, i32 2
  %9 = load void (i8*)*, void (i8*)** %free_fcn2, align 8
  %10 = load %struct.binding*, %struct.binding** %b, align 8
  %11 = bitcast %struct.binding* %10 to i8*
  call void %9(i8* %11)
  br label %for.cond

for.end:                                          ; preds = %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @poolDestroy(%struct.STRING_POOL* %pool) #0 {
entry:
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %p = alloca %struct.block*, align 8
  %tem = alloca %struct.block*, align 8
  %tem4 = alloca %struct.block*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 0
  %1 = load %struct.block*, %struct.block** %blocks, align 8
  store %struct.block* %1, %struct.block** %p, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.block*, %struct.block** %p, align 8
  %tobool = icmp ne %struct.block* %2, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load %struct.block*, %struct.block** %p, align 8
  %next = getelementptr inbounds %struct.block, %struct.block* %3, i32 0, i32 0
  %4 = load %struct.block*, %struct.block** %next, align 8
  store %struct.block* %4, %struct.block** %tem, align 8
  %5 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %mem = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %5, i32 0, i32 5
  %6 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %6, i32 0, i32 2
  %7 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %8 = load %struct.block*, %struct.block** %p, align 8
  %9 = bitcast %struct.block* %8 to i8*
  call void %7(i8* %9)
  %10 = load %struct.block*, %struct.block** %tem, align 8
  store %struct.block* %10, %struct.block** %p, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 1
  %12 = load %struct.block*, %struct.block** %freeBlocks, align 8
  store %struct.block* %12, %struct.block** %p, align 8
  br label %while.cond.1

while.cond.1:                                     ; preds = %while.body.3, %while.end
  %13 = load %struct.block*, %struct.block** %p, align 8
  %tobool2 = icmp ne %struct.block* %13, null
  br i1 %tobool2, label %while.body.3, label %while.end.8

while.body.3:                                     ; preds = %while.cond.1
  %14 = load %struct.block*, %struct.block** %p, align 8
  %next5 = getelementptr inbounds %struct.block, %struct.block* %14, i32 0, i32 0
  %15 = load %struct.block*, %struct.block** %next5, align 8
  store %struct.block* %15, %struct.block** %tem4, align 8
  %16 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %mem6 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %16, i32 0, i32 5
  %17 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem6, align 8
  %free_fcn7 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %17, i32 0, i32 2
  %18 = load void (i8*)*, void (i8*)** %free_fcn7, align 8
  %19 = load %struct.block*, %struct.block** %p, align 8
  %20 = bitcast %struct.block* %19 to i8*
  call void %18(i8* %20)
  %21 = load %struct.block*, %struct.block** %tem4, align 8
  store %struct.block* %21, %struct.block** %p, align 8
  br label %while.cond.1

while.end.8:                                      ; preds = %while.cond.1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dtdDestroy(%struct.DTD* %p, i8 zeroext %isDocEntity, %struct.XML_Memory_Handling_Suite* %ms) #0 {
entry:
  %p.addr = alloca %struct.DTD*, align 8
  %isDocEntity.addr = alloca i8, align 1
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %e = alloca %struct.ELEMENT_TYPE*, align 8
  store %struct.DTD* %p, %struct.DTD** %p.addr, align 8
  store i8 %isDocEntity, i8* %isDocEntity.addr, align 1
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %0 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %0, i32 0, i32 1
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %elementTypes)
  br label %for.cond

for.cond:                                         ; preds = %if.end.2, %entry
  %call = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter)
  %1 = bitcast %struct.NAMED* %call to %struct.ELEMENT_TYPE*
  store %struct.ELEMENT_TYPE* %1, %struct.ELEMENT_TYPE** %e, align 8
  %2 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8
  %tobool = icmp ne %struct.ELEMENT_TYPE* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.cond
  br label %for.end

if.end:                                           ; preds = %for.cond
  %3 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8
  %allocDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %3, i32 0, i32 4
  %4 = load i32, i32* %allocDefaultAtts, align 4
  %cmp = icmp ne i32 %4, 0
  br i1 %cmp, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  %5 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %5, i32 0, i32 2
  %6 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %7 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %e, align 8
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %7, i32 0, i32 5
  %8 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8
  %9 = bitcast %struct.DEFAULT_ATTRIBUTE* %8 to i8*
  call void %6(i8* %9)
  br label %if.end.2

if.end.2:                                         ; preds = %if.then.1, %if.end
  br label %for.cond

for.end:                                          ; preds = %if.then
  %10 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %10, i32 0, i32 0
  call void @hashTableDestroy(%struct.HASH_TABLE* %generalEntities)
  %11 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %paramEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %11, i32 0, i32 10
  call void @hashTableDestroy(%struct.HASH_TABLE* %paramEntities)
  %12 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %elementTypes3 = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 1
  call void @hashTableDestroy(%struct.HASH_TABLE* %elementTypes3)
  %13 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 2
  call void @hashTableDestroy(%struct.HASH_TABLE* %attributeIds)
  %14 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %14, i32 0, i32 3
  call void @hashTableDestroy(%struct.HASH_TABLE* %prefixes)
  %15 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 4
  call void @poolDestroy(%struct.STRING_POOL* %pool)
  %16 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 5
  call void @poolDestroy(%struct.STRING_POOL* %entityValuePool)
  %17 = load i8, i8* %isDocEntity.addr, align 1
  %tobool4 = icmp ne i8 %17, 0
  br i1 %tobool4, label %if.then.5, label %if.end.8

if.then.5:                                        ; preds = %for.end
  %18 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %free_fcn6 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %18, i32 0, i32 2
  %19 = load void (i8*)*, void (i8*)** %free_fcn6, align 8
  %20 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 18
  %21 = load i32*, i32** %scaffIndex, align 8
  %22 = bitcast i32* %21 to i8*
  call void %19(i8* %22)
  %23 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %free_fcn7 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %23, i32 0, i32 2
  %24 = load void (i8*)*, void (i8*)** %free_fcn7, align 8
  %25 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %25, i32 0, i32 13
  %26 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8
  %27 = bitcast %struct.CONTENT_SCAFFOLD* %26 to i8*
  call void %24(i8* %27)
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.5, %for.end
  %28 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %free_fcn9 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %28, i32 0, i32 2
  %29 = load void (i8*)*, void (i8*)** %free_fcn9, align 8
  %30 = load %struct.DTD*, %struct.DTD** %p.addr, align 8
  %31 = bitcast %struct.DTD* %30 to i8*
  call void %29(i8* %31)
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_UseParserAsHandlerArg(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %1 = bitcast %struct.XML_ParserStruct* %0 to i8*
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 1
  store i8* %1, i8** %m_handlerArg, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_UseForeignDTD(%struct.XML_ParserStruct* %parser, i8 zeroext %useDTD) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %useDTD.addr = alloca i8, align 1
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8 %useDTD, i8* %useDTD.addr, align 1
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %1 = load i32, i32* %parsing, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0
  %3 = load i32, i32* %parsing2, align 4
  %cmp3 = icmp eq i32 %3, 3
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 26, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8, i8* %useDTD.addr, align 1
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_useForeignDTD = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 87
  store i8 %4, i8* %m_useForeignDTD, align 1
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetReturnNSTriplet(%struct.XML_ParserStruct* %parser, i32 %do_nst) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %do_nst.addr = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i32 %do_nst, i32* %do_nst.addr, align 4
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %1 = load i32, i32* %parsing, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0
  %3 = load i32, i32* %parsing2, align 4
  %cmp3 = icmp eq i32 %3, 3
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i32, i32* %do_nst.addr, align 4
  %tobool = icmp ne i32 %4, 0
  %cond = select i1 %tobool, i32 1, i32 0
  %conv = trunc i32 %cond to i8
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 39
  store i8 %conv, i8* %m_ns_triplets, align 1
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetUserData(%struct.XML_ParserStruct* %parser, i8* %p) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %p, i8** %p.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 1
  %1 = load i8*, i8** %m_handlerArg, align 8
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_userData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 0
  %3 = load i8*, i8** %m_userData, align 8
  %cmp = icmp eq i8* %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %p.addr, align 8
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_userData1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 0
  store i8* %4, i8** %m_userData1, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 1
  store i8* %4, i8** %m_handlerArg2, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %p.addr, align 8
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_userData3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 0
  store i8* %7, i8** %m_userData3, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_SetBase(%struct.XML_ParserStruct* %parser, i8* %p) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %p, i8** %p.addr, align 8
  %0 = load i8*, i8** %p.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 65
  %2 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 4
  %3 = load i8*, i8** %p.addr, align 8
  %call = call i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %3)
  store i8* %call, i8** %p.addr, align 8
  %4 = load i8*, i8** %p.addr, align 8
  %tobool1 = icmp ne i8* %4, null
  br i1 %tobool1, label %if.end, label %if.then.2

if.then.2:                                        ; preds = %if.then
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  %5 = load i8*, i8** %p.addr, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_curBase = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 66
  store i8* %5, i8** %m_curBase, align 8
  br label %if.end.4

if.else:                                          ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_curBase3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 66
  store i8* null, i8** %m_curBase3, align 8
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.4, %if.then.2
  %8 = load i32, i32* %retval
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_GetBase(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_curBase = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 66
  %1 = load i8*, i8** %m_curBase, align 8
  ret i8* %1
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_GetSpecifiedAttributeCount(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nSpecifiedAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 72
  %1 = load i32, i32* %m_nSpecifiedAtts, align 4
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_GetIdAttributeIndex(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_idAttIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 73
  %1 = load i32, i32* %m_idAttIndex, align 4
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetElementHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8**)* %start, void (i8*, i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8**)*, align 8
  %end.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i8**)* %start, void (i8*, i8*, i8**)** %start.addr, align 8
  store void (i8*, i8*)* %end, void (i8*, i8*)** %end.addr, align 8
  %0 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %start.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 11
  store void (i8*, i8*, i8**)* %0, void (i8*, i8*, i8**)** %m_startElementHandler, align 8
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %end.addr, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 12
  store void (i8*, i8*)* %2, void (i8*, i8*)** %m_endElementHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetStartElementHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8**)* %start) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8**)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i8**)* %start, void (i8*, i8*, i8**)** %start.addr, align 8
  %0 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %start.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 11
  store void (i8*, i8*, i8**)* %0, void (i8*, i8*, i8**)** %m_startElementHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetEndElementHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %end.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*)* %end, void (i8*, i8*)** %end.addr, align 8
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** %end.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 12
  store void (i8*, i8*)* %0, void (i8*, i8*)** %m_endElementHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetCharacterDataHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i32)* %handler, void (i8*, i8*, i32)** %handler.addr, align 8
  %0 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 13
  store void (i8*, i8*, i32)* %0, void (i8*, i8*, i32)** %m_characterDataHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetProcessingInstructionHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i8*)* %handler, void (i8*, i8*, i8*)** %handler.addr, align 8
  %0 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processingInstructionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 14
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %m_processingInstructionHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetCommentHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*)* %handler, void (i8*, i8*)** %handler.addr, align 8
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_commentHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 15
  store void (i8*, i8*)* %0, void (i8*, i8*)** %m_commentHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetCdataSectionHandler(%struct.XML_ParserStruct* %parser, void (i8*)* %start, void (i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*)*, align 8
  %end.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*)* %start, void (i8*)** %start.addr, align 8
  store void (i8*)* %end, void (i8*)** %end.addr, align 8
  %0 = load void (i8*)*, void (i8*)** %start.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 16
  store void (i8*)* %0, void (i8*)** %m_startCdataSectionHandler, align 8
  %2 = load void (i8*)*, void (i8*)** %end.addr, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 17
  store void (i8*)* %2, void (i8*)** %m_endCdataSectionHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetStartCdataSectionHandler(%struct.XML_ParserStruct* %parser, void (i8*)* %start) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*)* %start, void (i8*)** %start.addr, align 8
  %0 = load void (i8*)*, void (i8*)** %start.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 16
  store void (i8*)* %0, void (i8*)** %m_startCdataSectionHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetEndCdataSectionHandler(%struct.XML_ParserStruct* %parser, void (i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %end.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*)* %end, void (i8*)** %end.addr, align 8
  %0 = load void (i8*)*, void (i8*)** %end.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 17
  store void (i8*)* %0, void (i8*)** %m_endCdataSectionHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetDefaultHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i32)* %handler, void (i8*, i8*, i32)** %handler.addr, align 8
  %0 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 18
  store void (i8*, i8*, i32)* %0, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 52
  store i8 0, i8* %m_defaultExpandInternalEntities, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetDefaultHandlerExpand(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i32)* %handler, void (i8*, i8*, i32)** %handler.addr, align 8
  %0 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 18
  store void (i8*, i8*, i32)* %0, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 52
  store i8 1, i8* %m_defaultExpandInternalEntities, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetDoctypeDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i32)* %start, void (i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8*, i8*, i32)*, align 8
  %end.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i8*, i8*, i32)* %start, void (i8*, i8*, i8*, i8*, i32)** %start.addr, align 8
  store void (i8*)* %end, void (i8*)** %end.addr, align 8
  %0 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %start.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 19
  store void (i8*, i8*, i8*, i8*, i32)* %0, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler, align 8
  %2 = load void (i8*)*, void (i8*)** %end.addr, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 20
  store void (i8*)* %2, void (i8*)** %m_endDoctypeDeclHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetStartDoctypeDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i32)* %start) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i8*, i8*, i32)* %start, void (i8*, i8*, i8*, i8*, i32)** %start.addr, align 8
  %0 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %start.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 19
  store void (i8*, i8*, i8*, i8*, i32)* %0, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetEndDoctypeDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %end.addr = alloca void (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*)* %end, void (i8*)** %end.addr, align 8
  %0 = load void (i8*)*, void (i8*)** %end.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 20
  store void (i8*)* %0, void (i8*)** %m_endDoctypeDeclHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetUnparsedEntityDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i8*, i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i8*, i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* %handler, void (i8*, i8*, i8*, i8*, i8*, i8*)** %handler.addr, align 8
  %0 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unparsedEntityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 21
  store void (i8*, i8*, i8*, i8*, i8*, i8*)* %0, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetNotationDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i8*, i8*, i8*)* %handler, void (i8*, i8*, i8*, i8*, i8*)** %handler.addr, align 8
  %0 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notationDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 22
  store void (i8*, i8*, i8*, i8*, i8*)* %0, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetNamespaceDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*)* %start, void (i8*, i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8*)*, align 8
  %end.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i8*)* %start, void (i8*, i8*, i8*)** %start.addr, align 8
  store void (i8*, i8*)* %end, void (i8*, i8*)** %end.addr, align 8
  %0 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %start.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 23
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8
  %2 = load void (i8*, i8*)*, void (i8*, i8*)** %end.addr, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 24
  store void (i8*, i8*)* %2, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetStartNamespaceDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*)* %start) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca void (i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i8*)* %start, void (i8*, i8*, i8*)** %start.addr, align 8
  %0 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %start.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 23
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetEndNamespaceDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*)* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %end.addr = alloca void (i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*)* %end, void (i8*, i8*)** %end.addr, align 8
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** %end.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 24
  store void (i8*, i8*)* %0, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetNotStandaloneHandler(%struct.XML_ParserStruct* %parser, i32 (i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca i32 (i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i32 (i8*)* %handler, i32 (i8*)** %handler.addr, align 8
  %0 = load i32 (i8*)*, i32 (i8*)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notStandaloneHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 25
  store i32 (i8*)* %0, i32 (i8*)** %m_notStandaloneHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetExternalEntityRefHandler(%struct.XML_ParserStruct* %parser, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %handler, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %handler.addr, align 8
  %0 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 26
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %0, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetExternalEntityRefHandlerArg(%struct.XML_ParserStruct* %parser, i8* %arg) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %arg.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i8*, i8** %arg.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %arg.addr, align 8
  %2 = bitcast i8* %1 to %struct.XML_ParserStruct*
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 27
  store %struct.XML_ParserStruct* %2, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandlerArg1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 27
  store %struct.XML_ParserStruct* %4, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg1, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetSkippedEntityHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i32)* %handler, void (i8*, i8*, i32)** %handler.addr, align 8
  %0 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 28
  store void (i8*, i8*, i32)* %0, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetUnknownEncodingHandler(%struct.XML_ParserStruct* %parser, i32 (i8*, i8*, %struct.XML_Encoding*)* %handler, i8* %data) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca i32 (i8*, i8*, %struct.XML_Encoding*)*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i32 (i8*, i8*, %struct.XML_Encoding*)* %handler, i32 (i8*, i8*, %struct.XML_Encoding*)** %handler.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  %0 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 29
  store i32 (i8*, i8*, %struct.XML_Encoding*)* %0, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler, align 8
  %2 = load i8*, i8** %data.addr, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingHandlerData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 42
  store i8* %2, i8** %m_unknownEncodingHandlerData, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetElementDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, %struct.XML_cp*)* %eldecl) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %eldecl.addr = alloca void (i8*, i8*, %struct.XML_cp*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, %struct.XML_cp*)* %eldecl, void (i8*, i8*, %struct.XML_cp*)** %eldecl.addr, align 8
  %0 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %eldecl.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 30
  store void (i8*, i8*, %struct.XML_cp*)* %0, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetAttlistDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i8*, i8*, i32)* %attdecl) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %attdecl.addr = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %attdecl, void (i8*, i8*, i8*, i8*, i8*, i32)** %attdecl.addr, align 8
  %0 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %attdecl.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attlistDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 31
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %0, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetEntityDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %handler, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %handler.addr, align 8
  %0 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 32
  store void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %0, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_SetXmlDeclHandler(%struct.XML_ParserStruct* %parser, void (i8*, i8*, i8*, i32)* %handler) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %handler.addr = alloca void (i8*, i8*, i8*, i32)*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store void (i8*, i8*, i8*, i32)* %handler, void (i8*, i8*, i8*, i32)** %handler.addr, align 8
  %0 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %handler.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_xmlDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 33
  store void (i8*, i8*, i8*, i32)* %0, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_SetParamEntityParsing(%struct.XML_ParserStruct* %parser, i32 %peParsing) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %peParsing.addr = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i32 %peParsing, i32* %peParsing.addr, align 4
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %1 = load i32, i32* %parsing, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0
  %3 = load i32, i32* %parsing2, align 4
  %cmp3 = icmp eq i32 %3, 3
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i32, i32* %peParsing.addr, align 4
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_paramEntityParsing = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 88
  store i32 %4, i32* %m_paramEntityParsing, align 4
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_SetHashSalt(%struct.XML_ParserStruct* %parser, i64 %hash_salt) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %hash_salt.addr = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i64 %hash_salt, i64* %hash_salt.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %1 = load i32, i32* %parsing, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 85
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0
  %3 = load i32, i32* %parsing2, align 4
  %cmp3 = icmp eq i32 %3, 3
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i64, i64* %hash_salt.addr, align 8
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 89
  store i64 %4, i64* %m_hash_secret_salt, align 8
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_Parse(%struct.XML_ParserStruct* %parser, i8* %s, i32 %len, i32 %isFinal) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %isFinal.addr = alloca i32, align 4
  %buff = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i32 %isFinal, i32* %isFinal.addr, align 4
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %1 = load i32, i32* %parsing, align 4
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb.1
    i32 0, label %sw.bb.3
  ]

sw.bb:                                            ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 46
  store i32 33, i32* %m_errorCode, align 4
  store i32 0, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 46
  store i32 36, i32* %m_errorCode2, align 4
  store i32 0, i32* %retval
  br label %return

sw.bb.3:                                          ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 84
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8
  %cmp = icmp eq %struct.XML_ParserStruct* %5, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb.3
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call = call zeroext i8 @startParsing(%struct.XML_ParserStruct* %6)
  %tobool = icmp ne i8 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 46
  store i32 1, i32* %m_errorCode4, align 4
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %sw.bb.3
  br label %sw.default

sw.default:                                       ; preds = %entry, %if.end
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 85
  %parsing6 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus5, i32 0, i32 0
  store i32 1, i32* %parsing6, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %9 = load i32, i32* %len.addr, align 4
  %cmp7 = icmp eq i32 %9, 0
  br i1 %cmp7, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %sw.epilog
  %10 = load i32, i32* %isFinal.addr, align 4
  %conv = trunc i32 %10 to i8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 1
  store i8 %conv, i8* %finalBuffer, align 1
  %12 = load i32, i32* %isFinal.addr, align 4
  %tobool10 = icmp ne i32 %12, 0
  br i1 %tobool10, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.then.8
  store i32 1, i32* %retval
  br label %return

if.end.12:                                        ; preds = %if.then.8
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 4
  %14 = load i8*, i8** %m_bufferPtr, align 8
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 49
  store i8* %14, i8** %m_positionPtr, align 8
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 5
  %17 = load i8*, i8** %m_bufferEnd, align 8
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 8
  store i8* %17, i8** %m_parseEndPtr, align 8
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 45
  %20 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 4
  %23 = load i8*, i8** %m_bufferPtr13, align 8
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parseEndPtr14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 8
  %25 = load i8*, i8** %m_parseEndPtr14, align 8
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 4
  %call16 = call i32 %20(%struct.XML_ParserStruct* %21, i8* %23, i8* %25, i8** %m_bufferPtr15)
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 46
  store i32 %call16, i32* %m_errorCode17, align 4
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 46
  %29 = load i32, i32* %m_errorCode18, align 4
  %cmp19 = icmp eq i32 %29, 0
  br i1 %cmp19, label %if.then.21, label %if.end.34

if.then.21:                                       ; preds = %if.end.12
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus22 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 85
  %parsing23 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus22, i32 0, i32 0
  %31 = load i32, i32* %parsing23, align 4
  switch i32 %31, label %sw.default.33 [
    i32 3, label %sw.bb.24
    i32 0, label %sw.bb.30
    i32 1, label %sw.bb.30
  ]

sw.bb.24:                                         ; preds = %if.then.21
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 34
  %33 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %33, i32 0, i32 9
  %34 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 34
  %36 = load %struct.encoding*, %struct.encoding** %m_encoding25, align 8
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 49
  %38 = load i8*, i8** %m_positionPtr26, align 8
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 4
  %40 = load i8*, i8** %m_bufferPtr27, align 8
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 78
  call void %34(%struct.encoding* %36, i8* %38, i8* %40, %struct.position* %m_position)
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 4
  %43 = load i8*, i8** %m_bufferPtr28, align 8
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr29 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 49
  store i8* %43, i8** %m_positionPtr29, align 8
  store i32 2, i32* %retval
  br label %return

sw.bb.30:                                         ; preds = %if.then.21, %if.then.21
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 85
  %parsing32 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus31, i32 0, i32 0
  store i32 2, i32* %parsing32, align 4
  br label %sw.default.33

sw.default.33:                                    ; preds = %if.then.21, %sw.bb.30
  store i32 1, i32* %retval
  br label %return

if.end.34:                                        ; preds = %if.end.12
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 47
  %47 = load i8*, i8** %m_eventPtr, align 8
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 48
  store i8* %47, i8** %m_eventEndPtr, align 8
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor35 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @errorProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor35, align 8
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %sw.epilog
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %51 = load i32, i32* %len.addr, align 4
  %call36 = call i8* @PyExpat_XML_GetBuffer(%struct.XML_ParserStruct* %50, i32 %51)
  store i8* %call36, i8** %buff, align 8
  %52 = load i8*, i8** %buff, align 8
  %cmp37 = icmp eq i8* %52, null
  br i1 %cmp37, label %if.then.39, label %if.else.40

if.then.39:                                       ; preds = %if.else
  store i32 0, i32* %retval
  br label %return

if.else.40:                                       ; preds = %if.else
  %53 = load i8*, i8** %buff, align 8
  %54 = load i8*, i8** %s.addr, align 8
  %55 = load i32, i32* %len.addr, align 4
  %conv41 = sext i32 %55 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 %conv41, i32 1, i1 false)
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %57 = load i32, i32* %len.addr, align 4
  %58 = load i32, i32* %isFinal.addr, align 4
  %call42 = call i32 @PyExpat_XML_ParseBuffer(%struct.XML_ParserStruct* %56, i32 %57, i32 %58)
  store i32 %call42, i32* %retval
  br label %return

return:                                           ; preds = %if.else.40, %if.then.39, %if.end.34, %sw.default.33, %sw.bb.24, %if.then.11, %if.then, %sw.bb.1, %sw.bb
  %59 = load i32, i32* %retval
  ret i32 %59
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @startParsing(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i8, align 1
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 89
  %1 = load i64, i64* %m_hash_secret_salt, align 8
  %cmp = icmp eq i64 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i64 @generate_hash_secret_salt()
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_hash_secret_salt1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 89
  store i64 %call, i64* %m_hash_secret_salt1, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 38
  %4 = load i8, i8* %m_ns, align 1
  %tobool = icmp ne i8 %4, 0
  br i1 %tobool, label %if.then.2, label %if.end.4

if.then.2:                                        ; preds = %if.end
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call3 = call zeroext i8 @setContext(%struct.XML_ParserStruct* %5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @implicitContext, i32 0, i32 0))
  store i8 %call3, i8* %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  store i8 1, i8* %retval
  br label %return

return:                                           ; preds = %if.end.4, %if.then.2
  %6 = load i8, i8* %retval
  ret i8 %6
}

; Function Attrs: nounwind uwtable
define internal i32 @errorProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 46
  %1 = load i32, i32* %m_errorCode, align 4
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_GetBuffer(%struct.XML_ParserStruct* %parser, i32 %len) #0 {
entry:
  %retval = alloca i8*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %len.addr = alloca i32, align 4
  %neededSize = alloca i32, align 4
  %keep = alloca i32, align 4
  %offset = alloca i32, align 4
  %newBuf = alloca i8*, align 8
  %bufferSize = alloca i32, align 4
  %keep80 = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %1 = load i32, i32* %parsing, align 4
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb.1
  ]

sw.bb:                                            ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 46
  store i32 33, i32* %m_errorCode, align 4
  store i8* null, i8** %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 46
  store i32 36, i32* %m_errorCode2, align 4
  store i8* null, i8** %retval
  br label %return

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %4 = load i32, i32* %len.addr, align 4
  %conv = sext i32 %4 to i64
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferLim = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 6
  %6 = load i8*, i8** %m_bufferLim, align 8
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 5
  %8 = load i8*, i8** %m_bufferEnd, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %8 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp sgt i64 %conv, %sub.ptr.sub
  br i1 %cmp, label %if.then, label %if.end.131

if.then:                                          ; preds = %sw.epilog
  %9 = load i32, i32* %len.addr, align 4
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 5
  %11 = load i8*, i8** %m_bufferEnd4, align 8
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 4
  %13 = load i8*, i8** %m_bufferPtr, align 8
  %sub.ptr.lhs.cast5 = ptrtoint i8* %11 to i64
  %sub.ptr.rhs.cast6 = ptrtoint i8* %13 to i64
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.rhs.cast6
  %conv8 = trunc i64 %sub.ptr.sub7 to i32
  %add = add i32 %9, %conv8
  store i32 %add, i32* %neededSize, align 4
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 4
  %15 = load i8*, i8** %m_bufferPtr9, align 8
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 2
  %17 = load i8*, i8** %m_buffer, align 8
  %sub.ptr.lhs.cast10 = ptrtoint i8* %15 to i64
  %sub.ptr.rhs.cast11 = ptrtoint i8* %17 to i64
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11
  %conv13 = trunc i64 %sub.ptr.sub12 to i32
  store i32 %conv13, i32* %keep, align 4
  %18 = load i32, i32* %keep, align 4
  %cmp14 = icmp sgt i32 %18, 1024
  br i1 %cmp14, label %if.then.16, label %if.end

if.then.16:                                       ; preds = %if.then
  store i32 1024, i32* %keep, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.16, %if.then
  %19 = load i32, i32* %keep, align 4
  %20 = load i32, i32* %neededSize, align 4
  %add17 = add i32 %20, %19
  store i32 %add17, i32* %neededSize, align 4
  %21 = load i32, i32* %neededSize, align 4
  %conv18 = sext i32 %21 to i64
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferLim19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 6
  %23 = load i8*, i8** %m_bufferLim19, align 8
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 2
  %25 = load i8*, i8** %m_buffer20, align 8
  %sub.ptr.lhs.cast21 = ptrtoint i8* %23 to i64
  %sub.ptr.rhs.cast22 = ptrtoint i8* %25 to i64
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22
  %cmp24 = icmp sle i64 %conv18, %sub.ptr.sub23
  br i1 %cmp24, label %if.then.26, label %if.else

if.then.26:                                       ; preds = %if.end
  %26 = load i32, i32* %keep, align 4
  %conv27 = sext i32 %26 to i64
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 4
  %28 = load i8*, i8** %m_bufferPtr28, align 8
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer29 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 2
  %30 = load i8*, i8** %m_buffer29, align 8
  %sub.ptr.lhs.cast30 = ptrtoint i8* %28 to i64
  %sub.ptr.rhs.cast31 = ptrtoint i8* %30 to i64
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31
  %cmp33 = icmp slt i64 %conv27, %sub.ptr.sub32
  br i1 %cmp33, label %if.then.35, label %if.end.56

if.then.35:                                       ; preds = %if.then.26
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 4
  %32 = load i8*, i8** %m_bufferPtr36, align 8
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 2
  %34 = load i8*, i8** %m_buffer37, align 8
  %sub.ptr.lhs.cast38 = ptrtoint i8* %32 to i64
  %sub.ptr.rhs.cast39 = ptrtoint i8* %34 to i64
  %sub.ptr.sub40 = sub i64 %sub.ptr.lhs.cast38, %sub.ptr.rhs.cast39
  %conv41 = trunc i64 %sub.ptr.sub40 to i32
  %35 = load i32, i32* %keep, align 4
  %sub = sub i32 %conv41, %35
  store i32 %sub, i32* %offset, align 4
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 2
  %37 = load i8*, i8** %m_buffer42, align 8
  %38 = load i32, i32* %offset, align 4
  %idxprom = sext i32 %38 to i64
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer43 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 2
  %40 = load i8*, i8** %m_buffer43, align 8
  %arrayidx = getelementptr i8, i8* %40, i64 %idxprom
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd44 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 5
  %42 = load i8*, i8** %m_bufferEnd44, align 8
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 4
  %44 = load i8*, i8** %m_bufferPtr45, align 8
  %sub.ptr.lhs.cast46 = ptrtoint i8* %42 to i64
  %sub.ptr.rhs.cast47 = ptrtoint i8* %44 to i64
  %sub.ptr.sub48 = sub i64 %sub.ptr.lhs.cast46, %sub.ptr.rhs.cast47
  %45 = load i32, i32* %keep, align 4
  %conv49 = sext i32 %45 to i64
  %add50 = add i64 %sub.ptr.sub48, %conv49
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %37, i8* %arrayidx, i64 %add50, i32 1, i1 false)
  %46 = load i32, i32* %offset, align 4
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd51 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 5
  %48 = load i8*, i8** %m_bufferEnd51, align 8
  %idx.ext = sext i32 %46 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr i8, i8* %48, i64 %idx.neg
  store i8* %add.ptr, i8** %m_bufferEnd51, align 8
  %49 = load i32, i32* %offset, align 4
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr52 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 4
  %51 = load i8*, i8** %m_bufferPtr52, align 8
  %idx.ext53 = sext i32 %49 to i64
  %idx.neg54 = sub i64 0, %idx.ext53
  %add.ptr55 = getelementptr i8, i8* %51, i64 %idx.neg54
  store i8* %add.ptr55, i8** %m_bufferPtr52, align 8
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.35, %if.then.26
  br label %if.end.130

if.else:                                          ; preds = %if.end
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferLim57 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 6
  %53 = load i8*, i8** %m_bufferLim57, align 8
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr58 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 4
  %55 = load i8*, i8** %m_bufferPtr58, align 8
  %sub.ptr.lhs.cast59 = ptrtoint i8* %53 to i64
  %sub.ptr.rhs.cast60 = ptrtoint i8* %55 to i64
  %sub.ptr.sub61 = sub i64 %sub.ptr.lhs.cast59, %sub.ptr.rhs.cast60
  %conv62 = trunc i64 %sub.ptr.sub61 to i32
  store i32 %conv62, i32* %bufferSize, align 4
  %56 = load i32, i32* %bufferSize, align 4
  %cmp63 = icmp eq i32 %56, 0
  br i1 %cmp63, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %if.else
  store i32 1024, i32* %bufferSize, align 4
  br label %if.end.66

if.end.66:                                        ; preds = %if.then.65, %if.else
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end.66
  %57 = load i32, i32* %bufferSize, align 4
  %mul = mul i32 %57, 2
  store i32 %mul, i32* %bufferSize, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %58 = load i32, i32* %bufferSize, align 4
  %59 = load i32, i32* %neededSize, align 4
  %cmp67 = icmp slt i32 %58, %59
  br i1 %cmp67, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 3
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0
  %61 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %62 = load i32, i32* %bufferSize, align 4
  %conv69 = sext i32 %62 to i64
  %call = call i8* %61(i64 %conv69)
  store i8* %call, i8** %newBuf, align 8
  %63 = load i8*, i8** %newBuf, align 8
  %cmp70 = icmp eq i8* %63, null
  br i1 %cmp70, label %if.then.72, label %if.end.74

if.then.72:                                       ; preds = %do.end
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode73 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 46
  store i32 1, i32* %m_errorCode73, align 4
  store i8* null, i8** %retval
  br label %return

if.end.74:                                        ; preds = %do.end
  %65 = load i8*, i8** %newBuf, align 8
  %66 = load i32, i32* %bufferSize, align 4
  %idx.ext75 = sext i32 %66 to i64
  %add.ptr76 = getelementptr i8, i8* %65, i64 %idx.ext75
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferLim77 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %67, i32 0, i32 6
  store i8* %add.ptr76, i8** %m_bufferLim77, align 8
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr78 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 4
  %69 = load i8*, i8** %m_bufferPtr78, align 8
  %tobool = icmp ne i8* %69, null
  br i1 %tobool, label %if.then.79, label %if.else.119

if.then.79:                                       ; preds = %if.end.74
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr81 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 4
  %71 = load i8*, i8** %m_bufferPtr81, align 8
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer82 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 2
  %73 = load i8*, i8** %m_buffer82, align 8
  %sub.ptr.lhs.cast83 = ptrtoint i8* %71 to i64
  %sub.ptr.rhs.cast84 = ptrtoint i8* %73 to i64
  %sub.ptr.sub85 = sub i64 %sub.ptr.lhs.cast83, %sub.ptr.rhs.cast84
  %conv86 = trunc i64 %sub.ptr.sub85 to i32
  store i32 %conv86, i32* %keep80, align 4
  %74 = load i32, i32* %keep80, align 4
  %cmp87 = icmp sgt i32 %74, 1024
  br i1 %cmp87, label %if.then.89, label %if.end.90

if.then.89:                                       ; preds = %if.then.79
  store i32 1024, i32* %keep80, align 4
  br label %if.end.90

if.end.90:                                        ; preds = %if.then.89, %if.then.79
  %75 = load i8*, i8** %newBuf, align 8
  %76 = load i32, i32* %keep80, align 4
  %sub91 = sub i32 0, %76
  %idxprom92 = sext i32 %sub91 to i64
  %77 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr93 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %77, i32 0, i32 4
  %78 = load i8*, i8** %m_bufferPtr93, align 8
  %arrayidx94 = getelementptr i8, i8* %78, i64 %idxprom92
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd95 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 5
  %80 = load i8*, i8** %m_bufferEnd95, align 8
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr96 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %81, i32 0, i32 4
  %82 = load i8*, i8** %m_bufferPtr96, align 8
  %sub.ptr.lhs.cast97 = ptrtoint i8* %80 to i64
  %sub.ptr.rhs.cast98 = ptrtoint i8* %82 to i64
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast98
  %83 = load i32, i32* %keep80, align 4
  %conv100 = sext i32 %83 to i64
  %add101 = add i64 %sub.ptr.sub99, %conv100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %arrayidx94, i64 %add101, i32 1, i1 false)
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem102 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 3
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem102, i32 0, i32 2
  %85 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer103 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 2
  %87 = load i8*, i8** %m_buffer103, align 8
  call void %85(i8* %87)
  %88 = load i8*, i8** %newBuf, align 8
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer104 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 2
  store i8* %88, i8** %m_buffer104, align 8
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer105 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %90, i32 0, i32 2
  %91 = load i8*, i8** %m_buffer105, align 8
  %92 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd106 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %92, i32 0, i32 5
  %93 = load i8*, i8** %m_bufferEnd106, align 8
  %94 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr107 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %94, i32 0, i32 4
  %95 = load i8*, i8** %m_bufferPtr107, align 8
  %sub.ptr.lhs.cast108 = ptrtoint i8* %93 to i64
  %sub.ptr.rhs.cast109 = ptrtoint i8* %95 to i64
  %sub.ptr.sub110 = sub i64 %sub.ptr.lhs.cast108, %sub.ptr.rhs.cast109
  %add.ptr111 = getelementptr i8, i8* %91, i64 %sub.ptr.sub110
  %96 = load i32, i32* %keep80, align 4
  %idx.ext112 = sext i32 %96 to i64
  %add.ptr113 = getelementptr i8, i8* %add.ptr111, i64 %idx.ext112
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd114 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %97, i32 0, i32 5
  store i8* %add.ptr113, i8** %m_bufferEnd114, align 8
  %98 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer115 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %98, i32 0, i32 2
  %99 = load i8*, i8** %m_buffer115, align 8
  %100 = load i32, i32* %keep80, align 4
  %idx.ext116 = sext i32 %100 to i64
  %add.ptr117 = getelementptr i8, i8* %99, i64 %idx.ext116
  %101 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr118 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %101, i32 0, i32 4
  store i8* %add.ptr117, i8** %m_bufferPtr118, align 8
  br label %if.end.129

if.else.119:                                      ; preds = %if.end.74
  %102 = load i8*, i8** %newBuf, align 8
  %103 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd120 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %103, i32 0, i32 5
  %104 = load i8*, i8** %m_bufferEnd120, align 8
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr121 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %105, i32 0, i32 4
  %106 = load i8*, i8** %m_bufferPtr121, align 8
  %sub.ptr.lhs.cast122 = ptrtoint i8* %104 to i64
  %sub.ptr.rhs.cast123 = ptrtoint i8* %106 to i64
  %sub.ptr.sub124 = sub i64 %sub.ptr.lhs.cast122, %sub.ptr.rhs.cast123
  %add.ptr125 = getelementptr i8, i8* %102, i64 %sub.ptr.sub124
  %107 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd126 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %107, i32 0, i32 5
  store i8* %add.ptr125, i8** %m_bufferEnd126, align 8
  %108 = load i8*, i8** %newBuf, align 8
  %109 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer127 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %109, i32 0, i32 2
  store i8* %108, i8** %m_buffer127, align 8
  %110 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr128 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %110, i32 0, i32 4
  store i8* %108, i8** %m_bufferPtr128, align 8
  br label %if.end.129

if.end.129:                                       ; preds = %if.else.119, %if.end.90
  br label %if.end.130

if.end.130:                                       ; preds = %if.end.129, %if.end.56
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 48
  store i8* null, i8** %m_eventEndPtr, align 8
  %112 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %112, i32 0, i32 47
  store i8* null, i8** %m_eventPtr, align 8
  %113 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %113, i32 0, i32 49
  store i8* null, i8** %m_positionPtr, align 8
  br label %if.end.131

if.end.131:                                       ; preds = %if.end.130, %sw.epilog
  %114 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd132 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %114, i32 0, i32 5
  %115 = load i8*, i8** %m_bufferEnd132, align 8
  store i8* %115, i8** %retval
  br label %return

return:                                           ; preds = %if.end.131, %if.then.72, %sw.bb.1, %sw.bb
  %116 = load i8*, i8** %retval
  ret i8* %116
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_ParseBuffer(%struct.XML_ParserStruct* %parser, i32 %len, i32 %isFinal) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %len.addr = alloca i32, align 4
  %isFinal.addr = alloca i32, align 4
  %start = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i32 %isFinal, i32* %isFinal.addr, align 4
  store i32 1, i32* %result, align 4
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %1 = load i32, i32* %parsing, align 4
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb.1
    i32 0, label %sw.bb.3
  ]

sw.bb:                                            ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 46
  store i32 33, i32* %m_errorCode, align 4
  store i32 0, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 46
  store i32 36, i32* %m_errorCode2, align 4
  store i32 0, i32* %retval
  br label %return

sw.bb.3:                                          ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 84
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8
  %cmp = icmp eq %struct.XML_ParserStruct* %5, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb.3
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call = call zeroext i8 @startParsing(%struct.XML_ParserStruct* %6)
  %tobool = icmp ne i8 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 46
  store i32 1, i32* %m_errorCode4, align 4
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %sw.bb.3
  br label %sw.default

sw.default:                                       ; preds = %entry, %if.end
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 85
  %parsing6 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus5, i32 0, i32 0
  store i32 1, i32* %parsing6, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 4
  %10 = load i8*, i8** %m_bufferPtr, align 8
  store i8* %10, i8** %start, align 8
  %11 = load i8*, i8** %start, align 8
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 49
  store i8* %11, i8** %m_positionPtr, align 8
  %13 = load i32, i32* %len.addr, align 4
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 5
  %15 = load i8*, i8** %m_bufferEnd, align 8
  %idx.ext = sext i32 %13 to i64
  %add.ptr = getelementptr i8, i8* %15, i64 %idx.ext
  store i8* %add.ptr, i8** %m_bufferEnd, align 8
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 5
  %17 = load i8*, i8** %m_bufferEnd7, align 8
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 8
  store i8* %17, i8** %m_parseEndPtr, align 8
  %19 = load i32, i32* %len.addr, align 4
  %conv = sext i32 %19 to i64
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parseEndByteIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 7
  %21 = load i64, i64* %m_parseEndByteIndex, align 8
  %add = add i64 %21, %conv
  store i64 %add, i64* %m_parseEndByteIndex, align 8
  %22 = load i32, i32* %isFinal.addr, align 4
  %conv8 = trunc i32 %22 to i8
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 1
  store i8 %conv8, i8* %finalBuffer, align 1
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 45
  %25 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %27 = load i8*, i8** %start, align 8
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parseEndPtr10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 8
  %29 = load i8*, i8** %m_parseEndPtr10, align 8
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 4
  %call12 = call i32 %25(%struct.XML_ParserStruct* %26, i8* %27, i8* %29, i8** %m_bufferPtr11)
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 46
  store i32 %call12, i32* %m_errorCode13, align 4
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 46
  %33 = load i32, i32* %m_errorCode14, align 4
  %cmp15 = icmp ne i32 %33, 0
  br i1 %cmp15, label %if.then.17, label %if.else

if.then.17:                                       ; preds = %sw.epilog
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 47
  %35 = load i8*, i8** %m_eventPtr, align 8
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 48
  store i8* %35, i8** %m_eventEndPtr, align 8
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @errorProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor18, align 8
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %sw.epilog
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 85
  %parsing20 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus19, i32 0, i32 0
  %39 = load i32, i32* %parsing20, align 4
  switch i32 %39, label %sw.default.28 [
    i32 3, label %sw.bb.21
    i32 0, label %sw.bb.22
    i32 1, label %sw.bb.22
  ]

sw.bb.21:                                         ; preds = %if.else
  store i32 2, i32* %result, align 4
  br label %sw.epilog.29

sw.bb.22:                                         ; preds = %if.else, %if.else
  %40 = load i32, i32* %isFinal.addr, align 4
  %tobool23 = icmp ne i32 %40, 0
  br i1 %tobool23, label %if.then.24, label %if.end.27

if.then.24:                                       ; preds = %sw.bb.22
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 85
  %parsing26 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus25, i32 0, i32 0
  store i32 2, i32* %parsing26, align 4
  %42 = load i32, i32* %result, align 4
  store i32 %42, i32* %retval
  br label %return

if.end.27:                                        ; preds = %sw.bb.22
  br label %sw.default.28

sw.default.28:                                    ; preds = %if.else, %if.end.27
  br label %sw.epilog.29

sw.epilog.29:                                     ; preds = %sw.default.28, %sw.bb.21
  br label %if.end.30

if.end.30:                                        ; preds = %sw.epilog.29
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 34
  %44 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %44, i32 0, i32 9
  %45 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 34
  %47 = load %struct.encoding*, %struct.encoding** %m_encoding31, align 8
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 49
  %49 = load i8*, i8** %m_positionPtr32, align 8
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 4
  %51 = load i8*, i8** %m_bufferPtr33, align 8
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 78
  call void %45(%struct.encoding* %47, i8* %49, i8* %51, %struct.position* %m_position)
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 4
  %54 = load i8*, i8** %m_bufferPtr34, align 8
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr35 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 49
  store i8* %54, i8** %m_positionPtr35, align 8
  %56 = load i32, i32* %result, align 4
  store i32 %56, i32* %retval
  br label %return

return:                                           ; preds = %if.end.30, %if.then.24, %if.then.17, %if.then, %sw.bb.1, %sw.bb
  %57 = load i32, i32* %retval
  ret i32 %57
}

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_StopParser(%struct.XML_ParserStruct* %parser, i8 zeroext %resumable) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %resumable.addr = alloca i8, align 1
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8 %resumable, i8* %resumable.addr, align 1
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %1 = load i32, i32* %parsing, align 4
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb.3
  ]

sw.bb:                                            ; preds = %entry
  %2 = load i8, i8* %resumable.addr, align 1
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 46
  store i32 33, i32* %m_errorCode, align 4
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %sw.bb
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 85
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0
  store i32 2, i32* %parsing2, align 4
  br label %sw.epilog

sw.bb.3:                                          ; preds = %entry
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 46
  store i32 36, i32* %m_errorCode4, align 4
  store i32 0, i32* %retval
  br label %return

sw.default:                                       ; preds = %entry
  %6 = load i8, i8* %resumable.addr, align 1
  %tobool5 = icmp ne i8 %6, 0
  br i1 %tobool5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %sw.default
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_isParamEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 86
  %8 = load i8, i8* %m_isParamEntity, align 1
  %tobool7 = icmp ne i8 %8, 0
  br i1 %tobool7, label %if.then.8, label %if.end.10

if.then.8:                                        ; preds = %if.then.6
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 46
  store i32 37, i32* %m_errorCode9, align 4
  store i32 0, i32* %retval
  br label %return

if.end.10:                                        ; preds = %if.then.6
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 85
  %parsing12 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus11, i32 0, i32 0
  store i32 3, i32* %parsing12, align 4
  br label %if.end.15

if.else:                                          ; preds = %sw.default
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 85
  %parsing14 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus13, i32 0, i32 0
  store i32 2, i32* %parsing14, align 4
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.end.10
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.15, %if.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %sw.epilog, %if.then.8, %sw.bb.3, %if.then
  %12 = load i32, i32* %retval
  ret i32 %12
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_ResumeParser(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i32 1, i32* %result, align 4
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %1 = load i32, i32* %parsing, align 4
  %cmp = icmp ne i32 %1, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 46
  store i32 34, i32* %m_errorCode, align 4
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 85
  %parsing2 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus1, i32 0, i32 0
  store i32 1, i32* %parsing2, align 4
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 45
  %5 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 4
  %8 = load i8*, i8** %m_bufferPtr, align 8
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 8
  %10 = load i8*, i8** %m_parseEndPtr, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 4
  %call = call i32 %5(%struct.XML_ParserStruct* %6, i8* %8, i8* %10, i8** %m_bufferPtr3)
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 46
  store i32 %call, i32* %m_errorCode4, align 4
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 46
  %14 = load i32, i32* %m_errorCode5, align 4
  %cmp6 = icmp ne i32 %14, 0
  br i1 %cmp6, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %if.end
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 47
  %16 = load i8*, i8** %m_eventPtr, align 8
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 48
  store i8* %16, i8** %m_eventEndPtr, align 8
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @errorProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor8, align 8
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %if.end
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 85
  %parsing10 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 0
  %20 = load i32, i32* %parsing10, align 4
  switch i32 %20, label %sw.default [
    i32 3, label %sw.bb
    i32 0, label %sw.bb.11
    i32 1, label %sw.bb.11
  ]

sw.bb:                                            ; preds = %if.else
  store i32 2, i32* %result, align 4
  br label %sw.epilog

sw.bb.11:                                         ; preds = %if.else, %if.else
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus12, i32 0, i32 1
  %22 = load i8, i8* %finalBuffer, align 1
  %tobool = icmp ne i8 %22, 0
  br i1 %tobool, label %if.then.13, label %if.end.16

if.then.13:                                       ; preds = %sw.bb.11
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 85
  %parsing15 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus14, i32 0, i32 0
  store i32 2, i32* %parsing15, align 4
  %24 = load i32, i32* %result, align 4
  store i32 %24, i32* %retval
  br label %return

if.end.16:                                        ; preds = %sw.bb.11
  br label %sw.default

sw.default:                                       ; preds = %if.else, %if.end.16
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end.17

if.end.17:                                        ; preds = %sw.epilog
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 34
  %26 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %26, i32 0, i32 9
  %27 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 34
  %29 = load %struct.encoding*, %struct.encoding** %m_encoding18, align 8
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 49
  %31 = load i8*, i8** %m_positionPtr, align 8
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 4
  %33 = load i8*, i8** %m_bufferPtr19, align 8
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 78
  call void %27(%struct.encoding* %29, i8* %31, i8* %33, %struct.position* %m_position)
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferPtr20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 4
  %36 = load i8*, i8** %m_bufferPtr20, align 8
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 49
  store i8* %36, i8** %m_positionPtr21, align 8
  %38 = load i32, i32* %result, align 4
  store i32 %38, i32* %retval
  br label %return

return:                                           ; preds = %if.end.17, %if.then.13, %if.then.7, %if.then
  %39 = load i32, i32* %retval
  ret i32 %39
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_GetParsingStatus(%struct.XML_ParserStruct* %parser, %struct.XML_ParsingStatus* %status) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %status.addr = alloca %struct.XML_ParsingStatus*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.XML_ParsingStatus* %status, %struct.XML_ParsingStatus** %status.addr, align 8
  %0 = load %struct.XML_ParsingStatus*, %struct.XML_ParsingStatus** %status.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 85
  %2 = bitcast %struct.XML_ParsingStatus* %0 to i8*
  %3 = bitcast %struct.XML_ParsingStatus* %m_parsingStatus to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_GetErrorCode(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_errorCode = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 46
  %1 = load i32, i32* %m_errorCode, align 4
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define i64 @PyExpat_XML_GetCurrentByteIndex(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i64, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 47
  %1 = load i8*, i8** %m_eventPtr, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parseEndByteIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 7
  %3 = load i64, i64* %m_parseEndByteIndex, align 8
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parseEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 8
  %5 = load i8*, i8** %m_parseEndPtr, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 47
  %7 = load i8*, i8** %m_eventPtr1, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub = sub i64 %3, %sub.ptr.sub
  store i64 %sub, i64* %retval
  br label %return

if.end:                                           ; preds = %entry
  store i64 -1, i64* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load i64, i64* %retval
  ret i64 %8
}

; Function Attrs: nounwind uwtable
define i32 @PyExpat_XML_GetCurrentByteCount(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 48
  %1 = load i8*, i8** %m_eventEndPtr, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47
  %3 = load i8*, i8** %m_eventPtr, align 8
  %tobool1 = icmp ne i8* %3, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 48
  %5 = load i8*, i8** %m_eventEndPtr2, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 47
  %7 = load i8*, i8** %m_eventPtr3, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  store i32 %conv, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_GetInputContext(%struct.XML_ParserStruct* %parser, i32* %offset, i32* %size) #0 {
entry:
  %retval = alloca i8*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %offset.addr = alloca i32*, align 8
  %size.addr = alloca i32*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i32* %offset, i32** %offset.addr, align 8
  store i32* %size, i32** %size.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 47
  %1 = load i8*, i8** %m_eventPtr, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 2
  %3 = load i8*, i8** %m_buffer, align 8
  %tobool1 = icmp ne i8* %3, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 47
  %5 = load i8*, i8** %m_eventPtr2, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 2
  %7 = load i8*, i8** %m_buffer3, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %8 = load i32*, i32** %offset.addr, align 8
  store i32 %conv, i32* %8, align 4
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_bufferEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 5
  %10 = load i8*, i8** %m_bufferEnd, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 2
  %12 = load i8*, i8** %m_buffer4, align 8
  %sub.ptr.lhs.cast5 = ptrtoint i8* %10 to i64
  %sub.ptr.rhs.cast6 = ptrtoint i8* %12 to i64
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.rhs.cast6
  %conv8 = trunc i64 %sub.ptr.sub7 to i32
  %13 = load i32*, i32** %size.addr, align 8
  store i32 %conv8, i32* %13, align 4
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_buffer9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 2
  %15 = load i8*, i8** %m_buffer9, align 8
  store i8* %15, i8** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8* null, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %16 = load i8*, i8** %retval
  ret i8* %16
}

; Function Attrs: nounwind uwtable
define i64 @PyExpat_XML_GetCurrentLineNumber(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 47
  %1 = load i8*, i8** %m_eventPtr, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47
  %3 = load i8*, i8** %m_eventPtr1, align 8
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 49
  %5 = load i8*, i8** %m_positionPtr, align 8
  %cmp = icmp uge i8* %3, %5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %7, i32 0, i32 9
  %8 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 34
  %10 = load %struct.encoding*, %struct.encoding** %m_encoding2, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 49
  %12 = load i8*, i8** %m_positionPtr3, align 8
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 47
  %14 = load i8*, i8** %m_eventPtr4, align 8
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 78
  call void %8(%struct.encoding* %10, i8* %12, i8* %14, %struct.position* %m_position)
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 47
  %17 = load i8*, i8** %m_eventPtr5, align 8
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 49
  store i8* %17, i8** %m_positionPtr6, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_position7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 78
  %lineNumber = getelementptr inbounds %struct.position, %struct.position* %m_position7, i32 0, i32 0
  %20 = load i64, i64* %lineNumber, align 8
  %add = add i64 %20, 1
  ret i64 %add
}

; Function Attrs: nounwind uwtable
define i64 @PyExpat_XML_GetCurrentColumnNumber(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 47
  %1 = load i8*, i8** %m_eventPtr, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47
  %3 = load i8*, i8** %m_eventPtr1, align 8
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 49
  %5 = load i8*, i8** %m_positionPtr, align 8
  %cmp = icmp uge i8* %3, %5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %updatePosition = getelementptr inbounds %struct.encoding, %struct.encoding* %7, i32 0, i32 9
  %8 = load void (%struct.encoding*, i8*, i8*, %struct.position*)*, void (%struct.encoding*, i8*, i8*, %struct.position*)** %updatePosition, align 8
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 34
  %10 = load %struct.encoding*, %struct.encoding** %m_encoding2, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 49
  %12 = load i8*, i8** %m_positionPtr3, align 8
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 47
  %14 = load i8*, i8** %m_eventPtr4, align 8
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_position = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 78
  call void %8(%struct.encoding* %10, i8* %12, i8* %14, %struct.position* %m_position)
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr5 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 47
  %17 = load i8*, i8** %m_eventPtr5, align 8
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_positionPtr6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 49
  store i8* %17, i8** %m_positionPtr6, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_position7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 78
  %columnNumber = getelementptr inbounds %struct.position, %struct.position* %m_position7, i32 0, i32 1
  %20 = load i64, i64* %columnNumber, align 8
  ret i64 %20
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_FreeContentModel(%struct.XML_ParserStruct* %parser, %struct.XML_cp* %model) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %model.addr = alloca %struct.XML_cp*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.XML_cp* %model, %struct.XML_cp** %model.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 3
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2
  %1 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %2 = load %struct.XML_cp*, %struct.XML_cp** %model.addr, align 8
  %3 = bitcast %struct.XML_cp* %2 to i8*
  call void %1(i8* %3)
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_MemMalloc(%struct.XML_ParserStruct* %parser, i64 %size) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %size.addr = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 3
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0
  %1 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %2 = load i64, i64* %size.addr, align 8
  %call = call i8* %1(i64 %2)
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_MemRealloc(%struct.XML_ParserStruct* %parser, i8* %ptr, i64 %size) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 3
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1
  %1 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8
  %2 = load i8*, i8** %ptr.addr, align 8
  %3 = load i64, i64* %size.addr, align 8
  %call = call i8* %1(i8* %2, i64 %3)
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_MemFree(%struct.XML_ParserStruct* %parser, i8* %ptr) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %ptr.addr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 3
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 2
  %1 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %2 = load i8*, i8** %ptr.addr, align 8
  call void %1(i8* %2)
  ret void
}

; Function Attrs: nounwind uwtable
define void @PyExpat_XML_DefaultCurrent(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 18
  %1 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %tobool = icmp ne void (i8*, i8*, i32)* %1, null
  br i1 %tobool, label %if.then, label %if.end.5

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 50
  %3 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8
  %tobool1 = icmp ne %struct.open_internal_entity* %3, null
  br i1 %tobool1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 36
  %6 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 50
  %8 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities3, align 8
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %8, i32 0, i32 0
  %9 = load i8*, i8** %internalEventPtr, align 8
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 50
  %11 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities4, align 8
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %11, i32 0, i32 1
  %12 = load i8*, i8** %internalEventEndPtr, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %4, %struct.encoding* %6, i8* %9, i8* %12)
  br label %if.end

if.else:                                          ; preds = %if.then
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 34
  %15 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 47
  %17 = load i8*, i8** %m_eventPtr, align 8
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 48
  %19 = load i8*, i8** %m_eventEndPtr, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %13, %struct.encoding* %15, i8* %17, i8* %19)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  br label %if.end.5

if.end.5:                                         ; preds = %if.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @reportDefault(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %s, i8* %end) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %dataPtr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  %0 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %isUtf8 = getelementptr inbounds %struct.encoding, %struct.encoding* %0, i32 0, i32 14
  %1 = load i8, i8* %isUtf8, align 1
  %tobool = icmp ne i8 %1, 0
  br i1 %tobool, label %if.else.7, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %cmp = icmp eq %struct.encoding* %2, %4
  br i1 %cmp, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.then
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 47
  store i8** %m_eventPtr, i8*** %eventPP, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 48
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 50
  %8 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %8, i32 0, i32 0
  store i8** %internalEventPtr, i8*** %eventPP, align 8
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 50
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities2, align 8
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %10, i32 0, i32 1
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 9
  %12 = load i8*, i8** %m_dataBuf, align 8
  store i8* %12, i8** %dataPtr, align 8
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %13, i32 0, i32 11
  %14 = load void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8
  %15 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %16 = load i8*, i8** %end.addr, align 8
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBufEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 10
  %18 = load i8*, i8** %m_dataBufEnd, align 8
  call void %14(%struct.encoding* %15, i8** %s.addr, i8* %16, i8** %dataPtr, i8* %18)
  %19 = load i8*, i8** %s.addr, align 8
  %20 = load i8**, i8*** %eventEndPP, align 8
  store i8* %19, i8** %20, align 8
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 18
  %22 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 1
  %24 = load i8*, i8** %m_handlerArg, align 8
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 9
  %26 = load i8*, i8** %m_dataBuf3, align 8
  %27 = load i8*, i8** %dataPtr, align 8
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 9
  %29 = load i8*, i8** %m_dataBuf4, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %27 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %29 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  call void %22(i8* %24, i8* %26, i32 %conv)
  %30 = load i8*, i8** %s.addr, align 8
  %31 = load i8**, i8*** %eventPP, align 8
  store i8* %30, i8** %31, align 8
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %32 = load i8*, i8** %s.addr, align 8
  %33 = load i8*, i8** %end.addr, align 8
  %cmp5 = icmp ne i8* %32, %33
  br i1 %cmp5, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end.14

if.else.7:                                        ; preds = %entry
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 18
  %35 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler8, align 8
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 1
  %37 = load i8*, i8** %m_handlerArg9, align 8
  %38 = load i8*, i8** %s.addr, align 8
  %39 = load i8*, i8** %end.addr, align 8
  %40 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast10 = ptrtoint i8* %39 to i64
  %sub.ptr.rhs.cast11 = ptrtoint i8* %40 to i64
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11
  %conv13 = trunc i64 %sub.ptr.sub12 to i32
  call void %35(i8* %37, i8* %38, i32 %conv13)
  br label %if.end.14

if.end.14:                                        ; preds = %if.else.7, %do.end
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_ErrorString(i32 %code) #0 {
entry:
  %retval = alloca i8*, align 8
  %code.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  %0 = load i32, i32* %code.addr, align 4
  %cmp = icmp ugt i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %code.addr, align 4
  %conv = zext i32 %1 to i64
  %cmp1 = icmp ult i64 %conv, 41
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %code.addr, align 4
  %idxprom = zext i32 %2 to i64
  %arrayidx = getelementptr [41 x i8*], [41 x i8*]* @PyExpat_XML_ErrorString.message, i32 0, i64 %idxprom
  %3 = load i8*, i8** %arrayidx, align 8
  store i8* %3, i8** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8* null, i8** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %4 = load i8*, i8** %retval
  ret i8* %4
}

; Function Attrs: nounwind uwtable
define i8* @PyExpat_XML_ExpatVersion() #0 {
entry:
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i32 0, i32 0)
}

; Function Attrs: nounwind uwtable
define { i64, i32 } @PyExpat_XML_ExpatVersionInfo() #0 {
entry:
  %retval = alloca %struct.XML_Expat_Version, align 4
  %version = alloca %struct.XML_Expat_Version, align 4
  %tmp = alloca { i64, i32 }, align 4
  %major = getelementptr inbounds %struct.XML_Expat_Version, %struct.XML_Expat_Version* %version, i32 0, i32 0
  store i32 2, i32* %major, align 4
  %minor = getelementptr inbounds %struct.XML_Expat_Version, %struct.XML_Expat_Version* %version, i32 0, i32 1
  store i32 1, i32* %minor, align 4
  %micro = getelementptr inbounds %struct.XML_Expat_Version, %struct.XML_Expat_Version* %version, i32 0, i32 2
  store i32 0, i32* %micro, align 4
  %0 = bitcast %struct.XML_Expat_Version* %retval to i8*
  %1 = bitcast %struct.XML_Expat_Version* %version to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 12, i32 4, i1 false)
  %2 = bitcast { i64, i32 }* %tmp to i8*
  %3 = bitcast %struct.XML_Expat_Version* %retval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 12, i32 4, i1 false)
  %4 = load { i64, i32 }, { i64, i32 }* %tmp, align 4
  ret { i64, i32 } %4
}

; Function Attrs: nounwind uwtable
define %struct.XML_Feature* @PyExpat_XML_GetFeatureList() #0 {
entry:
  ret %struct.XML_Feature* getelementptr inbounds ([6 x %struct.XML_Feature], [6 x %struct.XML_Feature]* @PyExpat_XML_GetFeatureList.features, i32 0, i32 0)
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #3

; Function Attrs: nounwind
declare void @free(i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct.DTD* @dtdCreate(%struct.XML_Memory_Handling_Suite* %ms) #0 {
entry:
  %retval = alloca %struct.DTD*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  %p = alloca %struct.DTD*, align 8
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %0 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %0, i32 0, i32 0
  %1 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %call = call i8* %1(i64 360)
  %2 = bitcast i8* %call to %struct.DTD*
  store %struct.DTD* %2, %struct.DTD** %p, align 8
  %3 = load %struct.DTD*, %struct.DTD** %p, align 8
  %cmp = icmp eq %struct.DTD* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.DTD*, %struct.DTD** %p, align 8
  store %struct.DTD* %4, %struct.DTD** %retval
  br label %return

if.end:                                           ; preds = %entry
  %5 = load %struct.DTD*, %struct.DTD** %p, align 8
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %5, i32 0, i32 4
  %6 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @poolInit(%struct.STRING_POOL* %pool, %struct.XML_Memory_Handling_Suite* %6)
  %7 = load %struct.DTD*, %struct.DTD** %p, align 8
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %7, i32 0, i32 5
  %8 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @poolInit(%struct.STRING_POOL* %entityValuePool, %struct.XML_Memory_Handling_Suite* %8)
  %9 = load %struct.DTD*, %struct.DTD** %p, align 8
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %9, i32 0, i32 0
  %10 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @hashTableInit(%struct.HASH_TABLE* %generalEntities, %struct.XML_Memory_Handling_Suite* %10)
  %11 = load %struct.DTD*, %struct.DTD** %p, align 8
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %11, i32 0, i32 1
  %12 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @hashTableInit(%struct.HASH_TABLE* %elementTypes, %struct.XML_Memory_Handling_Suite* %12)
  %13 = load %struct.DTD*, %struct.DTD** %p, align 8
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 2
  %14 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @hashTableInit(%struct.HASH_TABLE* %attributeIds, %struct.XML_Memory_Handling_Suite* %14)
  %15 = load %struct.DTD*, %struct.DTD** %p, align 8
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 3
  %16 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @hashTableInit(%struct.HASH_TABLE* %prefixes, %struct.XML_Memory_Handling_Suite* %16)
  %17 = load %struct.DTD*, %struct.DTD** %p, align 8
  %paramEntityRead = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 9
  store i8 0, i8* %paramEntityRead, align 1
  %18 = load %struct.DTD*, %struct.DTD** %p, align 8
  %paramEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 10
  %19 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  call void @hashTableInit(%struct.HASH_TABLE* %paramEntities, %struct.XML_Memory_Handling_Suite* %19)
  %20 = load %struct.DTD*, %struct.DTD** %p, align 8
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 11
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix, i32 0, i32 0
  store i8* null, i8** %name, align 8
  %21 = load %struct.DTD*, %struct.DTD** %p, align 8
  %defaultPrefix1 = getelementptr inbounds %struct.DTD, %struct.DTD* %21, i32 0, i32 11
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix1, i32 0, i32 1
  store %struct.binding* null, %struct.binding** %binding, align 8
  %22 = load %struct.DTD*, %struct.DTD** %p, align 8
  %in_eldecl = getelementptr inbounds %struct.DTD, %struct.DTD* %22, i32 0, i32 12
  store i8 0, i8* %in_eldecl, align 1
  %23 = load %struct.DTD*, %struct.DTD** %p, align 8
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %23, i32 0, i32 18
  store i32* null, i32** %scaffIndex, align 8
  %24 = load %struct.DTD*, %struct.DTD** %p, align 8
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %24, i32 0, i32 13
  store %struct.CONTENT_SCAFFOLD* null, %struct.CONTENT_SCAFFOLD** %scaffold, align 8
  %25 = load %struct.DTD*, %struct.DTD** %p, align 8
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %25, i32 0, i32 17
  store i32 0, i32* %scaffLevel, align 4
  %26 = load %struct.DTD*, %struct.DTD** %p, align 8
  %scaffSize = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 15
  store i32 0, i32* %scaffSize, align 4
  %27 = load %struct.DTD*, %struct.DTD** %p, align 8
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %27, i32 0, i32 16
  store i32 0, i32* %scaffCount, align 4
  %28 = load %struct.DTD*, %struct.DTD** %p, align 8
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %28, i32 0, i32 14
  store i32 0, i32* %contentStringLen, align 4
  %29 = load %struct.DTD*, %struct.DTD** %p, align 8
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %29, i32 0, i32 6
  store i8 1, i8* %keepProcessing, align 1
  %30 = load %struct.DTD*, %struct.DTD** %p, align 8
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %30, i32 0, i32 7
  store i8 0, i8* %hasParamEntityRefs, align 1
  %31 = load %struct.DTD*, %struct.DTD** %p, align 8
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %31, i32 0, i32 8
  store i8 0, i8* %standalone, align 1
  %32 = load %struct.DTD*, %struct.DTD** %p, align 8
  store %struct.DTD* %32, %struct.DTD** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %33 = load %struct.DTD*, %struct.DTD** %retval
  ret %struct.DTD* %33
}

; Function Attrs: nounwind uwtable
define internal void @poolInit(%struct.STRING_POOL* %pool, %struct.XML_Memory_Handling_Suite* %ms) #0 {
entry:
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 0
  store %struct.block* null, %struct.block** %blocks, align 8
  %1 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %1, i32 0, i32 1
  store %struct.block* null, %struct.block** %freeBlocks, align 8
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 4
  store i8* null, i8** %start, align 8
  %3 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %3, i32 0, i32 3
  store i8* null, i8** %ptr, align 8
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 2
  store i8* null, i8** %end, align 8
  %5 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %mem = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 5
  store %struct.XML_Memory_Handling_Suite* %5, %struct.XML_Memory_Handling_Suite** %mem, align 8
  ret void
}

declare %struct.encoding* @PyExpat_XmlGetUtf8InternalEncodingNS() #1

declare %struct.encoding* @PyExpat_XmlGetUtf8InternalEncoding() #1

; Function Attrs: nounwind uwtable
define internal void @hashTableInit(%struct.HASH_TABLE* %p, %struct.XML_Memory_Handling_Suite* %ms) #0 {
entry:
  %p.addr = alloca %struct.HASH_TABLE*, align 8
  %ms.addr = alloca %struct.XML_Memory_Handling_Suite*, align 8
  store %struct.HASH_TABLE* %p, %struct.HASH_TABLE** %p.addr, align 8
  store %struct.XML_Memory_Handling_Suite* %ms, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %0 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8
  %power = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %0, i32 0, i32 1
  store i8 0, i8* %power, align 1
  %1 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %1, i32 0, i32 2
  store i64 0, i64* %size, align 8
  %2 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8
  %used = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %2, i32 0, i32 3
  store i64 0, i64* %used, align 8
  %3 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %3, i32 0, i32 0
  store %struct.NAMED** null, %struct.NAMED*** %v, align 8
  %4 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %ms.addr, align 8
  %5 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %p.addr, align 8
  %mem = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %5, i32 0, i32 4
  store %struct.XML_Memory_Handling_Suite* %4, %struct.XML_Memory_Handling_Suite** %mem, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @prologInitProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call = call i32 @initializeEncoding(%struct.XML_ParserStruct* %0)
  store i32 %call, i32* %result, align 4
  %1 = load i32, i32* %result, align 4
  %cmp = icmp ne i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %result, align 4
  store i32 %2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8*, i8** %end.addr, align 8
  %7 = load i8**, i8*** %nextPtr.addr, align 8
  %call1 = call i32 @prologProcessor(%struct.XML_ParserStruct* %4, i8* %5, i8* %6, i8** %7)
  store i32 %call1, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval
  ret i32 %8
}

declare void @PyExpat_XmlPrologStateInit(%struct.prolog_state*) #1

declare i32 @PyExpat_XmlInitEncoding(%struct.INIT_ENCODING*, %struct.encoding**, i8*) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal i32 @initializeEncoding(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 37
  %1 = load i8*, i8** %m_protocolEncodingName, align 8
  store i8* %1, i8** %s, align 8
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 38
  %3 = load i8, i8* %m_ns, align 1
  %conv = zext i8 %3 to i32
  %tobool = icmp ne i32 %conv, 0
  %cond = select i1 %tobool, i32 (%struct.INIT_ENCODING*, %struct.encoding**, i8*)* @PyExpat_XmlInitEncodingNS, i32 (%struct.INIT_ENCODING*, %struct.encoding**, i8*)* @PyExpat_XmlInitEncoding
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_initEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 35
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 34
  %6 = load i8*, i8** %s, align 8
  %call = call i32 %cond(%struct.INIT_ENCODING* %m_initEncoding, %struct.encoding** %m_encoding, i8* %6)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_protocolEncodingName2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 37
  %9 = load i8*, i8** %m_protocolEncodingName2, align 8
  %call3 = call i32 @handleUnknownEncoding(%struct.XML_ParserStruct* %7, i8* %9)
  store i32 %call3, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define internal i32 @prologProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  %0 = load i8*, i8** %s.addr, align 8
  store i8* %0, i8** %next, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 34
  %2 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %2, i32 0, i32 0
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0
  %3 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 34
  %5 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8
  %6 = load i8*, i8** %s.addr, align 8
  %7 = load i8*, i8** %end.addr, align 8
  %call = call i32 %3(%struct.encoding* %5, i8* %6, i8* %7, i8** %next)
  store i32 %call, i32* %tok, align 4
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 34
  %10 = load %struct.encoding*, %struct.encoding** %m_encoding2, align 8
  %11 = load i8*, i8** %s.addr, align 8
  %12 = load i8*, i8** %end.addr, align 8
  %13 = load i32, i32* %tok, align 4
  %14 = load i8*, i8** %next, align 8
  %15 = load i8**, i8*** %nextPtr.addr, align 8
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1
  %17 = load i8, i8* %finalBuffer, align 1
  %tobool = icmp ne i8 %17, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %conv = trunc i32 %lnot.ext to i8
  %call3 = call i32 @doProlog(%struct.XML_ParserStruct* %8, %struct.encoding* %10, i8* %11, i8* %12, i32 %13, i8* %14, i8** %15, i8 zeroext %conv)
  ret i32 %call3
}

declare i32 @PyExpat_XmlInitEncodingNS(%struct.INIT_ENCODING*, %struct.encoding**, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @handleUnknownEncoding(%struct.XML_ParserStruct* %parser, i8* %encodingName) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %encodingName.addr = alloca i8*, align 8
  %info = alloca %struct.XML_Encoding, align 8
  %i = alloca i32, align 4
  %enc = alloca %struct.encoding*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %encodingName, i8** %encodingName.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 29
  %1 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler, align 8
  %tobool = icmp ne i32 (i8*, i8*, %struct.XML_Encoding*)* %1, null
  br i1 %tobool, label %if.then, label %if.end.35

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %2, 256
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %map = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 0
  %arrayidx = getelementptr [256 x i32], [256 x i32]* %map, i32 0, i64 %idxprom
  store i32 -1, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %inc = add i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %convert = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 2
  store i32 (i8*, i8*)* null, i32 (i8*, i8*)** %convert, align 8
  %data = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1
  store i8* null, i8** %data, align 8
  %release = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3
  store void (i8*)* null, void (i8*)** %release, align 8
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingHandler1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 29
  %6 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %m_unknownEncodingHandler1, align 8
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingHandlerData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 42
  %8 = load i8*, i8** %m_unknownEncodingHandlerData, align 8
  %9 = load i8*, i8** %encodingName.addr, align 8
  %call = call i32 %6(i8* %8, i8* %9, %struct.XML_Encoding* %info)
  %tobool2 = icmp ne i32 %call, 0
  br i1 %tobool2, label %if.then.3, label %if.end.27

if.then.3:                                        ; preds = %for.end
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 3
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0
  %11 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %call4 = call i32 @PyExpat_XmlSizeOfUnknownEncoding()
  %conv = sext i32 %call4 to i64
  %call5 = call i8* %11(i64 %conv)
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingMem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 40
  store i8* %call5, i8** %m_unknownEncodingMem, align 8
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingMem6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 40
  %14 = load i8*, i8** %m_unknownEncodingMem6, align 8
  %tobool7 = icmp ne i8* %14, null
  br i1 %tobool7, label %if.end.14, label %if.then.8

if.then.8:                                        ; preds = %if.then.3
  %release9 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3
  %15 = load void (i8*)*, void (i8*)** %release9, align 8
  %tobool10 = icmp ne void (i8*)* %15, null
  br i1 %tobool10, label %if.then.11, label %if.end

if.then.11:                                       ; preds = %if.then.8
  %release12 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3
  %16 = load void (i8*)*, void (i8*)** %release12, align 8
  %data13 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1
  %17 = load i8*, i8** %data13, align 8
  call void %16(i8* %17)
  br label %if.end

if.end:                                           ; preds = %if.then.11, %if.then.8
  store i32 1, i32* %retval
  br label %return

if.end.14:                                        ; preds = %if.then.3
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 38
  %19 = load i8, i8* %m_ns, align 1
  %conv15 = zext i8 %19 to i32
  %tobool16 = icmp ne i32 %conv15, 0
  %cond = select i1 %tobool16, %struct.encoding* (i8*, i32*, i32 (i8*, i8*)*, i8*)* @PyExpat_XmlInitUnknownEncodingNS, %struct.encoding* (i8*, i32*, i32 (i8*, i8*)*, i8*)* @PyExpat_XmlInitUnknownEncoding
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingMem17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 40
  %21 = load i8*, i8** %m_unknownEncodingMem17, align 8
  %map18 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 0
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %map18, i32 0, i32 0
  %convert19 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 2
  %22 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %convert19, align 8
  %data20 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1
  %23 = load i8*, i8** %data20, align 8
  %call21 = call %struct.encoding* %cond(i8* %21, i32* %arraydecay, i32 (i8*, i8*)* %22, i8* %23)
  store %struct.encoding* %call21, %struct.encoding** %enc, align 8
  %24 = load %struct.encoding*, %struct.encoding** %enc, align 8
  %tobool22 = icmp ne %struct.encoding* %24, null
  br i1 %tobool22, label %if.then.23, label %if.end.26

if.then.23:                                       ; preds = %if.end.14
  %data24 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1
  %25 = load i8*, i8** %data24, align 8
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingData = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 41
  store i8* %25, i8** %m_unknownEncodingData, align 8
  %release25 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3
  %27 = load void (i8*)*, void (i8*)** %release25, align 8
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unknownEncodingRelease = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 43
  store void (i8*)* %27, void (i8*)** %m_unknownEncodingRelease, align 8
  %29 = load %struct.encoding*, %struct.encoding** %enc, align 8
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 34
  store %struct.encoding* %29, %struct.encoding** %m_encoding, align 8
  store i32 0, i32* %retval
  br label %return

if.end.26:                                        ; preds = %if.end.14
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %for.end
  %release28 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3
  %31 = load void (i8*)*, void (i8*)** %release28, align 8
  %cmp29 = icmp ne void (i8*)* %31, null
  br i1 %cmp29, label %if.then.31, label %if.end.34

if.then.31:                                       ; preds = %if.end.27
  %release32 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 3
  %32 = load void (i8*)*, void (i8*)** %release32, align 8
  %data33 = getelementptr inbounds %struct.XML_Encoding, %struct.XML_Encoding* %info, i32 0, i32 1
  %33 = load i8*, i8** %data33, align 8
  call void %32(i8* %33)
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.31, %if.end.27
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.34, %entry
  store i32 18, i32* %retval
  br label %return

return:                                           ; preds = %if.end.35, %if.then.23, %if.end
  %34 = load i32, i32* %retval
  ret i32 %34
}

declare i32 @PyExpat_XmlSizeOfUnknownEncoding() #1

declare %struct.encoding* @PyExpat_XmlInitUnknownEncodingNS(i8*, i32*, i32 (i8*, i8*)*, i8*) #1

declare %struct.encoding* @PyExpat_XmlInitUnknownEncoding(i8*, i32*, i32 (i8*, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @doProlog(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %s, i8* %end, i32 %tok, i8* %next, i8** %nextPtr, i8 zeroext %haveMore) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %tok.addr = alloca i32, align 4
  %next.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %haveMore.addr = alloca i8, align 1
  %dtd = alloca %struct.DTD*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %quant = alloca i32, align 4
  %role = alloca i32, align 4
  %handleDefault = alloca i8, align 1
  %result = alloca i32, align 4
  %result68 = alloca i32, align 4
  %pubId = alloca i8*, align 8
  %tem = alloca i8*, align 8
  %hadParamEntityRefs = alloca i8, align 1
  %entity = alloca %struct.ENTITY*, align 8
  %hadParamEntityRefs206 = alloca i8, align 1
  %entity215 = alloca %struct.ENTITY*, align 8
  %prefix = alloca i8*, align 8
  %attVal = alloca i8*, align 8
  %result406 = alloca i32, align 4
  %result512 = alloca i32, align 4
  %name741 = alloca i8*, align 8
  %name793 = alloca i8*, align 8
  %tem872 = alloca i8*, align 8
  %systemId898 = alloca i8*, align 8
  %result937 = alloca i32, align 4
  %temp = alloca i8*, align 8
  %temp969 = alloca i32*, align 8
  %myindex = alloca i32, align 4
  %name1100 = alloca i8*, align 8
  %entity1101 = alloca %struct.ENTITY*, align 8
  %result1162 = alloca i32, align 4
  %betweenDecl1163 = alloca i8, align 1
  %content = alloca %struct.XML_cp*, align 8
  %el = alloca %struct.ELEMENT_TYPE*, align 8
  %name1277 = alloca i8*, align 8
  %nameLen = alloca i32, align 4
  %nxt = alloca i8*, align 8
  %myindex1287 = alloca i32, align 4
  %model = alloca %struct.XML_cp*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i32 %tok, i32* %tok.addr, align 4
  store i8* %next, i8** %next.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  store i8 %haveMore, i8* %haveMore.addr, align 1
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %cmp = icmp eq %struct.encoding* %2, %4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 47
  store i8** %m_eventPtr, i8*** %eventPP, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 48
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 50
  %8 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %8, i32 0, i32 0
  store i8** %internalEventPtr, i8*** %eventPP, align 8
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 50
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1, align 8
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %10, i32 0, i32 1
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.cond

for.cond:                                         ; preds = %sw.epilog.1418, %if.end
  store i8 1, i8* %handleDefault, align 1
  %11 = load i8*, i8** %s.addr, align 8
  %12 = load i8**, i8*** %eventPP, align 8
  store i8* %11, i8** %12, align 8
  %13 = load i8*, i8** %next.addr, align 8
  %14 = load i8**, i8*** %eventEndPP, align 8
  store i8* %13, i8** %14, align 8
  %15 = load i32, i32* %tok.addr, align 4
  %cmp2 = icmp sle i32 %15, 0
  br i1 %cmp2, label %if.then.3, label %if.end.33

if.then.3:                                        ; preds = %for.cond
  %16 = load i8, i8* %haveMore.addr, align 1
  %conv = zext i8 %16 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.7

land.lhs.true:                                    ; preds = %if.then.3
  %17 = load i32, i32* %tok.addr, align 4
  %cmp4 = icmp ne i32 %17, 0
  br i1 %cmp4, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %land.lhs.true
  %18 = load i8*, i8** %s.addr, align 8
  %19 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %18, i8** %19, align 8
  store i32 0, i32* %retval
  br label %return

if.end.7:                                         ; preds = %land.lhs.true, %if.then.3
  %20 = load i32, i32* %tok.addr, align 4
  switch i32 %20, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb.8
    i32 -2, label %sw.bb.9
    i32 -15, label %sw.bb.10
    i32 -4, label %sw.bb.11
  ]

sw.bb:                                            ; preds = %if.end.7
  %21 = load i8*, i8** %next.addr, align 8
  %22 = load i8**, i8*** %eventPP, align 8
  store i8* %21, i8** %22, align 8
  store i32 4, i32* %retval
  br label %return

sw.bb.8:                                          ; preds = %if.end.7
  store i32 5, i32* %retval
  br label %return

sw.bb.9:                                          ; preds = %if.end.7
  store i32 6, i32* %retval
  br label %return

sw.bb.10:                                         ; preds = %if.end.7
  %23 = load i32, i32* %tok.addr, align 4
  %sub = sub i32 0, %23
  store i32 %sub, i32* %tok.addr, align 4
  br label %sw.epilog

sw.bb.11:                                         ; preds = %if.end.7
  %24 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 34
  %26 = load %struct.encoding*, %struct.encoding** %m_encoding12, align 8
  %cmp13 = icmp ne %struct.encoding* %24, %26
  br i1 %cmp13, label %land.lhs.true.15, label %if.end.19

land.lhs.true.15:                                 ; preds = %sw.bb.11
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 50
  %28 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities16, align 8
  %betweenDecl = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %28, i32 0, i32 5
  %29 = load i8, i8* %betweenDecl, align 1
  %tobool17 = icmp ne i8 %29, 0
  br i1 %tobool17, label %if.end.19, label %if.then.18

if.then.18:                                       ; preds = %land.lhs.true.15
  %30 = load i8*, i8** %s.addr, align 8
  %31 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %30, i8** %31, align 8
  store i32 0, i32* %retval
  br label %return

if.end.19:                                        ; preds = %land.lhs.true.15, %sw.bb.11
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_isParamEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 86
  %33 = load i8, i8* %m_isParamEntity, align 1
  %conv20 = zext i8 %33 to i32
  %tobool21 = icmp ne i32 %conv20, 0
  br i1 %tobool21, label %if.then.25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.19
  %34 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding22 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 34
  %36 = load %struct.encoding*, %struct.encoding** %m_encoding22, align 8
  %cmp23 = icmp ne %struct.encoding* %34, %36
  br i1 %cmp23, label %if.then.25, label %if.end.31

if.then.25:                                       ; preds = %lor.lhs.false, %if.end.19
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 44
  %handler = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState, i32 0, i32 0
  %38 = load i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)*, i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)** %handler, align 8
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 44
  %40 = load i8*, i8** %end.addr, align 8
  %41 = load i8*, i8** %end.addr, align 8
  %42 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %call = call i32 %38(%struct.prolog_state* %m_prologState26, i32 -4, i8* %40, i8* %41, %struct.encoding* %42)
  %cmp27 = icmp eq i32 %call, -1
  br i1 %cmp27, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.then.25
  store i32 29, i32* %retval
  br label %return

if.end.30:                                        ; preds = %if.then.25
  %43 = load i8*, i8** %s.addr, align 8
  %44 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %43, i8** %44, align 8
  store i32 0, i32* %retval
  br label %return

if.end.31:                                        ; preds = %lor.lhs.false
  store i32 3, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.end.7
  %45 = load i32, i32* %tok.addr, align 4
  %sub32 = sub i32 0, %45
  store i32 %sub32, i32* %tok.addr, align 4
  %46 = load i8*, i8** %end.addr, align 8
  store i8* %46, i8** %next.addr, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.10
  br label %if.end.33

if.end.33:                                        ; preds = %sw.epilog, %for.cond
  %47 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %47, i32 0, i32 44
  %handler35 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState34, i32 0, i32 0
  %48 = load i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)*, i32 (%struct.prolog_state*, i32, i8*, i8*, %struct.encoding*)** %handler35, align 8
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 44
  %50 = load i32, i32* %tok.addr, align 4
  %51 = load i8*, i8** %s.addr, align 8
  %52 = load i8*, i8** %next.addr, align 8
  %53 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %call37 = call i32 %48(%struct.prolog_state* %m_prologState36, i32 %50, i8* %51, i8* %52, %struct.encoding* %53)
  store i32 %call37, i32* %role, align 4
  %54 = load i32, i32* %role, align 4
  switch i32 %54, label %sw.epilog.1405 [
    i32 1, label %sw.bb.38
    i32 4, label %sw.bb.45
    i32 7, label %sw.bb.56
    i32 57, label %sw.bb.67
    i32 6, label %sw.bb.75
    i32 14, label %sw.bb.102
    i32 8, label %sw.bb.134
    i32 2, label %sw.bb.202
    i32 34, label %sw.bb.254
    i32 22, label %sw.bb.260
    i32 23, label %sw.bb.266
    i32 24, label %sw.bb.269
    i32 25, label %sw.bb.272
    i32 26, label %sw.bb.274
    i32 27, label %sw.bb.276
    i32 28, label %sw.bb.278
    i32 29, label %sw.bb.280
    i32 30, label %sw.bb.282
    i32 31, label %sw.bb.291
    i32 32, label %sw.bb.291
    i32 35, label %sw.bb.320
    i32 36, label %sw.bb.320
    i32 37, label %sw.bb.402
    i32 38, label %sw.bb.402
    i32 12, label %sw.bb.508
    i32 5, label %sw.bb.562
    i32 13, label %sw.bb.618
    i32 15, label %sw.bb.654
    i32 16, label %sw.bb.679
    i32 9, label %sw.bb.732
    i32 10, label %sw.bb.789
    i32 18, label %sw.bb.848
    i32 21, label %sw.bb.863
    i32 19, label %sw.bb.891
    i32 20, label %sw.bb.918
    i32 -1, label %sw.bb.932
    i32 58, label %sw.bb.936
    i32 44, label %sw.bb.951
    i32 50, label %sw.bb.1015
    i32 49, label %sw.bb.1039
    i32 60, label %sw.bb.1092
    i32 59, label %sw.bb.1092
    i32 40, label %sw.bb.1213
    i32 41, label %sw.bb.1226
    i32 42, label %sw.bb.1226
    i32 43, label %sw.bb.1252
    i32 51, label %sw.bb.1270
    i32 53, label %sw.bb.1271
    i32 52, label %sw.bb.1272
    i32 54, label %sw.bb.1273
    i32 45, label %sw.bb.1320
    i32 47, label %sw.bb.1321
    i32 46, label %sw.bb.1322
    i32 48, label %sw.bb.1323
    i32 55, label %sw.bb.1359
    i32 56, label %sw.bb.1364
    i32 0, label %sw.bb.1369
    i32 3, label %sw.bb.1372
    i32 11, label %sw.bb.1377
    i32 17, label %sw.bb.1386
    i32 33, label %sw.bb.1391
    i32 39, label %sw.bb.1400
  ]

sw.bb.38:                                         ; preds = %if.end.33
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %56 = load i8*, i8** %s.addr, align 8
  %57 = load i8*, i8** %next.addr, align 8
  %call39 = call i32 @processXmlDecl(%struct.XML_ParserStruct* %55, i32 0, i8* %56, i8* %57)
  store i32 %call39, i32* %result, align 4
  %58 = load i32, i32* %result, align 4
  %cmp40 = icmp ne i32 %58, 0
  br i1 %cmp40, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %sw.bb.38
  %59 = load i32, i32* %result, align 4
  store i32 %59, i32* %retval
  br label %return

if.end.43:                                        ; preds = %sw.bb.38
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding44 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 34
  %61 = load %struct.encoding*, %struct.encoding** %m_encoding44, align 8
  store %struct.encoding* %61, %struct.encoding** %enc.addr, align 8
  store i8 0, i8* %handleDefault, align 1
  br label %sw.epilog.1405

sw.bb.45:                                         ; preds = %if.end.33
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 19
  %63 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler, align 8
  %tobool46 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %63, null
  br i1 %tobool46, label %if.then.47, label %if.end.55

if.then.47:                                       ; preds = %sw.bb.45
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 79
  %65 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %66 = load i8*, i8** %s.addr, align 8
  %67 = load i8*, i8** %next.addr, align 8
  %call48 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool, %struct.encoding* %65, i8* %66, i8* %67)
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 55
  store i8* %call48, i8** %m_doctypeName, align 8
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeName49 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 55
  %70 = load i8*, i8** %m_doctypeName49, align 8
  %tobool50 = icmp ne i8* %70, null
  br i1 %tobool50, label %if.end.52, label %if.then.51

if.then.51:                                       ; preds = %if.then.47
  store i32 1, i32* %retval
  br label %return

if.end.52:                                        ; preds = %if.then.47
  %71 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool53 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %71, i32 0, i32 79
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool53, i32 0, i32 3
  %72 = load i8*, i8** %ptr, align 8
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool54 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %73, i32 0, i32 79
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool54, i32 0, i32 4
  store i8* %72, i8** %start, align 8
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypePubid = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 57
  store i8* null, i8** %m_doctypePubid, align 8
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.52, %sw.bb.45
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeSysid = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 56
  store i8* null, i8** %m_doctypeSysid, align 8
  br label %sw.epilog.1405

sw.bb.56:                                         ; preds = %if.end.33
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startDoctypeDeclHandler57 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 19
  %77 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler57, align 8
  %tobool58 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %77, null
  br i1 %tobool58, label %if.then.59, label %if.end.66

if.then.59:                                       ; preds = %sw.bb.56
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startDoctypeDeclHandler60 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 19
  %79 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler60, align 8
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %80, i32 0, i32 1
  %81 = load i8*, i8** %m_handlerArg, align 8
  %82 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeName61 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %82, i32 0, i32 55
  %83 = load i8*, i8** %m_doctypeName61, align 8
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeSysid62 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 56
  %85 = load i8*, i8** %m_doctypeSysid62, align 8
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypePubid63 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 57
  %87 = load i8*, i8** %m_doctypePubid63, align 8
  call void %79(i8* %81, i8* %83, i8* %85, i8* %87, i32 1)
  %88 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeName64 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %88, i32 0, i32 55
  store i8* null, i8** %m_doctypeName64, align 8
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool65 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 79
  call void @poolClear(%struct.STRING_POOL* %m_tempPool65)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.66

if.end.66:                                        ; preds = %if.then.59, %sw.bb.56
  br label %sw.epilog.1405

sw.bb.67:                                         ; preds = %if.end.33
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %91 = load i8*, i8** %s.addr, align 8
  %92 = load i8*, i8** %next.addr, align 8
  %call69 = call i32 @processXmlDecl(%struct.XML_ParserStruct* %90, i32 1, i8* %91, i8* %92)
  store i32 %call69, i32* %result68, align 4
  %93 = load i32, i32* %result68, align 4
  %cmp70 = icmp ne i32 %93, 0
  br i1 %cmp70, label %if.then.72, label %if.end.73

if.then.72:                                       ; preds = %sw.bb.67
  %94 = load i32, i32* %result68, align 4
  store i32 %94, i32* %retval
  br label %return

if.end.73:                                        ; preds = %sw.bb.67
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding74 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %95, i32 0, i32 34
  %96 = load %struct.encoding*, %struct.encoding** %m_encoding74, align 8
  store %struct.encoding* %96, %struct.encoding** %enc.addr, align 8
  store i8 0, i8* %handleDefault, align 1
  br label %sw.epilog.1405

sw.bb.75:                                         ; preds = %if.end.33
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_useForeignDTD = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %97, i32 0, i32 87
  store i8 0, i8* %m_useForeignDTD, align 1
  %98 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %99 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %99, i32 0, i32 10
  %call76 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %98, %struct.HASH_TABLE* %paramEntities, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.externalSubsetName, i32 0, i32 0), i64 64)
  %100 = bitcast %struct.NAMED* %call76 to %struct.ENTITY*
  %101 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %101, i32 0, i32 54
  store %struct.ENTITY* %100, %struct.ENTITY** %m_declEntity, align 8
  %102 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity77 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %102, i32 0, i32 54
  %103 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity77, align 8
  %tobool78 = icmp ne %struct.ENTITY* %103, null
  br i1 %tobool78, label %if.end.80, label %if.then.79

if.then.79:                                       ; preds = %sw.bb.75
  store i32 1, i32* %retval
  br label %return

if.end.80:                                        ; preds = %sw.bb.75
  %104 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %104, i32 0, i32 7
  store i8 1, i8* %hasParamEntityRefs, align 1
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startDoctypeDeclHandler81 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %105, i32 0, i32 19
  %106 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler81, align 8
  %tobool82 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %106, null
  br i1 %tobool82, label %if.then.83, label %if.end.101

if.then.83:                                       ; preds = %if.end.80
  %107 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %isPublicId = getelementptr inbounds %struct.encoding, %struct.encoding* %107, i32 0, i32 10
  %108 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %isPublicId, align 8
  %109 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %110 = load i8*, i8** %s.addr, align 8
  %111 = load i8*, i8** %next.addr, align 8
  %112 = load i8**, i8*** %eventPP, align 8
  %call84 = call i32 %108(%struct.encoding* %109, i8* %110, i8* %111, i8** %112)
  %tobool85 = icmp ne i32 %call84, 0
  br i1 %tobool85, label %if.end.87, label %if.then.86

if.then.86:                                       ; preds = %if.then.83
  store i32 32, i32* %retval
  br label %return

if.end.87:                                        ; preds = %if.then.83
  %113 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool88 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %113, i32 0, i32 79
  %114 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %115 = load i8*, i8** %s.addr, align 8
  %116 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %116, i32 0, i32 13
  %117 = load i32, i32* %minBytesPerChar, align 4
  %idx.ext = sext i32 %117 to i64
  %add.ptr = getelementptr i8, i8* %115, i64 %idx.ext
  %118 = load i8*, i8** %next.addr, align 8
  %119 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar89 = getelementptr inbounds %struct.encoding, %struct.encoding* %119, i32 0, i32 13
  %120 = load i32, i32* %minBytesPerChar89, align 4
  %idx.ext90 = sext i32 %120 to i64
  %idx.neg = sub i64 0, %idx.ext90
  %add.ptr91 = getelementptr i8, i8* %118, i64 %idx.neg
  %call92 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool88, %struct.encoding* %114, i8* %add.ptr, i8* %add.ptr91)
  store i8* %call92, i8** %pubId, align 8
  %121 = load i8*, i8** %pubId, align 8
  %tobool93 = icmp ne i8* %121, null
  br i1 %tobool93, label %if.end.95, label %if.then.94

if.then.94:                                       ; preds = %if.end.87
  store i32 1, i32* %retval
  br label %return

if.end.95:                                        ; preds = %if.end.87
  %122 = load i8*, i8** %pubId, align 8
  call void @normalizePublicId(i8* %122)
  %123 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool96 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %123, i32 0, i32 79
  %ptr97 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool96, i32 0, i32 3
  %124 = load i8*, i8** %ptr97, align 8
  %125 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool98 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %125, i32 0, i32 79
  %start99 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool98, i32 0, i32 4
  store i8* %124, i8** %start99, align 8
  %126 = load i8*, i8** %pubId, align 8
  %127 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypePubid100 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %127, i32 0, i32 57
  store i8* %126, i8** %m_doctypePubid100, align 8
  store i8 0, i8* %handleDefault, align 1
  br label %alreadyChecked

if.end.101:                                       ; preds = %if.end.80
  br label %sw.bb.102

sw.bb.102:                                        ; preds = %if.end.33, %if.end.101
  %128 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %isPublicId103 = getelementptr inbounds %struct.encoding, %struct.encoding* %128, i32 0, i32 10
  %129 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %isPublicId103, align 8
  %130 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %131 = load i8*, i8** %s.addr, align 8
  %132 = load i8*, i8** %next.addr, align 8
  %133 = load i8**, i8*** %eventPP, align 8
  %call104 = call i32 %129(%struct.encoding* %130, i8* %131, i8* %132, i8** %133)
  %tobool105 = icmp ne i32 %call104, 0
  br i1 %tobool105, label %if.end.107, label %if.then.106

if.then.106:                                      ; preds = %sw.bb.102
  store i32 32, i32* %retval
  br label %return

if.end.107:                                       ; preds = %sw.bb.102
  br label %alreadyChecked

alreadyChecked:                                   ; preds = %if.end.107, %if.end.95
  %134 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %134, i32 0, i32 6
  %135 = load i8, i8* %keepProcessing, align 1
  %conv108 = zext i8 %135 to i32
  %tobool109 = icmp ne i32 %conv108, 0
  br i1 %tobool109, label %land.lhs.true.110, label %if.end.133

land.lhs.true.110:                                ; preds = %alreadyChecked
  %136 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity111 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %136, i32 0, i32 54
  %137 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity111, align 8
  %tobool112 = icmp ne %struct.ENTITY* %137, null
  br i1 %tobool112, label %if.then.113, label %if.end.133

if.then.113:                                      ; preds = %land.lhs.true.110
  %138 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %138, i32 0, i32 4
  %139 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %140 = load i8*, i8** %s.addr, align 8
  %141 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar114 = getelementptr inbounds %struct.encoding, %struct.encoding* %141, i32 0, i32 13
  %142 = load i32, i32* %minBytesPerChar114, align 4
  %idx.ext115 = sext i32 %142 to i64
  %add.ptr116 = getelementptr i8, i8* %140, i64 %idx.ext115
  %143 = load i8*, i8** %next.addr, align 8
  %144 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar117 = getelementptr inbounds %struct.encoding, %struct.encoding* %144, i32 0, i32 13
  %145 = load i32, i32* %minBytesPerChar117, align 4
  %idx.ext118 = sext i32 %145 to i64
  %idx.neg119 = sub i64 0, %idx.ext118
  %add.ptr120 = getelementptr i8, i8* %143, i64 %idx.neg119
  %call121 = call i8* @poolStoreString(%struct.STRING_POOL* %pool, %struct.encoding* %139, i8* %add.ptr116, i8* %add.ptr120)
  store i8* %call121, i8** %tem, align 8
  %146 = load i8*, i8** %tem, align 8
  %tobool122 = icmp ne i8* %146, null
  br i1 %tobool122, label %if.end.124, label %if.then.123

if.then.123:                                      ; preds = %if.then.113
  store i32 1, i32* %retval
  br label %return

if.end.124:                                       ; preds = %if.then.113
  %147 = load i8*, i8** %tem, align 8
  call void @normalizePublicId(i8* %147)
  %148 = load i8*, i8** %tem, align 8
  %149 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity125 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %149, i32 0, i32 54
  %150 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity125, align 8
  %publicId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %150, i32 0, i32 6
  store i8* %148, i8** %publicId, align 8
  %151 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool126 = getelementptr inbounds %struct.DTD, %struct.DTD* %151, i32 0, i32 4
  %ptr127 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool126, i32 0, i32 3
  %152 = load i8*, i8** %ptr127, align 8
  %153 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool128 = getelementptr inbounds %struct.DTD, %struct.DTD* %153, i32 0, i32 4
  %start129 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool128, i32 0, i32 4
  store i8* %152, i8** %start129, align 8
  %154 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %154, i32 0, i32 32
  %155 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler, align 8
  %tobool130 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %155, null
  br i1 %tobool130, label %if.then.131, label %if.end.132

if.then.131:                                      ; preds = %if.end.124
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.132

if.end.132:                                       ; preds = %if.then.131, %if.end.124
  br label %if.end.133

if.end.133:                                       ; preds = %if.end.132, %land.lhs.true.110, %alreadyChecked
  br label %sw.epilog.1405

sw.bb.134:                                        ; preds = %if.end.33
  %156 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeName135 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %156, i32 0, i32 55
  %157 = load i8*, i8** %m_doctypeName135, align 8
  %tobool136 = icmp ne i8* %157, null
  br i1 %tobool136, label %if.then.137, label %if.end.144

if.then.137:                                      ; preds = %sw.bb.134
  %158 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startDoctypeDeclHandler138 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %158, i32 0, i32 19
  %159 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler138, align 8
  %160 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg139 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %160, i32 0, i32 1
  %161 = load i8*, i8** %m_handlerArg139, align 8
  %162 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeName140 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %162, i32 0, i32 55
  %163 = load i8*, i8** %m_doctypeName140, align 8
  %164 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeSysid141 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %164, i32 0, i32 56
  %165 = load i8*, i8** %m_doctypeSysid141, align 8
  %166 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypePubid142 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %166, i32 0, i32 57
  %167 = load i8*, i8** %m_doctypePubid142, align 8
  call void %159(i8* %161, i8* %163, i8* %165, i8* %167, i32 0)
  %168 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool143 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %168, i32 0, i32 79
  call void @poolClear(%struct.STRING_POOL* %m_tempPool143)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.144

if.end.144:                                       ; preds = %if.then.137, %sw.bb.134
  %169 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeSysid145 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %169, i32 0, i32 56
  %170 = load i8*, i8** %m_doctypeSysid145, align 8
  %tobool146 = icmp ne i8* %170, null
  br i1 %tobool146, label %if.then.151, label %lor.lhs.false.147

lor.lhs.false.147:                                ; preds = %if.end.144
  %171 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_useForeignDTD148 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %171, i32 0, i32 87
  %172 = load i8, i8* %m_useForeignDTD148, align 1
  %conv149 = zext i8 %172 to i32
  %tobool150 = icmp ne i32 %conv149, 0
  br i1 %tobool150, label %if.then.151, label %if.end.196

if.then.151:                                      ; preds = %lor.lhs.false.147, %if.end.144
  %173 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs152 = getelementptr inbounds %struct.DTD, %struct.DTD* %173, i32 0, i32 7
  %174 = load i8, i8* %hasParamEntityRefs152, align 1
  store i8 %174, i8* %hadParamEntityRefs, align 1
  %175 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs153 = getelementptr inbounds %struct.DTD, %struct.DTD* %175, i32 0, i32 7
  store i8 1, i8* %hasParamEntityRefs153, align 1
  %176 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_paramEntityParsing = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %176, i32 0, i32 88
  %177 = load i32, i32* %m_paramEntityParsing, align 4
  %tobool154 = icmp ne i32 %177, 0
  br i1 %tobool154, label %land.lhs.true.155, label %if.end.194

land.lhs.true.155:                                ; preds = %if.then.151
  %178 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %178, i32 0, i32 26
  %179 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8
  %tobool156 = icmp ne i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %179, null
  br i1 %tobool156, label %if.then.157, label %if.end.194

if.then.157:                                      ; preds = %land.lhs.true.155
  %180 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %181 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntities158 = getelementptr inbounds %struct.DTD, %struct.DTD* %181, i32 0, i32 10
  %call159 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %180, %struct.HASH_TABLE* %paramEntities158, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.externalSubsetName, i32 0, i32 0), i64 64)
  %182 = bitcast %struct.NAMED* %call159 to %struct.ENTITY*
  store %struct.ENTITY* %182, %struct.ENTITY** %entity, align 8
  %183 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %tobool160 = icmp ne %struct.ENTITY* %183, null
  br i1 %tobool160, label %if.end.162, label %if.then.161

if.then.161:                                      ; preds = %if.then.157
  store i32 1, i32* %retval
  br label %return

if.end.162:                                       ; preds = %if.then.157
  %184 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_useForeignDTD163 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %184, i32 0, i32 87
  %185 = load i8, i8* %m_useForeignDTD163, align 1
  %tobool164 = icmp ne i8 %185, 0
  br i1 %tobool164, label %if.then.165, label %if.end.166

if.then.165:                                      ; preds = %if.end.162
  %186 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_curBase = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %186, i32 0, i32 66
  %187 = load i8*, i8** %m_curBase, align 8
  %188 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %base = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %188, i32 0, i32 5
  store i8* %187, i8** %base, align 8
  br label %if.end.166

if.end.166:                                       ; preds = %if.then.165, %if.end.162
  %189 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntityRead = getelementptr inbounds %struct.DTD, %struct.DTD* %189, i32 0, i32 9
  store i8 0, i8* %paramEntityRead, align 1
  %190 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandler167 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %190, i32 0, i32 26
  %191 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler167, align 8
  %192 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %192, i32 0, i32 27
  %193 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8
  %194 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %base168 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %194, i32 0, i32 5
  %195 = load i8*, i8** %base168, align 8
  %196 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %systemId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %196, i32 0, i32 4
  %197 = load i8*, i8** %systemId, align 8
  %198 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %publicId169 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %198, i32 0, i32 6
  %199 = load i8*, i8** %publicId169, align 8
  %call170 = call i32 %191(%struct.XML_ParserStruct* %193, i8* null, i8* %195, i8* %197, i8* %199)
  %tobool171 = icmp ne i32 %call170, 0
  br i1 %tobool171, label %if.end.173, label %if.then.172

if.then.172:                                      ; preds = %if.end.166
  store i32 21, i32* %retval
  br label %return

if.end.173:                                       ; preds = %if.end.166
  %200 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntityRead174 = getelementptr inbounds %struct.DTD, %struct.DTD* %200, i32 0, i32 9
  %201 = load i8, i8* %paramEntityRead174, align 1
  %tobool175 = icmp ne i8 %201, 0
  br i1 %tobool175, label %if.then.176, label %if.else.187

if.then.176:                                      ; preds = %if.end.173
  %202 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %202, i32 0, i32 8
  %203 = load i8, i8* %standalone, align 1
  %tobool177 = icmp ne i8 %203, 0
  br i1 %tobool177, label %if.end.186, label %land.lhs.true.178

land.lhs.true.178:                                ; preds = %if.then.176
  %204 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notStandaloneHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %204, i32 0, i32 25
  %205 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler, align 8
  %tobool179 = icmp ne i32 (i8*)* %205, null
  br i1 %tobool179, label %land.lhs.true.180, label %if.end.186

land.lhs.true.180:                                ; preds = %land.lhs.true.178
  %206 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notStandaloneHandler181 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %206, i32 0, i32 25
  %207 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler181, align 8
  %208 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg182 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %208, i32 0, i32 1
  %209 = load i8*, i8** %m_handlerArg182, align 8
  %call183 = call i32 %207(i8* %209)
  %tobool184 = icmp ne i32 %call183, 0
  br i1 %tobool184, label %if.end.186, label %if.then.185

if.then.185:                                      ; preds = %land.lhs.true.180
  store i32 22, i32* %retval
  br label %return

if.end.186:                                       ; preds = %land.lhs.true.180, %land.lhs.true.178, %if.then.176
  br label %if.end.193

if.else.187:                                      ; preds = %if.end.173
  %210 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeSysid188 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %210, i32 0, i32 56
  %211 = load i8*, i8** %m_doctypeSysid188, align 8
  %tobool189 = icmp ne i8* %211, null
  br i1 %tobool189, label %if.end.192, label %if.then.190

if.then.190:                                      ; preds = %if.else.187
  %212 = load i8, i8* %hadParamEntityRefs, align 1
  %213 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs191 = getelementptr inbounds %struct.DTD, %struct.DTD* %213, i32 0, i32 7
  store i8 %212, i8* %hasParamEntityRefs191, align 1
  br label %if.end.192

if.end.192:                                       ; preds = %if.then.190, %if.else.187
  br label %if.end.193

if.end.193:                                       ; preds = %if.end.192, %if.end.186
  br label %if.end.194

if.end.194:                                       ; preds = %if.end.193, %land.lhs.true.155, %if.then.151
  %214 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_useForeignDTD195 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %214, i32 0, i32 87
  store i8 0, i8* %m_useForeignDTD195, align 1
  br label %if.end.196

if.end.196:                                       ; preds = %if.end.194, %lor.lhs.false.147
  %215 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endDoctypeDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %215, i32 0, i32 20
  %216 = load void (i8*)*, void (i8*)** %m_endDoctypeDeclHandler, align 8
  %tobool197 = icmp ne void (i8*)* %216, null
  br i1 %tobool197, label %if.then.198, label %if.end.201

if.then.198:                                      ; preds = %if.end.196
  %217 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endDoctypeDeclHandler199 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %217, i32 0, i32 20
  %218 = load void (i8*)*, void (i8*)** %m_endDoctypeDeclHandler199, align 8
  %219 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg200 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %219, i32 0, i32 1
  %220 = load i8*, i8** %m_handlerArg200, align 8
  call void %218(i8* %220)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.201

if.end.201:                                       ; preds = %if.then.198, %if.end.196
  br label %sw.epilog.1405

sw.bb.202:                                        ; preds = %if.end.33
  %221 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_useForeignDTD203 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %221, i32 0, i32 87
  %222 = load i8, i8* %m_useForeignDTD203, align 1
  %tobool204 = icmp ne i8 %222, 0
  br i1 %tobool204, label %if.then.205, label %if.end.252

if.then.205:                                      ; preds = %sw.bb.202
  %223 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs207 = getelementptr inbounds %struct.DTD, %struct.DTD* %223, i32 0, i32 7
  %224 = load i8, i8* %hasParamEntityRefs207, align 1
  store i8 %224, i8* %hadParamEntityRefs206, align 1
  %225 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs208 = getelementptr inbounds %struct.DTD, %struct.DTD* %225, i32 0, i32 7
  store i8 1, i8* %hasParamEntityRefs208, align 1
  %226 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_paramEntityParsing209 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %226, i32 0, i32 88
  %227 = load i32, i32* %m_paramEntityParsing209, align 4
  %tobool210 = icmp ne i32 %227, 0
  br i1 %tobool210, label %land.lhs.true.211, label %if.end.251

land.lhs.true.211:                                ; preds = %if.then.205
  %228 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandler212 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %228, i32 0, i32 26
  %229 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler212, align 8
  %tobool213 = icmp ne i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %229, null
  br i1 %tobool213, label %if.then.214, label %if.end.251

if.then.214:                                      ; preds = %land.lhs.true.211
  %230 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %231 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntities216 = getelementptr inbounds %struct.DTD, %struct.DTD* %231, i32 0, i32 10
  %call217 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %230, %struct.HASH_TABLE* %paramEntities216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.externalSubsetName, i32 0, i32 0), i64 64)
  %232 = bitcast %struct.NAMED* %call217 to %struct.ENTITY*
  store %struct.ENTITY* %232, %struct.ENTITY** %entity215, align 8
  %233 = load %struct.ENTITY*, %struct.ENTITY** %entity215, align 8
  %tobool218 = icmp ne %struct.ENTITY* %233, null
  br i1 %tobool218, label %if.end.220, label %if.then.219

if.then.219:                                      ; preds = %if.then.214
  store i32 1, i32* %retval
  br label %return

if.end.220:                                       ; preds = %if.then.214
  %234 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_curBase221 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %234, i32 0, i32 66
  %235 = load i8*, i8** %m_curBase221, align 8
  %236 = load %struct.ENTITY*, %struct.ENTITY** %entity215, align 8
  %base222 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %236, i32 0, i32 5
  store i8* %235, i8** %base222, align 8
  %237 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntityRead223 = getelementptr inbounds %struct.DTD, %struct.DTD* %237, i32 0, i32 9
  store i8 0, i8* %paramEntityRead223, align 1
  %238 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandler224 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %238, i32 0, i32 26
  %239 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler224, align 8
  %240 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandlerArg225 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %240, i32 0, i32 27
  %241 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg225, align 8
  %242 = load %struct.ENTITY*, %struct.ENTITY** %entity215, align 8
  %base226 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %242, i32 0, i32 5
  %243 = load i8*, i8** %base226, align 8
  %244 = load %struct.ENTITY*, %struct.ENTITY** %entity215, align 8
  %systemId227 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %244, i32 0, i32 4
  %245 = load i8*, i8** %systemId227, align 8
  %246 = load %struct.ENTITY*, %struct.ENTITY** %entity215, align 8
  %publicId228 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %246, i32 0, i32 6
  %247 = load i8*, i8** %publicId228, align 8
  %call229 = call i32 %239(%struct.XML_ParserStruct* %241, i8* null, i8* %243, i8* %245, i8* %247)
  %tobool230 = icmp ne i32 %call229, 0
  br i1 %tobool230, label %if.end.232, label %if.then.231

if.then.231:                                      ; preds = %if.end.220
  store i32 21, i32* %retval
  br label %return

if.end.232:                                       ; preds = %if.end.220
  %248 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntityRead233 = getelementptr inbounds %struct.DTD, %struct.DTD* %248, i32 0, i32 9
  %249 = load i8, i8* %paramEntityRead233, align 1
  %tobool234 = icmp ne i8 %249, 0
  br i1 %tobool234, label %if.then.235, label %if.else.248

if.then.235:                                      ; preds = %if.end.232
  %250 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone236 = getelementptr inbounds %struct.DTD, %struct.DTD* %250, i32 0, i32 8
  %251 = load i8, i8* %standalone236, align 1
  %tobool237 = icmp ne i8 %251, 0
  br i1 %tobool237, label %if.end.247, label %land.lhs.true.238

land.lhs.true.238:                                ; preds = %if.then.235
  %252 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notStandaloneHandler239 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %252, i32 0, i32 25
  %253 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler239, align 8
  %tobool240 = icmp ne i32 (i8*)* %253, null
  br i1 %tobool240, label %land.lhs.true.241, label %if.end.247

land.lhs.true.241:                                ; preds = %land.lhs.true.238
  %254 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notStandaloneHandler242 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %254, i32 0, i32 25
  %255 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler242, align 8
  %256 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg243 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %256, i32 0, i32 1
  %257 = load i8*, i8** %m_handlerArg243, align 8
  %call244 = call i32 %255(i8* %257)
  %tobool245 = icmp ne i32 %call244, 0
  br i1 %tobool245, label %if.end.247, label %if.then.246

if.then.246:                                      ; preds = %land.lhs.true.241
  store i32 22, i32* %retval
  br label %return

if.end.247:                                       ; preds = %land.lhs.true.241, %land.lhs.true.238, %if.then.235
  br label %if.end.250

if.else.248:                                      ; preds = %if.end.232
  %258 = load i8, i8* %hadParamEntityRefs206, align 1
  %259 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs249 = getelementptr inbounds %struct.DTD, %struct.DTD* %259, i32 0, i32 7
  store i8 %258, i8* %hasParamEntityRefs249, align 1
  br label %if.end.250

if.end.250:                                       ; preds = %if.else.248, %if.end.247
  br label %if.end.251

if.end.251:                                       ; preds = %if.end.250, %land.lhs.true.211, %if.then.205
  br label %if.end.252

if.end.252:                                       ; preds = %if.end.251, %sw.bb.202
  %260 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %260, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @contentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %261 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %262 = load i8*, i8** %s.addr, align 8
  %263 = load i8*, i8** %end.addr, align 8
  %264 = load i8**, i8*** %nextPtr.addr, align 8
  %call253 = call i32 @contentProcessor(%struct.XML_ParserStruct* %261, i8* %262, i8* %263, i8** %264)
  store i32 %call253, i32* %retval
  br label %return

sw.bb.254:                                        ; preds = %if.end.33
  %265 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %266 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %267 = load i8*, i8** %s.addr, align 8
  %268 = load i8*, i8** %next.addr, align 8
  %call255 = call %struct.ELEMENT_TYPE* @getElementType(%struct.XML_ParserStruct* %265, %struct.encoding* %266, i8* %267, i8* %268)
  %269 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declElementType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %269, i32 0, i32 61
  store %struct.ELEMENT_TYPE* %call255, %struct.ELEMENT_TYPE** %m_declElementType, align 8
  %270 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declElementType256 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %270, i32 0, i32 61
  %271 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType256, align 8
  %tobool257 = icmp ne %struct.ELEMENT_TYPE* %271, null
  br i1 %tobool257, label %if.end.259, label %if.then.258

if.then.258:                                      ; preds = %sw.bb.254
  store i32 1, i32* %retval
  br label %return

if.end.259:                                       ; preds = %sw.bb.254
  br label %checkAttListDeclHandler

sw.bb.260:                                        ; preds = %if.end.33
  %272 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %273 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %274 = load i8*, i8** %s.addr, align 8
  %275 = load i8*, i8** %next.addr, align 8
  %call261 = call %struct.attribute_id* @getAttributeId(%struct.XML_ParserStruct* %272, %struct.encoding* %273, i8* %274, i8* %275)
  %276 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %276, i32 0, i32 62
  store %struct.attribute_id* %call261, %struct.attribute_id** %m_declAttributeId, align 8
  %277 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeId262 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %277, i32 0, i32 62
  %278 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId262, align 8
  %tobool263 = icmp ne %struct.attribute_id* %278, null
  br i1 %tobool263, label %if.end.265, label %if.then.264

if.then.264:                                      ; preds = %sw.bb.260
  store i32 1, i32* %retval
  br label %return

if.end.265:                                       ; preds = %sw.bb.260
  %279 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeIsCdata = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %279, i32 0, i32 63
  store i8 0, i8* %m_declAttributeIsCdata, align 1
  %280 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %280, i32 0, i32 58
  store i8* null, i8** %m_declAttributeType, align 8
  %281 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeIsId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %281, i32 0, i32 64
  store i8 0, i8* %m_declAttributeIsId, align 1
  br label %checkAttListDeclHandler

sw.bb.266:                                        ; preds = %if.end.33
  %282 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeIsCdata267 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %282, i32 0, i32 63
  store i8 1, i8* %m_declAttributeIsCdata267, align 1
  %283 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType268 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %283, i32 0, i32 58
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @doProlog.atypeCDATA, i32 0, i32 0), i8** %m_declAttributeType268, align 8
  br label %checkAttListDeclHandler

sw.bb.269:                                        ; preds = %if.end.33
  %284 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeIsId270 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %284, i32 0, i32 64
  store i8 1, i8* %m_declAttributeIsId270, align 1
  %285 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType271 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %285, i32 0, i32 58
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @doProlog.atypeID, i32 0, i32 0), i8** %m_declAttributeType271, align 8
  br label %checkAttListDeclHandler

sw.bb.272:                                        ; preds = %if.end.33
  %286 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType273 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %286, i32 0, i32 58
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @doProlog.atypeIDREF, i32 0, i32 0), i8** %m_declAttributeType273, align 8
  br label %checkAttListDeclHandler

sw.bb.274:                                        ; preds = %if.end.33
  %287 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType275 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %287, i32 0, i32 58
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @doProlog.atypeIDREFS, i32 0, i32 0), i8** %m_declAttributeType275, align 8
  br label %checkAttListDeclHandler

sw.bb.276:                                        ; preds = %if.end.33
  %288 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType277 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %288, i32 0, i32 58
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @doProlog.atypeENTITY, i32 0, i32 0), i8** %m_declAttributeType277, align 8
  br label %checkAttListDeclHandler

sw.bb.278:                                        ; preds = %if.end.33
  %289 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType279 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %289, i32 0, i32 58
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @doProlog.atypeENTITIES, i32 0, i32 0), i8** %m_declAttributeType279, align 8
  br label %checkAttListDeclHandler

sw.bb.280:                                        ; preds = %if.end.33
  %290 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType281 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %290, i32 0, i32 58
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @doProlog.atypeNMTOKEN, i32 0, i32 0), i8** %m_declAttributeType281, align 8
  br label %checkAttListDeclHandler

sw.bb.282:                                        ; preds = %if.end.33
  %291 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType283 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %291, i32 0, i32 58
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @doProlog.atypeNMTOKENS, i32 0, i32 0), i8** %m_declAttributeType283, align 8
  br label %checkAttListDeclHandler

checkAttListDeclHandler:                          ; preds = %sw.bb.282, %sw.bb.280, %sw.bb.278, %sw.bb.276, %sw.bb.274, %sw.bb.272, %sw.bb.269, %sw.bb.266, %if.end.265, %if.end.259
  %292 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing284 = getelementptr inbounds %struct.DTD, %struct.DTD* %292, i32 0, i32 6
  %293 = load i8, i8* %keepProcessing284, align 1
  %conv285 = zext i8 %293 to i32
  %tobool286 = icmp ne i32 %conv285, 0
  br i1 %tobool286, label %land.lhs.true.287, label %if.end.290

land.lhs.true.287:                                ; preds = %checkAttListDeclHandler
  %294 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attlistDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %294, i32 0, i32 31
  %295 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler, align 8
  %tobool288 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %295, null
  br i1 %tobool288, label %if.then.289, label %if.end.290

if.then.289:                                      ; preds = %land.lhs.true.287
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.290

if.end.290:                                       ; preds = %if.then.289, %land.lhs.true.287, %checkAttListDeclHandler
  br label %sw.epilog.1405

sw.bb.291:                                        ; preds = %if.end.33, %if.end.33
  %296 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing292 = getelementptr inbounds %struct.DTD, %struct.DTD* %296, i32 0, i32 6
  %297 = load i8, i8* %keepProcessing292, align 1
  %conv293 = zext i8 %297 to i32
  %tobool294 = icmp ne i32 %conv293, 0
  br i1 %tobool294, label %land.lhs.true.295, label %if.end.319

land.lhs.true.295:                                ; preds = %sw.bb.291
  %298 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attlistDeclHandler296 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %298, i32 0, i32 31
  %299 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler296, align 8
  %tobool297 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %299, null
  br i1 %tobool297, label %if.then.298, label %if.end.319

if.then.298:                                      ; preds = %land.lhs.true.295
  %300 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType299 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %300, i32 0, i32 58
  %301 = load i8*, i8** %m_declAttributeType299, align 8
  %tobool300 = icmp ne i8* %301, null
  br i1 %tobool300, label %if.then.301, label %if.else.302

if.then.301:                                      ; preds = %if.then.298
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.enumValueSep, i32 0, i32 0), i8** %prefix, align 8
  br label %if.end.305

if.else.302:                                      ; preds = %if.then.298
  %302 = load i32, i32* %role, align 4
  %cmp303 = icmp eq i32 %302, 32
  %cond = select i1 %cmp303, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @doProlog.notationPrefix, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.enumValueStart, i32 0, i32 0)
  store i8* %cond, i8** %prefix, align 8
  br label %if.end.305

if.end.305:                                       ; preds = %if.else.302, %if.then.301
  %303 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool306 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %303, i32 0, i32 79
  %304 = load i8*, i8** %prefix, align 8
  %call307 = call i8* @poolAppendString(%struct.STRING_POOL* %m_tempPool306, i8* %304)
  %tobool308 = icmp ne i8* %call307, null
  br i1 %tobool308, label %if.end.310, label %if.then.309

if.then.309:                                      ; preds = %if.end.305
  store i32 1, i32* %retval
  br label %return

if.end.310:                                       ; preds = %if.end.305
  %305 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool311 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %305, i32 0, i32 79
  %306 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %307 = load i8*, i8** %s.addr, align 8
  %308 = load i8*, i8** %next.addr, align 8
  %call312 = call i8* @poolAppend(%struct.STRING_POOL* %m_tempPool311, %struct.encoding* %306, i8* %307, i8* %308)
  %tobool313 = icmp ne i8* %call312, null
  br i1 %tobool313, label %if.end.315, label %if.then.314

if.then.314:                                      ; preds = %if.end.310
  store i32 1, i32* %retval
  br label %return

if.end.315:                                       ; preds = %if.end.310
  %309 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool316 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %309, i32 0, i32 79
  %start317 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool316, i32 0, i32 4
  %310 = load i8*, i8** %start317, align 8
  %311 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType318 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %311, i32 0, i32 58
  store i8* %310, i8** %m_declAttributeType318, align 8
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.319

if.end.319:                                       ; preds = %if.end.315, %land.lhs.true.295, %sw.bb.291
  br label %sw.epilog.1405

sw.bb.320:                                        ; preds = %if.end.33, %if.end.33
  %312 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing321 = getelementptr inbounds %struct.DTD, %struct.DTD* %312, i32 0, i32 6
  %313 = load i8, i8* %keepProcessing321, align 1
  %tobool322 = icmp ne i8 %313, 0
  br i1 %tobool322, label %if.then.323, label %if.end.401

if.then.323:                                      ; preds = %sw.bb.320
  %314 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declElementType324 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %314, i32 0, i32 61
  %315 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType324, align 8
  %316 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeId325 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %316, i32 0, i32 62
  %317 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId325, align 8
  %318 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeIsCdata326 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %318, i32 0, i32 63
  %319 = load i8, i8* %m_declAttributeIsCdata326, align 1
  %320 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeIsId327 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %320, i32 0, i32 64
  %321 = load i8, i8* %m_declAttributeIsId327, align 1
  %322 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call328 = call i32 @defineAttribute(%struct.ELEMENT_TYPE* %315, %struct.attribute_id* %317, i8 zeroext %319, i8 zeroext %321, i8* null, %struct.XML_ParserStruct* %322)
  %tobool329 = icmp ne i32 %call328, 0
  br i1 %tobool329, label %if.end.331, label %if.then.330

if.then.330:                                      ; preds = %if.then.323
  store i32 1, i32* %retval
  br label %return

if.end.331:                                       ; preds = %if.then.323
  %323 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attlistDeclHandler332 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %323, i32 0, i32 31
  %324 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler332, align 8
  %tobool333 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %324, null
  br i1 %tobool333, label %land.lhs.true.334, label %if.end.400

land.lhs.true.334:                                ; preds = %if.end.331
  %325 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType335 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %325, i32 0, i32 58
  %326 = load i8*, i8** %m_declAttributeType335, align 8
  %tobool336 = icmp ne i8* %326, null
  br i1 %tobool336, label %if.then.337, label %if.end.400

if.then.337:                                      ; preds = %land.lhs.true.334
  %327 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType338 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %327, i32 0, i32 58
  %328 = load i8*, i8** %m_declAttributeType338, align 8
  %329 = load i8, i8* %328, align 1
  %conv339 = sext i8 %329 to i32
  %cmp340 = icmp eq i32 %conv339, 40
  br i1 %cmp340, label %if.then.352, label %lor.lhs.false.342

lor.lhs.false.342:                                ; preds = %if.then.337
  %330 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType343 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %330, i32 0, i32 58
  %331 = load i8*, i8** %m_declAttributeType343, align 8
  %332 = load i8, i8* %331, align 1
  %conv344 = sext i8 %332 to i32
  %cmp345 = icmp eq i32 %conv344, 78
  br i1 %cmp345, label %land.lhs.true.347, label %if.end.390

land.lhs.true.347:                                ; preds = %lor.lhs.false.342
  %333 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType348 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %333, i32 0, i32 58
  %334 = load i8*, i8** %m_declAttributeType348, align 8
  %arrayidx = getelementptr i8, i8* %334, i64 1
  %335 = load i8, i8* %arrayidx, align 1
  %conv349 = sext i8 %335 to i32
  %cmp350 = icmp eq i32 %conv349, 79
  br i1 %cmp350, label %if.then.352, label %if.end.390

if.then.352:                                      ; preds = %land.lhs.true.347, %if.then.337
  %336 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool353 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %336, i32 0, i32 79
  %ptr354 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool353, i32 0, i32 3
  %337 = load i8*, i8** %ptr354, align 8
  %338 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool355 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %338, i32 0, i32 79
  %end356 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool355, i32 0, i32 2
  %339 = load i8*, i8** %end356, align 8
  %cmp357 = icmp eq i8* %337, %339
  br i1 %cmp357, label %land.lhs.true.359, label %cond.false

land.lhs.true.359:                                ; preds = %if.then.352
  %340 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool360 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %340, i32 0, i32 79
  %call361 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool360)
  %tobool362 = icmp ne i8 %call361, 0
  br i1 %tobool362, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true.359
  br i1 false, label %lor.lhs.false.365, label %if.then.381

cond.false:                                       ; preds = %land.lhs.true.359, %if.then.352
  %341 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool363 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %341, i32 0, i32 79
  %ptr364 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool363, i32 0, i32 3
  %342 = load i8*, i8** %ptr364, align 8
  %incdec.ptr = getelementptr i8, i8* %342, i32 1
  store i8* %incdec.ptr, i8** %ptr364, align 8
  store i8 41, i8* %342, align 1
  br i1 true, label %lor.lhs.false.365, label %if.then.381

lor.lhs.false.365:                                ; preds = %cond.false, %cond.true
  %343 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool366 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %343, i32 0, i32 79
  %ptr367 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool366, i32 0, i32 3
  %344 = load i8*, i8** %ptr367, align 8
  %345 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool368 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %345, i32 0, i32 79
  %end369 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool368, i32 0, i32 2
  %346 = load i8*, i8** %end369, align 8
  %cmp370 = icmp eq i8* %344, %346
  br i1 %cmp370, label %land.lhs.true.372, label %cond.false.377

land.lhs.true.372:                                ; preds = %lor.lhs.false.365
  %347 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool373 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %347, i32 0, i32 79
  %call374 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool373)
  %tobool375 = icmp ne i8 %call374, 0
  br i1 %tobool375, label %cond.false.377, label %cond.true.376

cond.true.376:                                    ; preds = %land.lhs.true.372
  br i1 false, label %if.end.382, label %if.then.381

cond.false.377:                                   ; preds = %land.lhs.true.372, %lor.lhs.false.365
  %348 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool378 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %348, i32 0, i32 79
  %ptr379 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool378, i32 0, i32 3
  %349 = load i8*, i8** %ptr379, align 8
  %incdec.ptr380 = getelementptr i8, i8* %349, i32 1
  store i8* %incdec.ptr380, i8** %ptr379, align 8
  store i8 0, i8* %349, align 1
  br i1 true, label %if.end.382, label %if.then.381

if.then.381:                                      ; preds = %cond.false.377, %cond.true.376, %cond.false, %cond.true
  store i32 1, i32* %retval
  br label %return

if.end.382:                                       ; preds = %cond.false.377, %cond.true.376
  %350 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool383 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %350, i32 0, i32 79
  %start384 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool383, i32 0, i32 4
  %351 = load i8*, i8** %start384, align 8
  %352 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType385 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %352, i32 0, i32 58
  store i8* %351, i8** %m_declAttributeType385, align 8
  %353 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool386 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %353, i32 0, i32 79
  %ptr387 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool386, i32 0, i32 3
  %354 = load i8*, i8** %ptr387, align 8
  %355 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool388 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %355, i32 0, i32 79
  %start389 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool388, i32 0, i32 4
  store i8* %354, i8** %start389, align 8
  br label %if.end.390

if.end.390:                                       ; preds = %if.end.382, %land.lhs.true.347, %lor.lhs.false.342
  %356 = load i8*, i8** %s.addr, align 8
  %357 = load i8**, i8*** %eventEndPP, align 8
  store i8* %356, i8** %357, align 8
  %358 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attlistDeclHandler391 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %358, i32 0, i32 31
  %359 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler391, align 8
  %360 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg392 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %360, i32 0, i32 1
  %361 = load i8*, i8** %m_handlerArg392, align 8
  %362 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declElementType393 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %362, i32 0, i32 61
  %363 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType393, align 8
  %name = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %363, i32 0, i32 0
  %364 = load i8*, i8** %name, align 8
  %365 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeId394 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %365, i32 0, i32 62
  %366 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId394, align 8
  %name395 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %366, i32 0, i32 0
  %367 = load i8*, i8** %name395, align 8
  %368 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType396 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %368, i32 0, i32 58
  %369 = load i8*, i8** %m_declAttributeType396, align 8
  %370 = load i32, i32* %role, align 4
  %cmp397 = icmp eq i32 %370, 36
  %conv398 = zext i1 %cmp397 to i32
  call void %359(i8* %361, i8* %364, i8* %367, i8* %369, i8* null, i32 %conv398)
  %371 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool399 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %371, i32 0, i32 79
  call void @poolClear(%struct.STRING_POOL* %m_tempPool399)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.400

if.end.400:                                       ; preds = %if.end.390, %land.lhs.true.334, %if.end.331
  br label %if.end.401

if.end.401:                                       ; preds = %if.end.400, %sw.bb.320
  br label %sw.epilog.1405

sw.bb.402:                                        ; preds = %if.end.33, %if.end.33
  %372 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing403 = getelementptr inbounds %struct.DTD, %struct.DTD* %372, i32 0, i32 6
  %373 = load i8, i8* %keepProcessing403, align 1
  %tobool404 = icmp ne i8 %373, 0
  br i1 %tobool404, label %if.then.405, label %if.end.507

if.then.405:                                      ; preds = %sw.bb.402
  %374 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %375 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %376 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeIsCdata407 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %376, i32 0, i32 63
  %377 = load i8, i8* %m_declAttributeIsCdata407, align 1
  %378 = load i8*, i8** %s.addr, align 8
  %379 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar408 = getelementptr inbounds %struct.encoding, %struct.encoding* %379, i32 0, i32 13
  %380 = load i32, i32* %minBytesPerChar408, align 4
  %idx.ext409 = sext i32 %380 to i64
  %add.ptr410 = getelementptr i8, i8* %378, i64 %idx.ext409
  %381 = load i8*, i8** %next.addr, align 8
  %382 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar411 = getelementptr inbounds %struct.encoding, %struct.encoding* %382, i32 0, i32 13
  %383 = load i32, i32* %minBytesPerChar411, align 4
  %idx.ext412 = sext i32 %383 to i64
  %idx.neg413 = sub i64 0, %idx.ext412
  %add.ptr414 = getelementptr i8, i8* %381, i64 %idx.neg413
  %384 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool415 = getelementptr inbounds %struct.DTD, %struct.DTD* %384, i32 0, i32 4
  %call416 = call i32 @storeAttributeValue(%struct.XML_ParserStruct* %374, %struct.encoding* %375, i8 zeroext %377, i8* %add.ptr410, i8* %add.ptr414, %struct.STRING_POOL* %pool415)
  store i32 %call416, i32* %result406, align 4
  %385 = load i32, i32* %result406, align 4
  %tobool417 = icmp ne i32 %385, 0
  br i1 %tobool417, label %if.then.418, label %if.end.419

if.then.418:                                      ; preds = %if.then.405
  %386 = load i32, i32* %result406, align 4
  store i32 %386, i32* %retval
  br label %return

if.end.419:                                       ; preds = %if.then.405
  %387 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool420 = getelementptr inbounds %struct.DTD, %struct.DTD* %387, i32 0, i32 4
  %start421 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool420, i32 0, i32 4
  %388 = load i8*, i8** %start421, align 8
  store i8* %388, i8** %attVal, align 8
  %389 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool422 = getelementptr inbounds %struct.DTD, %struct.DTD* %389, i32 0, i32 4
  %ptr423 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool422, i32 0, i32 3
  %390 = load i8*, i8** %ptr423, align 8
  %391 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool424 = getelementptr inbounds %struct.DTD, %struct.DTD* %391, i32 0, i32 4
  %start425 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool424, i32 0, i32 4
  store i8* %390, i8** %start425, align 8
  %392 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declElementType426 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %392, i32 0, i32 61
  %393 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType426, align 8
  %394 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeId427 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %394, i32 0, i32 62
  %395 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId427, align 8
  %396 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeIsCdata428 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %396, i32 0, i32 63
  %397 = load i8, i8* %m_declAttributeIsCdata428, align 1
  %398 = load i8*, i8** %attVal, align 8
  %399 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call429 = call i32 @defineAttribute(%struct.ELEMENT_TYPE* %393, %struct.attribute_id* %395, i8 zeroext %397, i8 zeroext 0, i8* %398, %struct.XML_ParserStruct* %399)
  %tobool430 = icmp ne i32 %call429, 0
  br i1 %tobool430, label %if.end.432, label %if.then.431

if.then.431:                                      ; preds = %if.end.419
  store i32 1, i32* %retval
  br label %return

if.end.432:                                       ; preds = %if.end.419
  %400 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attlistDeclHandler433 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %400, i32 0, i32 31
  %401 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler433, align 8
  %tobool434 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %401, null
  br i1 %tobool434, label %land.lhs.true.435, label %if.end.506

land.lhs.true.435:                                ; preds = %if.end.432
  %402 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType436 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %402, i32 0, i32 58
  %403 = load i8*, i8** %m_declAttributeType436, align 8
  %tobool437 = icmp ne i8* %403, null
  br i1 %tobool437, label %if.then.438, label %if.end.506

if.then.438:                                      ; preds = %land.lhs.true.435
  %404 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType439 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %404, i32 0, i32 58
  %405 = load i8*, i8** %m_declAttributeType439, align 8
  %406 = load i8, i8* %405, align 1
  %conv440 = sext i8 %406 to i32
  %cmp441 = icmp eq i32 %conv440, 40
  br i1 %cmp441, label %if.then.454, label %lor.lhs.false.443

lor.lhs.false.443:                                ; preds = %if.then.438
  %407 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType444 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %407, i32 0, i32 58
  %408 = load i8*, i8** %m_declAttributeType444, align 8
  %409 = load i8, i8* %408, align 1
  %conv445 = sext i8 %409 to i32
  %cmp446 = icmp eq i32 %conv445, 78
  br i1 %cmp446, label %land.lhs.true.448, label %if.end.495

land.lhs.true.448:                                ; preds = %lor.lhs.false.443
  %410 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType449 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %410, i32 0, i32 58
  %411 = load i8*, i8** %m_declAttributeType449, align 8
  %arrayidx450 = getelementptr i8, i8* %411, i64 1
  %412 = load i8, i8* %arrayidx450, align 1
  %conv451 = sext i8 %412 to i32
  %cmp452 = icmp eq i32 %conv451, 79
  br i1 %cmp452, label %if.then.454, label %if.end.495

if.then.454:                                      ; preds = %land.lhs.true.448, %if.then.438
  %413 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool455 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %413, i32 0, i32 79
  %ptr456 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool455, i32 0, i32 3
  %414 = load i8*, i8** %ptr456, align 8
  %415 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool457 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %415, i32 0, i32 79
  %end458 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool457, i32 0, i32 2
  %416 = load i8*, i8** %end458, align 8
  %cmp459 = icmp eq i8* %414, %416
  br i1 %cmp459, label %land.lhs.true.461, label %cond.false.466

land.lhs.true.461:                                ; preds = %if.then.454
  %417 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool462 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %417, i32 0, i32 79
  %call463 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool462)
  %tobool464 = icmp ne i8 %call463, 0
  br i1 %tobool464, label %cond.false.466, label %cond.true.465

cond.true.465:                                    ; preds = %land.lhs.true.461
  br i1 false, label %lor.lhs.false.470, label %if.then.486

cond.false.466:                                   ; preds = %land.lhs.true.461, %if.then.454
  %418 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool467 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %418, i32 0, i32 79
  %ptr468 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool467, i32 0, i32 3
  %419 = load i8*, i8** %ptr468, align 8
  %incdec.ptr469 = getelementptr i8, i8* %419, i32 1
  store i8* %incdec.ptr469, i8** %ptr468, align 8
  store i8 41, i8* %419, align 1
  br i1 true, label %lor.lhs.false.470, label %if.then.486

lor.lhs.false.470:                                ; preds = %cond.false.466, %cond.true.465
  %420 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool471 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %420, i32 0, i32 79
  %ptr472 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool471, i32 0, i32 3
  %421 = load i8*, i8** %ptr472, align 8
  %422 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool473 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %422, i32 0, i32 79
  %end474 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool473, i32 0, i32 2
  %423 = load i8*, i8** %end474, align 8
  %cmp475 = icmp eq i8* %421, %423
  br i1 %cmp475, label %land.lhs.true.477, label %cond.false.482

land.lhs.true.477:                                ; preds = %lor.lhs.false.470
  %424 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool478 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %424, i32 0, i32 79
  %call479 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool478)
  %tobool480 = icmp ne i8 %call479, 0
  br i1 %tobool480, label %cond.false.482, label %cond.true.481

cond.true.481:                                    ; preds = %land.lhs.true.477
  br i1 false, label %if.end.487, label %if.then.486

cond.false.482:                                   ; preds = %land.lhs.true.477, %lor.lhs.false.470
  %425 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool483 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %425, i32 0, i32 79
  %ptr484 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool483, i32 0, i32 3
  %426 = load i8*, i8** %ptr484, align 8
  %incdec.ptr485 = getelementptr i8, i8* %426, i32 1
  store i8* %incdec.ptr485, i8** %ptr484, align 8
  store i8 0, i8* %426, align 1
  br i1 true, label %if.end.487, label %if.then.486

if.then.486:                                      ; preds = %cond.false.482, %cond.true.481, %cond.false.466, %cond.true.465
  store i32 1, i32* %retval
  br label %return

if.end.487:                                       ; preds = %cond.false.482, %cond.true.481
  %427 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool488 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %427, i32 0, i32 79
  %start489 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool488, i32 0, i32 4
  %428 = load i8*, i8** %start489, align 8
  %429 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType490 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %429, i32 0, i32 58
  store i8* %428, i8** %m_declAttributeType490, align 8
  %430 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool491 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %430, i32 0, i32 79
  %ptr492 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool491, i32 0, i32 3
  %431 = load i8*, i8** %ptr492, align 8
  %432 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool493 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %432, i32 0, i32 79
  %start494 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool493, i32 0, i32 4
  store i8* %431, i8** %start494, align 8
  br label %if.end.495

if.end.495:                                       ; preds = %if.end.487, %land.lhs.true.448, %lor.lhs.false.443
  %433 = load i8*, i8** %s.addr, align 8
  %434 = load i8**, i8*** %eventEndPP, align 8
  store i8* %433, i8** %434, align 8
  %435 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attlistDeclHandler496 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %435, i32 0, i32 31
  %436 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler496, align 8
  %437 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg497 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %437, i32 0, i32 1
  %438 = load i8*, i8** %m_handlerArg497, align 8
  %439 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declElementType498 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %439, i32 0, i32 61
  %440 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType498, align 8
  %name499 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %440, i32 0, i32 0
  %441 = load i8*, i8** %name499, align 8
  %442 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeId500 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %442, i32 0, i32 62
  %443 = load %struct.attribute_id*, %struct.attribute_id** %m_declAttributeId500, align 8
  %name501 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %443, i32 0, i32 0
  %444 = load i8*, i8** %name501, align 8
  %445 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declAttributeType502 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %445, i32 0, i32 58
  %446 = load i8*, i8** %m_declAttributeType502, align 8
  %447 = load i8*, i8** %attVal, align 8
  %448 = load i32, i32* %role, align 4
  %cmp503 = icmp eq i32 %448, 38
  %conv504 = zext i1 %cmp503 to i32
  call void %436(i8* %438, i8* %441, i8* %444, i8* %446, i8* %447, i32 %conv504)
  %449 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool505 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %449, i32 0, i32 79
  call void @poolClear(%struct.STRING_POOL* %m_tempPool505)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.506

if.end.506:                                       ; preds = %if.end.495, %land.lhs.true.435, %if.end.432
  br label %if.end.507

if.end.507:                                       ; preds = %if.end.506, %sw.bb.402
  br label %sw.epilog.1405

sw.bb.508:                                        ; preds = %if.end.33
  %450 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing509 = getelementptr inbounds %struct.DTD, %struct.DTD* %450, i32 0, i32 6
  %451 = load i8, i8* %keepProcessing509, align 1
  %tobool510 = icmp ne i8 %451, 0
  br i1 %tobool510, label %if.then.511, label %if.end.561

if.then.511:                                      ; preds = %sw.bb.508
  %452 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %453 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %454 = load i8*, i8** %s.addr, align 8
  %455 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar513 = getelementptr inbounds %struct.encoding, %struct.encoding* %455, i32 0, i32 13
  %456 = load i32, i32* %minBytesPerChar513, align 4
  %idx.ext514 = sext i32 %456 to i64
  %add.ptr515 = getelementptr i8, i8* %454, i64 %idx.ext514
  %457 = load i8*, i8** %next.addr, align 8
  %458 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar516 = getelementptr inbounds %struct.encoding, %struct.encoding* %458, i32 0, i32 13
  %459 = load i32, i32* %minBytesPerChar516, align 4
  %idx.ext517 = sext i32 %459 to i64
  %idx.neg518 = sub i64 0, %idx.ext517
  %add.ptr519 = getelementptr i8, i8* %457, i64 %idx.neg518
  %call520 = call i32 @storeEntityValue(%struct.XML_ParserStruct* %452, %struct.encoding* %453, i8* %add.ptr515, i8* %add.ptr519)
  store i32 %call520, i32* %result512, align 4
  %460 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity521 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %460, i32 0, i32 54
  %461 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity521, align 8
  %tobool522 = icmp ne %struct.ENTITY* %461, null
  br i1 %tobool522, label %if.then.523, label %if.else.551

if.then.523:                                      ; preds = %if.then.511
  %462 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %462, i32 0, i32 5
  %start524 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool, i32 0, i32 4
  %463 = load i8*, i8** %start524, align 8
  %464 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity525 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %464, i32 0, i32 54
  %465 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity525, align 8
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %465, i32 0, i32 1
  store i8* %463, i8** %textPtr, align 8
  %466 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %entityValuePool526 = getelementptr inbounds %struct.DTD, %struct.DTD* %466, i32 0, i32 5
  %ptr527 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool526, i32 0, i32 3
  %467 = load i8*, i8** %ptr527, align 8
  %468 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %entityValuePool528 = getelementptr inbounds %struct.DTD, %struct.DTD* %468, i32 0, i32 5
  %start529 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool528, i32 0, i32 4
  %469 = load i8*, i8** %start529, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %467 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %469 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv530 = trunc i64 %sub.ptr.sub to i32
  %470 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity531 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %470, i32 0, i32 54
  %471 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity531, align 8
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %471, i32 0, i32 2
  store i32 %conv530, i32* %textLen, align 4
  %472 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %entityValuePool532 = getelementptr inbounds %struct.DTD, %struct.DTD* %472, i32 0, i32 5
  %ptr533 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool532, i32 0, i32 3
  %473 = load i8*, i8** %ptr533, align 8
  %474 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %entityValuePool534 = getelementptr inbounds %struct.DTD, %struct.DTD* %474, i32 0, i32 5
  %start535 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool534, i32 0, i32 4
  store i8* %473, i8** %start535, align 8
  %475 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler536 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %475, i32 0, i32 32
  %476 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler536, align 8
  %tobool537 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %476, null
  br i1 %tobool537, label %if.then.538, label %if.end.550

if.then.538:                                      ; preds = %if.then.523
  %477 = load i8*, i8** %s.addr, align 8
  %478 = load i8**, i8*** %eventEndPP, align 8
  store i8* %477, i8** %478, align 8
  %479 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler539 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %479, i32 0, i32 32
  %480 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler539, align 8
  %481 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg540 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %481, i32 0, i32 1
  %482 = load i8*, i8** %m_handlerArg540, align 8
  %483 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity541 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %483, i32 0, i32 54
  %484 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity541, align 8
  %name542 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %484, i32 0, i32 0
  %485 = load i8*, i8** %name542, align 8
  %486 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity543 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %486, i32 0, i32 54
  %487 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity543, align 8
  %is_param = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %487, i32 0, i32 9
  %488 = load i8, i8* %is_param, align 1
  %conv544 = zext i8 %488 to i32
  %489 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity545 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %489, i32 0, i32 54
  %490 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity545, align 8
  %textPtr546 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %490, i32 0, i32 1
  %491 = load i8*, i8** %textPtr546, align 8
  %492 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity547 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %492, i32 0, i32 54
  %493 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity547, align 8
  %textLen548 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %493, i32 0, i32 2
  %494 = load i32, i32* %textLen548, align 4
  %495 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_curBase549 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %495, i32 0, i32 66
  %496 = load i8*, i8** %m_curBase549, align 8
  call void %480(i8* %482, i8* %485, i32 %conv544, i8* %491, i32 %494, i8* %496, i8* null, i8* null, i8* null)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.550

if.end.550:                                       ; preds = %if.then.538, %if.then.523
  br label %if.end.556

if.else.551:                                      ; preds = %if.then.511
  %497 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %entityValuePool552 = getelementptr inbounds %struct.DTD, %struct.DTD* %497, i32 0, i32 5
  %start553 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool552, i32 0, i32 4
  %498 = load i8*, i8** %start553, align 8
  %499 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %entityValuePool554 = getelementptr inbounds %struct.DTD, %struct.DTD* %499, i32 0, i32 5
  %ptr555 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %entityValuePool554, i32 0, i32 3
  store i8* %498, i8** %ptr555, align 8
  br label %if.end.556

if.end.556:                                       ; preds = %if.else.551, %if.end.550
  %500 = load i32, i32* %result512, align 4
  %cmp557 = icmp ne i32 %500, 0
  br i1 %cmp557, label %if.then.559, label %if.end.560

if.then.559:                                      ; preds = %if.end.556
  %501 = load i32, i32* %result512, align 4
  store i32 %501, i32* %retval
  br label %return

if.end.560:                                       ; preds = %if.end.556
  br label %if.end.561

if.end.561:                                       ; preds = %if.end.560, %sw.bb.508
  br label %sw.epilog.1405

sw.bb.562:                                        ; preds = %if.end.33
  %502 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_useForeignDTD563 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %502, i32 0, i32 87
  store i8 0, i8* %m_useForeignDTD563, align 1
  %503 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs564 = getelementptr inbounds %struct.DTD, %struct.DTD* %503, i32 0, i32 7
  store i8 1, i8* %hasParamEntityRefs564, align 1
  %504 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startDoctypeDeclHandler565 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %504, i32 0, i32 19
  %505 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler565, align 8
  %tobool566 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %505, null
  br i1 %tobool566, label %if.then.567, label %if.else.587

if.then.567:                                      ; preds = %sw.bb.562
  %506 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool568 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %506, i32 0, i32 79
  %507 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %508 = load i8*, i8** %s.addr, align 8
  %509 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar569 = getelementptr inbounds %struct.encoding, %struct.encoding* %509, i32 0, i32 13
  %510 = load i32, i32* %minBytesPerChar569, align 4
  %idx.ext570 = sext i32 %510 to i64
  %add.ptr571 = getelementptr i8, i8* %508, i64 %idx.ext570
  %511 = load i8*, i8** %next.addr, align 8
  %512 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar572 = getelementptr inbounds %struct.encoding, %struct.encoding* %512, i32 0, i32 13
  %513 = load i32, i32* %minBytesPerChar572, align 4
  %idx.ext573 = sext i32 %513 to i64
  %idx.neg574 = sub i64 0, %idx.ext573
  %add.ptr575 = getelementptr i8, i8* %511, i64 %idx.neg574
  %call576 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool568, %struct.encoding* %507, i8* %add.ptr571, i8* %add.ptr575)
  %514 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeSysid577 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %514, i32 0, i32 56
  store i8* %call576, i8** %m_doctypeSysid577, align 8
  %515 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeSysid578 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %515, i32 0, i32 56
  %516 = load i8*, i8** %m_doctypeSysid578, align 8
  %cmp579 = icmp eq i8* %516, null
  br i1 %cmp579, label %if.then.581, label %if.end.582

if.then.581:                                      ; preds = %if.then.567
  store i32 1, i32* %retval
  br label %return

if.end.582:                                       ; preds = %if.then.567
  %517 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool583 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %517, i32 0, i32 79
  %ptr584 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool583, i32 0, i32 3
  %518 = load i8*, i8** %ptr584, align 8
  %519 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool585 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %519, i32 0, i32 79
  %start586 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool585, i32 0, i32 4
  store i8* %518, i8** %start586, align 8
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.589

if.else.587:                                      ; preds = %sw.bb.562
  %520 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_doctypeSysid588 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %520, i32 0, i32 56
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.externalSubsetName, i32 0, i32 0), i8** %m_doctypeSysid588, align 8
  br label %if.end.589

if.end.589:                                       ; preds = %if.else.587, %if.end.582
  %521 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone590 = getelementptr inbounds %struct.DTD, %struct.DTD* %521, i32 0, i32 8
  %522 = load i8, i8* %standalone590, align 1
  %tobool591 = icmp ne i8 %522, 0
  br i1 %tobool591, label %if.end.604, label %land.lhs.true.592

land.lhs.true.592:                                ; preds = %if.end.589
  %523 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_paramEntityParsing593 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %523, i32 0, i32 88
  %524 = load i32, i32* %m_paramEntityParsing593, align 4
  %tobool594 = icmp ne i32 %524, 0
  br i1 %tobool594, label %if.end.604, label %land.lhs.true.595

land.lhs.true.595:                                ; preds = %land.lhs.true.592
  %525 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notStandaloneHandler596 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %525, i32 0, i32 25
  %526 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler596, align 8
  %tobool597 = icmp ne i32 (i8*)* %526, null
  br i1 %tobool597, label %land.lhs.true.598, label %if.end.604

land.lhs.true.598:                                ; preds = %land.lhs.true.595
  %527 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notStandaloneHandler599 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %527, i32 0, i32 25
  %528 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler599, align 8
  %529 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg600 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %529, i32 0, i32 1
  %530 = load i8*, i8** %m_handlerArg600, align 8
  %call601 = call i32 %528(i8* %530)
  %tobool602 = icmp ne i32 %call601, 0
  br i1 %tobool602, label %if.end.604, label %if.then.603

if.then.603:                                      ; preds = %land.lhs.true.598
  store i32 22, i32* %retval
  br label %return

if.end.604:                                       ; preds = %land.lhs.true.598, %land.lhs.true.595, %land.lhs.true.592, %if.end.589
  %531 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity605 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %531, i32 0, i32 54
  %532 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity605, align 8
  %tobool606 = icmp ne %struct.ENTITY* %532, null
  br i1 %tobool606, label %if.end.617, label %if.then.607

if.then.607:                                      ; preds = %if.end.604
  %533 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %534 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntities608 = getelementptr inbounds %struct.DTD, %struct.DTD* %534, i32 0, i32 10
  %call609 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %533, %struct.HASH_TABLE* %paramEntities608, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @doProlog.externalSubsetName, i32 0, i32 0), i64 64)
  %535 = bitcast %struct.NAMED* %call609 to %struct.ENTITY*
  %536 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity610 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %536, i32 0, i32 54
  store %struct.ENTITY* %535, %struct.ENTITY** %m_declEntity610, align 8
  %537 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity611 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %537, i32 0, i32 54
  %538 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity611, align 8
  %tobool612 = icmp ne %struct.ENTITY* %538, null
  br i1 %tobool612, label %if.end.614, label %if.then.613

if.then.613:                                      ; preds = %if.then.607
  store i32 1, i32* %retval
  br label %return

if.end.614:                                       ; preds = %if.then.607
  %539 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity615 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %539, i32 0, i32 54
  %540 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity615, align 8
  %publicId616 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %540, i32 0, i32 6
  store i8* null, i8** %publicId616, align 8
  br label %if.end.617

if.end.617:                                       ; preds = %if.end.614, %if.end.604
  br label %sw.bb.618

sw.bb.618:                                        ; preds = %if.end.33, %if.end.617
  %541 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing619 = getelementptr inbounds %struct.DTD, %struct.DTD* %541, i32 0, i32 6
  %542 = load i8, i8* %keepProcessing619, align 1
  %conv620 = zext i8 %542 to i32
  %tobool621 = icmp ne i32 %conv620, 0
  br i1 %tobool621, label %land.lhs.true.622, label %if.end.653

land.lhs.true.622:                                ; preds = %sw.bb.618
  %543 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity623 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %543, i32 0, i32 54
  %544 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity623, align 8
  %tobool624 = icmp ne %struct.ENTITY* %544, null
  br i1 %tobool624, label %if.then.625, label %if.end.653

if.then.625:                                      ; preds = %land.lhs.true.622
  %545 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool626 = getelementptr inbounds %struct.DTD, %struct.DTD* %545, i32 0, i32 4
  %546 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %547 = load i8*, i8** %s.addr, align 8
  %548 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar627 = getelementptr inbounds %struct.encoding, %struct.encoding* %548, i32 0, i32 13
  %549 = load i32, i32* %minBytesPerChar627, align 4
  %idx.ext628 = sext i32 %549 to i64
  %add.ptr629 = getelementptr i8, i8* %547, i64 %idx.ext628
  %550 = load i8*, i8** %next.addr, align 8
  %551 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar630 = getelementptr inbounds %struct.encoding, %struct.encoding* %551, i32 0, i32 13
  %552 = load i32, i32* %minBytesPerChar630, align 4
  %idx.ext631 = sext i32 %552 to i64
  %idx.neg632 = sub i64 0, %idx.ext631
  %add.ptr633 = getelementptr i8, i8* %550, i64 %idx.neg632
  %call634 = call i8* @poolStoreString(%struct.STRING_POOL* %pool626, %struct.encoding* %546, i8* %add.ptr629, i8* %add.ptr633)
  %553 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity635 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %553, i32 0, i32 54
  %554 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity635, align 8
  %systemId636 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %554, i32 0, i32 4
  store i8* %call634, i8** %systemId636, align 8
  %555 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity637 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %555, i32 0, i32 54
  %556 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity637, align 8
  %systemId638 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %556, i32 0, i32 4
  %557 = load i8*, i8** %systemId638, align 8
  %tobool639 = icmp ne i8* %557, null
  br i1 %tobool639, label %if.end.641, label %if.then.640

if.then.640:                                      ; preds = %if.then.625
  store i32 1, i32* %retval
  br label %return

if.end.641:                                       ; preds = %if.then.625
  %558 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_curBase642 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %558, i32 0, i32 66
  %559 = load i8*, i8** %m_curBase642, align 8
  %560 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity643 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %560, i32 0, i32 54
  %561 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity643, align 8
  %base644 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %561, i32 0, i32 5
  store i8* %559, i8** %base644, align 8
  %562 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool645 = getelementptr inbounds %struct.DTD, %struct.DTD* %562, i32 0, i32 4
  %ptr646 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool645, i32 0, i32 3
  %563 = load i8*, i8** %ptr646, align 8
  %564 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool647 = getelementptr inbounds %struct.DTD, %struct.DTD* %564, i32 0, i32 4
  %start648 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool647, i32 0, i32 4
  store i8* %563, i8** %start648, align 8
  %565 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler649 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %565, i32 0, i32 32
  %566 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler649, align 8
  %tobool650 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %566, null
  br i1 %tobool650, label %if.then.651, label %if.end.652

if.then.651:                                      ; preds = %if.end.641
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.652

if.end.652:                                       ; preds = %if.then.651, %if.end.641
  br label %if.end.653

if.end.653:                                       ; preds = %if.end.652, %land.lhs.true.622, %sw.bb.618
  br label %sw.epilog.1405

sw.bb.654:                                        ; preds = %if.end.33
  %567 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing655 = getelementptr inbounds %struct.DTD, %struct.DTD* %567, i32 0, i32 6
  %568 = load i8, i8* %keepProcessing655, align 1
  %conv656 = zext i8 %568 to i32
  %tobool657 = icmp ne i32 %conv656, 0
  br i1 %tobool657, label %land.lhs.true.658, label %if.end.678

land.lhs.true.658:                                ; preds = %sw.bb.654
  %569 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity659 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %569, i32 0, i32 54
  %570 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity659, align 8
  %tobool660 = icmp ne %struct.ENTITY* %570, null
  br i1 %tobool660, label %land.lhs.true.661, label %if.end.678

land.lhs.true.661:                                ; preds = %land.lhs.true.658
  %571 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler662 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %571, i32 0, i32 32
  %572 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler662, align 8
  %tobool663 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %572, null
  br i1 %tobool663, label %if.then.664, label %if.end.678

if.then.664:                                      ; preds = %land.lhs.true.661
  %573 = load i8*, i8** %s.addr, align 8
  %574 = load i8**, i8*** %eventEndPP, align 8
  store i8* %573, i8** %574, align 8
  %575 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler665 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %575, i32 0, i32 32
  %576 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler665, align 8
  %577 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg666 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %577, i32 0, i32 1
  %578 = load i8*, i8** %m_handlerArg666, align 8
  %579 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity667 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %579, i32 0, i32 54
  %580 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity667, align 8
  %name668 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %580, i32 0, i32 0
  %581 = load i8*, i8** %name668, align 8
  %582 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity669 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %582, i32 0, i32 54
  %583 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity669, align 8
  %is_param670 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %583, i32 0, i32 9
  %584 = load i8, i8* %is_param670, align 1
  %conv671 = zext i8 %584 to i32
  %585 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity672 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %585, i32 0, i32 54
  %586 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity672, align 8
  %base673 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %586, i32 0, i32 5
  %587 = load i8*, i8** %base673, align 8
  %588 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity674 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %588, i32 0, i32 54
  %589 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity674, align 8
  %systemId675 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %589, i32 0, i32 4
  %590 = load i8*, i8** %systemId675, align 8
  %591 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity676 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %591, i32 0, i32 54
  %592 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity676, align 8
  %publicId677 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %592, i32 0, i32 6
  %593 = load i8*, i8** %publicId677, align 8
  call void %576(i8* %578, i8* %581, i32 %conv671, i8* null, i32 0, i8* %587, i8* %590, i8* %593, i8* null)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.678

if.end.678:                                       ; preds = %if.then.664, %land.lhs.true.661, %land.lhs.true.658, %sw.bb.654
  br label %sw.epilog.1405

sw.bb.679:                                        ; preds = %if.end.33
  %594 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing680 = getelementptr inbounds %struct.DTD, %struct.DTD* %594, i32 0, i32 6
  %595 = load i8, i8* %keepProcessing680, align 1
  %conv681 = zext i8 %595 to i32
  %tobool682 = icmp ne i32 %conv681, 0
  br i1 %tobool682, label %land.lhs.true.683, label %if.end.731

land.lhs.true.683:                                ; preds = %sw.bb.679
  %596 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity684 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %596, i32 0, i32 54
  %597 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity684, align 8
  %tobool685 = icmp ne %struct.ENTITY* %597, null
  br i1 %tobool685, label %if.then.686, label %if.end.731

if.then.686:                                      ; preds = %land.lhs.true.683
  %598 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool687 = getelementptr inbounds %struct.DTD, %struct.DTD* %598, i32 0, i32 4
  %599 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %600 = load i8*, i8** %s.addr, align 8
  %601 = load i8*, i8** %next.addr, align 8
  %call688 = call i8* @poolStoreString(%struct.STRING_POOL* %pool687, %struct.encoding* %599, i8* %600, i8* %601)
  %602 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity689 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %602, i32 0, i32 54
  %603 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity689, align 8
  %notation = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %603, i32 0, i32 7
  store i8* %call688, i8** %notation, align 8
  %604 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity690 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %604, i32 0, i32 54
  %605 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity690, align 8
  %notation691 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %605, i32 0, i32 7
  %606 = load i8*, i8** %notation691, align 8
  %tobool692 = icmp ne i8* %606, null
  br i1 %tobool692, label %if.end.694, label %if.then.693

if.then.693:                                      ; preds = %if.then.686
  store i32 1, i32* %retval
  br label %return

if.end.694:                                       ; preds = %if.then.686
  %607 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool695 = getelementptr inbounds %struct.DTD, %struct.DTD* %607, i32 0, i32 4
  %ptr696 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool695, i32 0, i32 3
  %608 = load i8*, i8** %ptr696, align 8
  %609 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool697 = getelementptr inbounds %struct.DTD, %struct.DTD* %609, i32 0, i32 4
  %start698 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool697, i32 0, i32 4
  store i8* %608, i8** %start698, align 8
  %610 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unparsedEntityDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %610, i32 0, i32 21
  %611 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler, align 8
  %tobool699 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i8*)* %611, null
  br i1 %tobool699, label %if.then.700, label %if.else.713

if.then.700:                                      ; preds = %if.end.694
  %612 = load i8*, i8** %s.addr, align 8
  %613 = load i8**, i8*** %eventEndPP, align 8
  store i8* %612, i8** %613, align 8
  %614 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_unparsedEntityDeclHandler701 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %614, i32 0, i32 21
  %615 = load void (i8*, i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*, i8*)** %m_unparsedEntityDeclHandler701, align 8
  %616 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg702 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %616, i32 0, i32 1
  %617 = load i8*, i8** %m_handlerArg702, align 8
  %618 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity703 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %618, i32 0, i32 54
  %619 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity703, align 8
  %name704 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %619, i32 0, i32 0
  %620 = load i8*, i8** %name704, align 8
  %621 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity705 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %621, i32 0, i32 54
  %622 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity705, align 8
  %base706 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %622, i32 0, i32 5
  %623 = load i8*, i8** %base706, align 8
  %624 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity707 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %624, i32 0, i32 54
  %625 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity707, align 8
  %systemId708 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %625, i32 0, i32 4
  %626 = load i8*, i8** %systemId708, align 8
  %627 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity709 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %627, i32 0, i32 54
  %628 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity709, align 8
  %publicId710 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %628, i32 0, i32 6
  %629 = load i8*, i8** %publicId710, align 8
  %630 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity711 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %630, i32 0, i32 54
  %631 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity711, align 8
  %notation712 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %631, i32 0, i32 7
  %632 = load i8*, i8** %notation712, align 8
  call void %615(i8* %617, i8* %620, i8* %623, i8* %626, i8* %629, i8* %632)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.730

if.else.713:                                      ; preds = %if.end.694
  %633 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler714 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %633, i32 0, i32 32
  %634 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler714, align 8
  %tobool715 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %634, null
  br i1 %tobool715, label %if.then.716, label %if.end.729

if.then.716:                                      ; preds = %if.else.713
  %635 = load i8*, i8** %s.addr, align 8
  %636 = load i8**, i8*** %eventEndPP, align 8
  store i8* %635, i8** %636, align 8
  %637 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler717 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %637, i32 0, i32 32
  %638 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler717, align 8
  %639 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg718 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %639, i32 0, i32 1
  %640 = load i8*, i8** %m_handlerArg718, align 8
  %641 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity719 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %641, i32 0, i32 54
  %642 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity719, align 8
  %name720 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %642, i32 0, i32 0
  %643 = load i8*, i8** %name720, align 8
  %644 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity721 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %644, i32 0, i32 54
  %645 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity721, align 8
  %base722 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %645, i32 0, i32 5
  %646 = load i8*, i8** %base722, align 8
  %647 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity723 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %647, i32 0, i32 54
  %648 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity723, align 8
  %systemId724 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %648, i32 0, i32 4
  %649 = load i8*, i8** %systemId724, align 8
  %650 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity725 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %650, i32 0, i32 54
  %651 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity725, align 8
  %publicId726 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %651, i32 0, i32 6
  %652 = load i8*, i8** %publicId726, align 8
  %653 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity727 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %653, i32 0, i32 54
  %654 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity727, align 8
  %notation728 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %654, i32 0, i32 7
  %655 = load i8*, i8** %notation728, align 8
  call void %638(i8* %640, i8* %643, i32 0, i8* null, i32 0, i8* %646, i8* %649, i8* %652, i8* %655)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.729

if.end.729:                                       ; preds = %if.then.716, %if.else.713
  br label %if.end.730

if.end.730:                                       ; preds = %if.end.729, %if.then.700
  br label %if.end.731

if.end.731:                                       ; preds = %if.end.730, %land.lhs.true.683, %sw.bb.679
  br label %sw.epilog.1405

sw.bb.732:                                        ; preds = %if.end.33
  %656 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %predefinedEntityName = getelementptr inbounds %struct.encoding, %struct.encoding* %656, i32 0, i32 8
  %657 = load i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*)** %predefinedEntityName, align 8
  %658 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %659 = load i8*, i8** %s.addr, align 8
  %660 = load i8*, i8** %next.addr, align 8
  %call733 = call i32 %657(%struct.encoding* %658, i8* %659, i8* %660)
  %tobool734 = icmp ne i32 %call733, 0
  br i1 %tobool734, label %if.then.735, label %if.end.737

if.then.735:                                      ; preds = %sw.bb.732
  %661 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity736 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %661, i32 0, i32 54
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity736, align 8
  br label %sw.epilog.1405

if.end.737:                                       ; preds = %sw.bb.732
  %662 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing738 = getelementptr inbounds %struct.DTD, %struct.DTD* %662, i32 0, i32 6
  %663 = load i8, i8* %keepProcessing738, align 1
  %tobool739 = icmp ne i8 %663, 0
  br i1 %tobool739, label %if.then.740, label %if.else.782

if.then.740:                                      ; preds = %if.end.737
  %664 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool742 = getelementptr inbounds %struct.DTD, %struct.DTD* %664, i32 0, i32 4
  %665 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %666 = load i8*, i8** %s.addr, align 8
  %667 = load i8*, i8** %next.addr, align 8
  %call743 = call i8* @poolStoreString(%struct.STRING_POOL* %pool742, %struct.encoding* %665, i8* %666, i8* %667)
  store i8* %call743, i8** %name741, align 8
  %668 = load i8*, i8** %name741, align 8
  %tobool744 = icmp ne i8* %668, null
  br i1 %tobool744, label %if.end.746, label %if.then.745

if.then.745:                                      ; preds = %if.then.740
  store i32 1, i32* %retval
  br label %return

if.end.746:                                       ; preds = %if.then.740
  %669 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %670 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %670, i32 0, i32 0
  %671 = load i8*, i8** %name741, align 8
  %call747 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %669, %struct.HASH_TABLE* %generalEntities, i8* %671, i64 64)
  %672 = bitcast %struct.NAMED* %call747 to %struct.ENTITY*
  %673 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity748 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %673, i32 0, i32 54
  store %struct.ENTITY* %672, %struct.ENTITY** %m_declEntity748, align 8
  %674 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity749 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %674, i32 0, i32 54
  %675 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity749, align 8
  %tobool750 = icmp ne %struct.ENTITY* %675, null
  br i1 %tobool750, label %if.end.752, label %if.then.751

if.then.751:                                      ; preds = %if.end.746
  store i32 1, i32* %retval
  br label %return

if.end.752:                                       ; preds = %if.end.746
  %676 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity753 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %676, i32 0, i32 54
  %677 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity753, align 8
  %name754 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %677, i32 0, i32 0
  %678 = load i8*, i8** %name754, align 8
  %679 = load i8*, i8** %name741, align 8
  %cmp755 = icmp ne i8* %678, %679
  br i1 %cmp755, label %if.then.757, label %if.else.763

if.then.757:                                      ; preds = %if.end.752
  %680 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool758 = getelementptr inbounds %struct.DTD, %struct.DTD* %680, i32 0, i32 4
  %start759 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool758, i32 0, i32 4
  %681 = load i8*, i8** %start759, align 8
  %682 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool760 = getelementptr inbounds %struct.DTD, %struct.DTD* %682, i32 0, i32 4
  %ptr761 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool760, i32 0, i32 3
  store i8* %681, i8** %ptr761, align 8
  %683 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity762 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %683, i32 0, i32 54
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity762, align 8
  br label %if.end.781

if.else.763:                                      ; preds = %if.end.752
  %684 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool764 = getelementptr inbounds %struct.DTD, %struct.DTD* %684, i32 0, i32 4
  %ptr765 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool764, i32 0, i32 3
  %685 = load i8*, i8** %ptr765, align 8
  %686 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool766 = getelementptr inbounds %struct.DTD, %struct.DTD* %686, i32 0, i32 4
  %start767 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool766, i32 0, i32 4
  store i8* %685, i8** %start767, align 8
  %687 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity768 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %687, i32 0, i32 54
  %688 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity768, align 8
  %publicId769 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %688, i32 0, i32 6
  store i8* null, i8** %publicId769, align 8
  %689 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity770 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %689, i32 0, i32 54
  %690 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity770, align 8
  %is_param771 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %690, i32 0, i32 9
  store i8 0, i8* %is_param771, align 1
  %691 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %691, i32 0, i32 84
  %692 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8
  %tobool772 = icmp ne %struct.XML_ParserStruct* %692, null
  br i1 %tobool772, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.else.763
  %693 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities773 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %693, i32 0, i32 50
  %694 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities773, align 8
  %tobool774 = icmp ne %struct.open_internal_entity* %694, null
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.else.763
  %695 = phi i1 [ true, %if.else.763 ], [ %tobool774, %lor.rhs ]
  %lnot = xor i1 %695, true
  %lnot.ext = zext i1 %lnot to i32
  %conv775 = trunc i32 %lnot.ext to i8
  %696 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity776 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %696, i32 0, i32 54
  %697 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity776, align 8
  %is_internal = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %697, i32 0, i32 10
  store i8 %conv775, i8* %is_internal, align 1
  %698 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler777 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %698, i32 0, i32 32
  %699 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler777, align 8
  %tobool778 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %699, null
  br i1 %tobool778, label %if.then.779, label %if.end.780

if.then.779:                                      ; preds = %lor.end
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.780

if.end.780:                                       ; preds = %if.then.779, %lor.end
  br label %if.end.781

if.end.781:                                       ; preds = %if.end.780, %if.then.757
  br label %if.end.788

if.else.782:                                      ; preds = %if.end.737
  %700 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool783 = getelementptr inbounds %struct.DTD, %struct.DTD* %700, i32 0, i32 4
  %start784 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool783, i32 0, i32 4
  %701 = load i8*, i8** %start784, align 8
  %702 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool785 = getelementptr inbounds %struct.DTD, %struct.DTD* %702, i32 0, i32 4
  %ptr786 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool785, i32 0, i32 3
  store i8* %701, i8** %ptr786, align 8
  %703 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity787 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %703, i32 0, i32 54
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity787, align 8
  br label %if.end.788

if.end.788:                                       ; preds = %if.else.782, %if.end.781
  br label %sw.epilog.1405

sw.bb.789:                                        ; preds = %if.end.33
  %704 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing790 = getelementptr inbounds %struct.DTD, %struct.DTD* %704, i32 0, i32 6
  %705 = load i8, i8* %keepProcessing790, align 1
  %tobool791 = icmp ne i8 %705, 0
  br i1 %tobool791, label %if.then.792, label %if.else.841

if.then.792:                                      ; preds = %sw.bb.789
  %706 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool794 = getelementptr inbounds %struct.DTD, %struct.DTD* %706, i32 0, i32 4
  %707 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %708 = load i8*, i8** %s.addr, align 8
  %709 = load i8*, i8** %next.addr, align 8
  %call795 = call i8* @poolStoreString(%struct.STRING_POOL* %pool794, %struct.encoding* %707, i8* %708, i8* %709)
  store i8* %call795, i8** %name793, align 8
  %710 = load i8*, i8** %name793, align 8
  %tobool796 = icmp ne i8* %710, null
  br i1 %tobool796, label %if.end.798, label %if.then.797

if.then.797:                                      ; preds = %if.then.792
  store i32 1, i32* %retval
  br label %return

if.end.798:                                       ; preds = %if.then.792
  %711 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %712 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntities799 = getelementptr inbounds %struct.DTD, %struct.DTD* %712, i32 0, i32 10
  %713 = load i8*, i8** %name793, align 8
  %call800 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %711, %struct.HASH_TABLE* %paramEntities799, i8* %713, i64 64)
  %714 = bitcast %struct.NAMED* %call800 to %struct.ENTITY*
  %715 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity801 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %715, i32 0, i32 54
  store %struct.ENTITY* %714, %struct.ENTITY** %m_declEntity801, align 8
  %716 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity802 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %716, i32 0, i32 54
  %717 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity802, align 8
  %tobool803 = icmp ne %struct.ENTITY* %717, null
  br i1 %tobool803, label %if.end.805, label %if.then.804

if.then.804:                                      ; preds = %if.end.798
  store i32 1, i32* %retval
  br label %return

if.end.805:                                       ; preds = %if.end.798
  %718 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity806 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %718, i32 0, i32 54
  %719 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity806, align 8
  %name807 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %719, i32 0, i32 0
  %720 = load i8*, i8** %name807, align 8
  %721 = load i8*, i8** %name793, align 8
  %cmp808 = icmp ne i8* %720, %721
  br i1 %cmp808, label %if.then.810, label %if.else.816

if.then.810:                                      ; preds = %if.end.805
  %722 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool811 = getelementptr inbounds %struct.DTD, %struct.DTD* %722, i32 0, i32 4
  %start812 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool811, i32 0, i32 4
  %723 = load i8*, i8** %start812, align 8
  %724 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool813 = getelementptr inbounds %struct.DTD, %struct.DTD* %724, i32 0, i32 4
  %ptr814 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool813, i32 0, i32 3
  store i8* %723, i8** %ptr814, align 8
  %725 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity815 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %725, i32 0, i32 54
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity815, align 8
  br label %if.end.840

if.else.816:                                      ; preds = %if.end.805
  %726 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool817 = getelementptr inbounds %struct.DTD, %struct.DTD* %726, i32 0, i32 4
  %ptr818 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool817, i32 0, i32 3
  %727 = load i8*, i8** %ptr818, align 8
  %728 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool819 = getelementptr inbounds %struct.DTD, %struct.DTD* %728, i32 0, i32 4
  %start820 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool819, i32 0, i32 4
  store i8* %727, i8** %start820, align 8
  %729 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity821 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %729, i32 0, i32 54
  %730 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity821, align 8
  %publicId822 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %730, i32 0, i32 6
  store i8* null, i8** %publicId822, align 8
  %731 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity823 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %731, i32 0, i32 54
  %732 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity823, align 8
  %is_param824 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %732, i32 0, i32 9
  store i8 1, i8* %is_param824, align 1
  %733 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parentParser825 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %733, i32 0, i32 84
  %734 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser825, align 8
  %tobool826 = icmp ne %struct.XML_ParserStruct* %734, null
  br i1 %tobool826, label %lor.end.830, label %lor.rhs.827

lor.rhs.827:                                      ; preds = %if.else.816
  %735 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities828 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %735, i32 0, i32 50
  %736 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities828, align 8
  %tobool829 = icmp ne %struct.open_internal_entity* %736, null
  br label %lor.end.830

lor.end.830:                                      ; preds = %lor.rhs.827, %if.else.816
  %737 = phi i1 [ true, %if.else.816 ], [ %tobool829, %lor.rhs.827 ]
  %lnot831 = xor i1 %737, true
  %lnot.ext832 = zext i1 %lnot831 to i32
  %conv833 = trunc i32 %lnot.ext832 to i8
  %738 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity834 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %738, i32 0, i32 54
  %739 = load %struct.ENTITY*, %struct.ENTITY** %m_declEntity834, align 8
  %is_internal835 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %739, i32 0, i32 10
  store i8 %conv833, i8* %is_internal835, align 1
  %740 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler836 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %740, i32 0, i32 32
  %741 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler836, align 8
  %tobool837 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %741, null
  br i1 %tobool837, label %if.then.838, label %if.end.839

if.then.838:                                      ; preds = %lor.end.830
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.839

if.end.839:                                       ; preds = %if.then.838, %lor.end.830
  br label %if.end.840

if.end.840:                                       ; preds = %if.end.839, %if.then.810
  br label %if.end.847

if.else.841:                                      ; preds = %sw.bb.789
  %742 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool842 = getelementptr inbounds %struct.DTD, %struct.DTD* %742, i32 0, i32 4
  %start843 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool842, i32 0, i32 4
  %743 = load i8*, i8** %start843, align 8
  %744 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool844 = getelementptr inbounds %struct.DTD, %struct.DTD* %744, i32 0, i32 4
  %ptr845 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool844, i32 0, i32 3
  store i8* %743, i8** %ptr845, align 8
  %745 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declEntity846 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %745, i32 0, i32 54
  store %struct.ENTITY* null, %struct.ENTITY** %m_declEntity846, align 8
  br label %if.end.847

if.end.847:                                       ; preds = %if.else.841, %if.end.840
  br label %sw.epilog.1405

sw.bb.848:                                        ; preds = %if.end.33
  %746 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationPublicId = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %746, i32 0, i32 60
  store i8* null, i8** %m_declNotationPublicId, align 8
  %747 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %747, i32 0, i32 59
  store i8* null, i8** %m_declNotationName, align 8
  %748 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notationDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %748, i32 0, i32 22
  %749 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler, align 8
  %tobool849 = icmp ne void (i8*, i8*, i8*, i8*, i8*)* %749, null
  br i1 %tobool849, label %if.then.850, label %if.end.862

if.then.850:                                      ; preds = %sw.bb.848
  %750 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool851 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %750, i32 0, i32 79
  %751 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %752 = load i8*, i8** %s.addr, align 8
  %753 = load i8*, i8** %next.addr, align 8
  %call852 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool851, %struct.encoding* %751, i8* %752, i8* %753)
  %754 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationName853 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %754, i32 0, i32 59
  store i8* %call852, i8** %m_declNotationName853, align 8
  %755 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationName854 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %755, i32 0, i32 59
  %756 = load i8*, i8** %m_declNotationName854, align 8
  %tobool855 = icmp ne i8* %756, null
  br i1 %tobool855, label %if.end.857, label %if.then.856

if.then.856:                                      ; preds = %if.then.850
  store i32 1, i32* %retval
  br label %return

if.end.857:                                       ; preds = %if.then.850
  %757 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool858 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %757, i32 0, i32 79
  %ptr859 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool858, i32 0, i32 3
  %758 = load i8*, i8** %ptr859, align 8
  %759 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool860 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %759, i32 0, i32 79
  %start861 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool860, i32 0, i32 4
  store i8* %758, i8** %start861, align 8
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.862

if.end.862:                                       ; preds = %if.end.857, %sw.bb.848
  br label %sw.epilog.1405

sw.bb.863:                                        ; preds = %if.end.33
  %760 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %isPublicId864 = getelementptr inbounds %struct.encoding, %struct.encoding* %760, i32 0, i32 10
  %761 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %isPublicId864, align 8
  %762 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %763 = load i8*, i8** %s.addr, align 8
  %764 = load i8*, i8** %next.addr, align 8
  %765 = load i8**, i8*** %eventPP, align 8
  %call865 = call i32 %761(%struct.encoding* %762, i8* %763, i8* %764, i8** %765)
  %tobool866 = icmp ne i32 %call865, 0
  br i1 %tobool866, label %if.end.868, label %if.then.867

if.then.867:                                      ; preds = %sw.bb.863
  store i32 32, i32* %retval
  br label %return

if.end.868:                                       ; preds = %sw.bb.863
  %766 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationName869 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %766, i32 0, i32 59
  %767 = load i8*, i8** %m_declNotationName869, align 8
  %tobool870 = icmp ne i8* %767, null
  br i1 %tobool870, label %if.then.871, label %if.end.890

if.then.871:                                      ; preds = %if.end.868
  %768 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool873 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %768, i32 0, i32 79
  %769 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %770 = load i8*, i8** %s.addr, align 8
  %771 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar874 = getelementptr inbounds %struct.encoding, %struct.encoding* %771, i32 0, i32 13
  %772 = load i32, i32* %minBytesPerChar874, align 4
  %idx.ext875 = sext i32 %772 to i64
  %add.ptr876 = getelementptr i8, i8* %770, i64 %idx.ext875
  %773 = load i8*, i8** %next.addr, align 8
  %774 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar877 = getelementptr inbounds %struct.encoding, %struct.encoding* %774, i32 0, i32 13
  %775 = load i32, i32* %minBytesPerChar877, align 4
  %idx.ext878 = sext i32 %775 to i64
  %idx.neg879 = sub i64 0, %idx.ext878
  %add.ptr880 = getelementptr i8, i8* %773, i64 %idx.neg879
  %call881 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool873, %struct.encoding* %769, i8* %add.ptr876, i8* %add.ptr880)
  store i8* %call881, i8** %tem872, align 8
  %776 = load i8*, i8** %tem872, align 8
  %tobool882 = icmp ne i8* %776, null
  br i1 %tobool882, label %if.end.884, label %if.then.883

if.then.883:                                      ; preds = %if.then.871
  store i32 1, i32* %retval
  br label %return

if.end.884:                                       ; preds = %if.then.871
  %777 = load i8*, i8** %tem872, align 8
  call void @normalizePublicId(i8* %777)
  %778 = load i8*, i8** %tem872, align 8
  %779 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationPublicId885 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %779, i32 0, i32 60
  store i8* %778, i8** %m_declNotationPublicId885, align 8
  %780 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool886 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %780, i32 0, i32 79
  %ptr887 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool886, i32 0, i32 3
  %781 = load i8*, i8** %ptr887, align 8
  %782 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool888 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %782, i32 0, i32 79
  %start889 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool888, i32 0, i32 4
  store i8* %781, i8** %start889, align 8
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.890

if.end.890:                                       ; preds = %if.end.884, %if.end.868
  br label %sw.epilog.1405

sw.bb.891:                                        ; preds = %if.end.33
  %783 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationName892 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %783, i32 0, i32 59
  %784 = load i8*, i8** %m_declNotationName892, align 8
  %tobool893 = icmp ne i8* %784, null
  br i1 %tobool893, label %land.lhs.true.894, label %if.end.916

land.lhs.true.894:                                ; preds = %sw.bb.891
  %785 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notationDeclHandler895 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %785, i32 0, i32 22
  %786 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler895, align 8
  %tobool896 = icmp ne void (i8*, i8*, i8*, i8*, i8*)* %786, null
  br i1 %tobool896, label %if.then.897, label %if.end.916

if.then.897:                                      ; preds = %land.lhs.true.894
  %787 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool899 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %787, i32 0, i32 79
  %788 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %789 = load i8*, i8** %s.addr, align 8
  %790 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar900 = getelementptr inbounds %struct.encoding, %struct.encoding* %790, i32 0, i32 13
  %791 = load i32, i32* %minBytesPerChar900, align 4
  %idx.ext901 = sext i32 %791 to i64
  %add.ptr902 = getelementptr i8, i8* %789, i64 %idx.ext901
  %792 = load i8*, i8** %next.addr, align 8
  %793 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar903 = getelementptr inbounds %struct.encoding, %struct.encoding* %793, i32 0, i32 13
  %794 = load i32, i32* %minBytesPerChar903, align 4
  %idx.ext904 = sext i32 %794 to i64
  %idx.neg905 = sub i64 0, %idx.ext904
  %add.ptr906 = getelementptr i8, i8* %792, i64 %idx.neg905
  %call907 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool899, %struct.encoding* %788, i8* %add.ptr902, i8* %add.ptr906)
  store i8* %call907, i8** %systemId898, align 8
  %795 = load i8*, i8** %systemId898, align 8
  %tobool908 = icmp ne i8* %795, null
  br i1 %tobool908, label %if.end.910, label %if.then.909

if.then.909:                                      ; preds = %if.then.897
  store i32 1, i32* %retval
  br label %return

if.end.910:                                       ; preds = %if.then.897
  %796 = load i8*, i8** %s.addr, align 8
  %797 = load i8**, i8*** %eventEndPP, align 8
  store i8* %796, i8** %797, align 8
  %798 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notationDeclHandler911 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %798, i32 0, i32 22
  %799 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler911, align 8
  %800 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg912 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %800, i32 0, i32 1
  %801 = load i8*, i8** %m_handlerArg912, align 8
  %802 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationName913 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %802, i32 0, i32 59
  %803 = load i8*, i8** %m_declNotationName913, align 8
  %804 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_curBase914 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %804, i32 0, i32 66
  %805 = load i8*, i8** %m_curBase914, align 8
  %806 = load i8*, i8** %systemId898, align 8
  %807 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationPublicId915 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %807, i32 0, i32 60
  %808 = load i8*, i8** %m_declNotationPublicId915, align 8
  call void %799(i8* %801, i8* %803, i8* %805, i8* %806, i8* %808)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.916

if.end.916:                                       ; preds = %if.end.910, %land.lhs.true.894, %sw.bb.891
  %809 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool917 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %809, i32 0, i32 79
  call void @poolClear(%struct.STRING_POOL* %m_tempPool917)
  br label %sw.epilog.1405

sw.bb.918:                                        ; preds = %if.end.33
  %810 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationPublicId919 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %810, i32 0, i32 60
  %811 = load i8*, i8** %m_declNotationPublicId919, align 8
  %tobool920 = icmp ne i8* %811, null
  br i1 %tobool920, label %land.lhs.true.921, label %if.end.930

land.lhs.true.921:                                ; preds = %sw.bb.918
  %812 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notationDeclHandler922 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %812, i32 0, i32 22
  %813 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler922, align 8
  %tobool923 = icmp ne void (i8*, i8*, i8*, i8*, i8*)* %813, null
  br i1 %tobool923, label %if.then.924, label %if.end.930

if.then.924:                                      ; preds = %land.lhs.true.921
  %814 = load i8*, i8** %s.addr, align 8
  %815 = load i8**, i8*** %eventEndPP, align 8
  store i8* %814, i8** %815, align 8
  %816 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notationDeclHandler925 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %816, i32 0, i32 22
  %817 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler925, align 8
  %818 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg926 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %818, i32 0, i32 1
  %819 = load i8*, i8** %m_handlerArg926, align 8
  %820 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationName927 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %820, i32 0, i32 59
  %821 = load i8*, i8** %m_declNotationName927, align 8
  %822 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_curBase928 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %822, i32 0, i32 66
  %823 = load i8*, i8** %m_curBase928, align 8
  %824 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declNotationPublicId929 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %824, i32 0, i32 60
  %825 = load i8*, i8** %m_declNotationPublicId929, align 8
  call void %817(i8* %819, i8* %821, i8* %823, i8* null, i8* %825)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.930

if.end.930:                                       ; preds = %if.then.924, %land.lhs.true.921, %sw.bb.918
  %826 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool931 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %826, i32 0, i32 79
  call void @poolClear(%struct.STRING_POOL* %m_tempPool931)
  br label %sw.epilog.1405

sw.bb.932:                                        ; preds = %if.end.33
  %827 = load i32, i32* %tok.addr, align 4
  switch i32 %827, label %sw.default.935 [
    i32 28, label %sw.bb.933
    i32 12, label %sw.bb.934
  ]

sw.bb.933:                                        ; preds = %sw.bb.932
  store i32 10, i32* %retval
  br label %return

sw.bb.934:                                        ; preds = %sw.bb.932
  store i32 17, i32* %retval
  br label %return

sw.default.935:                                   ; preds = %sw.bb.932
  store i32 2, i32* %retval
  br label %return

sw.bb.936:                                        ; preds = %if.end.33
  %828 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %828, i32 0, i32 18
  %829 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %tobool938 = icmp ne void (i8*, i8*, i32)* %829, null
  br i1 %tobool938, label %if.then.939, label %if.end.940

if.then.939:                                      ; preds = %sw.bb.936
  %830 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %831 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %832 = load i8*, i8** %s.addr, align 8
  %833 = load i8*, i8** %next.addr, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %830, %struct.encoding* %831, i8* %832, i8* %833)
  br label %if.end.940

if.end.940:                                       ; preds = %if.then.939, %sw.bb.936
  store i8 0, i8* %handleDefault, align 1
  %834 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %835 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %836 = load i8*, i8** %end.addr, align 8
  %837 = load i8**, i8*** %nextPtr.addr, align 8
  %838 = load i8, i8* %haveMore.addr, align 1
  %call941 = call i32 @doIgnoreSection(%struct.XML_ParserStruct* %834, %struct.encoding* %835, i8** %next.addr, i8* %836, i8** %837, i8 zeroext %838)
  store i32 %call941, i32* %result937, align 4
  %839 = load i32, i32* %result937, align 4
  %cmp942 = icmp ne i32 %839, 0
  br i1 %cmp942, label %if.then.944, label %if.else.945

if.then.944:                                      ; preds = %if.end.940
  %840 = load i32, i32* %result937, align 4
  store i32 %840, i32* %retval
  br label %return

if.else.945:                                      ; preds = %if.end.940
  %841 = load i8*, i8** %next.addr, align 8
  %tobool946 = icmp ne i8* %841, null
  br i1 %tobool946, label %if.end.949, label %if.then.947

if.then.947:                                      ; preds = %if.else.945
  %842 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor948 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %842, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @ignoreSectionProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor948, align 8
  %843 = load i32, i32* %result937, align 4
  store i32 %843, i32* %retval
  br label %return

if.end.949:                                       ; preds = %if.else.945
  br label %if.end.950

if.end.950:                                       ; preds = %if.end.949
  br label %sw.epilog.1405

sw.bb.951:                                        ; preds = %if.end.33
  %844 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState952 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %844, i32 0, i32 44
  %level = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState952, i32 0, i32 1
  %845 = load i32, i32* %level, align 4
  %846 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %846, i32 0, i32 82
  %847 = load i32, i32* %m_groupSize, align 4
  %cmp953 = icmp uge i32 %845, %847
  br i1 %cmp953, label %if.then.955, label %if.end.993

if.then.955:                                      ; preds = %sw.bb.951
  %848 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupSize956 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %848, i32 0, i32 82
  %849 = load i32, i32* %m_groupSize956, align 4
  %tobool957 = icmp ne i32 %849, 0
  br i1 %tobool957, label %if.then.958, label %if.else.983

if.then.958:                                      ; preds = %if.then.955
  %850 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %850, i32 0, i32 3
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1
  %851 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8
  %852 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupConnector = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %852, i32 0, i32 81
  %853 = load i8*, i8** %m_groupConnector, align 8
  %854 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupSize959 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %854, i32 0, i32 82
  %855 = load i32, i32* %m_groupSize959, align 4
  %mul = mul i32 %855, 2
  store i32 %mul, i32* %m_groupSize959, align 4
  %conv960 = zext i32 %mul to i64
  %call961 = call i8* %851(i8* %853, i64 %conv960)
  store i8* %call961, i8** %temp, align 8
  %856 = load i8*, i8** %temp, align 8
  %cmp962 = icmp eq i8* %856, null
  br i1 %cmp962, label %if.then.964, label %if.end.965

if.then.964:                                      ; preds = %if.then.958
  store i32 1, i32* %retval
  br label %return

if.end.965:                                       ; preds = %if.then.958
  %857 = load i8*, i8** %temp, align 8
  %858 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupConnector966 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %858, i32 0, i32 81
  store i8* %857, i8** %m_groupConnector966, align 8
  %859 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %859, i32 0, i32 18
  %860 = load i32*, i32** %scaffIndex, align 8
  %tobool967 = icmp ne i32* %860, null
  br i1 %tobool967, label %if.then.968, label %if.end.982

if.then.968:                                      ; preds = %if.end.965
  %861 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem970 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %861, i32 0, i32 3
  %realloc_fcn971 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem970, i32 0, i32 1
  %862 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn971, align 8
  %863 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex972 = getelementptr inbounds %struct.DTD, %struct.DTD* %863, i32 0, i32 18
  %864 = load i32*, i32** %scaffIndex972, align 8
  %865 = bitcast i32* %864 to i8*
  %866 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupSize973 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %866, i32 0, i32 82
  %867 = load i32, i32* %m_groupSize973, align 4
  %conv974 = zext i32 %867 to i64
  %mul975 = mul i64 %conv974, 4
  %call976 = call i8* %862(i8* %865, i64 %mul975)
  %868 = bitcast i8* %call976 to i32*
  store i32* %868, i32** %temp969, align 8
  %869 = load i32*, i32** %temp969, align 8
  %cmp977 = icmp eq i32* %869, null
  br i1 %cmp977, label %if.then.979, label %if.end.980

if.then.979:                                      ; preds = %if.then.968
  store i32 1, i32* %retval
  br label %return

if.end.980:                                       ; preds = %if.then.968
  %870 = load i32*, i32** %temp969, align 8
  %871 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex981 = getelementptr inbounds %struct.DTD, %struct.DTD* %871, i32 0, i32 18
  store i32* %870, i32** %scaffIndex981, align 8
  br label %if.end.982

if.end.982:                                       ; preds = %if.end.980, %if.end.965
  br label %if.end.992

if.else.983:                                      ; preds = %if.then.955
  %872 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem984 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %872, i32 0, i32 3
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem984, i32 0, i32 0
  %873 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %874 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupSize985 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %874, i32 0, i32 82
  store i32 32, i32* %m_groupSize985, align 4
  %call986 = call i8* %873(i64 32)
  %875 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupConnector987 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %875, i32 0, i32 81
  store i8* %call986, i8** %m_groupConnector987, align 8
  %876 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupConnector988 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %876, i32 0, i32 81
  %877 = load i8*, i8** %m_groupConnector988, align 8
  %tobool989 = icmp ne i8* %877, null
  br i1 %tobool989, label %if.end.991, label %if.then.990

if.then.990:                                      ; preds = %if.else.983
  store i32 1, i32* %retval
  br label %return

if.end.991:                                       ; preds = %if.else.983
  br label %if.end.992

if.end.992:                                       ; preds = %if.end.991, %if.end.982
  br label %if.end.993

if.end.993:                                       ; preds = %if.end.992, %sw.bb.951
  %878 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState994 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %878, i32 0, i32 44
  %level995 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState994, i32 0, i32 1
  %879 = load i32, i32* %level995, align 4
  %idxprom = zext i32 %879 to i64
  %880 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupConnector996 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %880, i32 0, i32 81
  %881 = load i8*, i8** %m_groupConnector996, align 8
  %arrayidx997 = getelementptr i8, i8* %881, i64 %idxprom
  store i8 0, i8* %arrayidx997, align 1
  %882 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %in_eldecl = getelementptr inbounds %struct.DTD, %struct.DTD* %882, i32 0, i32 12
  %883 = load i8, i8* %in_eldecl, align 1
  %tobool998 = icmp ne i8 %883, 0
  br i1 %tobool998, label %if.then.999, label %if.end.1014

if.then.999:                                      ; preds = %if.end.993
  %884 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call1000 = call i32 @nextScaffoldPart(%struct.XML_ParserStruct* %884)
  store i32 %call1000, i32* %myindex, align 4
  %885 = load i32, i32* %myindex, align 4
  %cmp1001 = icmp slt i32 %885, 0
  br i1 %cmp1001, label %if.then.1003, label %if.end.1004

if.then.1003:                                     ; preds = %if.then.999
  store i32 1, i32* %retval
  br label %return

if.end.1004:                                      ; preds = %if.then.999
  %886 = load i32, i32* %myindex, align 4
  %887 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %887, i32 0, i32 17
  %888 = load i32, i32* %scaffLevel, align 4
  %idxprom1005 = sext i32 %888 to i64
  %889 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex1006 = getelementptr inbounds %struct.DTD, %struct.DTD* %889, i32 0, i32 18
  %890 = load i32*, i32** %scaffIndex1006, align 8
  %arrayidx1007 = getelementptr i32, i32* %890, i64 %idxprom1005
  store i32 %886, i32* %arrayidx1007, align 4
  %891 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffLevel1008 = getelementptr inbounds %struct.DTD, %struct.DTD* %891, i32 0, i32 17
  %892 = load i32, i32* %scaffLevel1008, align 4
  %inc = add i32 %892, 1
  store i32 %inc, i32* %scaffLevel1008, align 4
  %893 = load i32, i32* %myindex, align 4
  %idxprom1009 = sext i32 %893 to i64
  %894 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %894, i32 0, i32 13
  %895 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8
  %arrayidx1010 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %895, i64 %idxprom1009
  %type = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1010, i32 0, i32 0
  store i32 6, i32* %type, align 4
  %896 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %896, i32 0, i32 30
  %897 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler, align 8
  %tobool1011 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %897, null
  br i1 %tobool1011, label %if.then.1012, label %if.end.1013

if.then.1012:                                     ; preds = %if.end.1004
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1013

if.end.1013:                                      ; preds = %if.then.1012, %if.end.1004
  br label %if.end.1014

if.end.1014:                                      ; preds = %if.end.1013, %if.end.993
  br label %sw.epilog.1405

sw.bb.1015:                                       ; preds = %if.end.33
  %898 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState1016 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %898, i32 0, i32 44
  %level1017 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1016, i32 0, i32 1
  %899 = load i32, i32* %level1017, align 4
  %idxprom1018 = zext i32 %899 to i64
  %900 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupConnector1019 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %900, i32 0, i32 81
  %901 = load i8*, i8** %m_groupConnector1019, align 8
  %arrayidx1020 = getelementptr i8, i8* %901, i64 %idxprom1018
  %902 = load i8, i8* %arrayidx1020, align 1
  %conv1021 = sext i8 %902 to i32
  %cmp1022 = icmp eq i32 %conv1021, 124
  br i1 %cmp1022, label %if.then.1024, label %if.end.1025

if.then.1024:                                     ; preds = %sw.bb.1015
  store i32 2, i32* %retval
  br label %return

if.end.1025:                                      ; preds = %sw.bb.1015
  %903 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState1026 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %903, i32 0, i32 44
  %level1027 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1026, i32 0, i32 1
  %904 = load i32, i32* %level1027, align 4
  %idxprom1028 = zext i32 %904 to i64
  %905 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupConnector1029 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %905, i32 0, i32 81
  %906 = load i8*, i8** %m_groupConnector1029, align 8
  %arrayidx1030 = getelementptr i8, i8* %906, i64 %idxprom1028
  store i8 44, i8* %arrayidx1030, align 1
  %907 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %in_eldecl1031 = getelementptr inbounds %struct.DTD, %struct.DTD* %907, i32 0, i32 12
  %908 = load i8, i8* %in_eldecl1031, align 1
  %conv1032 = zext i8 %908 to i32
  %tobool1033 = icmp ne i32 %conv1032, 0
  br i1 %tobool1033, label %land.lhs.true.1034, label %if.end.1038

land.lhs.true.1034:                               ; preds = %if.end.1025
  %909 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler1035 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %909, i32 0, i32 30
  %910 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1035, align 8
  %tobool1036 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %910, null
  br i1 %tobool1036, label %if.then.1037, label %if.end.1038

if.then.1037:                                     ; preds = %land.lhs.true.1034
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1038

if.end.1038:                                      ; preds = %if.then.1037, %land.lhs.true.1034, %if.end.1025
  br label %sw.epilog.1405

sw.bb.1039:                                       ; preds = %if.end.33
  %911 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState1040 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %911, i32 0, i32 44
  %level1041 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1040, i32 0, i32 1
  %912 = load i32, i32* %level1041, align 4
  %idxprom1042 = zext i32 %912 to i64
  %913 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupConnector1043 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %913, i32 0, i32 81
  %914 = load i8*, i8** %m_groupConnector1043, align 8
  %arrayidx1044 = getelementptr i8, i8* %914, i64 %idxprom1042
  %915 = load i8, i8* %arrayidx1044, align 1
  %conv1045 = sext i8 %915 to i32
  %cmp1046 = icmp eq i32 %conv1045, 44
  br i1 %cmp1046, label %if.then.1048, label %if.end.1049

if.then.1048:                                     ; preds = %sw.bb.1039
  store i32 2, i32* %retval
  br label %return

if.end.1049:                                      ; preds = %sw.bb.1039
  %916 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %in_eldecl1050 = getelementptr inbounds %struct.DTD, %struct.DTD* %916, i32 0, i32 12
  %917 = load i8, i8* %in_eldecl1050, align 1
  %conv1051 = zext i8 %917 to i32
  %tobool1052 = icmp ne i32 %conv1051, 0
  br i1 %tobool1052, label %land.lhs.true.1053, label %if.end.1086

land.lhs.true.1053:                               ; preds = %if.end.1049
  %918 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState1054 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %918, i32 0, i32 44
  %level1055 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1054, i32 0, i32 1
  %919 = load i32, i32* %level1055, align 4
  %idxprom1056 = zext i32 %919 to i64
  %920 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupConnector1057 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %920, i32 0, i32 81
  %921 = load i8*, i8** %m_groupConnector1057, align 8
  %arrayidx1058 = getelementptr i8, i8* %921, i64 %idxprom1056
  %922 = load i8, i8* %arrayidx1058, align 1
  %tobool1059 = icmp ne i8 %922, 0
  br i1 %tobool1059, label %if.end.1086, label %land.lhs.true.1060

land.lhs.true.1060:                               ; preds = %land.lhs.true.1053
  %923 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffLevel1061 = getelementptr inbounds %struct.DTD, %struct.DTD* %923, i32 0, i32 17
  %924 = load i32, i32* %scaffLevel1061, align 4
  %sub1062 = sub i32 %924, 1
  %idxprom1063 = sext i32 %sub1062 to i64
  %925 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex1064 = getelementptr inbounds %struct.DTD, %struct.DTD* %925, i32 0, i32 18
  %926 = load i32*, i32** %scaffIndex1064, align 8
  %arrayidx1065 = getelementptr i32, i32* %926, i64 %idxprom1063
  %927 = load i32, i32* %arrayidx1065, align 4
  %idxprom1066 = sext i32 %927 to i64
  %928 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold1067 = getelementptr inbounds %struct.DTD, %struct.DTD* %928, i32 0, i32 13
  %929 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1067, align 8
  %arrayidx1068 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %929, i64 %idxprom1066
  %type1069 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1068, i32 0, i32 0
  %930 = load i32, i32* %type1069, align 4
  %cmp1070 = icmp ne i32 %930, 3
  br i1 %cmp1070, label %if.then.1072, label %if.end.1086

if.then.1072:                                     ; preds = %land.lhs.true.1060
  %931 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffLevel1073 = getelementptr inbounds %struct.DTD, %struct.DTD* %931, i32 0, i32 17
  %932 = load i32, i32* %scaffLevel1073, align 4
  %sub1074 = sub i32 %932, 1
  %idxprom1075 = sext i32 %sub1074 to i64
  %933 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex1076 = getelementptr inbounds %struct.DTD, %struct.DTD* %933, i32 0, i32 18
  %934 = load i32*, i32** %scaffIndex1076, align 8
  %arrayidx1077 = getelementptr i32, i32* %934, i64 %idxprom1075
  %935 = load i32, i32* %arrayidx1077, align 4
  %idxprom1078 = sext i32 %935 to i64
  %936 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold1079 = getelementptr inbounds %struct.DTD, %struct.DTD* %936, i32 0, i32 13
  %937 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1079, align 8
  %arrayidx1080 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %937, i64 %idxprom1078
  %type1081 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1080, i32 0, i32 0
  store i32 5, i32* %type1081, align 4
  %938 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler1082 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %938, i32 0, i32 30
  %939 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1082, align 8
  %tobool1083 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %939, null
  br i1 %tobool1083, label %if.then.1084, label %if.end.1085

if.then.1084:                                     ; preds = %if.then.1072
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1085

if.end.1085:                                      ; preds = %if.then.1084, %if.then.1072
  br label %if.end.1086

if.end.1086:                                      ; preds = %if.end.1085, %land.lhs.true.1060, %land.lhs.true.1053, %if.end.1049
  %940 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState1087 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %940, i32 0, i32 44
  %level1088 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1087, i32 0, i32 1
  %941 = load i32, i32* %level1088, align 4
  %idxprom1089 = zext i32 %941 to i64
  %942 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupConnector1090 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %942, i32 0, i32 81
  %943 = load i8*, i8** %m_groupConnector1090, align 8
  %arrayidx1091 = getelementptr i8, i8* %943, i64 %idxprom1089
  store i8 124, i8* %arrayidx1091, align 1
  br label %sw.epilog.1405

sw.bb.1092:                                       ; preds = %if.end.33, %if.end.33
  %944 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs1093 = getelementptr inbounds %struct.DTD, %struct.DTD* %944, i32 0, i32 7
  store i8 1, i8* %hasParamEntityRefs1093, align 1
  %945 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_paramEntityParsing1094 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %945, i32 0, i32 88
  %946 = load i32, i32* %m_paramEntityParsing1094, align 4
  %tobool1095 = icmp ne i32 %946, 0
  br i1 %tobool1095, label %if.else.1099, label %if.then.1096

if.then.1096:                                     ; preds = %sw.bb.1092
  %947 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone1097 = getelementptr inbounds %struct.DTD, %struct.DTD* %947, i32 0, i32 8
  %948 = load i8, i8* %standalone1097, align 1
  %949 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing1098 = getelementptr inbounds %struct.DTD, %struct.DTD* %949, i32 0, i32 6
  store i8 %948, i8* %keepProcessing1098, align 1
  br label %if.end.1200

if.else.1099:                                     ; preds = %sw.bb.1092
  %950 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool1102 = getelementptr inbounds %struct.DTD, %struct.DTD* %950, i32 0, i32 4
  %951 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %952 = load i8*, i8** %s.addr, align 8
  %953 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar1103 = getelementptr inbounds %struct.encoding, %struct.encoding* %953, i32 0, i32 13
  %954 = load i32, i32* %minBytesPerChar1103, align 4
  %idx.ext1104 = sext i32 %954 to i64
  %add.ptr1105 = getelementptr i8, i8* %952, i64 %idx.ext1104
  %955 = load i8*, i8** %next.addr, align 8
  %956 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar1106 = getelementptr inbounds %struct.encoding, %struct.encoding* %956, i32 0, i32 13
  %957 = load i32, i32* %minBytesPerChar1106, align 4
  %idx.ext1107 = sext i32 %957 to i64
  %idx.neg1108 = sub i64 0, %idx.ext1107
  %add.ptr1109 = getelementptr i8, i8* %955, i64 %idx.neg1108
  %call1110 = call i8* @poolStoreString(%struct.STRING_POOL* %pool1102, %struct.encoding* %951, i8* %add.ptr1105, i8* %add.ptr1109)
  store i8* %call1110, i8** %name1100, align 8
  %958 = load i8*, i8** %name1100, align 8
  %tobool1111 = icmp ne i8* %958, null
  br i1 %tobool1111, label %if.end.1113, label %if.then.1112

if.then.1112:                                     ; preds = %if.else.1099
  store i32 1, i32* %retval
  br label %return

if.end.1113:                                      ; preds = %if.else.1099
  %959 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %960 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntities1114 = getelementptr inbounds %struct.DTD, %struct.DTD* %960, i32 0, i32 10
  %961 = load i8*, i8** %name1100, align 8
  %call1115 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %959, %struct.HASH_TABLE* %paramEntities1114, i8* %961, i64 0)
  %962 = bitcast %struct.NAMED* %call1115 to %struct.ENTITY*
  store %struct.ENTITY* %962, %struct.ENTITY** %entity1101, align 8
  %963 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool1116 = getelementptr inbounds %struct.DTD, %struct.DTD* %963, i32 0, i32 4
  %start1117 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool1116, i32 0, i32 4
  %964 = load i8*, i8** %start1117, align 8
  %965 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool1118 = getelementptr inbounds %struct.DTD, %struct.DTD* %965, i32 0, i32 4
  %ptr1119 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool1118, i32 0, i32 3
  store i8* %964, i8** %ptr1119, align 8
  %966 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState1120 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %966, i32 0, i32 44
  %documentEntity = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1120, i32 0, i32 4
  %967 = load i32, i32* %documentEntity, align 4
  %tobool1121 = icmp ne i32 %967, 0
  br i1 %tobool1121, label %land.lhs.true.1122, label %if.else.1141

land.lhs.true.1122:                               ; preds = %if.end.1113
  %968 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone1123 = getelementptr inbounds %struct.DTD, %struct.DTD* %968, i32 0, i32 8
  %969 = load i8, i8* %standalone1123, align 1
  %conv1124 = zext i8 %969 to i32
  %tobool1125 = icmp ne i32 %conv1124, 0
  br i1 %tobool1125, label %cond.true.1126, label %cond.false.1129

cond.true.1126:                                   ; preds = %land.lhs.true.1122
  %970 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities1127 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %970, i32 0, i32 50
  %971 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1127, align 8
  %tobool1128 = icmp ne %struct.open_internal_entity* %971, null
  br i1 %tobool1128, label %if.else.1141, label %if.then.1132

cond.false.1129:                                  ; preds = %land.lhs.true.1122
  %972 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs1130 = getelementptr inbounds %struct.DTD, %struct.DTD* %972, i32 0, i32 7
  %973 = load i8, i8* %hasParamEntityRefs1130, align 1
  %tobool1131 = icmp ne i8 %973, 0
  br i1 %tobool1131, label %if.else.1141, label %if.then.1132

if.then.1132:                                     ; preds = %cond.false.1129, %cond.true.1126
  %974 = load %struct.ENTITY*, %struct.ENTITY** %entity1101, align 8
  %tobool1133 = icmp ne %struct.ENTITY* %974, null
  br i1 %tobool1133, label %if.else.1135, label %if.then.1134

if.then.1134:                                     ; preds = %if.then.1132
  store i32 11, i32* %retval
  br label %return

if.else.1135:                                     ; preds = %if.then.1132
  %975 = load %struct.ENTITY*, %struct.ENTITY** %entity1101, align 8
  %is_internal1136 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %975, i32 0, i32 10
  %976 = load i8, i8* %is_internal1136, align 1
  %tobool1137 = icmp ne i8 %976, 0
  br i1 %tobool1137, label %if.end.1139, label %if.then.1138

if.then.1138:                                     ; preds = %if.else.1135
  store i32 24, i32* %retval
  br label %return

if.end.1139:                                      ; preds = %if.else.1135
  br label %if.end.1140

if.end.1140:                                      ; preds = %if.end.1139
  br label %if.end.1155

if.else.1141:                                     ; preds = %cond.false.1129, %cond.true.1126, %if.end.1113
  %977 = load %struct.ENTITY*, %struct.ENTITY** %entity1101, align 8
  %tobool1142 = icmp ne %struct.ENTITY* %977, null
  br i1 %tobool1142, label %if.end.1154, label %if.then.1143

if.then.1143:                                     ; preds = %if.else.1141
  %978 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone1144 = getelementptr inbounds %struct.DTD, %struct.DTD* %978, i32 0, i32 8
  %979 = load i8, i8* %standalone1144, align 1
  %980 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing1145 = getelementptr inbounds %struct.DTD, %struct.DTD* %980, i32 0, i32 6
  store i8 %979, i8* %keepProcessing1145, align 1
  %981 = load i32, i32* %role, align 4
  %cmp1146 = icmp eq i32 %981, 60
  br i1 %cmp1146, label %land.lhs.true.1148, label %if.end.1153

land.lhs.true.1148:                               ; preds = %if.then.1143
  %982 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %982, i32 0, i32 28
  %983 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8
  %tobool1149 = icmp ne void (i8*, i8*, i32)* %983, null
  br i1 %tobool1149, label %if.then.1150, label %if.end.1153

if.then.1150:                                     ; preds = %land.lhs.true.1148
  %984 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_skippedEntityHandler1151 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %984, i32 0, i32 28
  %985 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler1151, align 8
  %986 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg1152 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %986, i32 0, i32 1
  %987 = load i8*, i8** %m_handlerArg1152, align 8
  %988 = load i8*, i8** %name1100, align 8
  call void %985(i8* %987, i8* %988, i32 1)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1153

if.end.1153:                                      ; preds = %if.then.1150, %land.lhs.true.1148, %if.then.1143
  br label %sw.epilog.1405

if.end.1154:                                      ; preds = %if.else.1141
  br label %if.end.1155

if.end.1155:                                      ; preds = %if.end.1154, %if.end.1140
  %989 = load %struct.ENTITY*, %struct.ENTITY** %entity1101, align 8
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %989, i32 0, i32 8
  %990 = load i8, i8* %open, align 1
  %tobool1156 = icmp ne i8 %990, 0
  br i1 %tobool1156, label %if.then.1157, label %if.end.1158

if.then.1157:                                     ; preds = %if.end.1155
  store i32 12, i32* %retval
  br label %return

if.end.1158:                                      ; preds = %if.end.1155
  %991 = load %struct.ENTITY*, %struct.ENTITY** %entity1101, align 8
  %textPtr1159 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %991, i32 0, i32 1
  %992 = load i8*, i8** %textPtr1159, align 8
  %tobool1160 = icmp ne i8* %992, null
  br i1 %tobool1160, label %if.then.1161, label %if.end.1173

if.then.1161:                                     ; preds = %if.end.1158
  %993 = load i32, i32* %role, align 4
  %cmp1164 = icmp eq i32 %993, 60
  %cond1166 = select i1 %cmp1164, i32 1, i32 0
  %conv1167 = trunc i32 %cond1166 to i8
  store i8 %conv1167, i8* %betweenDecl1163, align 1
  %994 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %995 = load %struct.ENTITY*, %struct.ENTITY** %entity1101, align 8
  %996 = load i8, i8* %betweenDecl1163, align 1
  %call1168 = call i32 @processInternalEntity(%struct.XML_ParserStruct* %994, %struct.ENTITY* %995, i8 zeroext %996)
  store i32 %call1168, i32* %result1162, align 4
  %997 = load i32, i32* %result1162, align 4
  %cmp1169 = icmp ne i32 %997, 0
  br i1 %cmp1169, label %if.then.1171, label %if.end.1172

if.then.1171:                                     ; preds = %if.then.1161
  %998 = load i32, i32* %result1162, align 4
  store i32 %998, i32* %retval
  br label %return

if.end.1172:                                      ; preds = %if.then.1161
  store i8 0, i8* %handleDefault, align 1
  br label %sw.epilog.1405

if.end.1173:                                      ; preds = %if.end.1158
  %999 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandler1174 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %999, i32 0, i32 26
  %1000 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler1174, align 8
  %tobool1175 = icmp ne i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %1000, null
  br i1 %tobool1175, label %if.then.1176, label %if.else.1196

if.then.1176:                                     ; preds = %if.end.1173
  %1001 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntityRead1177 = getelementptr inbounds %struct.DTD, %struct.DTD* %1001, i32 0, i32 9
  store i8 0, i8* %paramEntityRead1177, align 1
  %1002 = load %struct.ENTITY*, %struct.ENTITY** %entity1101, align 8
  %open1178 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1002, i32 0, i32 8
  store i8 1, i8* %open1178, align 1
  %1003 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandler1179 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1003, i32 0, i32 26
  %1004 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler1179, align 8
  %1005 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandlerArg1180 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1005, i32 0, i32 27
  %1006 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg1180, align 8
  %1007 = load %struct.ENTITY*, %struct.ENTITY** %entity1101, align 8
  %base1181 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1007, i32 0, i32 5
  %1008 = load i8*, i8** %base1181, align 8
  %1009 = load %struct.ENTITY*, %struct.ENTITY** %entity1101, align 8
  %systemId1182 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1009, i32 0, i32 4
  %1010 = load i8*, i8** %systemId1182, align 8
  %1011 = load %struct.ENTITY*, %struct.ENTITY** %entity1101, align 8
  %publicId1183 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1011, i32 0, i32 6
  %1012 = load i8*, i8** %publicId1183, align 8
  %call1184 = call i32 %1004(%struct.XML_ParserStruct* %1006, i8* null, i8* %1008, i8* %1010, i8* %1012)
  %tobool1185 = icmp ne i32 %call1184, 0
  br i1 %tobool1185, label %if.end.1188, label %if.then.1186

if.then.1186:                                     ; preds = %if.then.1176
  %1013 = load %struct.ENTITY*, %struct.ENTITY** %entity1101, align 8
  %open1187 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1013, i32 0, i32 8
  store i8 0, i8* %open1187, align 1
  store i32 21, i32* %retval
  br label %return

if.end.1188:                                      ; preds = %if.then.1176
  %1014 = load %struct.ENTITY*, %struct.ENTITY** %entity1101, align 8
  %open1189 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %1014, i32 0, i32 8
  store i8 0, i8* %open1189, align 1
  store i8 0, i8* %handleDefault, align 1
  %1015 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntityRead1190 = getelementptr inbounds %struct.DTD, %struct.DTD* %1015, i32 0, i32 9
  %1016 = load i8, i8* %paramEntityRead1190, align 1
  %tobool1191 = icmp ne i8 %1016, 0
  br i1 %tobool1191, label %if.end.1195, label %if.then.1192

if.then.1192:                                     ; preds = %if.end.1188
  %1017 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone1193 = getelementptr inbounds %struct.DTD, %struct.DTD* %1017, i32 0, i32 8
  %1018 = load i8, i8* %standalone1193, align 1
  %1019 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing1194 = getelementptr inbounds %struct.DTD, %struct.DTD* %1019, i32 0, i32 6
  store i8 %1018, i8* %keepProcessing1194, align 1
  br label %sw.epilog.1405

if.end.1195:                                      ; preds = %if.end.1188
  br label %if.end.1199

if.else.1196:                                     ; preds = %if.end.1173
  %1020 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone1197 = getelementptr inbounds %struct.DTD, %struct.DTD* %1020, i32 0, i32 8
  %1021 = load i8, i8* %standalone1197, align 1
  %1022 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing1198 = getelementptr inbounds %struct.DTD, %struct.DTD* %1022, i32 0, i32 6
  store i8 %1021, i8* %keepProcessing1198, align 1
  br label %sw.epilog.1405

if.end.1199:                                      ; preds = %if.end.1195
  br label %if.end.1200

if.end.1200:                                      ; preds = %if.end.1199, %if.then.1096
  %1023 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone1201 = getelementptr inbounds %struct.DTD, %struct.DTD* %1023, i32 0, i32 8
  %1024 = load i8, i8* %standalone1201, align 1
  %tobool1202 = icmp ne i8 %1024, 0
  br i1 %tobool1202, label %if.end.1212, label %land.lhs.true.1203

land.lhs.true.1203:                               ; preds = %if.end.1200
  %1025 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notStandaloneHandler1204 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1025, i32 0, i32 25
  %1026 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler1204, align 8
  %tobool1205 = icmp ne i32 (i8*)* %1026, null
  br i1 %tobool1205, label %land.lhs.true.1206, label %if.end.1212

land.lhs.true.1206:                               ; preds = %land.lhs.true.1203
  %1027 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notStandaloneHandler1207 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1027, i32 0, i32 25
  %1028 = load i32 (i8*)*, i32 (i8*)** %m_notStandaloneHandler1207, align 8
  %1029 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg1208 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1029, i32 0, i32 1
  %1030 = load i8*, i8** %m_handlerArg1208, align 8
  %call1209 = call i32 %1028(i8* %1030)
  %tobool1210 = icmp ne i32 %call1209, 0
  br i1 %tobool1210, label %if.end.1212, label %if.then.1211

if.then.1211:                                     ; preds = %land.lhs.true.1206
  store i32 22, i32* %retval
  br label %return

if.end.1212:                                      ; preds = %land.lhs.true.1206, %land.lhs.true.1203, %if.end.1200
  br label %sw.epilog.1405

sw.bb.1213:                                       ; preds = %if.end.33
  %1031 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler1214 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1031, i32 0, i32 30
  %1032 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1214, align 8
  %tobool1215 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %1032, null
  br i1 %tobool1215, label %if.then.1216, label %if.end.1225

if.then.1216:                                     ; preds = %sw.bb.1213
  %1033 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %1034 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %1035 = load i8*, i8** %s.addr, align 8
  %1036 = load i8*, i8** %next.addr, align 8
  %call1217 = call %struct.ELEMENT_TYPE* @getElementType(%struct.XML_ParserStruct* %1033, %struct.encoding* %1034, i8* %1035, i8* %1036)
  %1037 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declElementType1218 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1037, i32 0, i32 61
  store %struct.ELEMENT_TYPE* %call1217, %struct.ELEMENT_TYPE** %m_declElementType1218, align 8
  %1038 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declElementType1219 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1038, i32 0, i32 61
  %1039 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType1219, align 8
  %tobool1220 = icmp ne %struct.ELEMENT_TYPE* %1039, null
  br i1 %tobool1220, label %if.end.1222, label %if.then.1221

if.then.1221:                                     ; preds = %if.then.1216
  store i32 1, i32* %retval
  br label %return

if.end.1222:                                      ; preds = %if.then.1216
  %1040 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffLevel1223 = getelementptr inbounds %struct.DTD, %struct.DTD* %1040, i32 0, i32 17
  store i32 0, i32* %scaffLevel1223, align 4
  %1041 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %1041, i32 0, i32 16
  store i32 0, i32* %scaffCount, align 4
  %1042 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %in_eldecl1224 = getelementptr inbounds %struct.DTD, %struct.DTD* %1042, i32 0, i32 12
  store i8 1, i8* %in_eldecl1224, align 1
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1225

if.end.1225:                                      ; preds = %if.end.1222, %sw.bb.1213
  br label %sw.epilog.1405

sw.bb.1226:                                       ; preds = %if.end.33, %if.end.33
  %1043 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %in_eldecl1227 = getelementptr inbounds %struct.DTD, %struct.DTD* %1043, i32 0, i32 12
  %1044 = load i8, i8* %in_eldecl1227, align 1
  %tobool1228 = icmp ne i8 %1044, 0
  br i1 %tobool1228, label %if.then.1229, label %if.end.1251

if.then.1229:                                     ; preds = %sw.bb.1226
  %1045 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler1230 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1045, i32 0, i32 30
  %1046 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1230, align 8
  %tobool1231 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %1046, null
  br i1 %tobool1231, label %if.then.1232, label %if.end.1249

if.then.1232:                                     ; preds = %if.then.1229
  %1047 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem1233 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1047, i32 0, i32 3
  %malloc_fcn1234 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem1233, i32 0, i32 0
  %1048 = load i8* (i64)*, i8* (i64)** %malloc_fcn1234, align 8
  %call1235 = call i8* %1048(i64 32)
  %1049 = bitcast i8* %call1235 to %struct.XML_cp*
  store %struct.XML_cp* %1049, %struct.XML_cp** %content, align 8
  %1050 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8
  %tobool1236 = icmp ne %struct.XML_cp* %1050, null
  br i1 %tobool1236, label %if.end.1238, label %if.then.1237

if.then.1237:                                     ; preds = %if.then.1232
  store i32 1, i32* %retval
  br label %return

if.end.1238:                                      ; preds = %if.then.1232
  %1051 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8
  %quant1239 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %1051, i32 0, i32 1
  store i32 0, i32* %quant1239, align 4
  %1052 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8
  %name1240 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %1052, i32 0, i32 2
  store i8* null, i8** %name1240, align 8
  %1053 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8
  %numchildren = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %1053, i32 0, i32 3
  store i32 0, i32* %numchildren, align 4
  %1054 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8
  %children = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %1054, i32 0, i32 4
  store %struct.XML_cp* null, %struct.XML_cp** %children, align 8
  %1055 = load i32, i32* %role, align 4
  %cmp1241 = icmp eq i32 %1055, 41
  %cond1243 = select i1 %cmp1241, i32 2, i32 1
  %1056 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8
  %type1244 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %1056, i32 0, i32 0
  store i32 %cond1243, i32* %type1244, align 4
  %1057 = load i8*, i8** %s.addr, align 8
  %1058 = load i8**, i8*** %eventEndPP, align 8
  store i8* %1057, i8** %1058, align 8
  %1059 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler1245 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1059, i32 0, i32 30
  %1060 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1245, align 8
  %1061 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg1246 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1061, i32 0, i32 1
  %1062 = load i8*, i8** %m_handlerArg1246, align 8
  %1063 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declElementType1247 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1063, i32 0, i32 61
  %1064 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType1247, align 8
  %name1248 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %1064, i32 0, i32 0
  %1065 = load i8*, i8** %name1248, align 8
  %1066 = load %struct.XML_cp*, %struct.XML_cp** %content, align 8
  call void %1060(i8* %1062, i8* %1065, %struct.XML_cp* %1066)
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1249

if.end.1249:                                      ; preds = %if.end.1238, %if.then.1229
  %1067 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %in_eldecl1250 = getelementptr inbounds %struct.DTD, %struct.DTD* %1067, i32 0, i32 12
  store i8 0, i8* %in_eldecl1250, align 1
  br label %if.end.1251

if.end.1251:                                      ; preds = %if.end.1249, %sw.bb.1226
  br label %sw.epilog.1405

sw.bb.1252:                                       ; preds = %if.end.33
  %1068 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %in_eldecl1253 = getelementptr inbounds %struct.DTD, %struct.DTD* %1068, i32 0, i32 12
  %1069 = load i8, i8* %in_eldecl1253, align 1
  %tobool1254 = icmp ne i8 %1069, 0
  br i1 %tobool1254, label %if.then.1255, label %if.end.1269

if.then.1255:                                     ; preds = %sw.bb.1252
  %1070 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffLevel1256 = getelementptr inbounds %struct.DTD, %struct.DTD* %1070, i32 0, i32 17
  %1071 = load i32, i32* %scaffLevel1256, align 4
  %sub1257 = sub i32 %1071, 1
  %idxprom1258 = sext i32 %sub1257 to i64
  %1072 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex1259 = getelementptr inbounds %struct.DTD, %struct.DTD* %1072, i32 0, i32 18
  %1073 = load i32*, i32** %scaffIndex1259, align 8
  %arrayidx1260 = getelementptr i32, i32* %1073, i64 %idxprom1258
  %1074 = load i32, i32* %arrayidx1260, align 4
  %idxprom1261 = sext i32 %1074 to i64
  %1075 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold1262 = getelementptr inbounds %struct.DTD, %struct.DTD* %1075, i32 0, i32 13
  %1076 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1262, align 8
  %arrayidx1263 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %1076, i64 %idxprom1261
  %type1264 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1263, i32 0, i32 0
  store i32 3, i32* %type1264, align 4
  %1077 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler1265 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1077, i32 0, i32 30
  %1078 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1265, align 8
  %tobool1266 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %1078, null
  br i1 %tobool1266, label %if.then.1267, label %if.end.1268

if.then.1267:                                     ; preds = %if.then.1255
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1268

if.end.1268:                                      ; preds = %if.then.1267, %if.then.1255
  br label %if.end.1269

if.end.1269:                                      ; preds = %if.end.1268, %sw.bb.1252
  br label %sw.epilog.1405

sw.bb.1270:                                       ; preds = %if.end.33
  store i32 0, i32* %quant, align 4
  br label %elementContent

sw.bb.1271:                                       ; preds = %if.end.33
  store i32 1, i32* %quant, align 4
  br label %elementContent

sw.bb.1272:                                       ; preds = %if.end.33
  store i32 2, i32* %quant, align 4
  br label %elementContent

sw.bb.1273:                                       ; preds = %if.end.33
  store i32 3, i32* %quant, align 4
  br label %elementContent

elementContent:                                   ; preds = %sw.bb.1273, %sw.bb.1272, %sw.bb.1271, %sw.bb.1270
  %1079 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %in_eldecl1274 = getelementptr inbounds %struct.DTD, %struct.DTD* %1079, i32 0, i32 12
  %1080 = load i8, i8* %in_eldecl1274, align 1
  %tobool1275 = icmp ne i8 %1080, 0
  br i1 %tobool1275, label %if.then.1276, label %if.end.1319

if.then.1276:                                     ; preds = %elementContent
  %1081 = load i32, i32* %quant, align 4
  %cmp1278 = icmp eq i32 %1081, 0
  br i1 %cmp1278, label %cond.true.1280, label %cond.false.1281

cond.true.1280:                                   ; preds = %if.then.1276
  %1082 = load i8*, i8** %next.addr, align 8
  br label %cond.end

cond.false.1281:                                  ; preds = %if.then.1276
  %1083 = load i8*, i8** %next.addr, align 8
  %1084 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar1282 = getelementptr inbounds %struct.encoding, %struct.encoding* %1084, i32 0, i32 13
  %1085 = load i32, i32* %minBytesPerChar1282, align 4
  %idx.ext1283 = sext i32 %1085 to i64
  %idx.neg1284 = sub i64 0, %idx.ext1283
  %add.ptr1285 = getelementptr i8, i8* %1083, i64 %idx.neg1284
  br label %cond.end

cond.end:                                         ; preds = %cond.false.1281, %cond.true.1280
  %cond1286 = phi i8* [ %1082, %cond.true.1280 ], [ %add.ptr1285, %cond.false.1281 ]
  store i8* %cond1286, i8** %nxt, align 8
  %1086 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call1288 = call i32 @nextScaffoldPart(%struct.XML_ParserStruct* %1086)
  store i32 %call1288, i32* %myindex1287, align 4
  %1087 = load i32, i32* %myindex1287, align 4
  %cmp1289 = icmp slt i32 %1087, 0
  br i1 %cmp1289, label %if.then.1291, label %if.end.1292

if.then.1291:                                     ; preds = %cond.end
  store i32 1, i32* %retval
  br label %return

if.end.1292:                                      ; preds = %cond.end
  %1088 = load i32, i32* %myindex1287, align 4
  %idxprom1293 = sext i32 %1088 to i64
  %1089 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold1294 = getelementptr inbounds %struct.DTD, %struct.DTD* %1089, i32 0, i32 13
  %1090 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1294, align 8
  %arrayidx1295 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %1090, i64 %idxprom1293
  %type1296 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1295, i32 0, i32 0
  store i32 4, i32* %type1296, align 4
  %1091 = load i32, i32* %quant, align 4
  %1092 = load i32, i32* %myindex1287, align 4
  %idxprom1297 = sext i32 %1092 to i64
  %1093 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold1298 = getelementptr inbounds %struct.DTD, %struct.DTD* %1093, i32 0, i32 13
  %1094 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1298, align 8
  %arrayidx1299 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %1094, i64 %idxprom1297
  %quant1300 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1299, i32 0, i32 1
  store i32 %1091, i32* %quant1300, align 4
  %1095 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %1096 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %1097 = load i8*, i8** %s.addr, align 8
  %1098 = load i8*, i8** %nxt, align 8
  %call1301 = call %struct.ELEMENT_TYPE* @getElementType(%struct.XML_ParserStruct* %1095, %struct.encoding* %1096, i8* %1097, i8* %1098)
  store %struct.ELEMENT_TYPE* %call1301, %struct.ELEMENT_TYPE** %el, align 8
  %1099 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %el, align 8
  %tobool1302 = icmp ne %struct.ELEMENT_TYPE* %1099, null
  br i1 %tobool1302, label %if.end.1304, label %if.then.1303

if.then.1303:                                     ; preds = %if.end.1292
  store i32 1, i32* %retval
  br label %return

if.end.1304:                                      ; preds = %if.end.1292
  %1100 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %el, align 8
  %name1305 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %1100, i32 0, i32 0
  %1101 = load i8*, i8** %name1305, align 8
  store i8* %1101, i8** %name1277, align 8
  %1102 = load i8*, i8** %name1277, align 8
  %1103 = load i32, i32* %myindex1287, align 4
  %idxprom1306 = sext i32 %1103 to i64
  %1104 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold1307 = getelementptr inbounds %struct.DTD, %struct.DTD* %1104, i32 0, i32 13
  %1105 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1307, align 8
  %arrayidx1308 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %1105, i64 %idxprom1306
  %name1309 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1308, i32 0, i32 2
  store i8* %1102, i8** %name1309, align 8
  store i32 0, i32* %nameLen, align 4
  br label %for.cond.1310

for.cond.1310:                                    ; preds = %for.body, %if.end.1304
  %1106 = load i32, i32* %nameLen, align 4
  %inc1311 = add i32 %1106, 1
  store i32 %inc1311, i32* %nameLen, align 4
  %idxprom1312 = sext i32 %1106 to i64
  %1107 = load i8*, i8** %name1277, align 8
  %arrayidx1313 = getelementptr i8, i8* %1107, i64 %idxprom1312
  %1108 = load i8, i8* %arrayidx1313, align 1
  %tobool1314 = icmp ne i8 %1108, 0
  br i1 %tobool1314, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.1310
  br label %for.cond.1310

for.end:                                          ; preds = %for.cond.1310
  %1109 = load i32, i32* %nameLen, align 4
  %1110 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %1110, i32 0, i32 14
  %1111 = load i32, i32* %contentStringLen, align 4
  %add = add i32 %1111, %1109
  store i32 %add, i32* %contentStringLen, align 4
  %1112 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler1315 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1112, i32 0, i32 30
  %1113 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1315, align 8
  %tobool1316 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %1113, null
  br i1 %tobool1316, label %if.then.1317, label %if.end.1318

if.then.1317:                                     ; preds = %for.end
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1318

if.end.1318:                                      ; preds = %if.then.1317, %for.end
  br label %if.end.1319

if.end.1319:                                      ; preds = %if.end.1318, %elementContent
  br label %sw.epilog.1405

sw.bb.1320:                                       ; preds = %if.end.33
  store i32 0, i32* %quant, align 4
  br label %closeGroup

sw.bb.1321:                                       ; preds = %if.end.33
  store i32 1, i32* %quant, align 4
  br label %closeGroup

sw.bb.1322:                                       ; preds = %if.end.33
  store i32 2, i32* %quant, align 4
  br label %closeGroup

sw.bb.1323:                                       ; preds = %if.end.33
  store i32 3, i32* %quant, align 4
  br label %closeGroup

closeGroup:                                       ; preds = %sw.bb.1323, %sw.bb.1322, %sw.bb.1321, %sw.bb.1320
  %1114 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %in_eldecl1324 = getelementptr inbounds %struct.DTD, %struct.DTD* %1114, i32 0, i32 12
  %1115 = load i8, i8* %in_eldecl1324, align 1
  %tobool1325 = icmp ne i8 %1115, 0
  br i1 %tobool1325, label %if.then.1326, label %if.end.1358

if.then.1326:                                     ; preds = %closeGroup
  %1116 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler1327 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1116, i32 0, i32 30
  %1117 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1327, align 8
  %tobool1328 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %1117, null
  br i1 %tobool1328, label %if.then.1329, label %if.end.1330

if.then.1329:                                     ; preds = %if.then.1326
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1330

if.end.1330:                                      ; preds = %if.then.1329, %if.then.1326
  %1118 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffLevel1331 = getelementptr inbounds %struct.DTD, %struct.DTD* %1118, i32 0, i32 17
  %1119 = load i32, i32* %scaffLevel1331, align 4
  %dec = add i32 %1119, -1
  store i32 %dec, i32* %scaffLevel1331, align 4
  %1120 = load i32, i32* %quant, align 4
  %1121 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffLevel1332 = getelementptr inbounds %struct.DTD, %struct.DTD* %1121, i32 0, i32 17
  %1122 = load i32, i32* %scaffLevel1332, align 4
  %idxprom1333 = sext i32 %1122 to i64
  %1123 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex1334 = getelementptr inbounds %struct.DTD, %struct.DTD* %1123, i32 0, i32 18
  %1124 = load i32*, i32** %scaffIndex1334, align 8
  %arrayidx1335 = getelementptr i32, i32* %1124, i64 %idxprom1333
  %1125 = load i32, i32* %arrayidx1335, align 4
  %idxprom1336 = sext i32 %1125 to i64
  %1126 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold1337 = getelementptr inbounds %struct.DTD, %struct.DTD* %1126, i32 0, i32 13
  %1127 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold1337, align 8
  %arrayidx1338 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %1127, i64 %idxprom1336
  %quant1339 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx1338, i32 0, i32 1
  store i32 %1120, i32* %quant1339, align 4
  %1128 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffLevel1340 = getelementptr inbounds %struct.DTD, %struct.DTD* %1128, i32 0, i32 17
  %1129 = load i32, i32* %scaffLevel1340, align 4
  %cmp1341 = icmp eq i32 %1129, 0
  br i1 %cmp1341, label %if.then.1343, label %if.end.1357

if.then.1343:                                     ; preds = %if.end.1330
  %1130 = load i8, i8* %handleDefault, align 1
  %tobool1344 = icmp ne i8 %1130, 0
  br i1 %tobool1344, label %if.end.1354, label %if.then.1345

if.then.1345:                                     ; preds = %if.then.1343
  %1131 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call1346 = call %struct.XML_cp* @build_model(%struct.XML_ParserStruct* %1131)
  store %struct.XML_cp* %call1346, %struct.XML_cp** %model, align 8
  %1132 = load %struct.XML_cp*, %struct.XML_cp** %model, align 8
  %tobool1347 = icmp ne %struct.XML_cp* %1132, null
  br i1 %tobool1347, label %if.end.1349, label %if.then.1348

if.then.1348:                                     ; preds = %if.then.1345
  store i32 1, i32* %retval
  br label %return

if.end.1349:                                      ; preds = %if.then.1345
  %1133 = load i8*, i8** %s.addr, align 8
  %1134 = load i8**, i8*** %eventEndPP, align 8
  store i8* %1133, i8** %1134, align 8
  %1135 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler1350 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1135, i32 0, i32 30
  %1136 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1350, align 8
  %1137 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg1351 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1137, i32 0, i32 1
  %1138 = load i8*, i8** %m_handlerArg1351, align 8
  %1139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_declElementType1352 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1139, i32 0, i32 61
  %1140 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %m_declElementType1352, align 8
  %name1353 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %1140, i32 0, i32 0
  %1141 = load i8*, i8** %name1353, align 8
  %1142 = load %struct.XML_cp*, %struct.XML_cp** %model, align 8
  call void %1136(i8* %1138, i8* %1141, %struct.XML_cp* %1142)
  br label %if.end.1354

if.end.1354:                                      ; preds = %if.end.1349, %if.then.1343
  %1143 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %in_eldecl1355 = getelementptr inbounds %struct.DTD, %struct.DTD* %1143, i32 0, i32 12
  store i8 0, i8* %in_eldecl1355, align 1
  %1144 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %contentStringLen1356 = getelementptr inbounds %struct.DTD, %struct.DTD* %1144, i32 0, i32 14
  store i32 0, i32* %contentStringLen1356, align 4
  br label %if.end.1357

if.end.1357:                                      ; preds = %if.end.1354, %if.end.1330
  br label %if.end.1358

if.end.1358:                                      ; preds = %if.end.1357, %closeGroup
  br label %sw.epilog.1405

sw.bb.1359:                                       ; preds = %if.end.33
  %1145 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %1146 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %1147 = load i8*, i8** %s.addr, align 8
  %1148 = load i8*, i8** %next.addr, align 8
  %call1360 = call i32 @reportProcessingInstruction(%struct.XML_ParserStruct* %1145, %struct.encoding* %1146, i8* %1147, i8* %1148)
  %tobool1361 = icmp ne i32 %call1360, 0
  br i1 %tobool1361, label %if.end.1363, label %if.then.1362

if.then.1362:                                     ; preds = %sw.bb.1359
  store i32 1, i32* %retval
  br label %return

if.end.1363:                                      ; preds = %sw.bb.1359
  store i8 0, i8* %handleDefault, align 1
  br label %sw.epilog.1405

sw.bb.1364:                                       ; preds = %if.end.33
  %1149 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %1150 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %1151 = load i8*, i8** %s.addr, align 8
  %1152 = load i8*, i8** %next.addr, align 8
  %call1365 = call i32 @reportComment(%struct.XML_ParserStruct* %1149, %struct.encoding* %1150, i8* %1151, i8* %1152)
  %tobool1366 = icmp ne i32 %call1365, 0
  br i1 %tobool1366, label %if.end.1368, label %if.then.1367

if.then.1367:                                     ; preds = %sw.bb.1364
  store i32 1, i32* %retval
  br label %return

if.end.1368:                                      ; preds = %sw.bb.1364
  store i8 0, i8* %handleDefault, align 1
  br label %sw.epilog.1405

sw.bb.1369:                                       ; preds = %if.end.33
  %1153 = load i32, i32* %tok.addr, align 4
  switch i32 %1153, label %sw.epilog.1371 [
    i32 14, label %sw.bb.1370
  ]

sw.bb.1370:                                       ; preds = %sw.bb.1369
  store i8 0, i8* %handleDefault, align 1
  br label %sw.epilog.1371

sw.epilog.1371:                                   ; preds = %sw.bb.1369, %sw.bb.1370
  br label %sw.epilog.1405

sw.bb.1372:                                       ; preds = %if.end.33
  %1154 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startDoctypeDeclHandler1373 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1154, i32 0, i32 19
  %1155 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %m_startDoctypeDeclHandler1373, align 8
  %tobool1374 = icmp ne void (i8*, i8*, i8*, i8*, i32)* %1155, null
  br i1 %tobool1374, label %if.then.1375, label %if.end.1376

if.then.1375:                                     ; preds = %sw.bb.1372
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1376

if.end.1376:                                      ; preds = %if.then.1375, %sw.bb.1372
  br label %sw.epilog.1405

sw.bb.1377:                                       ; preds = %if.end.33
  %1156 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing1378 = getelementptr inbounds %struct.DTD, %struct.DTD* %1156, i32 0, i32 6
  %1157 = load i8, i8* %keepProcessing1378, align 1
  %conv1379 = zext i8 %1157 to i32
  %tobool1380 = icmp ne i32 %conv1379, 0
  br i1 %tobool1380, label %land.lhs.true.1381, label %if.end.1385

land.lhs.true.1381:                               ; preds = %sw.bb.1377
  %1158 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_entityDeclHandler1382 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1158, i32 0, i32 32
  %1159 = load void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)** %m_entityDeclHandler1382, align 8
  %tobool1383 = icmp ne void (i8*, i8*, i32, i8*, i32, i8*, i8*, i8*, i8*)* %1159, null
  br i1 %tobool1383, label %if.then.1384, label %if.end.1385

if.then.1384:                                     ; preds = %land.lhs.true.1381
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1385

if.end.1385:                                      ; preds = %if.then.1384, %land.lhs.true.1381, %sw.bb.1377
  br label %sw.epilog.1405

sw.bb.1386:                                       ; preds = %if.end.33
  %1160 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_notationDeclHandler1387 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1160, i32 0, i32 22
  %1161 = load void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*, i8*)** %m_notationDeclHandler1387, align 8
  %tobool1388 = icmp ne void (i8*, i8*, i8*, i8*, i8*)* %1161, null
  br i1 %tobool1388, label %if.then.1389, label %if.end.1390

if.then.1389:                                     ; preds = %sw.bb.1386
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1390

if.end.1390:                                      ; preds = %if.then.1389, %sw.bb.1386
  br label %sw.epilog.1405

sw.bb.1391:                                       ; preds = %if.end.33
  %1162 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing1392 = getelementptr inbounds %struct.DTD, %struct.DTD* %1162, i32 0, i32 6
  %1163 = load i8, i8* %keepProcessing1392, align 1
  %conv1393 = zext i8 %1163 to i32
  %tobool1394 = icmp ne i32 %conv1393, 0
  br i1 %tobool1394, label %land.lhs.true.1395, label %if.end.1399

land.lhs.true.1395:                               ; preds = %sw.bb.1391
  %1164 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attlistDeclHandler1396 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1164, i32 0, i32 31
  %1165 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %m_attlistDeclHandler1396, align 8
  %tobool1397 = icmp ne void (i8*, i8*, i8*, i8*, i8*, i32)* %1165, null
  br i1 %tobool1397, label %if.then.1398, label %if.end.1399

if.then.1398:                                     ; preds = %land.lhs.true.1395
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1399

if.end.1399:                                      ; preds = %if.then.1398, %land.lhs.true.1395, %sw.bb.1391
  br label %sw.epilog.1405

sw.bb.1400:                                       ; preds = %if.end.33
  %1166 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_elementDeclHandler1401 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1166, i32 0, i32 30
  %1167 = load void (i8*, i8*, %struct.XML_cp*)*, void (i8*, i8*, %struct.XML_cp*)** %m_elementDeclHandler1401, align 8
  %tobool1402 = icmp ne void (i8*, i8*, %struct.XML_cp*)* %1167, null
  br i1 %tobool1402, label %if.then.1403, label %if.end.1404

if.then.1403:                                     ; preds = %sw.bb.1400
  store i8 0, i8* %handleDefault, align 1
  br label %if.end.1404

if.end.1404:                                      ; preds = %if.then.1403, %sw.bb.1400
  br label %sw.epilog.1405

sw.epilog.1405:                                   ; preds = %if.end.33, %if.end.1404, %if.end.1399, %if.end.1390, %if.end.1385, %if.end.1376, %sw.epilog.1371, %if.end.1368, %if.end.1363, %if.end.1358, %if.end.1319, %if.end.1269, %if.end.1251, %if.end.1225, %if.end.1212, %if.else.1196, %if.then.1192, %if.end.1172, %if.end.1153, %if.end.1086, %if.end.1038, %if.end.1014, %if.end.950, %if.end.930, %if.end.916, %if.end.890, %if.end.862, %if.end.847, %if.end.788, %if.then.735, %if.end.731, %if.end.678, %if.end.653, %if.end.561, %if.end.507, %if.end.401, %if.end.319, %if.end.290, %if.end.201, %if.end.133, %if.end.73, %if.end.66, %if.end.55, %if.end.43
  %1168 = load i8, i8* %handleDefault, align 1
  %conv1406 = zext i8 %1168 to i32
  %tobool1407 = icmp ne i32 %conv1406, 0
  br i1 %tobool1407, label %land.lhs.true.1408, label %if.end.1412

land.lhs.true.1408:                               ; preds = %sw.epilog.1405
  %1169 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler1409 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1169, i32 0, i32 18
  %1170 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler1409, align 8
  %tobool1410 = icmp ne void (i8*, i8*, i32)* %1170, null
  br i1 %tobool1410, label %if.then.1411, label %if.end.1412

if.then.1411:                                     ; preds = %land.lhs.true.1408
  %1171 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %1172 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %1173 = load i8*, i8** %s.addr, align 8
  %1174 = load i8*, i8** %next.addr, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %1171, %struct.encoding* %1172, i8* %1173, i8* %1174)
  br label %if.end.1412

if.end.1412:                                      ; preds = %if.then.1411, %land.lhs.true.1408, %sw.epilog.1405
  %1175 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1175, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %1176 = load i32, i32* %parsing, align 4
  switch i32 %1176, label %sw.default.1415 [
    i32 3, label %sw.bb.1413
    i32 2, label %sw.bb.1414
  ]

sw.bb.1413:                                       ; preds = %if.end.1412
  %1177 = load i8*, i8** %next.addr, align 8
  %1178 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %1177, i8** %1178, align 8
  store i32 0, i32* %retval
  br label %return

sw.bb.1414:                                       ; preds = %if.end.1412
  store i32 35, i32* %retval
  br label %return

sw.default.1415:                                  ; preds = %if.end.1412
  %1179 = load i8*, i8** %next.addr, align 8
  store i8* %1179, i8** %s.addr, align 8
  %1180 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %1180, i32 0, i32 0
  %arrayidx1416 = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0
  %1181 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx1416, align 8
  %1182 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %1183 = load i8*, i8** %s.addr, align 8
  %1184 = load i8*, i8** %end.addr, align 8
  %call1417 = call i32 %1181(%struct.encoding* %1182, i8* %1183, i8* %1184, i8** %next.addr)
  store i32 %call1417, i32* %tok.addr, align 4
  br label %sw.epilog.1418

sw.epilog.1418:                                   ; preds = %sw.default.1415
  br label %for.cond

return:                                           ; preds = %sw.bb.1414, %sw.bb.1413, %if.then.1367, %if.then.1362, %if.then.1348, %if.then.1303, %if.then.1291, %if.then.1237, %if.then.1221, %if.then.1211, %if.then.1186, %if.then.1171, %if.then.1157, %if.then.1138, %if.then.1134, %if.then.1112, %if.then.1048, %if.then.1024, %if.then.1003, %if.then.990, %if.then.979, %if.then.964, %if.then.947, %if.then.944, %sw.default.935, %sw.bb.934, %sw.bb.933, %if.then.909, %if.then.883, %if.then.867, %if.then.856, %if.then.804, %if.then.797, %if.then.751, %if.then.745, %if.then.693, %if.then.640, %if.then.613, %if.then.603, %if.then.581, %if.then.559, %if.then.486, %if.then.431, %if.then.418, %if.then.381, %if.then.330, %if.then.314, %if.then.309, %if.then.264, %if.then.258, %if.end.252, %if.then.246, %if.then.231, %if.then.219, %if.then.185, %if.then.172, %if.then.161, %if.then.123, %if.then.106, %if.then.94, %if.then.86, %if.then.79, %if.then.72, %if.then.51, %if.then.42, %if.end.31, %if.end.30, %if.then.29, %if.then.18, %sw.bb.9, %sw.bb.8, %sw.bb, %if.then.6
  %1185 = load i32, i32* %retval
  ret i32 %1185
}

; Function Attrs: nounwind uwtable
define internal i32 @processXmlDecl(%struct.XML_ParserStruct* %parser, i32 %isGeneralTextEntity, i8* %s, i8* %next) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %isGeneralTextEntity.addr = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %next.addr = alloca i8*, align 8
  %encodingName = alloca i8*, align 8
  %storedEncName = alloca i8*, align 8
  %newEncoding = alloca %struct.encoding*, align 8
  %version = alloca i8*, align 8
  %versionend = alloca i8*, align 8
  %storedversion = alloca i8*, align 8
  %standalone = alloca i32, align 4
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i32 %isGeneralTextEntity, i32* %isGeneralTextEntity.addr, align 4
  store i8* %s, i8** %s.addr, align 8
  store i8* %next, i8** %next.addr, align 8
  store i8* null, i8** %encodingName, align 8
  store i8* null, i8** %storedEncName, align 8
  store %struct.encoding* null, %struct.encoding** %newEncoding, align 8
  store i8* null, i8** %version, align 8
  store i8* null, i8** %storedversion, align 8
  store i32 -1, i32* %standalone, align 4
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 38
  %1 = load i8, i8* %m_ns, align 1
  %conv = zext i8 %1 to i32
  %tobool = icmp ne i32 %conv, 0
  %cond = select i1 %tobool, i32 (i32, %struct.encoding*, i8*, i8*, i8**, i8**, i8**, i8**, %struct.encoding**, i32*)* @PyExpat_XmlParseXmlDeclNS, i32 (i32, %struct.encoding*, i8*, i8*, i8**, i8**, i8**, i8**, %struct.encoding**, i32*)* @PyExpat_XmlParseXmlDecl
  %2 = load i32, i32* %isGeneralTextEntity.addr, align 4
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8*, i8** %next.addr, align 8
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 47
  %call = call i32 %cond(i32 %2, %struct.encoding* %4, i8* %5, i8* %6, i8** %m_eventPtr, i8** %version, i8** %versionend, i8** %encodingName, %struct.encoding** %newEncoding, i32* %standalone)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %isGeneralTextEntity.addr, align 4
  %tobool2 = icmp ne i32 %8, 0
  br i1 %tobool2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %if.then
  store i32 31, i32* %retval
  br label %return

if.else:                                          ; preds = %if.then
  store i32 30, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %isGeneralTextEntity.addr, align 4
  %tobool4 = icmp ne i32 %9, 0
  br i1 %tobool4, label %if.end.13, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %10 = load i32, i32* %standalone, align 4
  %cmp = icmp eq i32 %10, 1
  br i1 %cmp, label %if.then.6, label %if.end.13

if.then.6:                                        ; preds = %land.lhs.true
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 65
  %12 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  %standalone7 = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 8
  store i8 1, i8* %standalone7, align 1
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_paramEntityParsing = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 88
  %14 = load i32, i32* %m_paramEntityParsing, align 4
  %cmp8 = icmp eq i32 %14, 1
  br i1 %cmp8, label %if.then.10, label %if.end.12

if.then.10:                                       ; preds = %if.then.6
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_paramEntityParsing11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 88
  store i32 0, i32* %m_paramEntityParsing11, align 4
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.10, %if.then.6
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %land.lhs.true, %if.end
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_xmlDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 33
  %17 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler, align 8
  %tobool14 = icmp ne void (i8*, i8*, i8*, i32)* %17, null
  br i1 %tobool14, label %if.then.15, label %if.else.43

if.then.15:                                       ; preds = %if.end.13
  %18 = load i8*, i8** %encodingName, align 8
  %cmp16 = icmp ne i8* %18, null
  br i1 %cmp16, label %if.then.18, label %if.end.29

if.then.18:                                       ; preds = %if.then.15
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 80
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 34
  %21 = load %struct.encoding*, %struct.encoding** %m_encoding19, align 8
  %22 = load i8*, i8** %encodingName, align 8
  %23 = load i8*, i8** %encodingName, align 8
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 34
  %25 = load %struct.encoding*, %struct.encoding** %m_encoding20, align 8
  %nameLength = getelementptr inbounds %struct.encoding, %struct.encoding* %25, i32 0, i32 4
  %26 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength, align 8
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 34
  %28 = load %struct.encoding*, %struct.encoding** %m_encoding21, align 8
  %29 = load i8*, i8** %encodingName, align 8
  %call22 = call i32 %26(%struct.encoding* %28, i8* %29)
  %idx.ext = sext i32 %call22 to i64
  %add.ptr = getelementptr i8, i8* %23, i64 %idx.ext
  %call23 = call i8* @poolStoreString(%struct.STRING_POOL* %m_temp2Pool, %struct.encoding* %21, i8* %22, i8* %add.ptr)
  store i8* %call23, i8** %storedEncName, align 8
  %30 = load i8*, i8** %storedEncName, align 8
  %tobool24 = icmp ne i8* %30, null
  br i1 %tobool24, label %if.end.26, label %if.then.25

if.then.25:                                       ; preds = %if.then.18
  store i32 1, i32* %retval
  br label %return

if.end.26:                                        ; preds = %if.then.18
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_temp2Pool27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 80
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_temp2Pool27, i32 0, i32 3
  %32 = load i8*, i8** %ptr, align 8
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_temp2Pool28 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 80
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_temp2Pool28, i32 0, i32 4
  store i8* %32, i8** %start, align 8
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.26, %if.then.15
  %34 = load i8*, i8** %version, align 8
  %tobool30 = icmp ne i8* %34, null
  br i1 %tobool30, label %if.then.31, label %if.end.41

if.then.31:                                       ; preds = %if.end.29
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_temp2Pool32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 80
  %36 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %36, i32 0, i32 34
  %37 = load %struct.encoding*, %struct.encoding** %m_encoding33, align 8
  %38 = load i8*, i8** %version, align 8
  %39 = load i8*, i8** %versionend, align 8
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 34
  %41 = load %struct.encoding*, %struct.encoding** %m_encoding34, align 8
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %41, i32 0, i32 13
  %42 = load i32, i32* %minBytesPerChar, align 4
  %idx.ext35 = sext i32 %42 to i64
  %idx.neg = sub i64 0, %idx.ext35
  %add.ptr36 = getelementptr i8, i8* %39, i64 %idx.neg
  %call37 = call i8* @poolStoreString(%struct.STRING_POOL* %m_temp2Pool32, %struct.encoding* %37, i8* %38, i8* %add.ptr36)
  store i8* %call37, i8** %storedversion, align 8
  %43 = load i8*, i8** %storedversion, align 8
  %tobool38 = icmp ne i8* %43, null
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %if.then.31
  store i32 1, i32* %retval
  br label %return

if.end.40:                                        ; preds = %if.then.31
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %if.end.29
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_xmlDeclHandler42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 33
  %45 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %m_xmlDeclHandler42, align 8
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 1
  %47 = load i8*, i8** %m_handlerArg, align 8
  %48 = load i8*, i8** %storedversion, align 8
  %49 = load i8*, i8** %storedEncName, align 8
  %50 = load i32, i32* %standalone, align 4
  call void %45(i8* %47, i8* %48, i8* %49, i32 %50)
  br label %if.end.48

if.else.43:                                       ; preds = %if.end.13
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 18
  %52 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %tobool44 = icmp ne void (i8*, i8*, i32)* %52, null
  br i1 %tobool44, label %if.then.45, label %if.end.47

if.then.45:                                       ; preds = %if.else.43
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding46 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 34
  %55 = load %struct.encoding*, %struct.encoding** %m_encoding46, align 8
  %56 = load i8*, i8** %s.addr, align 8
  %57 = load i8*, i8** %next.addr, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %53, %struct.encoding* %55, i8* %56, i8* %57)
  br label %if.end.47

if.end.47:                                        ; preds = %if.then.45, %if.else.43
  br label %if.end.48

if.end.48:                                        ; preds = %if.end.47, %if.end.41
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_protocolEncodingName = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 37
  %59 = load i8*, i8** %m_protocolEncodingName, align 8
  %cmp49 = icmp eq i8* %59, null
  br i1 %cmp49, label %if.then.51, label %if.end.90

if.then.51:                                       ; preds = %if.end.48
  %60 = load %struct.encoding*, %struct.encoding** %newEncoding, align 8
  %tobool52 = icmp ne %struct.encoding* %60, null
  br i1 %tobool52, label %if.then.53, label %if.else.63

if.then.53:                                       ; preds = %if.then.51
  %61 = load %struct.encoding*, %struct.encoding** %newEncoding, align 8
  %minBytesPerChar54 = getelementptr inbounds %struct.encoding, %struct.encoding* %61, i32 0, i32 13
  %62 = load i32, i32* %minBytesPerChar54, align 4
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding55 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 34
  %64 = load %struct.encoding*, %struct.encoding** %m_encoding55, align 8
  %minBytesPerChar56 = getelementptr inbounds %struct.encoding, %struct.encoding* %64, i32 0, i32 13
  %65 = load i32, i32* %minBytesPerChar56, align 4
  %cmp57 = icmp ne i32 %62, %65
  br i1 %cmp57, label %if.then.59, label %if.end.61

if.then.59:                                       ; preds = %if.then.53
  %66 = load i8*, i8** %encodingName, align 8
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr60 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %67, i32 0, i32 47
  store i8* %66, i8** %m_eventPtr60, align 8
  store i32 19, i32* %retval
  br label %return

if.end.61:                                        ; preds = %if.then.53
  %68 = load %struct.encoding*, %struct.encoding** %newEncoding, align 8
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding62 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 34
  store %struct.encoding* %68, %struct.encoding** %m_encoding62, align 8
  br label %if.end.89

if.else.63:                                       ; preds = %if.then.51
  %70 = load i8*, i8** %encodingName, align 8
  %tobool64 = icmp ne i8* %70, null
  br i1 %tobool64, label %if.then.65, label %if.end.88

if.then.65:                                       ; preds = %if.else.63
  %71 = load i8*, i8** %storedEncName, align 8
  %tobool66 = icmp ne i8* %71, null
  br i1 %tobool66, label %if.end.80, label %if.then.67

if.then.67:                                       ; preds = %if.then.65
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_temp2Pool68 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 80
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding69 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %73, i32 0, i32 34
  %74 = load %struct.encoding*, %struct.encoding** %m_encoding69, align 8
  %75 = load i8*, i8** %encodingName, align 8
  %76 = load i8*, i8** %encodingName, align 8
  %77 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding70 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %77, i32 0, i32 34
  %78 = load %struct.encoding*, %struct.encoding** %m_encoding70, align 8
  %nameLength71 = getelementptr inbounds %struct.encoding, %struct.encoding* %78, i32 0, i32 4
  %79 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength71, align 8
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding72 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %80, i32 0, i32 34
  %81 = load %struct.encoding*, %struct.encoding** %m_encoding72, align 8
  %82 = load i8*, i8** %encodingName, align 8
  %call73 = call i32 %79(%struct.encoding* %81, i8* %82)
  %idx.ext74 = sext i32 %call73 to i64
  %add.ptr75 = getelementptr i8, i8* %76, i64 %idx.ext74
  %call76 = call i8* @poolStoreString(%struct.STRING_POOL* %m_temp2Pool68, %struct.encoding* %74, i8* %75, i8* %add.ptr75)
  store i8* %call76, i8** %storedEncName, align 8
  %83 = load i8*, i8** %storedEncName, align 8
  %tobool77 = icmp ne i8* %83, null
  br i1 %tobool77, label %if.end.79, label %if.then.78

if.then.78:                                       ; preds = %if.then.67
  store i32 1, i32* %retval
  br label %return

if.end.79:                                        ; preds = %if.then.67
  br label %if.end.80

if.end.80:                                        ; preds = %if.end.79, %if.then.65
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %85 = load i8*, i8** %storedEncName, align 8
  %call81 = call i32 @handleUnknownEncoding(%struct.XML_ParserStruct* %84, i8* %85)
  store i32 %call81, i32* %result, align 4
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_temp2Pool82 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 80
  call void @poolClear(%struct.STRING_POOL* %m_temp2Pool82)
  %87 = load i32, i32* %result, align 4
  %cmp83 = icmp eq i32 %87, 18
  br i1 %cmp83, label %if.then.85, label %if.end.87

if.then.85:                                       ; preds = %if.end.80
  %88 = load i8*, i8** %encodingName, align 8
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr86 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 47
  store i8* %88, i8** %m_eventPtr86, align 8
  br label %if.end.87

if.end.87:                                        ; preds = %if.then.85, %if.end.80
  %90 = load i32, i32* %result, align 4
  store i32 %90, i32* %retval
  br label %return

if.end.88:                                        ; preds = %if.else.63
  br label %if.end.89

if.end.89:                                        ; preds = %if.end.88, %if.end.61
  br label %if.end.90

if.end.90:                                        ; preds = %if.end.89, %if.end.48
  %91 = load i8*, i8** %storedEncName, align 8
  %tobool91 = icmp ne i8* %91, null
  br i1 %tobool91, label %if.then.93, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.90
  %92 = load i8*, i8** %storedversion, align 8
  %tobool92 = icmp ne i8* %92, null
  br i1 %tobool92, label %if.then.93, label %if.end.95

if.then.93:                                       ; preds = %lor.lhs.false, %if.end.90
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_temp2Pool94 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 80
  call void @poolClear(%struct.STRING_POOL* %m_temp2Pool94)
  br label %if.end.95

if.end.95:                                        ; preds = %if.then.93, %lor.lhs.false
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.95, %if.end.87, %if.then.78, %if.then.59, %if.then.39, %if.then.25, %if.else, %if.then.3
  %94 = load i32, i32* %retval
  ret i32 %94
}

; Function Attrs: nounwind uwtable
define internal i8* @poolStoreString(%struct.STRING_POOL* %pool, %struct.encoding* %enc, i8* %ptr, i8* %end) #0 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %1 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %2 = load i8*, i8** %ptr.addr, align 8
  %3 = load i8*, i8** %end.addr, align 8
  %call = call i8* @poolAppend(%struct.STRING_POOL* %0, %struct.encoding* %1, i8* %2, i8* %3)
  %tobool = icmp ne i8* %call, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr1 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 3
  %5 = load i8*, i8** %ptr1, align 8
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 2
  %7 = load i8*, i8** %end2, align 8
  %cmp = icmp eq i8* %5, %7
  br i1 %cmp, label %land.lhs.true, label %if.end.6

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call3 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %8)
  %tobool4 = icmp ne i8 %call3, 0
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %land.lhs.true
  store i8* null, i8** %retval
  br label %return

if.end.6:                                         ; preds = %land.lhs.true, %if.end
  %9 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr7 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %9, i32 0, i32 3
  %10 = load i8*, i8** %ptr7, align 8
  %incdec.ptr = getelementptr i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %ptr7, align 8
  store i8 0, i8* %10, align 1
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 4
  %12 = load i8*, i8** %start, align 8
  store i8* %12, i8** %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then
  %13 = load i8*, i8** %retval
  ret i8* %13
}

; Function Attrs: nounwind uwtable
define internal %struct.NAMED* @lookup(%struct.XML_ParserStruct* %parser, %struct.HASH_TABLE* %table, i8* %name, i64 %createSize) #0 {
entry:
  %retval = alloca %struct.NAMED*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %table.addr = alloca %struct.HASH_TABLE*, align 8
  %name.addr = alloca i8*, align 8
  %createSize.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %tsize = alloca i64, align 8
  %h = alloca i64, align 8
  %mask = alloca i64, align 8
  %step = alloca i8, align 1
  %newPower = alloca i8, align 1
  %newSize = alloca i64, align 8
  %newMask = alloca i64, align 8
  %tsize61 = alloca i64, align 8
  %newV = alloca %struct.NAMED**, align 8
  %newHash = alloca i64, align 8
  %j = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.HASH_TABLE* %table, %struct.HASH_TABLE** %table.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store i64 %createSize, i64* %createSize.addr, align 8
  %0 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %0, i32 0, i32 2
  %1 = load i64, i64* %size, align 8
  %cmp = icmp eq i64 %1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %createSize.addr, align 8
  %tobool = icmp ne i64 %2, 0
  br i1 %tobool, label %if.end, label %if.then.1

if.then.1:                                        ; preds = %if.then
  store %struct.NAMED* null, %struct.NAMED** %retval
  br label %return

if.end:                                           ; preds = %if.then
  %3 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %power = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %3, i32 0, i32 1
  store i8 6, i8* %power, align 1
  %4 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %size2 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %4, i32 0, i32 2
  store i64 64, i64* %size2, align 8
  %5 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %size3 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %5, i32 0, i32 2
  %6 = load i64, i64* %size3, align 8
  %mul = mul i64 %6, 8
  store i64 %mul, i64* %tsize, align 8
  %7 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %mem = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %7, i32 0, i32 4
  %8 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %8, i32 0, i32 0
  %9 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %10 = load i64, i64* %tsize, align 8
  %call = call i8* %9(i64 %10)
  %11 = bitcast i8* %call to %struct.NAMED**
  %12 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %12, i32 0, i32 0
  store %struct.NAMED** %11, %struct.NAMED*** %v, align 8
  %13 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v4 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %13, i32 0, i32 0
  %14 = load %struct.NAMED**, %struct.NAMED*** %v4, align 8
  %tobool5 = icmp ne %struct.NAMED** %14, null
  br i1 %tobool5, label %if.end.8, label %if.then.6

if.then.6:                                        ; preds = %if.end
  %15 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %size7 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %15, i32 0, i32 2
  store i64 0, i64* %size7, align 8
  store %struct.NAMED* null, %struct.NAMED** %retval
  br label %return

if.end.8:                                         ; preds = %if.end
  %16 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v9 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %16, i32 0, i32 0
  %17 = load %struct.NAMED**, %struct.NAMED*** %v9, align 8
  %18 = bitcast %struct.NAMED** %17 to i8*
  %19 = load i64, i64* %tsize, align 8
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 %19, i32 8, i1 false)
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %21 = load i8*, i8** %name.addr, align 8
  %call10 = call i64 @hash(%struct.XML_ParserStruct* %20, i8* %21)
  %22 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %size11 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %22, i32 0, i32 2
  %23 = load i64, i64* %size11, align 8
  %sub = sub i64 %23, 1
  %and = and i64 %call10, %sub
  store i64 %and, i64* %i, align 8
  br label %if.end.153

if.else:                                          ; preds = %entry
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %25 = load i8*, i8** %name.addr, align 8
  %call12 = call i64 @hash(%struct.XML_ParserStruct* %24, i8* %25)
  store i64 %call12, i64* %h, align 8
  %26 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %size13 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %26, i32 0, i32 2
  %27 = load i64, i64* %size13, align 8
  %sub14 = sub i64 %27, 1
  store i64 %sub14, i64* %mask, align 8
  store i8 0, i8* %step, align 1
  %28 = load i64, i64* %h, align 8
  %29 = load i64, i64* %mask, align 8
  %and15 = and i64 %28, %29
  store i64 %and15, i64* %i, align 8
  br label %while.cond

while.cond:                                       ; preds = %cond.end, %if.else
  %30 = load i64, i64* %i, align 8
  %31 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v16 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %31, i32 0, i32 0
  %32 = load %struct.NAMED**, %struct.NAMED*** %v16, align 8
  %arrayidx = getelementptr %struct.NAMED*, %struct.NAMED** %32, i64 %30
  %33 = load %struct.NAMED*, %struct.NAMED** %arrayidx, align 8
  %tobool17 = icmp ne %struct.NAMED* %33, null
  br i1 %tobool17, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %34 = load i8*, i8** %name.addr, align 8
  %35 = load i64, i64* %i, align 8
  %36 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v18 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %36, i32 0, i32 0
  %37 = load %struct.NAMED**, %struct.NAMED*** %v18, align 8
  %arrayidx19 = getelementptr %struct.NAMED*, %struct.NAMED** %37, i64 %35
  %38 = load %struct.NAMED*, %struct.NAMED** %arrayidx19, align 8
  %name20 = getelementptr inbounds %struct.NAMED, %struct.NAMED* %38, i32 0, i32 0
  %39 = load i8*, i8** %name20, align 8
  %call21 = call zeroext i8 @keyeq(i8* %34, i8* %39)
  %tobool22 = icmp ne i8 %call21, 0
  br i1 %tobool22, label %if.then.23, label %if.end.26

if.then.23:                                       ; preds = %while.body
  %40 = load i64, i64* %i, align 8
  %41 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v24 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %41, i32 0, i32 0
  %42 = load %struct.NAMED**, %struct.NAMED*** %v24, align 8
  %arrayidx25 = getelementptr %struct.NAMED*, %struct.NAMED** %42, i64 %40
  %43 = load %struct.NAMED*, %struct.NAMED** %arrayidx25, align 8
  store %struct.NAMED* %43, %struct.NAMED** %retval
  br label %return

if.end.26:                                        ; preds = %while.body
  %44 = load i8, i8* %step, align 1
  %tobool27 = icmp ne i8 %44, 0
  br i1 %tobool27, label %if.end.35, label %if.then.28

if.then.28:                                       ; preds = %if.end.26
  %45 = load i64, i64* %h, align 8
  %46 = load i64, i64* %mask, align 8
  %neg = xor i64 %46, -1
  %and29 = and i64 %45, %neg
  %47 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %power30 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %47, i32 0, i32 1
  %48 = load i8, i8* %power30, align 1
  %conv = zext i8 %48 to i32
  %sub31 = sub i32 %conv, 1
  %sh_prom = zext i32 %sub31 to i64
  %shr = lshr i64 %and29, %sh_prom
  %49 = load i64, i64* %mask, align 8
  %shr32 = lshr i64 %49, 2
  %and33 = and i64 %shr, %shr32
  %or = or i64 %and33, 1
  %conv34 = trunc i64 %or to i8
  store i8 %conv34, i8* %step, align 1
  br label %if.end.35

if.end.35:                                        ; preds = %if.then.28, %if.end.26
  %50 = load i64, i64* %i, align 8
  %51 = load i8, i8* %step, align 1
  %conv36 = zext i8 %51 to i64
  %cmp37 = icmp ult i64 %50, %conv36
  br i1 %cmp37, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.35
  %52 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %size39 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %52, i32 0, i32 2
  %53 = load i64, i64* %size39, align 8
  %54 = load i8, i8* %step, align 1
  %conv40 = zext i8 %54 to i64
  %sub41 = sub i64 %53, %conv40
  %55 = load i64, i64* %i, align 8
  %add = add i64 %55, %sub41
  store i64 %add, i64* %i, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end.35
  %56 = load i8, i8* %step, align 1
  %conv42 = zext i8 %56 to i64
  %57 = load i64, i64* %i, align 8
  %sub43 = sub i64 %57, %conv42
  store i64 %sub43, i64* %i, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %sub43, %cond.false ]
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %58 = load i64, i64* %createSize.addr, align 8
  %tobool44 = icmp ne i64 %58, 0
  br i1 %tobool44, label %if.end.46, label %if.then.45

if.then.45:                                       ; preds = %while.end
  store %struct.NAMED* null, %struct.NAMED** %retval
  br label %return

if.end.46:                                        ; preds = %while.end
  %59 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %used = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %59, i32 0, i32 3
  %60 = load i64, i64* %used, align 8
  %61 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %power47 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %61, i32 0, i32 1
  %62 = load i8, i8* %power47, align 1
  %conv48 = zext i8 %62 to i32
  %sub49 = sub i32 %conv48, 1
  %sh_prom50 = zext i32 %sub49 to i64
  %shr51 = lshr i64 %60, %sh_prom50
  %tobool52 = icmp ne i64 %shr51, 0
  br i1 %tobool52, label %if.then.53, label %if.end.152

if.then.53:                                       ; preds = %if.end.46
  %63 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %power54 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %63, i32 0, i32 1
  %64 = load i8, i8* %power54, align 1
  %conv55 = zext i8 %64 to i32
  %add56 = add i32 %conv55, 1
  %conv57 = trunc i32 %add56 to i8
  store i8 %conv57, i8* %newPower, align 1
  %65 = load i8, i8* %newPower, align 1
  %conv58 = zext i8 %65 to i32
  %sh_prom59 = zext i32 %conv58 to i64
  %shl = shl i64 1, %sh_prom59
  store i64 %shl, i64* %newSize, align 8
  %66 = load i64, i64* %newSize, align 8
  %sub60 = sub i64 %66, 1
  store i64 %sub60, i64* %newMask, align 8
  %67 = load i64, i64* %newSize, align 8
  %mul62 = mul i64 %67, 8
  store i64 %mul62, i64* %tsize61, align 8
  %68 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %mem63 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %68, i32 0, i32 4
  %69 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem63, align 8
  %malloc_fcn64 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %69, i32 0, i32 0
  %70 = load i8* (i64)*, i8* (i64)** %malloc_fcn64, align 8
  %71 = load i64, i64* %tsize61, align 8
  %call65 = call i8* %70(i64 %71)
  %72 = bitcast i8* %call65 to %struct.NAMED**
  store %struct.NAMED** %72, %struct.NAMED*** %newV, align 8
  %73 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8
  %tobool66 = icmp ne %struct.NAMED** %73, null
  br i1 %tobool66, label %if.end.68, label %if.then.67

if.then.67:                                       ; preds = %if.then.53
  store %struct.NAMED* null, %struct.NAMED** %retval
  br label %return

if.end.68:                                        ; preds = %if.then.53
  %74 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8
  %75 = bitcast %struct.NAMED** %74 to i8*
  %76 = load i64, i64* %tsize61, align 8
  call void @llvm.memset.p0i8.i64(i8* %75, i8 0, i64 %76, i32 8, i1 false)
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.68
  %77 = load i64, i64* %i, align 8
  %78 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %size69 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %78, i32 0, i32 2
  %79 = load i64, i64* %size69, align 8
  %cmp70 = icmp ult i64 %77, %79
  br i1 %cmp70, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %80 = load i64, i64* %i, align 8
  %81 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v72 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %81, i32 0, i32 0
  %82 = load %struct.NAMED**, %struct.NAMED*** %v72, align 8
  %arrayidx73 = getelementptr %struct.NAMED*, %struct.NAMED** %82, i64 %80
  %83 = load %struct.NAMED*, %struct.NAMED** %arrayidx73, align 8
  %tobool74 = icmp ne %struct.NAMED* %83, null
  br i1 %tobool74, label %if.then.75, label %if.end.114

if.then.75:                                       ; preds = %for.body
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %85 = load i64, i64* %i, align 8
  %86 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v76 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %86, i32 0, i32 0
  %87 = load %struct.NAMED**, %struct.NAMED*** %v76, align 8
  %arrayidx77 = getelementptr %struct.NAMED*, %struct.NAMED** %87, i64 %85
  %88 = load %struct.NAMED*, %struct.NAMED** %arrayidx77, align 8
  %name78 = getelementptr inbounds %struct.NAMED, %struct.NAMED* %88, i32 0, i32 0
  %89 = load i8*, i8** %name78, align 8
  %call79 = call i64 @hash(%struct.XML_ParserStruct* %84, i8* %89)
  store i64 %call79, i64* %newHash, align 8
  %90 = load i64, i64* %newHash, align 8
  %91 = load i64, i64* %newMask, align 8
  %and80 = and i64 %90, %91
  store i64 %and80, i64* %j, align 8
  store i8 0, i8* %step, align 1
  br label %while.cond.81

while.cond.81:                                    ; preds = %cond.end.108, %if.then.75
  %92 = load i64, i64* %j, align 8
  %93 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8
  %arrayidx82 = getelementptr %struct.NAMED*, %struct.NAMED** %93, i64 %92
  %94 = load %struct.NAMED*, %struct.NAMED** %arrayidx82, align 8
  %tobool83 = icmp ne %struct.NAMED* %94, null
  br i1 %tobool83, label %while.body.84, label %while.end.110

while.body.84:                                    ; preds = %while.cond.81
  %95 = load i8, i8* %step, align 1
  %tobool85 = icmp ne i8 %95, 0
  br i1 %tobool85, label %if.end.97, label %if.then.86

if.then.86:                                       ; preds = %while.body.84
  %96 = load i64, i64* %newHash, align 8
  %97 = load i64, i64* %newMask, align 8
  %neg87 = xor i64 %97, -1
  %and88 = and i64 %96, %neg87
  %98 = load i8, i8* %newPower, align 1
  %conv89 = zext i8 %98 to i32
  %sub90 = sub i32 %conv89, 1
  %sh_prom91 = zext i32 %sub90 to i64
  %shr92 = lshr i64 %and88, %sh_prom91
  %99 = load i64, i64* %newMask, align 8
  %shr93 = lshr i64 %99, 2
  %and94 = and i64 %shr92, %shr93
  %or95 = or i64 %and94, 1
  %conv96 = trunc i64 %or95 to i8
  store i8 %conv96, i8* %step, align 1
  br label %if.end.97

if.end.97:                                        ; preds = %if.then.86, %while.body.84
  %100 = load i64, i64* %j, align 8
  %101 = load i8, i8* %step, align 1
  %conv98 = zext i8 %101 to i64
  %cmp99 = icmp ult i64 %100, %conv98
  br i1 %cmp99, label %cond.true.101, label %cond.false.105

cond.true.101:                                    ; preds = %if.end.97
  %102 = load i64, i64* %newSize, align 8
  %103 = load i8, i8* %step, align 1
  %conv102 = zext i8 %103 to i64
  %sub103 = sub i64 %102, %conv102
  %104 = load i64, i64* %j, align 8
  %add104 = add i64 %104, %sub103
  store i64 %add104, i64* %j, align 8
  br label %cond.end.108

cond.false.105:                                   ; preds = %if.end.97
  %105 = load i8, i8* %step, align 1
  %conv106 = zext i8 %105 to i64
  %106 = load i64, i64* %j, align 8
  %sub107 = sub i64 %106, %conv106
  store i64 %sub107, i64* %j, align 8
  br label %cond.end.108

cond.end.108:                                     ; preds = %cond.false.105, %cond.true.101
  %cond109 = phi i64 [ %add104, %cond.true.101 ], [ %sub107, %cond.false.105 ]
  br label %while.cond.81

while.end.110:                                    ; preds = %while.cond.81
  %107 = load i64, i64* %i, align 8
  %108 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v111 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %108, i32 0, i32 0
  %109 = load %struct.NAMED**, %struct.NAMED*** %v111, align 8
  %arrayidx112 = getelementptr %struct.NAMED*, %struct.NAMED** %109, i64 %107
  %110 = load %struct.NAMED*, %struct.NAMED** %arrayidx112, align 8
  %111 = load i64, i64* %j, align 8
  %112 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8
  %arrayidx113 = getelementptr %struct.NAMED*, %struct.NAMED** %112, i64 %111
  store %struct.NAMED* %110, %struct.NAMED** %arrayidx113, align 8
  br label %if.end.114

if.end.114:                                       ; preds = %while.end.110, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.114
  %113 = load i64, i64* %i, align 8
  %inc = add i64 %113, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %114 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %mem115 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %114, i32 0, i32 4
  %115 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem115, align 8
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %115, i32 0, i32 2
  %116 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %117 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v116 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %117, i32 0, i32 0
  %118 = load %struct.NAMED**, %struct.NAMED*** %v116, align 8
  %119 = bitcast %struct.NAMED** %118 to i8*
  call void %116(i8* %119)
  %120 = load %struct.NAMED**, %struct.NAMED*** %newV, align 8
  %121 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v117 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %121, i32 0, i32 0
  store %struct.NAMED** %120, %struct.NAMED*** %v117, align 8
  %122 = load i8, i8* %newPower, align 1
  %123 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %power118 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %123, i32 0, i32 1
  store i8 %122, i8* %power118, align 1
  %124 = load i64, i64* %newSize, align 8
  %125 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %size119 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %125, i32 0, i32 2
  store i64 %124, i64* %size119, align 8
  %126 = load i64, i64* %h, align 8
  %127 = load i64, i64* %newMask, align 8
  %and120 = and i64 %126, %127
  store i64 %and120, i64* %i, align 8
  store i8 0, i8* %step, align 1
  br label %while.cond.121

while.cond.121:                                   ; preds = %cond.end.149, %for.end
  %128 = load i64, i64* %i, align 8
  %129 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v122 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %129, i32 0, i32 0
  %130 = load %struct.NAMED**, %struct.NAMED*** %v122, align 8
  %arrayidx123 = getelementptr %struct.NAMED*, %struct.NAMED** %130, i64 %128
  %131 = load %struct.NAMED*, %struct.NAMED** %arrayidx123, align 8
  %tobool124 = icmp ne %struct.NAMED* %131, null
  br i1 %tobool124, label %while.body.125, label %while.end.151

while.body.125:                                   ; preds = %while.cond.121
  %132 = load i8, i8* %step, align 1
  %tobool126 = icmp ne i8 %132, 0
  br i1 %tobool126, label %if.end.138, label %if.then.127

if.then.127:                                      ; preds = %while.body.125
  %133 = load i64, i64* %h, align 8
  %134 = load i64, i64* %newMask, align 8
  %neg128 = xor i64 %134, -1
  %and129 = and i64 %133, %neg128
  %135 = load i8, i8* %newPower, align 1
  %conv130 = zext i8 %135 to i32
  %sub131 = sub i32 %conv130, 1
  %sh_prom132 = zext i32 %sub131 to i64
  %shr133 = lshr i64 %and129, %sh_prom132
  %136 = load i64, i64* %newMask, align 8
  %shr134 = lshr i64 %136, 2
  %and135 = and i64 %shr133, %shr134
  %or136 = or i64 %and135, 1
  %conv137 = trunc i64 %or136 to i8
  store i8 %conv137, i8* %step, align 1
  br label %if.end.138

if.end.138:                                       ; preds = %if.then.127, %while.body.125
  %137 = load i64, i64* %i, align 8
  %138 = load i8, i8* %step, align 1
  %conv139 = zext i8 %138 to i64
  %cmp140 = icmp ult i64 %137, %conv139
  br i1 %cmp140, label %cond.true.142, label %cond.false.146

cond.true.142:                                    ; preds = %if.end.138
  %139 = load i64, i64* %newSize, align 8
  %140 = load i8, i8* %step, align 1
  %conv143 = zext i8 %140 to i64
  %sub144 = sub i64 %139, %conv143
  %141 = load i64, i64* %i, align 8
  %add145 = add i64 %141, %sub144
  store i64 %add145, i64* %i, align 8
  br label %cond.end.149

cond.false.146:                                   ; preds = %if.end.138
  %142 = load i8, i8* %step, align 1
  %conv147 = zext i8 %142 to i64
  %143 = load i64, i64* %i, align 8
  %sub148 = sub i64 %143, %conv147
  store i64 %sub148, i64* %i, align 8
  br label %cond.end.149

cond.end.149:                                     ; preds = %cond.false.146, %cond.true.142
  %cond150 = phi i64 [ %add145, %cond.true.142 ], [ %sub148, %cond.false.146 ]
  br label %while.cond.121

while.end.151:                                    ; preds = %while.cond.121
  br label %if.end.152

if.end.152:                                       ; preds = %while.end.151, %if.end.46
  br label %if.end.153

if.end.153:                                       ; preds = %if.end.152, %if.end.8
  %144 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %mem154 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %144, i32 0, i32 4
  %145 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem154, align 8
  %malloc_fcn155 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %145, i32 0, i32 0
  %146 = load i8* (i64)*, i8* (i64)** %malloc_fcn155, align 8
  %147 = load i64, i64* %createSize.addr, align 8
  %call156 = call i8* %146(i64 %147)
  %148 = bitcast i8* %call156 to %struct.NAMED*
  %149 = load i64, i64* %i, align 8
  %150 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v157 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %150, i32 0, i32 0
  %151 = load %struct.NAMED**, %struct.NAMED*** %v157, align 8
  %arrayidx158 = getelementptr %struct.NAMED*, %struct.NAMED** %151, i64 %149
  store %struct.NAMED* %148, %struct.NAMED** %arrayidx158, align 8
  %152 = load i64, i64* %i, align 8
  %153 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v159 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %153, i32 0, i32 0
  %154 = load %struct.NAMED**, %struct.NAMED*** %v159, align 8
  %arrayidx160 = getelementptr %struct.NAMED*, %struct.NAMED** %154, i64 %152
  %155 = load %struct.NAMED*, %struct.NAMED** %arrayidx160, align 8
  %tobool161 = icmp ne %struct.NAMED* %155, null
  br i1 %tobool161, label %if.end.163, label %if.then.162

if.then.162:                                      ; preds = %if.end.153
  store %struct.NAMED* null, %struct.NAMED** %retval
  br label %return

if.end.163:                                       ; preds = %if.end.153
  %156 = load i64, i64* %i, align 8
  %157 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v164 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %157, i32 0, i32 0
  %158 = load %struct.NAMED**, %struct.NAMED*** %v164, align 8
  %arrayidx165 = getelementptr %struct.NAMED*, %struct.NAMED** %158, i64 %156
  %159 = load %struct.NAMED*, %struct.NAMED** %arrayidx165, align 8
  %160 = bitcast %struct.NAMED* %159 to i8*
  %161 = load i64, i64* %createSize.addr, align 8
  call void @llvm.memset.p0i8.i64(i8* %160, i8 0, i64 %161, i32 8, i1 false)
  %162 = load i8*, i8** %name.addr, align 8
  %163 = load i64, i64* %i, align 8
  %164 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v166 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %164, i32 0, i32 0
  %165 = load %struct.NAMED**, %struct.NAMED*** %v166, align 8
  %arrayidx167 = getelementptr %struct.NAMED*, %struct.NAMED** %165, i64 %163
  %166 = load %struct.NAMED*, %struct.NAMED** %arrayidx167, align 8
  %name168 = getelementptr inbounds %struct.NAMED, %struct.NAMED* %166, i32 0, i32 0
  store i8* %162, i8** %name168, align 8
  %167 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %used169 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %167, i32 0, i32 3
  %168 = load i64, i64* %used169, align 8
  %inc170 = add i64 %168, 1
  store i64 %inc170, i64* %used169, align 8
  %169 = load i64, i64* %i, align 8
  %170 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v171 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %170, i32 0, i32 0
  %171 = load %struct.NAMED**, %struct.NAMED*** %v171, align 8
  %arrayidx172 = getelementptr %struct.NAMED*, %struct.NAMED** %171, i64 %169
  %172 = load %struct.NAMED*, %struct.NAMED** %arrayidx172, align 8
  store %struct.NAMED* %172, %struct.NAMED** %retval
  br label %return

return:                                           ; preds = %if.end.163, %if.then.162, %if.then.67, %if.then.45, %if.then.23, %if.then.6, %if.then.1
  %173 = load %struct.NAMED*, %struct.NAMED** %retval
  ret %struct.NAMED* %173
}

; Function Attrs: nounwind uwtable
define internal void @normalizePublicId(i8* %publicId) #0 {
entry:
  %publicId.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %s = alloca i8*, align 8
  store i8* %publicId, i8** %publicId.addr, align 8
  %0 = load i8*, i8** %publicId.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %publicId.addr, align 8
  store i8* %1, i8** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i8*, i8** %s, align 8
  %3 = load i8, i8* %2, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %s, align 8
  %5 = load i8, i8* %4, align 1
  %conv = sext i8 %5 to i32
  switch i32 %conv, label %sw.default [
    i32 32, label %sw.bb
    i32 13, label %sw.bb
    i32 10, label %sw.bb
  ]

sw.bb:                                            ; preds = %for.body, %for.body, %for.body
  %6 = load i8*, i8** %p, align 8
  %7 = load i8*, i8** %publicId.addr, align 8
  %cmp = icmp ne i8* %6, %7
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb
  %8 = load i8*, i8** %p, align 8
  %arrayidx = getelementptr i8, i8* %8, i64 -1
  %9 = load i8, i8* %arrayidx, align 1
  %conv2 = sext i8 %9 to i32
  %cmp3 = icmp ne i32 %conv2, 32
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %10 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  store i8 32, i8* %10, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %sw.bb
  br label %sw.epilog

sw.default:                                       ; preds = %for.body
  %11 = load i8*, i8** %s, align 8
  %12 = load i8, i8* %11, align 1
  %13 = load i8*, i8** %p, align 8
  %incdec.ptr5 = getelementptr i8, i8* %13, i32 1
  store i8* %incdec.ptr5, i8** %p, align 8
  store i8 %12, i8* %13, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog
  %14 = load i8*, i8** %s, align 8
  %incdec.ptr6 = getelementptr i8, i8* %14, i32 1
  store i8* %incdec.ptr6, i8** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = load i8*, i8** %p, align 8
  %16 = load i8*, i8** %publicId.addr, align 8
  %cmp7 = icmp ne i8* %15, %16
  br i1 %cmp7, label %land.lhs.true.9, label %if.end.16

land.lhs.true.9:                                  ; preds = %for.end
  %17 = load i8*, i8** %p, align 8
  %arrayidx10 = getelementptr i8, i8* %17, i64 -1
  %18 = load i8, i8* %arrayidx10, align 1
  %conv11 = sext i8 %18 to i32
  %cmp12 = icmp eq i32 %conv11, 32
  br i1 %cmp12, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %land.lhs.true.9
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr15 = getelementptr i8, i8* %19, i32 -1
  store i8* %incdec.ptr15, i8** %p, align 8
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.14, %land.lhs.true.9, %for.end
  %20 = load i8*, i8** %p, align 8
  store i8 0, i8* %20, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @contentProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %start, i8** %start.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 34
  %2 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %3 = load i8*, i8** %start.addr, align 8
  %4 = load i8*, i8** %end.addr, align 8
  %5 = load i8**, i8*** %endPtr.addr, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1
  %7 = load i8, i8* %finalBuffer, align 1
  %tobool = icmp ne i8 %7, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %conv = trunc i32 %lnot.ext to i8
  %call = call i32 @doContent(%struct.XML_ParserStruct* %0, i32 0, %struct.encoding* %2, i8* %3, i8* %4, i8** %5, i8 zeroext %conv)
  store i32 %call, i32* %result, align 4
  %8 = load i32, i32* %result, align 4
  %cmp = icmp eq i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end.5

if.then:                                          ; preds = %entry
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call2 = call zeroext i8 @storeRawNames(%struct.XML_ParserStruct* %9)
  %tobool3 = icmp ne i8 %call2, 0
  br i1 %tobool3, label %if.end, label %if.then.4

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.5

if.end.5:                                         ; preds = %if.end, %entry
  %10 = load i32, i32* %result, align 4
  store i32 %10, i32* %retval
  br label %return

return:                                           ; preds = %if.end.5, %if.then.4
  %11 = load i32, i32* %retval
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define internal %struct.ELEMENT_TYPE* @getElementType(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %ptr, i8* %end) #0 {
entry:
  %retval = alloca %struct.ELEMENT_TYPE*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %name = alloca i8*, align 8
  %ret = alloca %struct.ELEMENT_TYPE*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  %2 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 4
  %3 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %4 = load i8*, i8** %ptr.addr, align 8
  %5 = load i8*, i8** %end.addr, align 8
  %call = call i8* @poolStoreString(%struct.STRING_POOL* %pool, %struct.encoding* %3, i8* %4, i8* %5)
  store i8* %call, i8** %name, align 8
  %6 = load i8*, i8** %name, align 8
  %tobool = icmp ne i8* %6, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.ELEMENT_TYPE* null, %struct.ELEMENT_TYPE** %retval
  br label %return

if.end:                                           ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %8 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %8, i32 0, i32 1
  %9 = load i8*, i8** %name, align 8
  %call1 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %7, %struct.HASH_TABLE* %elementTypes, i8* %9, i64 40)
  %10 = bitcast %struct.NAMED* %call1 to %struct.ELEMENT_TYPE*
  store %struct.ELEMENT_TYPE* %10, %struct.ELEMENT_TYPE** %ret, align 8
  %11 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %ret, align 8
  %tobool2 = icmp ne %struct.ELEMENT_TYPE* %11, null
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store %struct.ELEMENT_TYPE* null, %struct.ELEMENT_TYPE** %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  %12 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %ret, align 8
  %name5 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %12, i32 0, i32 0
  %13 = load i8*, i8** %name5, align 8
  %14 = load i8*, i8** %name, align 8
  %cmp = icmp ne i8* %13, %14
  br i1 %cmp, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %if.end.4
  %15 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool7 = getelementptr inbounds %struct.DTD, %struct.DTD* %15, i32 0, i32 4
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool7, i32 0, i32 4
  %16 = load i8*, i8** %start, align 8
  %17 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool8 = getelementptr inbounds %struct.DTD, %struct.DTD* %17, i32 0, i32 4
  %ptr9 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool8, i32 0, i32 3
  store i8* %16, i8** %ptr9, align 8
  br label %if.end.18

if.else:                                          ; preds = %if.end.4
  %18 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool10 = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 4
  %ptr11 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool10, i32 0, i32 3
  %19 = load i8*, i8** %ptr11, align 8
  %20 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool12 = getelementptr inbounds %struct.DTD, %struct.DTD* %20, i32 0, i32 4
  %start13 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool12, i32 0, i32 4
  store i8* %19, i8** %start13, align 8
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %22 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %ret, align 8
  %call14 = call i32 @setElementTypePrefix(%struct.XML_ParserStruct* %21, %struct.ELEMENT_TYPE* %22)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.else
  store %struct.ELEMENT_TYPE* null, %struct.ELEMENT_TYPE** %retval
  br label %return

if.end.17:                                        ; preds = %if.else
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.then.6
  %23 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %ret, align 8
  store %struct.ELEMENT_TYPE* %23, %struct.ELEMENT_TYPE** %retval
  br label %return

return:                                           ; preds = %if.end.18, %if.then.16, %if.then.3, %if.then
  %24 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %retval
  ret %struct.ELEMENT_TYPE* %24
}

; Function Attrs: nounwind uwtable
define internal %struct.attribute_id* @getAttributeId(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %start, i8* %end) #0 {
entry:
  %retval = alloca %struct.attribute_id*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %id = alloca %struct.attribute_id*, align 8
  %name = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8* %start, i8** %start.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  %2 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 4
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool, i32 0, i32 3
  %3 = load i8*, i8** %ptr, align 8
  %4 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool1 = getelementptr inbounds %struct.DTD, %struct.DTD* %4, i32 0, i32 4
  %end2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool1, i32 0, i32 2
  %5 = load i8*, i8** %end2, align 8
  %cmp = icmp eq i8* %3, %5
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool3 = getelementptr inbounds %struct.DTD, %struct.DTD* %6, i32 0, i32 4
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool3)
  %tobool = icmp ne i8 %call, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then

cond.false:                                       ; preds = %land.lhs.true, %entry
  %7 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool4 = getelementptr inbounds %struct.DTD, %struct.DTD* %7, i32 0, i32 4
  %ptr5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool4, i32 0, i32 3
  %8 = load i8*, i8** %ptr5, align 8
  %incdec.ptr = getelementptr i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %ptr5, align 8
  store i8 0, i8* %8, align 1
  br i1 true, label %if.end, label %if.then

if.then:                                          ; preds = %cond.false, %cond.true
  store %struct.attribute_id* null, %struct.attribute_id** %retval
  br label %return

if.end:                                           ; preds = %cond.false, %cond.true
  %9 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool6 = getelementptr inbounds %struct.DTD, %struct.DTD* %9, i32 0, i32 4
  %10 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %11 = load i8*, i8** %start.addr, align 8
  %12 = load i8*, i8** %end.addr, align 8
  %call7 = call i8* @poolStoreString(%struct.STRING_POOL* %pool6, %struct.encoding* %10, i8* %11, i8* %12)
  store i8* %call7, i8** %name, align 8
  %13 = load i8*, i8** %name, align 8
  %tobool8 = icmp ne i8* %13, null
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end
  store %struct.attribute_id* null, %struct.attribute_id** %retval
  br label %return

if.end.10:                                        ; preds = %if.end
  %14 = load i8*, i8** %name, align 8
  %incdec.ptr11 = getelementptr i8, i8* %14, i32 1
  store i8* %incdec.ptr11, i8** %name, align 8
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %16 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 2
  %17 = load i8*, i8** %name, align 8
  %call12 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %15, %struct.HASH_TABLE* %attributeIds, i8* %17, i64 24)
  %18 = bitcast %struct.NAMED* %call12 to %struct.attribute_id*
  store %struct.attribute_id* %18, %struct.attribute_id** %id, align 8
  %19 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8
  %tobool13 = icmp ne %struct.attribute_id* %19, null
  br i1 %tobool13, label %if.end.15, label %if.then.14

if.then.14:                                       ; preds = %if.end.10
  store %struct.attribute_id* null, %struct.attribute_id** %retval
  br label %return

if.end.15:                                        ; preds = %if.end.10
  %20 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8
  %name16 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %20, i32 0, i32 0
  %21 = load i8*, i8** %name16, align 8
  %22 = load i8*, i8** %name, align 8
  %cmp17 = icmp ne i8* %21, %22
  br i1 %cmp17, label %if.then.18, label %if.else

if.then.18:                                       ; preds = %if.end.15
  %23 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool19 = getelementptr inbounds %struct.DTD, %struct.DTD* %23, i32 0, i32 4
  %start20 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool19, i32 0, i32 4
  %24 = load i8*, i8** %start20, align 8
  %25 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool21 = getelementptr inbounds %struct.DTD, %struct.DTD* %25, i32 0, i32 4
  %ptr22 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool21, i32 0, i32 3
  store i8* %24, i8** %ptr22, align 8
  br label %if.end.148

if.else:                                          ; preds = %if.end.15
  %26 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool23 = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 4
  %ptr24 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool23, i32 0, i32 3
  %27 = load i8*, i8** %ptr24, align 8
  %28 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool25 = getelementptr inbounds %struct.DTD, %struct.DTD* %28, i32 0, i32 4
  %start26 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool25, i32 0, i32 4
  store i8* %27, i8** %start26, align 8
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 38
  %30 = load i8, i8* %m_ns, align 1
  %tobool27 = icmp ne i8 %30, 0
  br i1 %tobool27, label %if.else.29, label %if.then.28

if.then.28:                                       ; preds = %if.else
  br label %if.end.147

if.else.29:                                       ; preds = %if.else
  %31 = load i8*, i8** %name, align 8
  %arrayidx = getelementptr i8, i8* %31, i64 0
  %32 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %32 to i32
  %cmp30 = icmp eq i32 %conv, 120
  br i1 %cmp30, label %land.lhs.true.32, label %if.else.71

land.lhs.true.32:                                 ; preds = %if.else.29
  %33 = load i8*, i8** %name, align 8
  %arrayidx33 = getelementptr i8, i8* %33, i64 1
  %34 = load i8, i8* %arrayidx33, align 1
  %conv34 = sext i8 %34 to i32
  %cmp35 = icmp eq i32 %conv34, 109
  br i1 %cmp35, label %land.lhs.true.37, label %if.else.71

land.lhs.true.37:                                 ; preds = %land.lhs.true.32
  %35 = load i8*, i8** %name, align 8
  %arrayidx38 = getelementptr i8, i8* %35, i64 2
  %36 = load i8, i8* %arrayidx38, align 1
  %conv39 = sext i8 %36 to i32
  %cmp40 = icmp eq i32 %conv39, 108
  br i1 %cmp40, label %land.lhs.true.42, label %if.else.71

land.lhs.true.42:                                 ; preds = %land.lhs.true.37
  %37 = load i8*, i8** %name, align 8
  %arrayidx43 = getelementptr i8, i8* %37, i64 3
  %38 = load i8, i8* %arrayidx43, align 1
  %conv44 = sext i8 %38 to i32
  %cmp45 = icmp eq i32 %conv44, 110
  br i1 %cmp45, label %land.lhs.true.47, label %if.else.71

land.lhs.true.47:                                 ; preds = %land.lhs.true.42
  %39 = load i8*, i8** %name, align 8
  %arrayidx48 = getelementptr i8, i8* %39, i64 4
  %40 = load i8, i8* %arrayidx48, align 1
  %conv49 = sext i8 %40 to i32
  %cmp50 = icmp eq i32 %conv49, 115
  br i1 %cmp50, label %land.lhs.true.52, label %if.else.71

land.lhs.true.52:                                 ; preds = %land.lhs.true.47
  %41 = load i8*, i8** %name, align 8
  %arrayidx53 = getelementptr i8, i8* %41, i64 5
  %42 = load i8, i8* %arrayidx53, align 1
  %conv54 = sext i8 %42 to i32
  %cmp55 = icmp eq i32 %conv54, 0
  br i1 %cmp55, label %if.then.61, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.52
  %43 = load i8*, i8** %name, align 8
  %arrayidx57 = getelementptr i8, i8* %43, i64 5
  %44 = load i8, i8* %arrayidx57, align 1
  %conv58 = sext i8 %44 to i32
  %cmp59 = icmp eq i32 %conv58, 58
  br i1 %cmp59, label %if.then.61, label %if.else.71

if.then.61:                                       ; preds = %lor.lhs.false, %land.lhs.true.52
  %45 = load i8*, i8** %name, align 8
  %arrayidx62 = getelementptr i8, i8* %45, i64 5
  %46 = load i8, i8* %arrayidx62, align 1
  %conv63 = sext i8 %46 to i32
  %cmp64 = icmp eq i32 %conv63, 0
  br i1 %cmp64, label %if.then.66, label %if.else.67

if.then.66:                                       ; preds = %if.then.61
  %47 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %47, i32 0, i32 11
  %48 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8
  %prefix = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %48, i32 0, i32 1
  store %struct.prefix* %defaultPrefix, %struct.prefix** %prefix, align 8
  br label %if.end.70

if.else.67:                                       ; preds = %if.then.61
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %50 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %50, i32 0, i32 3
  %51 = load i8*, i8** %name, align 8
  %add.ptr = getelementptr i8, i8* %51, i64 6
  %call68 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %49, %struct.HASH_TABLE* %prefixes, i8* %add.ptr, i64 16)
  %52 = bitcast %struct.NAMED* %call68 to %struct.prefix*
  %53 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8
  %prefix69 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %53, i32 0, i32 1
  store %struct.prefix* %52, %struct.prefix** %prefix69, align 8
  br label %if.end.70

if.end.70:                                        ; preds = %if.else.67, %if.then.66
  %54 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8
  %xmlns = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %54, i32 0, i32 3
  store i8 1, i8* %xmlns, align 1
  br label %if.end.146

if.else.71:                                       ; preds = %lor.lhs.false, %land.lhs.true.47, %land.lhs.true.42, %land.lhs.true.37, %land.lhs.true.32, %if.else.29
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.143, %if.else.71
  %55 = load i32, i32* %i, align 4
  %idxprom = sext i32 %55 to i64
  %56 = load i8*, i8** %name, align 8
  %arrayidx72 = getelementptr i8, i8* %56, i64 %idxprom
  %57 = load i8, i8* %arrayidx72, align 1
  %tobool73 = icmp ne i8 %57, 0
  br i1 %tobool73, label %for.body, label %for.end.145

for.body:                                         ; preds = %for.cond
  %58 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %58 to i64
  %59 = load i8*, i8** %name, align 8
  %arrayidx75 = getelementptr i8, i8* %59, i64 %idxprom74
  %60 = load i8, i8* %arrayidx75, align 1
  %conv76 = sext i8 %60 to i32
  %cmp77 = icmp eq i32 %conv76, 58
  br i1 %cmp77, label %if.then.79, label %if.end.142

if.then.79:                                       ; preds = %for.body
  store i32 0, i32* %j, align 4
  br label %for.cond.80

for.cond.80:                                      ; preds = %for.inc, %if.then.79
  %61 = load i32, i32* %j, align 4
  %62 = load i32, i32* %i, align 4
  %cmp81 = icmp slt i32 %61, %62
  br i1 %cmp81, label %for.body.83, label %for.end

for.body.83:                                      ; preds = %for.cond.80
  %63 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool84 = getelementptr inbounds %struct.DTD, %struct.DTD* %63, i32 0, i32 4
  %ptr85 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool84, i32 0, i32 3
  %64 = load i8*, i8** %ptr85, align 8
  %65 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool86 = getelementptr inbounds %struct.DTD, %struct.DTD* %65, i32 0, i32 4
  %end87 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool86, i32 0, i32 2
  %66 = load i8*, i8** %end87, align 8
  %cmp88 = icmp eq i8* %64, %66
  br i1 %cmp88, label %land.lhs.true.90, label %cond.false.95

land.lhs.true.90:                                 ; preds = %for.body.83
  %67 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool91 = getelementptr inbounds %struct.DTD, %struct.DTD* %67, i32 0, i32 4
  %call92 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool91)
  %tobool93 = icmp ne i8 %call92, 0
  br i1 %tobool93, label %cond.false.95, label %cond.true.94

cond.true.94:                                     ; preds = %land.lhs.true.90
  br i1 false, label %if.end.102, label %if.then.101

cond.false.95:                                    ; preds = %land.lhs.true.90, %for.body.83
  %68 = load i32, i32* %j, align 4
  %idxprom96 = sext i32 %68 to i64
  %69 = load i8*, i8** %name, align 8
  %arrayidx97 = getelementptr i8, i8* %69, i64 %idxprom96
  %70 = load i8, i8* %arrayidx97, align 1
  %71 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool98 = getelementptr inbounds %struct.DTD, %struct.DTD* %71, i32 0, i32 4
  %ptr99 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool98, i32 0, i32 3
  %72 = load i8*, i8** %ptr99, align 8
  %incdec.ptr100 = getelementptr i8, i8* %72, i32 1
  store i8* %incdec.ptr100, i8** %ptr99, align 8
  store i8 %70, i8* %72, align 1
  br i1 true, label %if.end.102, label %if.then.101

if.then.101:                                      ; preds = %cond.false.95, %cond.true.94
  store %struct.attribute_id* null, %struct.attribute_id** %retval
  br label %return

if.end.102:                                       ; preds = %cond.false.95, %cond.true.94
  br label %for.inc

for.inc:                                          ; preds = %if.end.102
  %73 = load i32, i32* %j, align 4
  %inc = add i32 %73, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond.80

for.end:                                          ; preds = %for.cond.80
  %74 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool103 = getelementptr inbounds %struct.DTD, %struct.DTD* %74, i32 0, i32 4
  %ptr104 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool103, i32 0, i32 3
  %75 = load i8*, i8** %ptr104, align 8
  %76 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool105 = getelementptr inbounds %struct.DTD, %struct.DTD* %76, i32 0, i32 4
  %end106 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool105, i32 0, i32 2
  %77 = load i8*, i8** %end106, align 8
  %cmp107 = icmp eq i8* %75, %77
  br i1 %cmp107, label %land.lhs.true.109, label %cond.false.114

land.lhs.true.109:                                ; preds = %for.end
  %78 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool110 = getelementptr inbounds %struct.DTD, %struct.DTD* %78, i32 0, i32 4
  %call111 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool110)
  %tobool112 = icmp ne i8 %call111, 0
  br i1 %tobool112, label %cond.false.114, label %cond.true.113

cond.true.113:                                    ; preds = %land.lhs.true.109
  br i1 false, label %if.end.119, label %if.then.118

cond.false.114:                                   ; preds = %land.lhs.true.109, %for.end
  %79 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool115 = getelementptr inbounds %struct.DTD, %struct.DTD* %79, i32 0, i32 4
  %ptr116 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool115, i32 0, i32 3
  %80 = load i8*, i8** %ptr116, align 8
  %incdec.ptr117 = getelementptr i8, i8* %80, i32 1
  store i8* %incdec.ptr117, i8** %ptr116, align 8
  store i8 0, i8* %80, align 1
  br i1 true, label %if.end.119, label %if.then.118

if.then.118:                                      ; preds = %cond.false.114, %cond.true.113
  store %struct.attribute_id* null, %struct.attribute_id** %retval
  br label %return

if.end.119:                                       ; preds = %cond.false.114, %cond.true.113
  %81 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %82 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %prefixes120 = getelementptr inbounds %struct.DTD, %struct.DTD* %82, i32 0, i32 3
  %83 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool121 = getelementptr inbounds %struct.DTD, %struct.DTD* %83, i32 0, i32 4
  %start122 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool121, i32 0, i32 4
  %84 = load i8*, i8** %start122, align 8
  %call123 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %81, %struct.HASH_TABLE* %prefixes120, i8* %84, i64 16)
  %85 = bitcast %struct.NAMED* %call123 to %struct.prefix*
  %86 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8
  %prefix124 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %86, i32 0, i32 1
  store %struct.prefix* %85, %struct.prefix** %prefix124, align 8
  %87 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8
  %prefix125 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %87, i32 0, i32 1
  %88 = load %struct.prefix*, %struct.prefix** %prefix125, align 8
  %name126 = getelementptr inbounds %struct.prefix, %struct.prefix* %88, i32 0, i32 0
  %89 = load i8*, i8** %name126, align 8
  %90 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool127 = getelementptr inbounds %struct.DTD, %struct.DTD* %90, i32 0, i32 4
  %start128 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool127, i32 0, i32 4
  %91 = load i8*, i8** %start128, align 8
  %cmp129 = icmp eq i8* %89, %91
  br i1 %cmp129, label %if.then.131, label %if.else.136

if.then.131:                                      ; preds = %if.end.119
  %92 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool132 = getelementptr inbounds %struct.DTD, %struct.DTD* %92, i32 0, i32 4
  %ptr133 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool132, i32 0, i32 3
  %93 = load i8*, i8** %ptr133, align 8
  %94 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool134 = getelementptr inbounds %struct.DTD, %struct.DTD* %94, i32 0, i32 4
  %start135 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool134, i32 0, i32 4
  store i8* %93, i8** %start135, align 8
  br label %if.end.141

if.else.136:                                      ; preds = %if.end.119
  %95 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool137 = getelementptr inbounds %struct.DTD, %struct.DTD* %95, i32 0, i32 4
  %start138 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool137, i32 0, i32 4
  %96 = load i8*, i8** %start138, align 8
  %97 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool139 = getelementptr inbounds %struct.DTD, %struct.DTD* %97, i32 0, i32 4
  %ptr140 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool139, i32 0, i32 3
  store i8* %96, i8** %ptr140, align 8
  br label %if.end.141

if.end.141:                                       ; preds = %if.else.136, %if.then.131
  br label %for.end.145

if.end.142:                                       ; preds = %for.body
  br label %for.inc.143

for.inc.143:                                      ; preds = %if.end.142
  %98 = load i32, i32* %i, align 4
  %inc144 = add i32 %98, 1
  store i32 %inc144, i32* %i, align 4
  br label %for.cond

for.end.145:                                      ; preds = %if.end.141, %for.cond
  br label %if.end.146

if.end.146:                                       ; preds = %for.end.145, %if.end.70
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.146, %if.then.28
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.147, %if.then.18
  %99 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8
  store %struct.attribute_id* %99, %struct.attribute_id** %retval
  br label %return

return:                                           ; preds = %if.end.148, %if.then.118, %if.then.101, %if.then.14, %if.then.9, %if.then
  %100 = load %struct.attribute_id*, %struct.attribute_id** %retval
  ret %struct.attribute_id* %100
}

; Function Attrs: nounwind uwtable
define internal i8* @poolAppendString(%struct.STRING_POOL* %pool, i8* %s) #0 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %s.addr = alloca i8*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %s.addr, align 8
  %1 = load i8, i8* %0, align 1
  %tobool = icmp ne i8 %1, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 3
  %3 = load i8*, i8** %ptr, align 8
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 2
  %5 = load i8*, i8** %end, align 8
  %cmp = icmp eq i8* %3, %5
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %while.body
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %6)
  %tobool1 = icmp ne i8 %call, 0
  br i1 %tobool1, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then

cond.false:                                       ; preds = %land.lhs.true, %while.body
  %7 = load i8*, i8** %s.addr, align 8
  %8 = load i8, i8* %7, align 1
  %9 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %9, i32 0, i32 3
  %10 = load i8*, i8** %ptr2, align 8
  %incdec.ptr = getelementptr i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %ptr2, align 8
  store i8 %8, i8* %10, align 1
  br i1 true, label %if.end, label %if.then

if.then:                                          ; preds = %cond.false, %cond.true
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %cond.false, %cond.true
  %11 = load i8*, i8** %s.addr, align 8
  %incdec.ptr3 = getelementptr i8, i8* %11, i32 1
  store i8* %incdec.ptr3, i8** %s.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %12 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %12, i32 0, i32 4
  %13 = load i8*, i8** %start, align 8
  store i8* %13, i8** %retval
  br label %return

return:                                           ; preds = %while.end, %if.then
  %14 = load i8*, i8** %retval
  ret i8* %14
}

; Function Attrs: nounwind uwtable
define internal i8* @poolAppend(%struct.STRING_POOL* %pool, %struct.encoding* %enc, i8* %ptr, i8* %end) #0 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr1 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 3
  %1 = load i8*, i8** %ptr1, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %2)
  %tobool2 = icmp ne i8 %call, 0
  br i1 %tobool2, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %for.cond

for.cond:                                         ; preds = %if.end.10, %if.end
  %3 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %3, i32 0, i32 11
  %4 = load void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %6 = load i8*, i8** %end.addr, align 8
  %7 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr3 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %7, i32 0, i32 3
  %8 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end4 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %8, i32 0, i32 2
  %9 = load i8*, i8** %end4, align 8
  call void %4(%struct.encoding* %5, i8** %ptr.addr, i8* %6, i8** %ptr3, i8* %9)
  %10 = load i8*, i8** %ptr.addr, align 8
  %11 = load i8*, i8** %end.addr, align 8
  %cmp = icmp eq i8* %10, %11
  br i1 %cmp, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %for.cond
  br label %for.end

if.end.6:                                         ; preds = %for.cond
  %12 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call7 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %12)
  %tobool8 = icmp ne i8 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.6
  store i8* null, i8** %retval
  br label %return

if.end.10:                                        ; preds = %if.end.6
  br label %for.cond

for.end:                                          ; preds = %if.then.5
  %13 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %13, i32 0, i32 4
  %14 = load i8*, i8** %start, align 8
  store i8* %14, i8** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.9, %if.then
  %15 = load i8*, i8** %retval
  ret i8* %15
}

; Function Attrs: nounwind uwtable
define internal i32 @defineAttribute(%struct.ELEMENT_TYPE* %type, %struct.attribute_id* %attId, i8 zeroext %isCdata, i8 zeroext %isId, i8* %value, %struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca %struct.ELEMENT_TYPE*, align 8
  %attId.addr = alloca %struct.attribute_id*, align 8
  %isCdata.addr = alloca i8, align 1
  %isId.addr = alloca i8, align 1
  %value.addr = alloca i8*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %att = alloca %struct.DEFAULT_ATTRIBUTE*, align 8
  %i = alloca i32, align 4
  %temp = alloca %struct.DEFAULT_ATTRIBUTE*, align 8
  %count = alloca i32, align 4
  store %struct.ELEMENT_TYPE* %type, %struct.ELEMENT_TYPE** %type.addr, align 8
  store %struct.attribute_id* %attId, %struct.attribute_id** %attId.addr, align 8
  store i8 %isCdata, i8* %isCdata.addr, align 1
  store i8 %isId, i8* %isId.addr, align 1
  store i8* %value, i8** %value.addr, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load i8*, i8** %value.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %isId.addr, align 1
  %conv = zext i8 %1 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %if.then, label %if.end.14

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4
  %3 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %nDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %3, i32 0, i32 3
  %4 = load i32, i32* %nDefaultAtts, align 4
  %cmp = icmp slt i32 %2, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8
  %6 = load i32, i32* %i, align 4
  %idxprom = sext i32 %6 to i64
  %7 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %7, i32 0, i32 5
  %8 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8
  %arrayidx = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %8, i64 %idxprom
  %id = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx, i32 0, i32 0
  %9 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8
  %cmp3 = icmp eq %struct.attribute_id* %5, %9
  br i1 %cmp3, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %for.body
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4
  %inc = add i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load i8, i8* %isId.addr, align 1
  %conv6 = zext i8 %11 to i32
  %tobool7 = icmp ne i32 %conv6, 0
  br i1 %tobool7, label %land.lhs.true, label %if.end.13

land.lhs.true:                                    ; preds = %for.end
  %12 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %idAtt = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %12, i32 0, i32 2
  %13 = load %struct.attribute_id*, %struct.attribute_id** %idAtt, align 8
  %tobool8 = icmp ne %struct.attribute_id* %13, null
  br i1 %tobool8, label %if.end.13, label %land.lhs.true.9

land.lhs.true.9:                                  ; preds = %land.lhs.true
  %14 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8
  %xmlns = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %14, i32 0, i32 3
  %15 = load i8, i8* %xmlns, align 1
  %tobool10 = icmp ne i8 %15, 0
  br i1 %tobool10, label %if.end.13, label %if.then.11

if.then.11:                                       ; preds = %land.lhs.true.9
  %16 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8
  %17 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %idAtt12 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %17, i32 0, i32 2
  store %struct.attribute_id* %16, %struct.attribute_id** %idAtt12, align 8
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.11, %land.lhs.true.9, %land.lhs.true, %for.end
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13, %lor.lhs.false
  %18 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %nDefaultAtts15 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %18, i32 0, i32 3
  %19 = load i32, i32* %nDefaultAtts15, align 4
  %20 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %allocDefaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %20, i32 0, i32 4
  %21 = load i32, i32* %allocDefaultAtts, align 4
  %cmp16 = icmp eq i32 %19, %21
  br i1 %cmp16, label %if.then.18, label %if.end.45

if.then.18:                                       ; preds = %if.end.14
  %22 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %allocDefaultAtts19 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %22, i32 0, i32 4
  %23 = load i32, i32* %allocDefaultAtts19, align 4
  %cmp20 = icmp eq i32 %23, 0
  br i1 %cmp20, label %if.then.22, label %if.else

if.then.22:                                       ; preds = %if.then.18
  %24 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %allocDefaultAtts23 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %24, i32 0, i32 4
  store i32 8, i32* %allocDefaultAtts23, align 4
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %25, i32 0, i32 3
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0
  %26 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %27 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %allocDefaultAtts24 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %27, i32 0, i32 4
  %28 = load i32, i32* %allocDefaultAtts24, align 4
  %conv25 = sext i32 %28 to i64
  %mul = mul i64 %conv25, 24
  %call = call i8* %26(i64 %mul)
  %29 = bitcast i8* %call to %struct.DEFAULT_ATTRIBUTE*
  %30 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %defaultAtts26 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %30, i32 0, i32 5
  store %struct.DEFAULT_ATTRIBUTE* %29, %struct.DEFAULT_ATTRIBUTE** %defaultAtts26, align 8
  %31 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %defaultAtts27 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %31, i32 0, i32 5
  %32 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts27, align 8
  %tobool28 = icmp ne %struct.DEFAULT_ATTRIBUTE* %32, null
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %if.then.22
  store i32 0, i32* %retval
  br label %return

if.end.30:                                        ; preds = %if.then.22
  br label %if.end.44

if.else:                                          ; preds = %if.then.18
  %33 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %allocDefaultAtts31 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %33, i32 0, i32 4
  %34 = load i32, i32* %allocDefaultAtts31, align 4
  %mul32 = mul i32 %34, 2
  store i32 %mul32, i32* %count, align 4
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 3
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem33, i32 0, i32 1
  %36 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8
  %37 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %defaultAtts34 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %37, i32 0, i32 5
  %38 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts34, align 8
  %39 = bitcast %struct.DEFAULT_ATTRIBUTE* %38 to i8*
  %40 = load i32, i32* %count, align 4
  %conv35 = sext i32 %40 to i64
  %mul36 = mul i64 %conv35, 24
  %call37 = call i8* %36(i8* %39, i64 %mul36)
  %41 = bitcast i8* %call37 to %struct.DEFAULT_ATTRIBUTE*
  store %struct.DEFAULT_ATTRIBUTE* %41, %struct.DEFAULT_ATTRIBUTE** %temp, align 8
  %42 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %temp, align 8
  %cmp38 = icmp eq %struct.DEFAULT_ATTRIBUTE* %42, null
  br i1 %cmp38, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %if.else
  store i32 0, i32* %retval
  br label %return

if.end.41:                                        ; preds = %if.else
  %43 = load i32, i32* %count, align 4
  %44 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %allocDefaultAtts42 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %44, i32 0, i32 4
  store i32 %43, i32* %allocDefaultAtts42, align 4
  %45 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %temp, align 8
  %46 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %defaultAtts43 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %46, i32 0, i32 5
  store %struct.DEFAULT_ATTRIBUTE* %45, %struct.DEFAULT_ATTRIBUTE** %defaultAtts43, align 8
  br label %if.end.44

if.end.44:                                        ; preds = %if.end.41, %if.end.30
  br label %if.end.45

if.end.45:                                        ; preds = %if.end.44, %if.end.14
  %47 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %defaultAtts46 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %47, i32 0, i32 5
  %48 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts46, align 8
  %49 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %nDefaultAtts47 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %49, i32 0, i32 3
  %50 = load i32, i32* %nDefaultAtts47, align 4
  %idx.ext = sext i32 %50 to i64
  %add.ptr = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %48, i64 %idx.ext
  store %struct.DEFAULT_ATTRIBUTE* %add.ptr, %struct.DEFAULT_ATTRIBUTE** %att, align 8
  %51 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8
  %52 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %att, align 8
  %id48 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %52, i32 0, i32 0
  store %struct.attribute_id* %51, %struct.attribute_id** %id48, align 8
  %53 = load i8*, i8** %value.addr, align 8
  %54 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %att, align 8
  %value49 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %54, i32 0, i32 2
  store i8* %53, i8** %value49, align 8
  %55 = load i8, i8* %isCdata.addr, align 1
  %56 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %att, align 8
  %isCdata50 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %56, i32 0, i32 1
  store i8 %55, i8* %isCdata50, align 1
  %57 = load i8, i8* %isCdata.addr, align 1
  %tobool51 = icmp ne i8 %57, 0
  br i1 %tobool51, label %if.end.53, label %if.then.52

if.then.52:                                       ; preds = %if.end.45
  %58 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8
  %maybeTokenized = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %58, i32 0, i32 2
  store i8 1, i8* %maybeTokenized, align 1
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.52, %if.end.45
  %59 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %type.addr, align 8
  %nDefaultAtts54 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %59, i32 0, i32 3
  %60 = load i32, i32* %nDefaultAtts54, align 4
  %add = add i32 %60, 1
  store i32 %add, i32* %nDefaultAtts54, align 4
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.53, %if.then.40, %if.then.29, %if.then.5
  %61 = load i32, i32* %retval
  ret i32 %61
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @poolGrow(%struct.STRING_POOL* %pool) #0 {
entry:
  %retval = alloca i8, align 1
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %tem = alloca %struct.block*, align 8
  %blockSize = alloca i32, align 4
  %temp = alloca %struct.block*, align 8
  %tem101 = alloca %struct.block*, align 8
  %blockSize102 = alloca i32, align 4
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 1
  %1 = load %struct.block*, %struct.block** %freeBlocks, align 8
  %tobool = icmp ne %struct.block* %1, null
  br i1 %tobool, label %if.then, label %if.end.56

if.then:                                          ; preds = %entry
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %2, i32 0, i32 4
  %3 = load i8*, i8** %start, align 8
  %cmp = icmp eq i8* %3, null
  br i1 %cmp, label %if.then.1, label %if.end

if.then.1:                                        ; preds = %if.then
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 1
  %5 = load %struct.block*, %struct.block** %freeBlocks2, align 8
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 0
  store %struct.block* %5, %struct.block** %blocks, align 8
  %7 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks3 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %7, i32 0, i32 1
  %8 = load %struct.block*, %struct.block** %freeBlocks3, align 8
  %next = getelementptr inbounds %struct.block, %struct.block* %8, i32 0, i32 0
  %9 = load %struct.block*, %struct.block** %next, align 8
  %10 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks4 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %10, i32 0, i32 1
  store %struct.block* %9, %struct.block** %freeBlocks4, align 8
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 0
  %12 = load %struct.block*, %struct.block** %blocks5, align 8
  %next6 = getelementptr inbounds %struct.block, %struct.block* %12, i32 0, i32 0
  store %struct.block* null, %struct.block** %next6, align 8
  %13 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks7 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %13, i32 0, i32 0
  %14 = load %struct.block*, %struct.block** %blocks7, align 8
  %s = getelementptr inbounds %struct.block, %struct.block* %14, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %s, i32 0, i32 0
  %15 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start8 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %15, i32 0, i32 4
  store i8* %arraydecay, i8** %start8, align 8
  %16 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start9 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %16, i32 0, i32 4
  %17 = load i8*, i8** %start9, align 8
  %18 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks10 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %18, i32 0, i32 0
  %19 = load %struct.block*, %struct.block** %blocks10, align 8
  %size = getelementptr inbounds %struct.block, %struct.block* %19, i32 0, i32 1
  %20 = load i32, i32* %size, align 4
  %idx.ext = sext i32 %20 to i64
  %add.ptr = getelementptr i8, i8* %17, i64 %idx.ext
  %21 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %21, i32 0, i32 2
  store i8* %add.ptr, i8** %end, align 8
  %22 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start11 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %22, i32 0, i32 4
  %23 = load i8*, i8** %start11, align 8
  %24 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %24, i32 0, i32 3
  store i8* %23, i8** %ptr, align 8
  store i8 1, i8* %retval
  br label %return

if.end:                                           ; preds = %if.then
  %25 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end12 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %25, i32 0, i32 2
  %26 = load i8*, i8** %end12, align 8
  %27 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start13 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %27, i32 0, i32 4
  %28 = load i8*, i8** %start13, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %26 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %28 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %29 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks14 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %29, i32 0, i32 1
  %30 = load %struct.block*, %struct.block** %freeBlocks14, align 8
  %size15 = getelementptr inbounds %struct.block, %struct.block* %30, i32 0, i32 1
  %31 = load i32, i32* %size15, align 4
  %conv = sext i32 %31 to i64
  %cmp16 = icmp slt i64 %sub.ptr.sub, %conv
  br i1 %cmp16, label %if.then.18, label %if.end.55

if.then.18:                                       ; preds = %if.end
  %32 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks19 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %32, i32 0, i32 1
  %33 = load %struct.block*, %struct.block** %freeBlocks19, align 8
  %next20 = getelementptr inbounds %struct.block, %struct.block* %33, i32 0, i32 0
  %34 = load %struct.block*, %struct.block** %next20, align 8
  store %struct.block* %34, %struct.block** %tem, align 8
  %35 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks21 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %35, i32 0, i32 0
  %36 = load %struct.block*, %struct.block** %blocks21, align 8
  %37 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks22 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %37, i32 0, i32 1
  %38 = load %struct.block*, %struct.block** %freeBlocks22, align 8
  %next23 = getelementptr inbounds %struct.block, %struct.block* %38, i32 0, i32 0
  store %struct.block* %36, %struct.block** %next23, align 8
  %39 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks24 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %39, i32 0, i32 1
  %40 = load %struct.block*, %struct.block** %freeBlocks24, align 8
  %41 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks25 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %41, i32 0, i32 0
  store %struct.block* %40, %struct.block** %blocks25, align 8
  %42 = load %struct.block*, %struct.block** %tem, align 8
  %43 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %freeBlocks26 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %43, i32 0, i32 1
  store %struct.block* %42, %struct.block** %freeBlocks26, align 8
  %44 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks27 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %44, i32 0, i32 0
  %45 = load %struct.block*, %struct.block** %blocks27, align 8
  %s28 = getelementptr inbounds %struct.block, %struct.block* %45, i32 0, i32 2
  %46 = bitcast [1 x i8]* %s28 to i8*
  %47 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start29 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %47, i32 0, i32 4
  %48 = load i8*, i8** %start29, align 8
  %49 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end30 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %49, i32 0, i32 2
  %50 = load i8*, i8** %end30, align 8
  %51 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start31 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %51, i32 0, i32 4
  %52 = load i8*, i8** %start31, align 8
  %sub.ptr.lhs.cast32 = ptrtoint i8* %50 to i64
  %sub.ptr.rhs.cast33 = ptrtoint i8* %52 to i64
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast33
  %mul = mul i64 %sub.ptr.sub34, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %48, i64 %mul, i32 1, i1 false)
  %53 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks35 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %53, i32 0, i32 0
  %54 = load %struct.block*, %struct.block** %blocks35, align 8
  %s36 = getelementptr inbounds %struct.block, %struct.block* %54, i32 0, i32 2
  %arraydecay37 = getelementptr inbounds [1 x i8], [1 x i8]* %s36, i32 0, i32 0
  %55 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr38 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %55, i32 0, i32 3
  %56 = load i8*, i8** %ptr38, align 8
  %57 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start39 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %57, i32 0, i32 4
  %58 = load i8*, i8** %start39, align 8
  %sub.ptr.lhs.cast40 = ptrtoint i8* %56 to i64
  %sub.ptr.rhs.cast41 = ptrtoint i8* %58 to i64
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41
  %add.ptr43 = getelementptr i8, i8* %arraydecay37, i64 %sub.ptr.sub42
  %59 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr44 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %59, i32 0, i32 3
  store i8* %add.ptr43, i8** %ptr44, align 8
  %60 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks45 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %60, i32 0, i32 0
  %61 = load %struct.block*, %struct.block** %blocks45, align 8
  %s46 = getelementptr inbounds %struct.block, %struct.block* %61, i32 0, i32 2
  %arraydecay47 = getelementptr inbounds [1 x i8], [1 x i8]* %s46, i32 0, i32 0
  %62 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start48 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %62, i32 0, i32 4
  store i8* %arraydecay47, i8** %start48, align 8
  %63 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start49 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %63, i32 0, i32 4
  %64 = load i8*, i8** %start49, align 8
  %65 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks50 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %65, i32 0, i32 0
  %66 = load %struct.block*, %struct.block** %blocks50, align 8
  %size51 = getelementptr inbounds %struct.block, %struct.block* %66, i32 0, i32 1
  %67 = load i32, i32* %size51, align 4
  %idx.ext52 = sext i32 %67 to i64
  %add.ptr53 = getelementptr i8, i8* %64, i64 %idx.ext52
  %68 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end54 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %68, i32 0, i32 2
  store i8* %add.ptr53, i8** %end54, align 8
  store i8 1, i8* %retval
  br label %return

if.end.55:                                        ; preds = %if.end
  br label %if.end.56

if.end.56:                                        ; preds = %if.end.55, %entry
  %69 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks57 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %69, i32 0, i32 0
  %70 = load %struct.block*, %struct.block** %blocks57, align 8
  %tobool58 = icmp ne %struct.block* %70, null
  br i1 %tobool58, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end.56
  %71 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start59 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %71, i32 0, i32 4
  %72 = load i8*, i8** %start59, align 8
  %73 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks60 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %73, i32 0, i32 0
  %74 = load %struct.block*, %struct.block** %blocks60, align 8
  %s61 = getelementptr inbounds %struct.block, %struct.block* %74, i32 0, i32 2
  %arraydecay62 = getelementptr inbounds [1 x i8], [1 x i8]* %s61, i32 0, i32 0
  %cmp63 = icmp eq i8* %72, %arraydecay62
  br i1 %cmp63, label %if.then.65, label %if.else

if.then.65:                                       ; preds = %land.lhs.true
  %75 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end66 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %75, i32 0, i32 2
  %76 = load i8*, i8** %end66, align 8
  %77 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start67 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %77, i32 0, i32 4
  %78 = load i8*, i8** %start67, align 8
  %sub.ptr.lhs.cast68 = ptrtoint i8* %76 to i64
  %sub.ptr.rhs.cast69 = ptrtoint i8* %78 to i64
  %sub.ptr.sub70 = sub i64 %sub.ptr.lhs.cast68, %sub.ptr.rhs.cast69
  %conv71 = trunc i64 %sub.ptr.sub70 to i32
  %mul72 = mul i32 %conv71, 2
  store i32 %mul72, i32* %blockSize, align 4
  %79 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %mem = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %79, i32 0, i32 5
  %80 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %80, i32 0, i32 1
  %81 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8
  %82 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks73 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %82, i32 0, i32 0
  %83 = load %struct.block*, %struct.block** %blocks73, align 8
  %84 = bitcast %struct.block* %83 to i8*
  %85 = load i32, i32* %blockSize, align 4
  %conv74 = sext i32 %85 to i64
  %mul75 = mul i64 %conv74, 1
  %add = add i64 12, %mul75
  %call = call i8* %81(i8* %84, i64 %add)
  %86 = bitcast i8* %call to %struct.block*
  store %struct.block* %86, %struct.block** %temp, align 8
  %87 = load %struct.block*, %struct.block** %temp, align 8
  %cmp76 = icmp eq %struct.block* %87, null
  br i1 %cmp76, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %if.then.65
  store i8 0, i8* %retval
  br label %return

if.end.79:                                        ; preds = %if.then.65
  %88 = load %struct.block*, %struct.block** %temp, align 8
  %89 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks80 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %89, i32 0, i32 0
  store %struct.block* %88, %struct.block** %blocks80, align 8
  %90 = load i32, i32* %blockSize, align 4
  %91 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks81 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %91, i32 0, i32 0
  %92 = load %struct.block*, %struct.block** %blocks81, align 8
  %size82 = getelementptr inbounds %struct.block, %struct.block* %92, i32 0, i32 1
  store i32 %90, i32* %size82, align 4
  %93 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks83 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %93, i32 0, i32 0
  %94 = load %struct.block*, %struct.block** %blocks83, align 8
  %s84 = getelementptr inbounds %struct.block, %struct.block* %94, i32 0, i32 2
  %arraydecay85 = getelementptr inbounds [1 x i8], [1 x i8]* %s84, i32 0, i32 0
  %95 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr86 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %95, i32 0, i32 3
  %96 = load i8*, i8** %ptr86, align 8
  %97 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start87 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %97, i32 0, i32 4
  %98 = load i8*, i8** %start87, align 8
  %sub.ptr.lhs.cast88 = ptrtoint i8* %96 to i64
  %sub.ptr.rhs.cast89 = ptrtoint i8* %98 to i64
  %sub.ptr.sub90 = sub i64 %sub.ptr.lhs.cast88, %sub.ptr.rhs.cast89
  %add.ptr91 = getelementptr i8, i8* %arraydecay85, i64 %sub.ptr.sub90
  %99 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr92 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %99, i32 0, i32 3
  store i8* %add.ptr91, i8** %ptr92, align 8
  %100 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks93 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %100, i32 0, i32 0
  %101 = load %struct.block*, %struct.block** %blocks93, align 8
  %s94 = getelementptr inbounds %struct.block, %struct.block* %101, i32 0, i32 2
  %arraydecay95 = getelementptr inbounds [1 x i8], [1 x i8]* %s94, i32 0, i32 0
  %102 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start96 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %102, i32 0, i32 4
  store i8* %arraydecay95, i8** %start96, align 8
  %103 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start97 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %103, i32 0, i32 4
  %104 = load i8*, i8** %start97, align 8
  %105 = load i32, i32* %blockSize, align 4
  %idx.ext98 = sext i32 %105 to i64
  %add.ptr99 = getelementptr i8, i8* %104, i64 %idx.ext98
  %106 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end100 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %106, i32 0, i32 2
  store i8* %add.ptr99, i8** %end100, align 8
  br label %if.end.158

if.else:                                          ; preds = %land.lhs.true, %if.end.56
  %107 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end103 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %107, i32 0, i32 2
  %108 = load i8*, i8** %end103, align 8
  %109 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start104 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %109, i32 0, i32 4
  %110 = load i8*, i8** %start104, align 8
  %sub.ptr.lhs.cast105 = ptrtoint i8* %108 to i64
  %sub.ptr.rhs.cast106 = ptrtoint i8* %110 to i64
  %sub.ptr.sub107 = sub i64 %sub.ptr.lhs.cast105, %sub.ptr.rhs.cast106
  %conv108 = trunc i64 %sub.ptr.sub107 to i32
  store i32 %conv108, i32* %blockSize102, align 4
  %111 = load i32, i32* %blockSize102, align 4
  %cmp109 = icmp slt i32 %111, 1024
  br i1 %cmp109, label %if.then.111, label %if.else.112

if.then.111:                                      ; preds = %if.else
  store i32 1024, i32* %blockSize102, align 4
  br label %if.end.114

if.else.112:                                      ; preds = %if.else
  %112 = load i32, i32* %blockSize102, align 4
  %mul113 = mul i32 %112, 2
  store i32 %mul113, i32* %blockSize102, align 4
  br label %if.end.114

if.end.114:                                       ; preds = %if.else.112, %if.then.111
  %113 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %mem115 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %113, i32 0, i32 5
  %114 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem115, align 8
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %114, i32 0, i32 0
  %115 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %116 = load i32, i32* %blockSize102, align 4
  %conv116 = sext i32 %116 to i64
  %mul117 = mul i64 %conv116, 1
  %add118 = add i64 12, %mul117
  %call119 = call i8* %115(i64 %add118)
  %117 = bitcast i8* %call119 to %struct.block*
  store %struct.block* %117, %struct.block** %tem101, align 8
  %118 = load %struct.block*, %struct.block** %tem101, align 8
  %tobool120 = icmp ne %struct.block* %118, null
  br i1 %tobool120, label %if.end.122, label %if.then.121

if.then.121:                                      ; preds = %if.end.114
  store i8 0, i8* %retval
  br label %return

if.end.122:                                       ; preds = %if.end.114
  %119 = load i32, i32* %blockSize102, align 4
  %120 = load %struct.block*, %struct.block** %tem101, align 8
  %size123 = getelementptr inbounds %struct.block, %struct.block* %120, i32 0, i32 1
  store i32 %119, i32* %size123, align 4
  %121 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks124 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %121, i32 0, i32 0
  %122 = load %struct.block*, %struct.block** %blocks124, align 8
  %123 = load %struct.block*, %struct.block** %tem101, align 8
  %next125 = getelementptr inbounds %struct.block, %struct.block* %123, i32 0, i32 0
  store %struct.block* %122, %struct.block** %next125, align 8
  %124 = load %struct.block*, %struct.block** %tem101, align 8
  %125 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %blocks126 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %125, i32 0, i32 0
  store %struct.block* %124, %struct.block** %blocks126, align 8
  %126 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr127 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %126, i32 0, i32 3
  %127 = load i8*, i8** %ptr127, align 8
  %128 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start128 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %128, i32 0, i32 4
  %129 = load i8*, i8** %start128, align 8
  %cmp129 = icmp ne i8* %127, %129
  br i1 %cmp129, label %if.then.131, label %if.end.140

if.then.131:                                      ; preds = %if.end.122
  %130 = load %struct.block*, %struct.block** %tem101, align 8
  %s132 = getelementptr inbounds %struct.block, %struct.block* %130, i32 0, i32 2
  %131 = bitcast [1 x i8]* %s132 to i8*
  %132 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start133 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %132, i32 0, i32 4
  %133 = load i8*, i8** %start133, align 8
  %134 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr134 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %134, i32 0, i32 3
  %135 = load i8*, i8** %ptr134, align 8
  %136 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start135 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %136, i32 0, i32 4
  %137 = load i8*, i8** %start135, align 8
  %sub.ptr.lhs.cast136 = ptrtoint i8* %135 to i64
  %sub.ptr.rhs.cast137 = ptrtoint i8* %137 to i64
  %sub.ptr.sub138 = sub i64 %sub.ptr.lhs.cast136, %sub.ptr.rhs.cast137
  %mul139 = mul i64 %sub.ptr.sub138, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %133, i64 %mul139, i32 1, i1 false)
  br label %if.end.140

if.end.140:                                       ; preds = %if.then.131, %if.end.122
  %138 = load %struct.block*, %struct.block** %tem101, align 8
  %s141 = getelementptr inbounds %struct.block, %struct.block* %138, i32 0, i32 2
  %arraydecay142 = getelementptr inbounds [1 x i8], [1 x i8]* %s141, i32 0, i32 0
  %139 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr143 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %139, i32 0, i32 3
  %140 = load i8*, i8** %ptr143, align 8
  %141 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start144 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %141, i32 0, i32 4
  %142 = load i8*, i8** %start144, align 8
  %sub.ptr.lhs.cast145 = ptrtoint i8* %140 to i64
  %sub.ptr.rhs.cast146 = ptrtoint i8* %142 to i64
  %sub.ptr.sub147 = sub i64 %sub.ptr.lhs.cast145, %sub.ptr.rhs.cast146
  %add.ptr148 = getelementptr i8, i8* %arraydecay142, i64 %sub.ptr.sub147
  %143 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr149 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %143, i32 0, i32 3
  store i8* %add.ptr148, i8** %ptr149, align 8
  %144 = load %struct.block*, %struct.block** %tem101, align 8
  %s150 = getelementptr inbounds %struct.block, %struct.block* %144, i32 0, i32 2
  %arraydecay151 = getelementptr inbounds [1 x i8], [1 x i8]* %s150, i32 0, i32 0
  %145 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start152 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %145, i32 0, i32 4
  store i8* %arraydecay151, i8** %start152, align 8
  %146 = load %struct.block*, %struct.block** %tem101, align 8
  %s153 = getelementptr inbounds %struct.block, %struct.block* %146, i32 0, i32 2
  %arraydecay154 = getelementptr inbounds [1 x i8], [1 x i8]* %s153, i32 0, i32 0
  %147 = load i32, i32* %blockSize102, align 4
  %idx.ext155 = sext i32 %147 to i64
  %add.ptr156 = getelementptr i8, i8* %arraydecay154, i64 %idx.ext155
  %148 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end157 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %148, i32 0, i32 2
  store i8* %add.ptr156, i8** %end157, align 8
  br label %if.end.158

if.end.158:                                       ; preds = %if.end.140, %if.end.79
  store i8 1, i8* %retval
  br label %return

return:                                           ; preds = %if.end.158, %if.then.121, %if.then.78, %if.then.18, %if.then.1
  %149 = load i8, i8* %retval
  ret i8 %149
}

; Function Attrs: nounwind uwtable
define internal i32 @storeAttributeValue(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8 zeroext %isCdata, i8* %ptr, i8* %end, %struct.STRING_POOL* %pool) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %isCdata.addr = alloca i8, align 1
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8 %isCdata, i8* %isCdata.addr, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %1 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %2 = load i8, i8* %isCdata.addr, align 1
  %3 = load i8*, i8** %ptr.addr, align 8
  %4 = load i8*, i8** %end.addr, align 8
  %5 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call = call i32 @appendAttributeValue(%struct.XML_ParserStruct* %0, %struct.encoding* %1, i8 zeroext %2, i8* %3, i8* %4, %struct.STRING_POOL* %5)
  store i32 %call, i32* %result, align 4
  %6 = load i32, i32* %result, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %result, align 4
  store i32 %7, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %8 = load i8, i8* %isCdata.addr, align 1
  %tobool1 = icmp ne i8 %8, 0
  br i1 %tobool1, label %if.end.9, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %9, i32 0, i32 3
  %10 = load i8*, i8** %ptr2, align 8
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 4
  %12 = load i8*, i8** %start, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %tobool3 = icmp ne i64 %sub.ptr.sub, 0
  br i1 %tobool3, label %land.lhs.true.4, label %if.end.9

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %13 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %13, i32 0, i32 3
  %14 = load i8*, i8** %ptr5, align 8
  %arrayidx = getelementptr i8, i8* %14, i64 -1
  %15 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %15 to i32
  %cmp = icmp eq i32 %conv, 32
  br i1 %cmp, label %if.then.7, label %if.end.9

if.then.7:                                        ; preds = %land.lhs.true.4
  %16 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr8 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %16, i32 0, i32 3
  %17 = load i8*, i8** %ptr8, align 8
  %incdec.ptr = getelementptr i8, i8* %17, i32 -1
  store i8* %incdec.ptr, i8** %ptr8, align 8
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.7, %land.lhs.true.4, %land.lhs.true, %if.end
  %18 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr10 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %18, i32 0, i32 3
  %19 = load i8*, i8** %ptr10, align 8
  %20 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end11 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %20, i32 0, i32 2
  %21 = load i8*, i8** %end11, align 8
  %cmp12 = icmp eq i8* %19, %21
  br i1 %cmp12, label %land.lhs.true.14, label %cond.false

land.lhs.true.14:                                 ; preds = %if.end.9
  %22 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call15 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %22)
  %tobool16 = icmp ne i8 %call15, 0
  br i1 %tobool16, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true.14
  br i1 false, label %if.end.20, label %if.then.19

cond.false:                                       ; preds = %land.lhs.true.14, %if.end.9
  %23 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr17 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %23, i32 0, i32 3
  %24 = load i8*, i8** %ptr17, align 8
  %incdec.ptr18 = getelementptr i8, i8* %24, i32 1
  store i8* %incdec.ptr18, i8** %ptr17, align 8
  store i8 0, i8* %24, align 1
  br i1 true, label %if.end.20, label %if.then.19

if.then.19:                                       ; preds = %cond.false, %cond.true
  store i32 1, i32* %retval
  br label %return

if.end.20:                                        ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.20, %if.then.19, %if.then
  %25 = load i32, i32* %retval
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal i32 @storeEntityValue(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %entityTextPtr, i8* %entityTextEnd) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %entityTextPtr.addr = alloca i8*, align 8
  %entityTextEnd.addr = alloca i8*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %pool = alloca %struct.STRING_POOL*, align 8
  %result = alloca i32, align 4
  %oldInEntityValue = alloca i32, align 4
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %name = alloca i8*, align 8
  %entity = alloca %struct.ENTITY*, align 8
  %buf = alloca [4 x i8], align 1
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8* %entityTextPtr, i8** %entityTextPtr.addr, align 8
  store i8* %entityTextEnd, i8** %entityTextEnd.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  %2 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %entityValuePool = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 5
  store %struct.STRING_POOL* %entityValuePool, %struct.STRING_POOL** %pool, align 8
  store i32 0, i32* %result, align 4
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 44
  %inEntityValue = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState, i32 0, i32 5
  %4 = load i32, i32* %inEntityValue, align 4
  store i32 %4, i32* %oldInEntityValue, align 4
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 44
  %inEntityValue2 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState1, i32 0, i32 5
  store i32 1, i32* %inEntityValue2, align 4
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8
  %blocks = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 0
  %7 = load %struct.block*, %struct.block** %blocks, align 8
  %tobool = icmp ne %struct.block* %7, null
  br i1 %tobool, label %if.end.5, label %if.then

if.then:                                          ; preds = %entry
  %8 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %8)
  %tobool3 = icmp ne i8 %call, 0
  br i1 %tobool3, label %if.end, label %if.then.4

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.5

if.end.5:                                         ; preds = %if.end, %entry
  br label %for.cond

for.cond:                                         ; preds = %sw.epilog, %if.end.5
  %9 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %literalScanners = getelementptr inbounds %struct.encoding, %struct.encoding* %9, i32 0, i32 1
  %arrayidx = getelementptr [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %literalScanners, i32 0, i64 1
  %10 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %11 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %12 = load i8*, i8** %entityTextPtr.addr, align 8
  %13 = load i8*, i8** %entityTextEnd.addr, align 8
  %call6 = call i32 %10(%struct.encoding* %11, i8* %12, i8* %13, i8** %next)
  store i32 %call6, i32* %tok, align 4
  %14 = load i32, i32* %tok, align 4
  switch i32 %14, label %sw.default [
    i32 28, label %sw.bb
    i32 -4, label %sw.bb.66
    i32 9, label %sw.bb.67
    i32 6, label %sw.bb.67
    i32 -3, label %sw.bb.72
    i32 7, label %sw.bb.76
    i32 10, label %sw.bb.85
    i32 -1, label %sw.bb.122
    i32 0, label %sw.bb.129
  ]

sw.bb:                                            ; preds = %for.cond
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_isParamEntity = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 86
  %16 = load i8, i8* %m_isParamEntity, align 1
  %conv = zext i8 %16 to i32
  %tobool7 = icmp ne i32 %conv, 0
  br i1 %tobool7, label %if.then.9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %17 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 34
  %19 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %cmp = icmp ne %struct.encoding* %17, %19
  br i1 %cmp, label %if.then.9, label %if.end.64

if.then.9:                                        ; preds = %lor.lhs.false, %sw.bb
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 79
  %21 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %22 = load i8*, i8** %entityTextPtr.addr, align 8
  %23 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %23, i32 0, i32 13
  %24 = load i32, i32* %minBytesPerChar, align 4
  %idx.ext = sext i32 %24 to i64
  %add.ptr = getelementptr i8, i8* %22, i64 %idx.ext
  %25 = load i8*, i8** %next, align 8
  %26 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar10 = getelementptr inbounds %struct.encoding, %struct.encoding* %26, i32 0, i32 13
  %27 = load i32, i32* %minBytesPerChar10, align 4
  %idx.ext11 = sext i32 %27 to i64
  %idx.neg = sub i64 0, %idx.ext11
  %add.ptr12 = getelementptr i8, i8* %25, i64 %idx.neg
  %call13 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool, %struct.encoding* %21, i8* %add.ptr, i8* %add.ptr12)
  store i8* %call13, i8** %name, align 8
  %28 = load i8*, i8** %name, align 8
  %tobool14 = icmp ne i8* %28, null
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.then.9
  store i32 1, i32* %result, align 4
  br label %endEntityValue

if.end.16:                                        ; preds = %if.then.9
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %30 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %30, i32 0, i32 10
  %31 = load i8*, i8** %name, align 8
  %call17 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %29, %struct.HASH_TABLE* %paramEntities, i8* %31, i64 0)
  %32 = bitcast %struct.NAMED* %call17 to %struct.ENTITY*
  store %struct.ENTITY* %32, %struct.ENTITY** %entity, align 8
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 79
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool18, i32 0, i32 4
  %34 = load i8*, i8** %start, align 8
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 79
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool19, i32 0, i32 3
  store i8* %34, i8** %ptr, align 8
  %36 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %tobool20 = icmp ne %struct.ENTITY* %36, null
  br i1 %tobool20, label %if.end.22, label %if.then.21

if.then.21:                                       ; preds = %if.end.16
  %37 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %37, i32 0, i32 8
  %38 = load i8, i8* %standalone, align 1
  %39 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing = getelementptr inbounds %struct.DTD, %struct.DTD* %39, i32 0, i32 6
  store i8 %38, i8* %keepProcessing, align 1
  br label %endEntityValue

if.end.22:                                        ; preds = %if.end.16
  %40 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %40, i32 0, i32 8
  %41 = load i8, i8* %open, align 1
  %tobool23 = icmp ne i8 %41, 0
  br i1 %tobool23, label %if.then.24, label %if.end.30

if.then.24:                                       ; preds = %if.end.22
  %42 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 34
  %44 = load %struct.encoding*, %struct.encoding** %m_encoding25, align 8
  %cmp26 = icmp eq %struct.encoding* %42, %44
  br i1 %cmp26, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %if.then.24
  %45 = load i8*, i8** %entityTextPtr.addr, align 8
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 47
  store i8* %45, i8** %m_eventPtr, align 8
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.28, %if.then.24
  store i32 12, i32* %result, align 4
  br label %endEntityValue

if.end.30:                                        ; preds = %if.end.22
  %47 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %systemId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %47, i32 0, i32 4
  %48 = load i8*, i8** %systemId, align 8
  %tobool31 = icmp ne i8* %48, null
  br i1 %tobool31, label %if.then.32, label %if.else.53

if.then.32:                                       ; preds = %if.end.30
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 26
  %50 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8
  %tobool33 = icmp ne i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %50, null
  br i1 %tobool33, label %if.then.34, label %if.else

if.then.34:                                       ; preds = %if.then.32
  %51 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntityRead = getelementptr inbounds %struct.DTD, %struct.DTD* %51, i32 0, i32 9
  store i8 0, i8* %paramEntityRead, align 1
  %52 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open35 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %52, i32 0, i32 8
  store i8 1, i8* %open35, align 1
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandler36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 26
  %54 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler36, align 8
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 27
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8
  %57 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %base = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %57, i32 0, i32 5
  %58 = load i8*, i8** %base, align 8
  %59 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %systemId37 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %59, i32 0, i32 4
  %60 = load i8*, i8** %systemId37, align 8
  %61 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %publicId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %61, i32 0, i32 6
  %62 = load i8*, i8** %publicId, align 8
  %call38 = call i32 %54(%struct.XML_ParserStruct* %56, i8* null, i8* %58, i8* %60, i8* %62)
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.42, label %if.then.40

if.then.40:                                       ; preds = %if.then.34
  %63 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open41 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %63, i32 0, i32 8
  store i8 0, i8* %open41, align 1
  store i32 21, i32* %result, align 4
  br label %endEntityValue

if.end.42:                                        ; preds = %if.then.34
  %64 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open43 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %64, i32 0, i32 8
  store i8 0, i8* %open43, align 1
  %65 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %paramEntityRead44 = getelementptr inbounds %struct.DTD, %struct.DTD* %65, i32 0, i32 9
  %66 = load i8, i8* %paramEntityRead44, align 1
  %tobool45 = icmp ne i8 %66, 0
  br i1 %tobool45, label %if.end.49, label %if.then.46

if.then.46:                                       ; preds = %if.end.42
  %67 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone47 = getelementptr inbounds %struct.DTD, %struct.DTD* %67, i32 0, i32 8
  %68 = load i8, i8* %standalone47, align 1
  %69 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing48 = getelementptr inbounds %struct.DTD, %struct.DTD* %69, i32 0, i32 6
  store i8 %68, i8* %keepProcessing48, align 1
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.46, %if.end.42
  br label %if.end.52

if.else:                                          ; preds = %if.then.32
  %70 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone50 = getelementptr inbounds %struct.DTD, %struct.DTD* %70, i32 0, i32 8
  %71 = load i8, i8* %standalone50, align 1
  %72 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %keepProcessing51 = getelementptr inbounds %struct.DTD, %struct.DTD* %72, i32 0, i32 6
  store i8 %71, i8* %keepProcessing51, align 1
  br label %if.end.52

if.end.52:                                        ; preds = %if.else, %if.end.49
  br label %if.end.63

if.else.53:                                       ; preds = %if.end.30
  %73 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open54 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %73, i32 0, i32 8
  store i8 1, i8* %open54, align 1
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 36
  %76 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8
  %77 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %77, i32 0, i32 1
  %78 = load i8*, i8** %textPtr, align 8
  %79 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %textPtr55 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %79, i32 0, i32 1
  %80 = load i8*, i8** %textPtr55, align 8
  %81 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %81, i32 0, i32 2
  %82 = load i32, i32* %textLen, align 4
  %idx.ext56 = sext i32 %82 to i64
  %add.ptr57 = getelementptr i8, i8* %80, i64 %idx.ext56
  %call58 = call i32 @storeEntityValue(%struct.XML_ParserStruct* %74, %struct.encoding* %76, i8* %78, i8* %add.ptr57)
  store i32 %call58, i32* %result, align 4
  %83 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open59 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %83, i32 0, i32 8
  store i8 0, i8* %open59, align 1
  %84 = load i32, i32* %result, align 4
  %tobool60 = icmp ne i32 %84, 0
  br i1 %tobool60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.else.53
  br label %endEntityValue

if.end.62:                                        ; preds = %if.else.53
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %if.end.52
  br label %sw.epilog

if.end.64:                                        ; preds = %lor.lhs.false
  %85 = load i8*, i8** %entityTextPtr.addr, align 8
  %86 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr65 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %86, i32 0, i32 47
  store i8* %85, i8** %m_eventPtr65, align 8
  store i32 10, i32* %result, align 4
  br label %endEntityValue

sw.bb.66:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  br label %endEntityValue

sw.bb.67:                                         ; preds = %for.cond, %for.cond
  %87 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8
  %88 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %89 = load i8*, i8** %entityTextPtr.addr, align 8
  %90 = load i8*, i8** %next, align 8
  %call68 = call i8* @poolAppend(%struct.STRING_POOL* %87, %struct.encoding* %88, i8* %89, i8* %90)
  %tobool69 = icmp ne i8* %call68, null
  br i1 %tobool69, label %if.end.71, label %if.then.70

if.then.70:                                       ; preds = %sw.bb.67
  store i32 1, i32* %result, align 4
  br label %endEntityValue

if.end.71:                                        ; preds = %sw.bb.67
  br label %sw.epilog

sw.bb.72:                                         ; preds = %for.cond
  %91 = load i8*, i8** %entityTextPtr.addr, align 8
  %92 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar73 = getelementptr inbounds %struct.encoding, %struct.encoding* %92, i32 0, i32 13
  %93 = load i32, i32* %minBytesPerChar73, align 4
  %idx.ext74 = sext i32 %93 to i64
  %add.ptr75 = getelementptr i8, i8* %91, i64 %idx.ext74
  store i8* %add.ptr75, i8** %next, align 8
  br label %sw.bb.76

sw.bb.76:                                         ; preds = %for.cond, %sw.bb.72
  %94 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %94, i32 0, i32 2
  %95 = load i8*, i8** %end, align 8
  %96 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8
  %ptr77 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %96, i32 0, i32 3
  %97 = load i8*, i8** %ptr77, align 8
  %cmp78 = icmp eq i8* %95, %97
  br i1 %cmp78, label %land.lhs.true, label %if.end.83

land.lhs.true:                                    ; preds = %sw.bb.76
  %98 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8
  %call80 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %98)
  %tobool81 = icmp ne i8 %call80, 0
  br i1 %tobool81, label %if.end.83, label %if.then.82

if.then.82:                                       ; preds = %land.lhs.true
  store i32 1, i32* %result, align 4
  br label %endEntityValue

if.end.83:                                        ; preds = %land.lhs.true, %sw.bb.76
  %99 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8
  %ptr84 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %99, i32 0, i32 3
  %100 = load i8*, i8** %ptr84, align 8
  %incdec.ptr = getelementptr i8, i8* %100, i32 1
  store i8* %incdec.ptr, i8** %ptr84, align 8
  store i8 10, i8* %100, align 1
  br label %sw.epilog

sw.bb.85:                                         ; preds = %for.cond
  %101 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %charRefNumber = getelementptr inbounds %struct.encoding, %struct.encoding* %101, i32 0, i32 7
  %102 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %charRefNumber, align 8
  %103 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %104 = load i8*, i8** %entityTextPtr.addr, align 8
  %call86 = call i32 %102(%struct.encoding* %103, i8* %104)
  store i32 %call86, i32* %n, align 4
  %105 = load i32, i32* %n, align 4
  %cmp87 = icmp slt i32 %105, 0
  br i1 %cmp87, label %if.then.89, label %if.end.96

if.then.89:                                       ; preds = %sw.bb.85
  %106 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %107 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding90 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %107, i32 0, i32 34
  %108 = load %struct.encoding*, %struct.encoding** %m_encoding90, align 8
  %cmp91 = icmp eq %struct.encoding* %106, %108
  br i1 %cmp91, label %if.then.93, label %if.end.95

if.then.93:                                       ; preds = %if.then.89
  %109 = load i8*, i8** %entityTextPtr.addr, align 8
  %110 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr94 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %110, i32 0, i32 47
  store i8* %109, i8** %m_eventPtr94, align 8
  br label %if.end.95

if.end.95:                                        ; preds = %if.then.93, %if.then.89
  store i32 14, i32* %result, align 4
  br label %endEntityValue

if.end.96:                                        ; preds = %sw.bb.85
  %111 = load i32, i32* %n, align 4
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i32 0
  %call97 = call i32 @PyExpat_XmlUtf8Encode(i32 %111, i8* %arraydecay)
  store i32 %call97, i32* %n, align 4
  %112 = load i32, i32* %n, align 4
  %tobool98 = icmp ne i32 %112, 0
  br i1 %tobool98, label %if.end.106, label %if.then.99

if.then.99:                                       ; preds = %if.end.96
  %113 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %114 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding100 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %114, i32 0, i32 34
  %115 = load %struct.encoding*, %struct.encoding** %m_encoding100, align 8
  %cmp101 = icmp eq %struct.encoding* %113, %115
  br i1 %cmp101, label %if.then.103, label %if.end.105

if.then.103:                                      ; preds = %if.then.99
  %116 = load i8*, i8** %entityTextPtr.addr, align 8
  %117 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr104 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %117, i32 0, i32 47
  store i8* %116, i8** %m_eventPtr104, align 8
  br label %if.end.105

if.end.105:                                       ; preds = %if.then.103, %if.then.99
  store i32 14, i32* %result, align 4
  br label %endEntityValue

if.end.106:                                       ; preds = %if.end.96
  store i32 0, i32* %i, align 4
  br label %for.cond.107

for.cond.107:                                     ; preds = %for.inc, %if.end.106
  %118 = load i32, i32* %i, align 4
  %119 = load i32, i32* %n, align 4
  %cmp108 = icmp slt i32 %118, %119
  br i1 %cmp108, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.107
  %120 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8
  %end110 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %120, i32 0, i32 2
  %121 = load i8*, i8** %end110, align 8
  %122 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8
  %ptr111 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %122, i32 0, i32 3
  %123 = load i8*, i8** %ptr111, align 8
  %cmp112 = icmp eq i8* %121, %123
  br i1 %cmp112, label %land.lhs.true.114, label %if.end.118

land.lhs.true.114:                                ; preds = %for.body
  %124 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8
  %call115 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %124)
  %tobool116 = icmp ne i8 %call115, 0
  br i1 %tobool116, label %if.end.118, label %if.then.117

if.then.117:                                      ; preds = %land.lhs.true.114
  store i32 1, i32* %result, align 4
  br label %endEntityValue

if.end.118:                                       ; preds = %land.lhs.true.114, %for.body
  %125 = load i32, i32* %i, align 4
  %idxprom = sext i32 %125 to i64
  %arrayidx119 = getelementptr [4 x i8], [4 x i8]* %buf, i32 0, i64 %idxprom
  %126 = load i8, i8* %arrayidx119, align 1
  %127 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool, align 8
  %ptr120 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %127, i32 0, i32 3
  %128 = load i8*, i8** %ptr120, align 8
  %incdec.ptr121 = getelementptr i8, i8* %128, i32 1
  store i8* %incdec.ptr121, i8** %ptr120, align 8
  store i8 %126, i8* %128, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.end.118
  %129 = load i32, i32* %i, align 4
  %inc = add i32 %129, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.107

for.end:                                          ; preds = %for.cond.107
  br label %sw.epilog

sw.bb.122:                                        ; preds = %for.cond
  %130 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %131 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding123 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %131, i32 0, i32 34
  %132 = load %struct.encoding*, %struct.encoding** %m_encoding123, align 8
  %cmp124 = icmp eq %struct.encoding* %130, %132
  br i1 %cmp124, label %if.then.126, label %if.end.128

if.then.126:                                      ; preds = %sw.bb.122
  %133 = load i8*, i8** %entityTextPtr.addr, align 8
  %134 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr127 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %134, i32 0, i32 47
  store i8* %133, i8** %m_eventPtr127, align 8
  br label %if.end.128

if.end.128:                                       ; preds = %if.then.126, %sw.bb.122
  store i32 4, i32* %result, align 4
  br label %endEntityValue

sw.bb.129:                                        ; preds = %for.cond
  %135 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %136 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding130 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %136, i32 0, i32 34
  %137 = load %struct.encoding*, %struct.encoding** %m_encoding130, align 8
  %cmp131 = icmp eq %struct.encoding* %135, %137
  br i1 %cmp131, label %if.then.133, label %if.end.135

if.then.133:                                      ; preds = %sw.bb.129
  %138 = load i8*, i8** %next, align 8
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr134 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %139, i32 0, i32 47
  store i8* %138, i8** %m_eventPtr134, align 8
  br label %if.end.135

if.end.135:                                       ; preds = %if.then.133, %sw.bb.129
  store i32 4, i32* %result, align 4
  br label %endEntityValue

sw.default:                                       ; preds = %for.cond
  %140 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %141 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding136 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %141, i32 0, i32 34
  %142 = load %struct.encoding*, %struct.encoding** %m_encoding136, align 8
  %cmp137 = icmp eq %struct.encoding* %140, %142
  br i1 %cmp137, label %if.then.139, label %if.end.141

if.then.139:                                      ; preds = %sw.default
  %143 = load i8*, i8** %entityTextPtr.addr, align 8
  %144 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr140 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %144, i32 0, i32 47
  store i8* %143, i8** %m_eventPtr140, align 8
  br label %if.end.141

if.end.141:                                       ; preds = %if.then.139, %sw.default
  store i32 23, i32* %result, align 4
  br label %endEntityValue

sw.epilog:                                        ; preds = %for.end, %if.end.83, %if.end.71, %if.end.63
  %145 = load i8*, i8** %next, align 8
  store i8* %145, i8** %entityTextPtr.addr, align 8
  br label %for.cond

endEntityValue:                                   ; preds = %if.end.141, %if.end.135, %if.end.128, %if.then.117, %if.end.105, %if.end.95, %if.then.82, %if.then.70, %sw.bb.66, %if.end.64, %if.then.61, %if.then.40, %if.end.29, %if.then.21, %if.then.15
  %146 = load i32, i32* %oldInEntityValue, align 4
  %147 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState142 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %147, i32 0, i32 44
  %inEntityValue143 = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState142, i32 0, i32 5
  store i32 %146, i32* %inEntityValue143, align 4
  %148 = load i32, i32* %result, align 4
  store i32 %148, i32* %retval
  br label %return

return:                                           ; preds = %endEntityValue, %if.then.4
  %149 = load i32, i32* %retval
  ret i32 %149
}

; Function Attrs: nounwind uwtable
define internal i32 @doIgnoreSection(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8** %startPtr, i8* %end, i8** %nextPtr, i8 zeroext %haveMore) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %startPtr.addr = alloca i8**, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %haveMore.addr = alloca i8, align 1
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %s = alloca i8*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8** %startPtr, i8*** %startPtr.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  store i8 %haveMore, i8* %haveMore.addr, align 1
  %0 = load i8**, i8*** %startPtr.addr, align 8
  %1 = load i8*, i8** %0, align 8
  store i8* %1, i8** %s, align 8
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %cmp = icmp eq %struct.encoding* %2, %4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 47
  store i8** %m_eventPtr, i8*** %eventPP, align 8
  %6 = load i8*, i8** %s, align 8
  %7 = load i8**, i8*** %eventPP, align 8
  store i8* %6, i8** %7, align 8
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 48
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 50
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %10, i32 0, i32 0
  store i8** %internalEventPtr, i8*** %eventPP, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 50
  %12 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1, align 8
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %12, i32 0, i32 1
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i8*, i8** %s, align 8
  %14 = load i8**, i8*** %eventPP, align 8
  store i8* %13, i8** %14, align 8
  %15 = load i8**, i8*** %startPtr.addr, align 8
  store i8* null, i8** %15, align 8
  %16 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %16, i32 0, i32 0
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 3
  %17 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %18 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %19 = load i8*, i8** %s, align 8
  %20 = load i8*, i8** %end.addr, align 8
  %call = call i32 %17(%struct.encoding* %18, i8* %19, i8* %20, i8** %next)
  store i32 %call, i32* %tok, align 4
  %21 = load i8*, i8** %next, align 8
  %22 = load i8**, i8*** %eventEndPP, align 8
  store i8* %21, i8** %22, align 8
  %23 = load i32, i32* %tok, align 4
  switch i32 %23, label %sw.default [
    i32 42, label %sw.bb
    i32 0, label %sw.bb.7
    i32 -2, label %sw.bb.8
    i32 -1, label %sw.bb.12
    i32 -4, label %sw.bb.12
  ]

sw.bb:                                            ; preds = %if.end
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 18
  %25 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %tobool = icmp ne void (i8*, i8*, i32)* %25, null
  br i1 %tobool, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %sw.bb
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %27 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %28 = load i8*, i8** %s, align 8
  %29 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %26, %struct.encoding* %27, i8* %28, i8* %29)
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.2, %sw.bb
  %30 = load i8*, i8** %next, align 8
  %31 = load i8**, i8*** %startPtr.addr, align 8
  store i8* %30, i8** %31, align 8
  %32 = load i8*, i8** %next, align 8
  %33 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %32, i8** %33, align 8
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %35 = load i32, i32* %parsing, align 4
  %cmp4 = icmp eq i32 %35, 2
  br i1 %cmp4, label %if.then.5, label %if.else.6

if.then.5:                                        ; preds = %if.end.3
  store i32 35, i32* %retval
  br label %return

if.else.6:                                        ; preds = %if.end.3
  store i32 0, i32* %retval
  br label %return

sw.bb.7:                                          ; preds = %if.end
  %36 = load i8*, i8** %next, align 8
  %37 = load i8**, i8*** %eventPP, align 8
  store i8* %36, i8** %37, align 8
  store i32 4, i32* %retval
  br label %return

sw.bb.8:                                          ; preds = %if.end
  %38 = load i8, i8* %haveMore.addr, align 1
  %tobool9 = icmp ne i8 %38, 0
  br i1 %tobool9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %sw.bb.8
  %39 = load i8*, i8** %s, align 8
  %40 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %39, i8** %40, align 8
  store i32 0, i32* %retval
  br label %return

if.end.11:                                        ; preds = %sw.bb.8
  store i32 6, i32* %retval
  br label %return

sw.bb.12:                                         ; preds = %if.end, %if.end
  %41 = load i8, i8* %haveMore.addr, align 1
  %tobool13 = icmp ne i8 %41, 0
  br i1 %tobool13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %sw.bb.12
  %42 = load i8*, i8** %s, align 8
  %43 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %42, i8** %43, align 8
  store i32 0, i32* %retval
  br label %return

if.end.15:                                        ; preds = %sw.bb.12
  store i32 2, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.end
  %44 = load i8*, i8** %next, align 8
  %45 = load i8**, i8*** %eventPP, align 8
  store i8* %44, i8** %45, align 8
  store i32 23, i32* %retval
  br label %return

return:                                           ; preds = %sw.default, %if.end.15, %if.then.14, %if.end.11, %if.then.10, %sw.bb.7, %if.else.6, %if.then.5
  %46 = load i32, i32* %retval
  ret i32 %46
}

; Function Attrs: nounwind uwtable
define internal i32 @ignoreSectionProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %start, i8** %start.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 34
  %2 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %3 = load i8*, i8** %end.addr, align 8
  %4 = load i8**, i8*** %endPtr.addr, align 8
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1
  %6 = load i8, i8* %finalBuffer, align 1
  %tobool = icmp ne i8 %6, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %conv = trunc i32 %lnot.ext to i8
  %call = call i32 @doIgnoreSection(%struct.XML_ParserStruct* %0, %struct.encoding* %2, i8** %start.addr, i8* %3, i8** %4, i8 zeroext %conv)
  store i32 %call, i32* %result, align 4
  %7 = load i32, i32* %result, align 4
  %cmp = icmp ne i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %result, align 4
  store i32 %8, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %9 = load i8*, i8** %start.addr, align 8
  %tobool2 = icmp ne i8* %9, null
  br i1 %tobool2, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %if.end
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %12 = load i8*, i8** %start.addr, align 8
  %13 = load i8*, i8** %end.addr, align 8
  %14 = load i8**, i8*** %endPtr.addr, align 8
  %call4 = call i32 @prologProcessor(%struct.XML_ParserStruct* %11, i8* %12, i8* %13, i8** %14)
  store i32 %call4, i32* %retval
  br label %return

if.end.5:                                         ; preds = %if.end
  %15 = load i32, i32* %result, align 4
  store i32 %15, i32* %retval
  br label %return

return:                                           ; preds = %if.end.5, %if.then.3, %if.then
  %16 = load i32, i32* %retval
  ret i32 %16
}

; Function Attrs: nounwind uwtable
define internal i32 @nextScaffoldPart(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %me = alloca %struct.CONTENT_SCAFFOLD*, align 8
  %next = alloca i32, align 4
  %temp = alloca %struct.CONTENT_SCAFFOLD*, align 8
  %parent = alloca %struct.CONTENT_SCAFFOLD*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  %2 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 18
  %3 = load i32*, i32** %scaffIndex, align 8
  %tobool = icmp ne i32* %3, null
  br i1 %tobool, label %if.end.6, label %if.then

if.then:                                          ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 3
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0
  %5 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_groupSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 82
  %7 = load i32, i32* %m_groupSize, align 4
  %conv = zext i32 %7 to i64
  %mul = mul i64 %conv, 4
  %call = call i8* %5(i64 %mul)
  %8 = bitcast i8* %call to i32*
  %9 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex1 = getelementptr inbounds %struct.DTD, %struct.DTD* %9, i32 0, i32 18
  store i32* %8, i32** %scaffIndex1, align 8
  %10 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex2 = getelementptr inbounds %struct.DTD, %struct.DTD* %10, i32 0, i32 18
  %11 = load i32*, i32** %scaffIndex2, align 8
  %tobool3 = icmp ne i32* %11, null
  br i1 %tobool3, label %if.end, label %if.then.4

if.then.4:                                        ; preds = %if.then
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  %12 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex5 = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 18
  %13 = load i32*, i32** %scaffIndex5, align 8
  %arrayidx = getelementptr i32, i32* %13, i64 0
  store i32 0, i32* %arrayidx, align 4
  br label %if.end.6

if.end.6:                                         ; preds = %if.end, %entry
  %14 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %14, i32 0, i32 16
  %15 = load i32, i32* %scaffCount, align 4
  %16 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffSize = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 15
  %17 = load i32, i32* %scaffSize, align 4
  %cmp = icmp uge i32 %15, %17
  br i1 %cmp, label %if.then.8, label %if.end.34

if.then.8:                                        ; preds = %if.end.6
  %18 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 13
  %19 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8
  %tobool9 = icmp ne %struct.CONTENT_SCAFFOLD* %19, null
  br i1 %tobool9, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %if.then.8
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 3
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem11, i32 0, i32 1
  %21 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8
  %22 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold12 = getelementptr inbounds %struct.DTD, %struct.DTD* %22, i32 0, i32 13
  %23 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold12, align 8
  %24 = bitcast %struct.CONTENT_SCAFFOLD* %23 to i8*
  %25 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffSize13 = getelementptr inbounds %struct.DTD, %struct.DTD* %25, i32 0, i32 15
  %26 = load i32, i32* %scaffSize13, align 4
  %mul14 = mul i32 %26, 2
  %conv15 = zext i32 %mul14 to i64
  %mul16 = mul i64 %conv15, 32
  %call17 = call i8* %21(i8* %24, i64 %mul16)
  %27 = bitcast i8* %call17 to %struct.CONTENT_SCAFFOLD*
  store %struct.CONTENT_SCAFFOLD* %27, %struct.CONTENT_SCAFFOLD** %temp, align 8
  %28 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %temp, align 8
  %cmp18 = icmp eq %struct.CONTENT_SCAFFOLD* %28, null
  br i1 %cmp18, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.then.10
  store i32 -1, i32* %retval
  br label %return

if.end.21:                                        ; preds = %if.then.10
  %29 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffSize22 = getelementptr inbounds %struct.DTD, %struct.DTD* %29, i32 0, i32 15
  %30 = load i32, i32* %scaffSize22, align 4
  %mul23 = mul i32 %30, 2
  store i32 %mul23, i32* %scaffSize22, align 4
  br label %if.end.32

if.else:                                          ; preds = %if.then.8
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 3
  %malloc_fcn25 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem24, i32 0, i32 0
  %32 = load i8* (i64)*, i8* (i64)** %malloc_fcn25, align 8
  %call26 = call i8* %32(i64 1024)
  %33 = bitcast i8* %call26 to %struct.CONTENT_SCAFFOLD*
  store %struct.CONTENT_SCAFFOLD* %33, %struct.CONTENT_SCAFFOLD** %temp, align 8
  %34 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %temp, align 8
  %cmp27 = icmp eq %struct.CONTENT_SCAFFOLD* %34, null
  br i1 %cmp27, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.else
  store i32 -1, i32* %retval
  br label %return

if.end.30:                                        ; preds = %if.else
  %35 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffSize31 = getelementptr inbounds %struct.DTD, %struct.DTD* %35, i32 0, i32 15
  store i32 32, i32* %scaffSize31, align 4
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.30, %if.end.21
  %36 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %temp, align 8
  %37 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold33 = getelementptr inbounds %struct.DTD, %struct.DTD* %37, i32 0, i32 13
  store %struct.CONTENT_SCAFFOLD* %36, %struct.CONTENT_SCAFFOLD** %scaffold33, align 8
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.32, %if.end.6
  %38 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffCount35 = getelementptr inbounds %struct.DTD, %struct.DTD* %38, i32 0, i32 16
  %39 = load i32, i32* %scaffCount35, align 4
  %inc = add i32 %39, 1
  store i32 %inc, i32* %scaffCount35, align 4
  store i32 %39, i32* %next, align 4
  %40 = load i32, i32* %next, align 4
  %idxprom = sext i32 %40 to i64
  %41 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold36 = getelementptr inbounds %struct.DTD, %struct.DTD* %41, i32 0, i32 13
  %42 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold36, align 8
  %arrayidx37 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %42, i64 %idxprom
  store %struct.CONTENT_SCAFFOLD* %arrayidx37, %struct.CONTENT_SCAFFOLD** %me, align 8
  %43 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffLevel = getelementptr inbounds %struct.DTD, %struct.DTD* %43, i32 0, i32 17
  %44 = load i32, i32* %scaffLevel, align 4
  %tobool38 = icmp ne i32 %44, 0
  br i1 %tobool38, label %if.then.39, label %if.end.60

if.then.39:                                       ; preds = %if.end.34
  %45 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffLevel40 = getelementptr inbounds %struct.DTD, %struct.DTD* %45, i32 0, i32 17
  %46 = load i32, i32* %scaffLevel40, align 4
  %sub = sub i32 %46, 1
  %idxprom41 = sext i32 %sub to i64
  %47 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffIndex42 = getelementptr inbounds %struct.DTD, %struct.DTD* %47, i32 0, i32 18
  %48 = load i32*, i32** %scaffIndex42, align 8
  %arrayidx43 = getelementptr i32, i32* %48, i64 %idxprom41
  %49 = load i32, i32* %arrayidx43, align 4
  %idxprom44 = sext i32 %49 to i64
  %50 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold45 = getelementptr inbounds %struct.DTD, %struct.DTD* %50, i32 0, i32 13
  %51 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold45, align 8
  %arrayidx46 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %51, i64 %idxprom44
  store %struct.CONTENT_SCAFFOLD* %arrayidx46, %struct.CONTENT_SCAFFOLD** %parent, align 8
  %52 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8
  %lastchild = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %52, i32 0, i32 4
  %53 = load i32, i32* %lastchild, align 4
  %tobool47 = icmp ne i32 %53, 0
  br i1 %tobool47, label %if.then.48, label %if.end.53

if.then.48:                                       ; preds = %if.then.39
  %54 = load i32, i32* %next, align 4
  %55 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8
  %lastchild49 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %55, i32 0, i32 4
  %56 = load i32, i32* %lastchild49, align 4
  %idxprom50 = sext i32 %56 to i64
  %57 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold51 = getelementptr inbounds %struct.DTD, %struct.DTD* %57, i32 0, i32 13
  %58 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold51, align 8
  %arrayidx52 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %58, i64 %idxprom50
  %nextsib = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx52, i32 0, i32 6
  store i32 %54, i32* %nextsib, align 4
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.48, %if.then.39
  %59 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8
  %childcnt = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %59, i32 0, i32 5
  %60 = load i32, i32* %childcnt, align 4
  %tobool54 = icmp ne i32 %60, 0
  br i1 %tobool54, label %if.end.56, label %if.then.55

if.then.55:                                       ; preds = %if.end.53
  %61 = load i32, i32* %next, align 4
  %62 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8
  %firstchild = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %62, i32 0, i32 3
  store i32 %61, i32* %firstchild, align 4
  br label %if.end.56

if.end.56:                                        ; preds = %if.then.55, %if.end.53
  %63 = load i32, i32* %next, align 4
  %64 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8
  %lastchild57 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %64, i32 0, i32 4
  store i32 %63, i32* %lastchild57, align 4
  %65 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %parent, align 8
  %childcnt58 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %65, i32 0, i32 5
  %66 = load i32, i32* %childcnt58, align 4
  %inc59 = add i32 %66, 1
  store i32 %inc59, i32* %childcnt58, align 4
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.56, %if.end.34
  %67 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %me, align 8
  %nextsib61 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %67, i32 0, i32 6
  store i32 0, i32* %nextsib61, align 4
  %68 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %me, align 8
  %childcnt62 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %68, i32 0, i32 5
  store i32 0, i32* %childcnt62, align 4
  %69 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %me, align 8
  %lastchild63 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %69, i32 0, i32 4
  store i32 0, i32* %lastchild63, align 4
  %70 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %me, align 8
  %firstchild64 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %70, i32 0, i32 3
  store i32 0, i32* %firstchild64, align 4
  %71 = load i32, i32* %next, align 4
  store i32 %71, i32* %retval
  br label %return

return:                                           ; preds = %if.end.60, %if.then.29, %if.then.20, %if.then.4
  %72 = load i32, i32* %retval
  ret i32 %72
}

; Function Attrs: nounwind uwtable
define internal i32 @processInternalEntity(%struct.XML_ParserStruct* %parser, %struct.ENTITY* %entity, i8 zeroext %betweenDecl) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %entity.addr = alloca %struct.ENTITY*, align 8
  %betweenDecl.addr = alloca i8, align 1
  %textStart = alloca i8*, align 8
  %textEnd = alloca i8*, align 8
  %next = alloca i8*, align 8
  %result = alloca i32, align 4
  %openEntity = alloca %struct.open_internal_entity*, align 8
  %tok = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.ENTITY* %entity, %struct.ENTITY** %entity.addr, align 8
  store i8 %betweenDecl, i8* %betweenDecl.addr, align 1
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 51
  %1 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities, align 8
  %tobool = icmp ne %struct.open_internal_entity* %1, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 51
  %3 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities1, align 8
  store %struct.open_internal_entity* %3, %struct.open_internal_entity** %openEntity, align 8
  %4 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %next2 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %4, i32 0, i32 2
  %5 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next2, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeInternalEntities3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 51
  store %struct.open_internal_entity* %5, %struct.open_internal_entity** %m_freeInternalEntities3, align 8
  br label %if.end.6

if.else:                                          ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 3
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0
  %8 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %call = call i8* %8(i64 40)
  %9 = bitcast i8* %call to %struct.open_internal_entity*
  store %struct.open_internal_entity* %9, %struct.open_internal_entity** %openEntity, align 8
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %tobool4 = icmp ne %struct.open_internal_entity* %10, null
  br i1 %tobool4, label %if.end, label %if.then.5

if.then.5:                                        ; preds = %if.else
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end.6

if.end.6:                                         ; preds = %if.end, %if.then
  %11 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %11, i32 0, i32 8
  store i8 1, i8* %open, align 1
  %12 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8
  %processed = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %12, i32 0, i32 3
  store i32 0, i32* %processed, align 4
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 50
  %14 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8
  %15 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %next7 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %15, i32 0, i32 2
  store %struct.open_internal_entity* %14, %struct.open_internal_entity** %next7, align 8
  %16 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 50
  store %struct.open_internal_entity* %16, %struct.open_internal_entity** %m_openInternalEntities8, align 8
  %18 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8
  %19 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %entity9 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %19, i32 0, i32 3
  store %struct.ENTITY* %18, %struct.ENTITY** %entity9, align 8
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagLevel = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 53
  %21 = load i32, i32* %m_tagLevel, align 4
  %22 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %startTagLevel = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %22, i32 0, i32 4
  store i32 %21, i32* %startTagLevel, align 4
  %23 = load i8, i8* %betweenDecl.addr, align 1
  %24 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %betweenDecl10 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %24, i32 0, i32 5
  store i8 %23, i8* %betweenDecl10, align 1
  %25 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %25, i32 0, i32 0
  store i8* null, i8** %internalEventPtr, align 8
  %26 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %26, i32 0, i32 1
  store i8* null, i8** %internalEventEndPtr, align 8
  %27 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %27, i32 0, i32 1
  %28 = load i8*, i8** %textPtr, align 8
  store i8* %28, i8** %textStart, align 8
  %29 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8
  %textPtr11 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %29, i32 0, i32 1
  %30 = load i8*, i8** %textPtr11, align 8
  %31 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %31, i32 0, i32 2
  %32 = load i32, i32* %textLen, align 4
  %idx.ext = sext i32 %32 to i64
  %add.ptr = getelementptr i8, i8* %30, i64 %idx.ext
  store i8* %add.ptr, i8** %textEnd, align 8
  %33 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8
  %is_param = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %33, i32 0, i32 9
  %34 = load i8, i8* %is_param, align 1
  %tobool12 = icmp ne i8 %34, 0
  br i1 %tobool12, label %if.then.13, label %if.else.18

if.then.13:                                       ; preds = %if.end.6
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 36
  %36 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %36, i32 0, i32 0
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0
  %37 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_internalEncoding14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 36
  %39 = load %struct.encoding*, %struct.encoding** %m_internalEncoding14, align 8
  %40 = load i8*, i8** %textStart, align 8
  %41 = load i8*, i8** %textEnd, align 8
  %call15 = call i32 %37(%struct.encoding* %39, i8* %40, i8* %41, i8** %next)
  store i32 %call15, i32* %tok, align 4
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_internalEncoding16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 36
  %44 = load %struct.encoding*, %struct.encoding** %m_internalEncoding16, align 8
  %45 = load i8*, i8** %textStart, align 8
  %46 = load i8*, i8** %textEnd, align 8
  %47 = load i32, i32* %tok, align 4
  %48 = load i8*, i8** %next, align 8
  %call17 = call i32 @doProlog(%struct.XML_ParserStruct* %42, %struct.encoding* %44, i8* %45, i8* %46, i32 %47, i8* %48, i8** %next, i8 zeroext 0)
  store i32 %call17, i32* %result, align 4
  br label %if.end.22

if.else.18:                                       ; preds = %if.end.6
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagLevel19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 53
  %51 = load i32, i32* %m_tagLevel19, align 4
  %52 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_internalEncoding20 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %52, i32 0, i32 36
  %53 = load %struct.encoding*, %struct.encoding** %m_internalEncoding20, align 8
  %54 = load i8*, i8** %textStart, align 8
  %55 = load i8*, i8** %textEnd, align 8
  %call21 = call i32 @doContent(%struct.XML_ParserStruct* %49, i32 %51, %struct.encoding* %53, i8* %54, i8* %55, i8** %next, i8 zeroext 0)
  store i32 %call21, i32* %result, align 4
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.18, %if.then.13
  %56 = load i32, i32* %result, align 4
  %cmp = icmp eq i32 %56, 0
  br i1 %cmp, label %if.then.23, label %if.end.36

if.then.23:                                       ; preds = %if.end.22
  %57 = load i8*, i8** %textEnd, align 8
  %58 = load i8*, i8** %next, align 8
  %cmp24 = icmp ne i8* %57, %58
  br i1 %cmp24, label %land.lhs.true, label %if.else.28

land.lhs.true:                                    ; preds = %if.then.23
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %60 = load i32, i32* %parsing, align 4
  %cmp25 = icmp eq i32 %60, 3
  br i1 %cmp25, label %if.then.26, label %if.else.28

if.then.26:                                       ; preds = %land.lhs.true
  %61 = load i8*, i8** %next, align 8
  %62 = load i8*, i8** %textStart, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %61 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %62 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %63 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8
  %processed27 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %63, i32 0, i32 3
  store i32 %conv, i32* %processed27, align 4
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @internalEntityProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  br label %if.end.35

if.else.28:                                       ; preds = %land.lhs.true, %if.then.23
  %65 = load %struct.ENTITY*, %struct.ENTITY** %entity.addr, align 8
  %open29 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %65, i32 0, i32 8
  store i8 0, i8* %open29, align 1
  %66 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %next30 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %66, i32 0, i32 2
  %67 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next30, align 8
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %68, i32 0, i32 50
  store %struct.open_internal_entity* %67, %struct.open_internal_entity** %m_openInternalEntities31, align 8
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeInternalEntities32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 51
  %70 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities32, align 8
  %71 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %next33 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %71, i32 0, i32 2
  store %struct.open_internal_entity* %70, %struct.open_internal_entity** %next33, align 8
  %72 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %73 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeInternalEntities34 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %73, i32 0, i32 51
  store %struct.open_internal_entity* %72, %struct.open_internal_entity** %m_freeInternalEntities34, align 8
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.28, %if.then.26
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %if.end.22
  %74 = load i32, i32* %result, align 4
  store i32 %74, i32* %retval
  br label %return

return:                                           ; preds = %if.end.36, %if.then.5
  %75 = load i32, i32* %retval
  ret i32 %75
}

; Function Attrs: nounwind uwtable
define internal %struct.XML_cp* @build_model(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca %struct.XML_cp*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %ret = alloca %struct.XML_cp*, align 8
  %cpos = alloca %struct.XML_cp*, align 8
  %str = alloca i8*, align 8
  %allocsize = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  %2 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffCount = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 16
  %3 = load i32, i32* %scaffCount, align 4
  %conv = zext i32 %3 to i64
  %mul = mul i64 %conv, 32
  %4 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %contentStringLen = getelementptr inbounds %struct.DTD, %struct.DTD* %4, i32 0, i32 14
  %5 = load i32, i32* %contentStringLen, align 4
  %conv1 = zext i32 %5 to i64
  %mul2 = mul i64 %conv1, 1
  %add = add i64 %mul, %mul2
  %conv3 = trunc i64 %add to i32
  store i32 %conv3, i32* %allocsize, align 4
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 3
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0
  %7 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %8 = load i32, i32* %allocsize, align 4
  %conv4 = sext i32 %8 to i64
  %call = call i8* %7(i64 %conv4)
  %9 = bitcast i8* %call to %struct.XML_cp*
  store %struct.XML_cp* %9, %struct.XML_cp** %ret, align 8
  %10 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8
  %tobool = icmp ne %struct.XML_cp* %10, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.XML_cp* null, %struct.XML_cp** %retval
  br label %return

if.end:                                           ; preds = %entry
  %11 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffCount5 = getelementptr inbounds %struct.DTD, %struct.DTD* %11, i32 0, i32 16
  %12 = load i32, i32* %scaffCount5, align 4
  %idxprom = zext i32 %12 to i64
  %13 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8
  %arrayidx = getelementptr %struct.XML_cp, %struct.XML_cp* %13, i64 %idxprom
  %14 = bitcast %struct.XML_cp* %arrayidx to i8*
  store i8* %14, i8** %str, align 8
  %15 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8
  %arrayidx6 = getelementptr %struct.XML_cp, %struct.XML_cp* %15, i64 1
  store %struct.XML_cp* %arrayidx6, %struct.XML_cp** %cpos, align 8
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %17 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8
  call void @build_node(%struct.XML_ParserStruct* %16, i32 0, %struct.XML_cp* %17, %struct.XML_cp** %cpos, i8** %str)
  %18 = load %struct.XML_cp*, %struct.XML_cp** %ret, align 8
  store %struct.XML_cp* %18, %struct.XML_cp** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %19 = load %struct.XML_cp*, %struct.XML_cp** %retval
  ret %struct.XML_cp* %19
}

; Function Attrs: nounwind uwtable
define internal i32 @reportProcessingInstruction(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %start, i8* %end) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %target = alloca i8*, align 8
  %data = alloca i8*, align 8
  %tem = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8* %start, i8** %start.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processingInstructionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 14
  %1 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_processingInstructionHandler, align 8
  %tobool = icmp ne void (i8*, i8*, i8*)* %1, null
  br i1 %tobool, label %if.end.3, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 18
  %3 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %tobool1 = icmp ne void (i8*, i8*, i32)* %3, null
  br i1 %tobool1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %6 = load i8*, i8** %start.addr, align 8
  %7 = load i8*, i8** %end.addr, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %4, %struct.encoding* %5, i8* %6, i8* %7)
  br label %if.end

if.end:                                           ; preds = %if.then.2, %if.then
  store i32 1, i32* %retval
  br label %return

if.end.3:                                         ; preds = %entry
  %8 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %8, i32 0, i32 13
  %9 = load i32, i32* %minBytesPerChar, align 4
  %mul = mul i32 %9, 2
  %10 = load i8*, i8** %start.addr, align 8
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr i8, i8* %10, i64 %idx.ext
  store i8* %add.ptr, i8** %start.addr, align 8
  %11 = load i8*, i8** %start.addr, align 8
  %12 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %nameLength = getelementptr inbounds %struct.encoding, %struct.encoding* %12, i32 0, i32 4
  %13 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength, align 8
  %14 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %15 = load i8*, i8** %start.addr, align 8
  %call = call i32 %13(%struct.encoding* %14, i8* %15)
  %idx.ext4 = sext i32 %call to i64
  %add.ptr5 = getelementptr i8, i8* %11, i64 %idx.ext4
  store i8* %add.ptr5, i8** %tem, align 8
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 79
  %17 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %18 = load i8*, i8** %start.addr, align 8
  %19 = load i8*, i8** %tem, align 8
  %call6 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool, %struct.encoding* %17, i8* %18, i8* %19)
  store i8* %call6, i8** %target, align 8
  %20 = load i8*, i8** %target, align 8
  %tobool7 = icmp ne i8* %20, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.3
  store i32 0, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end.3
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 79
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool10, i32 0, i32 3
  %22 = load i8*, i8** %ptr, align 8
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 79
  %start12 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool11, i32 0, i32 4
  store i8* %22, i8** %start12, align 8
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 79
  %25 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %26 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %skipS = getelementptr inbounds %struct.encoding, %struct.encoding* %26, i32 0, i32 5
  %27 = load i8* (%struct.encoding*, i8*)*, i8* (%struct.encoding*, i8*)** %skipS, align 8
  %28 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %29 = load i8*, i8** %tem, align 8
  %call14 = call i8* %27(%struct.encoding* %28, i8* %29)
  %30 = load i8*, i8** %end.addr, align 8
  %31 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar15 = getelementptr inbounds %struct.encoding, %struct.encoding* %31, i32 0, i32 13
  %32 = load i32, i32* %minBytesPerChar15, align 4
  %mul16 = mul i32 %32, 2
  %idx.ext17 = sext i32 %mul16 to i64
  %idx.neg = sub i64 0, %idx.ext17
  %add.ptr18 = getelementptr i8, i8* %30, i64 %idx.neg
  %call19 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool13, %struct.encoding* %25, i8* %call14, i8* %add.ptr18)
  store i8* %call19, i8** %data, align 8
  %33 = load i8*, i8** %data, align 8
  %tobool20 = icmp ne i8* %33, null
  br i1 %tobool20, label %if.end.22, label %if.then.21

if.then.21:                                       ; preds = %if.end.9
  store i32 0, i32* %retval
  br label %return

if.end.22:                                        ; preds = %if.end.9
  %34 = load i8*, i8** %data, align 8
  call void @normalizeLines(i8* %34)
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processingInstructionHandler23 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 14
  %36 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_processingInstructionHandler23, align 8
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 1
  %38 = load i8*, i8** %m_handlerArg, align 8
  %39 = load i8*, i8** %target, align 8
  %40 = load i8*, i8** %data, align 8
  call void %36(i8* %38, i8* %39, i8* %40)
  %41 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %41, i32 0, i32 79
  call void @poolClear(%struct.STRING_POOL* %m_tempPool24)
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.22, %if.then.21, %if.then.8, %if.end
  %42 = load i32, i32* %retval
  ret i32 %42
}

; Function Attrs: nounwind uwtable
define internal i32 @reportComment(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %start, i8* %end) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %data = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8* %start, i8** %start.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_commentHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 15
  %1 = load void (i8*, i8*)*, void (i8*, i8*)** %m_commentHandler, align 8
  %tobool = icmp ne void (i8*, i8*)* %1, null
  br i1 %tobool, label %if.end.3, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 18
  %3 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %tobool1 = icmp ne void (i8*, i8*, i32)* %3, null
  br i1 %tobool1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %5 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %6 = load i8*, i8** %start.addr, align 8
  %7 = load i8*, i8** %end.addr, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %4, %struct.encoding* %5, i8* %6, i8* %7)
  br label %if.end

if.end:                                           ; preds = %if.then.2, %if.then
  store i32 1, i32* %retval
  br label %return

if.end.3:                                         ; preds = %entry
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 79
  %9 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %10 = load i8*, i8** %start.addr, align 8
  %11 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %11, i32 0, i32 13
  %12 = load i32, i32* %minBytesPerChar, align 4
  %mul = mul i32 %12, 4
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr i8, i8* %10, i64 %idx.ext
  %13 = load i8*, i8** %end.addr, align 8
  %14 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar4 = getelementptr inbounds %struct.encoding, %struct.encoding* %14, i32 0, i32 13
  %15 = load i32, i32* %minBytesPerChar4, align 4
  %mul5 = mul i32 %15, 3
  %idx.ext6 = sext i32 %mul5 to i64
  %idx.neg = sub i64 0, %idx.ext6
  %add.ptr7 = getelementptr i8, i8* %13, i64 %idx.neg
  %call = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool, %struct.encoding* %9, i8* %add.ptr, i8* %add.ptr7)
  store i8* %call, i8** %data, align 8
  %16 = load i8*, i8** %data, align 8
  %tobool8 = icmp ne i8* %16, null
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.3
  store i32 0, i32* %retval
  br label %return

if.end.10:                                        ; preds = %if.end.3
  %17 = load i8*, i8** %data, align 8
  call void @normalizeLines(i8* %17)
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_commentHandler11 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 15
  %19 = load void (i8*, i8*)*, void (i8*, i8*)** %m_commentHandler11, align 8
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 1
  %21 = load i8*, i8** %m_handlerArg, align 8
  %22 = load i8*, i8** %data, align 8
  call void %19(i8* %21, i8* %22)
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 79
  call void @poolClear(%struct.STRING_POOL* %m_tempPool12)
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.10, %if.then.9, %if.end
  %24 = load i32, i32* %retval
  ret i32 %24
}

declare i32 @PyExpat_XmlParseXmlDeclNS(i32, %struct.encoding*, i8*, i8*, i8**, i8**, i8**, i8**, %struct.encoding**, i32*) #1

declare i32 @PyExpat_XmlParseXmlDecl(i32, %struct.encoding*, i8*, i8*, i8**, i8**, i8**, i8**, %struct.encoding**, i32*) #1

; Function Attrs: nounwind uwtable
define internal i64 @hash(%struct.XML_ParserStruct* %parser, i8* %s) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %h = alloca i64, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 89
  %1 = load i64, i64* %m_hash_secret_salt, align 8
  store i64 %1, i64* %h, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i8*, i8** %s.addr, align 8
  %3 = load i8, i8* %2, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i64, i64* %h, align 8
  %mul = mul i64 %4, 1000003
  %5 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr i8, i8* %5, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %conv = zext i8 %6 to i64
  %xor = xor i64 %mul, %conv
  store i64 %xor, i64* %h, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %7 = load i64, i64* %h, align 8
  ret i64 %7
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @keyeq(i8* %s1, i8* %s2) #0 {
entry:
  %retval = alloca i8, align 1
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  store i8* %s1, i8** %s1.addr, align 8
  store i8* %s2, i8** %s2.addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %s1.addr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %2 = load i8*, i8** %s2.addr, align 8
  %3 = load i8, i8* %2, align 1
  %conv1 = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, %conv1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %s1.addr, align 8
  %5 = load i8, i8* %4, align 1
  %conv3 = sext i8 %5 to i32
  %cmp4 = icmp eq i32 %conv3, 0
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i8*, i8** %s1.addr, align 8
  %incdec.ptr = getelementptr i8, i8* %6, i32 1
  store i8* %incdec.ptr, i8** %s1.addr, align 8
  %7 = load i8*, i8** %s2.addr, align 8
  %incdec.ptr6 = getelementptr i8, i8* %7, i32 1
  store i8* %incdec.ptr6, i8** %s2.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %8 = load i8, i8* %retval
  ret i8 %8
}

; Function Attrs: nounwind uwtable
define internal i32 @doContent(%struct.XML_ParserStruct* %parser, i32 %startTagLevel, %struct.encoding* %enc, i8* %s, i8* %end, i8** %nextPtr, i8 zeroext %haveMore) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %startTagLevel.addr = alloca i32, align 4
  %enc.addr = alloca %struct.encoding*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %haveMore.addr = alloca i8, align 1
  %dtd = alloca %struct.DTD*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %c = alloca i8, align 1
  %name = alloca i8*, align 8
  %entity = alloca %struct.ENTITY*, align 8
  %ch = alloca i8, align 1
  %result = alloca i32, align 4
  %context = alloca i8*, align 8
  %tag = alloca %struct.tag*, align 8
  %result150 = alloca i32, align 4
  %toPtr = alloca i8*, align 8
  %rawNameEnd = alloca i8*, align 8
  %fromPtr = alloca i8*, align 8
  %bufSize = alloca i32, align 4
  %convLen = alloca i32, align 4
  %temp = alloca i8*, align 8
  %rawName240 = alloca i8*, align 8
  %result244 = alloca i32, align 4
  %bindings245 = alloca %struct.binding*, align 8
  %noElmHandlers = alloca i8, align 1
  %name246 = alloca %struct.TAG_NAME, align 8
  %b = alloca %struct.binding*, align 8
  %len = alloca i32, align 4
  %rawName318 = alloca i8*, align 8
  %tag319 = alloca %struct.tag*, align 8
  %localPart346 = alloca i8*, align 8
  %prefix347 = alloca i8*, align 8
  %uri = alloca i8*, align 8
  %b395 = alloca %struct.binding*, align 8
  %n = alloca i32, align 4
  %buf431 = alloca [4 x i8], align 1
  %c447 = alloca i8, align 1
  %result457 = alloca i32, align 4
  %dataPtr = alloca i8*, align 8
  %charDataHandler = alloca void (i8*, i8*, i32)*, align 8
  %dataPtr526 = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i32 %startTagLevel, i32* %startTagLevel.addr, align 4
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  store i8 %haveMore, i8* %haveMore.addr, align 1
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %cmp = icmp eq %struct.encoding* %2, %4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 47
  store i8** %m_eventPtr, i8*** %eventPP, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 48
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 50
  %8 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %8, i32 0, i32 0
  store i8** %internalEventPtr, i8*** %eventPP, align 8
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 50
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1, align 8
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %10, i32 0, i32 1
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i8*, i8** %s.addr, align 8
  %12 = load i8**, i8*** %eventPP, align 8
  store i8* %11, i8** %12, align 8
  br label %for.cond

for.cond:                                         ; preds = %sw.epilog.572, %if.end
  %13 = load i8*, i8** %s.addr, align 8
  store i8* %13, i8** %next, align 8
  %14 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %14, i32 0, i32 0
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 1
  %15 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %16 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %17 = load i8*, i8** %s.addr, align 8
  %18 = load i8*, i8** %end.addr, align 8
  %call = call i32 %15(%struct.encoding* %16, i8* %17, i8* %18, i8** %next)
  store i32 %call, i32* %tok, align 4
  %19 = load i8*, i8** %next, align 8
  %20 = load i8**, i8*** %eventEndPP, align 8
  store i8* %19, i8** %20, align 8
  %21 = load i32, i32* %tok, align 4
  switch i32 %21, label %sw.default [
    i32 -3, label %sw.bb
    i32 -4, label %sw.bb.18
    i32 0, label %sw.bb.29
    i32 -1, label %sw.bb.30
    i32 -2, label %sw.bb.34
    i32 9, label %sw.bb.38
    i32 2, label %sw.bb.149
    i32 1, label %sw.bb.149
    i32 4, label %sw.bb.239
    i32 3, label %sw.bb.239
    i32 5, label %sw.bb.312
    i32 10, label %sw.bb.422
    i32 12, label %sw.bb.442
    i32 7, label %sw.bb.443
    i32 8, label %sw.bb.456
    i32 -5, label %sw.bb.477
    i32 6, label %sw.bb.518
    i32 11, label %sw.bb.555
    i32 13, label %sw.bb.560
  ]

sw.bb:                                            ; preds = %for.cond
  %22 = load i8, i8* %haveMore.addr, align 1
  %tobool = icmp ne i8 %22, 0
  br i1 %tobool, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %sw.bb
  %23 = load i8*, i8** %s.addr, align 8
  %24 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %23, i8** %24, align 8
  store i32 0, i32* %retval
  br label %return

if.end.3:                                         ; preds = %sw.bb
  %25 = load i8*, i8** %end.addr, align 8
  %26 = load i8**, i8*** %eventEndPP, align 8
  store i8* %25, i8** %26, align 8
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 13
  %28 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler, align 8
  %tobool4 = icmp ne void (i8*, i8*, i32)* %28, null
  br i1 %tobool4, label %if.then.5, label %if.else.7

if.then.5:                                        ; preds = %if.end.3
  store i8 10, i8* %c, align 1
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 13
  %30 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler6, align 8
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 1
  %32 = load i8*, i8** %m_handlerArg, align 8
  call void %30(i8* %32, i8* %c, i32 1)
  br label %if.end.11

if.else.7:                                        ; preds = %if.end.3
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 18
  %34 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %tobool8 = icmp ne void (i8*, i8*, i32)* %34, null
  br i1 %tobool8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.else.7
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %36 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %37 = load i8*, i8** %s.addr, align 8
  %38 = load i8*, i8** %end.addr, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %35, %struct.encoding* %36, i8* %37, i8* %38)
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.9, %if.else.7
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.then.5
  %39 = load i32, i32* %startTagLevel.addr, align 4
  %cmp12 = icmp eq i32 %39, 0
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.11
  store i32 3, i32* %retval
  br label %return

if.end.14:                                        ; preds = %if.end.11
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagLevel = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 53
  %41 = load i32, i32* %m_tagLevel, align 4
  %42 = load i32, i32* %startTagLevel.addr, align 4
  %cmp15 = icmp ne i32 %41, %42
  br i1 %cmp15, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.end.14
  store i32 13, i32* %retval
  br label %return

if.end.17:                                        ; preds = %if.end.14
  %43 = load i8*, i8** %end.addr, align 8
  %44 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %43, i8** %44, align 8
  store i32 0, i32* %retval
  br label %return

sw.bb.18:                                         ; preds = %for.cond
  %45 = load i8, i8* %haveMore.addr, align 1
  %tobool19 = icmp ne i8 %45, 0
  br i1 %tobool19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %sw.bb.18
  %46 = load i8*, i8** %s.addr, align 8
  %47 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %46, i8** %47, align 8
  store i32 0, i32* %retval
  br label %return

if.end.21:                                        ; preds = %sw.bb.18
  %48 = load i32, i32* %startTagLevel.addr, align 4
  %cmp22 = icmp sgt i32 %48, 0
  br i1 %cmp22, label %if.then.23, label %if.end.28

if.then.23:                                       ; preds = %if.end.21
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagLevel24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 53
  %50 = load i32, i32* %m_tagLevel24, align 4
  %51 = load i32, i32* %startTagLevel.addr, align 4
  %cmp25 = icmp ne i32 %50, %51
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.then.23
  store i32 13, i32* %retval
  br label %return

if.end.27:                                        ; preds = %if.then.23
  %52 = load i8*, i8** %s.addr, align 8
  %53 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %52, i8** %53, align 8
  store i32 0, i32* %retval
  br label %return

if.end.28:                                        ; preds = %if.end.21
  store i32 3, i32* %retval
  br label %return

sw.bb.29:                                         ; preds = %for.cond
  %54 = load i8*, i8** %next, align 8
  %55 = load i8**, i8*** %eventPP, align 8
  store i8* %54, i8** %55, align 8
  store i32 4, i32* %retval
  br label %return

sw.bb.30:                                         ; preds = %for.cond
  %56 = load i8, i8* %haveMore.addr, align 1
  %tobool31 = icmp ne i8 %56, 0
  br i1 %tobool31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %sw.bb.30
  %57 = load i8*, i8** %s.addr, align 8
  %58 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %57, i8** %58, align 8
  store i32 0, i32* %retval
  br label %return

if.end.33:                                        ; preds = %sw.bb.30
  store i32 5, i32* %retval
  br label %return

sw.bb.34:                                         ; preds = %for.cond
  %59 = load i8, i8* %haveMore.addr, align 1
  %tobool35 = icmp ne i8 %59, 0
  br i1 %tobool35, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %sw.bb.34
  %60 = load i8*, i8** %s.addr, align 8
  %61 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %60, i8** %61, align 8
  store i32 0, i32* %retval
  br label %return

if.end.37:                                        ; preds = %sw.bb.34
  store i32 6, i32* %retval
  br label %return

sw.bb.38:                                         ; preds = %for.cond
  %62 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %predefinedEntityName = getelementptr inbounds %struct.encoding, %struct.encoding* %62, i32 0, i32 8
  %63 = load i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*)** %predefinedEntityName, align 8
  %64 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %65 = load i8*, i8** %s.addr, align 8
  %66 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %66, i32 0, i32 13
  %67 = load i32, i32* %minBytesPerChar, align 4
  %idx.ext = sext i32 %67 to i64
  %add.ptr = getelementptr i8, i8* %65, i64 %idx.ext
  %68 = load i8*, i8** %next, align 8
  %69 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar39 = getelementptr inbounds %struct.encoding, %struct.encoding* %69, i32 0, i32 13
  %70 = load i32, i32* %minBytesPerChar39, align 4
  %idx.ext40 = sext i32 %70 to i64
  %idx.neg = sub i64 0, %idx.ext40
  %add.ptr41 = getelementptr i8, i8* %68, i64 %idx.neg
  %call42 = call i32 %63(%struct.encoding* %64, i8* %add.ptr, i8* %add.ptr41)
  %conv = trunc i32 %call42 to i8
  store i8 %conv, i8* %ch, align 1
  %71 = load i8, i8* %ch, align 1
  %tobool43 = icmp ne i8 %71, 0
  br i1 %tobool43, label %if.then.44, label %if.end.56

if.then.44:                                       ; preds = %sw.bb.38
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 13
  %73 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler45, align 8
  %tobool46 = icmp ne void (i8*, i8*, i32)* %73, null
  br i1 %tobool46, label %if.then.47, label %if.else.50

if.then.47:                                       ; preds = %if.then.44
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler48 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 13
  %75 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler48, align 8
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg49 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 1
  %77 = load i8*, i8** %m_handlerArg49, align 8
  call void %75(i8* %77, i8* %ch, i32 1)
  br label %if.end.55

if.else.50:                                       ; preds = %if.then.44
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler51 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 18
  %79 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler51, align 8
  %tobool52 = icmp ne void (i8*, i8*, i32)* %79, null
  br i1 %tobool52, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.else.50
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %81 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %82 = load i8*, i8** %s.addr, align 8
  %83 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %80, %struct.encoding* %81, i8* %82, i8* %83)
  br label %if.end.54

if.end.54:                                        ; preds = %if.then.53, %if.else.50
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %if.then.47
  br label %sw.epilog

if.end.56:                                        ; preds = %sw.bb.38
  %84 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %84, i32 0, i32 4
  %85 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %86 = load i8*, i8** %s.addr, align 8
  %87 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar57 = getelementptr inbounds %struct.encoding, %struct.encoding* %87, i32 0, i32 13
  %88 = load i32, i32* %minBytesPerChar57, align 4
  %idx.ext58 = sext i32 %88 to i64
  %add.ptr59 = getelementptr i8, i8* %86, i64 %idx.ext58
  %89 = load i8*, i8** %next, align 8
  %90 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar60 = getelementptr inbounds %struct.encoding, %struct.encoding* %90, i32 0, i32 13
  %91 = load i32, i32* %minBytesPerChar60, align 4
  %idx.ext61 = sext i32 %91 to i64
  %idx.neg62 = sub i64 0, %idx.ext61
  %add.ptr63 = getelementptr i8, i8* %89, i64 %idx.neg62
  %call64 = call i8* @poolStoreString(%struct.STRING_POOL* %pool, %struct.encoding* %85, i8* %add.ptr59, i8* %add.ptr63)
  store i8* %call64, i8** %name, align 8
  %92 = load i8*, i8** %name, align 8
  %tobool65 = icmp ne i8* %92, null
  br i1 %tobool65, label %if.end.67, label %if.then.66

if.then.66:                                       ; preds = %if.end.56
  store i32 1, i32* %retval
  br label %return

if.end.67:                                        ; preds = %if.end.56
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %94 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %94, i32 0, i32 0
  %95 = load i8*, i8** %name, align 8
  %call68 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %93, %struct.HASH_TABLE* %generalEntities, i8* %95, i64 0)
  %96 = bitcast %struct.NAMED* %call68 to %struct.ENTITY*
  store %struct.ENTITY* %96, %struct.ENTITY** %entity, align 8
  %97 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool69 = getelementptr inbounds %struct.DTD, %struct.DTD* %97, i32 0, i32 4
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool69, i32 0, i32 4
  %98 = load i8*, i8** %start, align 8
  %99 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool70 = getelementptr inbounds %struct.DTD, %struct.DTD* %99, i32 0, i32 4
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool70, i32 0, i32 3
  store i8* %98, i8** %ptr, align 8
  %100 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %100, i32 0, i32 7
  %101 = load i8, i8* %hasParamEntityRefs, align 1
  %tobool71 = icmp ne i8 %101, 0
  br i1 %tobool71, label %lor.lhs.false, label %if.then.74

lor.lhs.false:                                    ; preds = %if.end.67
  %102 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %102, i32 0, i32 8
  %103 = load i8, i8* %standalone, align 1
  %conv72 = zext i8 %103 to i32
  %tobool73 = icmp ne i32 %conv72, 0
  br i1 %tobool73, label %if.then.74, label %if.else.82

if.then.74:                                       ; preds = %lor.lhs.false, %if.end.67
  %104 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %tobool75 = icmp ne %struct.ENTITY* %104, null
  br i1 %tobool75, label %if.else.77, label %if.then.76

if.then.76:                                       ; preds = %if.then.74
  store i32 11, i32* %retval
  br label %return

if.else.77:                                       ; preds = %if.then.74
  %105 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %is_internal = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %105, i32 0, i32 10
  %106 = load i8, i8* %is_internal, align 1
  %tobool78 = icmp ne i8 %106, 0
  br i1 %tobool78, label %if.end.80, label %if.then.79

if.then.79:                                       ; preds = %if.else.77
  store i32 24, i32* %retval
  br label %return

if.end.80:                                        ; preds = %if.else.77
  br label %if.end.81

if.end.81:                                        ; preds = %if.end.80
  br label %if.end.96

if.else.82:                                       ; preds = %lor.lhs.false
  %107 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %tobool83 = icmp ne %struct.ENTITY* %107, null
  br i1 %tobool83, label %if.end.95, label %if.then.84

if.then.84:                                       ; preds = %if.else.82
  %108 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_skippedEntityHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %108, i32 0, i32 28
  %109 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler, align 8
  %tobool85 = icmp ne void (i8*, i8*, i32)* %109, null
  br i1 %tobool85, label %if.then.86, label %if.else.89

if.then.86:                                       ; preds = %if.then.84
  %110 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_skippedEntityHandler87 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %110, i32 0, i32 28
  %111 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler87, align 8
  %112 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg88 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %112, i32 0, i32 1
  %113 = load i8*, i8** %m_handlerArg88, align 8
  %114 = load i8*, i8** %name, align 8
  call void %111(i8* %113, i8* %114, i32 0)
  br label %if.end.94

if.else.89:                                       ; preds = %if.then.84
  %115 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler90 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %115, i32 0, i32 18
  %116 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler90, align 8
  %tobool91 = icmp ne void (i8*, i8*, i32)* %116, null
  br i1 %tobool91, label %if.then.92, label %if.end.93

if.then.92:                                       ; preds = %if.else.89
  %117 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %118 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %119 = load i8*, i8** %s.addr, align 8
  %120 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %117, %struct.encoding* %118, i8* %119, i8* %120)
  br label %if.end.93

if.end.93:                                        ; preds = %if.then.92, %if.else.89
  br label %if.end.94

if.end.94:                                        ; preds = %if.end.93, %if.then.86
  br label %sw.epilog

if.end.95:                                        ; preds = %if.else.82
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.95, %if.end.81
  %121 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %121, i32 0, i32 8
  %122 = load i8, i8* %open, align 1
  %tobool97 = icmp ne i8 %122, 0
  br i1 %tobool97, label %if.then.98, label %if.end.99

if.then.98:                                       ; preds = %if.end.96
  store i32 12, i32* %retval
  br label %return

if.end.99:                                        ; preds = %if.end.96
  %123 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %notation = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %123, i32 0, i32 7
  %124 = load i8*, i8** %notation, align 8
  %tobool100 = icmp ne i8* %124, null
  br i1 %tobool100, label %if.then.101, label %if.end.102

if.then.101:                                      ; preds = %if.end.99
  store i32 15, i32* %retval
  br label %return

if.end.102:                                       ; preds = %if.end.99
  %125 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %125, i32 0, i32 1
  %126 = load i8*, i8** %textPtr, align 8
  %tobool103 = icmp ne i8* %126, null
  br i1 %tobool103, label %if.then.104, label %if.else.125

if.then.104:                                      ; preds = %if.end.102
  %127 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultExpandInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %127, i32 0, i32 52
  %128 = load i8, i8* %m_defaultExpandInternalEntities, align 1
  %tobool105 = icmp ne i8 %128, 0
  br i1 %tobool105, label %if.end.119, label %if.then.106

if.then.106:                                      ; preds = %if.then.104
  %129 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_skippedEntityHandler107 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %129, i32 0, i32 28
  %130 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler107, align 8
  %tobool108 = icmp ne void (i8*, i8*, i32)* %130, null
  br i1 %tobool108, label %if.then.109, label %if.else.113

if.then.109:                                      ; preds = %if.then.106
  %131 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_skippedEntityHandler110 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %131, i32 0, i32 28
  %132 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_skippedEntityHandler110, align 8
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg111 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 1
  %134 = load i8*, i8** %m_handlerArg111, align 8
  %135 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %name112 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %135, i32 0, i32 0
  %136 = load i8*, i8** %name112, align 8
  call void %132(i8* %134, i8* %136, i32 0)
  br label %if.end.118

if.else.113:                                      ; preds = %if.then.106
  %137 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler114 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %137, i32 0, i32 18
  %138 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler114, align 8
  %tobool115 = icmp ne void (i8*, i8*, i32)* %138, null
  br i1 %tobool115, label %if.then.116, label %if.end.117

if.then.116:                                      ; preds = %if.else.113
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %140 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %141 = load i8*, i8** %s.addr, align 8
  %142 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %139, %struct.encoding* %140, i8* %141, i8* %142)
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.116, %if.else.113
  br label %if.end.118

if.end.118:                                       ; preds = %if.end.117, %if.then.109
  br label %sw.epilog

if.end.119:                                       ; preds = %if.then.104
  %143 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %144 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %call120 = call i32 @processInternalEntity(%struct.XML_ParserStruct* %143, %struct.ENTITY* %144, i8 zeroext 0)
  store i32 %call120, i32* %result, align 4
  %145 = load i32, i32* %result, align 4
  %cmp121 = icmp ne i32 %145, 0
  br i1 %cmp121, label %if.then.123, label %if.end.124

if.then.123:                                      ; preds = %if.end.119
  %146 = load i32, i32* %result, align 4
  store i32 %146, i32* %retval
  br label %return

if.end.124:                                       ; preds = %if.end.119
  br label %if.end.148

if.else.125:                                      ; preds = %if.end.102
  %147 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %147, i32 0, i32 26
  %148 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler, align 8
  %tobool126 = icmp ne i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)* %148, null
  br i1 %tobool126, label %if.then.127, label %if.else.142

if.then.127:                                      ; preds = %if.else.125
  %149 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open128 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %149, i32 0, i32 8
  store i8 1, i8* %open128, align 1
  %150 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call129 = call i8* @getContext(%struct.XML_ParserStruct* %150)
  store i8* %call129, i8** %context, align 8
  %151 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open130 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %151, i32 0, i32 8
  store i8 0, i8* %open130, align 1
  %152 = load i8*, i8** %context, align 8
  %tobool131 = icmp ne i8* %152, null
  br i1 %tobool131, label %if.end.133, label %if.then.132

if.then.132:                                      ; preds = %if.then.127
  store i32 1, i32* %retval
  br label %return

if.end.133:                                       ; preds = %if.then.127
  %153 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandler134 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %153, i32 0, i32 26
  %154 = load i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8*, i8*)** %m_externalEntityRefHandler134, align 8
  %155 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_externalEntityRefHandlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %155, i32 0, i32 27
  %156 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_externalEntityRefHandlerArg, align 8
  %157 = load i8*, i8** %context, align 8
  %158 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %base = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %158, i32 0, i32 5
  %159 = load i8*, i8** %base, align 8
  %160 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %systemId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %160, i32 0, i32 4
  %161 = load i8*, i8** %systemId, align 8
  %162 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %publicId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %162, i32 0, i32 6
  %163 = load i8*, i8** %publicId, align 8
  %call135 = call i32 %154(%struct.XML_ParserStruct* %156, i8* %157, i8* %159, i8* %161, i8* %163)
  %tobool136 = icmp ne i32 %call135, 0
  br i1 %tobool136, label %if.end.138, label %if.then.137

if.then.137:                                      ; preds = %if.end.133
  store i32 21, i32* %retval
  br label %return

if.end.138:                                       ; preds = %if.end.133
  %164 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %164, i32 0, i32 79
  %start139 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool, i32 0, i32 4
  %165 = load i8*, i8** %start139, align 8
  %166 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool140 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %166, i32 0, i32 79
  %ptr141 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool140, i32 0, i32 3
  store i8* %165, i8** %ptr141, align 8
  br label %if.end.147

if.else.142:                                      ; preds = %if.else.125
  %167 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler143 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %167, i32 0, i32 18
  %168 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler143, align 8
  %tobool144 = icmp ne void (i8*, i8*, i32)* %168, null
  br i1 %tobool144, label %if.then.145, label %if.end.146

if.then.145:                                      ; preds = %if.else.142
  %169 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %170 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %171 = load i8*, i8** %s.addr, align 8
  %172 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %169, %struct.encoding* %170, i8* %171, i8* %172)
  br label %if.end.146

if.end.146:                                       ; preds = %if.then.145, %if.else.142
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.146, %if.end.138
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.147, %if.end.124
  br label %sw.epilog

sw.bb.149:                                        ; preds = %for.cond, %for.cond
  %173 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeTagList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %173, i32 0, i32 68
  %174 = load %struct.tag*, %struct.tag** %m_freeTagList, align 8
  %tobool151 = icmp ne %struct.tag* %174, null
  br i1 %tobool151, label %if.then.152, label %if.else.156

if.then.152:                                      ; preds = %sw.bb.149
  %175 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeTagList153 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %175, i32 0, i32 68
  %176 = load %struct.tag*, %struct.tag** %m_freeTagList153, align 8
  store %struct.tag* %176, %struct.tag** %tag, align 8
  %177 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeTagList154 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %177, i32 0, i32 68
  %178 = load %struct.tag*, %struct.tag** %m_freeTagList154, align 8
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %178, i32 0, i32 0
  %179 = load %struct.tag*, %struct.tag** %parent, align 8
  %180 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeTagList155 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %180, i32 0, i32 68
  store %struct.tag* %179, %struct.tag** %m_freeTagList155, align 8
  br label %if.end.171

if.else.156:                                      ; preds = %sw.bb.149
  %181 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %181, i32 0, i32 3
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 0
  %182 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %call157 = call i8* %182(i64 88)
  %183 = bitcast i8* %call157 to %struct.tag*
  store %struct.tag* %183, %struct.tag** %tag, align 8
  %184 = load %struct.tag*, %struct.tag** %tag, align 8
  %tobool158 = icmp ne %struct.tag* %184, null
  br i1 %tobool158, label %if.end.160, label %if.then.159

if.then.159:                                      ; preds = %if.else.156
  store i32 1, i32* %retval
  br label %return

if.end.160:                                       ; preds = %if.else.156
  %185 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem161 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %185, i32 0, i32 3
  %malloc_fcn162 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem161, i32 0, i32 0
  %186 = load i8* (i64)*, i8* (i64)** %malloc_fcn162, align 8
  %call163 = call i8* %186(i64 32)
  %187 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf = getelementptr inbounds %struct.tag, %struct.tag* %187, i32 0, i32 4
  store i8* %call163, i8** %buf, align 8
  %188 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf164 = getelementptr inbounds %struct.tag, %struct.tag* %188, i32 0, i32 4
  %189 = load i8*, i8** %buf164, align 8
  %tobool165 = icmp ne i8* %189, null
  br i1 %tobool165, label %if.end.168, label %if.then.166

if.then.166:                                      ; preds = %if.end.160
  %190 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem167 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %190, i32 0, i32 3
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem167, i32 0, i32 2
  %191 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %192 = load %struct.tag*, %struct.tag** %tag, align 8
  %193 = bitcast %struct.tag* %192 to i8*
  call void %191(i8* %193)
  store i32 1, i32* %retval
  br label %return

if.end.168:                                       ; preds = %if.end.160
  %194 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf169 = getelementptr inbounds %struct.tag, %struct.tag* %194, i32 0, i32 4
  %195 = load i8*, i8** %buf169, align 8
  %add.ptr170 = getelementptr i8, i8* %195, i64 32
  %196 = load %struct.tag*, %struct.tag** %tag, align 8
  %bufEnd = getelementptr inbounds %struct.tag, %struct.tag* %196, i32 0, i32 5
  store i8* %add.ptr170, i8** %bufEnd, align 8
  br label %if.end.171

if.end.171:                                       ; preds = %if.end.168, %if.then.152
  %197 = load %struct.tag*, %struct.tag** %tag, align 8
  %bindings = getelementptr inbounds %struct.tag, %struct.tag* %197, i32 0, i32 6
  store %struct.binding* null, %struct.binding** %bindings, align 8
  %198 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %198, i32 0, i32 67
  %199 = load %struct.tag*, %struct.tag** %m_tagStack, align 8
  %200 = load %struct.tag*, %struct.tag** %tag, align 8
  %parent172 = getelementptr inbounds %struct.tag, %struct.tag* %200, i32 0, i32 0
  store %struct.tag* %199, %struct.tag** %parent172, align 8
  %201 = load %struct.tag*, %struct.tag** %tag, align 8
  %202 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagStack173 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %202, i32 0, i32 67
  store %struct.tag* %201, %struct.tag** %m_tagStack173, align 8
  %203 = load %struct.tag*, %struct.tag** %tag, align 8
  %name174 = getelementptr inbounds %struct.tag, %struct.tag* %203, i32 0, i32 3
  %localPart = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name174, i32 0, i32 1
  store i8* null, i8** %localPart, align 8
  %204 = load %struct.tag*, %struct.tag** %tag, align 8
  %name175 = getelementptr inbounds %struct.tag, %struct.tag* %204, i32 0, i32 3
  %prefix = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name175, i32 0, i32 2
  store i8* null, i8** %prefix, align 8
  %205 = load i8*, i8** %s.addr, align 8
  %206 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar176 = getelementptr inbounds %struct.encoding, %struct.encoding* %206, i32 0, i32 13
  %207 = load i32, i32* %minBytesPerChar176, align 4
  %idx.ext177 = sext i32 %207 to i64
  %add.ptr178 = getelementptr i8, i8* %205, i64 %idx.ext177
  %208 = load %struct.tag*, %struct.tag** %tag, align 8
  %rawName = getelementptr inbounds %struct.tag, %struct.tag* %208, i32 0, i32 1
  store i8* %add.ptr178, i8** %rawName, align 8
  %209 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %nameLength = getelementptr inbounds %struct.encoding, %struct.encoding* %209, i32 0, i32 4
  %210 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength, align 8
  %211 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %212 = load %struct.tag*, %struct.tag** %tag, align 8
  %rawName179 = getelementptr inbounds %struct.tag, %struct.tag* %212, i32 0, i32 1
  %213 = load i8*, i8** %rawName179, align 8
  %call180 = call i32 %210(%struct.encoding* %211, i8* %213)
  %214 = load %struct.tag*, %struct.tag** %tag, align 8
  %rawNameLength = getelementptr inbounds %struct.tag, %struct.tag* %214, i32 0, i32 2
  store i32 %call180, i32* %rawNameLength, align 4
  %215 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagLevel181 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %215, i32 0, i32 53
  %216 = load i32, i32* %m_tagLevel181, align 4
  %inc = add i32 %216, 1
  store i32 %inc, i32* %m_tagLevel181, align 4
  %217 = load %struct.tag*, %struct.tag** %tag, align 8
  %rawName182 = getelementptr inbounds %struct.tag, %struct.tag* %217, i32 0, i32 1
  %218 = load i8*, i8** %rawName182, align 8
  %219 = load %struct.tag*, %struct.tag** %tag, align 8
  %rawNameLength183 = getelementptr inbounds %struct.tag, %struct.tag* %219, i32 0, i32 2
  %220 = load i32, i32* %rawNameLength183, align 4
  %idx.ext184 = sext i32 %220 to i64
  %add.ptr185 = getelementptr i8, i8* %218, i64 %idx.ext184
  store i8* %add.ptr185, i8** %rawNameEnd, align 8
  %221 = load %struct.tag*, %struct.tag** %tag, align 8
  %rawName186 = getelementptr inbounds %struct.tag, %struct.tag* %221, i32 0, i32 1
  %222 = load i8*, i8** %rawName186, align 8
  store i8* %222, i8** %fromPtr, align 8
  %223 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf187 = getelementptr inbounds %struct.tag, %struct.tag* %223, i32 0, i32 4
  %224 = load i8*, i8** %buf187, align 8
  store i8* %224, i8** %toPtr, align 8
  br label %for.cond.188

for.cond.188:                                     ; preds = %if.end.211, %if.end.171
  %225 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %225, i32 0, i32 11
  %226 = load void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8
  %227 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %228 = load i8*, i8** %rawNameEnd, align 8
  %229 = load %struct.tag*, %struct.tag** %tag, align 8
  %bufEnd189 = getelementptr inbounds %struct.tag, %struct.tag* %229, i32 0, i32 5
  %230 = load i8*, i8** %bufEnd189, align 8
  %add.ptr190 = getelementptr i8, i8* %230, i64 -1
  call void %226(%struct.encoding* %227, i8** %fromPtr, i8* %228, i8** %toPtr, i8* %add.ptr190)
  %231 = load i8*, i8** %toPtr, align 8
  %232 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf191 = getelementptr inbounds %struct.tag, %struct.tag* %232, i32 0, i32 4
  %233 = load i8*, i8** %buf191, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %231 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %233 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv192 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv192, i32* %convLen, align 4
  %234 = load i8*, i8** %fromPtr, align 8
  %235 = load i8*, i8** %rawNameEnd, align 8
  %cmp193 = icmp eq i8* %234, %235
  br i1 %cmp193, label %if.then.195, label %if.end.197

if.then.195:                                      ; preds = %for.cond.188
  %236 = load i32, i32* %convLen, align 4
  %237 = load %struct.tag*, %struct.tag** %tag, align 8
  %name196 = getelementptr inbounds %struct.tag, %struct.tag* %237, i32 0, i32 3
  %strLen = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name196, i32 0, i32 3
  store i32 %236, i32* %strLen, align 4
  br label %for.end

if.end.197:                                       ; preds = %for.cond.188
  %238 = load %struct.tag*, %struct.tag** %tag, align 8
  %bufEnd198 = getelementptr inbounds %struct.tag, %struct.tag* %238, i32 0, i32 5
  %239 = load i8*, i8** %bufEnd198, align 8
  %240 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf199 = getelementptr inbounds %struct.tag, %struct.tag* %240, i32 0, i32 4
  %241 = load i8*, i8** %buf199, align 8
  %sub.ptr.lhs.cast200 = ptrtoint i8* %239 to i64
  %sub.ptr.rhs.cast201 = ptrtoint i8* %241 to i64
  %sub.ptr.sub202 = sub i64 %sub.ptr.lhs.cast200, %sub.ptr.rhs.cast201
  %conv203 = trunc i64 %sub.ptr.sub202 to i32
  %shl = shl i32 %conv203, 1
  store i32 %shl, i32* %bufSize, align 4
  %242 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem204 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %242, i32 0, i32 3
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem204, i32 0, i32 1
  %243 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8
  %244 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf205 = getelementptr inbounds %struct.tag, %struct.tag* %244, i32 0, i32 4
  %245 = load i8*, i8** %buf205, align 8
  %246 = load i32, i32* %bufSize, align 4
  %conv206 = sext i32 %246 to i64
  %call207 = call i8* %243(i8* %245, i64 %conv206)
  store i8* %call207, i8** %temp, align 8
  %247 = load i8*, i8** %temp, align 8
  %cmp208 = icmp eq i8* %247, null
  br i1 %cmp208, label %if.then.210, label %if.end.211

if.then.210:                                      ; preds = %if.end.197
  store i32 1, i32* %retval
  br label %return

if.end.211:                                       ; preds = %if.end.197
  %248 = load i8*, i8** %temp, align 8
  %249 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf212 = getelementptr inbounds %struct.tag, %struct.tag* %249, i32 0, i32 4
  store i8* %248, i8** %buf212, align 8
  %250 = load i8*, i8** %temp, align 8
  %251 = load i32, i32* %bufSize, align 4
  %idx.ext213 = sext i32 %251 to i64
  %add.ptr214 = getelementptr i8, i8* %250, i64 %idx.ext213
  %252 = load %struct.tag*, %struct.tag** %tag, align 8
  %bufEnd215 = getelementptr inbounds %struct.tag, %struct.tag* %252, i32 0, i32 5
  store i8* %add.ptr214, i8** %bufEnd215, align 8
  %253 = load i8*, i8** %temp, align 8
  %254 = load i32, i32* %convLen, align 4
  %idx.ext216 = sext i32 %254 to i64
  %add.ptr217 = getelementptr i8, i8* %253, i64 %idx.ext216
  store i8* %add.ptr217, i8** %toPtr, align 8
  br label %for.cond.188

for.end:                                          ; preds = %if.then.195
  %255 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf218 = getelementptr inbounds %struct.tag, %struct.tag* %255, i32 0, i32 4
  %256 = load i8*, i8** %buf218, align 8
  %257 = load %struct.tag*, %struct.tag** %tag, align 8
  %name219 = getelementptr inbounds %struct.tag, %struct.tag* %257, i32 0, i32 3
  %str = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name219, i32 0, i32 0
  store i8* %256, i8** %str, align 8
  %258 = load i8*, i8** %toPtr, align 8
  store i8 0, i8* %258, align 1
  %259 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %260 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %261 = load i8*, i8** %s.addr, align 8
  %262 = load %struct.tag*, %struct.tag** %tag, align 8
  %name220 = getelementptr inbounds %struct.tag, %struct.tag* %262, i32 0, i32 3
  %263 = load %struct.tag*, %struct.tag** %tag, align 8
  %bindings221 = getelementptr inbounds %struct.tag, %struct.tag* %263, i32 0, i32 6
  %call222 = call i32 @storeAtts(%struct.XML_ParserStruct* %259, %struct.encoding* %260, i8* %261, %struct.TAG_NAME* %name220, %struct.binding** %bindings221)
  store i32 %call222, i32* %result150, align 4
  %264 = load i32, i32* %result150, align 4
  %tobool223 = icmp ne i32 %264, 0
  br i1 %tobool223, label %if.then.224, label %if.end.225

if.then.224:                                      ; preds = %for.end
  %265 = load i32, i32* %result150, align 4
  store i32 %265, i32* %retval
  br label %return

if.end.225:                                       ; preds = %for.end
  %266 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %266, i32 0, i32 11
  %267 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler, align 8
  %tobool226 = icmp ne void (i8*, i8*, i8**)* %267, null
  br i1 %tobool226, label %if.then.227, label %if.else.232

if.then.227:                                      ; preds = %if.end.225
  %268 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startElementHandler228 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %268, i32 0, i32 11
  %269 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler228, align 8
  %270 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg229 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %270, i32 0, i32 1
  %271 = load i8*, i8** %m_handlerArg229, align 8
  %272 = load %struct.tag*, %struct.tag** %tag, align 8
  %name230 = getelementptr inbounds %struct.tag, %struct.tag* %272, i32 0, i32 3
  %str231 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name230, i32 0, i32 0
  %273 = load i8*, i8** %str231, align 8
  %274 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %274, i32 0, i32 74
  %275 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts, align 8
  %276 = bitcast %struct.ATTRIBUTE* %275 to i8**
  call void %269(i8* %271, i8* %273, i8** %276)
  br label %if.end.237

if.else.232:                                      ; preds = %if.end.225
  %277 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler233 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %277, i32 0, i32 18
  %278 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler233, align 8
  %tobool234 = icmp ne void (i8*, i8*, i32)* %278, null
  br i1 %tobool234, label %if.then.235, label %if.end.236

if.then.235:                                      ; preds = %if.else.232
  %279 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %280 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %281 = load i8*, i8** %s.addr, align 8
  %282 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %279, %struct.encoding* %280, i8* %281, i8* %282)
  br label %if.end.236

if.end.236:                                       ; preds = %if.then.235, %if.else.232
  br label %if.end.237

if.end.237:                                       ; preds = %if.end.236, %if.then.227
  %283 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool238 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %283, i32 0, i32 79
  call void @poolClear(%struct.STRING_POOL* %m_tempPool238)
  br label %sw.epilog

sw.bb.239:                                        ; preds = %for.cond, %for.cond
  %284 = load i8*, i8** %s.addr, align 8
  %285 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar241 = getelementptr inbounds %struct.encoding, %struct.encoding* %285, i32 0, i32 13
  %286 = load i32, i32* %minBytesPerChar241, align 4
  %idx.ext242 = sext i32 %286 to i64
  %add.ptr243 = getelementptr i8, i8* %284, i64 %idx.ext242
  store i8* %add.ptr243, i8** %rawName240, align 8
  store %struct.binding* null, %struct.binding** %bindings245, align 8
  store i8 1, i8* %noElmHandlers, align 1
  %287 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool247 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %287, i32 0, i32 79
  %288 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %289 = load i8*, i8** %rawName240, align 8
  %290 = load i8*, i8** %rawName240, align 8
  %291 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %nameLength248 = getelementptr inbounds %struct.encoding, %struct.encoding* %291, i32 0, i32 4
  %292 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength248, align 8
  %293 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %294 = load i8*, i8** %rawName240, align 8
  %call249 = call i32 %292(%struct.encoding* %293, i8* %294)
  %idx.ext250 = sext i32 %call249 to i64
  %add.ptr251 = getelementptr i8, i8* %290, i64 %idx.ext250
  %call252 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool247, %struct.encoding* %288, i8* %289, i8* %add.ptr251)
  %str253 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name246, i32 0, i32 0
  store i8* %call252, i8** %str253, align 8
  %str254 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name246, i32 0, i32 0
  %295 = load i8*, i8** %str254, align 8
  %tobool255 = icmp ne i8* %295, null
  br i1 %tobool255, label %if.end.257, label %if.then.256

if.then.256:                                      ; preds = %sw.bb.239
  store i32 1, i32* %retval
  br label %return

if.end.257:                                       ; preds = %sw.bb.239
  %296 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool258 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %296, i32 0, i32 79
  %ptr259 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool258, i32 0, i32 3
  %297 = load i8*, i8** %ptr259, align 8
  %298 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool260 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %298, i32 0, i32 79
  %start261 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool260, i32 0, i32 4
  store i8* %297, i8** %start261, align 8
  %299 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %300 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %301 = load i8*, i8** %s.addr, align 8
  %call262 = call i32 @storeAtts(%struct.XML_ParserStruct* %299, %struct.encoding* %300, i8* %301, %struct.TAG_NAME* %name246, %struct.binding** %bindings245)
  store i32 %call262, i32* %result244, align 4
  %302 = load i32, i32* %result244, align 4
  %tobool263 = icmp ne i32 %302, 0
  br i1 %tobool263, label %if.then.264, label %if.end.265

if.then.264:                                      ; preds = %if.end.257
  %303 = load i32, i32* %result244, align 4
  store i32 %303, i32* %retval
  br label %return

if.end.265:                                       ; preds = %if.end.257
  %304 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool266 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %304, i32 0, i32 79
  %ptr267 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool266, i32 0, i32 3
  %305 = load i8*, i8** %ptr267, align 8
  %306 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool268 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %306, i32 0, i32 79
  %start269 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool268, i32 0, i32 4
  store i8* %305, i8** %start269, align 8
  %307 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startElementHandler270 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %307, i32 0, i32 11
  %308 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler270, align 8
  %tobool271 = icmp ne void (i8*, i8*, i8**)* %308, null
  br i1 %tobool271, label %if.then.272, label %if.end.277

if.then.272:                                      ; preds = %if.end.265
  %309 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startElementHandler273 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %309, i32 0, i32 11
  %310 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler273, align 8
  %311 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg274 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %311, i32 0, i32 1
  %312 = load i8*, i8** %m_handlerArg274, align 8
  %str275 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name246, i32 0, i32 0
  %313 = load i8*, i8** %str275, align 8
  %314 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts276 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %314, i32 0, i32 74
  %315 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts276, align 8
  %316 = bitcast %struct.ATTRIBUTE* %315 to i8**
  call void %310(i8* %312, i8* %313, i8** %316)
  store i8 0, i8* %noElmHandlers, align 1
  br label %if.end.277

if.end.277:                                       ; preds = %if.then.272, %if.end.265
  %317 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endElementHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %317, i32 0, i32 12
  %318 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler, align 8
  %tobool278 = icmp ne void (i8*, i8*)* %318, null
  br i1 %tobool278, label %if.then.279, label %if.end.287

if.then.279:                                      ; preds = %if.end.277
  %319 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startElementHandler280 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %319, i32 0, i32 11
  %320 = load void (i8*, i8*, i8**)*, void (i8*, i8*, i8**)** %m_startElementHandler280, align 8
  %tobool281 = icmp ne void (i8*, i8*, i8**)* %320, null
  br i1 %tobool281, label %if.then.282, label %if.end.283

if.then.282:                                      ; preds = %if.then.279
  %321 = load i8**, i8*** %eventEndPP, align 8
  %322 = load i8*, i8** %321, align 8
  %323 = load i8**, i8*** %eventPP, align 8
  store i8* %322, i8** %323, align 8
  br label %if.end.283

if.end.283:                                       ; preds = %if.then.282, %if.then.279
  %324 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endElementHandler284 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %324, i32 0, i32 12
  %325 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler284, align 8
  %326 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg285 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %326, i32 0, i32 1
  %327 = load i8*, i8** %m_handlerArg285, align 8
  %str286 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name246, i32 0, i32 0
  %328 = load i8*, i8** %str286, align 8
  call void %325(i8* %327, i8* %328)
  store i8 0, i8* %noElmHandlers, align 1
  br label %if.end.287

if.end.287:                                       ; preds = %if.end.283, %if.end.277
  %329 = load i8, i8* %noElmHandlers, align 1
  %conv288 = zext i8 %329 to i32
  %tobool289 = icmp ne i32 %conv288, 0
  br i1 %tobool289, label %land.lhs.true, label %if.end.293

land.lhs.true:                                    ; preds = %if.end.287
  %330 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler290 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %330, i32 0, i32 18
  %331 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler290, align 8
  %tobool291 = icmp ne void (i8*, i8*, i32)* %331, null
  br i1 %tobool291, label %if.then.292, label %if.end.293

if.then.292:                                      ; preds = %land.lhs.true
  %332 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %333 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %334 = load i8*, i8** %s.addr, align 8
  %335 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %332, %struct.encoding* %333, i8* %334, i8* %335)
  br label %if.end.293

if.end.293:                                       ; preds = %if.then.292, %land.lhs.true, %if.end.287
  %336 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool294 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %336, i32 0, i32 79
  call void @poolClear(%struct.STRING_POOL* %m_tempPool294)
  br label %while.cond

while.cond:                                       ; preds = %if.end.302, %if.end.293
  %337 = load %struct.binding*, %struct.binding** %bindings245, align 8
  %tobool295 = icmp ne %struct.binding* %337, null
  br i1 %tobool295, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %338 = load %struct.binding*, %struct.binding** %bindings245, align 8
  store %struct.binding* %338, %struct.binding** %b, align 8
  %339 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %339, i32 0, i32 24
  %340 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler, align 8
  %tobool296 = icmp ne void (i8*, i8*)* %340, null
  br i1 %tobool296, label %if.then.297, label %if.end.302

if.then.297:                                      ; preds = %while.body
  %341 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endNamespaceDeclHandler298 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %341, i32 0, i32 24
  %342 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler298, align 8
  %343 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg299 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %343, i32 0, i32 1
  %344 = load i8*, i8** %m_handlerArg299, align 8
  %345 = load %struct.binding*, %struct.binding** %b, align 8
  %prefix300 = getelementptr inbounds %struct.binding, %struct.binding* %345, i32 0, i32 0
  %346 = load %struct.prefix*, %struct.prefix** %prefix300, align 8
  %name301 = getelementptr inbounds %struct.prefix, %struct.prefix* %346, i32 0, i32 0
  %347 = load i8*, i8** %name301, align 8
  call void %342(i8* %344, i8* %347)
  br label %if.end.302

if.end.302:                                       ; preds = %if.then.297, %while.body
  %348 = load %struct.binding*, %struct.binding** %bindings245, align 8
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %348, i32 0, i32 1
  %349 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8
  store %struct.binding* %349, %struct.binding** %bindings245, align 8
  %350 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %350, i32 0, i32 70
  %351 = load %struct.binding*, %struct.binding** %m_freeBindingList, align 8
  %352 = load %struct.binding*, %struct.binding** %b, align 8
  %nextTagBinding303 = getelementptr inbounds %struct.binding, %struct.binding* %352, i32 0, i32 1
  store %struct.binding* %351, %struct.binding** %nextTagBinding303, align 8
  %353 = load %struct.binding*, %struct.binding** %b, align 8
  %354 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeBindingList304 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %354, i32 0, i32 70
  store %struct.binding* %353, %struct.binding** %m_freeBindingList304, align 8
  %355 = load %struct.binding*, %struct.binding** %b, align 8
  %prevPrefixBinding = getelementptr inbounds %struct.binding, %struct.binding* %355, i32 0, i32 2
  %356 = load %struct.binding*, %struct.binding** %prevPrefixBinding, align 8
  %357 = load %struct.binding*, %struct.binding** %b, align 8
  %prefix305 = getelementptr inbounds %struct.binding, %struct.binding* %357, i32 0, i32 0
  %358 = load %struct.prefix*, %struct.prefix** %prefix305, align 8
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %358, i32 0, i32 1
  store %struct.binding* %356, %struct.binding** %binding, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %359 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagLevel306 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %359, i32 0, i32 53
  %360 = load i32, i32* %m_tagLevel306, align 4
  %cmp307 = icmp eq i32 %360, 0
  br i1 %cmp307, label %if.then.309, label %if.end.311

if.then.309:                                      ; preds = %while.end
  %361 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %362 = load i8*, i8** %next, align 8
  %363 = load i8*, i8** %end.addr, align 8
  %364 = load i8**, i8*** %nextPtr.addr, align 8
  %call310 = call i32 @epilogProcessor(%struct.XML_ParserStruct* %361, i8* %362, i8* %363, i8** %364)
  store i32 %call310, i32* %retval
  br label %return

if.end.311:                                       ; preds = %while.end
  br label %sw.epilog

sw.bb.312:                                        ; preds = %for.cond
  %365 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagLevel313 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %365, i32 0, i32 53
  %366 = load i32, i32* %m_tagLevel313, align 4
  %367 = load i32, i32* %startTagLevel.addr, align 4
  %cmp314 = icmp eq i32 %366, %367
  br i1 %cmp314, label %if.then.316, label %if.else.317

if.then.316:                                      ; preds = %sw.bb.312
  store i32 13, i32* %retval
  br label %return

if.else.317:                                      ; preds = %sw.bb.312
  %368 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagStack320 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %368, i32 0, i32 67
  %369 = load %struct.tag*, %struct.tag** %m_tagStack320, align 8
  store %struct.tag* %369, %struct.tag** %tag319, align 8
  %370 = load %struct.tag*, %struct.tag** %tag319, align 8
  %parent321 = getelementptr inbounds %struct.tag, %struct.tag* %370, i32 0, i32 0
  %371 = load %struct.tag*, %struct.tag** %parent321, align 8
  %372 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagStack322 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %372, i32 0, i32 67
  store %struct.tag* %371, %struct.tag** %m_tagStack322, align 8
  %373 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeTagList323 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %373, i32 0, i32 68
  %374 = load %struct.tag*, %struct.tag** %m_freeTagList323, align 8
  %375 = load %struct.tag*, %struct.tag** %tag319, align 8
  %parent324 = getelementptr inbounds %struct.tag, %struct.tag* %375, i32 0, i32 0
  store %struct.tag* %374, %struct.tag** %parent324, align 8
  %376 = load %struct.tag*, %struct.tag** %tag319, align 8
  %377 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeTagList325 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %377, i32 0, i32 68
  store %struct.tag* %376, %struct.tag** %m_freeTagList325, align 8
  %378 = load i8*, i8** %s.addr, align 8
  %379 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar326 = getelementptr inbounds %struct.encoding, %struct.encoding* %379, i32 0, i32 13
  %380 = load i32, i32* %minBytesPerChar326, align 4
  %mul = mul i32 %380, 2
  %idx.ext327 = sext i32 %mul to i64
  %add.ptr328 = getelementptr i8, i8* %378, i64 %idx.ext327
  store i8* %add.ptr328, i8** %rawName318, align 8
  %381 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %nameLength329 = getelementptr inbounds %struct.encoding, %struct.encoding* %381, i32 0, i32 4
  %382 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength329, align 8
  %383 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %384 = load i8*, i8** %rawName318, align 8
  %call330 = call i32 %382(%struct.encoding* %383, i8* %384)
  store i32 %call330, i32* %len, align 4
  %385 = load i32, i32* %len, align 4
  %386 = load %struct.tag*, %struct.tag** %tag319, align 8
  %rawNameLength331 = getelementptr inbounds %struct.tag, %struct.tag* %386, i32 0, i32 2
  %387 = load i32, i32* %rawNameLength331, align 4
  %cmp332 = icmp ne i32 %385, %387
  br i1 %cmp332, label %if.then.340, label %lor.lhs.false.334

lor.lhs.false.334:                                ; preds = %if.else.317
  %388 = load %struct.tag*, %struct.tag** %tag319, align 8
  %rawName335 = getelementptr inbounds %struct.tag, %struct.tag* %388, i32 0, i32 1
  %389 = load i8*, i8** %rawName335, align 8
  %390 = load i8*, i8** %rawName318, align 8
  %391 = load i32, i32* %len, align 4
  %conv336 = sext i32 %391 to i64
  %call337 = call i32 @memcmp(i8* %389, i8* %390, i64 %conv336) #5
  %cmp338 = icmp ne i32 %call337, 0
  br i1 %cmp338, label %if.then.340, label %if.end.341

if.then.340:                                      ; preds = %lor.lhs.false.334, %if.else.317
  %392 = load i8*, i8** %rawName318, align 8
  %393 = load i8**, i8*** %eventPP, align 8
  store i8* %392, i8** %393, align 8
  store i32 7, i32* %retval
  br label %return

if.end.341:                                       ; preds = %lor.lhs.false.334
  %394 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagLevel342 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %394, i32 0, i32 53
  %395 = load i32, i32* %m_tagLevel342, align 4
  %dec = add i32 %395, -1
  store i32 %dec, i32* %m_tagLevel342, align 4
  %396 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endElementHandler343 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %396, i32 0, i32 12
  %397 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler343, align 8
  %tobool344 = icmp ne void (i8*, i8*)* %397, null
  br i1 %tobool344, label %if.then.345, label %if.else.385

if.then.345:                                      ; preds = %if.end.341
  %398 = load %struct.tag*, %struct.tag** %tag319, align 8
  %name348 = getelementptr inbounds %struct.tag, %struct.tag* %398, i32 0, i32 3
  %localPart349 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name348, i32 0, i32 1
  %399 = load i8*, i8** %localPart349, align 8
  store i8* %399, i8** %localPart346, align 8
  %400 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %400, i32 0, i32 38
  %401 = load i8, i8* %m_ns, align 1
  %conv350 = zext i8 %401 to i32
  %tobool351 = icmp ne i32 %conv350, 0
  br i1 %tobool351, label %land.lhs.true.352, label %if.end.380

land.lhs.true.352:                                ; preds = %if.then.345
  %402 = load i8*, i8** %localPart346, align 8
  %tobool353 = icmp ne i8* %402, null
  br i1 %tobool353, label %if.then.354, label %if.end.380

if.then.354:                                      ; preds = %land.lhs.true.352
  %403 = load %struct.tag*, %struct.tag** %tag319, align 8
  %name355 = getelementptr inbounds %struct.tag, %struct.tag* %403, i32 0, i32 3
  %str356 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name355, i32 0, i32 0
  %404 = load i8*, i8** %str356, align 8
  %405 = load %struct.tag*, %struct.tag** %tag319, align 8
  %name357 = getelementptr inbounds %struct.tag, %struct.tag* %405, i32 0, i32 3
  %uriLen = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name357, i32 0, i32 4
  %406 = load i32, i32* %uriLen, align 4
  %idx.ext358 = sext i32 %406 to i64
  %add.ptr359 = getelementptr i8, i8* %404, i64 %idx.ext358
  store i8* %add.ptr359, i8** %uri, align 8
  br label %while.cond.360

while.cond.360:                                   ; preds = %while.body.362, %if.then.354
  %407 = load i8*, i8** %localPart346, align 8
  %408 = load i8, i8* %407, align 1
  %tobool361 = icmp ne i8 %408, 0
  br i1 %tobool361, label %while.body.362, label %while.end.364

while.body.362:                                   ; preds = %while.cond.360
  %409 = load i8*, i8** %localPart346, align 8
  %incdec.ptr = getelementptr i8, i8* %409, i32 1
  store i8* %incdec.ptr, i8** %localPart346, align 8
  %410 = load i8, i8* %409, align 1
  %411 = load i8*, i8** %uri, align 8
  %incdec.ptr363 = getelementptr i8, i8* %411, i32 1
  store i8* %incdec.ptr363, i8** %uri, align 8
  store i8 %410, i8* %411, align 1
  br label %while.cond.360

while.end.364:                                    ; preds = %while.cond.360
  %412 = load %struct.tag*, %struct.tag** %tag319, align 8
  %name365 = getelementptr inbounds %struct.tag, %struct.tag* %412, i32 0, i32 3
  %prefix366 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name365, i32 0, i32 2
  %413 = load i8*, i8** %prefix366, align 8
  store i8* %413, i8** %prefix347, align 8
  %414 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %414, i32 0, i32 39
  %415 = load i8, i8* %m_ns_triplets, align 1
  %conv367 = zext i8 %415 to i32
  %tobool368 = icmp ne i32 %conv367, 0
  br i1 %tobool368, label %land.lhs.true.369, label %if.end.379

land.lhs.true.369:                                ; preds = %while.end.364
  %416 = load i8*, i8** %prefix347, align 8
  %tobool370 = icmp ne i8* %416, null
  br i1 %tobool370, label %if.then.371, label %if.end.379

if.then.371:                                      ; preds = %land.lhs.true.369
  %417 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %417, i32 0, i32 83
  %418 = load i8, i8* %m_namespaceSeparator, align 1
  %419 = load i8*, i8** %uri, align 8
  %incdec.ptr372 = getelementptr i8, i8* %419, i32 1
  store i8* %incdec.ptr372, i8** %uri, align 8
  store i8 %418, i8* %419, align 1
  br label %while.cond.373

while.cond.373:                                   ; preds = %while.body.375, %if.then.371
  %420 = load i8*, i8** %prefix347, align 8
  %421 = load i8, i8* %420, align 1
  %tobool374 = icmp ne i8 %421, 0
  br i1 %tobool374, label %while.body.375, label %while.end.378

while.body.375:                                   ; preds = %while.cond.373
  %422 = load i8*, i8** %prefix347, align 8
  %incdec.ptr376 = getelementptr i8, i8* %422, i32 1
  store i8* %incdec.ptr376, i8** %prefix347, align 8
  %423 = load i8, i8* %422, align 1
  %424 = load i8*, i8** %uri, align 8
  %incdec.ptr377 = getelementptr i8, i8* %424, i32 1
  store i8* %incdec.ptr377, i8** %uri, align 8
  store i8 %423, i8* %424, align 1
  br label %while.cond.373

while.end.378:                                    ; preds = %while.cond.373
  br label %if.end.379

if.end.379:                                       ; preds = %while.end.378, %land.lhs.true.369, %while.end.364
  %425 = load i8*, i8** %uri, align 8
  store i8 0, i8* %425, align 1
  br label %if.end.380

if.end.380:                                       ; preds = %if.end.379, %land.lhs.true.352, %if.then.345
  %426 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endElementHandler381 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %426, i32 0, i32 12
  %427 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endElementHandler381, align 8
  %428 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg382 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %428, i32 0, i32 1
  %429 = load i8*, i8** %m_handlerArg382, align 8
  %430 = load %struct.tag*, %struct.tag** %tag319, align 8
  %name383 = getelementptr inbounds %struct.tag, %struct.tag* %430, i32 0, i32 3
  %str384 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name383, i32 0, i32 0
  %431 = load i8*, i8** %str384, align 8
  call void %427(i8* %429, i8* %431)
  br label %if.end.390

if.else.385:                                      ; preds = %if.end.341
  %432 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler386 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %432, i32 0, i32 18
  %433 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler386, align 8
  %tobool387 = icmp ne void (i8*, i8*, i32)* %433, null
  br i1 %tobool387, label %if.then.388, label %if.end.389

if.then.388:                                      ; preds = %if.else.385
  %434 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %435 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %436 = load i8*, i8** %s.addr, align 8
  %437 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %434, %struct.encoding* %435, i8* %436, i8* %437)
  br label %if.end.389

if.end.389:                                       ; preds = %if.then.388, %if.else.385
  br label %if.end.390

if.end.390:                                       ; preds = %if.end.389, %if.end.380
  br label %while.cond.391

while.cond.391:                                   ; preds = %if.end.404, %if.end.390
  %438 = load %struct.tag*, %struct.tag** %tag319, align 8
  %bindings392 = getelementptr inbounds %struct.tag, %struct.tag* %438, i32 0, i32 6
  %439 = load %struct.binding*, %struct.binding** %bindings392, align 8
  %tobool393 = icmp ne %struct.binding* %439, null
  br i1 %tobool393, label %while.body.394, label %while.end.414

while.body.394:                                   ; preds = %while.cond.391
  %440 = load %struct.tag*, %struct.tag** %tag319, align 8
  %bindings396 = getelementptr inbounds %struct.tag, %struct.tag* %440, i32 0, i32 6
  %441 = load %struct.binding*, %struct.binding** %bindings396, align 8
  store %struct.binding* %441, %struct.binding** %b395, align 8
  %442 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endNamespaceDeclHandler397 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %442, i32 0, i32 24
  %443 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler397, align 8
  %tobool398 = icmp ne void (i8*, i8*)* %443, null
  br i1 %tobool398, label %if.then.399, label %if.end.404

if.then.399:                                      ; preds = %while.body.394
  %444 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endNamespaceDeclHandler400 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %444, i32 0, i32 24
  %445 = load void (i8*, i8*)*, void (i8*, i8*)** %m_endNamespaceDeclHandler400, align 8
  %446 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg401 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %446, i32 0, i32 1
  %447 = load i8*, i8** %m_handlerArg401, align 8
  %448 = load %struct.binding*, %struct.binding** %b395, align 8
  %prefix402 = getelementptr inbounds %struct.binding, %struct.binding* %448, i32 0, i32 0
  %449 = load %struct.prefix*, %struct.prefix** %prefix402, align 8
  %name403 = getelementptr inbounds %struct.prefix, %struct.prefix* %449, i32 0, i32 0
  %450 = load i8*, i8** %name403, align 8
  call void %445(i8* %447, i8* %450)
  br label %if.end.404

if.end.404:                                       ; preds = %if.then.399, %while.body.394
  %451 = load %struct.tag*, %struct.tag** %tag319, align 8
  %bindings405 = getelementptr inbounds %struct.tag, %struct.tag* %451, i32 0, i32 6
  %452 = load %struct.binding*, %struct.binding** %bindings405, align 8
  %nextTagBinding406 = getelementptr inbounds %struct.binding, %struct.binding* %452, i32 0, i32 1
  %453 = load %struct.binding*, %struct.binding** %nextTagBinding406, align 8
  %454 = load %struct.tag*, %struct.tag** %tag319, align 8
  %bindings407 = getelementptr inbounds %struct.tag, %struct.tag* %454, i32 0, i32 6
  store %struct.binding* %453, %struct.binding** %bindings407, align 8
  %455 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeBindingList408 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %455, i32 0, i32 70
  %456 = load %struct.binding*, %struct.binding** %m_freeBindingList408, align 8
  %457 = load %struct.binding*, %struct.binding** %b395, align 8
  %nextTagBinding409 = getelementptr inbounds %struct.binding, %struct.binding* %457, i32 0, i32 1
  store %struct.binding* %456, %struct.binding** %nextTagBinding409, align 8
  %458 = load %struct.binding*, %struct.binding** %b395, align 8
  %459 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeBindingList410 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %459, i32 0, i32 70
  store %struct.binding* %458, %struct.binding** %m_freeBindingList410, align 8
  %460 = load %struct.binding*, %struct.binding** %b395, align 8
  %prevPrefixBinding411 = getelementptr inbounds %struct.binding, %struct.binding* %460, i32 0, i32 2
  %461 = load %struct.binding*, %struct.binding** %prevPrefixBinding411, align 8
  %462 = load %struct.binding*, %struct.binding** %b395, align 8
  %prefix412 = getelementptr inbounds %struct.binding, %struct.binding* %462, i32 0, i32 0
  %463 = load %struct.prefix*, %struct.prefix** %prefix412, align 8
  %binding413 = getelementptr inbounds %struct.prefix, %struct.prefix* %463, i32 0, i32 1
  store %struct.binding* %461, %struct.binding** %binding413, align 8
  br label %while.cond.391

while.end.414:                                    ; preds = %while.cond.391
  %464 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagLevel415 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %464, i32 0, i32 53
  %465 = load i32, i32* %m_tagLevel415, align 4
  %cmp416 = icmp eq i32 %465, 0
  br i1 %cmp416, label %if.then.418, label %if.end.420

if.then.418:                                      ; preds = %while.end.414
  %466 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %467 = load i8*, i8** %next, align 8
  %468 = load i8*, i8** %end.addr, align 8
  %469 = load i8**, i8*** %nextPtr.addr, align 8
  %call419 = call i32 @epilogProcessor(%struct.XML_ParserStruct* %466, i8* %467, i8* %468, i8** %469)
  store i32 %call419, i32* %retval
  br label %return

if.end.420:                                       ; preds = %while.end.414
  br label %if.end.421

if.end.421:                                       ; preds = %if.end.420
  br label %sw.epilog

sw.bb.422:                                        ; preds = %for.cond
  %470 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %charRefNumber = getelementptr inbounds %struct.encoding, %struct.encoding* %470, i32 0, i32 7
  %471 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %charRefNumber, align 8
  %472 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %473 = load i8*, i8** %s.addr, align 8
  %call423 = call i32 %471(%struct.encoding* %472, i8* %473)
  store i32 %call423, i32* %n, align 4
  %474 = load i32, i32* %n, align 4
  %cmp424 = icmp slt i32 %474, 0
  br i1 %cmp424, label %if.then.426, label %if.end.427

if.then.426:                                      ; preds = %sw.bb.422
  store i32 14, i32* %retval
  br label %return

if.end.427:                                       ; preds = %sw.bb.422
  %475 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler428 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %475, i32 0, i32 13
  %476 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler428, align 8
  %tobool429 = icmp ne void (i8*, i8*, i32)* %476, null
  br i1 %tobool429, label %if.then.430, label %if.else.436

if.then.430:                                      ; preds = %if.end.427
  %477 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler432 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %477, i32 0, i32 13
  %478 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler432, align 8
  %479 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg433 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %479, i32 0, i32 1
  %480 = load i8*, i8** %m_handlerArg433, align 8
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf431, i32 0, i32 0
  %481 = load i32, i32* %n, align 4
  %arraydecay434 = getelementptr inbounds [4 x i8], [4 x i8]* %buf431, i32 0, i32 0
  %call435 = call i32 @PyExpat_XmlUtf8Encode(i32 %481, i8* %arraydecay434)
  call void %478(i8* %480, i8* %arraydecay, i32 %call435)
  br label %if.end.441

if.else.436:                                      ; preds = %if.end.427
  %482 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler437 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %482, i32 0, i32 18
  %483 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler437, align 8
  %tobool438 = icmp ne void (i8*, i8*, i32)* %483, null
  br i1 %tobool438, label %if.then.439, label %if.end.440

if.then.439:                                      ; preds = %if.else.436
  %484 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %485 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %486 = load i8*, i8** %s.addr, align 8
  %487 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %484, %struct.encoding* %485, i8* %486, i8* %487)
  br label %if.end.440

if.end.440:                                       ; preds = %if.then.439, %if.else.436
  br label %if.end.441

if.end.441:                                       ; preds = %if.end.440, %if.then.430
  br label %sw.epilog

sw.bb.442:                                        ; preds = %for.cond
  store i32 17, i32* %retval
  br label %return

sw.bb.443:                                        ; preds = %for.cond
  %488 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler444 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %488, i32 0, i32 13
  %489 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler444, align 8
  %tobool445 = icmp ne void (i8*, i8*, i32)* %489, null
  br i1 %tobool445, label %if.then.446, label %if.else.450

if.then.446:                                      ; preds = %sw.bb.443
  store i8 10, i8* %c447, align 1
  %490 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler448 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %490, i32 0, i32 13
  %491 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler448, align 8
  %492 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg449 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %492, i32 0, i32 1
  %493 = load i8*, i8** %m_handlerArg449, align 8
  call void %491(i8* %493, i8* %c447, i32 1)
  br label %if.end.455

if.else.450:                                      ; preds = %sw.bb.443
  %494 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler451 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %494, i32 0, i32 18
  %495 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler451, align 8
  %tobool452 = icmp ne void (i8*, i8*, i32)* %495, null
  br i1 %tobool452, label %if.then.453, label %if.end.454

if.then.453:                                      ; preds = %if.else.450
  %496 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %497 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %498 = load i8*, i8** %s.addr, align 8
  %499 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %496, %struct.encoding* %497, i8* %498, i8* %499)
  br label %if.end.454

if.end.454:                                       ; preds = %if.then.453, %if.else.450
  br label %if.end.455

if.end.455:                                       ; preds = %if.end.454, %if.then.446
  br label %sw.epilog

sw.bb.456:                                        ; preds = %for.cond
  %500 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %500, i32 0, i32 16
  %501 = load void (i8*)*, void (i8*)** %m_startCdataSectionHandler, align 8
  %tobool458 = icmp ne void (i8*)* %501, null
  br i1 %tobool458, label %if.then.459, label %if.else.462

if.then.459:                                      ; preds = %sw.bb.456
  %502 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startCdataSectionHandler460 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %502, i32 0, i32 16
  %503 = load void (i8*)*, void (i8*)** %m_startCdataSectionHandler460, align 8
  %504 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg461 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %504, i32 0, i32 1
  %505 = load i8*, i8** %m_handlerArg461, align 8
  call void %503(i8* %505)
  br label %if.end.467

if.else.462:                                      ; preds = %sw.bb.456
  %506 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler463 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %506, i32 0, i32 18
  %507 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler463, align 8
  %tobool464 = icmp ne void (i8*, i8*, i32)* %507, null
  br i1 %tobool464, label %if.then.465, label %if.end.466

if.then.465:                                      ; preds = %if.else.462
  %508 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %509 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %510 = load i8*, i8** %s.addr, align 8
  %511 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %508, %struct.encoding* %509, i8* %510, i8* %511)
  br label %if.end.466

if.end.466:                                       ; preds = %if.then.465, %if.else.462
  br label %if.end.467

if.end.467:                                       ; preds = %if.end.466, %if.then.459
  %512 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %513 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %514 = load i8*, i8** %end.addr, align 8
  %515 = load i8**, i8*** %nextPtr.addr, align 8
  %516 = load i8, i8* %haveMore.addr, align 1
  %call468 = call i32 @doCdataSection(%struct.XML_ParserStruct* %512, %struct.encoding* %513, i8** %next, i8* %514, i8** %515, i8 zeroext %516)
  store i32 %call468, i32* %result457, align 4
  %517 = load i32, i32* %result457, align 4
  %cmp469 = icmp ne i32 %517, 0
  br i1 %cmp469, label %if.then.471, label %if.else.472

if.then.471:                                      ; preds = %if.end.467
  %518 = load i32, i32* %result457, align 4
  store i32 %518, i32* %retval
  br label %return

if.else.472:                                      ; preds = %if.end.467
  %519 = load i8*, i8** %next, align 8
  %tobool473 = icmp ne i8* %519, null
  br i1 %tobool473, label %if.end.475, label %if.then.474

if.then.474:                                      ; preds = %if.else.472
  %520 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %520, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @cdataSectionProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %521 = load i32, i32* %result457, align 4
  store i32 %521, i32* %retval
  br label %return

if.end.475:                                       ; preds = %if.else.472
  br label %if.end.476

if.end.476:                                       ; preds = %if.end.475
  br label %sw.epilog

sw.bb.477:                                        ; preds = %for.cond
  %522 = load i8, i8* %haveMore.addr, align 1
  %tobool478 = icmp ne i8 %522, 0
  br i1 %tobool478, label %if.then.479, label %if.end.480

if.then.479:                                      ; preds = %sw.bb.477
  %523 = load i8*, i8** %s.addr, align 8
  %524 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %523, i8** %524, align 8
  store i32 0, i32* %retval
  br label %return

if.end.480:                                       ; preds = %sw.bb.477
  %525 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler481 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %525, i32 0, i32 13
  %526 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler481, align 8
  %tobool482 = icmp ne void (i8*, i8*, i32)* %526, null
  br i1 %tobool482, label %if.then.483, label %if.else.503

if.then.483:                                      ; preds = %if.end.480
  %527 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %isUtf8 = getelementptr inbounds %struct.encoding, %struct.encoding* %527, i32 0, i32 14
  %528 = load i8, i8* %isUtf8, align 1
  %tobool484 = icmp ne i8 %528, 0
  br i1 %tobool484, label %if.else.495, label %if.then.485

if.then.485:                                      ; preds = %if.then.483
  %529 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %529, i32 0, i32 9
  %530 = load i8*, i8** %m_dataBuf, align 8
  store i8* %530, i8** %dataPtr, align 8
  %531 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %utf8Convert486 = getelementptr inbounds %struct.encoding, %struct.encoding* %531, i32 0, i32 11
  %532 = load void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert486, align 8
  %533 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %534 = load i8*, i8** %end.addr, align 8
  %535 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBufEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %535, i32 0, i32 10
  %536 = load i8*, i8** %m_dataBufEnd, align 8
  call void %532(%struct.encoding* %533, i8** %s.addr, i8* %534, i8** %dataPtr, i8* %536)
  %537 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler487 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %537, i32 0, i32 13
  %538 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler487, align 8
  %539 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg488 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %539, i32 0, i32 1
  %540 = load i8*, i8** %m_handlerArg488, align 8
  %541 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf489 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %541, i32 0, i32 9
  %542 = load i8*, i8** %m_dataBuf489, align 8
  %543 = load i8*, i8** %dataPtr, align 8
  %544 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf490 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %544, i32 0, i32 9
  %545 = load i8*, i8** %m_dataBuf490, align 8
  %sub.ptr.lhs.cast491 = ptrtoint i8* %543 to i64
  %sub.ptr.rhs.cast492 = ptrtoint i8* %545 to i64
  %sub.ptr.sub493 = sub i64 %sub.ptr.lhs.cast491, %sub.ptr.rhs.cast492
  %conv494 = trunc i64 %sub.ptr.sub493 to i32
  call void %538(i8* %540, i8* %542, i32 %conv494)
  br label %if.end.502

if.else.495:                                      ; preds = %if.then.483
  %546 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler496 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %546, i32 0, i32 13
  %547 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler496, align 8
  %548 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg497 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %548, i32 0, i32 1
  %549 = load i8*, i8** %m_handlerArg497, align 8
  %550 = load i8*, i8** %s.addr, align 8
  %551 = load i8*, i8** %end.addr, align 8
  %552 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast498 = ptrtoint i8* %551 to i64
  %sub.ptr.rhs.cast499 = ptrtoint i8* %552 to i64
  %sub.ptr.sub500 = sub i64 %sub.ptr.lhs.cast498, %sub.ptr.rhs.cast499
  %conv501 = trunc i64 %sub.ptr.sub500 to i32
  call void %547(i8* %549, i8* %550, i32 %conv501)
  br label %if.end.502

if.end.502:                                       ; preds = %if.else.495, %if.then.485
  br label %if.end.508

if.else.503:                                      ; preds = %if.end.480
  %553 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler504 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %553, i32 0, i32 18
  %554 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler504, align 8
  %tobool505 = icmp ne void (i8*, i8*, i32)* %554, null
  br i1 %tobool505, label %if.then.506, label %if.end.507

if.then.506:                                      ; preds = %if.else.503
  %555 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %556 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %557 = load i8*, i8** %s.addr, align 8
  %558 = load i8*, i8** %end.addr, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %555, %struct.encoding* %556, i8* %557, i8* %558)
  br label %if.end.507

if.end.507:                                       ; preds = %if.then.506, %if.else.503
  br label %if.end.508

if.end.508:                                       ; preds = %if.end.507, %if.end.502
  %559 = load i32, i32* %startTagLevel.addr, align 4
  %cmp509 = icmp eq i32 %559, 0
  br i1 %cmp509, label %if.then.511, label %if.end.512

if.then.511:                                      ; preds = %if.end.508
  %560 = load i8*, i8** %end.addr, align 8
  %561 = load i8**, i8*** %eventPP, align 8
  store i8* %560, i8** %561, align 8
  store i32 3, i32* %retval
  br label %return

if.end.512:                                       ; preds = %if.end.508
  %562 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagLevel513 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %562, i32 0, i32 53
  %563 = load i32, i32* %m_tagLevel513, align 4
  %564 = load i32, i32* %startTagLevel.addr, align 4
  %cmp514 = icmp ne i32 %563, %564
  br i1 %cmp514, label %if.then.516, label %if.end.517

if.then.516:                                      ; preds = %if.end.512
  %565 = load i8*, i8** %end.addr, align 8
  %566 = load i8**, i8*** %eventPP, align 8
  store i8* %565, i8** %566, align 8
  store i32 13, i32* %retval
  br label %return

if.end.517:                                       ; preds = %if.end.512
  %567 = load i8*, i8** %end.addr, align 8
  %568 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %567, i8** %568, align 8
  store i32 0, i32* %retval
  br label %return

sw.bb.518:                                        ; preds = %for.cond
  %569 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler519 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %569, i32 0, i32 13
  %570 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler519, align 8
  store void (i8*, i8*, i32)* %570, void (i8*, i8*, i32)** %charDataHandler, align 8
  %571 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8
  %tobool520 = icmp ne void (i8*, i8*, i32)* %571, null
  br i1 %tobool520, label %if.then.521, label %if.else.549

if.then.521:                                      ; preds = %sw.bb.518
  %572 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %isUtf8522 = getelementptr inbounds %struct.encoding, %struct.encoding* %572, i32 0, i32 14
  %573 = load i8, i8* %isUtf8522, align 1
  %tobool523 = icmp ne i8 %573, 0
  br i1 %tobool523, label %if.else.542, label %if.then.524

if.then.524:                                      ; preds = %if.then.521
  br label %for.cond.525

for.cond.525:                                     ; preds = %if.end.540, %if.then.524
  %574 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf527 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %574, i32 0, i32 9
  %575 = load i8*, i8** %m_dataBuf527, align 8
  store i8* %575, i8** %dataPtr526, align 8
  %576 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %utf8Convert528 = getelementptr inbounds %struct.encoding, %struct.encoding* %576, i32 0, i32 11
  %577 = load void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert528, align 8
  %578 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %579 = load i8*, i8** %next, align 8
  %580 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBufEnd529 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %580, i32 0, i32 10
  %581 = load i8*, i8** %m_dataBufEnd529, align 8
  call void %577(%struct.encoding* %578, i8** %s.addr, i8* %579, i8** %dataPtr526, i8* %581)
  %582 = load i8*, i8** %s.addr, align 8
  %583 = load i8**, i8*** %eventEndPP, align 8
  store i8* %582, i8** %583, align 8
  %584 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8
  %585 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg530 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %585, i32 0, i32 1
  %586 = load i8*, i8** %m_handlerArg530, align 8
  %587 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf531 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %587, i32 0, i32 9
  %588 = load i8*, i8** %m_dataBuf531, align 8
  %589 = load i8*, i8** %dataPtr526, align 8
  %590 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf532 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %590, i32 0, i32 9
  %591 = load i8*, i8** %m_dataBuf532, align 8
  %sub.ptr.lhs.cast533 = ptrtoint i8* %589 to i64
  %sub.ptr.rhs.cast534 = ptrtoint i8* %591 to i64
  %sub.ptr.sub535 = sub i64 %sub.ptr.lhs.cast533, %sub.ptr.rhs.cast534
  %conv536 = trunc i64 %sub.ptr.sub535 to i32
  call void %584(i8* %586, i8* %588, i32 %conv536)
  %592 = load i8*, i8** %s.addr, align 8
  %593 = load i8*, i8** %next, align 8
  %cmp537 = icmp eq i8* %592, %593
  br i1 %cmp537, label %if.then.539, label %if.end.540

if.then.539:                                      ; preds = %for.cond.525
  br label %for.end.541

if.end.540:                                       ; preds = %for.cond.525
  %594 = load i8*, i8** %s.addr, align 8
  %595 = load i8**, i8*** %eventPP, align 8
  store i8* %594, i8** %595, align 8
  br label %for.cond.525

for.end.541:                                      ; preds = %if.then.539
  br label %if.end.548

if.else.542:                                      ; preds = %if.then.521
  %596 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8
  %597 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg543 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %597, i32 0, i32 1
  %598 = load i8*, i8** %m_handlerArg543, align 8
  %599 = load i8*, i8** %s.addr, align 8
  %600 = load i8*, i8** %next, align 8
  %601 = load i8*, i8** %s.addr, align 8
  %sub.ptr.lhs.cast544 = ptrtoint i8* %600 to i64
  %sub.ptr.rhs.cast545 = ptrtoint i8* %601 to i64
  %sub.ptr.sub546 = sub i64 %sub.ptr.lhs.cast544, %sub.ptr.rhs.cast545
  %conv547 = trunc i64 %sub.ptr.sub546 to i32
  call void %596(i8* %598, i8* %599, i32 %conv547)
  br label %if.end.548

if.end.548:                                       ; preds = %if.else.542, %for.end.541
  br label %if.end.554

if.else.549:                                      ; preds = %sw.bb.518
  %602 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler550 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %602, i32 0, i32 18
  %603 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler550, align 8
  %tobool551 = icmp ne void (i8*, i8*, i32)* %603, null
  br i1 %tobool551, label %if.then.552, label %if.end.553

if.then.552:                                      ; preds = %if.else.549
  %604 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %605 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %606 = load i8*, i8** %s.addr, align 8
  %607 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %604, %struct.encoding* %605, i8* %606, i8* %607)
  br label %if.end.553

if.end.553:                                       ; preds = %if.then.552, %if.else.549
  br label %if.end.554

if.end.554:                                       ; preds = %if.end.553, %if.end.548
  br label %sw.epilog

sw.bb.555:                                        ; preds = %for.cond
  %608 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %609 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %610 = load i8*, i8** %s.addr, align 8
  %611 = load i8*, i8** %next, align 8
  %call556 = call i32 @reportProcessingInstruction(%struct.XML_ParserStruct* %608, %struct.encoding* %609, i8* %610, i8* %611)
  %tobool557 = icmp ne i32 %call556, 0
  br i1 %tobool557, label %if.end.559, label %if.then.558

if.then.558:                                      ; preds = %sw.bb.555
  store i32 1, i32* %retval
  br label %return

if.end.559:                                       ; preds = %sw.bb.555
  br label %sw.epilog

sw.bb.560:                                        ; preds = %for.cond
  %612 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %613 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %614 = load i8*, i8** %s.addr, align 8
  %615 = load i8*, i8** %next, align 8
  %call561 = call i32 @reportComment(%struct.XML_ParserStruct* %612, %struct.encoding* %613, i8* %614, i8* %615)
  %tobool562 = icmp ne i32 %call561, 0
  br i1 %tobool562, label %if.end.564, label %if.then.563

if.then.563:                                      ; preds = %sw.bb.560
  store i32 1, i32* %retval
  br label %return

if.end.564:                                       ; preds = %sw.bb.560
  br label %sw.epilog

sw.default:                                       ; preds = %for.cond
  %616 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler565 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %616, i32 0, i32 18
  %617 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler565, align 8
  %tobool566 = icmp ne void (i8*, i8*, i32)* %617, null
  br i1 %tobool566, label %if.then.567, label %if.end.568

if.then.567:                                      ; preds = %sw.default
  %618 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %619 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %620 = load i8*, i8** %s.addr, align 8
  %621 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %618, %struct.encoding* %619, i8* %620, i8* %621)
  br label %if.end.568

if.end.568:                                       ; preds = %if.then.567, %sw.default
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.568, %if.end.564, %if.end.559, %if.end.554, %if.end.476, %if.end.455, %if.end.441, %if.end.421, %if.end.311, %if.end.237, %if.end.148, %if.end.118, %if.end.94, %if.end.55
  %622 = load i8*, i8** %next, align 8
  store i8* %622, i8** %s.addr, align 8
  %623 = load i8**, i8*** %eventPP, align 8
  store i8* %622, i8** %623, align 8
  %624 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %624, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %625 = load i32, i32* %parsing, align 4
  switch i32 %625, label %sw.default.571 [
    i32 3, label %sw.bb.569
    i32 2, label %sw.bb.570
  ]

sw.bb.569:                                        ; preds = %sw.epilog
  %626 = load i8*, i8** %next, align 8
  %627 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %626, i8** %627, align 8
  store i32 0, i32* %retval
  br label %return

sw.bb.570:                                        ; preds = %sw.epilog
  store i32 35, i32* %retval
  br label %return

sw.default.571:                                   ; preds = %sw.epilog
  br label %sw.epilog.572

sw.epilog.572:                                    ; preds = %sw.default.571
  br label %for.cond

return:                                           ; preds = %sw.bb.570, %sw.bb.569, %if.then.563, %if.then.558, %if.end.517, %if.then.516, %if.then.511, %if.then.479, %if.then.474, %if.then.471, %sw.bb.442, %if.then.426, %if.then.418, %if.then.340, %if.then.316, %if.then.309, %if.then.264, %if.then.256, %if.then.224, %if.then.210, %if.then.166, %if.then.159, %if.then.137, %if.then.132, %if.then.123, %if.then.101, %if.then.98, %if.then.79, %if.then.76, %if.then.66, %if.end.37, %if.then.36, %if.end.33, %if.then.32, %sw.bb.29, %if.end.28, %if.end.27, %if.then.26, %if.then.20, %if.end.17, %if.then.16, %if.then.13, %if.then.2
  %628 = load i32, i32* %retval
  ret i32 %628
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @storeRawNames(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i8, align 1
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %tag = alloca %struct.tag*, align 8
  %bufSize = alloca i32, align 4
  %nameLen = alloca i32, align 4
  %rawNameBuf = alloca i8*, align 8
  %temp = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 67
  %1 = load %struct.tag*, %struct.tag** %m_tagStack, align 8
  store %struct.tag* %1, %struct.tag** %tag, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end.46, %entry
  %2 = load %struct.tag*, %struct.tag** %tag, align 8
  %tobool = icmp ne %struct.tag* %2, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load %struct.tag*, %struct.tag** %tag, align 8
  %name = getelementptr inbounds %struct.tag, %struct.tag* %3, i32 0, i32 3
  %strLen = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name, i32 0, i32 3
  %4 = load i32, i32* %strLen, align 4
  %add = add i32 %4, 1
  %conv = sext i32 %add to i64
  %mul = mul i64 1, %conv
  %conv1 = trunc i64 %mul to i32
  store i32 %conv1, i32* %nameLen, align 4
  %5 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf = getelementptr inbounds %struct.tag, %struct.tag* %5, i32 0, i32 4
  %6 = load i8*, i8** %buf, align 8
  %7 = load i32, i32* %nameLen, align 4
  %idx.ext = sext i32 %7 to i64
  %add.ptr = getelementptr i8, i8* %6, i64 %idx.ext
  store i8* %add.ptr, i8** %rawNameBuf, align 8
  %8 = load %struct.tag*, %struct.tag** %tag, align 8
  %rawName = getelementptr inbounds %struct.tag, %struct.tag* %8, i32 0, i32 1
  %9 = load i8*, i8** %rawName, align 8
  %10 = load i8*, i8** %rawNameBuf, align 8
  %cmp = icmp eq i8* %9, %10
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  br label %while.end

if.end:                                           ; preds = %while.body
  %11 = load i32, i32* %nameLen, align 4
  %conv3 = sext i32 %11 to i64
  %12 = load %struct.tag*, %struct.tag** %tag, align 8
  %rawNameLength = getelementptr inbounds %struct.tag, %struct.tag* %12, i32 0, i32 2
  %13 = load i32, i32* %rawNameLength, align 4
  %conv4 = sext i32 %13 to i64
  %add5 = add i64 %conv4, 0
  %add6 = add i64 %conv3, %add5
  %conv7 = trunc i64 %add6 to i32
  store i32 %conv7, i32* %bufSize, align 4
  %14 = load i32, i32* %bufSize, align 4
  %conv8 = sext i32 %14 to i64
  %15 = load %struct.tag*, %struct.tag** %tag, align 8
  %bufEnd = getelementptr inbounds %struct.tag, %struct.tag* %15, i32 0, i32 5
  %16 = load i8*, i8** %bufEnd, align 8
  %17 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf9 = getelementptr inbounds %struct.tag, %struct.tag* %17, i32 0, i32 4
  %18 = load i8*, i8** %buf9, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp10 = icmp sgt i64 %conv8, %sub.ptr.sub
  br i1 %cmp10, label %if.then.12, label %if.end.46

if.then.12:                                       ; preds = %if.end
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 3
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1
  %20 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8
  %21 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf13 = getelementptr inbounds %struct.tag, %struct.tag* %21, i32 0, i32 4
  %22 = load i8*, i8** %buf13, align 8
  %23 = load i32, i32* %bufSize, align 4
  %conv14 = sext i32 %23 to i64
  %call = call i8* %20(i8* %22, i64 %conv14)
  store i8* %call, i8** %temp, align 8
  %24 = load i8*, i8** %temp, align 8
  %cmp15 = icmp eq i8* %24, null
  br i1 %cmp15, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.then.12
  store i8 0, i8* %retval
  br label %return

if.end.18:                                        ; preds = %if.then.12
  %25 = load %struct.tag*, %struct.tag** %tag, align 8
  %name19 = getelementptr inbounds %struct.tag, %struct.tag* %25, i32 0, i32 3
  %str = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name19, i32 0, i32 0
  %26 = load i8*, i8** %str, align 8
  %27 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf20 = getelementptr inbounds %struct.tag, %struct.tag* %27, i32 0, i32 4
  %28 = load i8*, i8** %buf20, align 8
  %cmp21 = icmp eq i8* %26, %28
  br i1 %cmp21, label %if.then.23, label %if.end.26

if.then.23:                                       ; preds = %if.end.18
  %29 = load i8*, i8** %temp, align 8
  %30 = load %struct.tag*, %struct.tag** %tag, align 8
  %name24 = getelementptr inbounds %struct.tag, %struct.tag* %30, i32 0, i32 3
  %str25 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name24, i32 0, i32 0
  store i8* %29, i8** %str25, align 8
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.23, %if.end.18
  %31 = load %struct.tag*, %struct.tag** %tag, align 8
  %name27 = getelementptr inbounds %struct.tag, %struct.tag* %31, i32 0, i32 3
  %localPart = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name27, i32 0, i32 1
  %32 = load i8*, i8** %localPart, align 8
  %tobool28 = icmp ne i8* %32, null
  br i1 %tobool28, label %if.then.29, label %if.end.39

if.then.29:                                       ; preds = %if.end.26
  %33 = load i8*, i8** %temp, align 8
  %34 = load %struct.tag*, %struct.tag** %tag, align 8
  %name30 = getelementptr inbounds %struct.tag, %struct.tag* %34, i32 0, i32 3
  %localPart31 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name30, i32 0, i32 1
  %35 = load i8*, i8** %localPart31, align 8
  %36 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf32 = getelementptr inbounds %struct.tag, %struct.tag* %36, i32 0, i32 4
  %37 = load i8*, i8** %buf32, align 8
  %sub.ptr.lhs.cast33 = ptrtoint i8* %35 to i64
  %sub.ptr.rhs.cast34 = ptrtoint i8* %37 to i64
  %sub.ptr.sub35 = sub i64 %sub.ptr.lhs.cast33, %sub.ptr.rhs.cast34
  %add.ptr36 = getelementptr i8, i8* %33, i64 %sub.ptr.sub35
  %38 = load %struct.tag*, %struct.tag** %tag, align 8
  %name37 = getelementptr inbounds %struct.tag, %struct.tag* %38, i32 0, i32 3
  %localPart38 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name37, i32 0, i32 1
  store i8* %add.ptr36, i8** %localPart38, align 8
  br label %if.end.39

if.end.39:                                        ; preds = %if.then.29, %if.end.26
  %39 = load i8*, i8** %temp, align 8
  %40 = load %struct.tag*, %struct.tag** %tag, align 8
  %buf40 = getelementptr inbounds %struct.tag, %struct.tag* %40, i32 0, i32 4
  store i8* %39, i8** %buf40, align 8
  %41 = load i8*, i8** %temp, align 8
  %42 = load i32, i32* %bufSize, align 4
  %idx.ext41 = sext i32 %42 to i64
  %add.ptr42 = getelementptr i8, i8* %41, i64 %idx.ext41
  %43 = load %struct.tag*, %struct.tag** %tag, align 8
  %bufEnd43 = getelementptr inbounds %struct.tag, %struct.tag* %43, i32 0, i32 5
  store i8* %add.ptr42, i8** %bufEnd43, align 8
  %44 = load i8*, i8** %temp, align 8
  %45 = load i32, i32* %nameLen, align 4
  %idx.ext44 = sext i32 %45 to i64
  %add.ptr45 = getelementptr i8, i8* %44, i64 %idx.ext44
  store i8* %add.ptr45, i8** %rawNameBuf, align 8
  br label %if.end.46

if.end.46:                                        ; preds = %if.end.39, %if.end
  %46 = load i8*, i8** %rawNameBuf, align 8
  %47 = load %struct.tag*, %struct.tag** %tag, align 8
  %rawName47 = getelementptr inbounds %struct.tag, %struct.tag* %47, i32 0, i32 1
  %48 = load i8*, i8** %rawName47, align 8
  %49 = load %struct.tag*, %struct.tag** %tag, align 8
  %rawNameLength48 = getelementptr inbounds %struct.tag, %struct.tag* %49, i32 0, i32 2
  %50 = load i32, i32* %rawNameLength48, align 4
  %conv49 = sext i32 %50 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %48, i64 %conv49, i32 1, i1 false)
  %51 = load i8*, i8** %rawNameBuf, align 8
  %52 = load %struct.tag*, %struct.tag** %tag, align 8
  %rawName50 = getelementptr inbounds %struct.tag, %struct.tag* %52, i32 0, i32 1
  store i8* %51, i8** %rawName50, align 8
  %53 = load %struct.tag*, %struct.tag** %tag, align 8
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %53, i32 0, i32 0
  %54 = load %struct.tag*, %struct.tag** %parent, align 8
  store %struct.tag* %54, %struct.tag** %tag, align 8
  br label %while.cond

while.end:                                        ; preds = %if.then, %while.cond
  store i8 1, i8* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then.17
  %55 = load i8, i8* %retval
  ret i8 %55
}

; Function Attrs: nounwind uwtable
define internal i8* @getContext(%struct.XML_ParserStruct* %parser) #0 {
entry:
  %retval = alloca i8*, align 8
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %needSep = alloca i8, align 1
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %i33 = alloca i32, align 4
  %len34 = alloca i32, align 4
  %s = alloca i8*, align 8
  %prefix = alloca %struct.prefix*, align 8
  %s139 = alloca i8*, align 8
  %e = alloca %struct.ENTITY*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  store i8 0, i8* %needSep, align 1
  %2 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %2, i32 0, i32 11
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix, i32 0, i32 1
  %3 = load %struct.binding*, %struct.binding** %binding, align 8
  %tobool = icmp ne %struct.binding* %3, null
  br i1 %tobool, label %if.then, label %if.end.31

if.then:                                          ; preds = %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 79
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool, i32 0, i32 3
  %5 = load i8*, i8** %ptr, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 79
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool1, i32 0, i32 2
  %7 = load i8*, i8** %end, align 8
  %cmp = icmp eq i8* %5, %7
  br i1 %cmp, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.then
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 79
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool2)
  %tobool3 = icmp ne i8 %call, 0
  br i1 %tobool3, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then.6

cond.false:                                       ; preds = %land.lhs.true, %if.then
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool4 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 79
  %ptr5 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool4, i32 0, i32 3
  %10 = load i8*, i8** %ptr5, align 8
  %incdec.ptr = getelementptr i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %ptr5, align 8
  store i8 61, i8* %10, align 1
  br i1 true, label %if.end, label %if.then.6

if.then.6:                                        ; preds = %cond.false, %cond.true
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %cond.false, %cond.true
  %11 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %defaultPrefix7 = getelementptr inbounds %struct.DTD, %struct.DTD* %11, i32 0, i32 11
  %binding8 = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix7, i32 0, i32 1
  %12 = load %struct.binding*, %struct.binding** %binding8, align 8
  %uriLen = getelementptr inbounds %struct.binding, %struct.binding* %12, i32 0, i32 5
  %13 = load i32, i32* %uriLen, align 4
  store i32 %13, i32* %len, align 4
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 83
  %15 = load i8, i8* %m_namespaceSeparator, align 1
  %tobool9 = icmp ne i8 %15, 0
  br i1 %tobool9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end
  %16 = load i32, i32* %len, align 4
  %dec = add i32 %16, -1
  store i32 %dec, i32* %len, align 4
  br label %if.end.11

if.end.11:                                        ; preds = %if.then.10, %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.11
  %17 = load i32, i32* %i, align 4
  %18 = load i32, i32* %len, align 4
  %cmp12 = icmp slt i32 %17, %18
  br i1 %cmp12, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %19, i32 0, i32 79
  %ptr14 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool13, i32 0, i32 3
  %20 = load i8*, i8** %ptr14, align 8
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 79
  %end16 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool15, i32 0, i32 2
  %22 = load i8*, i8** %end16, align 8
  %cmp17 = icmp eq i8* %20, %22
  br i1 %cmp17, label %land.lhs.true.18, label %cond.false.23

land.lhs.true.18:                                 ; preds = %for.body
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 79
  %call20 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool19)
  %tobool21 = icmp ne i8 %call20, 0
  br i1 %tobool21, label %cond.false.23, label %cond.true.22

cond.true.22:                                     ; preds = %land.lhs.true.18
  br i1 false, label %if.end.30, label %if.then.29

cond.false.23:                                    ; preds = %land.lhs.true.18, %for.body
  %24 = load i32, i32* %i, align 4
  %idxprom = sext i32 %24 to i64
  %25 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %defaultPrefix24 = getelementptr inbounds %struct.DTD, %struct.DTD* %25, i32 0, i32 11
  %binding25 = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix24, i32 0, i32 1
  %26 = load %struct.binding*, %struct.binding** %binding25, align 8
  %uri = getelementptr inbounds %struct.binding, %struct.binding* %26, i32 0, i32 4
  %27 = load i8*, i8** %uri, align 8
  %arrayidx = getelementptr i8, i8* %27, i64 %idxprom
  %28 = load i8, i8* %arrayidx, align 1
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 79
  %ptr27 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool26, i32 0, i32 3
  %30 = load i8*, i8** %ptr27, align 8
  %incdec.ptr28 = getelementptr i8, i8* %30, i32 1
  store i8* %incdec.ptr28, i8** %ptr27, align 8
  store i8 %28, i8* %30, align 1
  br i1 true, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %cond.false.23, %cond.true.22
  store i8* null, i8** %retval
  br label %return

if.end.30:                                        ; preds = %cond.false.23, %cond.true.22
  br label %for.inc

for.inc:                                          ; preds = %if.end.30
  %31 = load i32, i32* %i, align 4
  %inc = add i32 %31, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %needSep, align 1
  br label %if.end.31

if.end.31:                                        ; preds = %for.end, %entry
  %32 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %32, i32 0, i32 3
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %prefixes)
  br label %for.cond.32

for.cond.32:                                      ; preds = %for.end.136, %if.then.41, %if.end.31
  %call35 = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter)
  %33 = bitcast %struct.NAMED* %call35 to %struct.prefix*
  store %struct.prefix* %33, %struct.prefix** %prefix, align 8
  %34 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %tobool36 = icmp ne %struct.prefix* %34, null
  br i1 %tobool36, label %if.end.38, label %if.then.37

if.then.37:                                       ; preds = %for.cond.32
  br label %for.end.137

if.end.38:                                        ; preds = %for.cond.32
  %35 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %binding39 = getelementptr inbounds %struct.prefix, %struct.prefix* %35, i32 0, i32 1
  %36 = load %struct.binding*, %struct.binding** %binding39, align 8
  %tobool40 = icmp ne %struct.binding* %36, null
  br i1 %tobool40, label %if.end.42, label %if.then.41

if.then.41:                                       ; preds = %if.end.38
  br label %for.cond.32

if.end.42:                                        ; preds = %if.end.38
  %37 = load i8, i8* %needSep, align 1
  %conv = zext i8 %37 to i32
  %tobool43 = icmp ne i32 %conv, 0
  br i1 %tobool43, label %land.lhs.true.44, label %if.end.61

land.lhs.true.44:                                 ; preds = %if.end.42
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %38, i32 0, i32 79
  %ptr46 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool45, i32 0, i32 3
  %39 = load i8*, i8** %ptr46, align 8
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool47 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 79
  %end48 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool47, i32 0, i32 2
  %41 = load i8*, i8** %end48, align 8
  %cmp49 = icmp eq i8* %39, %41
  br i1 %cmp49, label %land.lhs.true.51, label %cond.false.56

land.lhs.true.51:                                 ; preds = %land.lhs.true.44
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool52 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 79
  %call53 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool52)
  %tobool54 = icmp ne i8 %call53, 0
  br i1 %tobool54, label %cond.false.56, label %cond.true.55

cond.true.55:                                     ; preds = %land.lhs.true.51
  br i1 false, label %if.end.61, label %if.then.60

cond.false.56:                                    ; preds = %land.lhs.true.51, %land.lhs.true.44
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool57 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 79
  %ptr58 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool57, i32 0, i32 3
  %44 = load i8*, i8** %ptr58, align 8
  %incdec.ptr59 = getelementptr i8, i8* %44, i32 1
  store i8* %incdec.ptr59, i8** %ptr58, align 8
  store i8 12, i8* %44, align 1
  br i1 true, label %if.end.61, label %if.then.60

if.then.60:                                       ; preds = %cond.false.56, %cond.true.55
  store i8* null, i8** %retval
  br label %return

if.end.61:                                        ; preds = %cond.false.56, %cond.true.55, %if.end.42
  %45 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %45, i32 0, i32 0
  %46 = load i8*, i8** %name, align 8
  store i8* %46, i8** %s, align 8
  br label %for.cond.62

for.cond.62:                                      ; preds = %for.inc.82, %if.end.61
  %47 = load i8*, i8** %s, align 8
  %48 = load i8, i8* %47, align 1
  %tobool63 = icmp ne i8 %48, 0
  br i1 %tobool63, label %for.body.64, label %for.end.84

for.body.64:                                      ; preds = %for.cond.62
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool65 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 79
  %ptr66 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool65, i32 0, i32 3
  %50 = load i8*, i8** %ptr66, align 8
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool67 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 79
  %end68 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool67, i32 0, i32 2
  %52 = load i8*, i8** %end68, align 8
  %cmp69 = icmp eq i8* %50, %52
  br i1 %cmp69, label %land.lhs.true.71, label %cond.false.76

land.lhs.true.71:                                 ; preds = %for.body.64
  %53 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool72 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %53, i32 0, i32 79
  %call73 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool72)
  %tobool74 = icmp ne i8 %call73, 0
  br i1 %tobool74, label %cond.false.76, label %cond.true.75

cond.true.75:                                     ; preds = %land.lhs.true.71
  br i1 false, label %if.end.81, label %if.then.80

cond.false.76:                                    ; preds = %land.lhs.true.71, %for.body.64
  %54 = load i8*, i8** %s, align 8
  %55 = load i8, i8* %54, align 1
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool77 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %56, i32 0, i32 79
  %ptr78 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool77, i32 0, i32 3
  %57 = load i8*, i8** %ptr78, align 8
  %incdec.ptr79 = getelementptr i8, i8* %57, i32 1
  store i8* %incdec.ptr79, i8** %ptr78, align 8
  store i8 %55, i8* %57, align 1
  br i1 true, label %if.end.81, label %if.then.80

if.then.80:                                       ; preds = %cond.false.76, %cond.true.75
  store i8* null, i8** %retval
  br label %return

if.end.81:                                        ; preds = %cond.false.76, %cond.true.75
  br label %for.inc.82

for.inc.82:                                       ; preds = %if.end.81
  %58 = load i8*, i8** %s, align 8
  %incdec.ptr83 = getelementptr i8, i8* %58, i32 1
  store i8* %incdec.ptr83, i8** %s, align 8
  br label %for.cond.62

for.end.84:                                       ; preds = %for.cond.62
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool85 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 79
  %ptr86 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool85, i32 0, i32 3
  %60 = load i8*, i8** %ptr86, align 8
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool87 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 79
  %end88 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool87, i32 0, i32 2
  %62 = load i8*, i8** %end88, align 8
  %cmp89 = icmp eq i8* %60, %62
  br i1 %cmp89, label %land.lhs.true.91, label %cond.false.96

land.lhs.true.91:                                 ; preds = %for.end.84
  %63 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool92 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %63, i32 0, i32 79
  %call93 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool92)
  %tobool94 = icmp ne i8 %call93, 0
  br i1 %tobool94, label %cond.false.96, label %cond.true.95

cond.true.95:                                     ; preds = %land.lhs.true.91
  br i1 false, label %if.end.101, label %if.then.100

cond.false.96:                                    ; preds = %land.lhs.true.91, %for.end.84
  %64 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool97 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %64, i32 0, i32 79
  %ptr98 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool97, i32 0, i32 3
  %65 = load i8*, i8** %ptr98, align 8
  %incdec.ptr99 = getelementptr i8, i8* %65, i32 1
  store i8* %incdec.ptr99, i8** %ptr98, align 8
  store i8 61, i8* %65, align 1
  br i1 true, label %if.end.101, label %if.then.100

if.then.100:                                      ; preds = %cond.false.96, %cond.true.95
  store i8* null, i8** %retval
  br label %return

if.end.101:                                       ; preds = %cond.false.96, %cond.true.95
  %66 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %binding102 = getelementptr inbounds %struct.prefix, %struct.prefix* %66, i32 0, i32 1
  %67 = load %struct.binding*, %struct.binding** %binding102, align 8
  %uriLen103 = getelementptr inbounds %struct.binding, %struct.binding* %67, i32 0, i32 5
  %68 = load i32, i32* %uriLen103, align 4
  store i32 %68, i32* %len34, align 4
  %69 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_namespaceSeparator104 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %69, i32 0, i32 83
  %70 = load i8, i8* %m_namespaceSeparator104, align 1
  %tobool105 = icmp ne i8 %70, 0
  br i1 %tobool105, label %if.then.106, label %if.end.108

if.then.106:                                      ; preds = %if.end.101
  %71 = load i32, i32* %len34, align 4
  %dec107 = add i32 %71, -1
  store i32 %dec107, i32* %len34, align 4
  br label %if.end.108

if.end.108:                                       ; preds = %if.then.106, %if.end.101
  store i32 0, i32* %i33, align 4
  br label %for.cond.109

for.cond.109:                                     ; preds = %for.inc.134, %if.end.108
  %72 = load i32, i32* %i33, align 4
  %73 = load i32, i32* %len34, align 4
  %cmp110 = icmp slt i32 %72, %73
  br i1 %cmp110, label %for.body.112, label %for.end.136

for.body.112:                                     ; preds = %for.cond.109
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool113 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 79
  %ptr114 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool113, i32 0, i32 3
  %75 = load i8*, i8** %ptr114, align 8
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool115 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 79
  %end116 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool115, i32 0, i32 2
  %77 = load i8*, i8** %end116, align 8
  %cmp117 = icmp eq i8* %75, %77
  br i1 %cmp117, label %land.lhs.true.119, label %cond.false.124

land.lhs.true.119:                                ; preds = %for.body.112
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool120 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 79
  %call121 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool120)
  %tobool122 = icmp ne i8 %call121, 0
  br i1 %tobool122, label %cond.false.124, label %cond.true.123

cond.true.123:                                    ; preds = %land.lhs.true.119
  br i1 false, label %if.end.133, label %if.then.132

cond.false.124:                                   ; preds = %land.lhs.true.119, %for.body.112
  %79 = load i32, i32* %i33, align 4
  %idxprom125 = sext i32 %79 to i64
  %80 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %binding126 = getelementptr inbounds %struct.prefix, %struct.prefix* %80, i32 0, i32 1
  %81 = load %struct.binding*, %struct.binding** %binding126, align 8
  %uri127 = getelementptr inbounds %struct.binding, %struct.binding* %81, i32 0, i32 4
  %82 = load i8*, i8** %uri127, align 8
  %arrayidx128 = getelementptr i8, i8* %82, i64 %idxprom125
  %83 = load i8, i8* %arrayidx128, align 1
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool129 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 79
  %ptr130 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool129, i32 0, i32 3
  %85 = load i8*, i8** %ptr130, align 8
  %incdec.ptr131 = getelementptr i8, i8* %85, i32 1
  store i8* %incdec.ptr131, i8** %ptr130, align 8
  store i8 %83, i8* %85, align 1
  br i1 true, label %if.end.133, label %if.then.132

if.then.132:                                      ; preds = %cond.false.124, %cond.true.123
  store i8* null, i8** %retval
  br label %return

if.end.133:                                       ; preds = %cond.false.124, %cond.true.123
  br label %for.inc.134

for.inc.134:                                      ; preds = %if.end.133
  %86 = load i32, i32* %i33, align 4
  %inc135 = add i32 %86, 1
  store i32 %inc135, i32* %i33, align 4
  br label %for.cond.109

for.end.136:                                      ; preds = %for.cond.109
  store i8 1, i8* %needSep, align 1
  br label %for.cond.32

for.end.137:                                      ; preds = %if.then.37
  %87 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %87, i32 0, i32 0
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %generalEntities)
  br label %for.cond.138

for.cond.138:                                     ; preds = %for.end.190, %if.then.145, %for.end.137
  %call140 = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter)
  %88 = bitcast %struct.NAMED* %call140 to %struct.ENTITY*
  store %struct.ENTITY* %88, %struct.ENTITY** %e, align 8
  %89 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8
  %tobool141 = icmp ne %struct.ENTITY* %89, null
  br i1 %tobool141, label %if.end.143, label %if.then.142

if.then.142:                                      ; preds = %for.cond.138
  br label %for.end.191

if.end.143:                                       ; preds = %for.cond.138
  %90 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %90, i32 0, i32 8
  %91 = load i8, i8* %open, align 1
  %tobool144 = icmp ne i8 %91, 0
  br i1 %tobool144, label %if.end.146, label %if.then.145

if.then.145:                                      ; preds = %if.end.143
  br label %for.cond.138

if.end.146:                                       ; preds = %if.end.143
  %92 = load i8, i8* %needSep, align 1
  %conv147 = zext i8 %92 to i32
  %tobool148 = icmp ne i32 %conv147, 0
  br i1 %tobool148, label %land.lhs.true.149, label %if.end.166

land.lhs.true.149:                                ; preds = %if.end.146
  %93 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool150 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %93, i32 0, i32 79
  %ptr151 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool150, i32 0, i32 3
  %94 = load i8*, i8** %ptr151, align 8
  %95 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool152 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %95, i32 0, i32 79
  %end153 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool152, i32 0, i32 2
  %96 = load i8*, i8** %end153, align 8
  %cmp154 = icmp eq i8* %94, %96
  br i1 %cmp154, label %land.lhs.true.156, label %cond.false.161

land.lhs.true.156:                                ; preds = %land.lhs.true.149
  %97 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool157 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %97, i32 0, i32 79
  %call158 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool157)
  %tobool159 = icmp ne i8 %call158, 0
  br i1 %tobool159, label %cond.false.161, label %cond.true.160

cond.true.160:                                    ; preds = %land.lhs.true.156
  br i1 false, label %if.end.166, label %if.then.165

cond.false.161:                                   ; preds = %land.lhs.true.156, %land.lhs.true.149
  %98 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool162 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %98, i32 0, i32 79
  %ptr163 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool162, i32 0, i32 3
  %99 = load i8*, i8** %ptr163, align 8
  %incdec.ptr164 = getelementptr i8, i8* %99, i32 1
  store i8* %incdec.ptr164, i8** %ptr163, align 8
  store i8 12, i8* %99, align 1
  br i1 true, label %if.end.166, label %if.then.165

if.then.165:                                      ; preds = %cond.false.161, %cond.true.160
  store i8* null, i8** %retval
  br label %return

if.end.166:                                       ; preds = %cond.false.161, %cond.true.160, %if.end.146
  %100 = load %struct.ENTITY*, %struct.ENTITY** %e, align 8
  %name167 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %100, i32 0, i32 0
  %101 = load i8*, i8** %name167, align 8
  store i8* %101, i8** %s139, align 8
  br label %for.cond.168

for.cond.168:                                     ; preds = %for.inc.188, %if.end.166
  %102 = load i8*, i8** %s139, align 8
  %103 = load i8, i8* %102, align 1
  %tobool169 = icmp ne i8 %103, 0
  br i1 %tobool169, label %for.body.170, label %for.end.190

for.body.170:                                     ; preds = %for.cond.168
  %104 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool171 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %104, i32 0, i32 79
  %ptr172 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool171, i32 0, i32 3
  %105 = load i8*, i8** %ptr172, align 8
  %106 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool173 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %106, i32 0, i32 79
  %end174 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool173, i32 0, i32 2
  %107 = load i8*, i8** %end174, align 8
  %cmp175 = icmp eq i8* %105, %107
  br i1 %cmp175, label %land.lhs.true.177, label %cond.false.182

land.lhs.true.177:                                ; preds = %for.body.170
  %108 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool178 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %108, i32 0, i32 79
  %call179 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool178)
  %tobool180 = icmp ne i8 %call179, 0
  br i1 %tobool180, label %cond.false.182, label %cond.true.181

cond.true.181:                                    ; preds = %land.lhs.true.177
  br i1 false, label %if.end.187, label %if.then.186

cond.false.182:                                   ; preds = %land.lhs.true.177, %for.body.170
  %109 = load i8*, i8** %s139, align 8
  %110 = load i8, i8* %109, align 1
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool183 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 79
  %ptr184 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool183, i32 0, i32 3
  %112 = load i8*, i8** %ptr184, align 8
  %incdec.ptr185 = getelementptr i8, i8* %112, i32 1
  store i8* %incdec.ptr185, i8** %ptr184, align 8
  store i8 %110, i8* %112, align 1
  br i1 true, label %if.end.187, label %if.then.186

if.then.186:                                      ; preds = %cond.false.182, %cond.true.181
  store i8* null, i8** %retval
  br label %return

if.end.187:                                       ; preds = %cond.false.182, %cond.true.181
  br label %for.inc.188

for.inc.188:                                      ; preds = %if.end.187
  %113 = load i8*, i8** %s139, align 8
  %incdec.ptr189 = getelementptr i8, i8* %113, i32 1
  store i8* %incdec.ptr189, i8** %s139, align 8
  br label %for.cond.168

for.end.190:                                      ; preds = %for.cond.168
  store i8 1, i8* %needSep, align 1
  br label %for.cond.138

for.end.191:                                      ; preds = %if.then.142
  %114 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool192 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %114, i32 0, i32 79
  %ptr193 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool192, i32 0, i32 3
  %115 = load i8*, i8** %ptr193, align 8
  %116 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool194 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %116, i32 0, i32 79
  %end195 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool194, i32 0, i32 2
  %117 = load i8*, i8** %end195, align 8
  %cmp196 = icmp eq i8* %115, %117
  br i1 %cmp196, label %land.lhs.true.198, label %cond.false.203

land.lhs.true.198:                                ; preds = %for.end.191
  %118 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool199 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %118, i32 0, i32 79
  %call200 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool199)
  %tobool201 = icmp ne i8 %call200, 0
  br i1 %tobool201, label %cond.false.203, label %cond.true.202

cond.true.202:                                    ; preds = %land.lhs.true.198
  br i1 false, label %if.end.208, label %if.then.207

cond.false.203:                                   ; preds = %land.lhs.true.198, %for.end.191
  %119 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool204 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %119, i32 0, i32 79
  %ptr205 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool204, i32 0, i32 3
  %120 = load i8*, i8** %ptr205, align 8
  %incdec.ptr206 = getelementptr i8, i8* %120, i32 1
  store i8* %incdec.ptr206, i8** %ptr205, align 8
  store i8 0, i8* %120, align 1
  br i1 true, label %if.end.208, label %if.then.207

if.then.207:                                      ; preds = %cond.false.203, %cond.true.202
  store i8* null, i8** %retval
  br label %return

if.end.208:                                       ; preds = %cond.false.203, %cond.true.202
  %121 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool209 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %121, i32 0, i32 79
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool209, i32 0, i32 4
  %122 = load i8*, i8** %start, align 8
  store i8* %122, i8** %retval
  br label %return

return:                                           ; preds = %if.end.208, %if.then.207, %if.then.186, %if.then.165, %if.then.132, %if.then.100, %if.then.80, %if.then.60, %if.then.29, %if.then.6
  %123 = load i8*, i8** %retval
  ret i8* %123
}

; Function Attrs: nounwind uwtable
define internal i32 @storeAtts(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8* %attStr, %struct.TAG_NAME* %tagNamePtr, %struct.binding** %bindingsPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %attStr.addr = alloca i8*, align 8
  %tagNamePtr.addr = alloca %struct.TAG_NAME*, align 8
  %bindingsPtr.addr = alloca %struct.binding**, align 8
  %dtd = alloca %struct.DTD*, align 8
  %elementType = alloca %struct.ELEMENT_TYPE*, align 8
  %nDefaultAtts = alloca i32, align 4
  %appAtts = alloca i8**, align 8
  %attIndex = alloca i32, align 4
  %prefixLen = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %uri = alloca i8*, align 8
  %nPrefixes = alloca i32, align 4
  %binding = alloca %struct.binding*, align 8
  %localPart = alloca i8*, align 8
  %name = alloca i8*, align 8
  %oldAttsSize = alloca i32, align 4
  %temp = alloca %struct.ATTRIBUTE*, align 8
  %currAtt = alloca %struct.ATTRIBUTE*, align 8
  %attId = alloca %struct.attribute_id*, align 8
  %result = alloca i32, align 4
  %isCdata = alloca i8, align 1
  %j = alloca i32, align 4
  %result138 = alloca i32, align 4
  %da = alloca %struct.DEFAULT_ATTRIBUTE*, align 8
  %result206 = alloca i32, align 4
  %j252 = alloca i32, align 4
  %version = alloca i64, align 8
  %nsAttsSize = alloca i32, align 4
  %temp259 = alloca %struct.NS_ATT*, align 8
  %s = alloca i8*, align 8
  %id311 = alloca %struct.attribute_id*, align 8
  %b = alloca %struct.binding*, align 8
  %uriHash = alloca i64, align 8
  %c = alloca i8, align 1
  %c351 = alloca i8, align 1
  %step = alloca i8, align 1
  %mask = alloca i64, align 8
  %s1 = alloca i8*, align 8
  %s2 = alloca i8*, align 8
  %p = alloca %struct.tag*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8* %attStr, i8** %attStr.addr, align 8
  store %struct.TAG_NAME* %tagNamePtr, %struct.TAG_NAME** %tagNamePtr.addr, align 8
  store %struct.binding** %bindingsPtr, %struct.binding*** %bindingsPtr.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  store i32 0, i32* %attIndex, align 4
  store i32 0, i32* %nPrefixes, align 4
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %3 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %elementTypes = getelementptr inbounds %struct.DTD, %struct.DTD* %3, i32 0, i32 1
  %4 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8
  %str = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %4, i32 0, i32 0
  %5 = load i8*, i8** %str, align 8
  %call = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %2, %struct.HASH_TABLE* %elementTypes, i8* %5, i64 0)
  %6 = bitcast %struct.NAMED* %call to %struct.ELEMENT_TYPE*
  store %struct.ELEMENT_TYPE* %6, %struct.ELEMENT_TYPE** %elementType, align 8
  %7 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8
  %tobool = icmp ne %struct.ELEMENT_TYPE* %7, null
  br i1 %tobool, label %if.end.15, label %if.then

if.then:                                          ; preds = %entry
  %8 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %8, i32 0, i32 4
  %9 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8
  %str1 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %9, i32 0, i32 0
  %10 = load i8*, i8** %str1, align 8
  %call2 = call i8* @poolCopyString(%struct.STRING_POOL* %pool, i8* %10)
  store i8* %call2, i8** %name, align 8
  %11 = load i8*, i8** %name, align 8
  %tobool3 = icmp ne i8* %11, null
  br i1 %tobool3, label %if.end, label %if.then.4

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %13 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %elementTypes5 = getelementptr inbounds %struct.DTD, %struct.DTD* %13, i32 0, i32 1
  %14 = load i8*, i8** %name, align 8
  %call6 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %12, %struct.HASH_TABLE* %elementTypes5, i8* %14, i64 40)
  %15 = bitcast %struct.NAMED* %call6 to %struct.ELEMENT_TYPE*
  store %struct.ELEMENT_TYPE* %15, %struct.ELEMENT_TYPE** %elementType, align 8
  %16 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8
  %tobool7 = icmp ne %struct.ELEMENT_TYPE* %16, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_ns = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 38
  %18 = load i8, i8* %m_ns, align 1
  %conv = zext i8 %18 to i32
  %tobool10 = icmp ne i32 %conv, 0
  br i1 %tobool10, label %land.lhs.true, label %if.end.14

land.lhs.true:                                    ; preds = %if.end.9
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %20 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8
  %call11 = call i32 @setElementTypePrefix(%struct.XML_ParserStruct* %19, %struct.ELEMENT_TYPE* %20)
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end.14:                                        ; preds = %land.lhs.true, %if.end.9
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %entry
  %21 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8
  %nDefaultAtts16 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %21, i32 0, i32 3
  %22 = load i32, i32* %nDefaultAtts16, align 4
  store i32 %22, i32* %nDefaultAtts, align 4
  %23 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %getAtts = getelementptr inbounds %struct.encoding, %struct.encoding* %23, i32 0, i32 6
  %24 = load i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)*, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)** %getAtts, align 8
  %25 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %26 = load i8*, i8** %attStr.addr, align 8
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attsSize = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 71
  %28 = load i32, i32* %m_attsSize, align 4
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 74
  %30 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts, align 8
  %call17 = call i32 %24(%struct.encoding* %25, i8* %26, i32 %28, %struct.ATTRIBUTE* %30)
  store i32 %call17, i32* %n, align 4
  %31 = load i32, i32* %n, align 4
  %32 = load i32, i32* %nDefaultAtts, align 4
  %add = add i32 %31, %32
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attsSize18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 71
  %34 = load i32, i32* %m_attsSize18, align 4
  %cmp = icmp sgt i32 %add, %34
  br i1 %cmp, label %if.then.20, label %if.end.41

if.then.20:                                       ; preds = %if.end.15
  %35 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attsSize21 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %35, i32 0, i32 71
  %36 = load i32, i32* %m_attsSize21, align 4
  store i32 %36, i32* %oldAttsSize, align 4
  %37 = load i32, i32* %n, align 4
  %38 = load i32, i32* %nDefaultAtts, align 4
  %add22 = add i32 %37, %38
  %add23 = add i32 %add22, 16
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attsSize24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 71
  store i32 %add23, i32* %m_attsSize24, align 4
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 3
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1
  %41 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 74
  %43 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts25, align 8
  %44 = bitcast %struct.ATTRIBUTE* %43 to i8*
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_attsSize26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 71
  %46 = load i32, i32* %m_attsSize26, align 4
  %conv27 = sext i32 %46 to i64
  %mul = mul i64 %conv27, 32
  %call28 = call i8* %41(i8* %44, i64 %mul)
  %47 = bitcast i8* %call28 to %struct.ATTRIBUTE*
  store %struct.ATTRIBUTE* %47, %struct.ATTRIBUTE** %temp, align 8
  %48 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %temp, align 8
  %cmp29 = icmp eq %struct.ATTRIBUTE* %48, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.then.20
  store i32 1, i32* %retval
  br label %return

if.end.32:                                        ; preds = %if.then.20
  %49 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %temp, align 8
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 74
  store %struct.ATTRIBUTE* %49, %struct.ATTRIBUTE** %m_atts33, align 8
  %51 = load i32, i32* %n, align 4
  %52 = load i32, i32* %oldAttsSize, align 4
  %cmp34 = icmp sgt i32 %51, %52
  br i1 %cmp34, label %if.then.36, label %if.end.40

if.then.36:                                       ; preds = %if.end.32
  %53 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %getAtts37 = getelementptr inbounds %struct.encoding, %struct.encoding* %53, i32 0, i32 6
  %54 = load i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)*, i32 (%struct.encoding*, i8*, i32, %struct.ATTRIBUTE*)** %getAtts37, align 8
  %55 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %56 = load i8*, i8** %attStr.addr, align 8
  %57 = load i32, i32* %n, align 4
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts38 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 74
  %59 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts38, align 8
  %call39 = call i32 %54(%struct.encoding* %55, i8* %56, i32 %57, %struct.ATTRIBUTE* %59)
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.36, %if.end.32
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %if.end.15
  %60 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts42 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %60, i32 0, i32 74
  %61 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts42, align 8
  %62 = bitcast %struct.ATTRIBUTE* %61 to i8**
  store i8** %62, i8*** %appAtts, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.155, %if.end.41
  %63 = load i32, i32* %i, align 4
  %64 = load i32, i32* %n, align 4
  %cmp43 = icmp slt i32 %63, %64
  br i1 %cmp43, label %for.body, label %for.end.157

for.body:                                         ; preds = %for.cond
  %65 = load i32, i32* %i, align 4
  %idxprom = sext i32 %65 to i64
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 74
  %67 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts45, align 8
  %arrayidx = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %67, i64 %idxprom
  store %struct.ATTRIBUTE* %arrayidx, %struct.ATTRIBUTE** %currAtt, align 8
  %68 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %69 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %70 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %currAtt, align 8
  %name46 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %70, i32 0, i32 0
  %71 = load i8*, i8** %name46, align 8
  %72 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %currAtt, align 8
  %name47 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %72, i32 0, i32 0
  %73 = load i8*, i8** %name47, align 8
  %74 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %nameLength = getelementptr inbounds %struct.encoding, %struct.encoding* %74, i32 0, i32 4
  %75 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %nameLength, align 8
  %76 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %77 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %currAtt, align 8
  %name48 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %77, i32 0, i32 0
  %78 = load i8*, i8** %name48, align 8
  %call49 = call i32 %75(%struct.encoding* %76, i8* %78)
  %idx.ext = sext i32 %call49 to i64
  %add.ptr = getelementptr i8, i8* %73, i64 %idx.ext
  %call50 = call %struct.attribute_id* @getAttributeId(%struct.XML_ParserStruct* %68, %struct.encoding* %69, i8* %71, i8* %add.ptr)
  store %struct.attribute_id* %call50, %struct.attribute_id** %attId, align 8
  %79 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8
  %tobool51 = icmp ne %struct.attribute_id* %79, null
  br i1 %tobool51, label %if.end.53, label %if.then.52

if.then.52:                                       ; preds = %for.body
  store i32 1, i32* %retval
  br label %return

if.end.53:                                        ; preds = %for.body
  %80 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8
  %name54 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %80, i32 0, i32 0
  %81 = load i8*, i8** %name54, align 8
  %arrayidx55 = getelementptr i8, i8* %81, i64 -1
  %82 = load i8, i8* %arrayidx55, align 1
  %tobool56 = icmp ne i8 %82, 0
  br i1 %tobool56, label %if.then.57, label %if.end.66

if.then.57:                                       ; preds = %if.end.53
  %83 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %84 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %84, i32 0, i32 34
  %85 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %cmp58 = icmp eq %struct.encoding* %83, %85
  br i1 %cmp58, label %if.then.60, label %if.end.65

if.then.60:                                       ; preds = %if.then.57
  %86 = load i32, i32* %i, align 4
  %idxprom61 = sext i32 %86 to i64
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts62 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 74
  %88 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts62, align 8
  %arrayidx63 = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %88, i64 %idxprom61
  %name64 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx63, i32 0, i32 0
  %89 = load i8*, i8** %name64, align 8
  %90 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %90, i32 0, i32 47
  store i8* %89, i8** %m_eventPtr, align 8
  br label %if.end.65

if.end.65:                                        ; preds = %if.then.60, %if.then.57
  store i32 8, i32* %retval
  br label %return

if.end.66:                                        ; preds = %if.end.53
  %91 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8
  %name67 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %91, i32 0, i32 0
  %92 = load i8*, i8** %name67, align 8
  %arrayidx68 = getelementptr i8, i8* %92, i64 -1
  store i8 1, i8* %arrayidx68, align 1
  %93 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8
  %name69 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %93, i32 0, i32 0
  %94 = load i8*, i8** %name69, align 8
  %95 = load i32, i32* %attIndex, align 4
  %inc = add i32 %95, 1
  store i32 %inc, i32* %attIndex, align 4
  %idxprom70 = sext i32 %95 to i64
  %96 = load i8**, i8*** %appAtts, align 8
  %arrayidx71 = getelementptr i8*, i8** %96, i64 %idxprom70
  store i8* %94, i8** %arrayidx71, align 8
  %97 = load i32, i32* %i, align 4
  %idxprom72 = sext i32 %97 to i64
  %98 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts73 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %98, i32 0, i32 74
  %99 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts73, align 8
  %arrayidx74 = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %99, i64 %idxprom72
  %normalized = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx74, i32 0, i32 3
  %100 = load i8, i8* %normalized, align 1
  %tobool75 = icmp ne i8 %100, 0
  br i1 %tobool75, label %if.else, label %if.then.76

if.then.76:                                       ; preds = %if.end.66
  store i8 1, i8* %isCdata, align 1
  %101 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8
  %maybeTokenized = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %101, i32 0, i32 2
  %102 = load i8, i8* %maybeTokenized, align 1
  %tobool77 = icmp ne i8 %102, 0
  br i1 %tobool77, label %if.then.78, label %if.end.94

if.then.78:                                       ; preds = %if.then.76
  store i32 0, i32* %j, align 4
  br label %for.cond.79

for.cond.79:                                      ; preds = %for.inc, %if.then.78
  %103 = load i32, i32* %j, align 4
  %104 = load i32, i32* %nDefaultAtts, align 4
  %cmp80 = icmp slt i32 %103, %104
  br i1 %cmp80, label %for.body.82, label %for.end

for.body.82:                                      ; preds = %for.cond.79
  %105 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8
  %106 = load i32, i32* %j, align 4
  %idxprom83 = sext i32 %106 to i64
  %107 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8
  %defaultAtts = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %107, i32 0, i32 5
  %108 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts, align 8
  %arrayidx84 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %108, i64 %idxprom83
  %id = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx84, i32 0, i32 0
  %109 = load %struct.attribute_id*, %struct.attribute_id** %id, align 8
  %cmp85 = icmp eq %struct.attribute_id* %105, %109
  br i1 %cmp85, label %if.then.87, label %if.end.92

if.then.87:                                       ; preds = %for.body.82
  %110 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %110 to i64
  %111 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8
  %defaultAtts89 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %111, i32 0, i32 5
  %112 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts89, align 8
  %arrayidx90 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %112, i64 %idxprom88
  %isCdata91 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %arrayidx90, i32 0, i32 1
  %113 = load i8, i8* %isCdata91, align 1
  store i8 %113, i8* %isCdata, align 1
  br label %for.end

if.end.92:                                        ; preds = %for.body.82
  br label %for.inc

for.inc:                                          ; preds = %if.end.92
  %114 = load i32, i32* %j, align 4
  %inc93 = add i32 %114, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond.79

for.end:                                          ; preds = %if.then.87, %for.cond.79
  br label %if.end.94

if.end.94:                                        ; preds = %for.end, %if.then.76
  %115 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %116 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %117 = load i8, i8* %isCdata, align 1
  %118 = load i32, i32* %i, align 4
  %idxprom95 = sext i32 %118 to i64
  %119 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts96 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %119, i32 0, i32 74
  %120 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts96, align 8
  %arrayidx97 = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %120, i64 %idxprom95
  %valuePtr = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx97, i32 0, i32 1
  %121 = load i8*, i8** %valuePtr, align 8
  %122 = load i32, i32* %i, align 4
  %idxprom98 = sext i32 %122 to i64
  %123 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts99 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %123, i32 0, i32 74
  %124 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts99, align 8
  %arrayidx100 = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %124, i64 %idxprom98
  %valueEnd = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx100, i32 0, i32 2
  %125 = load i8*, i8** %valueEnd, align 8
  %126 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %126, i32 0, i32 79
  %call101 = call i32 @storeAttributeValue(%struct.XML_ParserStruct* %115, %struct.encoding* %116, i8 zeroext %117, i8* %121, i8* %125, %struct.STRING_POOL* %m_tempPool)
  store i32 %call101, i32* %result, align 4
  %127 = load i32, i32* %result, align 4
  %tobool102 = icmp ne i32 %127, 0
  br i1 %tobool102, label %if.then.103, label %if.end.104

if.then.103:                                      ; preds = %if.end.94
  %128 = load i32, i32* %result, align 4
  store i32 %128, i32* %retval
  br label %return

if.end.104:                                       ; preds = %if.end.94
  %129 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool105 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %129, i32 0, i32 79
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool105, i32 0, i32 4
  %130 = load i8*, i8** %start, align 8
  %131 = load i32, i32* %attIndex, align 4
  %idxprom106 = sext i32 %131 to i64
  %132 = load i8**, i8*** %appAtts, align 8
  %arrayidx107 = getelementptr i8*, i8** %132, i64 %idxprom106
  store i8* %130, i8** %arrayidx107, align 8
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool108 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 79
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool108, i32 0, i32 3
  %134 = load i8*, i8** %ptr, align 8
  %135 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool109 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %135, i32 0, i32 79
  %start110 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool109, i32 0, i32 4
  store i8* %134, i8** %start110, align 8
  br label %if.end.133

if.else:                                          ; preds = %if.end.66
  %136 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool111 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %136, i32 0, i32 79
  %137 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %138 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %138 to i64
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts113 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %139, i32 0, i32 74
  %140 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts113, align 8
  %arrayidx114 = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %140, i64 %idxprom112
  %valuePtr115 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx114, i32 0, i32 1
  %141 = load i8*, i8** %valuePtr115, align 8
  %142 = load i32, i32* %i, align 4
  %idxprom116 = sext i32 %142 to i64
  %143 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_atts117 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %143, i32 0, i32 74
  %144 = load %struct.ATTRIBUTE*, %struct.ATTRIBUTE** %m_atts117, align 8
  %arrayidx118 = getelementptr %struct.ATTRIBUTE, %struct.ATTRIBUTE* %144, i64 %idxprom116
  %valueEnd119 = getelementptr inbounds %struct.ATTRIBUTE, %struct.ATTRIBUTE* %arrayidx118, i32 0, i32 2
  %145 = load i8*, i8** %valueEnd119, align 8
  %call120 = call i8* @poolStoreString(%struct.STRING_POOL* %m_tempPool111, %struct.encoding* %137, i8* %141, i8* %145)
  %146 = load i32, i32* %attIndex, align 4
  %idxprom121 = sext i32 %146 to i64
  %147 = load i8**, i8*** %appAtts, align 8
  %arrayidx122 = getelementptr i8*, i8** %147, i64 %idxprom121
  store i8* %call120, i8** %arrayidx122, align 8
  %148 = load i32, i32* %attIndex, align 4
  %idxprom123 = sext i32 %148 to i64
  %149 = load i8**, i8*** %appAtts, align 8
  %arrayidx124 = getelementptr i8*, i8** %149, i64 %idxprom123
  %150 = load i8*, i8** %arrayidx124, align 8
  %cmp125 = icmp eq i8* %150, null
  br i1 %cmp125, label %if.then.127, label %if.end.128

if.then.127:                                      ; preds = %if.else
  store i32 1, i32* %retval
  br label %return

if.end.128:                                       ; preds = %if.else
  %151 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool129 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %151, i32 0, i32 79
  %ptr130 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool129, i32 0, i32 3
  %152 = load i8*, i8** %ptr130, align 8
  %153 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool131 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %153, i32 0, i32 79
  %start132 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool131, i32 0, i32 4
  store i8* %152, i8** %start132, align 8
  br label %if.end.133

if.end.133:                                       ; preds = %if.end.128, %if.end.104
  %154 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8
  %prefix = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %154, i32 0, i32 1
  %155 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %tobool134 = icmp ne %struct.prefix* %155, null
  br i1 %tobool134, label %if.then.135, label %if.else.152

if.then.135:                                      ; preds = %if.end.133
  %156 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8
  %xmlns = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %156, i32 0, i32 3
  %157 = load i8, i8* %xmlns, align 1
  %tobool136 = icmp ne i8 %157, 0
  br i1 %tobool136, label %if.then.137, label %if.else.146

if.then.137:                                      ; preds = %if.then.135
  %158 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %159 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8
  %prefix139 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %159, i32 0, i32 1
  %160 = load %struct.prefix*, %struct.prefix** %prefix139, align 8
  %161 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8
  %162 = load i32, i32* %attIndex, align 4
  %idxprom140 = sext i32 %162 to i64
  %163 = load i8**, i8*** %appAtts, align 8
  %arrayidx141 = getelementptr i8*, i8** %163, i64 %idxprom140
  %164 = load i8*, i8** %arrayidx141, align 8
  %165 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8
  %call142 = call i32 @addBinding(%struct.XML_ParserStruct* %158, %struct.prefix* %160, %struct.attribute_id* %161, i8* %164, %struct.binding** %165)
  store i32 %call142, i32* %result138, align 4
  %166 = load i32, i32* %result138, align 4
  %tobool143 = icmp ne i32 %166, 0
  br i1 %tobool143, label %if.then.144, label %if.end.145

if.then.144:                                      ; preds = %if.then.137
  %167 = load i32, i32* %result138, align 4
  store i32 %167, i32* %retval
  br label %return

if.end.145:                                       ; preds = %if.then.137
  %168 = load i32, i32* %attIndex, align 4
  %dec = add i32 %168, -1
  store i32 %dec, i32* %attIndex, align 4
  br label %if.end.151

if.else.146:                                      ; preds = %if.then.135
  %169 = load i32, i32* %attIndex, align 4
  %inc147 = add i32 %169, 1
  store i32 %inc147, i32* %attIndex, align 4
  %170 = load i32, i32* %nPrefixes, align 4
  %inc148 = add i32 %170, 1
  store i32 %inc148, i32* %nPrefixes, align 4
  %171 = load %struct.attribute_id*, %struct.attribute_id** %attId, align 8
  %name149 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %171, i32 0, i32 0
  %172 = load i8*, i8** %name149, align 8
  %arrayidx150 = getelementptr i8, i8* %172, i64 -1
  store i8 2, i8* %arrayidx150, align 1
  br label %if.end.151

if.end.151:                                       ; preds = %if.else.146, %if.end.145
  br label %if.end.154

if.else.152:                                      ; preds = %if.end.133
  %173 = load i32, i32* %attIndex, align 4
  %inc153 = add i32 %173, 1
  store i32 %inc153, i32* %attIndex, align 4
  br label %if.end.154

if.end.154:                                       ; preds = %if.else.152, %if.end.151
  br label %for.inc.155

for.inc.155:                                      ; preds = %if.end.154
  %174 = load i32, i32* %i, align 4
  %inc156 = add i32 %174, 1
  store i32 %inc156, i32* %i, align 4
  br label %for.cond

for.end.157:                                      ; preds = %for.cond
  %175 = load i32, i32* %attIndex, align 4
  %176 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nSpecifiedAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %176, i32 0, i32 72
  store i32 %175, i32* %m_nSpecifiedAtts, align 4
  %177 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8
  %idAtt = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %177, i32 0, i32 2
  %178 = load %struct.attribute_id*, %struct.attribute_id** %idAtt, align 8
  %tobool158 = icmp ne %struct.attribute_id* %178, null
  br i1 %tobool158, label %land.lhs.true.159, label %if.else.181

land.lhs.true.159:                                ; preds = %for.end.157
  %179 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8
  %idAtt160 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %179, i32 0, i32 2
  %180 = load %struct.attribute_id*, %struct.attribute_id** %idAtt160, align 8
  %name161 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %180, i32 0, i32 0
  %181 = load i8*, i8** %name161, align 8
  %arrayidx162 = getelementptr i8, i8* %181, i64 -1
  %182 = load i8, i8* %arrayidx162, align 1
  %conv163 = sext i8 %182 to i32
  %tobool164 = icmp ne i32 %conv163, 0
  br i1 %tobool164, label %if.then.165, label %if.else.181

if.then.165:                                      ; preds = %land.lhs.true.159
  store i32 0, i32* %i, align 4
  br label %for.cond.166

for.cond.166:                                     ; preds = %for.inc.178, %if.then.165
  %183 = load i32, i32* %i, align 4
  %184 = load i32, i32* %attIndex, align 4
  %cmp167 = icmp slt i32 %183, %184
  br i1 %cmp167, label %for.body.169, label %for.end.180

for.body.169:                                     ; preds = %for.cond.166
  %185 = load i32, i32* %i, align 4
  %idxprom170 = sext i32 %185 to i64
  %186 = load i8**, i8*** %appAtts, align 8
  %arrayidx171 = getelementptr i8*, i8** %186, i64 %idxprom170
  %187 = load i8*, i8** %arrayidx171, align 8
  %188 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8
  %idAtt172 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %188, i32 0, i32 2
  %189 = load %struct.attribute_id*, %struct.attribute_id** %idAtt172, align 8
  %name173 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %189, i32 0, i32 0
  %190 = load i8*, i8** %name173, align 8
  %cmp174 = icmp eq i8* %187, %190
  br i1 %cmp174, label %if.then.176, label %if.end.177

if.then.176:                                      ; preds = %for.body.169
  %191 = load i32, i32* %i, align 4
  %192 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_idAttIndex = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %192, i32 0, i32 73
  store i32 %191, i32* %m_idAttIndex, align 4
  br label %for.end.180

if.end.177:                                       ; preds = %for.body.169
  br label %for.inc.178

for.inc.178:                                      ; preds = %if.end.177
  %193 = load i32, i32* %i, align 4
  %add179 = add i32 %193, 2
  store i32 %add179, i32* %i, align 4
  br label %for.cond.166

for.end.180:                                      ; preds = %if.then.176, %for.cond.166
  br label %if.end.183

if.else.181:                                      ; preds = %land.lhs.true.159, %for.end.157
  %194 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_idAttIndex182 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %194, i32 0, i32 73
  store i32 -1, i32* %m_idAttIndex182, align 4
  br label %if.end.183

if.end.183:                                       ; preds = %if.else.181, %for.end.180
  store i32 0, i32* %i, align 4
  br label %for.cond.184

for.cond.184:                                     ; preds = %for.inc.245, %if.end.183
  %195 = load i32, i32* %i, align 4
  %196 = load i32, i32* %nDefaultAtts, align 4
  %cmp185 = icmp slt i32 %195, %196
  br i1 %cmp185, label %for.body.187, label %for.end.247

for.body.187:                                     ; preds = %for.cond.184
  %197 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8
  %defaultAtts188 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %197, i32 0, i32 5
  %198 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %defaultAtts188, align 8
  %199 = load i32, i32* %i, align 4
  %idx.ext189 = sext i32 %199 to i64
  %add.ptr190 = getelementptr %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %198, i64 %idx.ext189
  store %struct.DEFAULT_ATTRIBUTE* %add.ptr190, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %200 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %id191 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %200, i32 0, i32 0
  %201 = load %struct.attribute_id*, %struct.attribute_id** %id191, align 8
  %name192 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %201, i32 0, i32 0
  %202 = load i8*, i8** %name192, align 8
  %arrayidx193 = getelementptr i8, i8* %202, i64 -1
  %203 = load i8, i8* %arrayidx193, align 1
  %tobool194 = icmp ne i8 %203, 0
  br i1 %tobool194, label %if.end.244, label %land.lhs.true.195

land.lhs.true.195:                                ; preds = %for.body.187
  %204 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %value = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %204, i32 0, i32 2
  %205 = load i8*, i8** %value, align 8
  %tobool196 = icmp ne i8* %205, null
  br i1 %tobool196, label %if.then.197, label %if.end.244

if.then.197:                                      ; preds = %land.lhs.true.195
  %206 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %id198 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %206, i32 0, i32 0
  %207 = load %struct.attribute_id*, %struct.attribute_id** %id198, align 8
  %prefix199 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %207, i32 0, i32 1
  %208 = load %struct.prefix*, %struct.prefix** %prefix199, align 8
  %tobool200 = icmp ne %struct.prefix* %208, null
  br i1 %tobool200, label %if.then.201, label %if.else.230

if.then.201:                                      ; preds = %if.then.197
  %209 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %id202 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %209, i32 0, i32 0
  %210 = load %struct.attribute_id*, %struct.attribute_id** %id202, align 8
  %xmlns203 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %210, i32 0, i32 3
  %211 = load i8, i8* %xmlns203, align 1
  %tobool204 = icmp ne i8 %211, 0
  br i1 %tobool204, label %if.then.205, label %if.else.215

if.then.205:                                      ; preds = %if.then.201
  %212 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %213 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %id207 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %213, i32 0, i32 0
  %214 = load %struct.attribute_id*, %struct.attribute_id** %id207, align 8
  %prefix208 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %214, i32 0, i32 1
  %215 = load %struct.prefix*, %struct.prefix** %prefix208, align 8
  %216 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %id209 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %216, i32 0, i32 0
  %217 = load %struct.attribute_id*, %struct.attribute_id** %id209, align 8
  %218 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %value210 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %218, i32 0, i32 2
  %219 = load i8*, i8** %value210, align 8
  %220 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8
  %call211 = call i32 @addBinding(%struct.XML_ParserStruct* %212, %struct.prefix* %215, %struct.attribute_id* %217, i8* %219, %struct.binding** %220)
  store i32 %call211, i32* %result206, align 4
  %221 = load i32, i32* %result206, align 4
  %tobool212 = icmp ne i32 %221, 0
  br i1 %tobool212, label %if.then.213, label %if.end.214

if.then.213:                                      ; preds = %if.then.205
  %222 = load i32, i32* %result206, align 4
  store i32 %222, i32* %retval
  br label %return

if.end.214:                                       ; preds = %if.then.205
  br label %if.end.229

if.else.215:                                      ; preds = %if.then.201
  %223 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %id216 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %223, i32 0, i32 0
  %224 = load %struct.attribute_id*, %struct.attribute_id** %id216, align 8
  %name217 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %224, i32 0, i32 0
  %225 = load i8*, i8** %name217, align 8
  %arrayidx218 = getelementptr i8, i8* %225, i64 -1
  store i8 2, i8* %arrayidx218, align 1
  %226 = load i32, i32* %nPrefixes, align 4
  %inc219 = add i32 %226, 1
  store i32 %inc219, i32* %nPrefixes, align 4
  %227 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %id220 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %227, i32 0, i32 0
  %228 = load %struct.attribute_id*, %struct.attribute_id** %id220, align 8
  %name221 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %228, i32 0, i32 0
  %229 = load i8*, i8** %name221, align 8
  %230 = load i32, i32* %attIndex, align 4
  %inc222 = add i32 %230, 1
  store i32 %inc222, i32* %attIndex, align 4
  %idxprom223 = sext i32 %230 to i64
  %231 = load i8**, i8*** %appAtts, align 8
  %arrayidx224 = getelementptr i8*, i8** %231, i64 %idxprom223
  store i8* %229, i8** %arrayidx224, align 8
  %232 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %value225 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %232, i32 0, i32 2
  %233 = load i8*, i8** %value225, align 8
  %234 = load i32, i32* %attIndex, align 4
  %inc226 = add i32 %234, 1
  store i32 %inc226, i32* %attIndex, align 4
  %idxprom227 = sext i32 %234 to i64
  %235 = load i8**, i8*** %appAtts, align 8
  %arrayidx228 = getelementptr i8*, i8** %235, i64 %idxprom227
  store i8* %233, i8** %arrayidx228, align 8
  br label %if.end.229

if.end.229:                                       ; preds = %if.else.215, %if.end.214
  br label %if.end.243

if.else.230:                                      ; preds = %if.then.197
  %236 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %id231 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %236, i32 0, i32 0
  %237 = load %struct.attribute_id*, %struct.attribute_id** %id231, align 8
  %name232 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %237, i32 0, i32 0
  %238 = load i8*, i8** %name232, align 8
  %arrayidx233 = getelementptr i8, i8* %238, i64 -1
  store i8 1, i8* %arrayidx233, align 1
  %239 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %id234 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %239, i32 0, i32 0
  %240 = load %struct.attribute_id*, %struct.attribute_id** %id234, align 8
  %name235 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %240, i32 0, i32 0
  %241 = load i8*, i8** %name235, align 8
  %242 = load i32, i32* %attIndex, align 4
  %inc236 = add i32 %242, 1
  store i32 %inc236, i32* %attIndex, align 4
  %idxprom237 = sext i32 %242 to i64
  %243 = load i8**, i8*** %appAtts, align 8
  %arrayidx238 = getelementptr i8*, i8** %243, i64 %idxprom237
  store i8* %241, i8** %arrayidx238, align 8
  %244 = load %struct.DEFAULT_ATTRIBUTE*, %struct.DEFAULT_ATTRIBUTE** %da, align 8
  %value239 = getelementptr inbounds %struct.DEFAULT_ATTRIBUTE, %struct.DEFAULT_ATTRIBUTE* %244, i32 0, i32 2
  %245 = load i8*, i8** %value239, align 8
  %246 = load i32, i32* %attIndex, align 4
  %inc240 = add i32 %246, 1
  store i32 %inc240, i32* %attIndex, align 4
  %idxprom241 = sext i32 %246 to i64
  %247 = load i8**, i8*** %appAtts, align 8
  %arrayidx242 = getelementptr i8*, i8** %247, i64 %idxprom241
  store i8* %245, i8** %arrayidx242, align 8
  br label %if.end.243

if.end.243:                                       ; preds = %if.else.230, %if.end.229
  br label %if.end.244

if.end.244:                                       ; preds = %if.end.243, %land.lhs.true.195, %for.body.187
  br label %for.inc.245

for.inc.245:                                      ; preds = %if.end.244
  %248 = load i32, i32* %i, align 4
  %inc246 = add i32 %248, 1
  store i32 %inc246, i32* %i, align 4
  br label %for.cond.184

for.end.247:                                      ; preds = %for.cond.184
  %249 = load i32, i32* %attIndex, align 4
  %idxprom248 = sext i32 %249 to i64
  %250 = load i8**, i8*** %appAtts, align 8
  %arrayidx249 = getelementptr i8*, i8** %250, i64 %idxprom248
  store i8* null, i8** %arrayidx249, align 8
  store i32 0, i32* %i, align 4
  %251 = load i32, i32* %nPrefixes, align 4
  %tobool250 = icmp ne i32 %251, 0
  br i1 %tobool250, label %if.then.251, label %if.end.497

if.then.251:                                      ; preds = %for.end.247
  %252 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAttsVersion = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %252, i32 0, i32 76
  %253 = load i64, i64* %m_nsAttsVersion, align 8
  store i64 %253, i64* %version, align 8
  %254 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAttsPower = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %254, i32 0, i32 77
  %255 = load i8, i8* %m_nsAttsPower, align 1
  %conv253 = zext i8 %255 to i32
  %shl = shl i32 1, %conv253
  store i32 %shl, i32* %nsAttsSize, align 4
  %256 = load i32, i32* %nPrefixes, align 4
  %shl254 = shl i32 %256, 1
  %257 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAttsPower255 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %257, i32 0, i32 77
  %258 = load i8, i8* %m_nsAttsPower255, align 1
  %conv256 = zext i8 %258 to i32
  %shr = ashr i32 %shl254, %conv256
  %tobool257 = icmp ne i32 %shr, 0
  br i1 %tobool257, label %if.then.258, label %if.end.284

if.then.258:                                      ; preds = %if.then.251
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.258
  %259 = load i32, i32* %nPrefixes, align 4
  %260 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAttsPower260 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %260, i32 0, i32 77
  %261 = load i8, i8* %m_nsAttsPower260, align 1
  %inc261 = add i8 %261, 1
  store i8 %inc261, i8* %m_nsAttsPower260, align 1
  %conv262 = zext i8 %261 to i32
  %shr263 = ashr i32 %259, %conv262
  %tobool264 = icmp ne i32 %shr263, 0
  br i1 %tobool264, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %262 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAttsPower265 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %262, i32 0, i32 77
  %263 = load i8, i8* %m_nsAttsPower265, align 1
  %conv266 = zext i8 %263 to i32
  %cmp267 = icmp slt i32 %conv266, 3
  br i1 %cmp267, label %if.then.269, label %if.end.271

if.then.269:                                      ; preds = %while.end
  %264 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAttsPower270 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %264, i32 0, i32 77
  store i8 3, i8* %m_nsAttsPower270, align 1
  br label %if.end.271

if.end.271:                                       ; preds = %if.then.269, %while.end
  %265 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAttsPower272 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %265, i32 0, i32 77
  %266 = load i8, i8* %m_nsAttsPower272, align 1
  %conv273 = zext i8 %266 to i32
  %shl274 = shl i32 1, %conv273
  store i32 %shl274, i32* %nsAttsSize, align 4
  %267 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem275 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %267, i32 0, i32 3
  %realloc_fcn276 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem275, i32 0, i32 1
  %268 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn276, align 8
  %269 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAtts = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %269, i32 0, i32 75
  %270 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts, align 8
  %271 = bitcast %struct.NS_ATT* %270 to i8*
  %272 = load i32, i32* %nsAttsSize, align 4
  %conv277 = sext i32 %272 to i64
  %mul278 = mul i64 %conv277, 24
  %call279 = call i8* %268(i8* %271, i64 %mul278)
  %273 = bitcast i8* %call279 to %struct.NS_ATT*
  store %struct.NS_ATT* %273, %struct.NS_ATT** %temp259, align 8
  %274 = load %struct.NS_ATT*, %struct.NS_ATT** %temp259, align 8
  %tobool280 = icmp ne %struct.NS_ATT* %274, null
  br i1 %tobool280, label %if.end.282, label %if.then.281

if.then.281:                                      ; preds = %if.end.271
  store i32 1, i32* %retval
  br label %return

if.end.282:                                       ; preds = %if.end.271
  %275 = load %struct.NS_ATT*, %struct.NS_ATT** %temp259, align 8
  %276 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAtts283 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %276, i32 0, i32 75
  store %struct.NS_ATT* %275, %struct.NS_ATT** %m_nsAtts283, align 8
  store i64 0, i64* %version, align 8
  br label %if.end.284

if.end.284:                                       ; preds = %if.end.282, %if.then.251
  %277 = load i64, i64* %version, align 8
  %tobool285 = icmp ne i64 %277, 0
  br i1 %tobool285, label %if.end.297, label %if.then.286

if.then.286:                                      ; preds = %if.end.284
  store i64 4294967295, i64* %version, align 8
  %278 = load i32, i32* %nsAttsSize, align 4
  store i32 %278, i32* %j252, align 4
  br label %for.cond.287

for.cond.287:                                     ; preds = %for.body.290, %if.then.286
  %279 = load i32, i32* %j252, align 4
  %cmp288 = icmp ne i32 %279, 0
  br i1 %cmp288, label %for.body.290, label %for.end.296

for.body.290:                                     ; preds = %for.cond.287
  %280 = load i64, i64* %version, align 8
  %281 = load i32, i32* %j252, align 4
  %dec291 = add i32 %281, -1
  store i32 %dec291, i32* %j252, align 4
  %idxprom292 = sext i32 %dec291 to i64
  %282 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAtts293 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %282, i32 0, i32 75
  %283 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts293, align 8
  %arrayidx294 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %283, i64 %idxprom292
  %version295 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx294, i32 0, i32 0
  store i64 %280, i64* %version295, align 8
  br label %for.cond.287

for.end.296:                                      ; preds = %for.cond.287
  br label %if.end.297

if.end.297:                                       ; preds = %for.end.296, %if.end.284
  %284 = load i64, i64* %version, align 8
  %dec298 = add i64 %284, -1
  store i64 %dec298, i64* %version, align 8
  %285 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAttsVersion299 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %285, i32 0, i32 76
  store i64 %dec298, i64* %m_nsAttsVersion299, align 8
  br label %for.cond.300

for.cond.300:                                     ; preds = %for.inc.494, %if.end.297
  %286 = load i32, i32* %i, align 4
  %287 = load i32, i32* %attIndex, align 4
  %cmp301 = icmp slt i32 %286, %287
  br i1 %cmp301, label %for.body.303, label %for.end.496

for.body.303:                                     ; preds = %for.cond.300
  %288 = load i32, i32* %i, align 4
  %idxprom304 = sext i32 %288 to i64
  %289 = load i8**, i8*** %appAtts, align 8
  %arrayidx305 = getelementptr i8*, i8** %289, i64 %idxprom304
  %290 = load i8*, i8** %arrayidx305, align 8
  store i8* %290, i8** %s, align 8
  %291 = load i8*, i8** %s, align 8
  %arrayidx306 = getelementptr i8, i8* %291, i64 -1
  %292 = load i8, i8* %arrayidx306, align 1
  %conv307 = sext i8 %292 to i32
  %cmp308 = icmp eq i32 %conv307, 2
  br i1 %cmp308, label %if.then.310, label %if.else.491

if.then.310:                                      ; preds = %for.body.303
  %293 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_hash_secret_salt = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %293, i32 0, i32 89
  %294 = load i64, i64* %m_hash_secret_salt, align 8
  store i64 %294, i64* %uriHash, align 8
  %295 = load i8*, i8** %s, align 8
  %arrayidx312 = getelementptr i8, i8* %295, i64 -1
  store i8 0, i8* %arrayidx312, align 1
  %296 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %297 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %attributeIds = getelementptr inbounds %struct.DTD, %struct.DTD* %297, i32 0, i32 2
  %298 = load i8*, i8** %s, align 8
  %call313 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %296, %struct.HASH_TABLE* %attributeIds, i8* %298, i64 0)
  %299 = bitcast %struct.NAMED* %call313 to %struct.attribute_id*
  store %struct.attribute_id* %299, %struct.attribute_id** %id311, align 8
  %300 = load %struct.attribute_id*, %struct.attribute_id** %id311, align 8
  %prefix314 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %300, i32 0, i32 1
  %301 = load %struct.prefix*, %struct.prefix** %prefix314, align 8
  %binding315 = getelementptr inbounds %struct.prefix, %struct.prefix* %301, i32 0, i32 1
  %302 = load %struct.binding*, %struct.binding** %binding315, align 8
  store %struct.binding* %302, %struct.binding** %b, align 8
  %303 = load %struct.binding*, %struct.binding** %b, align 8
  %tobool316 = icmp ne %struct.binding* %303, null
  br i1 %tobool316, label %if.end.318, label %if.then.317

if.then.317:                                      ; preds = %if.then.310
  store i32 27, i32* %retval
  br label %return

if.end.318:                                       ; preds = %if.then.310
  store i32 0, i32* %j252, align 4
  br label %for.cond.319

for.cond.319:                                     ; preds = %for.inc.341, %if.end.318
  %304 = load i32, i32* %j252, align 4
  %305 = load %struct.binding*, %struct.binding** %b, align 8
  %uriLen = getelementptr inbounds %struct.binding, %struct.binding* %305, i32 0, i32 5
  %306 = load i32, i32* %uriLen, align 4
  %cmp320 = icmp slt i32 %304, %306
  br i1 %cmp320, label %for.body.322, label %for.end.343

for.body.322:                                     ; preds = %for.cond.319
  %307 = load i32, i32* %j252, align 4
  %idxprom323 = sext i32 %307 to i64
  %308 = load %struct.binding*, %struct.binding** %b, align 8
  %uri324 = getelementptr inbounds %struct.binding, %struct.binding* %308, i32 0, i32 4
  %309 = load i8*, i8** %uri324, align 8
  %arrayidx325 = getelementptr i8, i8* %309, i64 %idxprom323
  %310 = load i8, i8* %arrayidx325, align 1
  store i8 %310, i8* %c, align 1
  %311 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool326 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %311, i32 0, i32 79
  %ptr327 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool326, i32 0, i32 3
  %312 = load i8*, i8** %ptr327, align 8
  %313 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool328 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %313, i32 0, i32 79
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool328, i32 0, i32 2
  %314 = load i8*, i8** %end, align 8
  %cmp329 = icmp eq i8* %312, %314
  br i1 %cmp329, label %land.lhs.true.331, label %cond.false

land.lhs.true.331:                                ; preds = %for.body.322
  %315 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool332 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %315, i32 0, i32 79
  %call333 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool332)
  %tobool334 = icmp ne i8 %call333, 0
  br i1 %tobool334, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true.331
  br i1 false, label %if.end.338, label %if.then.337

cond.false:                                       ; preds = %land.lhs.true.331, %for.body.322
  %316 = load i8, i8* %c, align 1
  %317 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool335 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %317, i32 0, i32 79
  %ptr336 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool335, i32 0, i32 3
  %318 = load i8*, i8** %ptr336, align 8
  %incdec.ptr = getelementptr i8, i8* %318, i32 1
  store i8* %incdec.ptr, i8** %ptr336, align 8
  store i8 %316, i8* %318, align 1
  br i1 true, label %if.end.338, label %if.then.337

if.then.337:                                      ; preds = %cond.false, %cond.true
  store i32 1, i32* %retval
  br label %return

if.end.338:                                       ; preds = %cond.false, %cond.true
  %319 = load i64, i64* %uriHash, align 8
  %mul339 = mul i64 %319, 1000003
  %320 = load i8, i8* %c, align 1
  %conv340 = zext i8 %320 to i64
  %xor = xor i64 %mul339, %conv340
  store i64 %xor, i64* %uriHash, align 8
  br label %for.inc.341

for.inc.341:                                      ; preds = %if.end.338
  %321 = load i32, i32* %j252, align 4
  %inc342 = add i32 %321, 1
  store i32 %inc342, i32* %j252, align 4
  br label %for.cond.319

for.end.343:                                      ; preds = %for.cond.319
  br label %while.cond.344

while.cond.344:                                   ; preds = %while.body.349, %for.end.343
  %322 = load i8*, i8** %s, align 8
  %incdec.ptr345 = getelementptr i8, i8* %322, i32 1
  store i8* %incdec.ptr345, i8** %s, align 8
  %323 = load i8, i8* %322, align 1
  %conv346 = sext i8 %323 to i32
  %cmp347 = icmp ne i32 %conv346, 58
  br i1 %cmp347, label %while.body.349, label %while.end.350

while.body.349:                                   ; preds = %while.cond.344
  br label %while.cond.344

while.end.350:                                    ; preds = %while.cond.344
  br label %do.body

do.body:                                          ; preds = %do.cond, %while.end.350
  %324 = load i8*, i8** %s, align 8
  %325 = load i8, i8* %324, align 1
  store i8 %325, i8* %c351, align 1
  %326 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool352 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %326, i32 0, i32 79
  %ptr353 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool352, i32 0, i32 3
  %327 = load i8*, i8** %ptr353, align 8
  %328 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool354 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %328, i32 0, i32 79
  %end355 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool354, i32 0, i32 2
  %329 = load i8*, i8** %end355, align 8
  %cmp356 = icmp eq i8* %327, %329
  br i1 %cmp356, label %land.lhs.true.358, label %cond.false.363

land.lhs.true.358:                                ; preds = %do.body
  %330 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool359 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %330, i32 0, i32 79
  %call360 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool359)
  %tobool361 = icmp ne i8 %call360, 0
  br i1 %tobool361, label %cond.false.363, label %cond.true.362

cond.true.362:                                    ; preds = %land.lhs.true.358
  br i1 false, label %if.end.368, label %if.then.367

cond.false.363:                                   ; preds = %land.lhs.true.358, %do.body
  %331 = load i8*, i8** %s, align 8
  %332 = load i8, i8* %331, align 1
  %333 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool364 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %333, i32 0, i32 79
  %ptr365 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool364, i32 0, i32 3
  %334 = load i8*, i8** %ptr365, align 8
  %incdec.ptr366 = getelementptr i8, i8* %334, i32 1
  store i8* %incdec.ptr366, i8** %ptr365, align 8
  store i8 %332, i8* %334, align 1
  br i1 true, label %if.end.368, label %if.then.367

if.then.367:                                      ; preds = %cond.false.363, %cond.true.362
  store i32 1, i32* %retval
  br label %return

if.end.368:                                       ; preds = %cond.false.363, %cond.true.362
  %335 = load i64, i64* %uriHash, align 8
  %mul369 = mul i64 %335, 1000003
  %336 = load i8, i8* %c351, align 1
  %conv370 = zext i8 %336 to i64
  %xor371 = xor i64 %mul369, %conv370
  store i64 %xor371, i64* %uriHash, align 8
  br label %do.cond

do.cond:                                          ; preds = %if.end.368
  %337 = load i8*, i8** %s, align 8
  %incdec.ptr372 = getelementptr i8, i8* %337, i32 1
  store i8* %incdec.ptr372, i8** %s, align 8
  %338 = load i8, i8* %337, align 1
  %tobool373 = icmp ne i8 %338, 0
  br i1 %tobool373, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  store i8 0, i8* %step, align 1
  %339 = load i32, i32* %nsAttsSize, align 4
  %sub = sub i32 %339, 1
  %conv374 = sext i32 %sub to i64
  store i64 %conv374, i64* %mask, align 8
  %340 = load i64, i64* %uriHash, align 8
  %341 = load i64, i64* %mask, align 8
  %and = and i64 %340, %341
  %conv375 = trunc i64 %and to i32
  store i32 %conv375, i32* %j252, align 4
  br label %while.cond.376

while.cond.376:                                   ; preds = %cond.end, %do.end
  %342 = load i32, i32* %j252, align 4
  %idxprom377 = sext i32 %342 to i64
  %343 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAtts378 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %343, i32 0, i32 75
  %344 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts378, align 8
  %arrayidx379 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %344, i64 %idxprom377
  %version380 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx379, i32 0, i32 0
  %345 = load i64, i64* %version380, align 8
  %346 = load i64, i64* %version, align 8
  %cmp381 = icmp eq i64 %345, %346
  br i1 %cmp381, label %while.body.383, label %while.end.435

while.body.383:                                   ; preds = %while.cond.376
  %347 = load i64, i64* %uriHash, align 8
  %348 = load i32, i32* %j252, align 4
  %idxprom384 = sext i32 %348 to i64
  %349 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAtts385 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %349, i32 0, i32 75
  %350 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts385, align 8
  %arrayidx386 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %350, i64 %idxprom384
  %hash = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx386, i32 0, i32 1
  %351 = load i64, i64* %hash, align 8
  %cmp387 = icmp eq i64 %347, %351
  br i1 %cmp387, label %if.then.389, label %if.end.413

if.then.389:                                      ; preds = %while.body.383
  %352 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool390 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %352, i32 0, i32 79
  %start391 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool390, i32 0, i32 4
  %353 = load i8*, i8** %start391, align 8
  store i8* %353, i8** %s1, align 8
  %354 = load i32, i32* %j252, align 4
  %idxprom392 = sext i32 %354 to i64
  %355 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAtts393 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %355, i32 0, i32 75
  %356 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts393, align 8
  %arrayidx394 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %356, i64 %idxprom392
  %uriName = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx394, i32 0, i32 2
  %357 = load i8*, i8** %uriName, align 8
  store i8* %357, i8** %s2, align 8
  br label %for.cond.395

for.cond.395:                                     ; preds = %for.inc.404, %if.then.389
  %358 = load i8*, i8** %s1, align 8
  %359 = load i8, i8* %358, align 1
  %conv396 = sext i8 %359 to i32
  %360 = load i8*, i8** %s2, align 8
  %361 = load i8, i8* %360, align 1
  %conv397 = sext i8 %361 to i32
  %cmp398 = icmp eq i32 %conv396, %conv397
  br i1 %cmp398, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.395
  %362 = load i8*, i8** %s1, align 8
  %363 = load i8, i8* %362, align 1
  %conv400 = sext i8 %363 to i32
  %cmp401 = icmp ne i32 %conv400, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.395
  %364 = phi i1 [ false, %for.cond.395 ], [ %cmp401, %land.rhs ]
  br i1 %364, label %for.body.403, label %for.end.407

for.body.403:                                     ; preds = %land.end
  br label %for.inc.404

for.inc.404:                                      ; preds = %for.body.403
  %365 = load i8*, i8** %s1, align 8
  %incdec.ptr405 = getelementptr i8, i8* %365, i32 1
  store i8* %incdec.ptr405, i8** %s1, align 8
  %366 = load i8*, i8** %s2, align 8
  %incdec.ptr406 = getelementptr i8, i8* %366, i32 1
  store i8* %incdec.ptr406, i8** %s2, align 8
  br label %for.cond.395

for.end.407:                                      ; preds = %land.end
  %367 = load i8*, i8** %s1, align 8
  %368 = load i8, i8* %367, align 1
  %conv408 = sext i8 %368 to i32
  %cmp409 = icmp eq i32 %conv408, 0
  br i1 %cmp409, label %if.then.411, label %if.end.412

if.then.411:                                      ; preds = %for.end.407
  store i32 8, i32* %retval
  br label %return

if.end.412:                                       ; preds = %for.end.407
  br label %if.end.413

if.end.413:                                       ; preds = %if.end.412, %while.body.383
  %369 = load i8, i8* %step, align 1
  %tobool414 = icmp ne i8 %369, 0
  br i1 %tobool414, label %if.end.424, label %if.then.415

if.then.415:                                      ; preds = %if.end.413
  %370 = load i64, i64* %uriHash, align 8
  %371 = load i64, i64* %mask, align 8
  %neg = xor i64 %371, -1
  %and416 = and i64 %370, %neg
  %372 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAttsPower417 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %372, i32 0, i32 77
  %373 = load i8, i8* %m_nsAttsPower417, align 1
  %conv418 = zext i8 %373 to i32
  %sub419 = sub i32 %conv418, 1
  %sh_prom = zext i32 %sub419 to i64
  %shr420 = lshr i64 %and416, %sh_prom
  %374 = load i64, i64* %mask, align 8
  %shr421 = lshr i64 %374, 2
  %and422 = and i64 %shr420, %shr421
  %or = or i64 %and422, 1
  %conv423 = trunc i64 %or to i8
  store i8 %conv423, i8* %step, align 1
  br label %if.end.424

if.end.424:                                       ; preds = %if.then.415, %if.end.413
  %375 = load i32, i32* %j252, align 4
  %376 = load i8, i8* %step, align 1
  %conv425 = zext i8 %376 to i32
  %cmp426 = icmp slt i32 %375, %conv425
  br i1 %cmp426, label %cond.true.428, label %cond.false.432

cond.true.428:                                    ; preds = %if.end.424
  %377 = load i32, i32* %nsAttsSize, align 4
  %378 = load i8, i8* %step, align 1
  %conv429 = zext i8 %378 to i32
  %sub430 = sub i32 %377, %conv429
  %379 = load i32, i32* %j252, align 4
  %add431 = add i32 %379, %sub430
  store i32 %add431, i32* %j252, align 4
  br label %cond.end

cond.false.432:                                   ; preds = %if.end.424
  %380 = load i8, i8* %step, align 1
  %conv433 = zext i8 %380 to i32
  %381 = load i32, i32* %j252, align 4
  %sub434 = sub i32 %381, %conv433
  store i32 %sub434, i32* %j252, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false.432, %cond.true.428
  %cond = phi i32 [ %add431, %cond.true.428 ], [ %sub434, %cond.false.432 ]
  br label %while.cond.376

while.end.435:                                    ; preds = %while.cond.376
  %382 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_ns_triplets = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %382, i32 0, i32 39
  %383 = load i8, i8* %m_ns_triplets, align 1
  %tobool436 = icmp ne i8 %383, 0
  br i1 %tobool436, label %if.then.437, label %if.end.465

if.then.437:                                      ; preds = %while.end.435
  %384 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %384, i32 0, i32 83
  %385 = load i8, i8* %m_namespaceSeparator, align 1
  %386 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool438 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %386, i32 0, i32 79
  %ptr439 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool438, i32 0, i32 3
  %387 = load i8*, i8** %ptr439, align 8
  %arrayidx440 = getelementptr i8, i8* %387, i64 -1
  store i8 %385, i8* %arrayidx440, align 1
  %388 = load %struct.binding*, %struct.binding** %b, align 8
  %prefix441 = getelementptr inbounds %struct.binding, %struct.binding* %388, i32 0, i32 0
  %389 = load %struct.prefix*, %struct.prefix** %prefix441, align 8
  %name442 = getelementptr inbounds %struct.prefix, %struct.prefix* %389, i32 0, i32 0
  %390 = load i8*, i8** %name442, align 8
  store i8* %390, i8** %s, align 8
  br label %do.body.443

do.body.443:                                      ; preds = %do.cond.461, %if.then.437
  %391 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool444 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %391, i32 0, i32 79
  %ptr445 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool444, i32 0, i32 3
  %392 = load i8*, i8** %ptr445, align 8
  %393 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool446 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %393, i32 0, i32 79
  %end447 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool446, i32 0, i32 2
  %394 = load i8*, i8** %end447, align 8
  %cmp448 = icmp eq i8* %392, %394
  br i1 %cmp448, label %land.lhs.true.450, label %cond.false.455

land.lhs.true.450:                                ; preds = %do.body.443
  %395 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool451 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %395, i32 0, i32 79
  %call452 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %m_tempPool451)
  %tobool453 = icmp ne i8 %call452, 0
  br i1 %tobool453, label %cond.false.455, label %cond.true.454

cond.true.454:                                    ; preds = %land.lhs.true.450
  br i1 false, label %if.end.460, label %if.then.459

cond.false.455:                                   ; preds = %land.lhs.true.450, %do.body.443
  %396 = load i8*, i8** %s, align 8
  %397 = load i8, i8* %396, align 1
  %398 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool456 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %398, i32 0, i32 79
  %ptr457 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool456, i32 0, i32 3
  %399 = load i8*, i8** %ptr457, align 8
  %incdec.ptr458 = getelementptr i8, i8* %399, i32 1
  store i8* %incdec.ptr458, i8** %ptr457, align 8
  store i8 %397, i8* %399, align 1
  br i1 true, label %if.end.460, label %if.then.459

if.then.459:                                      ; preds = %cond.false.455, %cond.true.454
  store i32 1, i32* %retval
  br label %return

if.end.460:                                       ; preds = %cond.false.455, %cond.true.454
  br label %do.cond.461

do.cond.461:                                      ; preds = %if.end.460
  %400 = load i8*, i8** %s, align 8
  %incdec.ptr462 = getelementptr i8, i8* %400, i32 1
  store i8* %incdec.ptr462, i8** %s, align 8
  %401 = load i8, i8* %400, align 1
  %tobool463 = icmp ne i8 %401, 0
  br i1 %tobool463, label %do.body.443, label %do.end.464

do.end.464:                                       ; preds = %do.cond.461
  br label %if.end.465

if.end.465:                                       ; preds = %do.end.464, %while.end.435
  %402 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool466 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %402, i32 0, i32 79
  %start467 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool466, i32 0, i32 4
  %403 = load i8*, i8** %start467, align 8
  store i8* %403, i8** %s, align 8
  %404 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool468 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %404, i32 0, i32 79
  %ptr469 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool468, i32 0, i32 3
  %405 = load i8*, i8** %ptr469, align 8
  %406 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tempPool470 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %406, i32 0, i32 79
  %start471 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_tempPool470, i32 0, i32 4
  store i8* %405, i8** %start471, align 8
  %407 = load i8*, i8** %s, align 8
  %408 = load i32, i32* %i, align 4
  %idxprom472 = sext i32 %408 to i64
  %409 = load i8**, i8*** %appAtts, align 8
  %arrayidx473 = getelementptr i8*, i8** %409, i64 %idxprom472
  store i8* %407, i8** %arrayidx473, align 8
  %410 = load i64, i64* %version, align 8
  %411 = load i32, i32* %j252, align 4
  %idxprom474 = sext i32 %411 to i64
  %412 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAtts475 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %412, i32 0, i32 75
  %413 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts475, align 8
  %arrayidx476 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %413, i64 %idxprom474
  %version477 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx476, i32 0, i32 0
  store i64 %410, i64* %version477, align 8
  %414 = load i64, i64* %uriHash, align 8
  %415 = load i32, i32* %j252, align 4
  %idxprom478 = sext i32 %415 to i64
  %416 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAtts479 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %416, i32 0, i32 75
  %417 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts479, align 8
  %arrayidx480 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %417, i64 %idxprom478
  %hash481 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx480, i32 0, i32 1
  store i64 %414, i64* %hash481, align 8
  %418 = load i8*, i8** %s, align 8
  %419 = load i32, i32* %j252, align 4
  %idxprom482 = sext i32 %419 to i64
  %420 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_nsAtts483 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %420, i32 0, i32 75
  %421 = load %struct.NS_ATT*, %struct.NS_ATT** %m_nsAtts483, align 8
  %arrayidx484 = getelementptr %struct.NS_ATT, %struct.NS_ATT* %421, i64 %idxprom482
  %uriName485 = getelementptr inbounds %struct.NS_ATT, %struct.NS_ATT* %arrayidx484, i32 0, i32 2
  store i8* %418, i8** %uriName485, align 8
  %422 = load i32, i32* %nPrefixes, align 4
  %dec486 = add i32 %422, -1
  store i32 %dec486, i32* %nPrefixes, align 4
  %tobool487 = icmp ne i32 %dec486, 0
  br i1 %tobool487, label %if.end.490, label %if.then.488

if.then.488:                                      ; preds = %if.end.465
  %423 = load i32, i32* %i, align 4
  %add489 = add i32 %423, 2
  store i32 %add489, i32* %i, align 4
  br label %for.end.496

if.end.490:                                       ; preds = %if.end.465
  br label %if.end.493

if.else.491:                                      ; preds = %for.body.303
  %424 = load i8*, i8** %s, align 8
  %arrayidx492 = getelementptr i8, i8* %424, i64 -1
  store i8 0, i8* %arrayidx492, align 1
  br label %if.end.493

if.end.493:                                       ; preds = %if.else.491, %if.end.490
  br label %for.inc.494

for.inc.494:                                      ; preds = %if.end.493
  %425 = load i32, i32* %i, align 4
  %add495 = add i32 %425, 2
  store i32 %add495, i32* %i, align 4
  br label %for.cond.300

for.end.496:                                      ; preds = %if.then.488, %for.cond.300
  br label %if.end.497

if.end.497:                                       ; preds = %for.end.496, %for.end.247
  br label %for.cond.498

for.cond.498:                                     ; preds = %for.inc.505, %if.end.497
  %426 = load i32, i32* %i, align 4
  %427 = load i32, i32* %attIndex, align 4
  %cmp499 = icmp slt i32 %426, %427
  br i1 %cmp499, label %for.body.501, label %for.end.507

for.body.501:                                     ; preds = %for.cond.498
  %428 = load i32, i32* %i, align 4
  %idxprom502 = sext i32 %428 to i64
  %429 = load i8**, i8*** %appAtts, align 8
  %arrayidx503 = getelementptr i8*, i8** %429, i64 %idxprom502
  %430 = load i8*, i8** %arrayidx503, align 8
  %arrayidx504 = getelementptr i8, i8* %430, i64 -1
  store i8 0, i8* %arrayidx504, align 1
  br label %for.inc.505

for.inc.505:                                      ; preds = %for.body.501
  %431 = load i32, i32* %i, align 4
  %add506 = add i32 %431, 2
  store i32 %add506, i32* %i, align 4
  br label %for.cond.498

for.end.507:                                      ; preds = %for.cond.498
  %432 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8
  %433 = load %struct.binding*, %struct.binding** %432, align 8
  store %struct.binding* %433, %struct.binding** %binding, align 8
  br label %for.cond.508

for.cond.508:                                     ; preds = %for.inc.514, %for.end.507
  %434 = load %struct.binding*, %struct.binding** %binding, align 8
  %tobool509 = icmp ne %struct.binding* %434, null
  br i1 %tobool509, label %for.body.510, label %for.end.515

for.body.510:                                     ; preds = %for.cond.508
  %435 = load %struct.binding*, %struct.binding** %binding, align 8
  %attId511 = getelementptr inbounds %struct.binding, %struct.binding* %435, i32 0, i32 3
  %436 = load %struct.attribute_id*, %struct.attribute_id** %attId511, align 8
  %name512 = getelementptr inbounds %struct.attribute_id, %struct.attribute_id* %436, i32 0, i32 0
  %437 = load i8*, i8** %name512, align 8
  %arrayidx513 = getelementptr i8, i8* %437, i64 -1
  store i8 0, i8* %arrayidx513, align 1
  br label %for.inc.514

for.inc.514:                                      ; preds = %for.body.510
  %438 = load %struct.binding*, %struct.binding** %binding, align 8
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %438, i32 0, i32 1
  %439 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8
  store %struct.binding* %439, %struct.binding** %binding, align 8
  br label %for.cond.508

for.end.515:                                      ; preds = %for.cond.508
  %440 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_ns516 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %440, i32 0, i32 38
  %441 = load i8, i8* %m_ns516, align 1
  %tobool517 = icmp ne i8 %441, 0
  br i1 %tobool517, label %if.end.519, label %if.then.518

if.then.518:                                      ; preds = %for.end.515
  store i32 0, i32* %retval
  br label %return

if.end.519:                                       ; preds = %for.end.515
  %442 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8
  %prefix520 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %442, i32 0, i32 1
  %443 = load %struct.prefix*, %struct.prefix** %prefix520, align 8
  %tobool521 = icmp ne %struct.prefix* %443, null
  br i1 %tobool521, label %if.then.522, label %if.else.536

if.then.522:                                      ; preds = %if.end.519
  %444 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType, align 8
  %prefix523 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %444, i32 0, i32 1
  %445 = load %struct.prefix*, %struct.prefix** %prefix523, align 8
  %binding524 = getelementptr inbounds %struct.prefix, %struct.prefix* %445, i32 0, i32 1
  %446 = load %struct.binding*, %struct.binding** %binding524, align 8
  store %struct.binding* %446, %struct.binding** %binding, align 8
  %447 = load %struct.binding*, %struct.binding** %binding, align 8
  %tobool525 = icmp ne %struct.binding* %447, null
  br i1 %tobool525, label %if.end.527, label %if.then.526

if.then.526:                                      ; preds = %if.then.522
  store i32 27, i32* %retval
  br label %return

if.end.527:                                       ; preds = %if.then.522
  %448 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8
  %str528 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %448, i32 0, i32 0
  %449 = load i8*, i8** %str528, align 8
  store i8* %449, i8** %localPart, align 8
  br label %while.cond.529

while.cond.529:                                   ; preds = %while.body.534, %if.end.527
  %450 = load i8*, i8** %localPart, align 8
  %incdec.ptr530 = getelementptr i8, i8* %450, i32 1
  store i8* %incdec.ptr530, i8** %localPart, align 8
  %451 = load i8, i8* %450, align 1
  %conv531 = sext i8 %451 to i32
  %cmp532 = icmp ne i32 %conv531, 58
  br i1 %cmp532, label %while.body.534, label %while.end.535

while.body.534:                                   ; preds = %while.cond.529
  br label %while.cond.529

while.end.535:                                    ; preds = %while.cond.529
  br label %if.end.545

if.else.536:                                      ; preds = %if.end.519
  %452 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %452, i32 0, i32 11
  %binding537 = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix, i32 0, i32 1
  %453 = load %struct.binding*, %struct.binding** %binding537, align 8
  %tobool538 = icmp ne %struct.binding* %453, null
  br i1 %tobool538, label %if.then.539, label %if.else.543

if.then.539:                                      ; preds = %if.else.536
  %454 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %defaultPrefix540 = getelementptr inbounds %struct.DTD, %struct.DTD* %454, i32 0, i32 11
  %binding541 = getelementptr inbounds %struct.prefix, %struct.prefix* %defaultPrefix540, i32 0, i32 1
  %455 = load %struct.binding*, %struct.binding** %binding541, align 8
  store %struct.binding* %455, %struct.binding** %binding, align 8
  %456 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8
  %str542 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %456, i32 0, i32 0
  %457 = load i8*, i8** %str542, align 8
  store i8* %457, i8** %localPart, align 8
  br label %if.end.544

if.else.543:                                      ; preds = %if.else.536
  store i32 0, i32* %retval
  br label %return

if.end.544:                                       ; preds = %if.then.539
  br label %if.end.545

if.end.545:                                       ; preds = %if.end.544, %while.end.535
  store i32 0, i32* %prefixLen, align 4
  %458 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_ns_triplets546 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %458, i32 0, i32 39
  %459 = load i8, i8* %m_ns_triplets546, align 1
  %conv547 = zext i8 %459 to i32
  %tobool548 = icmp ne i32 %conv547, 0
  br i1 %tobool548, label %land.lhs.true.549, label %if.end.563

land.lhs.true.549:                                ; preds = %if.end.545
  %460 = load %struct.binding*, %struct.binding** %binding, align 8
  %prefix550 = getelementptr inbounds %struct.binding, %struct.binding* %460, i32 0, i32 0
  %461 = load %struct.prefix*, %struct.prefix** %prefix550, align 8
  %name551 = getelementptr inbounds %struct.prefix, %struct.prefix* %461, i32 0, i32 0
  %462 = load i8*, i8** %name551, align 8
  %tobool552 = icmp ne i8* %462, null
  br i1 %tobool552, label %if.then.553, label %if.end.563

if.then.553:                                      ; preds = %land.lhs.true.549
  br label %for.cond.554

for.cond.554:                                     ; preds = %for.body.561, %if.then.553
  %463 = load i32, i32* %prefixLen, align 4
  %inc555 = add i32 %463, 1
  store i32 %inc555, i32* %prefixLen, align 4
  %idxprom556 = sext i32 %463 to i64
  %464 = load %struct.binding*, %struct.binding** %binding, align 8
  %prefix557 = getelementptr inbounds %struct.binding, %struct.binding* %464, i32 0, i32 0
  %465 = load %struct.prefix*, %struct.prefix** %prefix557, align 8
  %name558 = getelementptr inbounds %struct.prefix, %struct.prefix* %465, i32 0, i32 0
  %466 = load i8*, i8** %name558, align 8
  %arrayidx559 = getelementptr i8, i8* %466, i64 %idxprom556
  %467 = load i8, i8* %arrayidx559, align 1
  %tobool560 = icmp ne i8 %467, 0
  br i1 %tobool560, label %for.body.561, label %for.end.562

for.body.561:                                     ; preds = %for.cond.554
  br label %for.cond.554

for.end.562:                                      ; preds = %for.cond.554
  br label %if.end.563

if.end.563:                                       ; preds = %for.end.562, %land.lhs.true.549, %if.end.545
  %468 = load i8*, i8** %localPart, align 8
  %469 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8
  %localPart564 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %469, i32 0, i32 1
  store i8* %468, i8** %localPart564, align 8
  %470 = load %struct.binding*, %struct.binding** %binding, align 8
  %uriLen565 = getelementptr inbounds %struct.binding, %struct.binding* %470, i32 0, i32 5
  %471 = load i32, i32* %uriLen565, align 4
  %472 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8
  %uriLen566 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %472, i32 0, i32 4
  store i32 %471, i32* %uriLen566, align 4
  %473 = load %struct.binding*, %struct.binding** %binding, align 8
  %prefix567 = getelementptr inbounds %struct.binding, %struct.binding* %473, i32 0, i32 0
  %474 = load %struct.prefix*, %struct.prefix** %prefix567, align 8
  %name568 = getelementptr inbounds %struct.prefix, %struct.prefix* %474, i32 0, i32 0
  %475 = load i8*, i8** %name568, align 8
  %476 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8
  %prefix569 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %476, i32 0, i32 2
  store i8* %475, i8** %prefix569, align 8
  %477 = load i32, i32* %prefixLen, align 4
  %478 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8
  %prefixLen570 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %478, i32 0, i32 5
  store i32 %477, i32* %prefixLen570, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.571

for.cond.571:                                     ; preds = %for.body.576, %if.end.563
  %479 = load i32, i32* %i, align 4
  %inc572 = add i32 %479, 1
  store i32 %inc572, i32* %i, align 4
  %idxprom573 = sext i32 %479 to i64
  %480 = load i8*, i8** %localPart, align 8
  %arrayidx574 = getelementptr i8, i8* %480, i64 %idxprom573
  %481 = load i8, i8* %arrayidx574, align 1
  %tobool575 = icmp ne i8 %481, 0
  br i1 %tobool575, label %for.body.576, label %for.end.577

for.body.576:                                     ; preds = %for.cond.571
  br label %for.cond.571

for.end.577:                                      ; preds = %for.cond.571
  %482 = load i32, i32* %i, align 4
  %483 = load %struct.binding*, %struct.binding** %binding, align 8
  %uriLen578 = getelementptr inbounds %struct.binding, %struct.binding* %483, i32 0, i32 5
  %484 = load i32, i32* %uriLen578, align 4
  %add579 = add i32 %482, %484
  %485 = load i32, i32* %prefixLen, align 4
  %add580 = add i32 %add579, %485
  store i32 %add580, i32* %n, align 4
  %486 = load i32, i32* %n, align 4
  %487 = load %struct.binding*, %struct.binding** %binding, align 8
  %uriAlloc = getelementptr inbounds %struct.binding, %struct.binding* %487, i32 0, i32 6
  %488 = load i32, i32* %uriAlloc, align 4
  %cmp581 = icmp sgt i32 %486, %488
  br i1 %cmp581, label %if.then.583, label %if.end.615

if.then.583:                                      ; preds = %for.end.577
  %489 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem584 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %489, i32 0, i32 3
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem584, i32 0, i32 0
  %490 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %491 = load i32, i32* %n, align 4
  %add585 = add i32 %491, 24
  %conv586 = sext i32 %add585 to i64
  %mul587 = mul i64 %conv586, 1
  %call588 = call i8* %490(i64 %mul587)
  store i8* %call588, i8** %uri, align 8
  %492 = load i8*, i8** %uri, align 8
  %tobool589 = icmp ne i8* %492, null
  br i1 %tobool589, label %if.end.591, label %if.then.590

if.then.590:                                      ; preds = %if.then.583
  store i32 1, i32* %retval
  br label %return

if.end.591:                                       ; preds = %if.then.583
  %493 = load i32, i32* %n, align 4
  %add592 = add i32 %493, 24
  %494 = load %struct.binding*, %struct.binding** %binding, align 8
  %uriAlloc593 = getelementptr inbounds %struct.binding, %struct.binding* %494, i32 0, i32 6
  store i32 %add592, i32* %uriAlloc593, align 4
  %495 = load i8*, i8** %uri, align 8
  %496 = load %struct.binding*, %struct.binding** %binding, align 8
  %uri594 = getelementptr inbounds %struct.binding, %struct.binding* %496, i32 0, i32 4
  %497 = load i8*, i8** %uri594, align 8
  %498 = load %struct.binding*, %struct.binding** %binding, align 8
  %uriLen595 = getelementptr inbounds %struct.binding, %struct.binding* %498, i32 0, i32 5
  %499 = load i32, i32* %uriLen595, align 4
  %conv596 = sext i32 %499 to i64
  %mul597 = mul i64 %conv596, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %495, i8* %497, i64 %mul597, i32 1, i1 false)
  %500 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagStack = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %500, i32 0, i32 67
  %501 = load %struct.tag*, %struct.tag** %m_tagStack, align 8
  store %struct.tag* %501, %struct.tag** %p, align 8
  br label %for.cond.598

for.cond.598:                                     ; preds = %for.inc.610, %if.end.591
  %502 = load %struct.tag*, %struct.tag** %p, align 8
  %tobool599 = icmp ne %struct.tag* %502, null
  br i1 %tobool599, label %for.body.600, label %for.end.611

for.body.600:                                     ; preds = %for.cond.598
  %503 = load %struct.tag*, %struct.tag** %p, align 8
  %name601 = getelementptr inbounds %struct.tag, %struct.tag* %503, i32 0, i32 3
  %str602 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name601, i32 0, i32 0
  %504 = load i8*, i8** %str602, align 8
  %505 = load %struct.binding*, %struct.binding** %binding, align 8
  %uri603 = getelementptr inbounds %struct.binding, %struct.binding* %505, i32 0, i32 4
  %506 = load i8*, i8** %uri603, align 8
  %cmp604 = icmp eq i8* %504, %506
  br i1 %cmp604, label %if.then.606, label %if.end.609

if.then.606:                                      ; preds = %for.body.600
  %507 = load i8*, i8** %uri, align 8
  %508 = load %struct.tag*, %struct.tag** %p, align 8
  %name607 = getelementptr inbounds %struct.tag, %struct.tag* %508, i32 0, i32 3
  %str608 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %name607, i32 0, i32 0
  store i8* %507, i8** %str608, align 8
  br label %if.end.609

if.end.609:                                       ; preds = %if.then.606, %for.body.600
  br label %for.inc.610

for.inc.610:                                      ; preds = %if.end.609
  %509 = load %struct.tag*, %struct.tag** %p, align 8
  %parent = getelementptr inbounds %struct.tag, %struct.tag* %509, i32 0, i32 0
  %510 = load %struct.tag*, %struct.tag** %parent, align 8
  store %struct.tag* %510, %struct.tag** %p, align 8
  br label %for.cond.598

for.end.611:                                      ; preds = %for.cond.598
  %511 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem612 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %511, i32 0, i32 3
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem612, i32 0, i32 2
  %512 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %513 = load %struct.binding*, %struct.binding** %binding, align 8
  %uri613 = getelementptr inbounds %struct.binding, %struct.binding* %513, i32 0, i32 4
  %514 = load i8*, i8** %uri613, align 8
  call void %512(i8* %514)
  %515 = load i8*, i8** %uri, align 8
  %516 = load %struct.binding*, %struct.binding** %binding, align 8
  %uri614 = getelementptr inbounds %struct.binding, %struct.binding* %516, i32 0, i32 4
  store i8* %515, i8** %uri614, align 8
  br label %if.end.615

if.end.615:                                       ; preds = %for.end.611, %for.end.577
  %517 = load %struct.binding*, %struct.binding** %binding, align 8
  %uri616 = getelementptr inbounds %struct.binding, %struct.binding* %517, i32 0, i32 4
  %518 = load i8*, i8** %uri616, align 8
  %519 = load %struct.binding*, %struct.binding** %binding, align 8
  %uriLen617 = getelementptr inbounds %struct.binding, %struct.binding* %519, i32 0, i32 5
  %520 = load i32, i32* %uriLen617, align 4
  %idx.ext618 = sext i32 %520 to i64
  %add.ptr619 = getelementptr i8, i8* %518, i64 %idx.ext618
  store i8* %add.ptr619, i8** %uri, align 8
  %521 = load i8*, i8** %uri, align 8
  %522 = load i8*, i8** %localPart, align 8
  %523 = load i32, i32* %i, align 4
  %conv620 = sext i32 %523 to i64
  %mul621 = mul i64 %conv620, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %521, i8* %522, i64 %mul621, i32 1, i1 false)
  %524 = load i32, i32* %prefixLen, align 4
  %tobool622 = icmp ne i32 %524, 0
  br i1 %tobool622, label %if.then.623, label %if.end.633

if.then.623:                                      ; preds = %if.end.615
  %525 = load i32, i32* %i, align 4
  %sub624 = sub i32 %525, 1
  %526 = load i8*, i8** %uri, align 8
  %idx.ext625 = sext i32 %sub624 to i64
  %add.ptr626 = getelementptr i8, i8* %526, i64 %idx.ext625
  store i8* %add.ptr626, i8** %uri, align 8
  %527 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_namespaceSeparator627 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %527, i32 0, i32 83
  %528 = load i8, i8* %m_namespaceSeparator627, align 1
  %529 = load i8*, i8** %uri, align 8
  store i8 %528, i8* %529, align 1
  %530 = load i8*, i8** %uri, align 8
  %add.ptr628 = getelementptr i8, i8* %530, i64 1
  %531 = load %struct.binding*, %struct.binding** %binding, align 8
  %prefix629 = getelementptr inbounds %struct.binding, %struct.binding* %531, i32 0, i32 0
  %532 = load %struct.prefix*, %struct.prefix** %prefix629, align 8
  %name630 = getelementptr inbounds %struct.prefix, %struct.prefix* %532, i32 0, i32 0
  %533 = load i8*, i8** %name630, align 8
  %534 = load i32, i32* %prefixLen, align 4
  %conv631 = sext i32 %534 to i64
  %mul632 = mul i64 %conv631, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr628, i8* %533, i64 %mul632, i32 1, i1 false)
  br label %if.end.633

if.end.633:                                       ; preds = %if.then.623, %if.end.615
  %535 = load %struct.binding*, %struct.binding** %binding, align 8
  %uri634 = getelementptr inbounds %struct.binding, %struct.binding* %535, i32 0, i32 4
  %536 = load i8*, i8** %uri634, align 8
  %537 = load %struct.TAG_NAME*, %struct.TAG_NAME** %tagNamePtr.addr, align 8
  %str635 = getelementptr inbounds %struct.TAG_NAME, %struct.TAG_NAME* %537, i32 0, i32 0
  store i8* %536, i8** %str635, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.633, %if.then.590, %if.else.543, %if.then.526, %if.then.518, %if.then.459, %if.then.411, %if.then.367, %if.then.337, %if.then.317, %if.then.281, %if.then.213, %if.then.144, %if.then.127, %if.then.103, %if.end.65, %if.then.52, %if.then.31, %if.then.13, %if.then.8, %if.then.4
  %538 = load i32, i32* %retval
  ret i32 %538
}

; Function Attrs: nounwind uwtable
define internal i32 @epilogProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @epilogProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %1 = load i8*, i8** %s.addr, align 8
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47
  store i8* %1, i8** %m_eventPtr, align 8
  br label %for.cond

for.cond:                                         ; preds = %sw.epilog.43, %entry
  store i8* null, i8** %next, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %4, i32 0, i32 0
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0
  %5 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8
  %8 = load i8*, i8** %s.addr, align 8
  %9 = load i8*, i8** %end.addr, align 8
  %call = call i32 %5(%struct.encoding* %7, i8* %8, i8* %9, i8** %next)
  store i32 %call, i32* %tok, align 4
  %10 = load i8*, i8** %next, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 48
  store i8* %10, i8** %m_eventEndPtr, align 8
  %12 = load i32, i32* %tok, align 4
  switch i32 %12, label %sw.default [
    i32 -15, label %sw.bb
    i32 -4, label %sw.bb.5
    i32 15, label %sw.bb.6
    i32 11, label %sw.bb.12
    i32 13, label %sw.bb.18
    i32 0, label %sw.bb.24
    i32 -1, label %sw.bb.26
    i32 -2, label %sw.bb.31
  ]

sw.bb:                                            ; preds = %for.cond
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %13, i32 0, i32 18
  %14 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %tobool = icmp ne void (i8*, i8*, i32)* %14, null
  br i1 %tobool, label %if.then, label %if.end.4

if.then:                                          ; preds = %sw.bb
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding2 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 34
  %17 = load %struct.encoding*, %struct.encoding** %m_encoding2, align 8
  %18 = load i8*, i8** %s.addr, align 8
  %19 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %15, %struct.encoding* %17, i8* %18, i8* %19)
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %21 = load i32, i32* %parsing, align 4
  %cmp = icmp eq i32 %21, 2
  br i1 %cmp, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  store i32 35, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %sw.bb
  %22 = load i8*, i8** %next, align 8
  %23 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %22, i8** %23, align 8
  store i32 0, i32* %retval
  br label %return

sw.bb.5:                                          ; preds = %for.cond
  %24 = load i8*, i8** %s.addr, align 8
  %25 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %24, i8** %25, align 8
  store i32 0, i32* %retval
  br label %return

sw.bb.6:                                          ; preds = %for.cond
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 18
  %27 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler7, align 8
  %tobool8 = icmp ne void (i8*, i8*, i32)* %27, null
  br i1 %tobool8, label %if.then.9, label %if.end.11

if.then.9:                                        ; preds = %sw.bb.6
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %29, i32 0, i32 34
  %30 = load %struct.encoding*, %struct.encoding** %m_encoding10, align 8
  %31 = load i8*, i8** %s.addr, align 8
  %32 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %28, %struct.encoding* %30, i8* %31, i8* %32)
  br label %if.end.11

if.end.11:                                        ; preds = %if.then.9, %sw.bb.6
  br label %sw.epilog

sw.bb.12:                                         ; preds = %for.cond
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding13 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %34, i32 0, i32 34
  %35 = load %struct.encoding*, %struct.encoding** %m_encoding13, align 8
  %36 = load i8*, i8** %s.addr, align 8
  %37 = load i8*, i8** %next, align 8
  %call14 = call i32 @reportProcessingInstruction(%struct.XML_ParserStruct* %33, %struct.encoding* %35, i8* %36, i8* %37)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %sw.bb.12
  store i32 1, i32* %retval
  br label %return

if.end.17:                                        ; preds = %sw.bb.12
  br label %sw.epilog

sw.bb.18:                                         ; preds = %for.cond
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %39 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding19 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %39, i32 0, i32 34
  %40 = load %struct.encoding*, %struct.encoding** %m_encoding19, align 8
  %41 = load i8*, i8** %s.addr, align 8
  %42 = load i8*, i8** %next, align 8
  %call20 = call i32 @reportComment(%struct.XML_ParserStruct* %38, %struct.encoding* %40, i8* %41, i8* %42)
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %sw.bb.18
  store i32 1, i32* %retval
  br label %return

if.end.23:                                        ; preds = %sw.bb.18
  br label %sw.epilog

sw.bb.24:                                         ; preds = %for.cond
  %43 = load i8*, i8** %next, align 8
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr25 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 47
  store i8* %43, i8** %m_eventPtr25, align 8
  store i32 4, i32* %retval
  br label %return

sw.bb.26:                                         ; preds = %for.cond
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus27 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus27, i32 0, i32 1
  %46 = load i8, i8* %finalBuffer, align 1
  %tobool28 = icmp ne i8 %46, 0
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %sw.bb.26
  %47 = load i8*, i8** %s.addr, align 8
  %48 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %47, i8** %48, align 8
  store i32 0, i32* %retval
  br label %return

if.end.30:                                        ; preds = %sw.bb.26
  store i32 5, i32* %retval
  br label %return

sw.bb.31:                                         ; preds = %for.cond
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %49, i32 0, i32 85
  %finalBuffer33 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus32, i32 0, i32 1
  %50 = load i8, i8* %finalBuffer33, align 1
  %tobool34 = icmp ne i8 %50, 0
  br i1 %tobool34, label %if.end.36, label %if.then.35

if.then.35:                                       ; preds = %sw.bb.31
  %51 = load i8*, i8** %s.addr, align 8
  %52 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %51, i8** %52, align 8
  store i32 0, i32* %retval
  br label %return

if.end.36:                                        ; preds = %sw.bb.31
  store i32 6, i32* %retval
  br label %return

sw.default:                                       ; preds = %for.cond
  store i32 9, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %if.end.23, %if.end.17, %if.end.11
  %53 = load i8*, i8** %next, align 8
  store i8* %53, i8** %s.addr, align 8
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr37 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 47
  store i8* %53, i8** %m_eventPtr37, align 8
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus38 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 85
  %parsing39 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus38, i32 0, i32 0
  %56 = load i32, i32* %parsing39, align 4
  switch i32 %56, label %sw.default.42 [
    i32 3, label %sw.bb.40
    i32 2, label %sw.bb.41
  ]

sw.bb.40:                                         ; preds = %sw.epilog
  %57 = load i8*, i8** %next, align 8
  %58 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %57, i8** %58, align 8
  store i32 0, i32* %retval
  br label %return

sw.bb.41:                                         ; preds = %sw.epilog
  store i32 35, i32* %retval
  br label %return

sw.default.42:                                    ; preds = %sw.epilog
  br label %sw.epilog.43

sw.epilog.43:                                     ; preds = %sw.default.42
  br label %for.cond

return:                                           ; preds = %sw.bb.41, %sw.bb.40, %sw.default, %if.end.36, %if.then.35, %if.end.30, %if.then.29, %sw.bb.24, %if.then.22, %if.then.16, %sw.bb.5, %if.end.4, %if.then.3
  %59 = load i32, i32* %retval
  ret i32 %59
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

declare i32 @PyExpat_XmlUtf8Encode(i32, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @doCdataSection(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8** %startPtr, i8* %end, i8** %nextPtr, i8 zeroext %haveMore) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %startPtr.addr = alloca i8**, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %haveMore.addr = alloca i8, align 1
  %s = alloca i8*, align 8
  %eventPP = alloca i8**, align 8
  %eventEndPP = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %c = alloca i8, align 1
  %charDataHandler = alloca void (i8*, i8*, i32)*, align 8
  %dataPtr = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8** %startPtr, i8*** %startPtr.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  store i8 %haveMore, i8* %haveMore.addr, align 1
  %0 = load i8**, i8*** %startPtr.addr, align 8
  %1 = load i8*, i8** %0, align 8
  store i8* %1, i8** %s, align 8
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %cmp = icmp eq %struct.encoding* %2, %4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 47
  store i8** %m_eventPtr, i8*** %eventPP, align 8
  %6 = load i8*, i8** %s, align 8
  %7 = load i8**, i8*** %eventPP, align 8
  store i8* %6, i8** %7, align 8
  %8 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %8, i32 0, i32 48
  store i8** %m_eventEndPtr, i8*** %eventEndPP, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 50
  %10 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8
  %internalEventPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %10, i32 0, i32 0
  store i8** %internalEventPtr, i8*** %eventPP, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 50
  %12 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities1, align 8
  %internalEventEndPtr = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %12, i32 0, i32 1
  store i8** %internalEventEndPtr, i8*** %eventEndPP, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i8*, i8** %s, align 8
  %14 = load i8**, i8*** %eventPP, align 8
  store i8* %13, i8** %14, align 8
  %15 = load i8**, i8*** %startPtr.addr, align 8
  store i8* null, i8** %15, align 8
  br label %for.cond

for.cond:                                         ; preds = %sw.epilog.64, %if.end
  %16 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %16, i32 0, i32 0
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 2
  %17 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %18 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %19 = load i8*, i8** %s, align 8
  %20 = load i8*, i8** %end.addr, align 8
  %call = call i32 %17(%struct.encoding* %18, i8* %19, i8* %20, i8** %next)
  store i32 %call, i32* %tok, align 4
  %21 = load i8*, i8** %next, align 8
  %22 = load i8**, i8*** %eventEndPP, align 8
  store i8* %21, i8** %22, align 8
  %23 = load i32, i32* %tok, align 4
  switch i32 %23, label %sw.default [
    i32 40, label %sw.bb
    i32 7, label %sw.bb.12
    i32 6, label %sw.bb.23
    i32 0, label %sw.bb.50
    i32 -2, label %sw.bb.51
    i32 -1, label %sw.bb.55
    i32 -4, label %sw.bb.55
  ]

sw.bb:                                            ; preds = %for.cond
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endCdataSectionHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 17
  %25 = load void (i8*)*, void (i8*)** %m_endCdataSectionHandler, align 8
  %tobool = icmp ne void (i8*)* %25, null
  br i1 %tobool, label %if.then.2, label %if.else.4

if.then.2:                                        ; preds = %sw.bb
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_endCdataSectionHandler3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 17
  %27 = load void (i8*)*, void (i8*)** %m_endCdataSectionHandler3, align 8
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 1
  %29 = load i8*, i8** %m_handlerArg, align 8
  call void %27(i8* %29)
  br label %if.end.8

if.else.4:                                        ; preds = %sw.bb
  %30 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %30, i32 0, i32 18
  %31 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler, align 8
  %tobool5 = icmp ne void (i8*, i8*, i32)* %31, null
  br i1 %tobool5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.else.4
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %33 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %34 = load i8*, i8** %s, align 8
  %35 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %32, %struct.encoding* %33, i8* %34, i8* %35)
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.6, %if.else.4
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7, %if.then.2
  %36 = load i8*, i8** %next, align 8
  %37 = load i8**, i8*** %startPtr.addr, align 8
  store i8* %36, i8** %37, align 8
  %38 = load i8*, i8** %next, align 8
  %39 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %38, i8** %39, align 8
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %41 = load i32, i32* %parsing, align 4
  %cmp9 = icmp eq i32 %41, 2
  br i1 %cmp9, label %if.then.10, label %if.else.11

if.then.10:                                       ; preds = %if.end.8
  store i32 35, i32* %retval
  br label %return

if.else.11:                                       ; preds = %if.end.8
  store i32 0, i32* %retval
  br label %return

sw.bb.12:                                         ; preds = %for.cond
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %42, i32 0, i32 13
  %43 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler, align 8
  %tobool13 = icmp ne void (i8*, i8*, i32)* %43, null
  br i1 %tobool13, label %if.then.14, label %if.else.17

if.then.14:                                       ; preds = %sw.bb.12
  store i8 10, i8* %c, align 1
  %44 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %44, i32 0, i32 13
  %45 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler15, align 8
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %46, i32 0, i32 1
  %47 = load i8*, i8** %m_handlerArg16, align 8
  call void %45(i8* %47, i8* %c, i32 1)
  br label %if.end.22

if.else.17:                                       ; preds = %sw.bb.12
  %48 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler18 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %48, i32 0, i32 18
  %49 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler18, align 8
  %tobool19 = icmp ne void (i8*, i8*, i32)* %49, null
  br i1 %tobool19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.else.17
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %51 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %52 = load i8*, i8** %s, align 8
  %53 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %50, %struct.encoding* %51, i8* %52, i8* %53)
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.20, %if.else.17
  br label %if.end.22

if.end.22:                                        ; preds = %if.end.21, %if.then.14
  br label %sw.epilog

sw.bb.23:                                         ; preds = %for.cond
  %54 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_characterDataHandler24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %54, i32 0, i32 13
  %55 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_characterDataHandler24, align 8
  store void (i8*, i8*, i32)* %55, void (i8*, i8*, i32)** %charDataHandler, align 8
  %56 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8
  %tobool25 = icmp ne void (i8*, i8*, i32)* %56, null
  br i1 %tobool25, label %if.then.26, label %if.else.44

if.then.26:                                       ; preds = %sw.bb.23
  %57 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %isUtf8 = getelementptr inbounds %struct.encoding, %struct.encoding* %57, i32 0, i32 14
  %58 = load i8, i8* %isUtf8, align 1
  %tobool27 = icmp ne i8 %58, 0
  br i1 %tobool27, label %if.else.37, label %if.then.28

if.then.28:                                       ; preds = %if.then.26
  br label %for.cond.29

for.cond.29:                                      ; preds = %if.end.36, %if.then.28
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 9
  %60 = load i8*, i8** %m_dataBuf, align 8
  store i8* %60, i8** %dataPtr, align 8
  %61 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %utf8Convert = getelementptr inbounds %struct.encoding, %struct.encoding* %61, i32 0, i32 11
  %62 = load void (%struct.encoding*, i8**, i8*, i8**, i8*)*, void (%struct.encoding*, i8**, i8*, i8**, i8*)** %utf8Convert, align 8
  %63 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %64 = load i8*, i8** %next, align 8
  %65 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBufEnd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %65, i32 0, i32 10
  %66 = load i8*, i8** %m_dataBufEnd, align 8
  call void %62(%struct.encoding* %63, i8** %s, i8* %64, i8** %dataPtr, i8* %66)
  %67 = load i8*, i8** %next, align 8
  %68 = load i8**, i8*** %eventEndPP, align 8
  store i8* %67, i8** %68, align 8
  %69 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8
  %70 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg30 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %70, i32 0, i32 1
  %71 = load i8*, i8** %m_handlerArg30, align 8
  %72 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %72, i32 0, i32 9
  %73 = load i8*, i8** %m_dataBuf31, align 8
  %74 = load i8*, i8** %dataPtr, align 8
  %75 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dataBuf32 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %75, i32 0, i32 9
  %76 = load i8*, i8** %m_dataBuf32, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %74 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %76 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  call void %69(i8* %71, i8* %73, i32 %conv)
  %77 = load i8*, i8** %s, align 8
  %78 = load i8*, i8** %next, align 8
  %cmp33 = icmp eq i8* %77, %78
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %for.cond.29
  br label %for.end

if.end.36:                                        ; preds = %for.cond.29
  %79 = load i8*, i8** %s, align 8
  %80 = load i8**, i8*** %eventPP, align 8
  store i8* %79, i8** %80, align 8
  br label %for.cond.29

for.end:                                          ; preds = %if.then.35
  br label %if.end.43

if.else.37:                                       ; preds = %if.then.26
  %81 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %charDataHandler, align 8
  %82 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg38 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %82, i32 0, i32 1
  %83 = load i8*, i8** %m_handlerArg38, align 8
  %84 = load i8*, i8** %s, align 8
  %85 = load i8*, i8** %next, align 8
  %86 = load i8*, i8** %s, align 8
  %sub.ptr.lhs.cast39 = ptrtoint i8* %85 to i64
  %sub.ptr.rhs.cast40 = ptrtoint i8* %86 to i64
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40
  %conv42 = trunc i64 %sub.ptr.sub41 to i32
  call void %81(i8* %83, i8* %84, i32 %conv42)
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.37, %for.end
  br label %if.end.49

if.else.44:                                       ; preds = %sw.bb.23
  %87 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_defaultHandler45 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %87, i32 0, i32 18
  %88 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %m_defaultHandler45, align 8
  %tobool46 = icmp ne void (i8*, i8*, i32)* %88, null
  br i1 %tobool46, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %if.else.44
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %90 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %91 = load i8*, i8** %s, align 8
  %92 = load i8*, i8** %next, align 8
  call void @reportDefault(%struct.XML_ParserStruct* %89, %struct.encoding* %90, i8* %91, i8* %92)
  br label %if.end.48

if.end.48:                                        ; preds = %if.then.47, %if.else.44
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48, %if.end.43
  br label %sw.epilog

sw.bb.50:                                         ; preds = %for.cond
  %93 = load i8*, i8** %next, align 8
  %94 = load i8**, i8*** %eventPP, align 8
  store i8* %93, i8** %94, align 8
  store i32 4, i32* %retval
  br label %return

sw.bb.51:                                         ; preds = %for.cond
  %95 = load i8, i8* %haveMore.addr, align 1
  %tobool52 = icmp ne i8 %95, 0
  br i1 %tobool52, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %sw.bb.51
  %96 = load i8*, i8** %s, align 8
  %97 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %96, i8** %97, align 8
  store i32 0, i32* %retval
  br label %return

if.end.54:                                        ; preds = %sw.bb.51
  store i32 6, i32* %retval
  br label %return

sw.bb.55:                                         ; preds = %for.cond, %for.cond
  %98 = load i8, i8* %haveMore.addr, align 1
  %tobool56 = icmp ne i8 %98, 0
  br i1 %tobool56, label %if.then.57, label %if.end.58

if.then.57:                                       ; preds = %sw.bb.55
  %99 = load i8*, i8** %s, align 8
  %100 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %99, i8** %100, align 8
  store i32 0, i32* %retval
  br label %return

if.end.58:                                        ; preds = %sw.bb.55
  store i32 20, i32* %retval
  br label %return

sw.default:                                       ; preds = %for.cond
  %101 = load i8*, i8** %next, align 8
  %102 = load i8**, i8*** %eventPP, align 8
  store i8* %101, i8** %102, align 8
  store i32 23, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %if.end.49, %if.end.22
  %103 = load i8*, i8** %next, align 8
  store i8* %103, i8** %s, align 8
  %104 = load i8**, i8*** %eventPP, align 8
  store i8* %103, i8** %104, align 8
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus59 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %105, i32 0, i32 85
  %parsing60 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus59, i32 0, i32 0
  %106 = load i32, i32* %parsing60, align 4
  switch i32 %106, label %sw.default.63 [
    i32 3, label %sw.bb.61
    i32 2, label %sw.bb.62
  ]

sw.bb.61:                                         ; preds = %sw.epilog
  %107 = load i8*, i8** %next, align 8
  %108 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %107, i8** %108, align 8
  store i32 0, i32* %retval
  br label %return

sw.bb.62:                                         ; preds = %sw.epilog
  store i32 35, i32* %retval
  br label %return

sw.default.63:                                    ; preds = %sw.epilog
  br label %sw.epilog.64

sw.epilog.64:                                     ; preds = %sw.default.63
  br label %for.cond

return:                                           ; preds = %sw.bb.62, %sw.bb.61, %sw.default, %if.end.58, %if.then.57, %if.end.54, %if.then.53, %sw.bb.50, %if.else.11, %if.then.10
  %109 = load i32, i32* %retval
  ret i32 %109
}

; Function Attrs: nounwind uwtable
define internal i32 @cdataSectionProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %start, i8** %start.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 34
  %2 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %3 = load i8*, i8** %end.addr, align 8
  %4 = load i8**, i8*** %endPtr.addr, align 8
  %5 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %5, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1
  %6 = load i8, i8* %finalBuffer, align 1
  %tobool = icmp ne i8 %6, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %conv = trunc i32 %lnot.ext to i8
  %call = call i32 @doCdataSection(%struct.XML_ParserStruct* %0, %struct.encoding* %2, i8** %start.addr, i8* %3, i8** %4, i8 zeroext %conv)
  store i32 %call, i32* %result, align 4
  %7 = load i32, i32* %result, align 4
  %cmp = icmp ne i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %result, align 4
  store i32 %8, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %9 = load i8*, i8** %start.addr, align 8
  %tobool2 = icmp ne i8* %9, null
  br i1 %tobool2, label %if.then.3, label %if.end.9

if.then.3:                                        ; preds = %if.end
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 84
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8
  %tobool4 = icmp ne %struct.XML_ParserStruct* %11, null
  br i1 %tobool4, label %if.then.5, label %if.else

if.then.5:                                        ; preds = %if.then.3
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityContentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %14 = load i8*, i8** %start.addr, align 8
  %15 = load i8*, i8** %end.addr, align 8
  %16 = load i8**, i8*** %endPtr.addr, align 8
  %call6 = call i32 @externalEntityContentProcessor(%struct.XML_ParserStruct* %13, i8* %14, i8* %15, i8** %16)
  store i32 %call6, i32* %retval
  br label %return

if.else:                                          ; preds = %if.then.3
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @contentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor7, align 8
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %19 = load i8*, i8** %start.addr, align 8
  %20 = load i8*, i8** %end.addr, align 8
  %21 = load i8**, i8*** %endPtr.addr, align 8
  %call8 = call i32 @contentProcessor(%struct.XML_ParserStruct* %18, i8* %19, i8* %20, i8** %21)
  store i32 %call8, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end
  %22 = load i32, i32* %result, align 4
  store i32 %22, i32* %retval
  br label %return

return:                                           ; preds = %if.end.9, %if.else, %if.then.5, %if.then
  %23 = load i32, i32* %retval
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define internal void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %table) #0 {
entry:
  %iter.addr = alloca %struct.HASH_TABLE_ITER*, align 8
  %table.addr = alloca %struct.HASH_TABLE*, align 8
  store %struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE_ITER** %iter.addr, align 8
  store %struct.HASH_TABLE* %table, %struct.HASH_TABLE** %table.addr, align 8
  %0 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %0, i32 0, i32 0
  %1 = load %struct.NAMED**, %struct.NAMED*** %v, align 8
  %2 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8
  %p = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %2, i32 0, i32 0
  store %struct.NAMED** %1, %struct.NAMED*** %p, align 8
  %3 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8
  %p1 = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %3, i32 0, i32 0
  %4 = load %struct.NAMED**, %struct.NAMED*** %p1, align 8
  %5 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %5, i32 0, i32 2
  %6 = load i64, i64* %size, align 8
  %add.ptr = getelementptr %struct.NAMED*, %struct.NAMED** %4, i64 %6
  %7 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8
  %end = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %7, i32 0, i32 1
  store %struct.NAMED** %add.ptr, %struct.NAMED*** %end, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter) #0 {
entry:
  %retval = alloca %struct.NAMED*, align 8
  %iter.addr = alloca %struct.HASH_TABLE_ITER*, align 8
  %tem = alloca %struct.NAMED*, align 8
  store %struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE_ITER** %iter.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8
  %p = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %0, i32 0, i32 0
  %1 = load %struct.NAMED**, %struct.NAMED*** %p, align 8
  %2 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8
  %end = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %2, i32 0, i32 1
  %3 = load %struct.NAMED**, %struct.NAMED*** %end, align 8
  %cmp = icmp ne %struct.NAMED** %1, %3
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load %struct.HASH_TABLE_ITER*, %struct.HASH_TABLE_ITER** %iter.addr, align 8
  %p1 = getelementptr inbounds %struct.HASH_TABLE_ITER, %struct.HASH_TABLE_ITER* %4, i32 0, i32 0
  %5 = load %struct.NAMED**, %struct.NAMED*** %p1, align 8
  %incdec.ptr = getelementptr %struct.NAMED*, %struct.NAMED** %5, i32 1
  store %struct.NAMED** %incdec.ptr, %struct.NAMED*** %p1, align 8
  %6 = load %struct.NAMED*, %struct.NAMED** %5, align 8
  store %struct.NAMED* %6, %struct.NAMED** %tem, align 8
  %7 = load %struct.NAMED*, %struct.NAMED** %tem, align 8
  %tobool = icmp ne %struct.NAMED* %7, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %8 = load %struct.NAMED*, %struct.NAMED** %tem, align 8
  store %struct.NAMED* %8, %struct.NAMED** %retval
  br label %return

if.end:                                           ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store %struct.NAMED* null, %struct.NAMED** %retval
  br label %return

return:                                           ; preds = %while.end, %if.then
  %9 = load %struct.NAMED*, %struct.NAMED** %retval
  ret %struct.NAMED* %9
}

; Function Attrs: nounwind uwtable
define internal i32 @setElementTypePrefix(%struct.XML_ParserStruct* %parser, %struct.ELEMENT_TYPE* %elementType) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %elementType.addr = alloca %struct.ELEMENT_TYPE*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %name = alloca i8*, align 8
  %prefix = alloca %struct.prefix*, align 8
  %s = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.ELEMENT_TYPE* %elementType, %struct.ELEMENT_TYPE** %elementType.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  %2 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType.addr, align 8
  %name1 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %2, i32 0, i32 0
  %3 = load i8*, i8** %name1, align 8
  store i8* %3, i8** %name, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.56, %entry
  %4 = load i8*, i8** %name, align 8
  %5 = load i8, i8* %4, align 1
  %tobool = icmp ne i8 %5, 0
  br i1 %tobool, label %for.body, label %for.end.58

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %name, align 8
  %7 = load i8, i8* %6, align 1
  %conv = sext i8 %7 to i32
  %cmp = icmp eq i32 %conv, 58
  br i1 %cmp, label %if.then, label %if.end.55

if.then:                                          ; preds = %for.body
  %8 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType.addr, align 8
  %name3 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %8, i32 0, i32 0
  %9 = load i8*, i8** %name3, align 8
  store i8* %9, i8** %s, align 8
  br label %for.cond.4

for.cond.4:                                       ; preds = %for.inc, %if.then
  %10 = load i8*, i8** %s, align 8
  %11 = load i8*, i8** %name, align 8
  %cmp5 = icmp ne i8* %10, %11
  br i1 %cmp5, label %for.body.7, label %for.end

for.body.7:                                       ; preds = %for.cond.4
  %12 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool = getelementptr inbounds %struct.DTD, %struct.DTD* %12, i32 0, i32 4
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool, i32 0, i32 3
  %13 = load i8*, i8** %ptr, align 8
  %14 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool8 = getelementptr inbounds %struct.DTD, %struct.DTD* %14, i32 0, i32 4
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool8, i32 0, i32 2
  %15 = load i8*, i8** %end, align 8
  %cmp9 = icmp eq i8* %13, %15
  br i1 %cmp9, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %for.body.7
  %16 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool11 = getelementptr inbounds %struct.DTD, %struct.DTD* %16, i32 0, i32 4
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool11)
  %tobool12 = icmp ne i8 %call, 0
  br i1 %tobool12, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %if.end, label %if.then.15

cond.false:                                       ; preds = %land.lhs.true, %for.body.7
  %17 = load i8*, i8** %s, align 8
  %18 = load i8, i8* %17, align 1
  %19 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool13 = getelementptr inbounds %struct.DTD, %struct.DTD* %19, i32 0, i32 4
  %ptr14 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool13, i32 0, i32 3
  %20 = load i8*, i8** %ptr14, align 8
  %incdec.ptr = getelementptr i8, i8* %20, i32 1
  store i8* %incdec.ptr, i8** %ptr14, align 8
  store i8 %18, i8* %20, align 1
  br i1 true, label %if.end, label %if.then.15

if.then.15:                                       ; preds = %cond.false, %cond.true
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.false, %cond.true
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %21 = load i8*, i8** %s, align 8
  %incdec.ptr16 = getelementptr i8, i8* %21, i32 1
  store i8* %incdec.ptr16, i8** %s, align 8
  br label %for.cond.4

for.end:                                          ; preds = %for.cond.4
  %22 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool17 = getelementptr inbounds %struct.DTD, %struct.DTD* %22, i32 0, i32 4
  %ptr18 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool17, i32 0, i32 3
  %23 = load i8*, i8** %ptr18, align 8
  %24 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool19 = getelementptr inbounds %struct.DTD, %struct.DTD* %24, i32 0, i32 4
  %end20 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool19, i32 0, i32 2
  %25 = load i8*, i8** %end20, align 8
  %cmp21 = icmp eq i8* %23, %25
  br i1 %cmp21, label %land.lhs.true.23, label %cond.false.28

land.lhs.true.23:                                 ; preds = %for.end
  %26 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool24 = getelementptr inbounds %struct.DTD, %struct.DTD* %26, i32 0, i32 4
  %call25 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %pool24)
  %tobool26 = icmp ne i8 %call25, 0
  br i1 %tobool26, label %cond.false.28, label %cond.true.27

cond.true.27:                                     ; preds = %land.lhs.true.23
  br i1 false, label %if.end.33, label %if.then.32

cond.false.28:                                    ; preds = %land.lhs.true.23, %for.end
  %27 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool29 = getelementptr inbounds %struct.DTD, %struct.DTD* %27, i32 0, i32 4
  %ptr30 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool29, i32 0, i32 3
  %28 = load i8*, i8** %ptr30, align 8
  %incdec.ptr31 = getelementptr i8, i8* %28, i32 1
  store i8* %incdec.ptr31, i8** %ptr30, align 8
  store i8 0, i8* %28, align 1
  br i1 true, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %cond.false.28, %cond.true.27
  store i32 0, i32* %retval
  br label %return

if.end.33:                                        ; preds = %cond.false.28, %cond.true.27
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %30 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %prefixes = getelementptr inbounds %struct.DTD, %struct.DTD* %30, i32 0, i32 3
  %31 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool34 = getelementptr inbounds %struct.DTD, %struct.DTD* %31, i32 0, i32 4
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool34, i32 0, i32 4
  %32 = load i8*, i8** %start, align 8
  %call35 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %29, %struct.HASH_TABLE* %prefixes, i8* %32, i64 16)
  %33 = bitcast %struct.NAMED* %call35 to %struct.prefix*
  store %struct.prefix* %33, %struct.prefix** %prefix, align 8
  %34 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %tobool36 = icmp ne %struct.prefix* %34, null
  br i1 %tobool36, label %if.end.38, label %if.then.37

if.then.37:                                       ; preds = %if.end.33
  store i32 0, i32* %retval
  br label %return

if.end.38:                                        ; preds = %if.end.33
  %35 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %name39 = getelementptr inbounds %struct.prefix, %struct.prefix* %35, i32 0, i32 0
  %36 = load i8*, i8** %name39, align 8
  %37 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool40 = getelementptr inbounds %struct.DTD, %struct.DTD* %37, i32 0, i32 4
  %start41 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool40, i32 0, i32 4
  %38 = load i8*, i8** %start41, align 8
  %cmp42 = icmp eq i8* %36, %38
  br i1 %cmp42, label %if.then.44, label %if.else

if.then.44:                                       ; preds = %if.end.38
  %39 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool45 = getelementptr inbounds %struct.DTD, %struct.DTD* %39, i32 0, i32 4
  %ptr46 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool45, i32 0, i32 3
  %40 = load i8*, i8** %ptr46, align 8
  %41 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool47 = getelementptr inbounds %struct.DTD, %struct.DTD* %41, i32 0, i32 4
  %start48 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool47, i32 0, i32 4
  store i8* %40, i8** %start48, align 8
  br label %if.end.53

if.else:                                          ; preds = %if.end.38
  %42 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool49 = getelementptr inbounds %struct.DTD, %struct.DTD* %42, i32 0, i32 4
  %start50 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool49, i32 0, i32 4
  %43 = load i8*, i8** %start50, align 8
  %44 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool51 = getelementptr inbounds %struct.DTD, %struct.DTD* %44, i32 0, i32 4
  %ptr52 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %pool51, i32 0, i32 3
  store i8* %43, i8** %ptr52, align 8
  br label %if.end.53

if.end.53:                                        ; preds = %if.else, %if.then.44
  %45 = load %struct.prefix*, %struct.prefix** %prefix, align 8
  %46 = load %struct.ELEMENT_TYPE*, %struct.ELEMENT_TYPE** %elementType.addr, align 8
  %prefix54 = getelementptr inbounds %struct.ELEMENT_TYPE, %struct.ELEMENT_TYPE* %46, i32 0, i32 1
  store %struct.prefix* %45, %struct.prefix** %prefix54, align 8
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.53, %for.body
  br label %for.inc.56

for.inc.56:                                       ; preds = %if.end.55
  %47 = load i8*, i8** %name, align 8
  %incdec.ptr57 = getelementptr i8, i8* %47, i32 1
  store i8* %incdec.ptr57, i8** %name, align 8
  br label %for.cond

for.end.58:                                       ; preds = %for.cond
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %for.end.58, %if.then.37, %if.then.32, %if.then.15
  %48 = load i32, i32* %retval
  ret i32 %48
}

; Function Attrs: nounwind uwtable
define internal i32 @addBinding(%struct.XML_ParserStruct* %parser, %struct.prefix* %prefix, %struct.attribute_id* %attId, i8* %uri, %struct.binding** %bindingsPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %prefix.addr = alloca %struct.prefix*, align 8
  %attId.addr = alloca %struct.attribute_id*, align 8
  %uri.addr = alloca i8*, align 8
  %bindingsPtr.addr = alloca %struct.binding**, align 8
  %mustBeXML = alloca i8, align 1
  %isXML = alloca i8, align 1
  %isXMLNS = alloca i8, align 1
  %b = alloca %struct.binding*, align 8
  %len = alloca i32, align 4
  %temp = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.prefix* %prefix, %struct.prefix** %prefix.addr, align 8
  store %struct.attribute_id* %attId, %struct.attribute_id** %attId.addr, align 8
  store i8* %uri, i8** %uri.addr, align 8
  store %struct.binding** %bindingsPtr, %struct.binding*** %bindingsPtr.addr, align 8
  store i8 0, i8* %mustBeXML, align 1
  store i8 1, i8* %isXML, align 1
  store i8 1, i8* %isXMLNS, align 1
  %0 = load i8*, i8** %uri.addr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %name = getelementptr inbounds %struct.prefix, %struct.prefix* %2, i32 0, i32 0
  %3 = load i8*, i8** %name, align 8
  %tobool = icmp ne i8* %3, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 28, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %name2 = getelementptr inbounds %struct.prefix, %struct.prefix* %4, i32 0, i32 0
  %5 = load i8*, i8** %name2, align 8
  %tobool3 = icmp ne i8* %5, null
  br i1 %tobool3, label %land.lhs.true.4, label %if.end.48

land.lhs.true.4:                                  ; preds = %if.end
  %6 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %name5 = getelementptr inbounds %struct.prefix, %struct.prefix* %6, i32 0, i32 0
  %7 = load i8*, i8** %name5, align 8
  %arrayidx = getelementptr i8, i8* %7, i64 0
  %8 = load i8, i8* %arrayidx, align 1
  %conv6 = sext i8 %8 to i32
  %cmp7 = icmp eq i32 %conv6, 120
  br i1 %cmp7, label %land.lhs.true.9, label %if.end.48

land.lhs.true.9:                                  ; preds = %land.lhs.true.4
  %9 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %name10 = getelementptr inbounds %struct.prefix, %struct.prefix* %9, i32 0, i32 0
  %10 = load i8*, i8** %name10, align 8
  %arrayidx11 = getelementptr i8, i8* %10, i64 1
  %11 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %11 to i32
  %cmp13 = icmp eq i32 %conv12, 109
  br i1 %cmp13, label %land.lhs.true.15, label %if.end.48

land.lhs.true.15:                                 ; preds = %land.lhs.true.9
  %12 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %name16 = getelementptr inbounds %struct.prefix, %struct.prefix* %12, i32 0, i32 0
  %13 = load i8*, i8** %name16, align 8
  %arrayidx17 = getelementptr i8, i8* %13, i64 2
  %14 = load i8, i8* %arrayidx17, align 1
  %conv18 = sext i8 %14 to i32
  %cmp19 = icmp eq i32 %conv18, 108
  br i1 %cmp19, label %if.then.21, label %if.end.48

if.then.21:                                       ; preds = %land.lhs.true.15
  %15 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %name22 = getelementptr inbounds %struct.prefix, %struct.prefix* %15, i32 0, i32 0
  %16 = load i8*, i8** %name22, align 8
  %arrayidx23 = getelementptr i8, i8* %16, i64 3
  %17 = load i8, i8* %arrayidx23, align 1
  %conv24 = sext i8 %17 to i32
  %cmp25 = icmp eq i32 %conv24, 110
  br i1 %cmp25, label %land.lhs.true.27, label %if.end.40

land.lhs.true.27:                                 ; preds = %if.then.21
  %18 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %name28 = getelementptr inbounds %struct.prefix, %struct.prefix* %18, i32 0, i32 0
  %19 = load i8*, i8** %name28, align 8
  %arrayidx29 = getelementptr i8, i8* %19, i64 4
  %20 = load i8, i8* %arrayidx29, align 1
  %conv30 = sext i8 %20 to i32
  %cmp31 = icmp eq i32 %conv30, 115
  br i1 %cmp31, label %land.lhs.true.33, label %if.end.40

land.lhs.true.33:                                 ; preds = %land.lhs.true.27
  %21 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %name34 = getelementptr inbounds %struct.prefix, %struct.prefix* %21, i32 0, i32 0
  %22 = load i8*, i8** %name34, align 8
  %arrayidx35 = getelementptr i8, i8* %22, i64 5
  %23 = load i8, i8* %arrayidx35, align 1
  %conv36 = sext i8 %23 to i32
  %cmp37 = icmp eq i32 %conv36, 0
  br i1 %cmp37, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %land.lhs.true.33
  store i32 39, i32* %retval
  br label %return

if.end.40:                                        ; preds = %land.lhs.true.33, %land.lhs.true.27, %if.then.21
  %24 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %name41 = getelementptr inbounds %struct.prefix, %struct.prefix* %24, i32 0, i32 0
  %25 = load i8*, i8** %name41, align 8
  %arrayidx42 = getelementptr i8, i8* %25, i64 3
  %26 = load i8, i8* %arrayidx42, align 1
  %conv43 = sext i8 %26 to i32
  %cmp44 = icmp eq i32 %conv43, 0
  br i1 %cmp44, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %if.end.40
  store i8 1, i8* %mustBeXML, align 1
  br label %if.end.47

if.end.47:                                        ; preds = %if.then.46, %if.end.40
  br label %if.end.48

if.end.48:                                        ; preds = %if.end.47, %land.lhs.true.15, %land.lhs.true.9, %land.lhs.true.4, %if.end
  store i32 0, i32* %len, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.48
  %27 = load i32, i32* %len, align 4
  %idxprom = sext i32 %27 to i64
  %28 = load i8*, i8** %uri.addr, align 8
  %arrayidx49 = getelementptr i8, i8* %28, i64 %idxprom
  %29 = load i8, i8* %arrayidx49, align 1
  %tobool50 = icmp ne i8 %29, 0
  br i1 %tobool50, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %30 = load i8, i8* %isXML, align 1
  %conv51 = zext i8 %30 to i32
  %tobool52 = icmp ne i32 %conv51, 0
  br i1 %tobool52, label %land.lhs.true.53, label %if.end.65

land.lhs.true.53:                                 ; preds = %for.body
  %31 = load i32, i32* %len, align 4
  %cmp54 = icmp sgt i32 %31, 36
  br i1 %cmp54, label %if.then.64, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.53
  %32 = load i32, i32* %len, align 4
  %idxprom56 = sext i32 %32 to i64
  %33 = load i8*, i8** %uri.addr, align 8
  %arrayidx57 = getelementptr i8, i8* %33, i64 %idxprom56
  %34 = load i8, i8* %arrayidx57, align 1
  %conv58 = sext i8 %34 to i32
  %35 = load i32, i32* %len, align 4
  %idxprom59 = sext i32 %35 to i64
  %arrayidx60 = getelementptr [37 x i8], [37 x i8]* @addBinding.xmlNamespace, i32 0, i64 %idxprom59
  %36 = load i8, i8* %arrayidx60, align 1
  %conv61 = sext i8 %36 to i32
  %cmp62 = icmp ne i32 %conv58, %conv61
  br i1 %cmp62, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %lor.lhs.false, %land.lhs.true.53
  store i8 0, i8* %isXML, align 1
  br label %if.end.65

if.end.65:                                        ; preds = %if.then.64, %lor.lhs.false, %for.body
  %37 = load i8, i8* %mustBeXML, align 1
  %tobool66 = icmp ne i8 %37, 0
  br i1 %tobool66, label %if.end.83, label %land.lhs.true.67

land.lhs.true.67:                                 ; preds = %if.end.65
  %38 = load i8, i8* %isXMLNS, align 1
  %conv68 = zext i8 %38 to i32
  %tobool69 = icmp ne i32 %conv68, 0
  br i1 %tobool69, label %land.lhs.true.70, label %if.end.83

land.lhs.true.70:                                 ; preds = %land.lhs.true.67
  %39 = load i32, i32* %len, align 4
  %cmp71 = icmp sgt i32 %39, 29
  br i1 %cmp71, label %if.then.82, label %lor.lhs.false.73

lor.lhs.false.73:                                 ; preds = %land.lhs.true.70
  %40 = load i32, i32* %len, align 4
  %idxprom74 = sext i32 %40 to i64
  %41 = load i8*, i8** %uri.addr, align 8
  %arrayidx75 = getelementptr i8, i8* %41, i64 %idxprom74
  %42 = load i8, i8* %arrayidx75, align 1
  %conv76 = sext i8 %42 to i32
  %43 = load i32, i32* %len, align 4
  %idxprom77 = sext i32 %43 to i64
  %arrayidx78 = getelementptr [30 x i8], [30 x i8]* @addBinding.xmlnsNamespace, i32 0, i64 %idxprom77
  %44 = load i8, i8* %arrayidx78, align 1
  %conv79 = sext i8 %44 to i32
  %cmp80 = icmp ne i32 %conv76, %conv79
  br i1 %cmp80, label %if.then.82, label %if.end.83

if.then.82:                                       ; preds = %lor.lhs.false.73, %land.lhs.true.70
  store i8 0, i8* %isXMLNS, align 1
  br label %if.end.83

if.end.83:                                        ; preds = %if.then.82, %lor.lhs.false.73, %land.lhs.true.67, %if.end.65
  br label %for.inc

for.inc:                                          ; preds = %if.end.83
  %45 = load i32, i32* %len, align 4
  %inc = add i32 %45, 1
  store i32 %inc, i32* %len, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %46 = load i8, i8* %isXML, align 1
  %conv84 = zext i8 %46 to i32
  %tobool85 = icmp ne i32 %conv84, 0
  br i1 %tobool85, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.end
  %47 = load i32, i32* %len, align 4
  %cmp86 = icmp eq i32 %47, 36
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end
  %48 = phi i1 [ false, %for.end ], [ %cmp86, %land.rhs ]
  %land.ext = zext i1 %48 to i32
  %conv88 = trunc i32 %land.ext to i8
  store i8 %conv88, i8* %isXML, align 1
  %49 = load i8, i8* %isXMLNS, align 1
  %conv89 = zext i8 %49 to i32
  %tobool90 = icmp ne i32 %conv89, 0
  br i1 %tobool90, label %land.rhs.91, label %land.end.94

land.rhs.91:                                      ; preds = %land.end
  %50 = load i32, i32* %len, align 4
  %cmp92 = icmp eq i32 %50, 29
  br label %land.end.94

land.end.94:                                      ; preds = %land.rhs.91, %land.end
  %51 = phi i1 [ false, %land.end ], [ %cmp92, %land.rhs.91 ]
  %land.ext95 = zext i1 %51 to i32
  %conv96 = trunc i32 %land.ext95 to i8
  store i8 %conv96, i8* %isXMLNS, align 1
  %52 = load i8, i8* %mustBeXML, align 1
  %conv97 = zext i8 %52 to i32
  %53 = load i8, i8* %isXML, align 1
  %conv98 = zext i8 %53 to i32
  %cmp99 = icmp ne i32 %conv97, %conv98
  br i1 %cmp99, label %if.then.101, label %if.end.104

if.then.101:                                      ; preds = %land.end.94
  %54 = load i8, i8* %mustBeXML, align 1
  %conv102 = zext i8 %54 to i32
  %tobool103 = icmp ne i32 %conv102, 0
  %cond = select i1 %tobool103, i32 38, i32 40
  store i32 %cond, i32* %retval
  br label %return

if.end.104:                                       ; preds = %land.end.94
  %55 = load i8, i8* %isXMLNS, align 1
  %tobool105 = icmp ne i8 %55, 0
  br i1 %tobool105, label %if.then.106, label %if.end.107

if.then.106:                                      ; preds = %if.end.104
  store i32 40, i32* %retval
  br label %return

if.end.107:                                       ; preds = %if.end.104
  %56 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_namespaceSeparator = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %56, i32 0, i32 83
  %57 = load i8, i8* %m_namespaceSeparator, align 1
  %tobool108 = icmp ne i8 %57, 0
  br i1 %tobool108, label %if.then.109, label %if.end.111

if.then.109:                                      ; preds = %if.end.107
  %58 = load i32, i32* %len, align 4
  %inc110 = add i32 %58, 1
  store i32 %inc110, i32* %len, align 4
  br label %if.end.111

if.end.111:                                       ; preds = %if.then.109, %if.end.107
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeBindingList = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 70
  %60 = load %struct.binding*, %struct.binding** %m_freeBindingList, align 8
  %tobool112 = icmp ne %struct.binding* %60, null
  br i1 %tobool112, label %if.then.113, label %if.else

if.then.113:                                      ; preds = %if.end.111
  %61 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeBindingList114 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %61, i32 0, i32 70
  %62 = load %struct.binding*, %struct.binding** %m_freeBindingList114, align 8
  store %struct.binding* %62, %struct.binding** %b, align 8
  %63 = load i32, i32* %len, align 4
  %64 = load %struct.binding*, %struct.binding** %b, align 8
  %uriAlloc = getelementptr inbounds %struct.binding, %struct.binding* %64, i32 0, i32 6
  %65 = load i32, i32* %uriAlloc, align 4
  %cmp115 = icmp sgt i32 %63, %65
  br i1 %cmp115, label %if.then.117, label %if.end.127

if.then.117:                                      ; preds = %if.then.113
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %66, i32 0, i32 3
  %realloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem, i32 0, i32 1
  %67 = load i8* (i8*, i64)*, i8* (i8*, i64)** %realloc_fcn, align 8
  %68 = load %struct.binding*, %struct.binding** %b, align 8
  %uri118 = getelementptr inbounds %struct.binding, %struct.binding* %68, i32 0, i32 4
  %69 = load i8*, i8** %uri118, align 8
  %70 = load i32, i32* %len, align 4
  %add = add i32 %70, 24
  %conv119 = sext i32 %add to i64
  %mul = mul i64 1, %conv119
  %call = call i8* %67(i8* %69, i64 %mul)
  store i8* %call, i8** %temp, align 8
  %71 = load i8*, i8** %temp, align 8
  %cmp120 = icmp eq i8* %71, null
  br i1 %cmp120, label %if.then.122, label %if.end.123

if.then.122:                                      ; preds = %if.then.117
  store i32 1, i32* %retval
  br label %return

if.end.123:                                       ; preds = %if.then.117
  %72 = load i8*, i8** %temp, align 8
  %73 = load %struct.binding*, %struct.binding** %b, align 8
  %uri124 = getelementptr inbounds %struct.binding, %struct.binding* %73, i32 0, i32 4
  store i8* %72, i8** %uri124, align 8
  %74 = load i32, i32* %len, align 4
  %add125 = add i32 %74, 24
  %75 = load %struct.binding*, %struct.binding** %b, align 8
  %uriAlloc126 = getelementptr inbounds %struct.binding, %struct.binding* %75, i32 0, i32 6
  store i32 %add125, i32* %uriAlloc126, align 4
  br label %if.end.127

if.end.127:                                       ; preds = %if.end.123, %if.then.113
  %76 = load %struct.binding*, %struct.binding** %b, align 8
  %nextTagBinding = getelementptr inbounds %struct.binding, %struct.binding* %76, i32 0, i32 1
  %77 = load %struct.binding*, %struct.binding** %nextTagBinding, align 8
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeBindingList128 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 70
  store %struct.binding* %77, %struct.binding** %m_freeBindingList128, align 8
  br label %if.end.148

if.else:                                          ; preds = %if.end.111
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem129 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %79, i32 0, i32 3
  %malloc_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem129, i32 0, i32 0
  %80 = load i8* (i64)*, i8* (i64)** %malloc_fcn, align 8
  %call130 = call i8* %80(i64 48)
  %81 = bitcast i8* %call130 to %struct.binding*
  store %struct.binding* %81, %struct.binding** %b, align 8
  %82 = load %struct.binding*, %struct.binding** %b, align 8
  %tobool131 = icmp ne %struct.binding* %82, null
  br i1 %tobool131, label %if.end.133, label %if.then.132

if.then.132:                                      ; preds = %if.else
  store i32 1, i32* %retval
  br label %return

if.end.133:                                       ; preds = %if.else
  %83 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem134 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %83, i32 0, i32 3
  %malloc_fcn135 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem134, i32 0, i32 0
  %84 = load i8* (i64)*, i8* (i64)** %malloc_fcn135, align 8
  %85 = load i32, i32* %len, align 4
  %add136 = add i32 %85, 24
  %conv137 = sext i32 %add136 to i64
  %mul138 = mul i64 1, %conv137
  %call139 = call i8* %84(i64 %mul138)
  %86 = load %struct.binding*, %struct.binding** %b, align 8
  %uri140 = getelementptr inbounds %struct.binding, %struct.binding* %86, i32 0, i32 4
  store i8* %call139, i8** %uri140, align 8
  %87 = load %struct.binding*, %struct.binding** %b, align 8
  %uri141 = getelementptr inbounds %struct.binding, %struct.binding* %87, i32 0, i32 4
  %88 = load i8*, i8** %uri141, align 8
  %tobool142 = icmp ne i8* %88, null
  br i1 %tobool142, label %if.end.145, label %if.then.143

if.then.143:                                      ; preds = %if.end.133
  %89 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_mem144 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %89, i32 0, i32 3
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %m_mem144, i32 0, i32 2
  %90 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %91 = load %struct.binding*, %struct.binding** %b, align 8
  %92 = bitcast %struct.binding* %91 to i8*
  call void %90(i8* %92)
  store i32 1, i32* %retval
  br label %return

if.end.145:                                       ; preds = %if.end.133
  %93 = load i32, i32* %len, align 4
  %add146 = add i32 %93, 24
  %94 = load %struct.binding*, %struct.binding** %b, align 8
  %uriAlloc147 = getelementptr inbounds %struct.binding, %struct.binding* %94, i32 0, i32 6
  store i32 %add146, i32* %uriAlloc147, align 4
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.145, %if.end.127
  %95 = load i32, i32* %len, align 4
  %96 = load %struct.binding*, %struct.binding** %b, align 8
  %uriLen = getelementptr inbounds %struct.binding, %struct.binding* %96, i32 0, i32 5
  store i32 %95, i32* %uriLen, align 4
  %97 = load %struct.binding*, %struct.binding** %b, align 8
  %uri149 = getelementptr inbounds %struct.binding, %struct.binding* %97, i32 0, i32 4
  %98 = load i8*, i8** %uri149, align 8
  %99 = load i8*, i8** %uri.addr, align 8
  %100 = load i32, i32* %len, align 4
  %conv150 = sext i32 %100 to i64
  %mul151 = mul i64 %conv150, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 %mul151, i32 1, i1 false)
  %101 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_namespaceSeparator152 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %101, i32 0, i32 83
  %102 = load i8, i8* %m_namespaceSeparator152, align 1
  %tobool153 = icmp ne i8 %102, 0
  br i1 %tobool153, label %if.then.154, label %if.end.159

if.then.154:                                      ; preds = %if.end.148
  %103 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_namespaceSeparator155 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %103, i32 0, i32 83
  %104 = load i8, i8* %m_namespaceSeparator155, align 1
  %105 = load i32, i32* %len, align 4
  %sub = sub i32 %105, 1
  %idxprom156 = sext i32 %sub to i64
  %106 = load %struct.binding*, %struct.binding** %b, align 8
  %uri157 = getelementptr inbounds %struct.binding, %struct.binding* %106, i32 0, i32 4
  %107 = load i8*, i8** %uri157, align 8
  %arrayidx158 = getelementptr i8, i8* %107, i64 %idxprom156
  store i8 %104, i8* %arrayidx158, align 1
  br label %if.end.159

if.end.159:                                       ; preds = %if.then.154, %if.end.148
  %108 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %109 = load %struct.binding*, %struct.binding** %b, align 8
  %prefix160 = getelementptr inbounds %struct.binding, %struct.binding* %109, i32 0, i32 0
  store %struct.prefix* %108, %struct.prefix** %prefix160, align 8
  %110 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8
  %111 = load %struct.binding*, %struct.binding** %b, align 8
  %attId161 = getelementptr inbounds %struct.binding, %struct.binding* %111, i32 0, i32 3
  store %struct.attribute_id* %110, %struct.attribute_id** %attId161, align 8
  %112 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %binding = getelementptr inbounds %struct.prefix, %struct.prefix* %112, i32 0, i32 1
  %113 = load %struct.binding*, %struct.binding** %binding, align 8
  %114 = load %struct.binding*, %struct.binding** %b, align 8
  %prevPrefixBinding = getelementptr inbounds %struct.binding, %struct.binding* %114, i32 0, i32 2
  store %struct.binding* %113, %struct.binding** %prevPrefixBinding, align 8
  %115 = load i8*, i8** %uri.addr, align 8
  %116 = load i8, i8* %115, align 1
  %conv162 = sext i8 %116 to i32
  %cmp163 = icmp eq i32 %conv162, 0
  br i1 %cmp163, label %land.lhs.true.165, label %if.else.170

land.lhs.true.165:                                ; preds = %if.end.159
  %117 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %118 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %118, i32 0, i32 65
  %119 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  %defaultPrefix = getelementptr inbounds %struct.DTD, %struct.DTD* %119, i32 0, i32 11
  %cmp166 = icmp eq %struct.prefix* %117, %defaultPrefix
  br i1 %cmp166, label %if.then.168, label %if.else.170

if.then.168:                                      ; preds = %land.lhs.true.165
  %120 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %binding169 = getelementptr inbounds %struct.prefix, %struct.prefix* %120, i32 0, i32 1
  store %struct.binding* null, %struct.binding** %binding169, align 8
  br label %if.end.172

if.else.170:                                      ; preds = %land.lhs.true.165, %if.end.159
  %121 = load %struct.binding*, %struct.binding** %b, align 8
  %122 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %binding171 = getelementptr inbounds %struct.prefix, %struct.prefix* %122, i32 0, i32 1
  store %struct.binding* %121, %struct.binding** %binding171, align 8
  br label %if.end.172

if.end.172:                                       ; preds = %if.else.170, %if.then.168
  %123 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8
  %124 = load %struct.binding*, %struct.binding** %123, align 8
  %125 = load %struct.binding*, %struct.binding** %b, align 8
  %nextTagBinding173 = getelementptr inbounds %struct.binding, %struct.binding* %125, i32 0, i32 1
  store %struct.binding* %124, %struct.binding** %nextTagBinding173, align 8
  %126 = load %struct.binding*, %struct.binding** %b, align 8
  %127 = load %struct.binding**, %struct.binding*** %bindingsPtr.addr, align 8
  store %struct.binding* %126, %struct.binding** %127, align 8
  %128 = load %struct.attribute_id*, %struct.attribute_id** %attId.addr, align 8
  %tobool174 = icmp ne %struct.attribute_id* %128, null
  br i1 %tobool174, label %land.lhs.true.175, label %if.end.183

land.lhs.true.175:                                ; preds = %if.end.172
  %129 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startNamespaceDeclHandler = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %129, i32 0, i32 23
  %130 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler, align 8
  %tobool176 = icmp ne void (i8*, i8*, i8*)* %130, null
  br i1 %tobool176, label %if.then.177, label %if.end.183

if.then.177:                                      ; preds = %land.lhs.true.175
  %131 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_startNamespaceDeclHandler178 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %131, i32 0, i32 23
  %132 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %m_startNamespaceDeclHandler178, align 8
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_handlerArg = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %133, i32 0, i32 1
  %134 = load i8*, i8** %m_handlerArg, align 8
  %135 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %name179 = getelementptr inbounds %struct.prefix, %struct.prefix* %135, i32 0, i32 0
  %136 = load i8*, i8** %name179, align 8
  %137 = load %struct.prefix*, %struct.prefix** %prefix.addr, align 8
  %binding180 = getelementptr inbounds %struct.prefix, %struct.prefix* %137, i32 0, i32 1
  %138 = load %struct.binding*, %struct.binding** %binding180, align 8
  %tobool181 = icmp ne %struct.binding* %138, null
  br i1 %tobool181, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.177
  %139 = load i8*, i8** %uri.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.177
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond182 = phi i8* [ %139, %cond.true ], [ null, %cond.false ]
  call void %132(i8* %134, i8* %136, i8* %cond182)
  br label %if.end.183

if.end.183:                                       ; preds = %cond.end, %land.lhs.true.175, %if.end.172
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.183, %if.then.143, %if.then.132, %if.then.122, %if.then.106, %if.then.101, %if.then.39, %if.then
  %140 = load i32, i32* %retval
  ret i32 %140
}

; Function Attrs: nounwind uwtable
define internal i32 @externalEntityContentProcessor(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %start, i8** %start.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 34
  %2 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %3 = load i8*, i8** %start.addr, align 8
  %4 = load i8*, i8** %end.addr, align 8
  %5 = load i8**, i8*** %endPtr.addr, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1
  %7 = load i8, i8* %finalBuffer, align 1
  %tobool = icmp ne i8 %7, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %conv = trunc i32 %lnot.ext to i8
  %call = call i32 @doContent(%struct.XML_ParserStruct* %0, i32 1, %struct.encoding* %2, i8* %3, i8* %4, i8** %5, i8 zeroext %conv)
  store i32 %call, i32* %result, align 4
  %8 = load i32, i32* %result, align 4
  %cmp = icmp eq i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end.5

if.then:                                          ; preds = %entry
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %call2 = call zeroext i8 @storeRawNames(%struct.XML_ParserStruct* %9)
  %tobool3 = icmp ne i8 %call2, 0
  br i1 %tobool3, label %if.end, label %if.then.4

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.5

if.end.5:                                         ; preds = %if.end, %entry
  %10 = load i32, i32* %result, align 4
  store i32 %10, i32* %retval
  br label %return

return:                                           ; preds = %if.end.5, %if.then.4
  %11 = load i32, i32* %retval
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define internal i32 @appendAttributeValue(%struct.XML_ParserStruct* %parser, %struct.encoding* %enc, i8 zeroext %isCdata, i8* %ptr, i8* %end, %struct.STRING_POOL* %pool) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %enc.addr = alloca %struct.encoding*, align 8
  %isCdata.addr = alloca i8, align 1
  %ptr.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %dtd = alloca %struct.DTD*, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  %buf = alloca [4 x i8], align 1
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %name = alloca i8*, align 8
  %entity = alloca %struct.ENTITY*, align 8
  %checkEntityDecl = alloca i8, align 1
  %ch = alloca i8, align 1
  %result = alloca i32, align 4
  %textEnd = alloca i8*, align 8
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store %struct.encoding* %enc, %struct.encoding** %enc.addr, align 8
  store i8 %isCdata, i8* %isCdata.addr, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  br label %for.cond

for.cond:                                         ; preds = %sw.epilog, %entry
  %2 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %literalScanners = getelementptr inbounds %struct.encoding, %struct.encoding* %2, i32 0, i32 1
  %arrayidx = getelementptr [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [2 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %literalScanners, i32 0, i64 0
  %3 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %4 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %5 = load i8*, i8** %ptr.addr, align 8
  %6 = load i8*, i8** %end.addr, align 8
  %call = call i32 %3(%struct.encoding* %4, i8* %5, i8* %6, i8** %next)
  store i32 %call, i32* %tok, align 4
  %7 = load i32, i32* %tok, align 4
  switch i32 %7, label %sw.default [
    i32 -4, label %sw.bb
    i32 0, label %sw.bb.1
    i32 -1, label %sw.bb.2
    i32 10, label %sw.bb.8
    i32 6, label %sw.bb.52
    i32 -3, label %sw.bb.57
    i32 39, label %sw.bb.58
    i32 7, label %sw.bb.58
    i32 9, label %sw.bb.89
  ]

sw.bb:                                            ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

sw.bb.1:                                          ; preds = %for.cond
  %8 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 34
  %10 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %cmp = icmp eq %struct.encoding* %8, %10
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb.1
  %11 = load i8*, i8** %next, align 8
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 47
  store i8* %11, i8** %m_eventPtr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.bb.1
  store i32 4, i32* %retval
  br label %return

sw.bb.2:                                          ; preds = %for.cond
  %13 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 34
  %15 = load %struct.encoding*, %struct.encoding** %m_encoding3, align 8
  %cmp4 = icmp eq %struct.encoding* %13, %15
  br i1 %cmp4, label %if.then.5, label %if.end.7

if.then.5:                                        ; preds = %sw.bb.2
  %16 = load i8*, i8** %ptr.addr, align 8
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 47
  store i8* %16, i8** %m_eventPtr6, align 8
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.5, %sw.bb.2
  store i32 4, i32* %retval
  br label %return

sw.bb.8:                                          ; preds = %for.cond
  %18 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %charRefNumber = getelementptr inbounds %struct.encoding, %struct.encoding* %18, i32 0, i32 7
  %19 = load i32 (%struct.encoding*, i8*)*, i32 (%struct.encoding*, i8*)** %charRefNumber, align 8
  %20 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %21 = load i8*, i8** %ptr.addr, align 8
  %call9 = call i32 %19(%struct.encoding* %20, i8* %21)
  store i32 %call9, i32* %n, align 4
  %22 = load i32, i32* %n, align 4
  %cmp10 = icmp slt i32 %22, 0
  br i1 %cmp10, label %if.then.11, label %if.end.17

if.then.11:                                       ; preds = %sw.bb.8
  %23 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 34
  %25 = load %struct.encoding*, %struct.encoding** %m_encoding12, align 8
  %cmp13 = icmp eq %struct.encoding* %23, %25
  br i1 %cmp13, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %if.then.11
  %26 = load i8*, i8** %ptr.addr, align 8
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 47
  store i8* %26, i8** %m_eventPtr15, align 8
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.14, %if.then.11
  store i32 14, i32* %retval
  br label %return

if.end.17:                                        ; preds = %sw.bb.8
  %28 = load i8, i8* %isCdata.addr, align 1
  %tobool = icmp ne i8 %28, 0
  br i1 %tobool, label %if.end.27, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end.17
  %29 = load i32, i32* %n, align 4
  %cmp18 = icmp eq i32 %29, 32
  br i1 %cmp18, label %land.lhs.true.19, label %if.end.27

land.lhs.true.19:                                 ; preds = %land.lhs.true
  %30 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr20 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %30, i32 0, i32 3
  %31 = load i8*, i8** %ptr20, align 8
  %32 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %32, i32 0, i32 4
  %33 = load i8*, i8** %start, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %31 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %33 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp21 = icmp eq i64 %sub.ptr.sub, 0
  br i1 %cmp21, label %if.then.26, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.19
  %34 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr22 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %34, i32 0, i32 3
  %35 = load i8*, i8** %ptr22, align 8
  %arrayidx23 = getelementptr i8, i8* %35, i64 -1
  %36 = load i8, i8* %arrayidx23, align 1
  %conv = sext i8 %36 to i32
  %cmp24 = icmp eq i32 %conv, 32
  br i1 %cmp24, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %lor.lhs.false, %land.lhs.true.19
  br label %sw.epilog

if.end.27:                                        ; preds = %lor.lhs.false, %land.lhs.true, %if.end.17
  %37 = load i32, i32* %n, align 4
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i32 0
  %call28 = call i32 @PyExpat_XmlUtf8Encode(i32 %37, i8* %arraydecay)
  store i32 %call28, i32* %n, align 4
  %38 = load i32, i32* %n, align 4
  %tobool29 = icmp ne i32 %38, 0
  br i1 %tobool29, label %if.end.37, label %if.then.30

if.then.30:                                       ; preds = %if.end.27
  %39 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding31 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 34
  %41 = load %struct.encoding*, %struct.encoding** %m_encoding31, align 8
  %cmp32 = icmp eq %struct.encoding* %39, %41
  br i1 %cmp32, label %if.then.34, label %if.end.36

if.then.34:                                       ; preds = %if.then.30
  %42 = load i8*, i8** %ptr.addr, align 8
  %43 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr35 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %43, i32 0, i32 47
  store i8* %42, i8** %m_eventPtr35, align 8
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.34, %if.then.30
  store i32 14, i32* %retval
  br label %return

if.end.37:                                        ; preds = %if.end.27
  store i32 0, i32* %i, align 4
  br label %for.cond.38

for.cond.38:                                      ; preds = %for.inc, %if.end.37
  %44 = load i32, i32* %i, align 4
  %45 = load i32, i32* %n, align 4
  %cmp39 = icmp slt i32 %44, %45
  br i1 %cmp39, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.38
  %46 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr41 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %46, i32 0, i32 3
  %47 = load i8*, i8** %ptr41, align 8
  %48 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end42 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %48, i32 0, i32 2
  %49 = load i8*, i8** %end42, align 8
  %cmp43 = icmp eq i8* %47, %49
  br i1 %cmp43, label %land.lhs.true.45, label %cond.false

land.lhs.true.45:                                 ; preds = %for.body
  %50 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call46 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %50)
  %tobool47 = icmp ne i8 %call46, 0
  br i1 %tobool47, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true.45
  br i1 false, label %if.end.51, label %if.then.50

cond.false:                                       ; preds = %land.lhs.true.45, %for.body
  %51 = load i32, i32* %i, align 4
  %idxprom = sext i32 %51 to i64
  %arrayidx48 = getelementptr [4 x i8], [4 x i8]* %buf, i32 0, i64 %idxprom
  %52 = load i8, i8* %arrayidx48, align 1
  %53 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr49 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %53, i32 0, i32 3
  %54 = load i8*, i8** %ptr49, align 8
  %incdec.ptr = getelementptr i8, i8* %54, i32 1
  store i8* %incdec.ptr, i8** %ptr49, align 8
  store i8 %52, i8* %54, align 1
  br i1 true, label %if.end.51, label %if.then.50

if.then.50:                                       ; preds = %cond.false, %cond.true
  store i32 1, i32* %retval
  br label %return

if.end.51:                                        ; preds = %cond.false, %cond.true
  br label %for.inc

for.inc:                                          ; preds = %if.end.51
  %55 = load i32, i32* %i, align 4
  %inc = add i32 %55, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.38

for.end:                                          ; preds = %for.cond.38
  br label %sw.epilog

sw.bb.52:                                         ; preds = %for.cond
  %56 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %57 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %58 = load i8*, i8** %ptr.addr, align 8
  %59 = load i8*, i8** %next, align 8
  %call53 = call i8* @poolAppend(%struct.STRING_POOL* %56, %struct.encoding* %57, i8* %58, i8* %59)
  %tobool54 = icmp ne i8* %call53, null
  br i1 %tobool54, label %if.end.56, label %if.then.55

if.then.55:                                       ; preds = %sw.bb.52
  store i32 1, i32* %retval
  br label %return

if.end.56:                                        ; preds = %sw.bb.52
  br label %sw.epilog

sw.bb.57:                                         ; preds = %for.cond
  %60 = load i8*, i8** %ptr.addr, align 8
  %61 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar = getelementptr inbounds %struct.encoding, %struct.encoding* %61, i32 0, i32 13
  %62 = load i32, i32* %minBytesPerChar, align 4
  %idx.ext = sext i32 %62 to i64
  %add.ptr = getelementptr i8, i8* %60, i64 %idx.ext
  store i8* %add.ptr, i8** %next, align 8
  br label %sw.bb.58

sw.bb.58:                                         ; preds = %for.cond, %for.cond, %sw.bb.57
  %63 = load i8, i8* %isCdata.addr, align 1
  %tobool59 = icmp ne i8 %63, 0
  br i1 %tobool59, label %if.end.75, label %land.lhs.true.60

land.lhs.true.60:                                 ; preds = %sw.bb.58
  %64 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr61 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %64, i32 0, i32 3
  %65 = load i8*, i8** %ptr61, align 8
  %66 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start62 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %66, i32 0, i32 4
  %67 = load i8*, i8** %start62, align 8
  %sub.ptr.lhs.cast63 = ptrtoint i8* %65 to i64
  %sub.ptr.rhs.cast64 = ptrtoint i8* %67 to i64
  %sub.ptr.sub65 = sub i64 %sub.ptr.lhs.cast63, %sub.ptr.rhs.cast64
  %cmp66 = icmp eq i64 %sub.ptr.sub65, 0
  br i1 %cmp66, label %if.then.74, label %lor.lhs.false.68

lor.lhs.false.68:                                 ; preds = %land.lhs.true.60
  %68 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr69 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %68, i32 0, i32 3
  %69 = load i8*, i8** %ptr69, align 8
  %arrayidx70 = getelementptr i8, i8* %69, i64 -1
  %70 = load i8, i8* %arrayidx70, align 1
  %conv71 = sext i8 %70 to i32
  %cmp72 = icmp eq i32 %conv71, 32
  br i1 %cmp72, label %if.then.74, label %if.end.75

if.then.74:                                       ; preds = %lor.lhs.false.68, %land.lhs.true.60
  br label %sw.epilog

if.end.75:                                        ; preds = %lor.lhs.false.68, %sw.bb.58
  %71 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr76 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %71, i32 0, i32 3
  %72 = load i8*, i8** %ptr76, align 8
  %73 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end77 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %73, i32 0, i32 2
  %74 = load i8*, i8** %end77, align 8
  %cmp78 = icmp eq i8* %72, %74
  br i1 %cmp78, label %land.lhs.true.80, label %cond.false.84

land.lhs.true.80:                                 ; preds = %if.end.75
  %75 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call81 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %75)
  %tobool82 = icmp ne i8 %call81, 0
  br i1 %tobool82, label %cond.false.84, label %cond.true.83

cond.true.83:                                     ; preds = %land.lhs.true.80
  br i1 false, label %if.end.88, label %if.then.87

cond.false.84:                                    ; preds = %land.lhs.true.80, %if.end.75
  %76 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr85 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %76, i32 0, i32 3
  %77 = load i8*, i8** %ptr85, align 8
  %incdec.ptr86 = getelementptr i8, i8* %77, i32 1
  store i8* %incdec.ptr86, i8** %ptr85, align 8
  store i8 32, i8* %77, align 1
  br i1 true, label %if.end.88, label %if.then.87

if.then.87:                                       ; preds = %cond.false.84, %cond.true.83
  store i32 1, i32* %retval
  br label %return

if.end.88:                                        ; preds = %cond.false.84, %cond.true.83
  br label %sw.epilog

sw.bb.89:                                         ; preds = %for.cond
  %78 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %predefinedEntityName = getelementptr inbounds %struct.encoding, %struct.encoding* %78, i32 0, i32 8
  %79 = load i32 (%struct.encoding*, i8*, i8*)*, i32 (%struct.encoding*, i8*, i8*)** %predefinedEntityName, align 8
  %80 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %81 = load i8*, i8** %ptr.addr, align 8
  %82 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar90 = getelementptr inbounds %struct.encoding, %struct.encoding* %82, i32 0, i32 13
  %83 = load i32, i32* %minBytesPerChar90, align 4
  %idx.ext91 = sext i32 %83 to i64
  %add.ptr92 = getelementptr i8, i8* %81, i64 %idx.ext91
  %84 = load i8*, i8** %next, align 8
  %85 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar93 = getelementptr inbounds %struct.encoding, %struct.encoding* %85, i32 0, i32 13
  %86 = load i32, i32* %minBytesPerChar93, align 4
  %idx.ext94 = sext i32 %86 to i64
  %idx.neg = sub i64 0, %idx.ext94
  %add.ptr95 = getelementptr i8, i8* %84, i64 %idx.neg
  %call96 = call i32 %79(%struct.encoding* %80, i8* %add.ptr92, i8* %add.ptr95)
  %conv97 = trunc i32 %call96 to i8
  store i8 %conv97, i8* %ch, align 1
  %87 = load i8, i8* %ch, align 1
  %tobool98 = icmp ne i8 %87, 0
  br i1 %tobool98, label %if.then.99, label %if.end.113

if.then.99:                                       ; preds = %sw.bb.89
  %88 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr100 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %88, i32 0, i32 3
  %89 = load i8*, i8** %ptr100, align 8
  %90 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end101 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %90, i32 0, i32 2
  %91 = load i8*, i8** %end101, align 8
  %cmp102 = icmp eq i8* %89, %91
  br i1 %cmp102, label %land.lhs.true.104, label %cond.false.108

land.lhs.true.104:                                ; preds = %if.then.99
  %92 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call105 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %92)
  %tobool106 = icmp ne i8 %call105, 0
  br i1 %tobool106, label %cond.false.108, label %cond.true.107

cond.true.107:                                    ; preds = %land.lhs.true.104
  br i1 false, label %if.end.112, label %if.then.111

cond.false.108:                                   ; preds = %land.lhs.true.104, %if.then.99
  %93 = load i8, i8* %ch, align 1
  %94 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr109 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %94, i32 0, i32 3
  %95 = load i8*, i8** %ptr109, align 8
  %incdec.ptr110 = getelementptr i8, i8* %95, i32 1
  store i8* %incdec.ptr110, i8** %ptr109, align 8
  store i8 %93, i8* %95, align 1
  br i1 true, label %if.end.112, label %if.then.111

if.then.111:                                      ; preds = %cond.false.108, %cond.true.107
  store i32 1, i32* %retval
  br label %return

if.end.112:                                       ; preds = %cond.false.108, %cond.true.107
  br label %sw.epilog

if.end.113:                                       ; preds = %sw.bb.89
  %96 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_temp2Pool = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %96, i32 0, i32 80
  %97 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %98 = load i8*, i8** %ptr.addr, align 8
  %99 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar114 = getelementptr inbounds %struct.encoding, %struct.encoding* %99, i32 0, i32 13
  %100 = load i32, i32* %minBytesPerChar114, align 4
  %idx.ext115 = sext i32 %100 to i64
  %add.ptr116 = getelementptr i8, i8* %98, i64 %idx.ext115
  %101 = load i8*, i8** %next, align 8
  %102 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %minBytesPerChar117 = getelementptr inbounds %struct.encoding, %struct.encoding* %102, i32 0, i32 13
  %103 = load i32, i32* %minBytesPerChar117, align 4
  %idx.ext118 = sext i32 %103 to i64
  %idx.neg119 = sub i64 0, %idx.ext118
  %add.ptr120 = getelementptr i8, i8* %101, i64 %idx.neg119
  %call121 = call i8* @poolStoreString(%struct.STRING_POOL* %m_temp2Pool, %struct.encoding* %97, i8* %add.ptr116, i8* %add.ptr120)
  store i8* %call121, i8** %name, align 8
  %104 = load i8*, i8** %name, align 8
  %tobool122 = icmp ne i8* %104, null
  br i1 %tobool122, label %if.end.124, label %if.then.123

if.then.123:                                      ; preds = %if.end.113
  store i32 1, i32* %retval
  br label %return

if.end.124:                                       ; preds = %if.end.113
  %105 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %106 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %generalEntities = getelementptr inbounds %struct.DTD, %struct.DTD* %106, i32 0, i32 0
  %107 = load i8*, i8** %name, align 8
  %call125 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %105, %struct.HASH_TABLE* %generalEntities, i8* %107, i64 0)
  %108 = bitcast %struct.NAMED* %call125 to %struct.ENTITY*
  store %struct.ENTITY* %108, %struct.ENTITY** %entity, align 8
  %109 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_temp2Pool126 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %109, i32 0, i32 80
  %start127 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_temp2Pool126, i32 0, i32 4
  %110 = load i8*, i8** %start127, align 8
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_temp2Pool128 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %111, i32 0, i32 80
  %ptr129 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %m_temp2Pool128, i32 0, i32 3
  store i8* %110, i8** %ptr129, align 8
  %112 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %113 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %pool130 = getelementptr inbounds %struct.DTD, %struct.DTD* %113, i32 0, i32 4
  %cmp131 = icmp eq %struct.STRING_POOL* %112, %pool130
  br i1 %cmp131, label %if.then.133, label %if.else

if.then.133:                                      ; preds = %if.end.124
  %114 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_prologState = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %114, i32 0, i32 44
  %documentEntity = getelementptr inbounds %struct.prolog_state, %struct.prolog_state* %m_prologState, i32 0, i32 4
  %115 = load i32, i32* %documentEntity, align 4
  %tobool134 = icmp ne i32 %115, 0
  br i1 %tobool134, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then.133
  %116 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone = getelementptr inbounds %struct.DTD, %struct.DTD* %116, i32 0, i32 8
  %117 = load i8, i8* %standalone, align 1
  %conv135 = zext i8 %117 to i32
  %tobool136 = icmp ne i32 %conv135, 0
  br i1 %tobool136, label %cond.true.137, label %cond.false.139

cond.true.137:                                    ; preds = %land.rhs
  %118 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %118, i32 0, i32 50
  %119 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8
  %tobool138 = icmp ne %struct.open_internal_entity* %119, null
  %lnot = xor i1 %tobool138, true
  %lnot.ext = zext i1 %lnot to i32
  br label %cond.end

cond.false.139:                                   ; preds = %land.rhs
  %120 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs = getelementptr inbounds %struct.DTD, %struct.DTD* %120, i32 0, i32 7
  %121 = load i8, i8* %hasParamEntityRefs, align 1
  %tobool140 = icmp ne i8 %121, 0
  %lnot141 = xor i1 %tobool140, true
  %lnot.ext142 = zext i1 %lnot141 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false.139, %cond.true.137
  %cond = phi i32 [ %lnot.ext, %cond.true.137 ], [ %lnot.ext142, %cond.false.139 ]
  %tobool143 = icmp ne i32 %cond, 0
  br label %land.end

land.end:                                         ; preds = %cond.end, %if.then.133
  %122 = phi i1 [ false, %if.then.133 ], [ %tobool143, %cond.end ]
  %land.ext = zext i1 %122 to i32
  %conv144 = trunc i32 %land.ext to i8
  store i8 %conv144, i8* %checkEntityDecl, align 1
  br label %if.end.151

if.else:                                          ; preds = %if.end.124
  %123 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %hasParamEntityRefs145 = getelementptr inbounds %struct.DTD, %struct.DTD* %123, i32 0, i32 7
  %124 = load i8, i8* %hasParamEntityRefs145, align 1
  %tobool146 = icmp ne i8 %124, 0
  br i1 %tobool146, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %if.else
  %125 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %standalone147 = getelementptr inbounds %struct.DTD, %struct.DTD* %125, i32 0, i32 8
  %126 = load i8, i8* %standalone147, align 1
  %conv148 = zext i8 %126 to i32
  %tobool149 = icmp ne i32 %conv148, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.else
  %127 = phi i1 [ true, %if.else ], [ %tobool149, %lor.rhs ]
  %lor.ext = zext i1 %127 to i32
  %conv150 = trunc i32 %lor.ext to i8
  store i8 %conv150, i8* %checkEntityDecl, align 1
  br label %if.end.151

if.end.151:                                       ; preds = %lor.end, %land.end
  %128 = load i8, i8* %checkEntityDecl, align 1
  %tobool152 = icmp ne i8 %128, 0
  br i1 %tobool152, label %if.then.153, label %if.else.161

if.then.153:                                      ; preds = %if.end.151
  %129 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %tobool154 = icmp ne %struct.ENTITY* %129, null
  br i1 %tobool154, label %if.else.156, label %if.then.155

if.then.155:                                      ; preds = %if.then.153
  store i32 11, i32* %retval
  br label %return

if.else.156:                                      ; preds = %if.then.153
  %130 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %is_internal = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %130, i32 0, i32 10
  %131 = load i8, i8* %is_internal, align 1
  %tobool157 = icmp ne i8 %131, 0
  br i1 %tobool157, label %if.end.159, label %if.then.158

if.then.158:                                      ; preds = %if.else.156
  store i32 24, i32* %retval
  br label %return

if.end.159:                                       ; preds = %if.else.156
  br label %if.end.160

if.end.160:                                       ; preds = %if.end.159
  br label %if.end.165

if.else.161:                                      ; preds = %if.end.151
  %132 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %tobool162 = icmp ne %struct.ENTITY* %132, null
  br i1 %tobool162, label %if.end.164, label %if.then.163

if.then.163:                                      ; preds = %if.else.161
  br label %sw.epilog

if.end.164:                                       ; preds = %if.else.161
  br label %if.end.165

if.end.165:                                       ; preds = %if.end.164, %if.end.160
  %133 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %133, i32 0, i32 8
  %134 = load i8, i8* %open, align 1
  %tobool166 = icmp ne i8 %134, 0
  br i1 %tobool166, label %if.then.167, label %if.end.174

if.then.167:                                      ; preds = %if.end.165
  %135 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %136 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding168 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %136, i32 0, i32 34
  %137 = load %struct.encoding*, %struct.encoding** %m_encoding168, align 8
  %cmp169 = icmp eq %struct.encoding* %135, %137
  br i1 %cmp169, label %if.then.171, label %if.end.173

if.then.171:                                      ; preds = %if.then.167
  %138 = load i8*, i8** %ptr.addr, align 8
  %139 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr172 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %139, i32 0, i32 47
  store i8* %138, i8** %m_eventPtr172, align 8
  br label %if.end.173

if.end.173:                                       ; preds = %if.then.171, %if.then.167
  store i32 12, i32* %retval
  br label %return

if.end.174:                                       ; preds = %if.end.165
  %140 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %notation = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %140, i32 0, i32 7
  %141 = load i8*, i8** %notation, align 8
  %tobool175 = icmp ne i8* %141, null
  br i1 %tobool175, label %if.then.176, label %if.end.183

if.then.176:                                      ; preds = %if.end.174
  %142 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %143 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding177 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %143, i32 0, i32 34
  %144 = load %struct.encoding*, %struct.encoding** %m_encoding177, align 8
  %cmp178 = icmp eq %struct.encoding* %142, %144
  br i1 %cmp178, label %if.then.180, label %if.end.182

if.then.180:                                      ; preds = %if.then.176
  %145 = load i8*, i8** %ptr.addr, align 8
  %146 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr181 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %146, i32 0, i32 47
  store i8* %145, i8** %m_eventPtr181, align 8
  br label %if.end.182

if.end.182:                                       ; preds = %if.then.180, %if.then.176
  store i32 15, i32* %retval
  br label %return

if.end.183:                                       ; preds = %if.end.174
  %147 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %147, i32 0, i32 1
  %148 = load i8*, i8** %textPtr, align 8
  %tobool184 = icmp ne i8* %148, null
  br i1 %tobool184, label %if.else.192, label %if.then.185

if.then.185:                                      ; preds = %if.end.183
  %149 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %150 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding186 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %150, i32 0, i32 34
  %151 = load %struct.encoding*, %struct.encoding** %m_encoding186, align 8
  %cmp187 = icmp eq %struct.encoding* %149, %151
  br i1 %cmp187, label %if.then.189, label %if.end.191

if.then.189:                                      ; preds = %if.then.185
  %152 = load i8*, i8** %ptr.addr, align 8
  %153 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr190 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %153, i32 0, i32 47
  store i8* %152, i8** %m_eventPtr190, align 8
  br label %if.end.191

if.end.191:                                       ; preds = %if.then.189, %if.then.185
  store i32 16, i32* %retval
  br label %return

if.else.192:                                      ; preds = %if.end.183
  %154 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %textPtr193 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %154, i32 0, i32 1
  %155 = load i8*, i8** %textPtr193, align 8
  %156 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %156, i32 0, i32 2
  %157 = load i32, i32* %textLen, align 4
  %idx.ext194 = sext i32 %157 to i64
  %add.ptr195 = getelementptr i8, i8* %155, i64 %idx.ext194
  store i8* %add.ptr195, i8** %textEnd, align 8
  %158 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open196 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %158, i32 0, i32 8
  store i8 1, i8* %open196, align 1
  %159 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %160 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %160, i32 0, i32 36
  %161 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8
  %162 = load i8, i8* %isCdata.addr, align 1
  %163 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %textPtr197 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %163, i32 0, i32 1
  %164 = load i8*, i8** %textPtr197, align 8
  %165 = load i8*, i8** %textEnd, align 8
  %166 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call198 = call i32 @appendAttributeValue(%struct.XML_ParserStruct* %159, %struct.encoding* %161, i8 zeroext %162, i8* %164, i8* %165, %struct.STRING_POOL* %166)
  store i32 %call198, i32* %result, align 4
  %167 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open199 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %167, i32 0, i32 8
  store i8 0, i8* %open199, align 1
  %168 = load i32, i32* %result, align 4
  %tobool200 = icmp ne i32 %168, 0
  br i1 %tobool200, label %if.then.201, label %if.end.202

if.then.201:                                      ; preds = %if.else.192
  %169 = load i32, i32* %result, align 4
  store i32 %169, i32* %retval
  br label %return

if.end.202:                                       ; preds = %if.else.192
  br label %if.end.203

if.end.203:                                       ; preds = %if.end.202
  br label %sw.epilog

sw.default:                                       ; preds = %for.cond
  %170 = load %struct.encoding*, %struct.encoding** %enc.addr, align 8
  %171 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding204 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %171, i32 0, i32 34
  %172 = load %struct.encoding*, %struct.encoding** %m_encoding204, align 8
  %cmp205 = icmp eq %struct.encoding* %170, %172
  br i1 %cmp205, label %if.then.207, label %if.end.209

if.then.207:                                      ; preds = %sw.default
  %173 = load i8*, i8** %ptr.addr, align 8
  %174 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr208 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %174, i32 0, i32 47
  store i8* %173, i8** %m_eventPtr208, align 8
  br label %if.end.209

if.end.209:                                       ; preds = %if.then.207, %sw.default
  store i32 23, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %if.end.203, %if.then.163, %if.end.112, %if.end.88, %if.then.74, %if.end.56, %for.end, %if.then.26
  %175 = load i8*, i8** %next, align 8
  store i8* %175, i8** %ptr.addr, align 8
  br label %for.cond

return:                                           ; preds = %if.end.209, %if.then.201, %if.end.191, %if.end.182, %if.end.173, %if.then.158, %if.then.155, %if.then.123, %if.then.111, %if.then.87, %if.then.55, %if.then.50, %if.end.36, %if.end.16, %if.end.7, %if.end, %sw.bb
  %176 = load i32, i32* %retval
  ret i32 %176
}

; Function Attrs: nounwind uwtable
define internal i32 @internalEntityProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %entity = alloca %struct.ENTITY*, align 8
  %textStart = alloca i8*, align 8
  %textEnd = alloca i8*, align 8
  %next = alloca i8*, align 8
  %result = alloca i32, align 4
  %openEntity = alloca %struct.open_internal_entity*, align 8
  %tok = alloca i32, align 4
  %tok30 = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 50
  %1 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_openInternalEntities, align 8
  store %struct.open_internal_entity* %1, %struct.open_internal_entity** %openEntity, align 8
  %2 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %tobool = icmp ne %struct.open_internal_entity* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 23, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %entity1 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %3, i32 0, i32 3
  %4 = load %struct.ENTITY*, %struct.ENTITY** %entity1, align 8
  store %struct.ENTITY* %4, %struct.ENTITY** %entity, align 8
  %5 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %5, i32 0, i32 1
  %6 = load i8*, i8** %textPtr, align 8
  %7 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %processed = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %7, i32 0, i32 3
  %8 = load i32, i32* %processed, align 4
  %idx.ext = sext i32 %8 to i64
  %add.ptr = getelementptr i8, i8* %6, i64 %idx.ext
  store i8* %add.ptr, i8** %textStart, align 8
  %9 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %textPtr2 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %9, i32 0, i32 1
  %10 = load i8*, i8** %textPtr2, align 8
  %11 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %11, i32 0, i32 2
  %12 = load i32, i32* %textLen, align 4
  %idx.ext3 = sext i32 %12 to i64
  %add.ptr4 = getelementptr i8, i8* %10, i64 %idx.ext3
  store i8* %add.ptr4, i8** %textEnd, align 8
  %13 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %is_param = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %13, i32 0, i32 9
  %14 = load i8, i8* %is_param, align 1
  %tobool5 = icmp ne i8 %14, 0
  br i1 %tobool5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %if.end
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_internalEncoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %15, i32 0, i32 36
  %16 = load %struct.encoding*, %struct.encoding** %m_internalEncoding, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %16, i32 0, i32 0
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0
  %17 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_internalEncoding7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 36
  %19 = load %struct.encoding*, %struct.encoding** %m_internalEncoding7, align 8
  %20 = load i8*, i8** %textStart, align 8
  %21 = load i8*, i8** %textEnd, align 8
  %call = call i32 %17(%struct.encoding* %19, i8* %20, i8* %21, i8** %next)
  store i32 %call, i32* %tok, align 4
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_internalEncoding8 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 36
  %24 = load %struct.encoding*, %struct.encoding** %m_internalEncoding8, align 8
  %25 = load i8*, i8** %textStart, align 8
  %26 = load i8*, i8** %textEnd, align 8
  %27 = load i32, i32* %tok, align 4
  %28 = load i8*, i8** %next, align 8
  %call9 = call i32 @doProlog(%struct.XML_ParserStruct* %22, %struct.encoding* %24, i8* %25, i8* %26, i32 %27, i8* %28, i8** %next, i8 zeroext 0)
  store i32 %call9, i32* %result, align 4
  br label %if.end.12

if.else:                                          ; preds = %if.end
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %30 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %startTagLevel = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %30, i32 0, i32 4
  %31 = load i32, i32* %startTagLevel, align 4
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_internalEncoding10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 36
  %33 = load %struct.encoding*, %struct.encoding** %m_internalEncoding10, align 8
  %34 = load i8*, i8** %textStart, align 8
  %35 = load i8*, i8** %textEnd, align 8
  %call11 = call i32 @doContent(%struct.XML_ParserStruct* %29, i32 %31, %struct.encoding* %33, i8* %34, i8* %35, i8** %next, i8 zeroext 0)
  store i32 %call11, i32* %result, align 4
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.6
  %36 = load i32, i32* %result, align 4
  %cmp = icmp ne i32 %36, 0
  br i1 %cmp, label %if.then.13, label %if.else.14

if.then.13:                                       ; preds = %if.end.12
  %37 = load i32, i32* %result, align 4
  store i32 %37, i32* %retval
  br label %return

if.else.14:                                       ; preds = %if.end.12
  %38 = load i8*, i8** %textEnd, align 8
  %39 = load i8*, i8** %next, align 8
  %cmp15 = icmp ne i8* %38, %39
  br i1 %cmp15, label %land.lhs.true, label %if.else.20

land.lhs.true:                                    ; preds = %if.else.14
  %40 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %40, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %41 = load i32, i32* %parsing, align 4
  %cmp16 = icmp eq i32 %41, 3
  br i1 %cmp16, label %if.then.17, label %if.else.20

if.then.17:                                       ; preds = %land.lhs.true
  %42 = load i8*, i8** %next, align 8
  %43 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %textPtr18 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %43, i32 0, i32 1
  %44 = load i8*, i8** %textPtr18, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %42 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %44 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %45 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %processed19 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %45, i32 0, i32 3
  store i32 %conv, i32* %processed19, align 4
  %46 = load i32, i32* %result, align 4
  store i32 %46, i32* %retval
  br label %return

if.else.20:                                       ; preds = %land.lhs.true, %if.else.14
  %47 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %open = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %47, i32 0, i32 8
  store i8 0, i8* %open, align 1
  %48 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %next21 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %48, i32 0, i32 2
  %49 = load %struct.open_internal_entity*, %struct.open_internal_entity** %next21, align 8
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_openInternalEntities22 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %50, i32 0, i32 50
  store %struct.open_internal_entity* %49, %struct.open_internal_entity** %m_openInternalEntities22, align 8
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeInternalEntities = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 51
  %52 = load %struct.open_internal_entity*, %struct.open_internal_entity** %m_freeInternalEntities, align 8
  %53 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %next23 = getelementptr inbounds %struct.open_internal_entity, %struct.open_internal_entity* %53, i32 0, i32 2
  store %struct.open_internal_entity* %52, %struct.open_internal_entity** %next23, align 8
  %54 = load %struct.open_internal_entity*, %struct.open_internal_entity** %openEntity, align 8
  %55 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_freeInternalEntities24 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %55, i32 0, i32 51
  store %struct.open_internal_entity* %54, %struct.open_internal_entity** %m_freeInternalEntities24, align 8
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.20
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25
  %56 = load %struct.ENTITY*, %struct.ENTITY** %entity, align 8
  %is_param27 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %56, i32 0, i32 9
  %57 = load i8, i8* %is_param27, align 1
  %tobool28 = icmp ne i8 %57, 0
  br i1 %tobool28, label %if.then.29, label %if.else.40

if.then.29:                                       ; preds = %if.end.26
  %58 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %58, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %59 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %59, i32 0, i32 34
  %60 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %scanners31 = getelementptr inbounds %struct.encoding, %struct.encoding* %60, i32 0, i32 0
  %arrayidx32 = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners31, i32 0, i64 0
  %61 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx32, align 8
  %62 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %62, i32 0, i32 34
  %63 = load %struct.encoding*, %struct.encoding** %m_encoding33, align 8
  %64 = load i8*, i8** %s.addr, align 8
  %65 = load i8*, i8** %end.addr, align 8
  %call34 = call i32 %61(%struct.encoding* %63, i8* %64, i8* %65, i8** %next)
  store i32 %call34, i32* %tok30, align 4
  %66 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %67 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding35 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %67, i32 0, i32 34
  %68 = load %struct.encoding*, %struct.encoding** %m_encoding35, align 8
  %69 = load i8*, i8** %s.addr, align 8
  %70 = load i8*, i8** %end.addr, align 8
  %71 = load i32, i32* %tok30, align 4
  %72 = load i8*, i8** %next, align 8
  %73 = load i8**, i8*** %nextPtr.addr, align 8
  %74 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus36 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %74, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus36, i32 0, i32 1
  %75 = load i8, i8* %finalBuffer, align 1
  %tobool37 = icmp ne i8 %75, 0
  %lnot = xor i1 %tobool37, true
  %lnot.ext = zext i1 %lnot to i32
  %conv38 = trunc i32 %lnot.ext to i8
  %call39 = call i32 @doProlog(%struct.XML_ParserStruct* %66, %struct.encoding* %68, i8* %69, i8* %70, i32 %71, i8* %72, i8** %73, i8 zeroext %conv38)
  store i32 %call39, i32* %retval
  br label %return

if.else.40:                                       ; preds = %if.end.26
  %76 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor41 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %76, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @contentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor41, align 8
  %77 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parentParser = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %78, i32 0, i32 84
  %79 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %m_parentParser, align 8
  %tobool42 = icmp ne %struct.XML_ParserStruct* %79, null
  %cond = select i1 %tobool42, i32 1, i32 0
  %80 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding43 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %80, i32 0, i32 34
  %81 = load %struct.encoding*, %struct.encoding** %m_encoding43, align 8
  %82 = load i8*, i8** %s.addr, align 8
  %83 = load i8*, i8** %end.addr, align 8
  %84 = load i8**, i8*** %nextPtr.addr, align 8
  %85 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus44 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %85, i32 0, i32 85
  %finalBuffer45 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus44, i32 0, i32 1
  %86 = load i8, i8* %finalBuffer45, align 1
  %tobool46 = icmp ne i8 %86, 0
  %lnot47 = xor i1 %tobool46, true
  %lnot.ext48 = zext i1 %lnot47 to i32
  %conv49 = trunc i32 %lnot.ext48 to i8
  %call50 = call i32 @doContent(%struct.XML_ParserStruct* %77, i32 %cond, %struct.encoding* %81, i8* %82, i8* %83, i8** %84, i8 zeroext %conv49)
  store i32 %call50, i32* %retval
  br label %return

return:                                           ; preds = %if.else.40, %if.then.29, %if.then.17, %if.then.13, %if.then
  %87 = load i32, i32* %retval
  ret i32 %87
}

; Function Attrs: nounwind uwtable
define internal void @build_node(%struct.XML_ParserStruct* %parser, i32 %src_node, %struct.XML_cp* %dest, %struct.XML_cp** %contpos, i8** %strpos) #0 {
entry:
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %src_node.addr = alloca i32, align 4
  %dest.addr = alloca %struct.XML_cp*, align 8
  %contpos.addr = alloca %struct.XML_cp**, align 8
  %strpos.addr = alloca i8**, align 8
  %dtd = alloca %struct.DTD*, align 8
  %src = alloca i8*, align 8
  %i = alloca i32, align 4
  %cn = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i32 %src_node, i32* %src_node.addr, align 4
  store %struct.XML_cp* %dest, %struct.XML_cp** %dest.addr, align 8
  store %struct.XML_cp** %contpos, %struct.XML_cp*** %contpos.addr, align 8
  store i8** %strpos, i8*** %strpos.addr, align 8
  %0 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_dtd = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %0, i32 0, i32 65
  %1 = load %struct.DTD*, %struct.DTD** %m_dtd, align 8
  store %struct.DTD* %1, %struct.DTD** %dtd, align 8
  %2 = load i32, i32* %src_node.addr, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold = getelementptr inbounds %struct.DTD, %struct.DTD* %3, i32 0, i32 13
  %4 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold, align 8
  %arrayidx = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %4, i64 %idxprom
  %type = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx, i32 0, i32 0
  %5 = load i32, i32* %type, align 4
  %6 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8
  %type1 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %6, i32 0, i32 0
  store i32 %5, i32* %type1, align 4
  %7 = load i32, i32* %src_node.addr, align 4
  %idxprom2 = sext i32 %7 to i64
  %8 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold3 = getelementptr inbounds %struct.DTD, %struct.DTD* %8, i32 0, i32 13
  %9 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold3, align 8
  %arrayidx4 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %9, i64 %idxprom2
  %quant = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx4, i32 0, i32 1
  %10 = load i32, i32* %quant, align 4
  %11 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8
  %quant5 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %11, i32 0, i32 1
  store i32 %10, i32* %quant5, align 4
  %12 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8
  %type6 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %12, i32 0, i32 0
  %13 = load i32, i32* %type6, align 4
  %cmp = icmp eq i32 %13, 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %14 = load i8**, i8*** %strpos.addr, align 8
  %15 = load i8*, i8** %14, align 8
  %16 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8
  %name = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %16, i32 0, i32 2
  store i8* %15, i8** %name, align 8
  %17 = load i32, i32* %src_node.addr, align 4
  %idxprom7 = sext i32 %17 to i64
  %18 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold8 = getelementptr inbounds %struct.DTD, %struct.DTD* %18, i32 0, i32 13
  %19 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold8, align 8
  %arrayidx9 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %19, i64 %idxprom7
  %name10 = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx9, i32 0, i32 2
  %20 = load i8*, i8** %name10, align 8
  store i8* %20, i8** %src, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end, %if.then
  %21 = load i8*, i8** %src, align 8
  %22 = load i8, i8* %21, align 1
  %23 = load i8**, i8*** %strpos.addr, align 8
  %24 = load i8*, i8** %23, align 8
  %incdec.ptr = getelementptr i8, i8* %24, i32 1
  store i8* %incdec.ptr, i8** %23, align 8
  store i8 %22, i8* %24, align 1
  %25 = load i8*, i8** %src, align 8
  %26 = load i8, i8* %25, align 1
  %tobool = icmp ne i8 %26, 0
  br i1 %tobool, label %if.end, label %if.then.11

if.then.11:                                       ; preds = %for.cond
  br label %for.end

if.end:                                           ; preds = %for.cond
  %27 = load i8*, i8** %src, align 8
  %incdec.ptr12 = getelementptr i8, i8* %27, i32 1
  store i8* %incdec.ptr12, i8** %src, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.11
  %28 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8
  %numchildren = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %28, i32 0, i32 3
  store i32 0, i32* %numchildren, align 4
  %29 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8
  %children = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %29, i32 0, i32 4
  store %struct.XML_cp* null, %struct.XML_cp** %children, align 8
  br label %if.end.33

if.else:                                          ; preds = %entry
  %30 = load i32, i32* %src_node.addr, align 4
  %idxprom13 = sext i32 %30 to i64
  %31 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold14 = getelementptr inbounds %struct.DTD, %struct.DTD* %31, i32 0, i32 13
  %32 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold14, align 8
  %arrayidx15 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %32, i64 %idxprom13
  %childcnt = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx15, i32 0, i32 5
  %33 = load i32, i32* %childcnt, align 4
  %34 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8
  %numchildren16 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %34, i32 0, i32 3
  store i32 %33, i32* %numchildren16, align 4
  %35 = load %struct.XML_cp**, %struct.XML_cp*** %contpos.addr, align 8
  %36 = load %struct.XML_cp*, %struct.XML_cp** %35, align 8
  %37 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8
  %children17 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %37, i32 0, i32 4
  store %struct.XML_cp* %36, %struct.XML_cp** %children17, align 8
  %38 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8
  %numchildren18 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %38, i32 0, i32 3
  %39 = load i32, i32* %numchildren18, align 4
  %40 = load %struct.XML_cp**, %struct.XML_cp*** %contpos.addr, align 8
  %41 = load %struct.XML_cp*, %struct.XML_cp** %40, align 8
  %idx.ext = zext i32 %39 to i64
  %add.ptr = getelementptr %struct.XML_cp, %struct.XML_cp* %41, i64 %idx.ext
  store %struct.XML_cp* %add.ptr, %struct.XML_cp** %40, align 8
  store i32 0, i32* %i, align 4
  %42 = load i32, i32* %src_node.addr, align 4
  %idxprom19 = sext i32 %42 to i64
  %43 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold20 = getelementptr inbounds %struct.DTD, %struct.DTD* %43, i32 0, i32 13
  %44 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold20, align 8
  %arrayidx21 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %44, i64 %idxprom19
  %firstchild = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx21, i32 0, i32 3
  %45 = load i32, i32* %firstchild, align 4
  store i32 %45, i32* %cn, align 4
  br label %for.cond.22

for.cond.22:                                      ; preds = %for.inc, %if.else
  %46 = load i32, i32* %i, align 4
  %47 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8
  %numchildren23 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %47, i32 0, i32 3
  %48 = load i32, i32* %numchildren23, align 4
  %cmp24 = icmp ult i32 %46, %48
  br i1 %cmp24, label %for.body, label %for.end.31

for.body:                                         ; preds = %for.cond.22
  %49 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %50 = load i32, i32* %cn, align 4
  %51 = load i32, i32* %i, align 4
  %idxprom25 = zext i32 %51 to i64
  %52 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8
  %children26 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %52, i32 0, i32 4
  %53 = load %struct.XML_cp*, %struct.XML_cp** %children26, align 8
  %arrayidx27 = getelementptr %struct.XML_cp, %struct.XML_cp* %53, i64 %idxprom25
  %54 = load %struct.XML_cp**, %struct.XML_cp*** %contpos.addr, align 8
  %55 = load i8**, i8*** %strpos.addr, align 8
  call void @build_node(%struct.XML_ParserStruct* %49, i32 %50, %struct.XML_cp* %arrayidx27, %struct.XML_cp** %54, i8** %55)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %56 = load i32, i32* %i, align 4
  %inc = add i32 %56, 1
  store i32 %inc, i32* %i, align 4
  %57 = load i32, i32* %cn, align 4
  %idxprom28 = sext i32 %57 to i64
  %58 = load %struct.DTD*, %struct.DTD** %dtd, align 8
  %scaffold29 = getelementptr inbounds %struct.DTD, %struct.DTD* %58, i32 0, i32 13
  %59 = load %struct.CONTENT_SCAFFOLD*, %struct.CONTENT_SCAFFOLD** %scaffold29, align 8
  %arrayidx30 = getelementptr %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %59, i64 %idxprom28
  %nextsib = getelementptr inbounds %struct.CONTENT_SCAFFOLD, %struct.CONTENT_SCAFFOLD* %arrayidx30, i32 0, i32 6
  %60 = load i32, i32* %nextsib, align 4
  store i32 %60, i32* %cn, align 4
  br label %for.cond.22

for.end.31:                                       ; preds = %for.cond.22
  %61 = load %struct.XML_cp*, %struct.XML_cp** %dest.addr, align 8
  %name32 = getelementptr inbounds %struct.XML_cp, %struct.XML_cp* %61, i32 0, i32 2
  store i8* null, i8** %name32, align 8
  br label %if.end.33

if.end.33:                                        ; preds = %for.end.31, %for.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @normalizeLines(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %s.addr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.cond
  br label %return

if.end:                                           ; preds = %for.cond
  %2 = load i8*, i8** %s.addr, align 8
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp eq i32 %conv2, 13
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  br label %for.end

if.end.6:                                         ; preds = %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end.6
  %4 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.5
  %5 = load i8*, i8** %s.addr, align 8
  store i8* %5, i8** %p, align 8
  br label %do.body

do.body:                                          ; preds = %do.cond, %for.end
  %6 = load i8*, i8** %s.addr, align 8
  %7 = load i8, i8* %6, align 1
  %conv7 = sext i8 %7 to i32
  %cmp8 = icmp eq i32 %conv7, 13
  br i1 %cmp8, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %do.body
  %8 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr i8, i8* %8, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 10, i8* %8, align 1
  %9 = load i8*, i8** %s.addr, align 8
  %incdec.ptr12 = getelementptr i8, i8* %9, i32 1
  store i8* %incdec.ptr12, i8** %s.addr, align 8
  %10 = load i8, i8* %incdec.ptr12, align 1
  %conv13 = sext i8 %10 to i32
  %cmp14 = icmp eq i32 %conv13, 10
  br i1 %cmp14, label %if.then.16, label %if.end.18

if.then.16:                                       ; preds = %if.then.10
  %11 = load i8*, i8** %s.addr, align 8
  %incdec.ptr17 = getelementptr i8, i8* %11, i32 1
  store i8* %incdec.ptr17, i8** %s.addr, align 8
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.16, %if.then.10
  br label %if.end.21

if.else:                                          ; preds = %do.body
  %12 = load i8*, i8** %s.addr, align 8
  %incdec.ptr19 = getelementptr i8, i8* %12, i32 1
  store i8* %incdec.ptr19, i8** %s.addr, align 8
  %13 = load i8, i8* %12, align 1
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr20 = getelementptr i8, i8* %14, i32 1
  store i8* %incdec.ptr20, i8** %p, align 8
  store i8 %13, i8* %14, align 1
  br label %if.end.21

if.end.21:                                        ; preds = %if.else, %if.end.18
  br label %do.cond

do.cond:                                          ; preds = %if.end.21
  %15 = load i8*, i8** %s.addr, align 8
  %16 = load i8, i8* %15, align 1
  %tobool = icmp ne i8 %16, 0
  br i1 %tobool, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %17 = load i8*, i8** %p, align 8
  store i8 0, i8* %17, align 1
  br label %return

return:                                           ; preds = %do.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal i64 @generate_hash_secret_salt() #0 {
entry:
  %seed = alloca i32, align 4
  %call = call i64 @time(i64* null) #2
  %rem = srem i64 %call, 4294967295
  %conv = trunc i64 %rem to i32
  store i32 %conv, i32* %seed, align 4
  %0 = load i32, i32* %seed, align 4
  call void @srand(i32 %0) #2
  %call1 = call i32 @rand() #2
  %conv2 = sext i32 %call1 to i64
  ret i64 %conv2
}

; Function Attrs: nounwind
declare i64 @time(i64*) #3

; Function Attrs: nounwind
declare void @srand(i32) #3

; Function Attrs: nounwind
declare i32 @rand() #3

; Function Attrs: nounwind uwtable
define internal i32 @externalEntityInitProcessor2(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %start, i8** %start.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  %0 = load i8*, i8** %start.addr, align 8
  store i8* %0, i8** %next, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 34
  %2 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %2, i32 0, i32 0
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 1
  %3 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 34
  %5 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8
  %6 = load i8*, i8** %start.addr, align 8
  %7 = load i8*, i8** %end.addr, align 8
  %call = call i32 %3(%struct.encoding* %5, i8* %6, i8* %7, i8** %next)
  store i32 %call, i32* %tok, align 4
  %8 = load i32, i32* %tok, align 4
  switch i32 %8, label %sw.epilog [
    i32 14, label %sw.bb
    i32 -1, label %sw.bb.2
    i32 -2, label %sw.bb.8
  ]

sw.bb:                                            ; preds = %entry
  %9 = load i8*, i8** %next, align 8
  %10 = load i8*, i8** %end.addr, align 8
  %cmp = icmp eq i8* %9, %10
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1
  %12 = load i8, i8* %finalBuffer, align 1
  %tobool = icmp ne i8 %12, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %next, align 8
  %14 = load i8**, i8*** %endPtr.addr, align 8
  store i8* %13, i8** %14, align 8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %sw.bb
  %15 = load i8*, i8** %next, align 8
  store i8* %15, i8** %start.addr, align 8
  br label %sw.epilog

sw.bb.2:                                          ; preds = %entry
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus3 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %16, i32 0, i32 85
  %finalBuffer4 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus3, i32 0, i32 1
  %17 = load i8, i8* %finalBuffer4, align 1
  %tobool5 = icmp ne i8 %17, 0
  br i1 %tobool5, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %sw.bb.2
  %18 = load i8*, i8** %start.addr, align 8
  %19 = load i8**, i8*** %endPtr.addr, align 8
  store i8* %18, i8** %19, align 8
  store i32 0, i32* %retval
  br label %return

if.end.7:                                         ; preds = %sw.bb.2
  %20 = load i8*, i8** %start.addr, align 8
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 47
  store i8* %20, i8** %m_eventPtr, align 8
  store i32 5, i32* %retval
  br label %return

sw.bb.8:                                          ; preds = %entry
  %22 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %22, i32 0, i32 85
  %finalBuffer10 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus9, i32 0, i32 1
  %23 = load i8, i8* %finalBuffer10, align 1
  %tobool11 = icmp ne i8 %23, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %sw.bb.8
  %24 = load i8*, i8** %start.addr, align 8
  %25 = load i8**, i8*** %endPtr.addr, align 8
  store i8* %24, i8** %25, align 8
  store i32 0, i32* %retval
  br label %return

if.end.13:                                        ; preds = %sw.bb.8
  %26 = load i8*, i8** %start.addr, align 8
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr14 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 47
  store i8* %26, i8** %m_eventPtr14, align 8
  store i32 6, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %entry, %if.end
  %28 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %28, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityInitProcessor3, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %29 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %30 = load i8*, i8** %start.addr, align 8
  %31 = load i8*, i8** %end.addr, align 8
  %32 = load i8**, i8*** %endPtr.addr, align 8
  %call15 = call i32 @externalEntityInitProcessor3(%struct.XML_ParserStruct* %29, i8* %30, i8* %31, i8** %32)
  store i32 %call15, i32* %retval
  br label %return

return:                                           ; preds = %sw.epilog, %if.end.13, %if.then.12, %if.end.7, %if.then.6, %if.then
  %33 = load i32, i32* %retval
  ret i32 %33
}

; Function Attrs: nounwind uwtable
define internal i32 @externalEntityInitProcessor3(%struct.XML_ParserStruct* %parser, i8* %start, i8* %end, i8** %endPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %endPtr.addr = alloca i8**, align 8
  %tok = alloca i32, align 4
  %next = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %start, i8** %start.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %endPtr, i8*** %endPtr.addr, align 8
  %0 = load i8*, i8** %start.addr, align 8
  store i8* %0, i8** %next, align 8
  %1 = load i8*, i8** %start.addr, align 8
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 47
  store i8* %1, i8** %m_eventPtr, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 34
  %4 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %4, i32 0, i32 0
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 1
  %5 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %6 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %6, i32 0, i32 34
  %7 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8
  %8 = load i8*, i8** %start.addr, align 8
  %9 = load i8*, i8** %end.addr, align 8
  %call = call i32 %5(%struct.encoding* %7, i8* %8, i8* %9, i8** %next)
  store i32 %call, i32* %tok, align 4
  %10 = load i8*, i8** %next, align 8
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %11, i32 0, i32 48
  store i8* %10, i8** %m_eventEndPtr, align 8
  %12 = load i32, i32* %tok, align 4
  switch i32 %12, label %sw.epilog.15 [
    i32 12, label %sw.bb
    i32 -1, label %sw.bb.5
    i32 -2, label %sw.bb.9
  ]

sw.bb:                                            ; preds = %entry
  %13 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %14 = load i8*, i8** %start.addr, align 8
  %15 = load i8*, i8** %next, align 8
  %call2 = call i32 @processXmlDecl(%struct.XML_ParserStruct* %13, i32 1, i8* %14, i8* %15)
  store i32 %call2, i32* %result, align 4
  %16 = load i32, i32* %result, align 4
  %cmp = icmp ne i32 %16, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  %17 = load i32, i32* %result, align 4
  store i32 %17, i32* %retval
  br label %return

if.end:                                           ; preds = %sw.bb
  %18 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %18, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 0
  %19 = load i32, i32* %parsing, align 4
  switch i32 %19, label %sw.default [
    i32 3, label %sw.bb.3
    i32 2, label %sw.bb.4
  ]

sw.bb.3:                                          ; preds = %if.end
  %20 = load i8*, i8** %next, align 8
  %21 = load i8**, i8*** %endPtr.addr, align 8
  store i8* %20, i8** %21, align 8
  store i32 0, i32* %retval
  br label %return

sw.bb.4:                                          ; preds = %if.end
  store i32 35, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.end
  %22 = load i8*, i8** %next, align 8
  store i8* %22, i8** %start.addr, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  br label %sw.epilog.15

sw.bb.5:                                          ; preds = %entry
  %23 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus6 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %23, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus6, i32 0, i32 1
  %24 = load i8, i8* %finalBuffer, align 1
  %tobool = icmp ne i8 %24, 0
  br i1 %tobool, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %sw.bb.5
  %25 = load i8*, i8** %start.addr, align 8
  %26 = load i8**, i8*** %endPtr.addr, align 8
  store i8* %25, i8** %26, align 8
  store i32 0, i32* %retval
  br label %return

if.end.8:                                         ; preds = %sw.bb.5
  store i32 5, i32* %retval
  br label %return

sw.bb.9:                                          ; preds = %entry
  %27 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus10 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %27, i32 0, i32 85
  %finalBuffer11 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus10, i32 0, i32 1
  %28 = load i8, i8* %finalBuffer11, align 1
  %tobool12 = icmp ne i8 %28, 0
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %sw.bb.9
  %29 = load i8*, i8** %start.addr, align 8
  %30 = load i8**, i8*** %endPtr.addr, align 8
  store i8* %29, i8** %30, align 8
  store i32 0, i32* %retval
  br label %return

if.end.14:                                        ; preds = %sw.bb.9
  store i32 6, i32* %retval
  br label %return

sw.epilog.15:                                     ; preds = %entry, %sw.epilog
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @externalEntityContentProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %32 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_tagLevel = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %32, i32 0, i32 53
  store i32 1, i32* %m_tagLevel, align 4
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %34 = load i8*, i8** %start.addr, align 8
  %35 = load i8*, i8** %end.addr, align 8
  %36 = load i8**, i8*** %endPtr.addr, align 8
  %call16 = call i32 @externalEntityContentProcessor(%struct.XML_ParserStruct* %33, i8* %34, i8* %35, i8** %36)
  store i32 %call16, i32* %retval
  br label %return

return:                                           ; preds = %sw.epilog.15, %if.end.14, %if.then.13, %if.end.8, %if.then.7, %sw.bb.4, %sw.bb.3, %if.then
  %37 = load i32, i32* %retval
  ret i32 %37
}

; Function Attrs: nounwind uwtable
define internal i32 @entityValueInitProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %tok = alloca i32, align 4
  %start = alloca i8*, align 8
  %next = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  %0 = load i8*, i8** %s.addr, align 8
  store i8* %0, i8** %start, align 8
  %1 = load i8*, i8** %start, align 8
  store i8* %1, i8** %next, align 8
  %2 = load i8*, i8** %start, align 8
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %3, i32 0, i32 47
  store i8* %2, i8** %m_eventPtr, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end.32, %entry
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 34
  %5 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %5, i32 0, i32 0
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0
  %6 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %7, i32 0, i32 34
  %8 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8
  %9 = load i8*, i8** %start, align 8
  %10 = load i8*, i8** %end.addr, align 8
  %call = call i32 %6(%struct.encoding* %8, i8* %9, i8* %10, i8** %next)
  store i32 %call, i32* %tok, align 4
  %11 = load i8*, i8** %next, align 8
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventEndPtr = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %12, i32 0, i32 48
  store i8* %11, i8** %m_eventEndPtr, align 8
  %13 = load i32, i32* %tok, align 4
  %cmp = icmp sle i32 %13, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %for.cond
  %14 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %14, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1
  %15 = load i8, i8* %finalBuffer, align 1
  %tobool = icmp ne i8 %15, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %16 = load i32, i32* %tok, align 4
  %cmp2 = icmp ne i32 %16, 0
  br i1 %cmp2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %land.lhs.true
  %17 = load i8*, i8** %s.addr, align 8
  %18 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %17, i8** %18, align 8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %if.then
  %19 = load i32, i32* %tok, align 4
  switch i32 %19, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb.4
    i32 -2, label %sw.bb.5
    i32 -4, label %sw.bb.6
  ]

sw.bb:                                            ; preds = %if.end
  store i32 4, i32* %retval
  br label %return

sw.bb.4:                                          ; preds = %if.end
  store i32 5, i32* %retval
  br label %return

sw.bb.5:                                          ; preds = %if.end
  store i32 6, i32* %retval
  br label %return

sw.bb.6:                                          ; preds = %if.end
  br label %sw.default

sw.default:                                       ; preds = %if.end, %sw.bb.6
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %21 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding7 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %21, i32 0, i32 34
  %22 = load %struct.encoding*, %struct.encoding** %m_encoding7, align 8
  %23 = load i8*, i8** %s.addr, align 8
  %24 = load i8*, i8** %end.addr, align 8
  %call8 = call i32 @storeEntityValue(%struct.XML_ParserStruct* %20, %struct.encoding* %22, i8* %23, i8* %24)
  store i32 %call8, i32* %retval
  br label %return

if.else:                                          ; preds = %for.cond
  %25 = load i32, i32* %tok, align 4
  %cmp9 = icmp eq i32 %25, 12
  br i1 %cmp9, label %if.then.10, label %if.else.21

if.then.10:                                       ; preds = %if.else
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %27 = load i8*, i8** %start, align 8
  %28 = load i8*, i8** %next, align 8
  %call11 = call i32 @processXmlDecl(%struct.XML_ParserStruct* %26, i32 0, i8* %27, i8* %28)
  store i32 %call11, i32* %result, align 4
  %29 = load i32, i32* %result, align 4
  %cmp12 = icmp ne i32 %29, 0
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.then.10
  %30 = load i32, i32* %result, align 4
  store i32 %30, i32* %retval
  br label %return

if.end.14:                                        ; preds = %if.then.10
  %31 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus15 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %31, i32 0, i32 85
  %parsing = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus15, i32 0, i32 0
  %32 = load i32, i32* %parsing, align 4
  switch i32 %32, label %sw.default.18 [
    i32 3, label %sw.bb.16
    i32 2, label %sw.bb.17
  ]

sw.bb.16:                                         ; preds = %if.end.14
  %33 = load i8*, i8** %next, align 8
  %34 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %33, i8** %34, align 8
  store i32 0, i32* %retval
  br label %return

sw.bb.17:                                         ; preds = %if.end.14
  store i32 35, i32* %retval
  br label %return

sw.default.18:                                    ; preds = %if.end.14
  %35 = load i8*, i8** %next, align 8
  %36 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %35, i8** %36, align 8
  br label %sw.epilog.19

sw.epilog.19:                                     ; preds = %sw.default.18
  %37 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %37, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @entityValueProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %39 = load i8*, i8** %next, align 8
  %40 = load i8*, i8** %end.addr, align 8
  %41 = load i8**, i8*** %nextPtr.addr, align 8
  %call20 = call i32 @entityValueProcessor(%struct.XML_ParserStruct* %38, i8* %39, i8* %40, i8** %41)
  store i32 %call20, i32* %retval
  br label %return

if.else.21:                                       ; preds = %if.else
  %42 = load i32, i32* %tok, align 4
  %cmp22 = icmp eq i32 %42, 14
  br i1 %cmp22, label %land.lhs.true.23, label %if.end.30

land.lhs.true.23:                                 ; preds = %if.else.21
  %43 = load i8*, i8** %next, align 8
  %44 = load i8*, i8** %end.addr, align 8
  %cmp24 = icmp eq i8* %43, %44
  br i1 %cmp24, label %land.lhs.true.25, label %if.end.30

land.lhs.true.25:                                 ; preds = %land.lhs.true.23
  %45 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus26 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %45, i32 0, i32 85
  %finalBuffer27 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus26, i32 0, i32 1
  %46 = load i8, i8* %finalBuffer27, align 1
  %tobool28 = icmp ne i8 %46, 0
  br i1 %tobool28, label %if.end.30, label %if.then.29

if.then.29:                                       ; preds = %land.lhs.true.25
  %47 = load i8*, i8** %next, align 8
  %48 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %47, i8** %48, align 8
  store i32 0, i32* %retval
  br label %return

if.end.30:                                        ; preds = %land.lhs.true.25, %land.lhs.true.23, %if.else.21
  br label %if.end.31

if.end.31:                                        ; preds = %if.end.30
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31
  %49 = load i8*, i8** %next, align 8
  store i8* %49, i8** %start, align 8
  %50 = load i8*, i8** %start, align 8
  %51 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_eventPtr33 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %51, i32 0, i32 47
  store i8* %50, i8** %m_eventPtr33, align 8
  br label %for.cond

return:                                           ; preds = %if.then.29, %sw.epilog.19, %sw.bb.17, %sw.bb.16, %if.then.13, %sw.epilog, %sw.bb.5, %sw.bb.4, %sw.bb, %if.then.3
  %52 = load i32, i32* %retval
  ret i32 %52
}

; Function Attrs: nounwind uwtable
define internal i32 @externalParEntProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %next = alloca i8*, align 8
  %tok = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  %0 = load i8*, i8** %s.addr, align 8
  store i8* %0, i8** %next, align 8
  %1 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %1, i32 0, i32 34
  %2 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %2, i32 0, i32 0
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0
  %3 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding1 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %4, i32 0, i32 34
  %5 = load %struct.encoding*, %struct.encoding** %m_encoding1, align 8
  %6 = load i8*, i8** %s.addr, align 8
  %7 = load i8*, i8** %end.addr, align 8
  %call = call i32 %3(%struct.encoding* %5, i8* %6, i8* %7, i8** %next)
  store i32 %call, i32* %tok, align 4
  %8 = load i32, i32* %tok, align 4
  %cmp = icmp sle i32 %8, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %9, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1
  %10 = load i8, i8* %finalBuffer, align 1
  %tobool = icmp ne i8 %10, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %11 = load i32, i32* %tok, align 4
  %cmp2 = icmp ne i32 %11, 0
  br i1 %cmp2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %land.lhs.true
  %12 = load i8*, i8** %s.addr, align 8
  %13 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %12, i8** %13, align 8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %if.then
  %14 = load i32, i32* %tok, align 4
  switch i32 %14, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb.4
    i32 -2, label %sw.bb.5
    i32 -4, label %sw.bb.6
  ]

sw.bb:                                            ; preds = %if.end
  store i32 4, i32* %retval
  br label %return

sw.bb.4:                                          ; preds = %if.end
  store i32 5, i32* %retval
  br label %return

sw.bb.5:                                          ; preds = %if.end
  store i32 6, i32* %retval
  br label %return

sw.bb.6:                                          ; preds = %if.end
  br label %sw.default

sw.default:                                       ; preds = %if.end, %sw.bb.6
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  br label %if.end.15

if.else:                                          ; preds = %entry
  %15 = load i32, i32* %tok, align 4
  %cmp7 = icmp eq i32 %15, 14
  br i1 %cmp7, label %if.then.8, label %if.end.14

if.then.8:                                        ; preds = %if.else
  %16 = load i8*, i8** %next, align 8
  store i8* %16, i8** %s.addr, align 8
  %17 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding9 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %17, i32 0, i32 34
  %18 = load %struct.encoding*, %struct.encoding** %m_encoding9, align 8
  %scanners10 = getelementptr inbounds %struct.encoding, %struct.encoding* %18, i32 0, i32 0
  %arrayidx11 = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners10, i32 0, i64 0
  %19 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx11, align 8
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding12 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %20, i32 0, i32 34
  %21 = load %struct.encoding*, %struct.encoding** %m_encoding12, align 8
  %22 = load i8*, i8** %s.addr, align 8
  %23 = load i8*, i8** %end.addr, align 8
  %call13 = call i32 %19(%struct.encoding* %21, i8* %22, i8* %23, i8** %next)
  store i32 %call13, i32* %tok, align 4
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.8, %if.else
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %sw.epilog
  %24 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_processor = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %24, i32 0, i32 45
  store i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)* @prologProcessor, i32 (%struct.XML_ParserStruct*, i8*, i8*, i8**)** %m_processor, align 8
  %25 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding16 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %26, i32 0, i32 34
  %27 = load %struct.encoding*, %struct.encoding** %m_encoding16, align 8
  %28 = load i8*, i8** %s.addr, align 8
  %29 = load i8*, i8** %end.addr, align 8
  %30 = load i32, i32* %tok, align 4
  %31 = load i8*, i8** %next, align 8
  %32 = load i8**, i8*** %nextPtr.addr, align 8
  %33 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus17 = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %33, i32 0, i32 85
  %finalBuffer18 = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus17, i32 0, i32 1
  %34 = load i8, i8* %finalBuffer18, align 1
  %tobool19 = icmp ne i8 %34, 0
  %lnot = xor i1 %tobool19, true
  %lnot.ext = zext i1 %lnot to i32
  %conv = trunc i32 %lnot.ext to i8
  %call20 = call i32 @doProlog(%struct.XML_ParserStruct* %25, %struct.encoding* %27, i8* %28, i8* %29, i32 %30, i8* %31, i8** %32, i8 zeroext %conv)
  store i32 %call20, i32* %retval
  br label %return

return:                                           ; preds = %if.end.15, %sw.bb.5, %sw.bb.4, %sw.bb, %if.then.3
  %35 = load i32, i32* %retval
  ret i32 %35
}

; Function Attrs: nounwind uwtable
define internal i32 @entityValueProcessor(%struct.XML_ParserStruct* %parser, i8* %s, i8* %end, i8** %nextPtr) #0 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.XML_ParserStruct*, align 8
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %nextPtr.addr = alloca i8**, align 8
  %start = alloca i8*, align 8
  %next = alloca i8*, align 8
  %enc = alloca %struct.encoding*, align 8
  %tok = alloca i32, align 4
  store %struct.XML_ParserStruct* %parser, %struct.XML_ParserStruct** %parser.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i8* %end, i8** %end.addr, align 8
  store i8** %nextPtr, i8*** %nextPtr.addr, align 8
  %0 = load i8*, i8** %s.addr, align 8
  store i8* %0, i8** %start, align 8
  %1 = load i8*, i8** %s.addr, align 8
  store i8* %1, i8** %next, align 8
  %2 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_encoding = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %2, i32 0, i32 34
  %3 = load %struct.encoding*, %struct.encoding** %m_encoding, align 8
  store %struct.encoding* %3, %struct.encoding** %enc, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end.7, %entry
  %4 = load %struct.encoding*, %struct.encoding** %enc, align 8
  %scanners = getelementptr inbounds %struct.encoding, %struct.encoding* %4, i32 0, i32 0
  %arrayidx = getelementptr [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*], [4 x i32 (%struct.encoding*, i8*, i8*, i8**)*]* %scanners, i32 0, i64 0
  %5 = load i32 (%struct.encoding*, i8*, i8*, i8**)*, i32 (%struct.encoding*, i8*, i8*, i8**)** %arrayidx, align 8
  %6 = load %struct.encoding*, %struct.encoding** %enc, align 8
  %7 = load i8*, i8** %start, align 8
  %8 = load i8*, i8** %end.addr, align 8
  %call = call i32 %5(%struct.encoding* %6, i8* %7, i8* %8, i8** %next)
  store i32 %call, i32* %tok, align 4
  %9 = load i32, i32* %tok, align 4
  %cmp = icmp sle i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end.7

if.then:                                          ; preds = %for.cond
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %m_parsingStatus = getelementptr inbounds %struct.XML_ParserStruct, %struct.XML_ParserStruct* %10, i32 0, i32 85
  %finalBuffer = getelementptr inbounds %struct.XML_ParsingStatus, %struct.XML_ParsingStatus* %m_parsingStatus, i32 0, i32 1
  %11 = load i8, i8* %finalBuffer, align 1
  %tobool = icmp ne i8 %11, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %12 = load i32, i32* %tok, align 4
  %cmp1 = icmp ne i32 %12, 0
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %land.lhs.true
  %13 = load i8*, i8** %s.addr, align 8
  %14 = load i8**, i8*** %nextPtr.addr, align 8
  store i8* %13, i8** %14, align 8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %if.then
  %15 = load i32, i32* %tok, align 4
  switch i32 %15, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb.3
    i32 -2, label %sw.bb.4
    i32 -4, label %sw.bb.5
  ]

sw.bb:                                            ; preds = %if.end
  store i32 4, i32* %retval
  br label %return

sw.bb.3:                                          ; preds = %if.end
  store i32 5, i32* %retval
  br label %return

sw.bb.4:                                          ; preds = %if.end
  store i32 6, i32* %retval
  br label %return

sw.bb.5:                                          ; preds = %if.end
  br label %sw.default

sw.default:                                       ; preds = %if.end, %sw.bb.5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser.addr, align 8
  %17 = load %struct.encoding*, %struct.encoding** %enc, align 8
  %18 = load i8*, i8** %s.addr, align 8
  %19 = load i8*, i8** %end.addr, align 8
  %call6 = call i32 @storeEntityValue(%struct.XML_ParserStruct* %16, %struct.encoding* %17, i8* %18, i8* %19)
  store i32 %call6, i32* %retval
  br label %return

if.end.7:                                         ; preds = %for.cond
  %20 = load i8*, i8** %next, align 8
  store i8* %20, i8** %start, align 8
  br label %for.cond

return:                                           ; preds = %sw.epilog, %sw.bb.4, %sw.bb.3, %sw.bb, %if.then.2
  %21 = load i32, i32* %retval
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal void @hashTableClear(%struct.HASH_TABLE* %table) #0 {
entry:
  %table.addr = alloca %struct.HASH_TABLE*, align 8
  %i = alloca i64, align 8
  store %struct.HASH_TABLE* %table, %struct.HASH_TABLE** %table.addr, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8
  %1 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %1, i32 0, i32 2
  %2 = load i64, i64* %size, align 8
  %cmp = icmp ult i64 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %mem = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %3, i32 0, i32 4
  %4 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %4, i32 0, i32 2
  %5 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %6 = load i64, i64* %i, align 8
  %7 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %7, i32 0, i32 0
  %8 = load %struct.NAMED**, %struct.NAMED*** %v, align 8
  %arrayidx = getelementptr %struct.NAMED*, %struct.NAMED** %8, i64 %6
  %9 = load %struct.NAMED*, %struct.NAMED** %arrayidx, align 8
  %10 = bitcast %struct.NAMED* %9 to i8*
  call void %5(i8* %10)
  %11 = load i64, i64* %i, align 8
  %12 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v1 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %12, i32 0, i32 0
  %13 = load %struct.NAMED**, %struct.NAMED*** %v1, align 8
  %arrayidx2 = getelementptr %struct.NAMED*, %struct.NAMED** %13, i64 %11
  store %struct.NAMED* null, %struct.NAMED** %arrayidx2, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i64, i64* %i, align 8
  %inc = add i64 %14, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %used = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %15, i32 0, i32 3
  store i64 0, i64* %used, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @hashTableDestroy(%struct.HASH_TABLE* %table) #0 {
entry:
  %table.addr = alloca %struct.HASH_TABLE*, align 8
  %i = alloca i64, align 8
  store %struct.HASH_TABLE* %table, %struct.HASH_TABLE** %table.addr, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8
  %1 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %size = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %1, i32 0, i32 2
  %2 = load i64, i64* %size, align 8
  %cmp = icmp ult i64 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %mem = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %3, i32 0, i32 4
  %4 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem, align 8
  %free_fcn = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %4, i32 0, i32 2
  %5 = load void (i8*)*, void (i8*)** %free_fcn, align 8
  %6 = load i64, i64* %i, align 8
  %7 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %7, i32 0, i32 0
  %8 = load %struct.NAMED**, %struct.NAMED*** %v, align 8
  %arrayidx = getelementptr %struct.NAMED*, %struct.NAMED** %8, i64 %6
  %9 = load %struct.NAMED*, %struct.NAMED** %arrayidx, align 8
  %10 = bitcast %struct.NAMED* %9 to i8*
  call void %5(i8* %10)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i64, i64* %i, align 8
  %inc = add i64 %11, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %12 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %mem1 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %12, i32 0, i32 4
  %13 = load %struct.XML_Memory_Handling_Suite*, %struct.XML_Memory_Handling_Suite** %mem1, align 8
  %free_fcn2 = getelementptr inbounds %struct.XML_Memory_Handling_Suite, %struct.XML_Memory_Handling_Suite* %13, i32 0, i32 2
  %14 = load void (i8*)*, void (i8*)** %free_fcn2, align 8
  %15 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %table.addr, align 8
  %v3 = getelementptr inbounds %struct.HASH_TABLE, %struct.HASH_TABLE* %15, i32 0, i32 0
  %16 = load %struct.NAMED**, %struct.NAMED*** %v3, align 8
  %17 = bitcast %struct.NAMED** %16 to i8*
  call void %14(i8* %17)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @copyEntityTable(%struct.XML_ParserStruct* %oldParser, %struct.HASH_TABLE* %newTable, %struct.STRING_POOL* %newPool, %struct.HASH_TABLE* %oldTable) #0 {
entry:
  %retval = alloca i32, align 4
  %oldParser.addr = alloca %struct.XML_ParserStruct*, align 8
  %newTable.addr = alloca %struct.HASH_TABLE*, align 8
  %newPool.addr = alloca %struct.STRING_POOL*, align 8
  %oldTable.addr = alloca %struct.HASH_TABLE*, align 8
  %iter = alloca %struct.HASH_TABLE_ITER, align 8
  %cachedOldBase = alloca i8*, align 8
  %cachedNewBase = alloca i8*, align 8
  %newE = alloca %struct.ENTITY*, align 8
  %name = alloca i8*, align 8
  %oldE = alloca %struct.ENTITY*, align 8
  %tem = alloca i8*, align 8
  %tem41 = alloca i8*, align 8
  %tem52 = alloca i8*, align 8
  store %struct.XML_ParserStruct* %oldParser, %struct.XML_ParserStruct** %oldParser.addr, align 8
  store %struct.HASH_TABLE* %newTable, %struct.HASH_TABLE** %newTable.addr, align 8
  store %struct.STRING_POOL* %newPool, %struct.STRING_POOL** %newPool.addr, align 8
  store %struct.HASH_TABLE* %oldTable, %struct.HASH_TABLE** %oldTable.addr, align 8
  store i8* null, i8** %cachedOldBase, align 8
  store i8* null, i8** %cachedNewBase, align 8
  %0 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %oldTable.addr, align 8
  call void @hashTableIterInit(%struct.HASH_TABLE_ITER* %iter, %struct.HASH_TABLE* %0)
  br label %for.cond

for.cond:                                         ; preds = %if.end.59, %entry
  %call = call %struct.NAMED* @hashTableIterNext(%struct.HASH_TABLE_ITER* %iter)
  %1 = bitcast %struct.NAMED* %call to %struct.ENTITY*
  store %struct.ENTITY* %1, %struct.ENTITY** %oldE, align 8
  %2 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %tobool = icmp ne %struct.ENTITY* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.cond
  br label %for.end

if.end:                                           ; preds = %for.cond
  %3 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8
  %4 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %name1 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %4, i32 0, i32 0
  %5 = load i8*, i8** %name1, align 8
  %call2 = call i8* @poolCopyString(%struct.STRING_POOL* %3, i8* %5)
  store i8* %call2, i8** %name, align 8
  %6 = load i8*, i8** %name, align 8
  %tobool3 = icmp ne i8* %6, null
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.5:                                         ; preds = %if.end
  %7 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %oldParser.addr, align 8
  %8 = load %struct.HASH_TABLE*, %struct.HASH_TABLE** %newTable.addr, align 8
  %9 = load i8*, i8** %name, align 8
  %call6 = call %struct.NAMED* @lookup(%struct.XML_ParserStruct* %7, %struct.HASH_TABLE* %8, i8* %9, i64 64)
  %10 = bitcast %struct.NAMED* %call6 to %struct.ENTITY*
  store %struct.ENTITY* %10, %struct.ENTITY** %newE, align 8
  %11 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8
  %tobool7 = icmp ne %struct.ENTITY* %11, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.5
  store i32 0, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end.5
  %12 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %systemId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %12, i32 0, i32 4
  %13 = load i8*, i8** %systemId, align 8
  %tobool10 = icmp ne i8* %13, null
  br i1 %tobool10, label %if.then.11, label %if.else.40

if.then.11:                                       ; preds = %if.end.9
  %14 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8
  %15 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %systemId12 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %15, i32 0, i32 4
  %16 = load i8*, i8** %systemId12, align 8
  %call13 = call i8* @poolCopyString(%struct.STRING_POOL* %14, i8* %16)
  store i8* %call13, i8** %tem, align 8
  %17 = load i8*, i8** %tem, align 8
  %tobool14 = icmp ne i8* %17, null
  br i1 %tobool14, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %if.then.11
  store i32 0, i32* %retval
  br label %return

if.end.16:                                        ; preds = %if.then.11
  %18 = load i8*, i8** %tem, align 8
  %19 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8
  %systemId17 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %19, i32 0, i32 4
  store i8* %18, i8** %systemId17, align 8
  %20 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %base = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %20, i32 0, i32 5
  %21 = load i8*, i8** %base, align 8
  %tobool18 = icmp ne i8* %21, null
  br i1 %tobool18, label %if.then.19, label %if.end.30

if.then.19:                                       ; preds = %if.end.16
  %22 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %base20 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %22, i32 0, i32 5
  %23 = load i8*, i8** %base20, align 8
  %24 = load i8*, i8** %cachedOldBase, align 8
  %cmp = icmp eq i8* %23, %24
  br i1 %cmp, label %if.then.21, label %if.else

if.then.21:                                       ; preds = %if.then.19
  %25 = load i8*, i8** %cachedNewBase, align 8
  %26 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8
  %base22 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %26, i32 0, i32 5
  store i8* %25, i8** %base22, align 8
  br label %if.end.29

if.else:                                          ; preds = %if.then.19
  %27 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %base23 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %27, i32 0, i32 5
  %28 = load i8*, i8** %base23, align 8
  store i8* %28, i8** %cachedOldBase, align 8
  %29 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8
  %30 = load i8*, i8** %cachedOldBase, align 8
  %call24 = call i8* @poolCopyString(%struct.STRING_POOL* %29, i8* %30)
  store i8* %call24, i8** %tem, align 8
  %31 = load i8*, i8** %tem, align 8
  %tobool25 = icmp ne i8* %31, null
  br i1 %tobool25, label %if.end.27, label %if.then.26

if.then.26:                                       ; preds = %if.else
  store i32 0, i32* %retval
  br label %return

if.end.27:                                        ; preds = %if.else
  %32 = load i8*, i8** %tem, align 8
  %33 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8
  %base28 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %33, i32 0, i32 5
  store i8* %32, i8** %base28, align 8
  store i8* %32, i8** %cachedNewBase, align 8
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.27, %if.then.21
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %if.end.16
  %34 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %publicId = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %34, i32 0, i32 6
  %35 = load i8*, i8** %publicId, align 8
  %tobool31 = icmp ne i8* %35, null
  br i1 %tobool31, label %if.then.32, label %if.end.39

if.then.32:                                       ; preds = %if.end.30
  %36 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8
  %37 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %publicId33 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %37, i32 0, i32 6
  %38 = load i8*, i8** %publicId33, align 8
  %call34 = call i8* @poolCopyString(%struct.STRING_POOL* %36, i8* %38)
  store i8* %call34, i8** %tem, align 8
  %39 = load i8*, i8** %tem, align 8
  %tobool35 = icmp ne i8* %39, null
  br i1 %tobool35, label %if.end.37, label %if.then.36

if.then.36:                                       ; preds = %if.then.32
  store i32 0, i32* %retval
  br label %return

if.end.37:                                        ; preds = %if.then.32
  %40 = load i8*, i8** %tem, align 8
  %41 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8
  %publicId38 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %41, i32 0, i32 6
  store i8* %40, i8** %publicId38, align 8
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.37, %if.end.30
  br label %if.end.49

if.else.40:                                       ; preds = %if.end.9
  %42 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8
  %43 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %textPtr = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %43, i32 0, i32 1
  %44 = load i8*, i8** %textPtr, align 8
  %45 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %textLen = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %45, i32 0, i32 2
  %46 = load i32, i32* %textLen, align 4
  %call42 = call i8* @poolCopyStringN(%struct.STRING_POOL* %42, i8* %44, i32 %46)
  store i8* %call42, i8** %tem41, align 8
  %47 = load i8*, i8** %tem41, align 8
  %tobool43 = icmp ne i8* %47, null
  br i1 %tobool43, label %if.end.45, label %if.then.44

if.then.44:                                       ; preds = %if.else.40
  store i32 0, i32* %retval
  br label %return

if.end.45:                                        ; preds = %if.else.40
  %48 = load i8*, i8** %tem41, align 8
  %49 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8
  %textPtr46 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %49, i32 0, i32 1
  store i8* %48, i8** %textPtr46, align 8
  %50 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %textLen47 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %50, i32 0, i32 2
  %51 = load i32, i32* %textLen47, align 4
  %52 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8
  %textLen48 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %52, i32 0, i32 2
  store i32 %51, i32* %textLen48, align 4
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.45, %if.end.39
  %53 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %notation = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %53, i32 0, i32 7
  %54 = load i8*, i8** %notation, align 8
  %tobool50 = icmp ne i8* %54, null
  br i1 %tobool50, label %if.then.51, label %if.end.59

if.then.51:                                       ; preds = %if.end.49
  %55 = load %struct.STRING_POOL*, %struct.STRING_POOL** %newPool.addr, align 8
  %56 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %notation53 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %56, i32 0, i32 7
  %57 = load i8*, i8** %notation53, align 8
  %call54 = call i8* @poolCopyString(%struct.STRING_POOL* %55, i8* %57)
  store i8* %call54, i8** %tem52, align 8
  %58 = load i8*, i8** %tem52, align 8
  %tobool55 = icmp ne i8* %58, null
  br i1 %tobool55, label %if.end.57, label %if.then.56

if.then.56:                                       ; preds = %if.then.51
  store i32 0, i32* %retval
  br label %return

if.end.57:                                        ; preds = %if.then.51
  %59 = load i8*, i8** %tem52, align 8
  %60 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8
  %notation58 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %60, i32 0, i32 7
  store i8* %59, i8** %notation58, align 8
  br label %if.end.59

if.end.59:                                        ; preds = %if.end.57, %if.end.49
  %61 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %is_param = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %61, i32 0, i32 9
  %62 = load i8, i8* %is_param, align 1
  %63 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8
  %is_param60 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %63, i32 0, i32 9
  store i8 %62, i8* %is_param60, align 1
  %64 = load %struct.ENTITY*, %struct.ENTITY** %oldE, align 8
  %is_internal = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %64, i32 0, i32 10
  %65 = load i8, i8* %is_internal, align 1
  %66 = load %struct.ENTITY*, %struct.ENTITY** %newE, align 8
  %is_internal61 = getelementptr inbounds %struct.ENTITY, %struct.ENTITY* %66, i32 0, i32 10
  store i8 %65, i8* %is_internal61, align 1
  br label %for.cond

for.end:                                          ; preds = %if.then
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.56, %if.then.44, %if.then.36, %if.then.26, %if.then.15, %if.then.8, %if.then.4
  %67 = load i32, i32* %retval
  ret i32 %67
}

; Function Attrs: nounwind uwtable
define internal i8* @poolCopyStringN(%struct.STRING_POOL* %pool, i8* %s, i32 %n) #0 {
entry:
  %retval = alloca i8*, align 8
  %pool.addr = alloca %struct.STRING_POOL*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct.STRING_POOL* %pool, %struct.STRING_POOL** %pool.addr, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %0, i32 0, i32 3
  %1 = load i8*, i8** %ptr, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call = call zeroext i8 @poolGrow(%struct.STRING_POOL* %2)
  %tobool1 = icmp ne i8 %call, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i8* null, i8** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %n.addr, align 4
  %cmp = icmp sgt i32 %3, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr2 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %4, i32 0, i32 3
  %5 = load i8*, i8** %ptr2, align 8
  %6 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %end = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %6, i32 0, i32 2
  %7 = load i8*, i8** %end, align 8
  %cmp3 = icmp eq i8* %5, %7
  br i1 %cmp3, label %land.lhs.true.4, label %cond.false

land.lhs.true.4:                                  ; preds = %for.body
  %8 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %call5 = call zeroext i8 @poolGrow(%struct.STRING_POOL* %8)
  %tobool6 = icmp ne i8 %call5, 0
  br i1 %tobool6, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true.4
  br i1 false, label %if.end.9, label %if.then.8

cond.false:                                       ; preds = %land.lhs.true.4, %for.body
  %9 = load i8*, i8** %s.addr, align 8
  %10 = load i8, i8* %9, align 1
  %11 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr7 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %11, i32 0, i32 3
  %12 = load i8*, i8** %ptr7, align 8
  %incdec.ptr = getelementptr i8, i8* %12, i32 1
  store i8* %incdec.ptr, i8** %ptr7, align 8
  store i8 %10, i8* %12, align 1
  br i1 true, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %cond.false, %cond.true
  store i8* null, i8** %retval
  br label %return

if.end.9:                                         ; preds = %cond.false, %cond.true
  br label %for.inc

for.inc:                                          ; preds = %if.end.9
  %13 = load i32, i32* %n.addr, align 4
  %dec = add i32 %13, -1
  store i32 %dec, i32* %n.addr, align 4
  %14 = load i8*, i8** %s.addr, align 8
  %incdec.ptr10 = getelementptr i8, i8* %14, i32 1
  store i8* %incdec.ptr10, i8** %s.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %15, i32 0, i32 4
  %16 = load i8*, i8** %start, align 8
  store i8* %16, i8** %s.addr, align 8
  %17 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %ptr11 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %17, i32 0, i32 3
  %18 = load i8*, i8** %ptr11, align 8
  %19 = load %struct.STRING_POOL*, %struct.STRING_POOL** %pool.addr, align 8
  %start12 = getelementptr inbounds %struct.STRING_POOL, %struct.STRING_POOL* %19, i32 0, i32 4
  store i8* %18, i8** %start12, align 8
  %20 = load i8*, i8** %s.addr, align 8
  store i8* %20, i8** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.8, %if.then
  %21 = load i8*, i8** %retval
  ret i8* %21
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"PIC Level", i32 2}
!1 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
