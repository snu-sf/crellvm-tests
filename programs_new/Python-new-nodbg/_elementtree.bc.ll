; ModuleID = './_elementtree.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyExpat_CAPI = type { i8*, i32, i32, i32, i32, i8* (i32)*, i32 (%struct.XML_ParserStruct*)*, i64 (%struct.XML_ParserStruct*)*, i64 (%struct.XML_ParserStruct*)*, i32 (%struct.XML_ParserStruct*, i8*, i32, i32)*, %struct.XML_ParserStruct* (i8*, %struct.XML_Memory_Handling_Suite*, i8*)*, void (%struct.XML_ParserStruct*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8**)*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*)*, void (%struct.XML_ParserStruct*, i32 (i8*, i8*, %struct.XML_Encoding*)*, i8*)*, void (%struct.XML_ParserStruct*, i8*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i8*, i32)*)*, i32 (%struct.XML_ParserStruct*, i8*)*, i32 (i8*, i8*, %struct.XML_Encoding*)* }
%struct.XML_ParserStruct = type opaque
%struct.XML_Memory_Handling_Suite = type { i8* (i64)*, i8* (i8*, i64)*, void (i8*)* }
%struct.XML_Encoding = type { [256 x i32], i8*, i32 (i8*, i8*)*, void (i8*)* }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct.elementtreestate = type { %struct._object*, %struct._object*, %struct._object* }
%struct.ElementObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct.ElementObjectExtra*, %struct._object* }
%struct.ElementObjectExtra = type { %struct._object*, i32, i32, %struct._object**, [4 x %struct._object*] }
%struct.ElementIterObject = type { %struct._object, %struct.ParentLocator_t*, %struct.ElementObject*, %struct._object*, i32, i32 }
%struct.ParentLocator_t = type { %struct.ElementObject*, i64, %struct.ParentLocator_t* }
%struct.TreeBuilderObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i64, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object* }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }
%struct.PyListObject = type { %struct.PyVarObject, %struct._object**, i64 }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, i32* }
%struct.anon = type { i32 }
%struct.PyCompactUnicodeObject = type { %struct.PyASCIIObject, i64, i8*, i64 }
%struct.PyUnicodeObject = type { %struct.PyCompactUnicodeObject, %union.anon }
%union.anon = type { i8* }
%struct.XMLParserObject = type { %struct._object, %struct.XML_ParserStruct*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object* }

@elementtreemodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i32 0, i32 0), i8* null, i64 24, %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @_functions, i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* @elementtree_traverse, i32 (%struct._object*)* @elementtree_clear, void (i8*)* @elementtree_free }, align 8
@ElementIter_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0), i64 48, i64 0, void (%struct._object*)* bitcast (void (%struct.ElementIterObject*)* @elementiter_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 278528, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.ElementIterObject*, i32 (%struct._object*, i8*)*, i8*)* @elementiter_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.ElementIterObject*)* @elementiter_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@TreeBuilder_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i32 0, i32 0), i64 112, i64 0, void (%struct._object*)* bitcast (void (%struct.TreeBuilderObject*)* @treebuilder_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.TreeBuilderObject*, i32 (%struct._object*, i8*)*, i8*)* @treebuilder_gc_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.TreeBuilderObject*)* @treebuilder_gc_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([5 x %struct.PyMethodDef], [5 x %struct.PyMethodDef]* @treebuilder_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @treebuilder_init, %struct._object* (%struct._typeobject*, i64)* @PyType_GenericAlloc, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @treebuilder_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@Element_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.ElementObject*)* @element_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.ElementObject*)* @element_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* @element_as_sequence, %struct.PyMappingMethods* @element_as_mapping, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_getattro to %struct._object* (%struct._object*, %struct._object*)*), i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_setattro to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct.PyBufferProcs* null, i64 279552, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.ElementObject*, i32 (%struct._object*, i8*)*, i8*)* @element_gc_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.ElementObject*)* @element_gc_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 48, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([24 x %struct.PyMethodDef], [24 x %struct.PyMethodDef]* @element_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @element_init, %struct._object* (%struct._typeobject*, i64)* @PyType_GenericAlloc, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @element_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@XMLParser_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.105, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.XMLParserObject*)* @xmlparser_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_getattro to %struct._object* (%struct._object*, %struct._object*)*), i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.XMLParserObject*, i32 (%struct._object*, i8*)*, i8*)* @xmlparser_gc_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.XMLParserObject*)* @xmlparser_gc_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([6 x %struct.PyMethodDef], [6 x %struct.PyMethodDef]* @xmlparser_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @xmlparser_init, %struct._object* (%struct._typeobject*, i64)* @PyType_GenericAlloc, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @xmlparser_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"deepcopy\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"xml.etree.ElementPath\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"pyexpat.expat_CAPI\00", align 1
@expat_capi = internal global %struct.PyExpat_CAPI* null, align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"pyexpat.expat_CAPI 1.0\00", align 1
@PyExc_ImportError = external global %struct._object*, align 8
@.str.5 = private unnamed_addr constant [32 x i8] c"pyexpat version is incompatible\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"xml.etree.ElementTree.ParseError\00", align 1
@PyExc_SyntaxError = external global %struct._object*, align 8
@.str.7 = private unnamed_addr constant [11 x i8] c"ParseError\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"Element\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"TreeBuilder\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"XMLParser\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"_elementtree\00", align 1
@_functions = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @subelement to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@.str.12 = private unnamed_addr constant [11 x i8] c"SubElement\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"O!O|O!:SubElement\00", align 1
@PyDict_Type = external global %struct._typeobject, align 8
@_Py_NoneStruct = external global %struct._object, align 8
@.str.14 = private unnamed_addr constant [7 x i8] c"attrib\00", align 1
@PyExc_TypeError = external global %struct._object*, align 8
@.str.15 = private unnamed_addr constant [32 x i8] c"attrib must be dict, not %.100s\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"_elementtree._element_iterator\00", align 1
@PyExc_StopIteration = external global %struct._object*, align 8
@PyList_Type = external global %struct._typeobject, align 8
@.str.17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"xml.etree.ElementTree.TreeBuilder\00", align 1
@treebuilder_methods = internal global [5 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_data to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_start to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_end to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_close to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@.str.19 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"O:data\00", align 1
@PyBytes_Type = external global %struct._typeobject, align 8
@.str.24 = private unnamed_addr constant [10 x i8] c"O|O:start\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"OO\00", align 1
@.str.26 = private unnamed_addr constant [31 x i8] c"multiple elements on top level\00", align 1
@treebuilder_set_element_text.PyId_text = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), %struct._object* null }, align 8
@.str.27 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@treebuilder_set_element_tail.PyId_tail = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), %struct._object* null }, align 8
@.str.28 = private unnamed_addr constant [5 x i8] c"tail\00", align 1
@treebuilder_add_subelement.PyId_append = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), %struct._object* null }, align 8
@.str.29 = private unnamed_addr constant [7 x i8] c"append\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"O:end\00", align 1
@PyExc_IndexError = external global %struct._object*, align 8
@.str.32 = private unnamed_addr constant [21 x i8] c"pop from empty stack\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c":close\00", align 1
@treebuilder_init.kwlist = internal global [2 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i32 0, i32 0), i8* null], align 16
@.str.34 = private unnamed_addr constant [16 x i8] c"element_factory\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"|O:TreeBuilder\00", align 1
@.str.36 = private unnamed_addr constant [30 x i8] c"xml.etree.ElementTree.Element\00", align 1
@element_as_sequence = internal global %struct.PySequenceMethods { i64 (%struct._object*)* bitcast (i64 (%struct.ElementObject*)* @element_length to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null, %struct._object* (%struct._object*, i64)* @element_getitem, i8* null, i32 (%struct._object*, i64, %struct._object*)* @element_setitem, i8* null, i32 (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null }, align 8
@element_as_mapping = internal global %struct.PyMappingMethods { i64 (%struct._object*)* bitcast (i64 (%struct.ElementObject*)* @element_length to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* @element_subscr, i32 (%struct._object*, %struct._object*, %struct._object*)* @element_ass_subscr }, align 8
@element_methods = internal global [24 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_clearmethod to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_get to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_set to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_find to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_findtext to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_findall to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_append to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_extend to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_insert to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_remove to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_iter to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_itertext to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_iterfind to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_iter to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_getchildren to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_items to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_keys to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.62, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @element_makeelement to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_copy to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.64, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_deepcopy to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @element_sizeof, i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*)* @element_getstate to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@.str.37 = private unnamed_addr constant [19 x i8] c"<Element %R at %p>\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"<Element at %p>\00", align 1
@.str.39 = private unnamed_addr constant [25 x i8] c"child index out of range\00", align 1
@.str.40 = private unnamed_addr constant [36 x i8] c"child assignment index out of range\00", align 1
@PySlice_Type = external global %struct._typeobject, align 8
@.str.41 = private unnamed_addr constant [33 x i8] c"element indices must be integers\00", align 1
@.str.42 = private unnamed_addr constant [32 x i8] c"expected sequence, not \22%.200s\22\00", align 1
@PyExc_ValueError = external global %struct._object*, align 8
@.str.43 = private unnamed_addr constant [69 x i8] c"attempt to assign sequence of size %zd to extended slice of size %zd\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@PyExc_AttributeError = external global %struct._object*, align 8
@.str.45 = private unnamed_addr constant [42 x i8] c"Can't set arbitrary attributes on Element\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"find\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"findtext\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"findall\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"insert\00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"iter\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"itertext\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"iterfind\00", align 1
@.str.58 = private unnamed_addr constant [12 x i8] c"getiterator\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"getchildren\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"items\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"keys\00", align 1
@.str.62 = private unnamed_addr constant [12 x i8] c"makeelement\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"__copy__\00", align 1
@.str.64 = private unnamed_addr constant [13 x i8] c"__deepcopy__\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"__sizeof__\00", align 1
@.str.66 = private unnamed_addr constant [13 x i8] c"__getstate__\00", align 1
@.str.67 = private unnamed_addr constant [13 x i8] c"__setstate__\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c":clear\00", align 1
@element_get.kwlist = internal global [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i32 0, i32 0), i8* null], align 16
@.str.69 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.71 = private unnamed_addr constant [8 x i8] c"O|O:get\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"OO:set\00", align 1
@element_find.kwlist = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null], align 16
@.str.73 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str.74 = private unnamed_addr constant [11 x i8] c"namespaces\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"O|O:find\00", align 1
@element_find.PyId_find = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), %struct._object* null }, align 8
@.str.76 = private unnamed_addr constant [4 x i8] c"OOO\00", align 1
@element_findtext.PyId_findtext = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), %struct._object* null }, align 8
@element_findtext.kwlist = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null], align 16
@.str.77 = private unnamed_addr constant [14 x i8] c"O|OO:findtext\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"OOOO\00", align 1
@element_findall.kwlist = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null], align 16
@.str.79 = private unnamed_addr constant [12 x i8] c"O|O:findall\00", align 1
@element_findall.PyId_findall = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct._object* null }, align 8
@.str.80 = private unnamed_addr constant [10 x i8] c"O!:append\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"O:extend\00", align 1
@.str.82 = private unnamed_addr constant [34 x i8] c"expected an Element, not \22%.200s\22\00", align 1
@.str.83 = private unnamed_addr constant [11 x i8] c"iO!:insert\00", align 1
@.str.84 = private unnamed_addr constant [10 x i8] c"O!:remove\00", align 1
@.str.85 = private unnamed_addr constant [30 x i8] c"list.remove(x): x not in list\00", align 1
@element_iter.kwlist = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), i8* null], align 16
@.str.86 = private unnamed_addr constant [8 x i8] c"|O:iter\00", align 1
@.str.87 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.88 = private unnamed_addr constant [10 x i8] c":itertext\00", align 1
@element_iterfind.PyId_iterfind = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0), %struct._object* null }, align 8
@element_iterfind.kwlist = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null], align 16
@.str.89 = private unnamed_addr constant [13 x i8] c"O|O:iterfind\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c":getchildren\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c":items\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c":keys\00", align 1
@.str.93 = private unnamed_addr constant [15 x i8] c"OO:makeelement\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c":__copy__\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"O:__deepcopy__\00", align 1
@PyExc_RuntimeError = external global %struct._object*, align 8
@.str.96 = private unnamed_addr constant [26 x i8] c"deepcopy helper not found\00", align 1
@.str.97 = private unnamed_addr constant [14 x i8] c"{sOsOs{}sOsO}\00", align 1
@.str.98 = private unnamed_addr constant [10 x i8] c"_children\00", align 1
@.str.99 = private unnamed_addr constant [13 x i8] c"{sOsOsOsOsO}\00", align 1
@.str.100 = private unnamed_addr constant [50 x i8] c"Don't know how to unpickle \22%.200R\22 as an Element\00", align 1
@element_setstate_from_Python.kwlist = internal global [6 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), i8* null], align 16
@.str.101 = private unnamed_addr constant [8 x i8] c"|$OOOOO\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"tag may not be NULL\00", align 1
@.str.103 = private unnamed_addr constant [26 x i8] c"'_children' is not a list\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"O|O!:Element\00", align 1
@.str.105 = private unnamed_addr constant [32 x i8] c"xml.etree.ElementTree.XMLParser\00", align 1
@xmlparser_methods = internal global [6 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_feed to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_close to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.111, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_parse_whole to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.112, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_setevents to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_doctype to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@.str.106 = private unnamed_addr constant [7 x i8] c"entity\00", align 1
@.str.107 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.108 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.109 = private unnamed_addr constant [15 x i8] c"Expat %d.%d.%d\00", align 1
@.str.110 = private unnamed_addr constant [5 x i8] c"feed\00", align 1
@.str.111 = private unnamed_addr constant [13 x i8] c"_parse_whole\00", align 1
@.str.112 = private unnamed_addr constant [11 x i8] c"_setevents\00", align 1
@.str.113 = private unnamed_addr constant [8 x i8] c"doctype\00", align 1
@PyExc_OverflowError = external global %struct._object*, align 8
@.str.114 = private unnamed_addr constant [28 x i8] c"size does not fit in an int\00", align 1
@.str.115 = private unnamed_addr constant [6 x i8] c"utf-8\00", align 1
@.str.116 = private unnamed_addr constant [23 x i8] c"%s: line %d, column %d\00", align 1
@.str.117 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.118 = private unnamed_addr constant [5 x i8] c"(ii)\00", align 1
@.str.119 = private unnamed_addr constant [9 x i8] c"position\00", align 1
@.str.120 = private unnamed_addr constant [9 x i8] c"O:_parse\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.122 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@PyUnicode_Type = external global %struct._typeobject, align 8
@.str.123 = private unnamed_addr constant [14 x i8] c"surrogatepass\00", align 1
@.str.124 = private unnamed_addr constant [16 x i8] c"O!|O:_setevents\00", align 1
@.str.125 = private unnamed_addr constant [66 x i8] c"event handling only supported for ElementTree.TreeBuilder targets\00", align 1
@.str.126 = private unnamed_addr constant [26 x i8] c"events must be a sequence\00", align 1
@.str.127 = private unnamed_addr constant [24 x i8] c"invalid events sequence\00", align 1
@.str.128 = private unnamed_addr constant [9 x i8] c"start-ns\00", align 1
@.str.129 = private unnamed_addr constant [7 x i8] c"end-ns\00", align 1
@.str.130 = private unnamed_addr constant [19 x i8] c"unknown event '%s'\00", align 1
@.str.131 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@xmlparser_init.kwlist = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.133, i32 0, i32 0), i8* null], align 16
@.str.132 = private unnamed_addr constant [5 x i8] c"html\00", align 1
@.str.133 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.134 = private unnamed_addr constant [15 x i8] c"|OOz:XMLParser\00", align 1
@ExpatMemoryHandler = internal global %struct.XML_Memory_Handling_Suite { i8* (i64)* @PyObject_Malloc, i8* (i8*, i64)* @PyObject_Realloc, void (i8*)* @PyObject_Free }, align 8
@.str.135 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.136 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"pi\00", align 1
@expat_default_handler.message = private unnamed_addr constant [128 x i8] c"undefined entity \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@PyExc_DeprecationWarning = external global %struct._object*, align 8
@.str.138 = private unnamed_addr constant [92 x i8] c"This method of XMLParser is deprecated.  Define doctype() method on the TreeBuilder target.\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit__elementtree() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %m = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule)
  store %struct._object* %call, %struct._object** %m, align 8
  %0 = load %struct._object*, %struct._object** %m, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** %m, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 0
  %2 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %2, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %3 = load %struct._object*, %struct._object** %m, align 8
  store %struct._object* %3, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %call1 = call i32 @PyType_Ready(%struct._typeobject* @ElementIter_Type)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %call4 = call i32 @PyType_Ready(%struct._typeobject* @TreeBuilder_Type)
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.7:                                         ; preds = %if.end.3
  %call8 = call i32 @PyType_Ready(%struct._typeobject* @Element_Type)
  %cmp9 = icmp slt i32 %call8, 0
  br i1 %cmp9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end.7
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.11:                                        ; preds = %if.end.7
  %call12 = call i32 @PyType_Ready(%struct._typeobject* @XMLParser_Type)
  %cmp13 = icmp slt i32 %call12, 0
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.11
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.15:                                        ; preds = %if.end.11
  %call16 = call %struct._object* @PyModule_Create2(%struct.PyModuleDef* @elementtreemodule, i32 1013)
  store %struct._object* %call16, %struct._object** %m, align 8
  %4 = load %struct._object*, %struct._object** %m, align 8
  %tobool17 = icmp ne %struct._object* %4, null
  br i1 %tobool17, label %if.end.19, label %if.then.18

if.then.18:                                       ; preds = %if.end.15
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.19:                                        ; preds = %if.end.15
  %5 = load %struct._object*, %struct._object** %m, align 8
  %call20 = call i8* @PyModule_GetState(%struct._object* %5)
  %6 = bitcast i8* %call20 to %struct.elementtreestate*
  store %struct.elementtreestate* %6, %struct.elementtreestate** %st, align 8
  %call21 = call %struct._object* @PyImport_ImportModule(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0))
  store %struct._object* %call21, %struct._object** %temp, align 8
  %tobool22 = icmp ne %struct._object* %call21, null
  br i1 %tobool22, label %if.end.24, label %if.then.23

if.then.23:                                       ; preds = %if.end.19
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.24:                                        ; preds = %if.end.19
  %7 = load %struct._object*, %struct._object** %temp, align 8
  %call25 = call %struct._object* @PyObject_GetAttrString(%struct._object* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0))
  %8 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %deepcopy_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %8, i32 0, i32 1
  store %struct._object* %call25, %struct._object** %deepcopy_obj, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.24
  %9 = load %struct._object*, %struct._object** %temp, align 8
  store %struct._object* %9, %struct._object** %_py_xdecref_tmp, align 8
  %10 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp26 = icmp ne %struct._object* %10, null
  br i1 %cmp26, label %if.then.27, label %if.end.33

if.then.27:                                       ; preds = %do.body
  br label %do.body.28

do.body.28:                                       ; preds = %if.then.27
  %11 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0
  %13 = load i64, i64* %ob_refcnt29, align 8
  %dec = add i64 %13, -1
  store i64 %dec, i64* %ob_refcnt29, align 8
  %cmp30 = icmp ne i64 %dec, 0
  br i1 %cmp30, label %if.then.31, label %if.else

if.then.31:                                       ; preds = %do.body.28
  br label %if.end.32

if.else:                                          ; preds = %do.body.28
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %16(%struct._object* %17)
  br label %if.end.32

if.end.32:                                        ; preds = %if.else, %if.then.31
  br label %do.end

do.end:                                           ; preds = %if.end.32
  br label %if.end.33

if.end.33:                                        ; preds = %do.end, %do.body
  br label %do.end.34

do.end.34:                                        ; preds = %if.end.33
  %call35 = call %struct._object* @PyImport_ImportModule(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i32 0, i32 0))
  %18 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %18, i32 0, i32 2
  store %struct._object* %call35, %struct._object** %elementpath_obj, align 8
  %tobool36 = icmp ne %struct._object* %call35, null
  br i1 %tobool36, label %if.end.38, label %if.then.37

if.then.37:                                       ; preds = %do.end.34
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.38:                                        ; preds = %do.end.34
  %call39 = call i8* @PyCapsule_Import(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i32 0)
  %19 = bitcast i8* %call39 to %struct.PyExpat_CAPI*
  store %struct.PyExpat_CAPI* %19, %struct.PyExpat_CAPI** @expat_capi, align 8
  %20 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %tobool40 = icmp ne %struct.PyExpat_CAPI* %20, null
  br i1 %tobool40, label %if.then.41, label %if.else.57

if.then.41:                                       ; preds = %if.end.38
  %21 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %magic = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %21, i32 0, i32 0
  %22 = load i8*, i8** %magic, align 8
  %call42 = call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0)) #5
  %cmp43 = icmp ne i32 %call42, 0
  br i1 %cmp43, label %if.then.55, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.41
  %23 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %size = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %23, i32 0, i32 1
  %24 = load i32, i32* %size, align 4
  %conv = sext i32 %24 to i64
  %cmp44 = icmp ult i64 %conv, 168
  br i1 %cmp44, label %if.then.55, label %lor.lhs.false.46

lor.lhs.false.46:                                 ; preds = %lor.lhs.false
  %25 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %MAJOR_VERSION = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %25, i32 0, i32 2
  %26 = load i32, i32* %MAJOR_VERSION, align 4
  %cmp47 = icmp ne i32 %26, 2
  br i1 %cmp47, label %if.then.55, label %lor.lhs.false.49

lor.lhs.false.49:                                 ; preds = %lor.lhs.false.46
  %27 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %MINOR_VERSION = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %27, i32 0, i32 3
  %28 = load i32, i32* %MINOR_VERSION, align 4
  %cmp50 = icmp ne i32 %28, 1
  br i1 %cmp50, label %if.then.55, label %lor.lhs.false.52

lor.lhs.false.52:                                 ; preds = %lor.lhs.false.49
  %29 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %MICRO_VERSION = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %29, i32 0, i32 4
  %30 = load i32, i32* %MICRO_VERSION, align 4
  %cmp53 = icmp ne i32 %30, 0
  br i1 %cmp53, label %if.then.55, label %if.end.56

if.then.55:                                       ; preds = %lor.lhs.false.52, %lor.lhs.false.49, %lor.lhs.false.46, %lor.lhs.false, %if.then.41
  %31 = load %struct._object*, %struct._object** @PyExc_ImportError, align 8
  call void @PyErr_SetString(%struct._object* %31, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.56:                                        ; preds = %lor.lhs.false.52
  br label %if.end.58

if.else.57:                                       ; preds = %if.end.38
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.58:                                        ; preds = %if.end.56
  %32 = load %struct._object*, %struct._object** @PyExc_SyntaxError, align 8
  %call59 = call %struct._object* @PyErr_NewException(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i32 0, i32 0), %struct._object* %32, %struct._object* null)
  %33 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %parseerror_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %33, i32 0, i32 0
  store %struct._object* %call59, %struct._object** %parseerror_obj, align 8
  %34 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %parseerror_obj60 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %34, i32 0, i32 0
  %35 = load %struct._object*, %struct._object** %parseerror_obj60, align 8
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0
  %36 = load i64, i64* %ob_refcnt61, align 8
  %inc62 = add i64 %36, 1
  store i64 %inc62, i64* %ob_refcnt61, align 8
  %37 = load %struct._object*, %struct._object** %m, align 8
  %38 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %parseerror_obj63 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %38, i32 0, i32 0
  %39 = load %struct._object*, %struct._object** %parseerror_obj63, align 8
  %call64 = call i32 @PyModule_AddObject(%struct._object* %37, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), %struct._object* %39)
  %40 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @Element_Type, i32 0, i32 0, i32 0, i32 0), align 8
  %inc65 = add i64 %40, 1
  store i64 %inc65, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @Element_Type, i32 0, i32 0, i32 0, i32 0), align 8
  %41 = load %struct._object*, %struct._object** %m, align 8
  %call66 = call i32 @PyModule_AddObject(%struct._object* %41, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @Element_Type, i32 0, i32 0, i32 0))
  %42 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @TreeBuilder_Type, i32 0, i32 0, i32 0, i32 0), align 8
  %inc67 = add i64 %42, 1
  store i64 %inc67, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @TreeBuilder_Type, i32 0, i32 0, i32 0, i32 0), align 8
  %43 = load %struct._object*, %struct._object** %m, align 8
  %call68 = call i32 @PyModule_AddObject(%struct._object* %43, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @TreeBuilder_Type, i32 0, i32 0, i32 0))
  %44 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @XMLParser_Type, i32 0, i32 0, i32 0, i32 0), align 8
  %inc69 = add i64 %44, 1
  store i64 %inc69, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @XMLParser_Type, i32 0, i32 0, i32 0, i32 0), align 8
  %45 = load %struct._object*, %struct._object** %m, align 8
  %call70 = call i32 @PyModule_AddObject(%struct._object* %45, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @XMLParser_Type, i32 0, i32 0, i32 0))
  %46 = load %struct._object*, %struct._object** %m, align 8
  store %struct._object* %46, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.58, %if.else.57, %if.then.55, %if.then.37, %if.then.23, %if.then.18, %if.then.14, %if.then.10, %if.then.6, %if.then.2, %if.then
  %47 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %47
}

declare %struct._object* @PyState_FindModule(%struct.PyModuleDef*) #1

declare i32 @PyType_Ready(%struct._typeobject*) #1

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #1

declare i8* @PyModule_GetState(%struct._object*) #1

declare %struct._object* @PyImport_ImportModule(i8*) #1

declare %struct._object* @PyObject_GetAttrString(%struct._object*, i8*) #1

declare i8* @PyCapsule_Import(i8*, i32) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #2

declare void @PyErr_SetString(%struct._object*, i8*) #1

declare %struct._object* @PyErr_NewException(i8*, %struct._object*, %struct._object*) #1

declare i32 @PyModule_AddObject(%struct._object*, i8*, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal i32 @elementtree_traverse(%struct._object* %m, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %m.addr = alloca %struct._object*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %vret = alloca i32, align 4
  %vret9 = alloca i32, align 4
  %vret20 = alloca i32, align 4
  store %struct._object* %m, %struct._object** %m.addr, align 8
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load %struct._object*, %struct._object** %m.addr, align 8
  %call = call i8* @PyModule_GetState(%struct._object* %0)
  %1 = bitcast i8* %call to %struct.elementtreestate*
  store %struct.elementtreestate* %1, %struct.elementtreestate** %st, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %2 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %parseerror_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %2, i32 0, i32 0
  %3 = load %struct._object*, %struct._object** %parseerror_obj, align 8
  %tobool = icmp ne %struct._object* %3, null
  br i1 %tobool, label %if.then, label %if.end.5

if.then:                                          ; preds = %do.body
  %4 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %5 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %parseerror_obj1 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %5, i32 0, i32 0
  %6 = load %struct._object*, %struct._object** %parseerror_obj1, align 8
  %7 = load i8*, i8** %arg.addr, align 8
  %call2 = call i32 %4(%struct._object* %6, i8* %7)
  store i32 %call2, i32* %vret, align 4
  %8 = load i32, i32* %vret, align 4
  %tobool3 = icmp ne i32 %8, 0
  br i1 %tobool3, label %if.then.4, label %if.end

if.then.4:                                        ; preds = %if.then
  %9 = load i32, i32* %vret, align 4
  store i32 %9, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.5

if.end.5:                                         ; preds = %if.end, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end.5
  br label %do.body.6

do.body.6:                                        ; preds = %do.end
  %10 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %deepcopy_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %10, i32 0, i32 1
  %11 = load %struct._object*, %struct._object** %deepcopy_obj, align 8
  %tobool7 = icmp ne %struct._object* %11, null
  br i1 %tobool7, label %if.then.8, label %if.end.15

if.then.8:                                        ; preds = %do.body.6
  %12 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %13 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %deepcopy_obj10 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %13, i32 0, i32 1
  %14 = load %struct._object*, %struct._object** %deepcopy_obj10, align 8
  %15 = load i8*, i8** %arg.addr, align 8
  %call11 = call i32 %12(%struct._object* %14, i8* %15)
  store i32 %call11, i32* %vret9, align 4
  %16 = load i32, i32* %vret9, align 4
  %tobool12 = icmp ne i32 %16, 0
  br i1 %tobool12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.then.8
  %17 = load i32, i32* %vret9, align 4
  store i32 %17, i32* %retval
  br label %return

if.end.14:                                        ; preds = %if.then.8
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %do.body.6
  br label %do.end.16

do.end.16:                                        ; preds = %if.end.15
  br label %do.body.17

do.body.17:                                       ; preds = %do.end.16
  %18 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %18, i32 0, i32 2
  %19 = load %struct._object*, %struct._object** %elementpath_obj, align 8
  %tobool18 = icmp ne %struct._object* %19, null
  br i1 %tobool18, label %if.then.19, label %if.end.26

if.then.19:                                       ; preds = %do.body.17
  %20 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %21 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %elementpath_obj21 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %21, i32 0, i32 2
  %22 = load %struct._object*, %struct._object** %elementpath_obj21, align 8
  %23 = load i8*, i8** %arg.addr, align 8
  %call22 = call i32 %20(%struct._object* %22, i8* %23)
  store i32 %call22, i32* %vret20, align 4
  %24 = load i32, i32* %vret20, align 4
  %tobool23 = icmp ne i32 %24, 0
  br i1 %tobool23, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.then.19
  %25 = load i32, i32* %vret20, align 4
  store i32 %25, i32* %retval
  br label %return

if.end.25:                                        ; preds = %if.then.19
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %do.body.17
  br label %do.end.27

do.end.27:                                        ; preds = %if.end.26
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end.27, %if.then.24, %if.then.13, %if.then.4
  %26 = load i32, i32* %retval
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define internal i32 @elementtree_clear(%struct._object* %m) #0 {
entry:
  %m.addr = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp13 = alloca %struct._object*, align 8
  %_py_tmp26 = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  store %struct._object* %m, %struct._object** %m.addr, align 8
  %0 = load %struct._object*, %struct._object** %m.addr, align 8
  %call = call i8* @PyModule_GetState(%struct._object* %0)
  %1 = bitcast i8* %call to %struct.elementtreestate*
  store %struct.elementtreestate* %1, %struct.elementtreestate** %st, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %2 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %parseerror_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %2, i32 0, i32 0
  %3 = load %struct._object*, %struct._object** %parseerror_obj, align 8
  store %struct._object* %3, %struct._object** %_py_tmp, align 8
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp = icmp ne %struct._object* %4, null
  br i1 %cmp, label %if.then, label %if.end.5

if.then:                                          ; preds = %do.body
  %5 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %parseerror_obj1 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %5, i32 0, i32 0
  store %struct._object* null, %struct._object** %parseerror_obj1, align 8
  br label %do.body.2

do.body.2:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0
  %8 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %8, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp3 = icmp ne i64 %dec, 0
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %do.body.2
  br label %if.end

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %11(%struct._object* %12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end.5

if.end.5:                                         ; preds = %do.end, %do.body
  br label %do.end.6

do.end.6:                                         ; preds = %if.end.5
  br label %do.body.7

do.body.7:                                        ; preds = %do.end.6
  %13 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %deepcopy_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %13, i32 0, i32 1
  %14 = load %struct._object*, %struct._object** %deepcopy_obj, align 8
  store %struct._object* %14, %struct._object** %_py_tmp8, align 8
  %15 = load %struct._object*, %struct._object** %_py_tmp8, align 8
  %cmp9 = icmp ne %struct._object* %15, null
  br i1 %cmp9, label %if.then.10, label %if.end.23

if.then.10:                                       ; preds = %do.body.7
  %16 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %deepcopy_obj11 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %16, i32 0, i32 1
  store %struct._object* null, %struct._object** %deepcopy_obj11, align 8
  br label %do.body.12

do.body.12:                                       ; preds = %if.then.10
  %17 = load %struct._object*, %struct._object** %_py_tmp8, align 8
  store %struct._object* %17, %struct._object** %_py_decref_tmp13, align 8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0
  %19 = load i64, i64* %ob_refcnt14, align 8
  %dec15 = add i64 %19, -1
  store i64 %dec15, i64* %ob_refcnt14, align 8
  %cmp16 = icmp ne i64 %dec15, 0
  br i1 %cmp16, label %if.then.17, label %if.else.18

if.then.17:                                       ; preds = %do.body.12
  br label %if.end.21

if.else.18:                                       ; preds = %do.body.12
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8
  %tp_dealloc20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc20, align 8
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8
  call void %22(%struct._object* %23)
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.18, %if.then.17
  br label %do.end.22

do.end.22:                                        ; preds = %if.end.21
  br label %if.end.23

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  br label %do.end.24

do.end.24:                                        ; preds = %if.end.23
  br label %do.body.25

do.body.25:                                       ; preds = %do.end.24
  %24 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %24, i32 0, i32 2
  %25 = load %struct._object*, %struct._object** %elementpath_obj, align 8
  store %struct._object* %25, %struct._object** %_py_tmp26, align 8
  %26 = load %struct._object*, %struct._object** %_py_tmp26, align 8
  %cmp27 = icmp ne %struct._object* %26, null
  br i1 %cmp27, label %if.then.28, label %if.end.41

if.then.28:                                       ; preds = %do.body.25
  %27 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %elementpath_obj29 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %27, i32 0, i32 2
  store %struct._object* null, %struct._object** %elementpath_obj29, align 8
  br label %do.body.30

do.body.30:                                       ; preds = %if.then.28
  %28 = load %struct._object*, %struct._object** %_py_tmp26, align 8
  store %struct._object* %28, %struct._object** %_py_decref_tmp31, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0
  %30 = load i64, i64* %ob_refcnt32, align 8
  %dec33 = add i64 %30, -1
  store i64 %dec33, i64* %ob_refcnt32, align 8
  %cmp34 = icmp ne i64 %dec33, 0
  br i1 %cmp34, label %if.then.35, label %if.else.36

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39

if.else.36:                                       ; preds = %do.body.30
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  call void %33(%struct._object* %34)
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  br label %do.end.40

do.end.40:                                        ; preds = %if.end.39
  br label %if.end.41

if.end.41:                                        ; preds = %do.end.40, %do.body.25
  br label %do.end.42

do.end.42:                                        ; preds = %if.end.41
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal void @elementtree_free(i8* %m) #0 {
entry:
  %m.addr = alloca i8*, align 8
  store i8* %m, i8** %m.addr, align 8
  %0 = load i8*, i8** %m.addr, align 8
  %1 = bitcast i8* %0 to %struct._object*
  %call = call i32 @elementtree_clear(%struct._object* %1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @subelement(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %elem = alloca %struct._object*, align 8
  %parent = alloca %struct.ElementObject*, align 8
  %tag = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  store %struct._object* null, %struct._object** %attrib, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i32 0, i32 0), %struct._typeobject* @Element_Type, %struct.ElementObject** %parent, %struct._object** %tag, %struct._typeobject* @PyDict_Type, %struct._object** %attrib)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool1 = icmp ne %struct._object* %1, null
  br i1 %tobool1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** %attrib, align 8
  %call3 = call %struct._object* @PyDict_Copy(%struct._object* %2)
  store %struct._object* %call3, %struct._object** %attrib, align 8
  %3 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool4 = icmp ne %struct._object* %3, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.then.2
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.6:                                         ; preds = %if.then.2
  %4 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %tobool7 = icmp ne %struct._object* %4, null
  br i1 %tobool7, label %if.then.8, label %if.end.12

if.then.8:                                        ; preds = %if.end.6
  %5 = load %struct._object*, %struct._object** %attrib, align 8
  %6 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call9 = call i32 @PyDict_Update(%struct._object* %5, %struct._object* %6)
  %cmp = icmp slt i32 %call9, 0
  br i1 %cmp, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.then.8
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.11:                                        ; preds = %if.then.8
  br label %if.end.12

if.end.12:                                        ; preds = %if.end.11, %if.end.6
  br label %if.end.21

if.else:                                          ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %tobool13 = icmp ne %struct._object* %7, null
  br i1 %tobool13, label %if.then.14, label %if.else.19

if.then.14:                                       ; preds = %if.else
  %8 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call15 = call %struct._object* @get_attrib_from_keywords(%struct._object* %8)
  store %struct._object* %call15, %struct._object** %attrib, align 8
  %9 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool16 = icmp ne %struct._object* %9, null
  br i1 %tobool16, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %if.then.14
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.18:                                        ; preds = %if.then.14
  br label %if.end.20

if.else.19:                                       ; preds = %if.else
  %10 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %10, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %attrib, align 8
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.19, %if.end.18
  br label %if.end.21

if.end.21:                                        ; preds = %if.end.20, %if.end.12
  %11 = load %struct._object*, %struct._object** %tag, align 8
  %12 = load %struct._object*, %struct._object** %attrib, align 8
  %call22 = call %struct._object* @create_new_element(%struct._object* %11, %struct._object* %12)
  store %struct._object* %call22, %struct._object** %elem, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.21
  %13 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0
  %15 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %15, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp23 = icmp ne i64 %dec, 0
  br i1 %cmp23, label %if.then.24, label %if.else.25

if.then.24:                                       ; preds = %do.body
  br label %if.end.26

if.else.25:                                       ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %18(%struct._object* %19)
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.25, %if.then.24
  br label %do.end

do.end:                                           ; preds = %if.end.26
  %20 = load %struct._object*, %struct._object** %elem, align 8
  %cmp27 = icmp eq %struct._object* %20, null
  br i1 %cmp27, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.29:                                        ; preds = %do.end
  %21 = load %struct.ElementObject*, %struct.ElementObject** %parent, align 8
  %22 = load %struct._object*, %struct._object** %elem, align 8
  %call30 = call i32 @element_add_subelement(%struct.ElementObject* %21, %struct._object* %22)
  %cmp31 = icmp slt i32 %call30, 0
  br i1 %cmp31, label %if.then.32, label %if.end.44

if.then.32:                                       ; preds = %if.end.29
  br label %do.body.33

do.body.33:                                       ; preds = %if.then.32
  %23 = load %struct._object*, %struct._object** %elem, align 8
  store %struct._object* %23, %struct._object** %_py_decref_tmp34, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0
  %25 = load i64, i64* %ob_refcnt35, align 8
  %dec36 = add i64 %25, -1
  store i64 %dec36, i64* %ob_refcnt35, align 8
  %cmp37 = icmp ne i64 %dec36, 0
  br i1 %cmp37, label %if.then.38, label %if.else.39

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42

if.else.39:                                       ; preds = %do.body.33
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8
  call void %28(%struct._object* %29)
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  br label %do.end.43

do.end.43:                                        ; preds = %if.end.42
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.44:                                        ; preds = %if.end.29
  %30 = load %struct._object*, %struct._object** %elem, align 8
  store %struct._object* %30, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.44, %do.end.43, %if.then.28, %if.then.17, %if.then.10, %if.then.5, %if.then
  %31 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %31
}

declare i32 @PyArg_ParseTuple(%struct._object*, i8*, ...) #1

declare %struct._object* @PyDict_Copy(%struct._object*) #1

declare i32 @PyDict_Update(%struct._object*, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_attrib_from_keywords(%struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %attrib_str = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  %call = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0))
  store %struct._object* %call, %struct._object** %attrib_str, align 8
  %0 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %1 = load %struct._object*, %struct._object** %attrib_str, align 8
  %call1 = call %struct._object* @PyDict_GetItem(%struct._object* %0, %struct._object* %1)
  store %struct._object* %call1, %struct._object** %attrib, align 8
  %2 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool = icmp ne %struct._object* %2, null
  br i1 %tobool, label %if.then, label %if.else.11

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %attrib, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags, align 8
  %and = and i64 %5, 536870912
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %if.end.8, label %if.then.2

if.then.2:                                        ; preds = %if.then
  br label %do.body

do.body:                                          ; preds = %if.then.2
  %6 = load %struct._object*, %struct._object** %attrib_str, align 8
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0
  %8 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %8, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp3 = icmp ne i64 %dec, 0
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %do.body
  br label %if.end

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %11(%struct._object* %12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  br label %do.end

do.end:                                           ; preds = %if.end
  %13 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %14 = load %struct._object*, %struct._object** %attrib, align 8
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 1
  %16 = load i8*, i8** %tp_name, align 8
  %call7 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %13, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i32 0, i32 0), i8* %16)
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.8:                                         ; preds = %if.then
  %17 = load %struct._object*, %struct._object** %attrib, align 8
  %call9 = call %struct._object* @PyDict_Copy(%struct._object* %17)
  store %struct._object* %call9, %struct._object** %attrib, align 8
  %18 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %19 = load %struct._object*, %struct._object** %attrib_str, align 8
  %call10 = call i32 @PyDict_DelItem(%struct._object* %18, %struct._object* %19)
  br label %if.end.13

if.else.11:                                       ; preds = %entry
  %call12 = call %struct._object* @PyDict_New()
  store %struct._object* %call12, %struct._object** %attrib, align 8
  br label %if.end.13

if.end.13:                                        ; preds = %if.else.11, %if.end.8
  br label %do.body.14

do.body.14:                                       ; preds = %if.end.13
  %20 = load %struct._object*, %struct._object** %attrib_str, align 8
  store %struct._object* %20, %struct._object** %_py_decref_tmp15, align 8
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0
  %22 = load i64, i64* %ob_refcnt16, align 8
  %dec17 = add i64 %22, -1
  store i64 %dec17, i64* %ob_refcnt16, align 8
  %cmp18 = icmp ne i64 %dec17, 0
  br i1 %cmp18, label %if.then.19, label %if.else.20

if.then.19:                                       ; preds = %do.body.14
  br label %if.end.23

if.else.20:                                       ; preds = %do.body.14
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 4
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8
  call void %25(%struct._object* %26)
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  br label %do.end.24

do.end.24:                                        ; preds = %if.end.23
  %27 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool25 = icmp ne %struct._object* %27, null
  br i1 %tobool25, label %if.then.26, label %if.end.31

if.then.26:                                       ; preds = %do.end.24
  %28 = load %struct._object*, %struct._object** %attrib, align 8
  %29 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call27 = call i32 @PyDict_Update(%struct._object* %28, %struct._object* %29)
  %cmp28 = icmp slt i32 %call27, 0
  br i1 %cmp28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.then.26
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.30:                                        ; preds = %if.then.26
  br label %if.end.31

if.end.31:                                        ; preds = %if.end.30, %do.end.24
  %30 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %30, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.31, %if.then.29, %do.end
  %31 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %31
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @create_new_element(%struct._object* %tag, %struct._object* %attrib) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %tag.addr = alloca %struct._object*, align 8
  %attrib.addr = alloca %struct._object*, align 8
  %self = alloca %struct.ElementObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %tag, %struct._object** %tag.addr, align 8
  store %struct._object* %attrib, %struct._object** %attrib.addr, align 8
  %call = call %struct._object* @_PyObject_GC_New(%struct._typeobject* @Element_Type)
  %0 = bitcast %struct._object* %call to %struct.ElementObject*
  store %struct.ElementObject* %0, %struct.ElementObject** %self, align 8
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %cmp = icmp eq %struct.ElementObject* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4
  store %struct.ElementObjectExtra* null, %struct.ElementObjectExtra** %extra, align 8
  %3 = load %struct._object*, %struct._object** %tag.addr, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 0
  %4 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %4, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %5 = load %struct._object*, %struct._object** %tag.addr, align 8
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %tag1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %6, i32 0, i32 1
  store %struct._object* %5, %struct._object** %tag1, align 8
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc2 = add i64 %7, 1
  store i64 %inc2, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %8 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %8, i32 0, i32 2
  store %struct._object* @_Py_NoneStruct, %struct._object** %text, align 8
  %9 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc3 = add i64 %9, 1
  store i64 %inc3, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %10 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 3
  store %struct._object* @_Py_NoneStruct, %struct._object** %tail, align 8
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %weakreflist = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 5
  store %struct._object* null, %struct._object** %weakreflist, align 8
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %13 = bitcast %struct.ElementObject* %12 to i8*
  call void @PyObject_GC_Track(i8* %13)
  %14 = load %struct._object*, %struct._object** %attrib.addr, align 8
  %cmp4 = icmp ne %struct._object* %14, @_Py_NoneStruct
  br i1 %cmp4, label %land.lhs.true, label %if.end.15

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct._object*, %struct._object** %attrib.addr, align 8
  %call5 = call i32 @is_empty_dict(%struct._object* %15)
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.end.15, label %if.then.6

if.then.6:                                        ; preds = %land.lhs.true
  %16 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %17 = load %struct._object*, %struct._object** %attrib.addr, align 8
  %call7 = call i32 @create_extra(%struct.ElementObject* %16, %struct._object* %17)
  %cmp8 = icmp slt i32 %call7, 0
  br i1 %cmp8, label %if.then.9, label %if.end.14

if.then.9:                                        ; preds = %if.then.6
  br label %do.body

do.body:                                          ; preds = %if.then.9
  %18 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %19 = bitcast %struct.ElementObject* %18 to %struct._object*
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0
  %21 = load i64, i64* %ob_refcnt10, align 8
  %dec = add i64 %21, -1
  store i64 %dec, i64* %ob_refcnt10, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %24(%struct._object* %25)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.14:                                        ; preds = %if.then.6
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %land.lhs.true, %if.end
  %26 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %27 = bitcast %struct.ElementObject* %26 to %struct._object*
  store %struct._object* %27, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.15, %do.end, %if.then
  %28 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %28
}

; Function Attrs: nounwind uwtable
define internal i32 @element_add_subelement(%struct.ElementObject* %self, %struct._object* %element) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.ElementObject*, align 8
  %element.addr = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %element, %struct._object** %element.addr, align 8
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call = call i32 @element_resize(%struct.ElementObject* %0, i32 1)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %element.addr, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 0
  %2 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %2, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %3 = load %struct._object*, %struct._object** %element.addr, align 8
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %4, i32 0, i32 4
  %5 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %5, i32 0, i32 1
  %6 = load i32, i32* %length, align 4
  %idxprom = sext i32 %6 to i64
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %7, i32 0, i32 4
  %8 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %8, i32 0, i32 3
  %9 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %9, i64 %idxprom
  store %struct._object* %3, %struct._object** %arrayidx, align 8
  %10 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 4
  %11 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8
  %length3 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %11, i32 0, i32 1
  %12 = load i32, i32* %length3, align 4
  %inc4 = add i32 %12, 1
  store i32 %inc4, i32* %length3, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval
  ret i32 %13
}

declare %struct._object* @PyUnicode_FromString(i8*) #1

declare %struct._object* @PyDict_GetItem(%struct._object*, %struct._object*) #1

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #1

declare i32 @PyDict_DelItem(%struct._object*, %struct._object*) #1

declare %struct._object* @PyDict_New() #1

declare %struct._object* @_PyObject_GC_New(%struct._typeobject*) #1

declare void @PyObject_GC_Track(i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @is_empty_dict(%struct._object* %obj) #0 {
entry:
  %obj.addr = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %1, @PyDict_Type
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %2 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i64 @PyDict_Size(%struct._object* %2)
  %cmp1 = icmp eq i64 %call, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %3 to i32
  ret i32 %land.ext
}

; Function Attrs: nounwind uwtable
define internal i32 @create_extra(%struct.ElementObject* %self, %struct._object* %attrib) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.ElementObject*, align 8
  %attrib.addr = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %attrib, %struct._object** %attrib.addr, align 8
  %call = call i8* @PyObject_Malloc(i64 56)
  %0 = bitcast i8* %call to %struct.ElementObjectExtra*
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 4
  store %struct.ElementObjectExtra* %0, %struct.ElementObjectExtra** %extra, align 8
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4
  %3 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8
  %tobool = icmp ne %struct.ElementObjectExtra* %3, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call2 = call %struct._object* @PyErr_NoMemory()
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %attrib.addr, align 8
  %tobool3 = icmp ne %struct._object* %4, null
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store %struct._object* @_Py_NoneStruct, %struct._object** %attrib.addr, align 8
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.4, %if.end
  %5 = load %struct._object*, %struct._object** %attrib.addr, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0
  %6 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %7 = load %struct._object*, %struct._object** %attrib.addr, align 8
  %8 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra6 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %8, i32 0, i32 4
  %9 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra6, align 8
  %attrib7 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %9, i32 0, i32 0
  store %struct._object* %7, %struct._object** %attrib7, align 8
  %10 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra8 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 4
  %11 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra8, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %11, i32 0, i32 1
  store i32 0, i32* %length, align 4
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra9 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %12, i32 0, i32 4
  %13 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra9, align 8
  %allocated = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %13, i32 0, i32 2
  store i32 4, i32* %allocated, align 4
  %14 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra10 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %14, i32 0, i32 4
  %15 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra10, align 8
  %_children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %15, i32 0, i32 4
  %arraydecay = getelementptr inbounds [4 x %struct._object*], [4 x %struct._object*]* %_children, i32 0, i32 0
  %16 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %16, i32 0, i32 4
  %17 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra11, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %17, i32 0, i32 3
  store %struct._object** %arraydecay, %struct._object*** %children, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.5, %if.then
  %18 = load i32, i32* %retval
  ret i32 %18
}

declare i64 @PyDict_Size(%struct._object*) #1

declare i8* @PyObject_Malloc(i64) #1

declare %struct._object* @PyErr_NoMemory() #1

; Function Attrs: nounwind uwtable
define internal i32 @element_resize(%struct.ElementObject* %self, i32 %extra) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.ElementObject*, align 8
  %extra.addr = alloca i32, align 4
  %size = alloca i32, align 4
  %children = alloca %struct._object**, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store i32 %extra, i32* %extra.addr, align 4
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 4
  %1 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8
  %tobool = icmp ne %struct.ElementObjectExtra* %1, null
  br i1 %tobool, label %if.end.3, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call = call i32 @create_extra(%struct.ElementObject* %2, %struct._object* null)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.3

if.end.3:                                         ; preds = %if.end, %entry
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra4 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 4
  %4 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra4, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %4, i32 0, i32 1
  %5 = load i32, i32* %length, align 4
  %6 = load i32, i32* %extra.addr, align 4
  %add = add i32 %5, %6
  store i32 %add, i32* %size, align 4
  %7 = load i32, i32* %size, align 4
  %8 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %8, i32 0, i32 4
  %9 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8
  %allocated = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %9, i32 0, i32 2
  %10 = load i32, i32* %allocated, align 4
  %cmp6 = icmp sgt i32 %7, %10
  br i1 %cmp6, label %if.then.7, label %if.end.41

if.then.7:                                        ; preds = %if.end.3
  %11 = load i32, i32* %size, align 4
  %shr = ashr i32 %11, 3
  %12 = load i32, i32* %size, align 4
  %cmp8 = icmp slt i32 %12, 9
  %cond = select i1 %cmp8, i32 3, i32 6
  %add9 = add i32 %shr, %cond
  %13 = load i32, i32* %size, align 4
  %add10 = add i32 %add9, %13
  store i32 %add10, i32* %size, align 4
  %14 = load i32, i32* %size, align 4
  %tobool11 = icmp ne i32 %14, 0
  br i1 %tobool11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.7
  %15 = load i32, i32* %size, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then.7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond12 = phi i32 [ %15, %cond.true ], [ 1, %cond.false ]
  store i32 %cond12, i32* %size, align 4
  %16 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra13 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %16, i32 0, i32 4
  %17 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra13, align 8
  %children14 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %17, i32 0, i32 3
  %18 = load %struct._object**, %struct._object*** %children14, align 8
  %19 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra15 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %19, i32 0, i32 4
  %20 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra15, align 8
  %_children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %20, i32 0, i32 4
  %arraydecay = getelementptr inbounds [4 x %struct._object*], [4 x %struct._object*]* %_children, i32 0, i32 0
  %cmp16 = icmp ne %struct._object** %18, %arraydecay
  br i1 %cmp16, label %if.then.17, label %if.else

if.then.17:                                       ; preds = %cond.end
  %21 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra18 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %21, i32 0, i32 4
  %22 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra18, align 8
  %children19 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %22, i32 0, i32 3
  %23 = load %struct._object**, %struct._object*** %children19, align 8
  %24 = bitcast %struct._object** %23 to i8*
  %25 = load i32, i32* %size, align 4
  %conv = sext i32 %25 to i64
  %mul = mul i64 %conv, 8
  %call20 = call i8* @PyObject_Realloc(i8* %24, i64 %mul)
  %26 = bitcast i8* %call20 to %struct._object**
  store %struct._object** %26, %struct._object*** %children, align 8
  %27 = load %struct._object**, %struct._object*** %children, align 8
  %tobool21 = icmp ne %struct._object** %27, null
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %if.then.17
  br label %nomemory

if.end.23:                                        ; preds = %if.then.17
  br label %if.end.36

if.else:                                          ; preds = %cond.end
  %28 = load i32, i32* %size, align 4
  %conv24 = sext i32 %28 to i64
  %mul25 = mul i64 %conv24, 8
  %call26 = call i8* @PyObject_Malloc(i64 %mul25)
  %29 = bitcast i8* %call26 to %struct._object**
  store %struct._object** %29, %struct._object*** %children, align 8
  %30 = load %struct._object**, %struct._object*** %children, align 8
  %tobool27 = icmp ne %struct._object** %30, null
  br i1 %tobool27, label %if.end.29, label %if.then.28

if.then.28:                                       ; preds = %if.else
  br label %nomemory

if.end.29:                                        ; preds = %if.else
  %31 = load %struct._object**, %struct._object*** %children, align 8
  %32 = bitcast %struct._object** %31 to i8*
  %33 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra30 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %33, i32 0, i32 4
  %34 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra30, align 8
  %children31 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %34, i32 0, i32 3
  %35 = load %struct._object**, %struct._object*** %children31, align 8
  %36 = bitcast %struct._object** %35 to i8*
  %37 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra32 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %37, i32 0, i32 4
  %38 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra32, align 8
  %length33 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %38, i32 0, i32 1
  %39 = load i32, i32* %length33, align 4
  %conv34 = sext i32 %39 to i64
  %mul35 = mul i64 %conv34, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %36, i64 %mul35, i32 8, i1 false)
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.29, %if.end.23
  %40 = load %struct._object**, %struct._object*** %children, align 8
  %41 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra37 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %41, i32 0, i32 4
  %42 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra37, align 8
  %children38 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %42, i32 0, i32 3
  store %struct._object** %40, %struct._object*** %children38, align 8
  %43 = load i32, i32* %size, align 4
  %44 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra39 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %44, i32 0, i32 4
  %45 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra39, align 8
  %allocated40 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %45, i32 0, i32 2
  store i32 %43, i32* %allocated40, align 4
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.36, %if.end.3
  store i32 0, i32* %retval
  br label %return

nomemory:                                         ; preds = %if.then.28, %if.then.22
  %call42 = call %struct._object* @PyErr_NoMemory()
  store i32 -1, i32* %retval
  br label %return

return:                                           ; preds = %nomemory, %if.end.41, %if.then.2
  %46 = load i32, i32* %retval
  ret i32 %46
}

declare i8* @PyObject_Realloc(i8*, i64) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define internal void @elementiter_dealloc(%struct.ElementIterObject* %it) #0 {
entry:
  %it.addr = alloca %struct.ElementIterObject*, align 8
  %p = alloca %struct.ParentLocator_t*, align 8
  %temp = alloca %struct.ParentLocator_t*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp7 = alloca %struct._object*, align 8
  %_py_decref_tmp11 = alloca %struct._object*, align 8
  %_py_xdecref_tmp24 = alloca %struct._object*, align 8
  %_py_decref_tmp28 = alloca %struct._object*, align 8
  store %struct.ElementIterObject* %it, %struct.ElementIterObject** %it.addr, align 8
  %0 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %0, i32 0, i32 1
  %1 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack, align 8
  store %struct.ParentLocator_t* %1, %struct.ParentLocator_t** %p, align 8
  br label %while.cond

while.cond:                                       ; preds = %do.end.5, %entry
  %2 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8
  %tobool = icmp ne %struct.ParentLocator_t* %2, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8
  store %struct.ParentLocator_t* %3, %struct.ParentLocator_t** %temp, align 8
  br label %do.body

do.body:                                          ; preds = %while.body
  %4 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8
  %parent = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %4, i32 0, i32 0
  %5 = load %struct.ElementObject*, %struct.ElementObject** %parent, align 8
  %6 = bitcast %struct.ElementObject* %5 to %struct._object*
  store %struct._object* %6, %struct._object** %_py_xdecref_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp = icmp ne %struct._object* %7, null
  br i1 %cmp, label %if.then, label %if.end.4

if.then:                                          ; preds = %do.body
  br label %do.body.1

do.body.1:                                        ; preds = %if.then
  %8 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0
  %10 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %10, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp2 = icmp ne i64 %dec, 0
  br i1 %cmp2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %do.body.1
  br label %if.end

if.else:                                          ; preds = %do.body.1
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %13(%struct._object* %14)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end.4

if.end.4:                                         ; preds = %do.end, %do.body
  br label %do.end.5

do.end.5:                                         ; preds = %if.end.4
  %15 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8
  %next = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %15, i32 0, i32 2
  %16 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %next, align 8
  store %struct.ParentLocator_t* %16, %struct.ParentLocator_t** %p, align 8
  %17 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %temp, align 8
  %18 = bitcast %struct.ParentLocator_t* %17 to i8*
  call void @PyObject_Free(i8* %18)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.body.6

do.body.6:                                        ; preds = %while.end
  %19 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %sought_tag = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %19, i32 0, i32 3
  %20 = load %struct._object*, %struct._object** %sought_tag, align 8
  store %struct._object* %20, %struct._object** %_py_xdecref_tmp7, align 8
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp7, align 8
  %cmp8 = icmp ne %struct._object* %21, null
  br i1 %cmp8, label %if.then.9, label %if.end.21

if.then.9:                                        ; preds = %do.body.6
  br label %do.body.10

do.body.10:                                       ; preds = %if.then.9
  %22 = load %struct._object*, %struct._object** %_py_xdecref_tmp7, align 8
  store %struct._object* %22, %struct._object** %_py_decref_tmp11, align 8
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp11, align 8
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0
  %24 = load i64, i64* %ob_refcnt12, align 8
  %dec13 = add i64 %24, -1
  store i64 %dec13, i64* %ob_refcnt12, align 8
  %cmp14 = icmp ne i64 %dec13, 0
  br i1 %cmp14, label %if.then.15, label %if.else.16

if.then.15:                                       ; preds = %do.body.10
  br label %if.end.19

if.else.16:                                       ; preds = %do.body.10
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp11, align 8
  %ob_type17 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type17, align 8
  %tp_dealloc18 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc18, align 8
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp11, align 8
  call void %27(%struct._object* %28)
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.16, %if.then.15
  br label %do.end.20

do.end.20:                                        ; preds = %if.end.19
  br label %if.end.21

if.end.21:                                        ; preds = %do.end.20, %do.body.6
  br label %do.end.22

do.end.22:                                        ; preds = %if.end.21
  br label %do.body.23

do.body.23:                                       ; preds = %do.end.22
  %29 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %root_element = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %29, i32 0, i32 2
  %30 = load %struct.ElementObject*, %struct.ElementObject** %root_element, align 8
  %31 = bitcast %struct.ElementObject* %30 to %struct._object*
  store %struct._object* %31, %struct._object** %_py_xdecref_tmp24, align 8
  %32 = load %struct._object*, %struct._object** %_py_xdecref_tmp24, align 8
  %cmp25 = icmp ne %struct._object* %32, null
  br i1 %cmp25, label %if.then.26, label %if.end.38

if.then.26:                                       ; preds = %do.body.23
  br label %do.body.27

do.body.27:                                       ; preds = %if.then.26
  %33 = load %struct._object*, %struct._object** %_py_xdecref_tmp24, align 8
  store %struct._object* %33, %struct._object** %_py_decref_tmp28, align 8
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0
  %35 = load i64, i64* %ob_refcnt29, align 8
  %dec30 = add i64 %35, -1
  store i64 %dec30, i64* %ob_refcnt29, align 8
  %cmp31 = icmp ne i64 %dec30, 0
  br i1 %cmp31, label %if.then.32, label %if.else.33

if.then.32:                                       ; preds = %do.body.27
  br label %if.end.36

if.else.33:                                       ; preds = %do.body.27
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8
  %tp_dealloc35 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc35, align 8
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8
  call void %38(%struct._object* %39)
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.33, %if.then.32
  br label %do.end.37

do.end.37:                                        ; preds = %if.end.36
  br label %if.end.38

if.end.38:                                        ; preds = %do.end.37, %do.body.23
  br label %do.end.39

do.end.39:                                        ; preds = %if.end.38
  %40 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %41 = bitcast %struct.ElementIterObject* %40 to i8*
  call void @PyObject_GC_UnTrack(i8* %41)
  %42 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %43 = bitcast %struct.ElementIterObject* %42 to i8*
  call void @PyObject_GC_Del(i8* %43)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @elementiter_traverse(%struct.ElementIterObject* %it, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %it.addr = alloca %struct.ElementIterObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %p = alloca %struct.ParentLocator_t*, align 8
  %vret = alloca i32, align 4
  %vret9 = alloca i32, align 4
  %vret20 = alloca i32, align 4
  store %struct.ElementIterObject* %it, %struct.ElementIterObject** %it.addr, align 8
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %0, i32 0, i32 1
  %1 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack, align 8
  store %struct.ParentLocator_t* %1, %struct.ParentLocator_t** %p, align 8
  br label %while.cond

while.cond:                                       ; preds = %do.end, %entry
  %2 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8
  %tobool = icmp ne %struct.ParentLocator_t* %2, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  br label %do.body

do.body:                                          ; preds = %while.body
  %3 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8
  %parent = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %3, i32 0, i32 0
  %4 = load %struct.ElementObject*, %struct.ElementObject** %parent, align 8
  %tobool1 = icmp ne %struct.ElementObject* %4, null
  br i1 %tobool1, label %if.then, label %if.end.5

if.then:                                          ; preds = %do.body
  %5 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %6 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8
  %parent2 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %6, i32 0, i32 0
  %7 = load %struct.ElementObject*, %struct.ElementObject** %parent2, align 8
  %8 = bitcast %struct.ElementObject* %7 to %struct._object*
  %9 = load i8*, i8** %arg.addr, align 8
  %call = call i32 %5(%struct._object* %8, i8* %9)
  store i32 %call, i32* %vret, align 4
  %10 = load i32, i32* %vret, align 4
  %tobool3 = icmp ne i32 %10, 0
  br i1 %tobool3, label %if.then.4, label %if.end

if.then.4:                                        ; preds = %if.then
  %11 = load i32, i32* %vret, align 4
  store i32 %11, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.5

if.end.5:                                         ; preds = %if.end, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end.5
  %12 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8
  %next = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %12, i32 0, i32 2
  %13 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %next, align 8
  store %struct.ParentLocator_t* %13, %struct.ParentLocator_t** %p, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.body.6

do.body.6:                                        ; preds = %while.end
  %14 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %root_element = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %14, i32 0, i32 2
  %15 = load %struct.ElementObject*, %struct.ElementObject** %root_element, align 8
  %tobool7 = icmp ne %struct.ElementObject* %15, null
  br i1 %tobool7, label %if.then.8, label %if.end.15

if.then.8:                                        ; preds = %do.body.6
  %16 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %17 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %root_element10 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %17, i32 0, i32 2
  %18 = load %struct.ElementObject*, %struct.ElementObject** %root_element10, align 8
  %19 = bitcast %struct.ElementObject* %18 to %struct._object*
  %20 = load i8*, i8** %arg.addr, align 8
  %call11 = call i32 %16(%struct._object* %19, i8* %20)
  store i32 %call11, i32* %vret9, align 4
  %21 = load i32, i32* %vret9, align 4
  %tobool12 = icmp ne i32 %21, 0
  br i1 %tobool12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.then.8
  %22 = load i32, i32* %vret9, align 4
  store i32 %22, i32* %retval
  br label %return

if.end.14:                                        ; preds = %if.then.8
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %do.body.6
  br label %do.end.16

do.end.16:                                        ; preds = %if.end.15
  br label %do.body.17

do.body.17:                                       ; preds = %do.end.16
  %23 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %sought_tag = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %23, i32 0, i32 3
  %24 = load %struct._object*, %struct._object** %sought_tag, align 8
  %tobool18 = icmp ne %struct._object* %24, null
  br i1 %tobool18, label %if.then.19, label %if.end.26

if.then.19:                                       ; preds = %do.body.17
  %25 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %26 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %sought_tag21 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %26, i32 0, i32 3
  %27 = load %struct._object*, %struct._object** %sought_tag21, align 8
  %28 = load i8*, i8** %arg.addr, align 8
  %call22 = call i32 %25(%struct._object* %27, i8* %28)
  store i32 %call22, i32* %vret20, align 4
  %29 = load i32, i32* %vret20, align 4
  %tobool23 = icmp ne i32 %29, 0
  br i1 %tobool23, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.then.19
  %30 = load i32, i32* %vret20, align 4
  store i32 %30, i32* %retval
  br label %return

if.end.25:                                        ; preds = %if.then.19
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %do.body.17
  br label %do.end.27

do.end.27:                                        ; preds = %if.end.26
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end.27, %if.then.24, %if.then.13, %if.then.4
  %31 = load i32, i32* %retval
  ret i32 %31
}

declare %struct._object* @PyObject_SelfIter(%struct._object*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @elementiter_next(%struct.ElementIterObject* %it) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %it.addr = alloca %struct.ElementIterObject*, align 8
  %cur_parent = alloca %struct.ElementObject*, align 8
  %child_index = alloca i64, align 8
  %text = alloca %struct._object*, align 8
  %child = alloca %struct.ElementObject*, align 8
  %text59 = alloca %struct._object*, align 8
  %tail = alloca %struct._object*, align 8
  %next = alloca %struct.ParentLocator_t*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ElementIterObject* %it, %struct.ElementIterObject** %it.addr, align 8
  br label %while.body

while.body:                                       ; preds = %entry, %if.else.83, %if.end.123
  %0 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %0, i32 0, i32 1
  %1 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack, align 8
  %parent = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %1, i32 0, i32 0
  %2 = load %struct.ElementObject*, %struct.ElementObject** %parent, align 8
  %tobool = icmp ne %struct.ElementObject* %2, null
  br i1 %tobool, label %if.end.34, label %if.then

if.then:                                          ; preds = %while.body
  %3 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %root_done = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %3, i32 0, i32 4
  %4 = load i32, i32* %root_done, align 4
  %tobool1 = icmp ne i32 %4, 0
  br i1 %tobool1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_StopIteration, align 8
  call void @PyErr_SetNone(%struct._object* %5)
  store %struct._object* null, %struct._object** %retval
  br label %return

if.else:                                          ; preds = %if.then
  %6 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack3 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %6, i32 0, i32 1
  %7 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack3, align 8
  %8 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %root_element = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %8, i32 0, i32 2
  %9 = load %struct.ElementObject*, %struct.ElementObject** %root_element, align 8
  %call = call %struct.ParentLocator_t* @parent_stack_push_new(%struct.ParentLocator_t* %7, %struct.ElementObject* %9)
  %10 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack4 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %10, i32 0, i32 1
  store %struct.ParentLocator_t* %call, %struct.ParentLocator_t** %parent_stack4, align 8
  %11 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack5 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %11, i32 0, i32 1
  %12 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack5, align 8
  %tobool6 = icmp ne %struct.ParentLocator_t* %12, null
  br i1 %tobool6, label %if.end, label %if.then.7

if.then.7:                                        ; preds = %if.else
  %call8 = call %struct._object* @PyErr_NoMemory()
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %if.else
  %13 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %root_done9 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %13, i32 0, i32 4
  store i32 1, i32* %root_done9, align 4
  %14 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %sought_tag = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %14, i32 0, i32 3
  %15 = load %struct._object*, %struct._object** %sought_tag, align 8
  %cmp = icmp eq %struct._object* %15, @_Py_NoneStruct
  br i1 %cmp, label %if.then.14, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %16 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %root_element10 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %16, i32 0, i32 2
  %17 = load %struct.ElementObject*, %struct.ElementObject** %root_element10, align 8
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %17, i32 0, i32 1
  %18 = load %struct._object*, %struct._object** %tag, align 8
  %19 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %sought_tag11 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %19, i32 0, i32 3
  %20 = load %struct._object*, %struct._object** %sought_tag11, align 8
  %call12 = call i32 @PyObject_RichCompareBool(%struct._object* %18, %struct._object* %20, i32 2)
  %cmp13 = icmp eq i32 %call12, 1
  br i1 %cmp13, label %if.then.14, label %if.end.32

if.then.14:                                       ; preds = %lor.lhs.false, %if.end
  %21 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %gettext = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %21, i32 0, i32 5
  %22 = load i32, i32* %gettext, align 4
  %tobool15 = icmp ne i32 %22, 0
  br i1 %tobool15, label %if.then.16, label %if.else.26

if.then.16:                                       ; preds = %if.then.14
  %23 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %root_element17 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %23, i32 0, i32 2
  %24 = load %struct.ElementObject*, %struct.ElementObject** %root_element17, align 8
  %call18 = call %struct._object* @element_get_text(%struct.ElementObject* %24)
  store %struct._object* %call18, %struct._object** %text, align 8
  %25 = load %struct._object*, %struct._object** %text, align 8
  %tobool19 = icmp ne %struct._object* %25, null
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.then.16
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.21:                                        ; preds = %if.then.16
  %26 = load %struct._object*, %struct._object** %text, align 8
  %call22 = call i32 @PyObject_IsTrue(%struct._object* %26)
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.end.21
  %27 = load %struct._object*, %struct._object** %text, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0
  %28 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %28, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %29 = load %struct._object*, %struct._object** %text, align 8
  store %struct._object* %29, %struct._object** %retval
  br label %return

if.end.25:                                        ; preds = %if.end.21
  br label %if.end.31

if.else.26:                                       ; preds = %if.then.14
  %30 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %root_element27 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %30, i32 0, i32 2
  %31 = load %struct.ElementObject*, %struct.ElementObject** %root_element27, align 8
  %32 = bitcast %struct.ElementObject* %31 to %struct._object*
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0
  %33 = load i64, i64* %ob_refcnt28, align 8
  %inc29 = add i64 %33, 1
  store i64 %inc29, i64* %ob_refcnt28, align 8
  %34 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %root_element30 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %34, i32 0, i32 2
  %35 = load %struct.ElementObject*, %struct.ElementObject** %root_element30, align 8
  %36 = bitcast %struct.ElementObject* %35 to %struct._object*
  store %struct._object* %36, %struct._object** %retval
  br label %return

if.end.31:                                        ; preds = %if.end.25
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %lor.lhs.false
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %while.body
  %37 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack35 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %37, i32 0, i32 1
  %38 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack35, align 8
  %parent36 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %38, i32 0, i32 0
  %39 = load %struct.ElementObject*, %struct.ElementObject** %parent36, align 8
  store %struct.ElementObject* %39, %struct.ElementObject** %cur_parent, align 8
  %40 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack37 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %40, i32 0, i32 1
  %41 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack37, align 8
  %child_index38 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %41, i32 0, i32 1
  %42 = load i64, i64* %child_index38, align 8
  store i64 %42, i64* %child_index, align 8
  %43 = load %struct.ElementObject*, %struct.ElementObject** %cur_parent, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %43, i32 0, i32 4
  %44 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool39 = icmp ne %struct.ElementObjectExtra* %44, null
  br i1 %tobool39, label %land.lhs.true, label %if.else.85

land.lhs.true:                                    ; preds = %if.end.34
  %45 = load i64, i64* %child_index, align 8
  %46 = load %struct.ElementObject*, %struct.ElementObject** %cur_parent, align 8
  %extra40 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %46, i32 0, i32 4
  %47 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra40, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %47, i32 0, i32 1
  %48 = load i32, i32* %length, align 4
  %conv = sext i32 %48 to i64
  %cmp41 = icmp slt i64 %45, %conv
  br i1 %cmp41, label %if.then.43, label %if.else.85

if.then.43:                                       ; preds = %land.lhs.true
  %49 = load i64, i64* %child_index, align 8
  %50 = load %struct.ElementObject*, %struct.ElementObject** %cur_parent, align 8
  %extra44 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %50, i32 0, i32 4
  %51 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra44, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %51, i32 0, i32 3
  %52 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %52, i64 %49
  %53 = load %struct._object*, %struct._object** %arrayidx, align 8
  %54 = bitcast %struct._object* %53 to %struct.ElementObject*
  store %struct.ElementObject* %54, %struct.ElementObject** %child, align 8
  %55 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack45 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %55, i32 0, i32 1
  %56 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack45, align 8
  %child_index46 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %56, i32 0, i32 1
  %57 = load i64, i64* %child_index46, align 8
  %inc47 = add i64 %57, 1
  store i64 %inc47, i64* %child_index46, align 8
  %58 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack48 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %58, i32 0, i32 1
  %59 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack48, align 8
  %60 = load %struct.ElementObject*, %struct.ElementObject** %child, align 8
  %call49 = call %struct.ParentLocator_t* @parent_stack_push_new(%struct.ParentLocator_t* %59, %struct.ElementObject* %60)
  %61 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack50 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %61, i32 0, i32 1
  store %struct.ParentLocator_t* %call49, %struct.ParentLocator_t** %parent_stack50, align 8
  %62 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack51 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %62, i32 0, i32 1
  %63 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack51, align 8
  %tobool52 = icmp ne %struct.ParentLocator_t* %63, null
  br i1 %tobool52, label %if.end.55, label %if.then.53

if.then.53:                                       ; preds = %if.then.43
  %call54 = call %struct._object* @PyErr_NoMemory()
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.55:                                        ; preds = %if.then.43
  %64 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %gettext56 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %64, i32 0, i32 5
  %65 = load i32, i32* %gettext56, align 4
  %tobool57 = icmp ne i32 %65, 0
  br i1 %tobool57, label %if.then.58, label %if.else.70

if.then.58:                                       ; preds = %if.end.55
  %66 = load %struct.ElementObject*, %struct.ElementObject** %child, align 8
  %call60 = call %struct._object* @element_get_text(%struct.ElementObject* %66)
  store %struct._object* %call60, %struct._object** %text59, align 8
  %67 = load %struct._object*, %struct._object** %text59, align 8
  %tobool61 = icmp ne %struct._object* %67, null
  br i1 %tobool61, label %if.end.63, label %if.then.62

if.then.62:                                       ; preds = %if.then.58
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.63:                                        ; preds = %if.then.58
  %68 = load %struct._object*, %struct._object** %text59, align 8
  %call64 = call i32 @PyObject_IsTrue(%struct._object* %68)
  %tobool65 = icmp ne i32 %call64, 0
  br i1 %tobool65, label %if.then.66, label %if.end.69

if.then.66:                                       ; preds = %if.end.63
  %69 = load %struct._object*, %struct._object** %text59, align 8
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0
  %70 = load i64, i64* %ob_refcnt67, align 8
  %inc68 = add i64 %70, 1
  store i64 %inc68, i64* %ob_refcnt67, align 8
  %71 = load %struct._object*, %struct._object** %text59, align 8
  store %struct._object* %71, %struct._object** %retval
  br label %return

if.end.69:                                        ; preds = %if.end.63
  br label %if.end.84

if.else.70:                                       ; preds = %if.end.55
  %72 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %sought_tag71 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %72, i32 0, i32 3
  %73 = load %struct._object*, %struct._object** %sought_tag71, align 8
  %cmp72 = icmp eq %struct._object* %73, @_Py_NoneStruct
  br i1 %cmp72, label %if.then.80, label %lor.lhs.false.74

lor.lhs.false.74:                                 ; preds = %if.else.70
  %74 = load %struct.ElementObject*, %struct.ElementObject** %child, align 8
  %tag75 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %74, i32 0, i32 1
  %75 = load %struct._object*, %struct._object** %tag75, align 8
  %76 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %sought_tag76 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %76, i32 0, i32 3
  %77 = load %struct._object*, %struct._object** %sought_tag76, align 8
  %call77 = call i32 @PyObject_RichCompareBool(%struct._object* %75, %struct._object* %77, i32 2)
  %cmp78 = icmp eq i32 %call77, 1
  br i1 %cmp78, label %if.then.80, label %if.else.83

if.then.80:                                       ; preds = %lor.lhs.false.74, %if.else.70
  %78 = load %struct.ElementObject*, %struct.ElementObject** %child, align 8
  %79 = bitcast %struct.ElementObject* %78 to %struct._object*
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 0
  %80 = load i64, i64* %ob_refcnt81, align 8
  %inc82 = add i64 %80, 1
  store i64 %inc82, i64* %ob_refcnt81, align 8
  %81 = load %struct.ElementObject*, %struct.ElementObject** %child, align 8
  %82 = bitcast %struct.ElementObject* %81 to %struct._object*
  store %struct._object* %82, %struct._object** %retval
  br label %return

if.else.83:                                       ; preds = %lor.lhs.false.74
  br label %while.body

if.end.84:                                        ; preds = %if.end.69
  br label %if.end.123

if.else.85:                                       ; preds = %land.lhs.true, %if.end.34
  %83 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack86 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %83, i32 0, i32 1
  %84 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack86, align 8
  %next87 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %84, i32 0, i32 2
  %85 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %next87, align 8
  store %struct.ParentLocator_t* %85, %struct.ParentLocator_t** %next, align 8
  %86 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %gettext88 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %86, i32 0, i32 5
  %87 = load i32, i32* %gettext88, align 4
  %tobool89 = icmp ne i32 %87, 0
  br i1 %tobool89, label %if.then.90, label %if.else.95

if.then.90:                                       ; preds = %if.else.85
  %88 = load %struct.ElementObject*, %struct.ElementObject** %cur_parent, align 8
  %call91 = call %struct._object* @element_get_tail(%struct.ElementObject* %88)
  store %struct._object* %call91, %struct._object** %tail, align 8
  %89 = load %struct._object*, %struct._object** %tail, align 8
  %tobool92 = icmp ne %struct._object* %89, null
  br i1 %tobool92, label %if.end.94, label %if.then.93

if.then.93:                                       ; preds = %if.then.90
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.94:                                        ; preds = %if.then.90
  br label %if.end.96

if.else.95:                                       ; preds = %if.else.85
  store %struct._object* @_Py_NoneStruct, %struct._object** %tail, align 8
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.95, %if.end.94
  br label %do.body

do.body:                                          ; preds = %if.end.96
  %90 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack97 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %90, i32 0, i32 1
  %91 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack97, align 8
  %parent98 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %91, i32 0, i32 0
  %92 = load %struct.ElementObject*, %struct.ElementObject** %parent98, align 8
  %93 = bitcast %struct.ElementObject* %92 to %struct._object*
  store %struct._object* %93, %struct._object** %_py_xdecref_tmp, align 8
  %94 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp99 = icmp ne %struct._object* %94, null
  br i1 %cmp99, label %if.then.101, label %if.end.109

if.then.101:                                      ; preds = %do.body
  br label %do.body.102

do.body.102:                                      ; preds = %if.then.101
  %95 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %95, %struct._object** %_py_decref_tmp, align 8
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt103 = getelementptr inbounds %struct._object, %struct._object* %96, i32 0, i32 0
  %97 = load i64, i64* %ob_refcnt103, align 8
  %dec = add i64 %97, -1
  store i64 %dec, i64* %ob_refcnt103, align 8
  %cmp104 = icmp ne i64 %dec, 0
  br i1 %cmp104, label %if.then.106, label %if.else.107

if.then.106:                                      ; preds = %do.body.102
  br label %if.end.108

if.else.107:                                      ; preds = %do.body.102
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %98, i32 0, i32 1
  %99 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %99, i32 0, i32 4
  %100 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %100(%struct._object* %101)
  br label %if.end.108

if.end.108:                                       ; preds = %if.else.107, %if.then.106
  br label %do.end

do.end:                                           ; preds = %if.end.108
  br label %if.end.109

if.end.109:                                       ; preds = %do.end, %do.body
  br label %do.end.110

do.end.110:                                       ; preds = %if.end.109
  %102 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack111 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %102, i32 0, i32 1
  %103 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack111, align 8
  %104 = bitcast %struct.ParentLocator_t* %103 to i8*
  call void @PyObject_Free(i8* %104)
  %105 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %next, align 8
  %106 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack112 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %106, i32 0, i32 1
  store %struct.ParentLocator_t* %105, %struct.ParentLocator_t** %parent_stack112, align 8
  %107 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8
  %parent_stack113 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %107, i32 0, i32 1
  %108 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack113, align 8
  %parent114 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %108, i32 0, i32 0
  %109 = load %struct.ElementObject*, %struct.ElementObject** %parent114, align 8
  %tobool115 = icmp ne %struct.ElementObject* %109, null
  br i1 %tobool115, label %land.lhs.true.116, label %if.end.122

land.lhs.true.116:                                ; preds = %do.end.110
  %110 = load %struct._object*, %struct._object** %tail, align 8
  %call117 = call i32 @PyObject_IsTrue(%struct._object* %110)
  %tobool118 = icmp ne i32 %call117, 0
  br i1 %tobool118, label %if.then.119, label %if.end.122

if.then.119:                                      ; preds = %land.lhs.true.116
  %111 = load %struct._object*, %struct._object** %tail, align 8
  %ob_refcnt120 = getelementptr inbounds %struct._object, %struct._object* %111, i32 0, i32 0
  %112 = load i64, i64* %ob_refcnt120, align 8
  %inc121 = add i64 %112, 1
  store i64 %inc121, i64* %ob_refcnt120, align 8
  %113 = load %struct._object*, %struct._object** %tail, align 8
  store %struct._object* %113, %struct._object** %retval
  br label %return

if.end.122:                                       ; preds = %land.lhs.true.116, %do.end.110
  br label %if.end.123

if.end.123:                                       ; preds = %if.end.122, %if.end.84
  br label %while.body

return:                                           ; preds = %if.then.119, %if.then.93, %if.then.80, %if.then.66, %if.then.62, %if.then.53, %if.else.26, %if.then.24, %if.then.20, %if.then.7, %if.then.2
  %114 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %114
}

declare void @PyObject_Free(i8*) #1

declare void @PyObject_GC_UnTrack(i8*) #1

declare void @PyObject_GC_Del(i8*) #1

declare void @PyErr_SetNone(%struct._object*) #1

; Function Attrs: nounwind uwtable
define internal %struct.ParentLocator_t* @parent_stack_push_new(%struct.ParentLocator_t* %stack, %struct.ElementObject* %parent) #0 {
entry:
  %stack.addr = alloca %struct.ParentLocator_t*, align 8
  %parent.addr = alloca %struct.ElementObject*, align 8
  %new_node = alloca %struct.ParentLocator_t*, align 8
  store %struct.ParentLocator_t* %stack, %struct.ParentLocator_t** %stack.addr, align 8
  store %struct.ElementObject* %parent, %struct.ElementObject** %parent.addr, align 8
  %call = call i8* @PyObject_Malloc(i64 24)
  %0 = bitcast i8* %call to %struct.ParentLocator_t*
  store %struct.ParentLocator_t* %0, %struct.ParentLocator_t** %new_node, align 8
  %1 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %new_node, align 8
  %tobool = icmp ne %struct.ParentLocator_t* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.ElementObject*, %struct.ElementObject** %parent.addr, align 8
  %3 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %new_node, align 8
  %parent1 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %3, i32 0, i32 0
  store %struct.ElementObject* %2, %struct.ElementObject** %parent1, align 8
  %4 = load %struct.ElementObject*, %struct.ElementObject** %parent.addr, align 8
  %5 = bitcast %struct.ElementObject* %4 to %struct._object*
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0
  %6 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %7 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %new_node, align 8
  %child_index = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %7, i32 0, i32 1
  store i64 0, i64* %child_index, align 8
  %8 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %stack.addr, align 8
  %9 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %new_node, align 8
  %next = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %9, i32 0, i32 2
  store %struct.ParentLocator_t* %8, %struct.ParentLocator_t** %next, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %new_node, align 8
  ret %struct.ParentLocator_t* %10
}

declare i32 @PyObject_RichCompareBool(%struct._object*, %struct._object*, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_get_text(%struct.ElementObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %res = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 2
  %1 = load %struct._object*, %struct._object** %text, align 8
  store %struct._object* %1, %struct._object** %res, align 8
  %2 = load %struct._object*, %struct._object** %res, align 8
  %3 = ptrtoint %struct._object* %2 to i64
  %and = and i64 %3, 1
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %if.then, label %if.end.7

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** %res, align 8
  %5 = ptrtoint %struct._object* %4 to i64
  %and1 = and i64 %5, -2
  %6 = inttoptr i64 %and1 to %struct._object*
  store %struct._object* %6, %struct._object** %res, align 8
  %7 = load %struct._object*, %struct._object** %res, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %8, @PyList_Type
  br i1 %cmp, label %if.then.2, label %if.end.6

if.then.2:                                        ; preds = %if.then
  %9 = load %struct._object*, %struct._object** %res, align 8
  %call = call %struct._object* @list_join(%struct._object* %9)
  store %struct._object* %call, %struct._object** %res, align 8
  %10 = load %struct._object*, %struct._object** %res, align 8
  %tobool3 = icmp ne %struct._object* %10, null
  br i1 %tobool3, label %if.end, label %if.then.4

if.then.4:                                        ; preds = %if.then.2
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %if.then.2
  %11 = load %struct._object*, %struct._object** %res, align 8
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %12, i32 0, i32 2
  store %struct._object* %11, %struct._object** %text5, align 8
  br label %if.end.6

if.end.6:                                         ; preds = %if.end, %if.then
  br label %if.end.7

if.end.7:                                         ; preds = %if.end.6, %entry
  %13 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %13, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.7, %if.then.4
  %14 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %14
}

declare i32 @PyObject_IsTrue(%struct._object*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_get_tail(%struct.ElementObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %res = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 3
  %1 = load %struct._object*, %struct._object** %tail, align 8
  store %struct._object* %1, %struct._object** %res, align 8
  %2 = load %struct._object*, %struct._object** %res, align 8
  %3 = ptrtoint %struct._object* %2 to i64
  %and = and i64 %3, 1
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %if.then, label %if.end.7

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** %res, align 8
  %5 = ptrtoint %struct._object* %4 to i64
  %and1 = and i64 %5, -2
  %6 = inttoptr i64 %and1 to %struct._object*
  store %struct._object* %6, %struct._object** %res, align 8
  %7 = load %struct._object*, %struct._object** %res, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %8, @PyList_Type
  br i1 %cmp, label %if.then.2, label %if.end.6

if.then.2:                                        ; preds = %if.then
  %9 = load %struct._object*, %struct._object** %res, align 8
  %call = call %struct._object* @list_join(%struct._object* %9)
  store %struct._object* %call, %struct._object** %res, align 8
  %10 = load %struct._object*, %struct._object** %res, align 8
  %tobool3 = icmp ne %struct._object* %10, null
  br i1 %tobool3, label %if.end, label %if.then.4

if.then.4:                                        ; preds = %if.then.2
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %if.then.2
  %11 = load %struct._object*, %struct._object** %res, align 8
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %12, i32 0, i32 3
  store %struct._object* %11, %struct._object** %tail5, align 8
  br label %if.end.6

if.end.6:                                         ; preds = %if.end, %if.then
  br label %if.end.7

if.end.7:                                         ; preds = %if.end.6, %entry
  %13 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %13, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.7, %if.then.4
  %14 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %14
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @list_join(%struct._object* %list) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %list.addr = alloca %struct._object*, align 8
  %joiner = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp7 = alloca %struct._object*, align 8
  store %struct._object* %list, %struct._object** %list.addr, align 8
  %call = call %struct._object* @PyUnicode_FromStringAndSize(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0), i64 0)
  store %struct._object* %call, %struct._object** %joiner, align 8
  %0 = load %struct._object*, %struct._object** %joiner, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %joiner, align 8
  %2 = load %struct._object*, %struct._object** %list.addr, align 8
  %call1 = call %struct._object* @PyUnicode_Join(%struct._object* %1, %struct._object* %2)
  store %struct._object* %call1, %struct._object** %result, align 8
  br label %do.body

do.body:                                          ; preds = %if.end
  %3 = load %struct._object*, %struct._object** %joiner, align 8
  store %struct._object* %3, %struct._object** %_py_decref_tmp, align 8
  %4 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0
  %5 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %5, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %do.body
  br label %if.end.3

if.else:                                          ; preds = %do.body
  %6 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 4
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %8(%struct._object* %9)
  br label %if.end.3

if.end.3:                                         ; preds = %if.else, %if.then.2
  br label %do.end

do.end:                                           ; preds = %if.end.3
  %10 = load %struct._object*, %struct._object** %result, align 8
  %tobool4 = icmp ne %struct._object* %10, null
  br i1 %tobool4, label %if.then.5, label %if.end.17

if.then.5:                                        ; preds = %do.end
  br label %do.body.6

do.body.6:                                        ; preds = %if.then.5
  %11 = load %struct._object*, %struct._object** %list.addr, align 8
  store %struct._object* %11, %struct._object** %_py_decref_tmp7, align 8
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0
  %13 = load i64, i64* %ob_refcnt8, align 8
  %dec9 = add i64 %13, -1
  store i64 %dec9, i64* %ob_refcnt8, align 8
  %cmp10 = icmp ne i64 %dec9, 0
  br i1 %cmp10, label %if.then.11, label %if.else.12

if.then.11:                                       ; preds = %do.body.6
  br label %if.end.15

if.else.12:                                       ; preds = %do.body.6
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8
  %tp_dealloc14 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc14, align 8
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8
  call void %16(%struct._object* %17)
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.12, %if.then.11
  br label %do.end.16

do.end.16:                                        ; preds = %if.end.15
  br label %if.end.17

if.end.17:                                        ; preds = %do.end.16, %do.end
  %18 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %18, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.17, %if.then
  %19 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %19
}

declare %struct._object* @PyUnicode_FromStringAndSize(i8*, i64) #1

declare %struct._object* @PyUnicode_Join(%struct._object*, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal void @treebuilder_dealloc(%struct.TreeBuilderObject* %self) #0 {
entry:
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8
  %0 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %1 = bitcast %struct.TreeBuilderObject* %0 to i8*
  call void @PyObject_GC_UnTrack(i8* %1)
  %2 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %call = call i32 @treebuilder_gc_clear(%struct.TreeBuilderObject* %2)
  %3 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %4 = bitcast %struct.TreeBuilderObject* %3 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 38
  %6 = load void (i8*)*, void (i8*)** %tp_free, align 8
  %7 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %8 = bitcast %struct.TreeBuilderObject* %7 to %struct._object*
  %9 = bitcast %struct._object* %8 to i8*
  call void %6(i8* %9)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_gc_traverse(%struct.TreeBuilderObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %vret8 = alloca i32, align 4
  %vret19 = alloca i32, align 4
  %vret30 = alloca i32, align 4
  %vret41 = alloca i32, align 4
  %vret52 = alloca i32, align 4
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %root = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %0, i32 0, i32 1
  %1 = load %struct._object*, %struct._object** %root, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.then, label %if.end.4

if.then:                                          ; preds = %do.body
  %2 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %3 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %root1 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %3, i32 0, i32 1
  %4 = load %struct._object*, %struct._object** %root1, align 8
  %5 = load i8*, i8** %arg.addr, align 8
  %call = call i32 %2(%struct._object* %4, i8* %5)
  store i32 %call, i32* %vret, align 4
  %6 = load i32, i32* %vret, align 4
  %tobool2 = icmp ne i32 %6, 0
  br i1 %tobool2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  %7 = load i32, i32* %vret, align 4
  store i32 %7, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end.4
  br label %do.body.5

do.body.5:                                        ; preds = %do.end
  %8 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %this = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %8, i32 0, i32 2
  %9 = load %struct._object*, %struct._object** %this, align 8
  %tobool6 = icmp ne %struct._object* %9, null
  br i1 %tobool6, label %if.then.7, label %if.end.14

if.then.7:                                        ; preds = %do.body.5
  %10 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %11 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %this9 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %11, i32 0, i32 2
  %12 = load %struct._object*, %struct._object** %this9, align 8
  %13 = load i8*, i8** %arg.addr, align 8
  %call10 = call i32 %10(%struct._object* %12, i8* %13)
  store i32 %call10, i32* %vret8, align 4
  %14 = load i32, i32* %vret8, align 4
  %tobool11 = icmp ne i32 %14, 0
  br i1 %tobool11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.then.7
  %15 = load i32, i32* %vret8, align 4
  store i32 %15, i32* %retval
  br label %return

if.end.13:                                        ; preds = %if.then.7
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13, %do.body.5
  br label %do.end.15

do.end.15:                                        ; preds = %if.end.14
  br label %do.body.16

do.body.16:                                       ; preds = %do.end.15
  %16 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %16, i32 0, i32 3
  %17 = load %struct._object*, %struct._object** %last, align 8
  %tobool17 = icmp ne %struct._object* %17, null
  br i1 %tobool17, label %if.then.18, label %if.end.25

if.then.18:                                       ; preds = %do.body.16
  %18 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %19 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last20 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %19, i32 0, i32 3
  %20 = load %struct._object*, %struct._object** %last20, align 8
  %21 = load i8*, i8** %arg.addr, align 8
  %call21 = call i32 %18(%struct._object* %20, i8* %21)
  store i32 %call21, i32* %vret19, align 4
  %22 = load i32, i32* %vret19, align 4
  %tobool22 = icmp ne i32 %22, 0
  br i1 %tobool22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.then.18
  %23 = load i32, i32* %vret19, align 4
  store i32 %23, i32* %retval
  br label %return

if.end.24:                                        ; preds = %if.then.18
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24, %do.body.16
  br label %do.end.26

do.end.26:                                        ; preds = %if.end.25
  br label %do.body.27

do.body.27:                                       ; preds = %do.end.26
  %24 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %24, i32 0, i32 4
  %25 = load %struct._object*, %struct._object** %data, align 8
  %tobool28 = icmp ne %struct._object* %25, null
  br i1 %tobool28, label %if.then.29, label %if.end.36

if.then.29:                                       ; preds = %do.body.27
  %26 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %27 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data31 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %27, i32 0, i32 4
  %28 = load %struct._object*, %struct._object** %data31, align 8
  %29 = load i8*, i8** %arg.addr, align 8
  %call32 = call i32 %26(%struct._object* %28, i8* %29)
  store i32 %call32, i32* %vret30, align 4
  %30 = load i32, i32* %vret30, align 4
  %tobool33 = icmp ne i32 %30, 0
  br i1 %tobool33, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %if.then.29
  %31 = load i32, i32* %vret30, align 4
  store i32 %31, i32* %retval
  br label %return

if.end.35:                                        ; preds = %if.then.29
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %do.body.27
  br label %do.end.37

do.end.37:                                        ; preds = %if.end.36
  br label %do.body.38

do.body.38:                                       ; preds = %do.end.37
  %32 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %stack = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %32, i32 0, i32 5
  %33 = load %struct._object*, %struct._object** %stack, align 8
  %tobool39 = icmp ne %struct._object* %33, null
  br i1 %tobool39, label %if.then.40, label %if.end.47

if.then.40:                                       ; preds = %do.body.38
  %34 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %35 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %stack42 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %35, i32 0, i32 5
  %36 = load %struct._object*, %struct._object** %stack42, align 8
  %37 = load i8*, i8** %arg.addr, align 8
  %call43 = call i32 %34(%struct._object* %36, i8* %37)
  store i32 %call43, i32* %vret41, align 4
  %38 = load i32, i32* %vret41, align 4
  %tobool44 = icmp ne i32 %38, 0
  br i1 %tobool44, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %if.then.40
  %39 = load i32, i32* %vret41, align 4
  store i32 %39, i32* %retval
  br label %return

if.end.46:                                        ; preds = %if.then.40
  br label %if.end.47

if.end.47:                                        ; preds = %if.end.46, %do.body.38
  br label %do.end.48

do.end.48:                                        ; preds = %if.end.47
  br label %do.body.49

do.body.49:                                       ; preds = %do.end.48
  %40 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %element_factory = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %40, i32 0, i32 7
  %41 = load %struct._object*, %struct._object** %element_factory, align 8
  %tobool50 = icmp ne %struct._object* %41, null
  br i1 %tobool50, label %if.then.51, label %if.end.58

if.then.51:                                       ; preds = %do.body.49
  %42 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %43 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %element_factory53 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %43, i32 0, i32 7
  %44 = load %struct._object*, %struct._object** %element_factory53, align 8
  %45 = load i8*, i8** %arg.addr, align 8
  %call54 = call i32 %42(%struct._object* %44, i8* %45)
  store i32 %call54, i32* %vret52, align 4
  %46 = load i32, i32* %vret52, align 4
  %tobool55 = icmp ne i32 %46, 0
  br i1 %tobool55, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %if.then.51
  %47 = load i32, i32* %vret52, align 4
  store i32 %47, i32* %retval
  br label %return

if.end.57:                                        ; preds = %if.then.51
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57, %do.body.49
  br label %do.end.59

do.end.59:                                        ; preds = %if.end.58
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end.59, %if.then.56, %if.then.45, %if.then.34, %if.then.23, %if.then.12, %if.then.3
  %48 = load i32, i32* %retval
  ret i32 %48
}

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_gc_clear(%struct.TreeBuilderObject* %self) #0 {
entry:
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp13 = alloca %struct._object*, align 8
  %_py_tmp26 = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  %_py_tmp44 = alloca %struct._object*, align 8
  %_py_decref_tmp49 = alloca %struct._object*, align 8
  %_py_tmp62 = alloca %struct._object*, align 8
  %_py_decref_tmp67 = alloca %struct._object*, align 8
  %_py_tmp80 = alloca %struct._object*, align 8
  %_py_decref_tmp85 = alloca %struct._object*, align 8
  %_py_tmp98 = alloca %struct._object*, align 8
  %_py_decref_tmp103 = alloca %struct._object*, align 8
  %_py_tmp116 = alloca %struct._object*, align 8
  %_py_decref_tmp121 = alloca %struct._object*, align 8
  %_py_tmp134 = alloca %struct._object*, align 8
  %_py_decref_tmp139 = alloca %struct._object*, align 8
  %_py_tmp152 = alloca %struct._object*, align 8
  %_py_decref_tmp157 = alloca %struct._object*, align 8
  %_py_tmp170 = alloca %struct._object*, align 8
  %_py_decref_tmp175 = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %end_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %0, i32 0, i32 12
  %1 = load %struct._object*, %struct._object** %end_ns_event_obj, align 8
  store %struct._object* %1, %struct._object** %_py_tmp, align 8
  %2 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp = icmp ne %struct._object* %2, null
  br i1 %cmp, label %if.then, label %if.end.5

if.then:                                          ; preds = %do.body
  %3 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %end_ns_event_obj1 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %3, i32 0, i32 12
  store %struct._object* null, %struct._object** %end_ns_event_obj1, align 8
  br label %do.body.2

do.body.2:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %4, %struct._object** %_py_decref_tmp, align 8
  %5 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0
  %6 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %6, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp3 = icmp ne i64 %dec, 0
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %do.body.2
  br label %if.end

if.else:                                          ; preds = %do.body.2
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 4
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %9(%struct._object* %10)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end.5

if.end.5:                                         ; preds = %do.end, %do.body
  br label %do.end.6

do.end.6:                                         ; preds = %if.end.5
  br label %do.body.7

do.body.7:                                        ; preds = %do.end.6
  %11 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %start_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %11, i32 0, i32 11
  %12 = load %struct._object*, %struct._object** %start_ns_event_obj, align 8
  store %struct._object* %12, %struct._object** %_py_tmp8, align 8
  %13 = load %struct._object*, %struct._object** %_py_tmp8, align 8
  %cmp9 = icmp ne %struct._object* %13, null
  br i1 %cmp9, label %if.then.10, label %if.end.23

if.then.10:                                       ; preds = %do.body.7
  %14 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %start_ns_event_obj11 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %14, i32 0, i32 11
  store %struct._object* null, %struct._object** %start_ns_event_obj11, align 8
  br label %do.body.12

do.body.12:                                       ; preds = %if.then.10
  %15 = load %struct._object*, %struct._object** %_py_tmp8, align 8
  store %struct._object* %15, %struct._object** %_py_decref_tmp13, align 8
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0
  %17 = load i64, i64* %ob_refcnt14, align 8
  %dec15 = add i64 %17, -1
  store i64 %dec15, i64* %ob_refcnt14, align 8
  %cmp16 = icmp ne i64 %dec15, 0
  br i1 %cmp16, label %if.then.17, label %if.else.18

if.then.17:                                       ; preds = %do.body.12
  br label %if.end.21

if.else.18:                                       ; preds = %do.body.12
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8
  %tp_dealloc20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc20, align 8
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8
  call void %20(%struct._object* %21)
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.18, %if.then.17
  br label %do.end.22

do.end.22:                                        ; preds = %if.end.21
  br label %if.end.23

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  br label %do.end.24

do.end.24:                                        ; preds = %if.end.23
  br label %do.body.25

do.body.25:                                       ; preds = %do.end.24
  %22 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %end_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %22, i32 0, i32 10
  %23 = load %struct._object*, %struct._object** %end_event_obj, align 8
  store %struct._object* %23, %struct._object** %_py_tmp26, align 8
  %24 = load %struct._object*, %struct._object** %_py_tmp26, align 8
  %cmp27 = icmp ne %struct._object* %24, null
  br i1 %cmp27, label %if.then.28, label %if.end.41

if.then.28:                                       ; preds = %do.body.25
  %25 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %end_event_obj29 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %25, i32 0, i32 10
  store %struct._object* null, %struct._object** %end_event_obj29, align 8
  br label %do.body.30

do.body.30:                                       ; preds = %if.then.28
  %26 = load %struct._object*, %struct._object** %_py_tmp26, align 8
  store %struct._object* %26, %struct._object** %_py_decref_tmp31, align 8
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0
  %28 = load i64, i64* %ob_refcnt32, align 8
  %dec33 = add i64 %28, -1
  store i64 %dec33, i64* %ob_refcnt32, align 8
  %cmp34 = icmp ne i64 %dec33, 0
  br i1 %cmp34, label %if.then.35, label %if.else.36

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39

if.else.36:                                       ; preds = %do.body.30
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  call void %31(%struct._object* %32)
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  br label %do.end.40

do.end.40:                                        ; preds = %if.end.39
  br label %if.end.41

if.end.41:                                        ; preds = %do.end.40, %do.body.25
  br label %do.end.42

do.end.42:                                        ; preds = %if.end.41
  br label %do.body.43

do.body.43:                                       ; preds = %do.end.42
  %33 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %start_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %33, i32 0, i32 9
  %34 = load %struct._object*, %struct._object** %start_event_obj, align 8
  store %struct._object* %34, %struct._object** %_py_tmp44, align 8
  %35 = load %struct._object*, %struct._object** %_py_tmp44, align 8
  %cmp45 = icmp ne %struct._object* %35, null
  br i1 %cmp45, label %if.then.46, label %if.end.59

if.then.46:                                       ; preds = %do.body.43
  %36 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %start_event_obj47 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %36, i32 0, i32 9
  store %struct._object* null, %struct._object** %start_event_obj47, align 8
  br label %do.body.48

do.body.48:                                       ; preds = %if.then.46
  %37 = load %struct._object*, %struct._object** %_py_tmp44, align 8
  store %struct._object* %37, %struct._object** %_py_decref_tmp49, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8
  %ob_refcnt50 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0
  %39 = load i64, i64* %ob_refcnt50, align 8
  %dec51 = add i64 %39, -1
  store i64 %dec51, i64* %ob_refcnt50, align 8
  %cmp52 = icmp ne i64 %dec51, 0
  br i1 %cmp52, label %if.then.53, label %if.else.54

if.then.53:                                       ; preds = %do.body.48
  br label %if.end.57

if.else.54:                                       ; preds = %do.body.48
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8
  %tp_dealloc56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc56, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8
  call void %42(%struct._object* %43)
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.54, %if.then.53
  br label %do.end.58

do.end.58:                                        ; preds = %if.end.57
  br label %if.end.59

if.end.59:                                        ; preds = %do.end.58, %do.body.43
  br label %do.end.60

do.end.60:                                        ; preds = %if.end.59
  br label %do.body.61

do.body.61:                                       ; preds = %do.end.60
  %44 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %events = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %44, i32 0, i32 8
  %45 = load %struct._object*, %struct._object** %events, align 8
  store %struct._object* %45, %struct._object** %_py_tmp62, align 8
  %46 = load %struct._object*, %struct._object** %_py_tmp62, align 8
  %cmp63 = icmp ne %struct._object* %46, null
  br i1 %cmp63, label %if.then.64, label %if.end.77

if.then.64:                                       ; preds = %do.body.61
  %47 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %events65 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %47, i32 0, i32 8
  store %struct._object* null, %struct._object** %events65, align 8
  br label %do.body.66

do.body.66:                                       ; preds = %if.then.64
  %48 = load %struct._object*, %struct._object** %_py_tmp62, align 8
  store %struct._object* %48, %struct._object** %_py_decref_tmp67, align 8
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8
  %ob_refcnt68 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0
  %50 = load i64, i64* %ob_refcnt68, align 8
  %dec69 = add i64 %50, -1
  store i64 %dec69, i64* %ob_refcnt68, align 8
  %cmp70 = icmp ne i64 %dec69, 0
  br i1 %cmp70, label %if.then.71, label %if.else.72

if.then.71:                                       ; preds = %do.body.66
  br label %if.end.75

if.else.72:                                       ; preds = %do.body.66
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8
  %ob_type73 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type73, align 8
  %tp_dealloc74 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc74, align 8
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8
  call void %53(%struct._object* %54)
  br label %if.end.75

if.end.75:                                        ; preds = %if.else.72, %if.then.71
  br label %do.end.76

do.end.76:                                        ; preds = %if.end.75
  br label %if.end.77

if.end.77:                                        ; preds = %do.end.76, %do.body.61
  br label %do.end.78

do.end.78:                                        ; preds = %if.end.77
  br label %do.body.79

do.body.79:                                       ; preds = %do.end.78
  %55 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %stack = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %55, i32 0, i32 5
  %56 = load %struct._object*, %struct._object** %stack, align 8
  store %struct._object* %56, %struct._object** %_py_tmp80, align 8
  %57 = load %struct._object*, %struct._object** %_py_tmp80, align 8
  %cmp81 = icmp ne %struct._object* %57, null
  br i1 %cmp81, label %if.then.82, label %if.end.95

if.then.82:                                       ; preds = %do.body.79
  %58 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %stack83 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %58, i32 0, i32 5
  store %struct._object* null, %struct._object** %stack83, align 8
  br label %do.body.84

do.body.84:                                       ; preds = %if.then.82
  %59 = load %struct._object*, %struct._object** %_py_tmp80, align 8
  store %struct._object* %59, %struct._object** %_py_decref_tmp85, align 8
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8
  %ob_refcnt86 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0
  %61 = load i64, i64* %ob_refcnt86, align 8
  %dec87 = add i64 %61, -1
  store i64 %dec87, i64* %ob_refcnt86, align 8
  %cmp88 = icmp ne i64 %dec87, 0
  br i1 %cmp88, label %if.then.89, label %if.else.90

if.then.89:                                       ; preds = %do.body.84
  br label %if.end.93

if.else.90:                                       ; preds = %do.body.84
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8
  %ob_type91 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type91, align 8
  %tp_dealloc92 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc92, align 8
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8
  call void %64(%struct._object* %65)
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.90, %if.then.89
  br label %do.end.94

do.end.94:                                        ; preds = %if.end.93
  br label %if.end.95

if.end.95:                                        ; preds = %do.end.94, %do.body.79
  br label %do.end.96

do.end.96:                                        ; preds = %if.end.95
  br label %do.body.97

do.body.97:                                       ; preds = %do.end.96
  %66 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %66, i32 0, i32 4
  %67 = load %struct._object*, %struct._object** %data, align 8
  store %struct._object* %67, %struct._object** %_py_tmp98, align 8
  %68 = load %struct._object*, %struct._object** %_py_tmp98, align 8
  %cmp99 = icmp ne %struct._object* %68, null
  br i1 %cmp99, label %if.then.100, label %if.end.113

if.then.100:                                      ; preds = %do.body.97
  %69 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data101 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %69, i32 0, i32 4
  store %struct._object* null, %struct._object** %data101, align 8
  br label %do.body.102

do.body.102:                                      ; preds = %if.then.100
  %70 = load %struct._object*, %struct._object** %_py_tmp98, align 8
  store %struct._object* %70, %struct._object** %_py_decref_tmp103, align 8
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8
  %ob_refcnt104 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0
  %72 = load i64, i64* %ob_refcnt104, align 8
  %dec105 = add i64 %72, -1
  store i64 %dec105, i64* %ob_refcnt104, align 8
  %cmp106 = icmp ne i64 %dec105, 0
  br i1 %cmp106, label %if.then.107, label %if.else.108

if.then.107:                                      ; preds = %do.body.102
  br label %if.end.111

if.else.108:                                      ; preds = %do.body.102
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8
  %ob_type109 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type109, align 8
  %tp_dealloc110 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc110, align 8
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8
  call void %75(%struct._object* %76)
  br label %if.end.111

if.end.111:                                       ; preds = %if.else.108, %if.then.107
  br label %do.end.112

do.end.112:                                       ; preds = %if.end.111
  br label %if.end.113

if.end.113:                                       ; preds = %do.end.112, %do.body.97
  br label %do.end.114

do.end.114:                                       ; preds = %if.end.113
  br label %do.body.115

do.body.115:                                      ; preds = %do.end.114
  %77 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %77, i32 0, i32 3
  %78 = load %struct._object*, %struct._object** %last, align 8
  store %struct._object* %78, %struct._object** %_py_tmp116, align 8
  %79 = load %struct._object*, %struct._object** %_py_tmp116, align 8
  %cmp117 = icmp ne %struct._object* %79, null
  br i1 %cmp117, label %if.then.118, label %if.end.131

if.then.118:                                      ; preds = %do.body.115
  %80 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last119 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %80, i32 0, i32 3
  store %struct._object* null, %struct._object** %last119, align 8
  br label %do.body.120

do.body.120:                                      ; preds = %if.then.118
  %81 = load %struct._object*, %struct._object** %_py_tmp116, align 8
  store %struct._object* %81, %struct._object** %_py_decref_tmp121, align 8
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8
  %ob_refcnt122 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0
  %83 = load i64, i64* %ob_refcnt122, align 8
  %dec123 = add i64 %83, -1
  store i64 %dec123, i64* %ob_refcnt122, align 8
  %cmp124 = icmp ne i64 %dec123, 0
  br i1 %cmp124, label %if.then.125, label %if.else.126

if.then.125:                                      ; preds = %do.body.120
  br label %if.end.129

if.else.126:                                      ; preds = %do.body.120
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8
  %ob_type127 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type127, align 8
  %tp_dealloc128 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 4
  %86 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc128, align 8
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8
  call void %86(%struct._object* %87)
  br label %if.end.129

if.end.129:                                       ; preds = %if.else.126, %if.then.125
  br label %do.end.130

do.end.130:                                       ; preds = %if.end.129
  br label %if.end.131

if.end.131:                                       ; preds = %do.end.130, %do.body.115
  br label %do.end.132

do.end.132:                                       ; preds = %if.end.131
  br label %do.body.133

do.body.133:                                      ; preds = %do.end.132
  %88 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %this = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %88, i32 0, i32 2
  %89 = load %struct._object*, %struct._object** %this, align 8
  store %struct._object* %89, %struct._object** %_py_tmp134, align 8
  %90 = load %struct._object*, %struct._object** %_py_tmp134, align 8
  %cmp135 = icmp ne %struct._object* %90, null
  br i1 %cmp135, label %if.then.136, label %if.end.149

if.then.136:                                      ; preds = %do.body.133
  %91 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %this137 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %91, i32 0, i32 2
  store %struct._object* null, %struct._object** %this137, align 8
  br label %do.body.138

do.body.138:                                      ; preds = %if.then.136
  %92 = load %struct._object*, %struct._object** %_py_tmp134, align 8
  store %struct._object* %92, %struct._object** %_py_decref_tmp139, align 8
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8
  %ob_refcnt140 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0
  %94 = load i64, i64* %ob_refcnt140, align 8
  %dec141 = add i64 %94, -1
  store i64 %dec141, i64* %ob_refcnt140, align 8
  %cmp142 = icmp ne i64 %dec141, 0
  br i1 %cmp142, label %if.then.143, label %if.else.144

if.then.143:                                      ; preds = %do.body.138
  br label %if.end.147

if.else.144:                                      ; preds = %do.body.138
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8
  %ob_type145 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 1
  %96 = load %struct._typeobject*, %struct._typeobject** %ob_type145, align 8
  %tp_dealloc146 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %96, i32 0, i32 4
  %97 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc146, align 8
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8
  call void %97(%struct._object* %98)
  br label %if.end.147

if.end.147:                                       ; preds = %if.else.144, %if.then.143
  br label %do.end.148

do.end.148:                                       ; preds = %if.end.147
  br label %if.end.149

if.end.149:                                       ; preds = %do.end.148, %do.body.133
  br label %do.end.150

do.end.150:                                       ; preds = %if.end.149
  br label %do.body.151

do.body.151:                                      ; preds = %do.end.150
  %99 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %element_factory = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %99, i32 0, i32 7
  %100 = load %struct._object*, %struct._object** %element_factory, align 8
  store %struct._object* %100, %struct._object** %_py_tmp152, align 8
  %101 = load %struct._object*, %struct._object** %_py_tmp152, align 8
  %cmp153 = icmp ne %struct._object* %101, null
  br i1 %cmp153, label %if.then.154, label %if.end.167

if.then.154:                                      ; preds = %do.body.151
  %102 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %element_factory155 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %102, i32 0, i32 7
  store %struct._object* null, %struct._object** %element_factory155, align 8
  br label %do.body.156

do.body.156:                                      ; preds = %if.then.154
  %103 = load %struct._object*, %struct._object** %_py_tmp152, align 8
  store %struct._object* %103, %struct._object** %_py_decref_tmp157, align 8
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8
  %ob_refcnt158 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 0
  %105 = load i64, i64* %ob_refcnt158, align 8
  %dec159 = add i64 %105, -1
  store i64 %dec159, i64* %ob_refcnt158, align 8
  %cmp160 = icmp ne i64 %dec159, 0
  br i1 %cmp160, label %if.then.161, label %if.else.162

if.then.161:                                      ; preds = %do.body.156
  br label %if.end.165

if.else.162:                                      ; preds = %do.body.156
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8
  %ob_type163 = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 1
  %107 = load %struct._typeobject*, %struct._typeobject** %ob_type163, align 8
  %tp_dealloc164 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %107, i32 0, i32 4
  %108 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc164, align 8
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8
  call void %108(%struct._object* %109)
  br label %if.end.165

if.end.165:                                       ; preds = %if.else.162, %if.then.161
  br label %do.end.166

do.end.166:                                       ; preds = %if.end.165
  br label %if.end.167

if.end.167:                                       ; preds = %do.end.166, %do.body.151
  br label %do.end.168

do.end.168:                                       ; preds = %if.end.167
  br label %do.body.169

do.body.169:                                      ; preds = %do.end.168
  %110 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %root = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %110, i32 0, i32 1
  %111 = load %struct._object*, %struct._object** %root, align 8
  store %struct._object* %111, %struct._object** %_py_tmp170, align 8
  %112 = load %struct._object*, %struct._object** %_py_tmp170, align 8
  %cmp171 = icmp ne %struct._object* %112, null
  br i1 %cmp171, label %if.then.172, label %if.end.185

if.then.172:                                      ; preds = %do.body.169
  %113 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %root173 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %113, i32 0, i32 1
  store %struct._object* null, %struct._object** %root173, align 8
  br label %do.body.174

do.body.174:                                      ; preds = %if.then.172
  %114 = load %struct._object*, %struct._object** %_py_tmp170, align 8
  store %struct._object* %114, %struct._object** %_py_decref_tmp175, align 8
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp175, align 8
  %ob_refcnt176 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 0
  %116 = load i64, i64* %ob_refcnt176, align 8
  %dec177 = add i64 %116, -1
  store i64 %dec177, i64* %ob_refcnt176, align 8
  %cmp178 = icmp ne i64 %dec177, 0
  br i1 %cmp178, label %if.then.179, label %if.else.180

if.then.179:                                      ; preds = %do.body.174
  br label %if.end.183

if.else.180:                                      ; preds = %do.body.174
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp175, align 8
  %ob_type181 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 1
  %118 = load %struct._typeobject*, %struct._typeobject** %ob_type181, align 8
  %tp_dealloc182 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %118, i32 0, i32 4
  %119 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc182, align 8
  %120 = load %struct._object*, %struct._object** %_py_decref_tmp175, align 8
  call void %119(%struct._object* %120)
  br label %if.end.183

if.end.183:                                       ; preds = %if.else.180, %if.then.179
  br label %do.end.184

do.end.184:                                       ; preds = %if.end.183
  br label %if.end.185

if.end.185:                                       ; preds = %do.end.184, %do.body.169
  br label %do.end.186

do.end.186:                                       ; preds = %if.end.185
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %element_factory = alloca %struct._object*, align 8
  %self_tb = alloca %struct.TreeBuilderObject*, align 8
  %tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  store %struct._object* null, %struct._object** %element_factory, align 8
  %0 = load %struct._object*, %struct._object** %self.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct.TreeBuilderObject*
  store %struct.TreeBuilderObject* %1, %struct.TreeBuilderObject** %self_tb, align 8
  %2 = load %struct._object*, %struct._object** %args.addr, align 8
  %3 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %2, %struct._object* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @treebuilder_init.kwlist, i32 0, i32 0), %struct._object** %element_factory)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %element_factory, align 8
  %tobool1 = icmp ne %struct._object* %4, null
  br i1 %tobool1, label %if.then.2, label %if.end.15

if.then.2:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %element_factory, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0
  %6 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %7 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self_tb, align 8
  %element_factory3 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %7, i32 0, i32 7
  %8 = load %struct._object*, %struct._object** %element_factory3, align 8
  store %struct._object* %8, %struct._object** %tmp, align 8
  %9 = load %struct._object*, %struct._object** %element_factory, align 8
  %10 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self_tb, align 8
  %element_factory4 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %10, i32 0, i32 7
  store %struct._object* %9, %struct._object** %element_factory4, align 8
  br label %do.body

do.body:                                          ; preds = %if.then.2
  %11 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %11, %struct._object** %_py_xdecref_tmp, align 8
  %12 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp = icmp ne %struct._object* %12, null
  br i1 %cmp, label %if.then.6, label %if.end.13

if.then.6:                                        ; preds = %do.body
  br label %do.body.7

do.body.7:                                        ; preds = %if.then.6
  %13 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt9 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0
  %15 = load i64, i64* %ob_refcnt9, align 8
  %dec = add i64 %15, -1
  store i64 %dec, i64* %ob_refcnt9, align 8
  %cmp10 = icmp ne i64 %dec, 0
  br i1 %cmp10, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %do.body.7
  br label %if.end.12

if.else:                                          ; preds = %do.body.7
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %18(%struct._object* %19)
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.11
  br label %do.end

do.end:                                           ; preds = %if.end.12
  br label %if.end.13

if.end.13:                                        ; preds = %do.end, %do.body
  br label %do.end.14

do.end.14:                                        ; preds = %if.end.13
  br label %if.end.15

if.end.15:                                        ; preds = %do.end.14, %if.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.15, %if.then
  %20 = load i32, i32* %retval
  ret i32 %20
}

declare %struct._object* @PyType_GenericAlloc(%struct._typeobject*, i64) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %t = alloca %struct.TreeBuilderObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp21 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  %0 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %0, i32 0, i32 36
  %1 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8
  %2 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %call = call %struct._object* %1(%struct._typeobject* %2, i64 0)
  %3 = bitcast %struct._object* %call to %struct.TreeBuilderObject*
  store %struct.TreeBuilderObject* %3, %struct.TreeBuilderObject** %t, align 8
  %4 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %cmp = icmp ne %struct.TreeBuilderObject* %4, null
  br i1 %cmp, label %if.then, label %if.end.32

if.then:                                          ; preds = %entry
  %5 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %root = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %5, i32 0, i32 1
  store %struct._object* null, %struct._object** %root, align 8
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %7 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %this = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %7, i32 0, i32 2
  store %struct._object* @_Py_NoneStruct, %struct._object** %this, align 8
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc1 = add i64 %8, 1
  store i64 %inc1, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %9 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %last = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %9, i32 0, i32 3
  store %struct._object* @_Py_NoneStruct, %struct._object** %last, align 8
  %10 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %data = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %10, i32 0, i32 4
  store %struct._object* null, %struct._object** %data, align 8
  %11 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %element_factory = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %11, i32 0, i32 7
  store %struct._object* null, %struct._object** %element_factory, align 8
  %call2 = call %struct._object* @PyList_New(i64 20)
  %12 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %stack = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %12, i32 0, i32 5
  store %struct._object* %call2, %struct._object** %stack, align 8
  %13 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %stack3 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %13, i32 0, i32 5
  %14 = load %struct._object*, %struct._object** %stack3, align 8
  %tobool = icmp ne %struct._object* %14, null
  br i1 %tobool, label %if.end.31, label %if.then.4

if.then.4:                                        ; preds = %if.then
  br label %do.body

do.body:                                          ; preds = %if.then.4
  %15 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %this5 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %15, i32 0, i32 2
  %16 = load %struct._object*, %struct._object** %this5, align 8
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0
  %18 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %18, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp6 = icmp ne i64 %dec, 0
  br i1 %cmp6, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %do.body
  br label %if.end

if.else:                                          ; preds = %do.body
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %21(%struct._object* %22)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.7
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %do.body.8

do.body.8:                                        ; preds = %do.end
  %23 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %last10 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %23, i32 0, i32 3
  %24 = load %struct._object*, %struct._object** %last10, align 8
  store %struct._object* %24, %struct._object** %_py_decref_tmp9, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt11, align 8
  %dec12 = add i64 %26, -1
  store i64 %dec12, i64* %ob_refcnt11, align 8
  %cmp13 = icmp ne i64 %dec12, 0
  br i1 %cmp13, label %if.then.14, label %if.else.15

if.then.14:                                       ; preds = %do.body.8
  br label %if.end.18

if.else.15:                                       ; preds = %do.body.8
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8
  %tp_dealloc17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc17, align 8
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8
  call void %29(%struct._object* %30)
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.15, %if.then.14
  br label %do.end.19

do.end.19:                                        ; preds = %if.end.18
  br label %do.body.20

do.body.20:                                       ; preds = %do.end.19
  %31 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %32 = bitcast %struct.TreeBuilderObject* %31 to %struct._object*
  store %struct._object* %32, %struct._object** %_py_decref_tmp21, align 8
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0
  %34 = load i64, i64* %ob_refcnt22, align 8
  %dec23 = add i64 %34, -1
  store i64 %dec23, i64* %ob_refcnt22, align 8
  %cmp24 = icmp ne i64 %dec23, 0
  br i1 %cmp24, label %if.then.25, label %if.else.26

if.then.25:                                       ; preds = %do.body.20
  br label %if.end.29

if.else.26:                                       ; preds = %do.body.20
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 4
  %37 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8
  call void %37(%struct._object* %38)
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.then.25
  br label %do.end.30

do.end.30:                                        ; preds = %if.end.29
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.31:                                        ; preds = %if.then
  %39 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %index = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %39, i32 0, i32 6
  store i64 0, i64* %index, align 8
  %40 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %events = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %40, i32 0, i32 8
  store %struct._object* null, %struct._object** %events, align 8
  %41 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %end_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %41, i32 0, i32 10
  store %struct._object* null, %struct._object** %end_event_obj, align 8
  %42 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %start_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %42, i32 0, i32 9
  store %struct._object* null, %struct._object** %start_event_obj, align 8
  %43 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %end_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %43, i32 0, i32 12
  store %struct._object* null, %struct._object** %end_ns_event_obj, align 8
  %44 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %start_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %44, i32 0, i32 11
  store %struct._object* null, %struct._object** %start_ns_event_obj, align 8
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %entry
  %45 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8
  %46 = bitcast %struct.TreeBuilderObject* %45 to %struct._object*
  store %struct._object* %46, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.32, %do.end.30
  %47 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %47
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_data(%struct.TreeBuilderObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %data = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), %struct._object** %data)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %2 = load %struct._object*, %struct._object** %data, align 8
  %call1 = call %struct._object* @treebuilder_handle_data(%struct.TreeBuilderObject* %1, %struct._object* %2)
  store %struct._object* %call1, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %3
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_start(%struct.TreeBuilderObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %attrib, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), %struct._object** %tag, %struct._object** %attrib)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %2 = load %struct._object*, %struct._object** %tag, align 8
  %3 = load %struct._object*, %struct._object** %attrib, align 8
  %call1 = call %struct._object* @treebuilder_handle_start(%struct.TreeBuilderObject* %1, %struct._object* %2, %struct._object* %3)
  store %struct._object* %call1, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %4
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_end(%struct.TreeBuilderObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), %struct._object** %tag)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %2 = load %struct._object*, %struct._object** %tag, align 8
  %call1 = call %struct._object* @treebuilder_handle_end(%struct.TreeBuilderObject* %1, %struct._object* %2)
  store %struct._object* %call1, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %3
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_close(%struct.TreeBuilderObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0))
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %call1 = call %struct._object* @treebuilder_done(%struct.TreeBuilderObject* %1)
  store %struct._object* %call1, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %2
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_handle_data(%struct.TreeBuilderObject* %self, %struct._object* %data) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %data.addr = alloca %struct._object*, align 8
  %size = alloca i64, align 8
  %list = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8
  store %struct._object* %data, %struct._object** %data.addr, align 8
  %0 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data1 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %0, i32 0, i32 4
  %1 = load %struct._object*, %struct._object** %data1, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %2, i32 0, i32 3
  %3 = load %struct._object*, %struct._object** %last, align 8
  %cmp = icmp eq %struct._object* %3, @_Py_NoneStruct
  br i1 %cmp, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %4, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %if.then
  %5 = load %struct._object*, %struct._object** %data.addr, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0
  %6 = load i64, i64* %ob_refcnt, align 8
  %inc3 = add i64 %6, 1
  store i64 %inc3, i64* %ob_refcnt, align 8
  %7 = load %struct._object*, %struct._object** %data.addr, align 8
  %8 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data4 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %8, i32 0, i32 4
  store %struct._object* %7, %struct._object** %data4, align 8
  br label %if.end.50

if.else:                                          ; preds = %entry
  %9 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data5 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %9, i32 0, i32 4
  %10 = load %struct._object*, %struct._object** %data5, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp6 = icmp eq %struct._typeobject* %11, @PyBytes_Type
  br i1 %cmp6, label %land.lhs.true, label %if.else.26

land.lhs.true:                                    ; preds = %if.else
  %12 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data7 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %12, i32 0, i32 4
  %13 = load %struct._object*, %struct._object** %data7, align 8
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt8, align 8
  %cmp9 = icmp eq i64 %14, 1
  br i1 %cmp9, label %land.lhs.true.10, label %if.else.26

land.lhs.true.10:                                 ; preds = %land.lhs.true
  %15 = load %struct._object*, %struct._object** %data.addr, align 8
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8
  %cmp12 = icmp eq %struct._typeobject* %16, @PyBytes_Type
  br i1 %cmp12, label %land.lhs.true.13, label %if.else.26

land.lhs.true.13:                                 ; preds = %land.lhs.true.10
  %17 = load %struct._object*, %struct._object** %data.addr, align 8
  %18 = bitcast %struct._object* %17 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %18, i32 0, i32 1
  %19 = load i64, i64* %ob_size, align 8
  %cmp14 = icmp eq i64 %19, 1
  br i1 %cmp14, label %if.then.15, label %if.else.26

if.then.15:                                       ; preds = %land.lhs.true.13
  %20 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data16 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %20, i32 0, i32 4
  %21 = load %struct._object*, %struct._object** %data16, align 8
  %22 = bitcast %struct._object* %21 to %struct.PyVarObject*
  %ob_size17 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %22, i32 0, i32 1
  %23 = load i64, i64* %ob_size17, align 8
  store i64 %23, i64* %size, align 8
  %24 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data18 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %24, i32 0, i32 4
  %25 = load i64, i64* %size, align 8
  %add = add i64 %25, 1
  %call = call i32 @_PyBytes_Resize(%struct._object** %data18, i64 %add)
  %cmp19 = icmp slt i32 %call, 0
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.then.15
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.21:                                        ; preds = %if.then.15
  %26 = load %struct._object*, %struct._object** %data.addr, align 8
  %27 = bitcast %struct._object* %26 to %struct.PyBytesObject*
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %27, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0
  %arrayidx = getelementptr i8, i8* %arraydecay, i64 0
  %28 = load i8, i8* %arrayidx, align 1
  %29 = load i64, i64* %size, align 8
  %30 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data22 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %30, i32 0, i32 4
  %31 = load %struct._object*, %struct._object** %data22, align 8
  %32 = bitcast %struct._object* %31 to %struct.PyBytesObject*
  %ob_sval23 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %32, i32 0, i32 2
  %arraydecay24 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval23, i32 0, i32 0
  %arrayidx25 = getelementptr i8, i8* %arraydecay24, i64 %29
  store i8 %28, i8* %arrayidx25, align 1
  br label %if.end.49

if.else.26:                                       ; preds = %land.lhs.true.13, %land.lhs.true.10, %land.lhs.true, %if.else
  %33 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data27 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %33, i32 0, i32 4
  %34 = load %struct._object*, %struct._object** %data27, align 8
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8
  %cmp29 = icmp eq %struct._typeobject* %35, @PyList_Type
  br i1 %cmp29, label %if.then.30, label %if.else.36

if.then.30:                                       ; preds = %if.else.26
  %36 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data31 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %36, i32 0, i32 4
  %37 = load %struct._object*, %struct._object** %data31, align 8
  %38 = load %struct._object*, %struct._object** %data.addr, align 8
  %call32 = call i32 @PyList_Append(%struct._object* %37, %struct._object* %38)
  %cmp33 = icmp slt i32 %call32, 0
  br i1 %cmp33, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %if.then.30
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.35:                                        ; preds = %if.then.30
  br label %if.end.48

if.else.36:                                       ; preds = %if.else.26
  %call37 = call %struct._object* @PyList_New(i64 2)
  store %struct._object* %call37, %struct._object** %list, align 8
  %39 = load %struct._object*, %struct._object** %list, align 8
  %tobool38 = icmp ne %struct._object* %39, null
  br i1 %tobool38, label %if.end.40, label %if.then.39

if.then.39:                                       ; preds = %if.else.36
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.40:                                        ; preds = %if.else.36
  %40 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data41 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %40, i32 0, i32 4
  %41 = load %struct._object*, %struct._object** %data41, align 8
  %42 = load %struct._object*, %struct._object** %list, align 8
  %43 = bitcast %struct._object* %42 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %43, i32 0, i32 1
  %44 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx42 = getelementptr %struct._object*, %struct._object** %44, i64 0
  store %struct._object* %41, %struct._object** %arrayidx42, align 8
  %45 = load %struct._object*, %struct._object** %data.addr, align 8
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0
  %46 = load i64, i64* %ob_refcnt43, align 8
  %inc44 = add i64 %46, 1
  store i64 %inc44, i64* %ob_refcnt43, align 8
  %47 = load %struct._object*, %struct._object** %data.addr, align 8
  %48 = load %struct._object*, %struct._object** %list, align 8
  %49 = bitcast %struct._object* %48 to %struct.PyListObject*
  %ob_item45 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %49, i32 0, i32 1
  %50 = load %struct._object**, %struct._object*** %ob_item45, align 8
  %arrayidx46 = getelementptr %struct._object*, %struct._object** %50, i64 1
  store %struct._object* %47, %struct._object** %arrayidx46, align 8
  %51 = load %struct._object*, %struct._object** %list, align 8
  %52 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data47 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %52, i32 0, i32 4
  store %struct._object* %51, %struct._object** %data47, align 8
  br label %if.end.48

if.end.48:                                        ; preds = %if.end.40, %if.end.35
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48, %if.end.21
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.49, %if.end
  %53 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc51 = add i64 %53, 1
  store i64 %inc51, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.50, %if.then.39, %if.then.34, %if.then.20, %if.then.2
  %54 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %54
}

declare i32 @_PyBytes_Resize(%struct._object**, i64) #1

declare i32 @PyList_Append(%struct._object*, %struct._object*) #1

declare %struct._object* @PyList_New(i64) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_handle_start(%struct.TreeBuilderObject* %self, %struct._object* %tag, %struct._object* %attrib) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %tag.addr = alloca %struct._object*, align 8
  %attrib.addr = alloca %struct._object*, align 8
  %node = alloca %struct._object*, align 8
  %this = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp71 = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %action = alloca %struct._object*, align 8
  %_py_decref_tmp93 = alloca %struct._object*, align 8
  %_py_decref_tmp107 = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8
  store %struct._object* %tag, %struct._object** %tag.addr, align 8
  store %struct._object* %attrib, %struct._object** %attrib.addr, align 8
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule)
  %call1 = call i8* @PyModule_GetState(%struct._object* %call)
  %0 = bitcast i8* %call1 to %struct.elementtreestate*
  store %struct.elementtreestate* %0, %struct.elementtreestate** %st, align 8
  %1 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %1, i32 0, i32 4
  %2 = load %struct._object*, %struct._object** %data, align 8
  %tobool = icmp ne %struct._object* %2, null
  br i1 %tobool, label %if.then, label %if.end.17

if.then:                                          ; preds = %entry
  %3 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %this2 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %3, i32 0, i32 2
  %4 = load %struct._object*, %struct._object** %this2, align 8
  %5 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %5, i32 0, i32 3
  %6 = load %struct._object*, %struct._object** %last, align 8
  %cmp = icmp eq %struct._object* %4, %6
  br i1 %cmp, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %if.then
  %7 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last4 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %7, i32 0, i32 3
  %8 = load %struct._object*, %struct._object** %last4, align 8
  %9 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data5 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %9, i32 0, i32 4
  %10 = load %struct._object*, %struct._object** %data5, align 8
  %call6 = call i32 @treebuilder_set_element_text(%struct._object* %8, %struct._object* %10)
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.then.8, label %if.end

if.then.8:                                        ; preds = %if.then.3
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %if.then.3
  br label %if.end.15

if.else:                                          ; preds = %if.then
  %11 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last9 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %11, i32 0, i32 3
  %12 = load %struct._object*, %struct._object** %last9, align 8
  %13 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data10 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %13, i32 0, i32 4
  %14 = load %struct._object*, %struct._object** %data10, align 8
  %call11 = call i32 @treebuilder_set_element_tail(%struct._object* %12, %struct._object* %14)
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.14:                                        ; preds = %if.else
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.end
  %15 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data16 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %15, i32 0, i32 4
  store %struct._object* null, %struct._object** %data16, align 8
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.15, %entry
  %16 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %element_factory = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %16, i32 0, i32 7
  %17 = load %struct._object*, %struct._object** %element_factory, align 8
  %tobool18 = icmp ne %struct._object* %17, null
  br i1 %tobool18, label %land.lhs.true, label %if.else.24

land.lhs.true:                                    ; preds = %if.end.17
  %18 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %element_factory19 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %18, i32 0, i32 7
  %19 = load %struct._object*, %struct._object** %element_factory19, align 8
  %cmp20 = icmp ne %struct._object* %19, @_Py_NoneStruct
  br i1 %cmp20, label %if.then.21, label %if.else.24

if.then.21:                                       ; preds = %land.lhs.true
  %20 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %element_factory22 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %20, i32 0, i32 7
  %21 = load %struct._object*, %struct._object** %element_factory22, align 8
  %22 = load %struct._object*, %struct._object** %tag.addr, align 8
  %23 = load %struct._object*, %struct._object** %attrib.addr, align 8
  %call23 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), %struct._object* %22, %struct._object* %23)
  store %struct._object* %call23, %struct._object** %node, align 8
  br label %if.end.26

if.else.24:                                       ; preds = %land.lhs.true, %if.end.17
  %24 = load %struct._object*, %struct._object** %tag.addr, align 8
  %25 = load %struct._object*, %struct._object** %attrib.addr, align 8
  %call25 = call %struct._object* @create_new_element(%struct._object* %24, %struct._object* %25)
  store %struct._object* %call25, %struct._object** %node, align 8
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.24, %if.then.21
  %26 = load %struct._object*, %struct._object** %node, align 8
  %tobool27 = icmp ne %struct._object* %26, null
  br i1 %tobool27, label %if.end.29, label %if.then.28

if.then.28:                                       ; preds = %if.end.26
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.29:                                        ; preds = %if.end.26
  %27 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %this30 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %27, i32 0, i32 2
  %28 = load %struct._object*, %struct._object** %this30, align 8
  store %struct._object* %28, %struct._object** %this, align 8
  %29 = load %struct._object*, %struct._object** %this, align 8
  %cmp31 = icmp ne %struct._object* %29, @_Py_NoneStruct
  br i1 %cmp31, label %if.then.32, label %if.else.37

if.then.32:                                       ; preds = %if.end.29
  %30 = load %struct._object*, %struct._object** %this, align 8
  %31 = load %struct._object*, %struct._object** %node, align 8
  %call33 = call i32 @treebuilder_add_subelement(%struct._object* %30, %struct._object* %31)
  %cmp34 = icmp slt i32 %call33, 0
  br i1 %cmp34, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %if.then.32
  br label %error

if.end.36:                                        ; preds = %if.then.32
  br label %if.end.42

if.else.37:                                       ; preds = %if.end.29
  %32 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %root = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %32, i32 0, i32 1
  %33 = load %struct._object*, %struct._object** %root, align 8
  %tobool38 = icmp ne %struct._object* %33, null
  br i1 %tobool38, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %if.else.37
  %34 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %parseerror_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %34, i32 0, i32 0
  %35 = load %struct._object*, %struct._object** %parseerror_obj, align 8
  call void @PyErr_SetString(%struct._object* %35, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i32 0, i32 0))
  br label %error

if.end.40:                                        ; preds = %if.else.37
  %36 = load %struct._object*, %struct._object** %node, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0
  %37 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %37, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %38 = load %struct._object*, %struct._object** %node, align 8
  %39 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %root41 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %39, i32 0, i32 1
  store %struct._object* %38, %struct._object** %root41, align 8
  br label %if.end.42

if.end.42:                                        ; preds = %if.end.40, %if.end.36
  %40 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %index = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %40, i32 0, i32 6
  %41 = load i64, i64* %index, align 8
  %42 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %stack = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %42, i32 0, i32 5
  %43 = load %struct._object*, %struct._object** %stack, align 8
  %44 = bitcast %struct._object* %43 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %44, i32 0, i32 1
  %45 = load i64, i64* %ob_size, align 8
  %cmp43 = icmp slt i64 %41, %45
  br i1 %cmp43, label %if.then.44, label %if.else.53

if.then.44:                                       ; preds = %if.end.42
  %46 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %stack45 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %46, i32 0, i32 5
  %47 = load %struct._object*, %struct._object** %stack45, align 8
  %48 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %index46 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %48, i32 0, i32 6
  %49 = load i64, i64* %index46, align 8
  %50 = load %struct._object*, %struct._object** %this, align 8
  %call47 = call i32 @PyList_SetItem(%struct._object* %47, i64 %49, %struct._object* %50)
  %cmp48 = icmp slt i32 %call47, 0
  br i1 %cmp48, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %if.then.44
  br label %error

if.end.50:                                        ; preds = %if.then.44
  %51 = load %struct._object*, %struct._object** %this, align 8
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0
  %52 = load i64, i64* %ob_refcnt51, align 8
  %inc52 = add i64 %52, 1
  store i64 %inc52, i64* %ob_refcnt51, align 8
  br label %if.end.59

if.else.53:                                       ; preds = %if.end.42
  %53 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %stack54 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %53, i32 0, i32 5
  %54 = load %struct._object*, %struct._object** %stack54, align 8
  %55 = load %struct._object*, %struct._object** %this, align 8
  %call55 = call i32 @PyList_Append(%struct._object* %54, %struct._object* %55)
  %cmp56 = icmp slt i32 %call55, 0
  br i1 %cmp56, label %if.then.57, label %if.end.58

if.then.57:                                       ; preds = %if.else.53
  br label %error

if.end.58:                                        ; preds = %if.else.53
  br label %if.end.59

if.end.59:                                        ; preds = %if.end.58, %if.end.50
  %56 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %index60 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %56, i32 0, i32 6
  %57 = load i64, i64* %index60, align 8
  %inc61 = add i64 %57, 1
  store i64 %inc61, i64* %index60, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.59
  %58 = load %struct._object*, %struct._object** %this, align 8
  store %struct._object* %58, %struct._object** %_py_decref_tmp, align 8
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 0
  %60 = load i64, i64* %ob_refcnt62, align 8
  %dec = add i64 %60, -1
  store i64 %dec, i64* %ob_refcnt62, align 8
  %cmp63 = icmp ne i64 %dec, 0
  br i1 %cmp63, label %if.then.64, label %if.else.65

if.then.64:                                       ; preds = %do.body
  br label %if.end.66

if.else.65:                                       ; preds = %do.body
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 1
  %62 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %62, i32 0, i32 4
  %63 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %63(%struct._object* %64)
  br label %if.end.66

if.end.66:                                        ; preds = %if.else.65, %if.then.64
  br label %do.end

do.end:                                           ; preds = %if.end.66
  %65 = load %struct._object*, %struct._object** %node, align 8
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0
  %66 = load i64, i64* %ob_refcnt67, align 8
  %inc68 = add i64 %66, 1
  store i64 %inc68, i64* %ob_refcnt67, align 8
  %67 = load %struct._object*, %struct._object** %node, align 8
  %68 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %this69 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %68, i32 0, i32 2
  store %struct._object* %67, %struct._object** %this69, align 8
  br label %do.body.70

do.body.70:                                       ; preds = %do.end
  %69 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last72 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %69, i32 0, i32 3
  %70 = load %struct._object*, %struct._object** %last72, align 8
  store %struct._object* %70, %struct._object** %_py_decref_tmp71, align 8
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0
  %72 = load i64, i64* %ob_refcnt73, align 8
  %dec74 = add i64 %72, -1
  store i64 %dec74, i64* %ob_refcnt73, align 8
  %cmp75 = icmp ne i64 %dec74, 0
  br i1 %cmp75, label %if.then.76, label %if.else.77

if.then.76:                                       ; preds = %do.body.70
  br label %if.end.80

if.else.77:                                       ; preds = %do.body.70
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8
  call void %75(%struct._object* %76)
  br label %if.end.80

if.end.80:                                        ; preds = %if.else.77, %if.then.76
  br label %do.end.81

do.end.81:                                        ; preds = %if.end.80
  %77 = load %struct._object*, %struct._object** %node, align 8
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 0
  %78 = load i64, i64* %ob_refcnt82, align 8
  %inc83 = add i64 %78, 1
  store i64 %inc83, i64* %ob_refcnt82, align 8
  %79 = load %struct._object*, %struct._object** %node, align 8
  %80 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last84 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %80, i32 0, i32 3
  store %struct._object* %79, %struct._object** %last84, align 8
  %81 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %start_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %81, i32 0, i32 9
  %82 = load %struct._object*, %struct._object** %start_event_obj, align 8
  %tobool85 = icmp ne %struct._object* %82, null
  br i1 %tobool85, label %if.then.86, label %if.end.105

if.then.86:                                       ; preds = %do.end.81
  %83 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %start_event_obj87 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %83, i32 0, i32 9
  %84 = load %struct._object*, %struct._object** %start_event_obj87, align 8
  store %struct._object* %84, %struct._object** %action, align 8
  %85 = load %struct._object*, %struct._object** %action, align 8
  %86 = load %struct._object*, %struct._object** %node, align 8
  %call88 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %85, %struct._object* %86)
  store %struct._object* %call88, %struct._object** %res, align 8
  %87 = load %struct._object*, %struct._object** %res, align 8
  %tobool89 = icmp ne %struct._object* %87, null
  br i1 %tobool89, label %if.then.90, label %if.else.103

if.then.90:                                       ; preds = %if.then.86
  %88 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %events = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %88, i32 0, i32 8
  %89 = load %struct._object*, %struct._object** %events, align 8
  %90 = load %struct._object*, %struct._object** %res, align 8
  %call91 = call i32 @PyList_Append(%struct._object* %89, %struct._object* %90)
  br label %do.body.92

do.body.92:                                       ; preds = %if.then.90
  %91 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %91, %struct._object** %_py_decref_tmp93, align 8
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp93, align 8
  %ob_refcnt94 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 0
  %93 = load i64, i64* %ob_refcnt94, align 8
  %dec95 = add i64 %93, -1
  store i64 %dec95, i64* %ob_refcnt94, align 8
  %cmp96 = icmp ne i64 %dec95, 0
  br i1 %cmp96, label %if.then.97, label %if.else.98

if.then.97:                                       ; preds = %do.body.92
  br label %if.end.101

if.else.98:                                       ; preds = %do.body.92
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp93, align 8
  %ob_type99 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 1
  %95 = load %struct._typeobject*, %struct._typeobject** %ob_type99, align 8
  %tp_dealloc100 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %95, i32 0, i32 4
  %96 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc100, align 8
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp93, align 8
  call void %96(%struct._object* %97)
  br label %if.end.101

if.end.101:                                       ; preds = %if.else.98, %if.then.97
  br label %do.end.102

do.end.102:                                       ; preds = %if.end.101
  br label %if.end.104

if.else.103:                                      ; preds = %if.then.86
  call void @PyErr_Clear()
  br label %if.end.104

if.end.104:                                       ; preds = %if.else.103, %do.end.102
  br label %if.end.105

if.end.105:                                       ; preds = %if.end.104, %do.end.81
  %98 = load %struct._object*, %struct._object** %node, align 8
  store %struct._object* %98, %struct._object** %retval
  br label %return

error:                                            ; preds = %if.then.57, %if.then.49, %if.then.39, %if.then.35
  br label %do.body.106

do.body.106:                                      ; preds = %error
  %99 = load %struct._object*, %struct._object** %node, align 8
  store %struct._object* %99, %struct._object** %_py_decref_tmp107, align 8
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8
  %ob_refcnt108 = getelementptr inbounds %struct._object, %struct._object* %100, i32 0, i32 0
  %101 = load i64, i64* %ob_refcnt108, align 8
  %dec109 = add i64 %101, -1
  store i64 %dec109, i64* %ob_refcnt108, align 8
  %cmp110 = icmp ne i64 %dec109, 0
  br i1 %cmp110, label %if.then.111, label %if.else.112

if.then.111:                                      ; preds = %do.body.106
  br label %if.end.115

if.else.112:                                      ; preds = %do.body.106
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8
  %ob_type113 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 1
  %103 = load %struct._typeobject*, %struct._typeobject** %ob_type113, align 8
  %tp_dealloc114 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %103, i32 0, i32 4
  %104 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc114, align 8
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8
  call void %104(%struct._object* %105)
  br label %if.end.115

if.end.115:                                       ; preds = %if.else.112, %if.then.111
  br label %do.end.116

do.end.116:                                       ; preds = %if.end.115
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.116, %if.end.105, %if.then.28, %if.then.13, %if.then.8
  %106 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %106
}

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_set_element_text(%struct._object* %element, %struct._object* %data) #0 {
entry:
  %element.addr = alloca %struct._object*, align 8
  %data.addr = alloca %struct._object*, align 8
  store %struct._object* %element, %struct._object** %element.addr, align 8
  store %struct._object* %data, %struct._object** %data.addr, align 8
  %0 = load %struct._object*, %struct._object** %element.addr, align 8
  %1 = load %struct._object*, %struct._object** %data.addr, align 8
  %2 = load %struct._object*, %struct._object** %element.addr, align 8
  %3 = bitcast %struct._object* %2 to %struct.ElementObject*
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 2
  %call = call i32 @treebuilder_set_element_text_or_tail(%struct._object* %0, %struct._object* %1, %struct._object** %text, %struct._Py_Identifier* @treebuilder_set_element_text.PyId_text)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_set_element_tail(%struct._object* %element, %struct._object* %data) #0 {
entry:
  %element.addr = alloca %struct._object*, align 8
  %data.addr = alloca %struct._object*, align 8
  store %struct._object* %element, %struct._object** %element.addr, align 8
  store %struct._object* %data, %struct._object** %data.addr, align 8
  %0 = load %struct._object*, %struct._object** %element.addr, align 8
  %1 = load %struct._object*, %struct._object** %data.addr, align 8
  %2 = load %struct._object*, %struct._object** %element.addr, align 8
  %3 = bitcast %struct._object* %2 to %struct.ElementObject*
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 3
  %call = call i32 @treebuilder_set_element_text_or_tail(%struct._object* %0, %struct._object* %1, %struct._object** %tail, %struct._Py_Identifier* @treebuilder_set_element_tail.PyId_tail)
  ret i32 %call
}

declare %struct._object* @PyObject_CallFunction(%struct._object*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_add_subelement(%struct._object* %element, %struct._object* %child) #0 {
entry:
  %retval = alloca i32, align 4
  %element.addr = alloca %struct._object*, align 8
  %child.addr = alloca %struct._object*, align 8
  %elem = alloca %struct.ElementObject*, align 8
  %res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %element, %struct._object** %element.addr, align 8
  store %struct._object* %child, %struct._object** %child.addr, align 8
  %0 = load %struct._object*, %struct._object** %element.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %1, @Element_Type
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** %element.addr, align 8
  %3 = bitcast %struct._object* %2 to %struct.ElementObject*
  store %struct.ElementObject* %3, %struct.ElementObject** %elem, align 8
  %4 = load %struct.ElementObject*, %struct.ElementObject** %elem, align 8
  %5 = load %struct._object*, %struct._object** %child.addr, align 8
  %call = call i32 @element_add_subelement(%struct.ElementObject* %4, %struct._object* %5)
  store i32 %call, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %6 = load %struct._object*, %struct._object** %element.addr, align 8
  %7 = load %struct._object*, %struct._object** %child.addr, align 8
  %call1 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %6, %struct._Py_Identifier* @treebuilder_add_subelement.PyId_append, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), %struct._object* %7)
  store %struct._object* %call1, %struct._object** %res, align 8
  %8 = load %struct._object*, %struct._object** %res, align 8
  %cmp2 = icmp eq %struct._object* %8, null
  br i1 %cmp2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.else
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else
  br label %do.body

do.body:                                          ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0
  %11 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %11, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp4 = icmp ne i64 %dec, 0
  br i1 %cmp4, label %if.then.5, label %if.else.6

if.then.5:                                        ; preds = %do.body
  br label %if.end.8

if.else.6:                                        ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %14(%struct._object* %15)
  br label %if.end.8

if.end.8:                                         ; preds = %if.else.6, %if.then.5
  br label %do.end

do.end:                                           ; preds = %if.end.8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end, %if.then.3, %if.then
  %16 = load i32, i32* %retval
  ret i32 %16
}

declare i32 @PyList_SetItem(%struct._object*, i64, %struct._object*) #1

declare %struct._object* @PyTuple_Pack(i64, ...) #1

declare void @PyErr_Clear() #1

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_set_element_text_or_tail(%struct._object* %element, %struct._object* %data, %struct._object** %dest, %struct._Py_Identifier* %name) #0 {
entry:
  %retval = alloca i32, align 4
  %element.addr = alloca %struct._object*, align 8
  %data.addr = alloca %struct._object*, align 8
  %dest.addr = alloca %struct._object**, align 8
  %name.addr = alloca %struct._Py_Identifier*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %joined = alloca %struct._object*, align 8
  %r = alloca i32, align 4
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  store %struct._object* %element, %struct._object** %element.addr, align 8
  store %struct._object* %data, %struct._object** %data.addr, align 8
  store %struct._object** %dest, %struct._object*** %dest.addr, align 8
  store %struct._Py_Identifier* %name, %struct._Py_Identifier** %name.addr, align 8
  %0 = load %struct._object*, %struct._object** %element.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %1, @Element_Type
  br i1 %cmp, label %if.then, label %if.else.8

if.then:                                          ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %if.then
  %2 = load %struct._object**, %struct._object*** %dest.addr, align 8
  %3 = load %struct._object*, %struct._object** %2, align 8
  %4 = ptrtoint %struct._object* %3 to i64
  %and = and i64 %4, -2
  %5 = inttoptr i64 %and to %struct._object*
  store %struct._object* %5, %struct._object** %_py_decref_tmp, align 8
  %6 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0
  %7 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %7, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp1 = icmp ne i64 %dec, 0
  br i1 %cmp1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %do.body
  br label %if.end

if.else:                                          ; preds = %do.body
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 4
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %10(%struct._object* %11)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  br label %do.end

do.end:                                           ; preds = %if.end
  %12 = load %struct._object*, %struct._object** %data.addr, align 8
  %13 = ptrtoint %struct._object* %12 to i64
  %and4 = and i64 %13, -2
  %14 = inttoptr i64 %and4 to %struct._object*
  %15 = ptrtoint %struct._object* %14 to i64
  %16 = load %struct._object*, %struct._object** %data.addr, align 8
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8
  %cmp6 = icmp eq %struct._typeobject* %17, @PyList_Type
  %conv = zext i1 %cmp6 to i32
  %conv7 = sext i32 %conv to i64
  %or = or i64 %15, %conv7
  %18 = inttoptr i64 %or to i8*
  %19 = bitcast i8* %18 to %struct._object*
  %20 = load %struct._object**, %struct._object*** %dest.addr, align 8
  store %struct._object* %19, %struct._object** %20, align 8
  store i32 0, i32* %retval
  br label %return

if.else.8:                                        ; preds = %entry
  %21 = load %struct._object*, %struct._object** %data.addr, align 8
  %call = call %struct._object* @list_join(%struct._object* %21)
  store %struct._object* %call, %struct._object** %joined, align 8
  %22 = load %struct._object*, %struct._object** %joined, align 8
  %cmp9 = icmp eq %struct._object* %22, null
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.else.8
  store i32 -1, i32* %retval
  br label %return

if.end.12:                                        ; preds = %if.else.8
  %23 = load %struct._object*, %struct._object** %element.addr, align 8
  %24 = load %struct._Py_Identifier*, %struct._Py_Identifier** %name.addr, align 8
  %25 = load %struct._object*, %struct._object** %joined, align 8
  %call13 = call i32 @_PyObject_SetAttrId(%struct._object* %23, %struct._Py_Identifier* %24, %struct._object* %25)
  store i32 %call13, i32* %r, align 4
  br label %do.body.14

do.body.14:                                       ; preds = %if.end.12
  %26 = load %struct._object*, %struct._object** %joined, align 8
  store %struct._object* %26, %struct._object** %_py_decref_tmp15, align 8
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0
  %28 = load i64, i64* %ob_refcnt16, align 8
  %dec17 = add i64 %28, -1
  store i64 %dec17, i64* %ob_refcnt16, align 8
  %cmp18 = icmp ne i64 %dec17, 0
  br i1 %cmp18, label %if.then.20, label %if.else.21

if.then.20:                                       ; preds = %do.body.14
  br label %if.end.24

if.else.21:                                       ; preds = %do.body.14
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8
  call void %31(%struct._object* %32)
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  br label %do.end.25

do.end.25:                                        ; preds = %if.end.24
  %33 = load i32, i32* %r, align 4
  store i32 %33, i32* %retval
  br label %return

return:                                           ; preds = %do.end.25, %if.then.11, %do.end
  %34 = load i32, i32* %retval
  ret i32 %34
}

declare i32 @_PyObject_SetAttrId(%struct._object*, %struct._Py_Identifier*, %struct._object*) #1

declare %struct._object* @_PyObject_CallMethodId(%struct._object*, %struct._Py_Identifier*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_handle_end(%struct.TreeBuilderObject* %self, %struct._object* %tag) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %tag.addr = alloca %struct._object*, align 8
  %item = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %action = alloca %struct._object*, align 8
  %node = alloca %struct._object*, align 8
  %_py_decref_tmp39 = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8
  store %struct._object* %tag, %struct._object** %tag.addr, align 8
  %0 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %0, i32 0, i32 4
  %1 = load %struct._object*, %struct._object** %data, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.then, label %if.end.14

if.then:                                          ; preds = %entry
  %2 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %this = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %2, i32 0, i32 2
  %3 = load %struct._object*, %struct._object** %this, align 8
  %4 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %4, i32 0, i32 3
  %5 = load %struct._object*, %struct._object** %last, align 8
  %cmp = icmp eq %struct._object* %3, %5
  br i1 %cmp, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.then
  %6 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last2 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %6, i32 0, i32 3
  %7 = load %struct._object*, %struct._object** %last2, align 8
  %8 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data3 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %8, i32 0, i32 4
  %9 = load %struct._object*, %struct._object** %data3, align 8
  %call = call i32 @treebuilder_set_element_text(%struct._object* %7, %struct._object* %9)
  %tobool4 = icmp ne i32 %call, 0
  br i1 %tobool4, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %if.then.1
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %if.then.1
  br label %if.end.12

if.else:                                          ; preds = %if.then
  %10 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last6 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %10, i32 0, i32 3
  %11 = load %struct._object*, %struct._object** %last6, align 8
  %12 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data7 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %12, i32 0, i32 4
  %13 = load %struct._object*, %struct._object** %data7, align 8
  %call8 = call i32 @treebuilder_set_element_tail(%struct._object* %11, %struct._object* %13)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.11:                                        ; preds = %if.else
  br label %if.end.12

if.end.12:                                        ; preds = %if.end.11, %if.end
  %14 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %data13 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %14, i32 0, i32 4
  store %struct._object* null, %struct._object** %data13, align 8
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.12, %entry
  %15 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %index = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %15, i32 0, i32 6
  %16 = load i64, i64* %index, align 8
  %cmp15 = icmp eq i64 %16, 0
  br i1 %cmp15, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.end.14
  %17 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.17:                                        ; preds = %if.end.14
  %18 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %index18 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %18, i32 0, i32 6
  %19 = load i64, i64* %index18, align 8
  %dec = add i64 %19, -1
  store i64 %dec, i64* %index18, align 8
  %20 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %index19 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %20, i32 0, i32 6
  %21 = load i64, i64* %index19, align 8
  %22 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %stack = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %22, i32 0, i32 5
  %23 = load %struct._object*, %struct._object** %stack, align 8
  %24 = bitcast %struct._object* %23 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %24, i32 0, i32 1
  %25 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %25, i64 %21
  %26 = load %struct._object*, %struct._object** %arrayidx, align 8
  store %struct._object* %26, %struct._object** %item, align 8
  %27 = load %struct._object*, %struct._object** %item, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0
  %28 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %28, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.17
  %29 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last20 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %29, i32 0, i32 3
  %30 = load %struct._object*, %struct._object** %last20, align 8
  store %struct._object* %30, %struct._object** %_py_decref_tmp, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0
  %32 = load i64, i64* %ob_refcnt21, align 8
  %dec22 = add i64 %32, -1
  store i64 %dec22, i64* %ob_refcnt21, align 8
  %cmp23 = icmp ne i64 %dec22, 0
  br i1 %cmp23, label %if.then.24, label %if.else.25

if.then.24:                                       ; preds = %do.body
  br label %if.end.26

if.else.25:                                       ; preds = %do.body
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %35(%struct._object* %36)
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.25, %if.then.24
  br label %do.end

do.end:                                           ; preds = %if.end.26
  %37 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %this27 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %37, i32 0, i32 2
  %38 = load %struct._object*, %struct._object** %this27, align 8
  %39 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last28 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %39, i32 0, i32 3
  store %struct._object* %38, %struct._object** %last28, align 8
  %40 = load %struct._object*, %struct._object** %item, align 8
  %41 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %this29 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %41, i32 0, i32 2
  store %struct._object* %40, %struct._object** %this29, align 8
  %42 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %end_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %42, i32 0, i32 10
  %43 = load %struct._object*, %struct._object** %end_event_obj, align 8
  %tobool30 = icmp ne %struct._object* %43, null
  br i1 %tobool30, label %if.then.31, label %if.end.51

if.then.31:                                       ; preds = %do.end
  %44 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %end_event_obj32 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %44, i32 0, i32 10
  %45 = load %struct._object*, %struct._object** %end_event_obj32, align 8
  store %struct._object* %45, %struct._object** %action, align 8
  %46 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last33 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %46, i32 0, i32 3
  %47 = load %struct._object*, %struct._object** %last33, align 8
  store %struct._object* %47, %struct._object** %node, align 8
  %48 = load %struct._object*, %struct._object** %action, align 8
  %49 = load %struct._object*, %struct._object** %node, align 8
  %call34 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %48, %struct._object* %49)
  store %struct._object* %call34, %struct._object** %res, align 8
  %50 = load %struct._object*, %struct._object** %res, align 8
  %tobool35 = icmp ne %struct._object* %50, null
  br i1 %tobool35, label %if.then.36, label %if.else.49

if.then.36:                                       ; preds = %if.then.31
  %51 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %events = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %51, i32 0, i32 8
  %52 = load %struct._object*, %struct._object** %events, align 8
  %53 = load %struct._object*, %struct._object** %res, align 8
  %call37 = call i32 @PyList_Append(%struct._object* %52, %struct._object* %53)
  br label %do.body.38

do.body.38:                                       ; preds = %if.then.36
  %54 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %54, %struct._object** %_py_decref_tmp39, align 8
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 0
  %56 = load i64, i64* %ob_refcnt40, align 8
  %dec41 = add i64 %56, -1
  store i64 %dec41, i64* %ob_refcnt40, align 8
  %cmp42 = icmp ne i64 %dec41, 0
  br i1 %cmp42, label %if.then.43, label %if.else.44

if.then.43:                                       ; preds = %do.body.38
  br label %if.end.47

if.else.44:                                       ; preds = %do.body.38
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 1
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8
  %tp_dealloc46 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i32 0, i32 4
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc46, align 8
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8
  call void %59(%struct._object* %60)
  br label %if.end.47

if.end.47:                                        ; preds = %if.else.44, %if.then.43
  br label %do.end.48

do.end.48:                                        ; preds = %if.end.47
  br label %if.end.50

if.else.49:                                       ; preds = %if.then.31
  call void @PyErr_Clear()
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.49, %do.end.48
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50, %do.end
  %61 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last52 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %61, i32 0, i32 3
  %62 = load %struct._object*, %struct._object** %last52, align 8
  %ob_refcnt53 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0
  %63 = load i64, i64* %ob_refcnt53, align 8
  %inc54 = add i64 %63, 1
  store i64 %inc54, i64* %ob_refcnt53, align 8
  %64 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %last55 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %64, i32 0, i32 3
  %65 = load %struct._object*, %struct._object** %last55, align 8
  store %struct._object* %65, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.51, %if.then.16, %if.then.10, %if.then.5
  %66 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %66
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_done(%struct.TreeBuilderObject* %self) #0 {
entry:
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %res = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8
  %0 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %root = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %0, i32 0, i32 1
  %1 = load %struct._object*, %struct._object** %root, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %root1 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %2, i32 0, i32 1
  %3 = load %struct._object*, %struct._object** %root1, align 8
  store %struct._object* %3, %struct._object** %res, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  store %struct._object* @_Py_NoneStruct, %struct._object** %res, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct._object*, %struct._object** %res, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0
  %5 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %5, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %6 = load %struct._object*, %struct._object** %res, align 8
  ret %struct._object* %6
}

declare i32 @PyArg_ParseTupleAndKeywords(%struct._object*, %struct._object*, i8*, i8**, ...) #1

; Function Attrs: nounwind uwtable
define internal void @element_dealloc(%struct.ElementObject* %self) #0 {
entry:
  %self.addr = alloca %struct.ElementObject*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %1 = bitcast %struct.ElementObject* %0 to i8*
  call void @PyObject_GC_UnTrack(i8* %1)
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %weakreflist = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 5
  %3 = load %struct._object*, %struct._object** %weakreflist, align 8
  %cmp = icmp ne %struct._object* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %5 = bitcast %struct.ElementObject* %4 to %struct._object*
  call void @PyObject_ClearWeakRefs(%struct._object* %5)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call = call i32 @element_gc_clear(%struct.ElementObject* %6)
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %8 = bitcast %struct.ElementObject* %7 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 38
  %10 = load void (i8*)*, void (i8*)** %tp_free, align 8
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %12 = bitcast %struct.ElementObject* %11 to %struct._object*
  %13 = bitcast %struct._object* %12 to i8*
  call void %10(i8* %13)
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_repr(%struct.ElementObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 1
  %1 = load %struct._object*, %struct._object** %tag, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 1
  %3 = load %struct._object*, %struct._object** %tag1, align 8
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i32 0, i32 0), %struct._object* %3, %struct.ElementObject* %4)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.else:                                          ; preds = %entry
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call2 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), %struct.ElementObject* %5)
  store %struct._object* %call2, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %6 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %6
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_getattro(%struct.ElementObject* %self, %struct._object* %nameobj) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %nameobj.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %name = alloca i8*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %nameobj, %struct._object** %nameobj.addr, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0), i8** %name, align 8
  %0 = load %struct._object*, %struct._object** %nameobj.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 268435456
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %nameobj.addr, align 8
  %call = call i8* @PyUnicode_AsUTF8(%struct._object* %3)
  store i8* %call, i8** %name, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** %name, align 8
  %cmp1 = icmp eq i8* %4, null
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load i8*, i8** %name, align 8
  %call4 = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0)) #5
  %cmp5 = icmp eq i32 %call4, 0
  br i1 %cmp5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %if.end.3
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %6, i32 0, i32 1
  %7 = load %struct._object*, %struct._object** %tag, align 8
  store %struct._object* %7, %struct._object** %res, align 8
  %8 = load %struct._object*, %struct._object** %res, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0
  %9 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %9, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %10 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %10, %struct._object** %retval
  br label %return

if.else:                                          ; preds = %if.end.3
  %11 = load i8*, i8** %name, align 8
  %call7 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0)) #5
  %cmp8 = icmp eq i32 %call7, 0
  br i1 %cmp8, label %if.then.9, label %if.end.16

if.then.9:                                        ; preds = %if.else
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call10 = call %struct._object* @element_get_text(%struct.ElementObject* %12)
  store %struct._object* %call10, %struct._object** %res, align 8
  br label %do.body

do.body:                                          ; preds = %if.then.9
  %13 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %13, %struct._object** %_py_xincref_tmp, align 8
  %14 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8
  %cmp11 = icmp ne %struct._object* %14, null
  br i1 %cmp11, label %if.then.12, label %if.end.15

if.then.12:                                       ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0
  %16 = load i64, i64* %ob_refcnt13, align 8
  %inc14 = add i64 %16, 1
  store i64 %inc14, i64* %ob_refcnt13, align 8
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.12, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end.15
  %17 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %17, %struct._object** %retval
  br label %return

if.end.16:                                        ; preds = %if.else
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.16
  %18 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %19 = bitcast %struct.ElementObject* %18 to %struct._object*
  %20 = load %struct._object*, %struct._object** %nameobj.addr, align 8
  %call18 = call %struct._object* @PyObject_GenericGetAttr(%struct._object* %19, %struct._object* %20)
  store %struct._object* %call18, %struct._object** %res, align 8
  %21 = load %struct._object*, %struct._object** %res, align 8
  %tobool = icmp ne %struct._object* %21, null
  br i1 %tobool, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.17
  %22 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %22, %struct._object** %retval
  br label %return

if.end.20:                                        ; preds = %if.end.17
  %23 = load i8*, i8** %name, align 8
  %call21 = call i32 @strcmp(i8* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0)) #5
  %cmp22 = icmp eq i32 %call21, 0
  br i1 %cmp22, label %if.then.23, label %if.else.25

if.then.23:                                       ; preds = %if.end.20
  call void @PyErr_Clear()
  %24 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call24 = call %struct._object* @element_get_tail(%struct.ElementObject* %24)
  store %struct._object* %call24, %struct._object** %res, align 8
  br label %if.end.38

if.else.25:                                       ; preds = %if.end.20
  %25 = load i8*, i8** %name, align 8
  %call26 = call i32 @strcmp(i8* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0)) #5
  %cmp27 = icmp eq i32 %call26, 0
  br i1 %cmp27, label %if.then.28, label %if.end.37

if.then.28:                                       ; preds = %if.else.25
  call void @PyErr_Clear()
  %26 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %26, i32 0, i32 4
  %27 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool29 = icmp ne %struct.ElementObjectExtra* %27, null
  br i1 %tobool29, label %if.end.35, label %if.then.30

if.then.30:                                       ; preds = %if.then.28
  %28 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call31 = call i32 @create_extra(%struct.ElementObject* %28, %struct._object* null)
  %cmp32 = icmp slt i32 %call31, 0
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.then.30
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.34:                                        ; preds = %if.then.30
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.34, %if.then.28
  %29 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call36 = call %struct._object* @element_get_attrib(%struct.ElementObject* %29)
  store %struct._object* %call36, %struct._object** %res, align 8
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.35, %if.else.25
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.37, %if.then.23
  %30 = load %struct._object*, %struct._object** %res, align 8
  %tobool39 = icmp ne %struct._object* %30, null
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.end.38
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.41:                                        ; preds = %if.end.38
  %31 = load %struct._object*, %struct._object** %res, align 8
  %ob_refcnt42 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0
  %32 = load i64, i64* %ob_refcnt42, align 8
  %inc43 = add i64 %32, 1
  store i64 %inc43, i64* %ob_refcnt42, align 8
  %33 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %33, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.41, %if.then.40, %if.then.33, %if.then.19, %do.end, %if.then.6, %if.then.2
  %34 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %34
}

; Function Attrs: nounwind uwtable
define internal i32 @element_setattro(%struct.ElementObject* %self, %struct._object* %nameobj, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.ElementObject*, align 8
  %nameobj.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %name = alloca i8*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp19 = alloca %struct._object*, align 8
  %_py_decref_tmp39 = alloca %struct._object*, align 8
  %_py_decref_tmp65 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %nameobj, %struct._object** %nameobj.addr, align 8
  store %struct._object* %value, %struct._object** %value.addr, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0), i8** %name, align 8
  %0 = load %struct._object*, %struct._object** %nameobj.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 268435456
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %nameobj.addr, align 8
  %call = call i8* @PyUnicode_AsUTF8(%struct._object* %3)
  store i8* %call, i8** %name, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** %name, align 8
  %cmp1 = icmp eq i8* %4, null
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i32 -1, i32* %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load i8*, i8** %name, align 8
  %call4 = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0)) #5
  %cmp5 = icmp eq i32 %call4, 0
  br i1 %cmp5, label %if.then.6, label %if.else.14

if.then.6:                                        ; preds = %if.end.3
  br label %do.body

do.body:                                          ; preds = %if.then.6
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %6, i32 0, i32 1
  %7 = load %struct._object*, %struct._object** %tag, align 8
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0
  %9 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %9, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp7 = icmp ne i64 %dec, 0
  br i1 %cmp7, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %do.body
  br label %if.end.10

if.else:                                          ; preds = %do.body
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %12(%struct._object* %13)
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.8
  br label %do.end

do.end:                                           ; preds = %if.end.10
  %14 = load %struct._object*, %struct._object** %value.addr, align 8
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 1
  store %struct._object* %14, %struct._object** %tag11, align 8
  %16 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag12 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %16, i32 0, i32 1
  %17 = load %struct._object*, %struct._object** %tag12, align 8
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0
  %18 = load i64, i64* %ob_refcnt13, align 8
  %inc = add i64 %18, 1
  store i64 %inc, i64* %ob_refcnt13, align 8
  br label %if.end.86

if.else.14:                                       ; preds = %if.end.3
  %19 = load i8*, i8** %name, align 8
  %call15 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0)) #5
  %cmp16 = icmp eq i32 %call15, 0
  br i1 %cmp16, label %if.then.17, label %if.else.34

if.then.17:                                       ; preds = %if.else.14
  br label %do.body.18

do.body.18:                                       ; preds = %if.then.17
  %20 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %20, i32 0, i32 2
  %21 = load %struct._object*, %struct._object** %text, align 8
  %22 = ptrtoint %struct._object* %21 to i64
  %and20 = and i64 %22, -2
  %23 = inttoptr i64 %and20 to %struct._object*
  store %struct._object* %23, %struct._object** %_py_decref_tmp19, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0
  %25 = load i64, i64* %ob_refcnt21, align 8
  %dec22 = add i64 %25, -1
  store i64 %dec22, i64* %ob_refcnt21, align 8
  %cmp23 = icmp ne i64 %dec22, 0
  br i1 %cmp23, label %if.then.24, label %if.else.25

if.then.24:                                       ; preds = %do.body.18
  br label %if.end.28

if.else.25:                                       ; preds = %do.body.18
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8
  %tp_dealloc27 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc27, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8
  call void %28(%struct._object* %29)
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.25, %if.then.24
  br label %do.end.29

do.end.29:                                        ; preds = %if.end.28
  %30 = load %struct._object*, %struct._object** %value.addr, align 8
  %31 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text30 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %31, i32 0, i32 2
  store %struct._object* %30, %struct._object** %text30, align 8
  %32 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text31 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %32, i32 0, i32 2
  %33 = load %struct._object*, %struct._object** %text31, align 8
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0
  %34 = load i64, i64* %ob_refcnt32, align 8
  %inc33 = add i64 %34, 1
  store i64 %inc33, i64* %ob_refcnt32, align 8
  br label %if.end.85

if.else.34:                                       ; preds = %if.else.14
  %35 = load i8*, i8** %name, align 8
  %call35 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0)) #5
  %cmp36 = icmp eq i32 %call35, 0
  br i1 %cmp36, label %if.then.37, label %if.else.54

if.then.37:                                       ; preds = %if.else.34
  br label %do.body.38

do.body.38:                                       ; preds = %if.then.37
  %36 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %36, i32 0, i32 3
  %37 = load %struct._object*, %struct._object** %tail, align 8
  %38 = ptrtoint %struct._object* %37 to i64
  %and40 = and i64 %38, -2
  %39 = inttoptr i64 %and40 to %struct._object*
  store %struct._object* %39, %struct._object** %_py_decref_tmp39, align 8
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0
  %41 = load i64, i64* %ob_refcnt41, align 8
  %dec42 = add i64 %41, -1
  store i64 %dec42, i64* %ob_refcnt41, align 8
  %cmp43 = icmp ne i64 %dec42, 0
  br i1 %cmp43, label %if.then.44, label %if.else.45

if.then.44:                                       ; preds = %do.body.38
  br label %if.end.48

if.else.45:                                       ; preds = %do.body.38
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8
  %tp_dealloc47 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc47, align 8
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8
  call void %44(%struct._object* %45)
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.45, %if.then.44
  br label %do.end.49

do.end.49:                                        ; preds = %if.end.48
  %46 = load %struct._object*, %struct._object** %value.addr, align 8
  %47 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail50 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %47, i32 0, i32 3
  store %struct._object* %46, %struct._object** %tail50, align 8
  %48 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail51 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %48, i32 0, i32 3
  %49 = load %struct._object*, %struct._object** %tail51, align 8
  %ob_refcnt52 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0
  %50 = load i64, i64* %ob_refcnt52, align 8
  %inc53 = add i64 %50, 1
  store i64 %inc53, i64* %ob_refcnt52, align 8
  br label %if.end.84

if.else.54:                                       ; preds = %if.else.34
  %51 = load i8*, i8** %name, align 8
  %call55 = call i32 @strcmp(i8* %51, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0)) #5
  %cmp56 = icmp eq i32 %call55, 0
  br i1 %cmp56, label %if.then.57, label %if.else.82

if.then.57:                                       ; preds = %if.else.54
  %52 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %52, i32 0, i32 4
  %53 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool = icmp ne %struct.ElementObjectExtra* %53, null
  br i1 %tobool, label %if.end.63, label %if.then.58

if.then.58:                                       ; preds = %if.then.57
  %54 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call59 = call i32 @create_extra(%struct.ElementObject* %54, %struct._object* null)
  %cmp60 = icmp slt i32 %call59, 0
  br i1 %cmp60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.then.58
  store i32 -1, i32* %retval
  br label %return

if.end.62:                                        ; preds = %if.then.58
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.62, %if.then.57
  br label %do.body.64

do.body.64:                                       ; preds = %if.end.63
  %55 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra66 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %55, i32 0, i32 4
  %56 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra66, align 8
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %56, i32 0, i32 0
  %57 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %57, %struct._object** %_py_decref_tmp65, align 8
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 0
  %59 = load i64, i64* %ob_refcnt67, align 8
  %dec68 = add i64 %59, -1
  store i64 %dec68, i64* %ob_refcnt67, align 8
  %cmp69 = icmp ne i64 %dec68, 0
  br i1 %cmp69, label %if.then.70, label %if.else.71

if.then.70:                                       ; preds = %do.body.64
  br label %if.end.74

if.else.71:                                       ; preds = %do.body.64
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8
  %ob_type72 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 1
  %61 = load %struct._typeobject*, %struct._typeobject** %ob_type72, align 8
  %tp_dealloc73 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 4
  %62 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc73, align 8
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8
  call void %62(%struct._object* %63)
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.71, %if.then.70
  br label %do.end.75

do.end.75:                                        ; preds = %if.end.74
  %64 = load %struct._object*, %struct._object** %value.addr, align 8
  %65 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra76 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %65, i32 0, i32 4
  %66 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra76, align 8
  %attrib77 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %66, i32 0, i32 0
  store %struct._object* %64, %struct._object** %attrib77, align 8
  %67 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra78 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %67, i32 0, i32 4
  %68 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra78, align 8
  %attrib79 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %68, i32 0, i32 0
  %69 = load %struct._object*, %struct._object** %attrib79, align 8
  %ob_refcnt80 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0
  %70 = load i64, i64* %ob_refcnt80, align 8
  %inc81 = add i64 %70, 1
  store i64 %inc81, i64* %ob_refcnt80, align 8
  br label %if.end.83

if.else.82:                                       ; preds = %if.else.54
  %71 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8
  call void @PyErr_SetString(%struct._object* %71, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.45, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end.83:                                        ; preds = %do.end.75
  br label %if.end.84

if.end.84:                                        ; preds = %if.end.83, %do.end.49
  br label %if.end.85

if.end.85:                                        ; preds = %if.end.84, %do.end.29
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %do.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.86, %if.else.82, %if.then.61, %if.then.2
  %72 = load i32, i32* %retval
  ret i32 %72
}

; Function Attrs: nounwind uwtable
define internal i32 @element_gc_traverse(%struct.ElementObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.ElementObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %vret8 = alloca i32, align 4
  %vret21 = alloca i32, align 4
  %i = alloca i32, align 4
  %vret36 = alloca i32, align 4
  %vret50 = alloca i32, align 4
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 1
  %1 = load %struct._object*, %struct._object** %tag, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.then, label %if.end.4

if.then:                                          ; preds = %do.body
  %2 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 1
  %4 = load %struct._object*, %struct._object** %tag1, align 8
  %5 = load i8*, i8** %arg.addr, align 8
  %call = call i32 %2(%struct._object* %4, i8* %5)
  store i32 %call, i32* %vret, align 4
  %6 = load i32, i32* %vret, align 4
  %tobool2 = icmp ne i32 %6, 0
  br i1 %tobool2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  %7 = load i32, i32* %vret, align 4
  store i32 %7, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end.4
  br label %do.body.5

do.body.5:                                        ; preds = %do.end
  %8 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %8, i32 0, i32 2
  %9 = load %struct._object*, %struct._object** %text, align 8
  %10 = ptrtoint %struct._object* %9 to i64
  %and = and i64 %10, -2
  %11 = inttoptr i64 %and to %struct._object*
  %tobool6 = icmp ne %struct._object* %11, null
  br i1 %tobool6, label %if.then.7, label %if.end.15

if.then.7:                                        ; preds = %do.body.5
  %12 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %13 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text9 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %13, i32 0, i32 2
  %14 = load %struct._object*, %struct._object** %text9, align 8
  %15 = ptrtoint %struct._object* %14 to i64
  %and10 = and i64 %15, -2
  %16 = inttoptr i64 %and10 to %struct._object*
  %17 = load i8*, i8** %arg.addr, align 8
  %call11 = call i32 %12(%struct._object* %16, i8* %17)
  store i32 %call11, i32* %vret8, align 4
  %18 = load i32, i32* %vret8, align 4
  %tobool12 = icmp ne i32 %18, 0
  br i1 %tobool12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.then.7
  %19 = load i32, i32* %vret8, align 4
  store i32 %19, i32* %retval
  br label %return

if.end.14:                                        ; preds = %if.then.7
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %do.body.5
  br label %do.end.16

do.end.16:                                        ; preds = %if.end.15
  br label %do.body.17

do.body.17:                                       ; preds = %do.end.16
  %20 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %20, i32 0, i32 3
  %21 = load %struct._object*, %struct._object** %tail, align 8
  %22 = ptrtoint %struct._object* %21 to i64
  %and18 = and i64 %22, -2
  %23 = inttoptr i64 %and18 to %struct._object*
  %tobool19 = icmp ne %struct._object* %23, null
  br i1 %tobool19, label %if.then.20, label %if.end.28

if.then.20:                                       ; preds = %do.body.17
  %24 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %25 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail22 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %25, i32 0, i32 3
  %26 = load %struct._object*, %struct._object** %tail22, align 8
  %27 = ptrtoint %struct._object* %26 to i64
  %and23 = and i64 %27, -2
  %28 = inttoptr i64 %and23 to %struct._object*
  %29 = load i8*, i8** %arg.addr, align 8
  %call24 = call i32 %24(%struct._object* %28, i8* %29)
  store i32 %call24, i32* %vret21, align 4
  %30 = load i32, i32* %vret21, align 4
  %tobool25 = icmp ne i32 %30, 0
  br i1 %tobool25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.then.20
  %31 = load i32, i32* %vret21, align 4
  store i32 %31, i32* %retval
  br label %return

if.end.27:                                        ; preds = %if.then.20
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %do.body.17
  br label %do.end.29

do.end.29:                                        ; preds = %if.end.28
  %32 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %32, i32 0, i32 4
  %33 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool30 = icmp ne %struct.ElementObjectExtra* %33, null
  br i1 %tobool30, label %if.then.31, label %if.end.61

if.then.31:                                       ; preds = %do.end.29
  br label %do.body.32

do.body.32:                                       ; preds = %if.then.31
  %34 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra33 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %34, i32 0, i32 4
  %35 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra33, align 8
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %35, i32 0, i32 0
  %36 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool34 = icmp ne %struct._object* %36, null
  br i1 %tobool34, label %if.then.35, label %if.end.43

if.then.35:                                       ; preds = %do.body.32
  %37 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %38 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra37 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %38, i32 0, i32 4
  %39 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra37, align 8
  %attrib38 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %39, i32 0, i32 0
  %40 = load %struct._object*, %struct._object** %attrib38, align 8
  %41 = load i8*, i8** %arg.addr, align 8
  %call39 = call i32 %37(%struct._object* %40, i8* %41)
  store i32 %call39, i32* %vret36, align 4
  %42 = load i32, i32* %vret36, align 4
  %tobool40 = icmp ne i32 %42, 0
  br i1 %tobool40, label %if.then.41, label %if.end.42

if.then.41:                                       ; preds = %if.then.35
  %43 = load i32, i32* %vret36, align 4
  store i32 %43, i32* %retval
  br label %return

if.end.42:                                        ; preds = %if.then.35
  br label %if.end.43

if.end.43:                                        ; preds = %if.end.42, %do.body.32
  br label %do.end.44

do.end.44:                                        ; preds = %if.end.43
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end.44
  %44 = load i32, i32* %i, align 4
  %45 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra45 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %45, i32 0, i32 4
  %46 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra45, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %46, i32 0, i32 1
  %47 = load i32, i32* %length, align 4
  %cmp = icmp slt i32 %44, %47
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %do.body.46

do.body.46:                                       ; preds = %for.body
  %48 = load i32, i32* %i, align 4
  %idxprom = sext i32 %48 to i64
  %49 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra47 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %49, i32 0, i32 4
  %50 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra47, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %50, i32 0, i32 3
  %51 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %51, i64 %idxprom
  %52 = load %struct._object*, %struct._object** %arrayidx, align 8
  %tobool48 = icmp ne %struct._object* %52, null
  br i1 %tobool48, label %if.then.49, label %if.end.59

if.then.49:                                       ; preds = %do.body.46
  %53 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %54 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %54 to i64
  %55 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra52 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %55, i32 0, i32 4
  %56 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra52, align 8
  %children53 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %56, i32 0, i32 3
  %57 = load %struct._object**, %struct._object*** %children53, align 8
  %arrayidx54 = getelementptr %struct._object*, %struct._object** %57, i64 %idxprom51
  %58 = load %struct._object*, %struct._object** %arrayidx54, align 8
  %59 = load i8*, i8** %arg.addr, align 8
  %call55 = call i32 %53(%struct._object* %58, i8* %59)
  store i32 %call55, i32* %vret50, align 4
  %60 = load i32, i32* %vret50, align 4
  %tobool56 = icmp ne i32 %60, 0
  br i1 %tobool56, label %if.then.57, label %if.end.58

if.then.57:                                       ; preds = %if.then.49
  %61 = load i32, i32* %vret50, align 4
  store i32 %61, i32* %retval
  br label %return

if.end.58:                                        ; preds = %if.then.49
  br label %if.end.59

if.end.59:                                        ; preds = %if.end.58, %do.body.46
  br label %do.end.60

do.end.60:                                        ; preds = %if.end.59
  br label %for.inc

for.inc:                                          ; preds = %do.end.60
  %62 = load i32, i32* %i, align 4
  %inc = add i32 %62, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.61

if.end.61:                                        ; preds = %for.end, %do.end.29
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.61, %if.then.57, %if.then.41, %if.then.26, %if.then.13, %if.then.3
  %63 = load i32, i32* %retval
  ret i32 %63
}

; Function Attrs: nounwind uwtable
define internal i32 @element_gc_clear(%struct.ElementObject* %self) #0 {
entry:
  %self.addr = alloca %struct.ElementObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 1
  %1 = load %struct._object*, %struct._object** %tag, align 8
  store %struct._object* %1, %struct._object** %_py_tmp, align 8
  %2 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp = icmp ne %struct._object* %2, null
  br i1 %cmp, label %if.then, label %if.end.5

if.then:                                          ; preds = %do.body
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 1
  store %struct._object* null, %struct._object** %tag1, align 8
  br label %do.body.2

do.body.2:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %4, %struct._object** %_py_decref_tmp, align 8
  %5 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0
  %6 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %6, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp3 = icmp ne i64 %dec, 0
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %do.body.2
  br label %if.end

if.else:                                          ; preds = %do.body.2
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 4
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %9(%struct._object* %10)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end.5

if.end.5:                                         ; preds = %do.end, %do.body
  br label %do.end.6

do.end.6:                                         ; preds = %if.end.5
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 2
  call void @_clear_joined_ptr(%struct._object** %text)
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %12, i32 0, i32 3
  call void @_clear_joined_ptr(%struct._object** %tail)
  %13 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  call void @dealloc_extra(%struct.ElementObject* %13)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @element_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %self_elem = alloca %struct.ElementObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp37 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp55 = alloca %struct._object*, align 8
  %_py_decref_tmp72 = alloca %struct._object*, align 8
  %_py_decref_tmp86 = alloca %struct._object*, align 8
  %_py_decref_tmp100 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  store %struct._object* null, %struct._object** %attrib, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.104, i32 0, i32 0), %struct._object** %tag, %struct._typeobject* @PyDict_Type, %struct._object** %attrib)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool3 = icmp ne %struct._object* %1, null
  br i1 %tobool3, label %if.then.4, label %if.else.19

if.then.4:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** %attrib, align 8
  %call5 = call %struct._object* @PyDict_Copy(%struct._object* %2)
  store %struct._object* %call5, %struct._object** %attrib, align 8
  %3 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool6 = icmp ne %struct._object* %3, null
  br i1 %tobool6, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.then.4
  store i32 -1, i32* %retval
  br label %return

if.end.8:                                         ; preds = %if.then.4
  %4 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %tobool9 = icmp ne %struct._object* %4, null
  br i1 %tobool9, label %if.then.10, label %if.end.18

if.then.10:                                       ; preds = %if.end.8
  %5 = load %struct._object*, %struct._object** %attrib, align 8
  %6 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call11 = call i32 @PyDict_Update(%struct._object* %5, %struct._object* %6)
  %cmp = icmp slt i32 %call11, 0
  br i1 %cmp, label %if.then.12, label %if.end.17

if.then.12:                                       ; preds = %if.then.10
  br label %do.body

do.body:                                          ; preds = %if.then.12
  %7 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0
  %9 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %9, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp14 = icmp ne i64 %dec, 0
  br i1 %cmp14, label %if.then.15, label %if.else

if.then.15:                                       ; preds = %do.body
  br label %if.end.16

if.else:                                          ; preds = %do.body
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %12(%struct._object* %13)
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.15
  br label %do.end

do.end:                                           ; preds = %if.end.16
  store i32 -1, i32* %retval
  br label %return

if.end.17:                                        ; preds = %if.then.10
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.end.8
  br label %if.end.27

if.else.19:                                       ; preds = %if.end
  %14 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %tobool20 = icmp ne %struct._object* %14, null
  br i1 %tobool20, label %if.then.21, label %if.end.26

if.then.21:                                       ; preds = %if.else.19
  %15 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call22 = call %struct._object* @get_attrib_from_keywords(%struct._object* %15)
  store %struct._object* %call22, %struct._object** %attrib, align 8
  %16 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool23 = icmp ne %struct._object* %16, null
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.then.21
  store i32 -1, i32* %retval
  br label %return

if.end.25:                                        ; preds = %if.then.21
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.else.19
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.end.18
  %17 = load %struct._object*, %struct._object** %self.addr, align 8
  %18 = bitcast %struct._object* %17 to %struct.ElementObject*
  store %struct.ElementObject* %18, %struct.ElementObject** %self_elem, align 8
  %19 = load %struct._object*, %struct._object** %attrib, align 8
  %cmp28 = icmp ne %struct._object* %19, null
  br i1 %cmp28, label %land.lhs.true, label %if.end.48

land.lhs.true:                                    ; preds = %if.end.27
  %20 = load %struct._object*, %struct._object** %attrib, align 8
  %call29 = call i32 @is_empty_dict(%struct._object* %20)
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.end.48, label %if.then.31

if.then.31:                                       ; preds = %land.lhs.true
  %21 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8
  %22 = load %struct._object*, %struct._object** %attrib, align 8
  %call32 = call i32 @create_extra(%struct.ElementObject* %21, %struct._object* %22)
  %cmp33 = icmp slt i32 %call32, 0
  br i1 %cmp33, label %if.then.34, label %if.end.47

if.then.34:                                       ; preds = %if.then.31
  br label %do.body.35

do.body.35:                                       ; preds = %if.then.34
  %23 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %23, %struct._object** %_py_decref_tmp37, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0
  %25 = load i64, i64* %ob_refcnt38, align 8
  %dec39 = add i64 %25, -1
  store i64 %dec39, i64* %ob_refcnt38, align 8
  %cmp40 = icmp ne i64 %dec39, 0
  br i1 %cmp40, label %if.then.41, label %if.else.42

if.then.41:                                       ; preds = %do.body.35
  br label %if.end.45

if.else.42:                                       ; preds = %do.body.35
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8
  call void %28(%struct._object* %29)
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  br label %do.end.46

do.end.46:                                        ; preds = %if.end.45
  store i32 -1, i32* %retval
  br label %return

if.end.47:                                        ; preds = %if.then.31
  br label %if.end.48

if.end.48:                                        ; preds = %if.end.47, %land.lhs.true, %if.end.27
  br label %do.body.49

do.body.49:                                       ; preds = %if.end.48
  %30 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %30, %struct._object** %_py_xdecref_tmp, align 8
  %31 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp51 = icmp ne %struct._object* %31, null
  br i1 %cmp51, label %if.then.52, label %if.end.65

if.then.52:                                       ; preds = %do.body.49
  br label %do.body.53

do.body.53:                                       ; preds = %if.then.52
  %32 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %32, %struct._object** %_py_decref_tmp55, align 8
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0
  %34 = load i64, i64* %ob_refcnt56, align 8
  %dec57 = add i64 %34, -1
  store i64 %dec57, i64* %ob_refcnt56, align 8
  %cmp58 = icmp ne i64 %dec57, 0
  br i1 %cmp58, label %if.then.59, label %if.else.60

if.then.59:                                       ; preds = %do.body.53
  br label %if.end.63

if.else.60:                                       ; preds = %do.body.53
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 4
  %37 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8
  call void %37(%struct._object* %38)
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.59
  br label %do.end.64

do.end.64:                                        ; preds = %if.end.63
  br label %if.end.65

if.end.65:                                        ; preds = %do.end.64, %do.body.49
  br label %do.end.66

do.end.66:                                        ; preds = %if.end.65
  %39 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8
  %tag67 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %39, i32 0, i32 1
  %40 = load %struct._object*, %struct._object** %tag67, align 8
  store %struct._object* %40, %struct._object** %tmp, align 8
  %41 = load %struct._object*, %struct._object** %tag, align 8
  %ob_refcnt68 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0
  %42 = load i64, i64* %ob_refcnt68, align 8
  %inc = add i64 %42, 1
  store i64 %inc, i64* %ob_refcnt68, align 8
  %43 = load %struct._object*, %struct._object** %tag, align 8
  %44 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8
  %tag69 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %44, i32 0, i32 1
  store %struct._object* %43, %struct._object** %tag69, align 8
  br label %do.body.70

do.body.70:                                       ; preds = %do.end.66
  %45 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %45, %struct._object** %_py_decref_tmp72, align 8
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0
  %47 = load i64, i64* %ob_refcnt73, align 8
  %dec74 = add i64 %47, -1
  store i64 %dec74, i64* %ob_refcnt73, align 8
  %cmp75 = icmp ne i64 %dec74, 0
  br i1 %cmp75, label %if.then.76, label %if.else.77

if.then.76:                                       ; preds = %do.body.70
  br label %if.end.80

if.else.77:                                       ; preds = %do.body.70
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8
  call void %50(%struct._object* %51)
  br label %if.end.80

if.end.80:                                        ; preds = %if.else.77, %if.then.76
  br label %do.end.81

do.end.81:                                        ; preds = %if.end.80
  %52 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %52, i32 0, i32 2
  %53 = load %struct._object*, %struct._object** %text, align 8
  store %struct._object* %53, %struct._object** %tmp, align 8
  %54 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc82 = add i64 %54, 1
  store i64 %inc82, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %55 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8
  %text83 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %55, i32 0, i32 2
  store %struct._object* @_Py_NoneStruct, %struct._object** %text83, align 8
  br label %do.body.84

do.body.84:                                       ; preds = %do.end.81
  %56 = load %struct._object*, %struct._object** %tmp, align 8
  %57 = ptrtoint %struct._object* %56 to i64
  %and = and i64 %57, -2
  %58 = inttoptr i64 %and to %struct._object*
  store %struct._object* %58, %struct._object** %_py_decref_tmp86, align 8
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8
  %ob_refcnt87 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 0
  %60 = load i64, i64* %ob_refcnt87, align 8
  %dec88 = add i64 %60, -1
  store i64 %dec88, i64* %ob_refcnt87, align 8
  %cmp89 = icmp ne i64 %dec88, 0
  br i1 %cmp89, label %if.then.90, label %if.else.91

if.then.90:                                       ; preds = %do.body.84
  br label %if.end.94

if.else.91:                                       ; preds = %do.body.84
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8
  %ob_type92 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 1
  %62 = load %struct._typeobject*, %struct._typeobject** %ob_type92, align 8
  %tp_dealloc93 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %62, i32 0, i32 4
  %63 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc93, align 8
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8
  call void %63(%struct._object* %64)
  br label %if.end.94

if.end.94:                                        ; preds = %if.else.91, %if.then.90
  br label %do.end.95

do.end.95:                                        ; preds = %if.end.94
  %65 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %65, i32 0, i32 3
  %66 = load %struct._object*, %struct._object** %tail, align 8
  store %struct._object* %66, %struct._object** %tmp, align 8
  %67 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc96 = add i64 %67, 1
  store i64 %inc96, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %68 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8
  %tail97 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %68, i32 0, i32 3
  store %struct._object* @_Py_NoneStruct, %struct._object** %tail97, align 8
  br label %do.body.98

do.body.98:                                       ; preds = %do.end.95
  %69 = load %struct._object*, %struct._object** %tmp, align 8
  %70 = ptrtoint %struct._object* %69 to i64
  %and101 = and i64 %70, -2
  %71 = inttoptr i64 %and101 to %struct._object*
  store %struct._object* %71, %struct._object** %_py_decref_tmp100, align 8
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8
  %ob_refcnt102 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 0
  %73 = load i64, i64* %ob_refcnt102, align 8
  %dec103 = add i64 %73, -1
  store i64 %dec103, i64* %ob_refcnt102, align 8
  %cmp104 = icmp ne i64 %dec103, 0
  br i1 %cmp104, label %if.then.105, label %if.else.106

if.then.105:                                      ; preds = %do.body.98
  br label %if.end.109

if.else.106:                                      ; preds = %do.body.98
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8
  %ob_type107 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type107, align 8
  %tp_dealloc108 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 4
  %76 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc108, align 8
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8
  call void %76(%struct._object* %77)
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.106, %if.then.105
  br label %do.end.110

do.end.110:                                       ; preds = %if.end.109
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end.110, %do.end.46, %if.then.24, %do.end, %if.then.7, %if.then
  %78 = load i32, i32* %retval
  ret i32 %78
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %e = alloca %struct.ElementObject*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  %0 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %0, i32 0, i32 36
  %1 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8
  %2 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %call = call %struct._object* %1(%struct._typeobject* %2, i64 0)
  %3 = bitcast %struct._object* %call to %struct.ElementObject*
  store %struct.ElementObject* %3, %struct.ElementObject** %e, align 8
  %4 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8
  %cmp = icmp ne %struct.ElementObject* %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %5, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %6 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %6, i32 0, i32 1
  store %struct._object* @_Py_NoneStruct, %struct._object** %tag, align 8
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc1 = add i64 %7, 1
  store i64 %inc1, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %8 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %8, i32 0, i32 2
  store %struct._object* @_Py_NoneStruct, %struct._object** %text, align 8
  %9 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc2 = add i64 %9, 1
  store i64 %inc2, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %10 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 3
  store %struct._object* @_Py_NoneStruct, %struct._object** %tail, align 8
  %11 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 4
  store %struct.ElementObjectExtra* null, %struct.ElementObjectExtra** %extra, align 8
  %12 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8
  %weakreflist = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %12, i32 0, i32 5
  store %struct._object* null, %struct._object** %weakreflist, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8
  %14 = bitcast %struct.ElementObject* %13 to %struct._object*
  ret %struct._object* %14
}

declare void @PyObject_ClearWeakRefs(%struct._object*) #1

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal i64 @element_length(%struct.ElementObject* %self) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 4
  %1 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool = icmp ne %struct.ElementObjectExtra* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4
  %3 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %3, i32 0, i32 1
  %4 = load i32, i32* %length, align 4
  %conv = sext i32 %4 to i64
  store i64 %conv, i64* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %5 = load i64, i64* %retval
  ret i64 %5
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_getitem(%struct._object* %self_, i64 %index) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self_.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %self = alloca %struct.ElementObject*, align 8
  store %struct._object* %self_, %struct._object** %self_.addr, align 8
  store i64 %index, i64* %index.addr, align 8
  %0 = load %struct._object*, %struct._object** %self_.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct.ElementObject*
  store %struct.ElementObject* %1, %struct.ElementObject** %self, align 8
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4
  %3 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool = icmp ne %struct.ElementObjectExtra* %3, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %4 = load i64, i64* %index.addr, align 8
  %cmp = icmp slt i64 %4, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false.1

lor.lhs.false.1:                                  ; preds = %lor.lhs.false
  %5 = load i64, i64* %index.addr, align 8
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %6, i32 0, i32 4
  %7 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %7, i32 0, i32 1
  %8 = load i32, i32* %length, align 4
  %conv = sext i32 %8 to i64
  %cmp3 = icmp sge i64 %5, %conv
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.1, %lor.lhs.false, %entry
  %9 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.39, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.1
  %10 = load i64, i64* %index.addr, align 8
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 4
  %12 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %12, i32 0, i32 3
  %13 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %13, i64 %10
  %14 = load %struct._object*, %struct._object** %arrayidx, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0
  %15 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %15, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %16 = load i64, i64* %index.addr, align 8
  %17 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra6 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %17, i32 0, i32 4
  %18 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra6, align 8
  %children7 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %18, i32 0, i32 3
  %19 = load %struct._object**, %struct._object*** %children7, align 8
  %arrayidx8 = getelementptr %struct._object*, %struct._object** %19, i64 %16
  %20 = load %struct._object*, %struct._object** %arrayidx8, align 8
  store %struct._object* %20, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %21 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %21
}

; Function Attrs: nounwind uwtable
define internal i32 @element_setitem(%struct._object* %self_, i64 %index, %struct._object* %item) #0 {
entry:
  %retval = alloca i32, align 4
  %self_.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %item.addr = alloca %struct._object*, align 8
  %self = alloca %struct.ElementObject*, align 8
  %i = alloca i32, align 4
  %old = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self_, %struct._object** %self_.addr, align 8
  store i64 %index, i64* %index.addr, align 8
  store %struct._object* %item, %struct._object** %item.addr, align 8
  %0 = load %struct._object*, %struct._object** %self_.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct.ElementObject*
  store %struct.ElementObject* %1, %struct.ElementObject** %self, align 8
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4
  %3 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool = icmp ne %struct.ElementObjectExtra* %3, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %4 = load i64, i64* %index.addr, align 8
  %cmp = icmp slt i64 %4, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false.1

lor.lhs.false.1:                                  ; preds = %lor.lhs.false
  %5 = load i64, i64* %index.addr, align 8
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %6, i32 0, i32 4
  %7 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %7, i32 0, i32 1
  %8 = load i32, i32* %length, align 4
  %conv = sext i32 %8 to i64
  %cmp3 = icmp sge i64 %5, %conv
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.1, %lor.lhs.false, %entry
  %9 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.40, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.1
  %10 = load i64, i64* %index.addr, align 8
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 4
  %12 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %12, i32 0, i32 3
  %13 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %13, i64 %10
  %14 = load %struct._object*, %struct._object** %arrayidx, align 8
  store %struct._object* %14, %struct._object** %old, align 8
  %15 = load %struct._object*, %struct._object** %item.addr, align 8
  %tobool6 = icmp ne %struct._object* %15, null
  br i1 %tobool6, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %if.end
  %16 = load %struct._object*, %struct._object** %item.addr, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0
  %17 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %17, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %18 = load %struct._object*, %struct._object** %item.addr, align 8
  %19 = load i64, i64* %index.addr, align 8
  %20 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra8 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %20, i32 0, i32 4
  %21 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra8, align 8
  %children9 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %21, i32 0, i32 3
  %22 = load %struct._object**, %struct._object*** %children9, align 8
  %arrayidx10 = getelementptr %struct._object*, %struct._object** %22, i64 %19
  store %struct._object* %18, %struct._object** %arrayidx10, align 8
  br label %if.end.26

if.else:                                          ; preds = %if.end
  %23 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %23, i32 0, i32 4
  %24 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra11, align 8
  %length12 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %24, i32 0, i32 1
  %25 = load i32, i32* %length12, align 4
  %dec = add i32 %25, -1
  store i32 %dec, i32* %length12, align 4
  %26 = load i64, i64* %index.addr, align 8
  %conv13 = trunc i64 %26 to i32
  store i32 %conv13, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %27 = load i32, i32* %i, align 4
  %28 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra14 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %28, i32 0, i32 4
  %29 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra14, align 8
  %length15 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %29, i32 0, i32 1
  %30 = load i32, i32* %length15, align 4
  %cmp16 = icmp slt i32 %27, %30
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %31 = load i32, i32* %i, align 4
  %add = add i32 %31, 1
  %idxprom = sext i32 %add to i64
  %32 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra18 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %32, i32 0, i32 4
  %33 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra18, align 8
  %children19 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %33, i32 0, i32 3
  %34 = load %struct._object**, %struct._object*** %children19, align 8
  %arrayidx20 = getelementptr %struct._object*, %struct._object** %34, i64 %idxprom
  %35 = load %struct._object*, %struct._object** %arrayidx20, align 8
  %36 = load i32, i32* %i, align 4
  %idxprom21 = sext i32 %36 to i64
  %37 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra22 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %37, i32 0, i32 4
  %38 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra22, align 8
  %children23 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %38, i32 0, i32 3
  %39 = load %struct._object**, %struct._object*** %children23, align 8
  %arrayidx24 = getelementptr %struct._object*, %struct._object** %39, i64 %idxprom21
  store %struct._object* %35, %struct._object** %arrayidx24, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %i, align 4
  %inc25 = add i32 %40, 1
  store i32 %inc25, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.26

if.end.26:                                        ; preds = %for.end, %if.then.7
  br label %do.body

do.body:                                          ; preds = %if.end.26
  %41 = load %struct._object*, %struct._object** %old, align 8
  store %struct._object* %41, %struct._object** %_py_decref_tmp, align 8
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0
  %43 = load i64, i64* %ob_refcnt27, align 8
  %dec28 = add i64 %43, -1
  store i64 %dec28, i64* %ob_refcnt27, align 8
  %cmp29 = icmp ne i64 %dec28, 0
  br i1 %cmp29, label %if.then.31, label %if.else.32

if.then.31:                                       ; preds = %do.body
  br label %if.end.33

if.else.32:                                       ; preds = %do.body
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %46(%struct._object* %47)
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.32, %if.then.31
  br label %do.end

do.end:                                           ; preds = %if.end.33
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end, %if.then
  %48 = load i32, i32* %retval
  ret i32 %48
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_subscr(%struct._object* %self_, %struct._object* %item) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self_.addr = alloca %struct._object*, align 8
  %item.addr = alloca %struct._object*, align 8
  %self = alloca %struct.ElementObject*, align 8
  %i = alloca i64, align 8
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %step = alloca i64, align 8
  %slicelen = alloca i64, align 8
  %cur = alloca i64, align 8
  %i19 = alloca i64, align 8
  %list = alloca %struct._object*, align 8
  %item44 = alloca %struct._object*, align 8
  store %struct._object* %self_, %struct._object** %self_.addr, align 8
  store %struct._object* %item, %struct._object** %item.addr, align 8
  %0 = load %struct._object*, %struct._object** %self_.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct.ElementObject*
  store %struct.ElementObject* %1, %struct.ElementObject** %self, align 8
  %2 = load %struct._object*, %struct._object** %item.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_as_number = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 10
  %4 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number, align 8
  %cmp = icmp ne %struct.PyNumberMethods* %4, null
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct._object*, %struct._object** %item.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_as_number2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 10
  %7 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number2, align 8
  %nb_index = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %7, i32 0, i32 33
  %8 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_index, align 8
  %cmp3 = icmp ne %struct._object* (%struct._object*)* %8, null
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct._object*, %struct._object** %item.addr, align 8
  %10 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8
  %call = call i64 @PyNumber_AsSsize_t(%struct._object* %9, %struct._object* %10)
  store i64 %call, i64* %i, align 8
  %11 = load i64, i64* %i, align 8
  %cmp4 = icmp eq i64 %11, -1
  br i1 %cmp4, label %land.lhs.true.5, label %if.end

land.lhs.true.5:                                  ; preds = %if.then
  %call6 = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call6, null
  br i1 %tobool, label %if.then.7, label %if.end

if.then.7:                                        ; preds = %land.lhs.true.5
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.5, %if.then
  %12 = load i64, i64* %i, align 8
  %cmp8 = icmp slt i64 %12, 0
  br i1 %cmp8, label %land.lhs.true.9, label %if.end.13

land.lhs.true.9:                                  ; preds = %if.end
  %13 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %13, i32 0, i32 4
  %14 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool10 = icmp ne %struct.ElementObjectExtra* %14, null
  br i1 %tobool10, label %if.then.11, label %if.end.13

if.then.11:                                       ; preds = %land.lhs.true.9
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra12 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 4
  %16 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra12, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %16, i32 0, i32 1
  %17 = load i32, i32* %length, align 4
  %conv = sext i32 %17 to i64
  %18 = load i64, i64* %i, align 8
  %add = add i64 %18, %conv
  store i64 %add, i64* %i, align 8
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.11, %land.lhs.true.9, %if.end
  %19 = load %struct._object*, %struct._object** %self_.addr, align 8
  %20 = load i64, i64* %i, align 8
  %call14 = call %struct._object* @element_getitem(%struct._object* %19, i64 %20)
  store %struct._object* %call14, %struct._object** %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true, %entry
  %21 = load %struct._object*, %struct._object** %item.addr, align 8
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8
  %cmp16 = icmp eq %struct._typeobject* %22, @PySlice_Type
  br i1 %cmp16, label %if.then.18, label %if.else.49

if.then.18:                                       ; preds = %if.else
  %23 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra20 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %23, i32 0, i32 4
  %24 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra20, align 8
  %tobool21 = icmp ne %struct.ElementObjectExtra* %24, null
  br i1 %tobool21, label %if.end.24, label %if.then.22

if.then.22:                                       ; preds = %if.then.18
  %call23 = call %struct._object* @PyList_New(i64 0)
  store %struct._object* %call23, %struct._object** %retval
  br label %return

if.end.24:                                        ; preds = %if.then.18
  %25 = load %struct._object*, %struct._object** %item.addr, align 8
  %26 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra25 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %26, i32 0, i32 4
  %27 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra25, align 8
  %length26 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %27, i32 0, i32 1
  %28 = load i32, i32* %length26, align 4
  %conv27 = sext i32 %28 to i64
  %call28 = call i32 @PySlice_GetIndicesEx(%struct._object* %25, i64 %conv27, i64* %start, i64* %stop, i64* %step, i64* %slicelen)
  %cmp29 = icmp slt i32 %call28, 0
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.24
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.32:                                        ; preds = %if.end.24
  %29 = load i64, i64* %slicelen, align 8
  %cmp33 = icmp sle i64 %29, 0
  br i1 %cmp33, label %if.then.35, label %if.else.37

if.then.35:                                       ; preds = %if.end.32
  %call36 = call %struct._object* @PyList_New(i64 0)
  store %struct._object* %call36, %struct._object** %retval
  br label %return

if.else.37:                                       ; preds = %if.end.32
  %30 = load i64, i64* %slicelen, align 8
  %call38 = call %struct._object* @PyList_New(i64 %30)
  store %struct._object* %call38, %struct._object** %list, align 8
  %31 = load %struct._object*, %struct._object** %list, align 8
  %tobool39 = icmp ne %struct._object* %31, null
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.else.37
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.41:                                        ; preds = %if.else.37
  %32 = load i64, i64* %start, align 8
  store i64 %32, i64* %cur, align 8
  store i64 0, i64* %i19, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.41
  %33 = load i64, i64* %i19, align 8
  %34 = load i64, i64* %slicelen, align 8
  %cmp42 = icmp slt i64 %33, %34
  br i1 %cmp42, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %35 = load i64, i64* %cur, align 8
  %36 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra45 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %36, i32 0, i32 4
  %37 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra45, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %37, i32 0, i32 3
  %38 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %38, i64 %35
  %39 = load %struct._object*, %struct._object** %arrayidx, align 8
  store %struct._object* %39, %struct._object** %item44, align 8
  %40 = load %struct._object*, %struct._object** %item44, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0
  %41 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %41, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %42 = load %struct._object*, %struct._object** %item44, align 8
  %43 = load i64, i64* %i19, align 8
  %44 = load %struct._object*, %struct._object** %list, align 8
  %45 = bitcast %struct._object* %44 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %45, i32 0, i32 1
  %46 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx46 = getelementptr %struct._object*, %struct._object** %46, i64 %43
  store %struct._object* %42, %struct._object** %arrayidx46, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %47 = load i64, i64* %step, align 8
  %48 = load i64, i64* %cur, align 8
  %add47 = add i64 %48, %47
  store i64 %add47, i64* %cur, align 8
  %49 = load i64, i64* %i19, align 8
  %inc48 = add i64 %49, 1
  store i64 %inc48, i64* %i19, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %50 = load %struct._object*, %struct._object** %list, align 8
  store %struct._object* %50, %struct._object** %retval
  br label %return

if.else.49:                                       ; preds = %if.else
  %51 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %51, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.else.49, %for.end, %if.then.40, %if.then.35, %if.then.31, %if.then.22, %if.end.13, %if.then.7
  %52 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %52
}

; Function Attrs: nounwind uwtable
define internal i32 @element_ass_subscr(%struct._object* %self_, %struct._object* %item, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %self_.addr = alloca %struct._object*, align 8
  %item.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %self = alloca %struct.ElementObject*, align 8
  %i = alloca i64, align 8
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %step = alloca i64, align 8
  %slicelen = alloca i64, align 8
  %newlen = alloca i64, align 8
  %cur = alloca i64, align 8
  %i19 = alloca i64, align 8
  %recycle = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  %cur40 = alloca i64, align 8
  %i41 = alloca i64, align 8
  %num_moved = alloca i64, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp154 = alloca %struct._object*, align 8
  %_py_decref_tmp177 = alloca %struct._object*, align 8
  %element = alloca %struct._object*, align 8
  %_py_decref_tmp279 = alloca %struct._object*, align 8
  %_py_xdecref_tmp292 = alloca %struct._object*, align 8
  %_py_decref_tmp297 = alloca %struct._object*, align 8
  store %struct._object* %self_, %struct._object** %self_.addr, align 8
  store %struct._object* %item, %struct._object** %item.addr, align 8
  store %struct._object* %value, %struct._object** %value.addr, align 8
  %0 = load %struct._object*, %struct._object** %self_.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct.ElementObject*
  store %struct.ElementObject* %1, %struct.ElementObject** %self, align 8
  %2 = load %struct._object*, %struct._object** %item.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_as_number = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 10
  %4 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number, align 8
  %cmp = icmp ne %struct.PyNumberMethods* %4, null
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct._object*, %struct._object** %item.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_as_number2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 10
  %7 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number2, align 8
  %nb_index = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %7, i32 0, i32 33
  %8 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_index, align 8
  %cmp3 = icmp ne %struct._object* (%struct._object*)* %8, null
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct._object*, %struct._object** %item.addr, align 8
  %10 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8
  %call = call i64 @PyNumber_AsSsize_t(%struct._object* %9, %struct._object* %10)
  store i64 %call, i64* %i, align 8
  %11 = load i64, i64* %i, align 8
  %cmp4 = icmp eq i64 %11, -1
  br i1 %cmp4, label %land.lhs.true.5, label %if.end

land.lhs.true.5:                                  ; preds = %if.then
  %call6 = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call6, null
  br i1 %tobool, label %if.then.7, label %if.end

if.then.7:                                        ; preds = %land.lhs.true.5
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true.5, %if.then
  %12 = load i64, i64* %i, align 8
  %cmp8 = icmp slt i64 %12, 0
  br i1 %cmp8, label %land.lhs.true.9, label %if.end.13

land.lhs.true.9:                                  ; preds = %if.end
  %13 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %13, i32 0, i32 4
  %14 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool10 = icmp ne %struct.ElementObjectExtra* %14, null
  br i1 %tobool10, label %if.then.11, label %if.end.13

if.then.11:                                       ; preds = %land.lhs.true.9
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra12 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 4
  %16 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra12, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %16, i32 0, i32 1
  %17 = load i32, i32* %length, align 4
  %conv = sext i32 %17 to i64
  %18 = load i64, i64* %i, align 8
  %add = add i64 %18, %conv
  store i64 %add, i64* %i, align 8
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.11, %land.lhs.true.9, %if.end
  %19 = load %struct._object*, %struct._object** %self_.addr, align 8
  %20 = load i64, i64* %i, align 8
  %21 = load %struct._object*, %struct._object** %value.addr, align 8
  %call14 = call i32 @element_setitem(%struct._object* %19, i64 %20, %struct._object* %21)
  store i32 %call14, i32* %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true, %entry
  %22 = load %struct._object*, %struct._object** %item.addr, align 8
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8
  %cmp16 = icmp eq %struct._typeobject* %23, @PySlice_Type
  br i1 %cmp16, label %if.then.18, label %if.else.310

if.then.18:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %recycle, align 8
  store %struct._object* null, %struct._object** %seq, align 8
  %24 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra20 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %24, i32 0, i32 4
  %25 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra20, align 8
  %tobool21 = icmp ne %struct.ElementObjectExtra* %25, null
  br i1 %tobool21, label %if.end.28, label %if.then.22

if.then.22:                                       ; preds = %if.then.18
  %26 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %call23 = call i32 @create_extra(%struct.ElementObject* %26, %struct._object* null)
  %cmp24 = icmp slt i32 %call23, 0
  br i1 %cmp24, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.then.22
  store i32 -1, i32* %retval
  br label %return

if.end.27:                                        ; preds = %if.then.22
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then.18
  %27 = load %struct._object*, %struct._object** %item.addr, align 8
  %28 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra29 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %28, i32 0, i32 4
  %29 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra29, align 8
  %length30 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %29, i32 0, i32 1
  %30 = load i32, i32* %length30, align 4
  %conv31 = sext i32 %30 to i64
  %call32 = call i32 @PySlice_GetIndicesEx(%struct._object* %27, i64 %conv31, i64* %start, i64* %stop, i64* %step, i64* %slicelen)
  %cmp33 = icmp slt i32 %call32, 0
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %if.end.28
  store i32 -1, i32* %retval
  br label %return

if.end.36:                                        ; preds = %if.end.28
  %31 = load %struct._object*, %struct._object** %value.addr, align 8
  %cmp37 = icmp eq %struct._object* %31, null
  br i1 %cmp37, label %if.then.39, label %if.else.125

if.then.39:                                       ; preds = %if.end.36
  %32 = load i64, i64* %slicelen, align 8
  %cmp42 = icmp sle i64 %32, 0
  br i1 %cmp42, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %if.then.39
  store i32 0, i32* %retval
  br label %return

if.end.45:                                        ; preds = %if.then.39
  %33 = load i64, i64* %step, align 8
  %cmp46 = icmp slt i64 %33, 0
  br i1 %cmp46, label %if.then.48, label %if.end.53

if.then.48:                                       ; preds = %if.end.45
  %34 = load i64, i64* %start, align 8
  %add49 = add i64 %34, 1
  store i64 %add49, i64* %stop, align 8
  %35 = load i64, i64* %stop, align 8
  %36 = load i64, i64* %step, align 8
  %37 = load i64, i64* %slicelen, align 8
  %sub = sub i64 %37, 1
  %mul = mul i64 %36, %sub
  %add50 = add i64 %35, %mul
  %sub51 = sub i64 %add50, 1
  store i64 %sub51, i64* %start, align 8
  %38 = load i64, i64* %step, align 8
  %sub52 = sub i64 0, %38
  store i64 %sub52, i64* %step, align 8
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.48, %if.end.45
  %39 = load i64, i64* %slicelen, align 8
  %call54 = call %struct._object* @PyList_New(i64 %39)
  store %struct._object* %call54, %struct._object** %recycle, align 8
  %tobool55 = icmp ne %struct._object* %call54, null
  br i1 %tobool55, label %if.end.58, label %if.then.56

if.then.56:                                       ; preds = %if.end.53
  %call57 = call %struct._object* @PyErr_NoMemory()
  store i32 -1, i32* %retval
  br label %return

if.end.58:                                        ; preds = %if.end.53
  %40 = load i64, i64* %start, align 8
  store i64 %40, i64* %cur40, align 8
  store i64 0, i64* %i41, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.58
  %41 = load i64, i64* %cur40, align 8
  %42 = load i64, i64* %stop, align 8
  %cmp59 = icmp ult i64 %41, %42
  br i1 %cmp59, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %43 = load i64, i64* %step, align 8
  %sub61 = sub i64 %43, 1
  store i64 %sub61, i64* %num_moved, align 8
  %44 = load i64, i64* %cur40, align 8
  %45 = load i64, i64* %step, align 8
  %add62 = add i64 %44, %45
  %46 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra63 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %46, i32 0, i32 4
  %47 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra63, align 8
  %length64 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %47, i32 0, i32 1
  %48 = load i32, i32* %length64, align 4
  %conv65 = sext i32 %48 to i64
  %cmp66 = icmp uge i64 %add62, %conv65
  br i1 %cmp66, label %if.then.68, label %if.end.74

if.then.68:                                       ; preds = %for.body
  %49 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra69 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %49, i32 0, i32 4
  %50 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra69, align 8
  %length70 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %50, i32 0, i32 1
  %51 = load i32, i32* %length70, align 4
  %conv71 = sext i32 %51 to i64
  %52 = load i64, i64* %cur40, align 8
  %sub72 = sub i64 %conv71, %52
  %sub73 = sub i64 %sub72, 1
  store i64 %sub73, i64* %num_moved, align 8
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.68, %for.body
  %53 = load i64, i64* %cur40, align 8
  %54 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra75 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %54, i32 0, i32 4
  %55 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra75, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %55, i32 0, i32 3
  %56 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %56, i64 %53
  %57 = load %struct._object*, %struct._object** %arrayidx, align 8
  %58 = load i64, i64* %i41, align 8
  %59 = load %struct._object*, %struct._object** %recycle, align 8
  %60 = bitcast %struct._object* %59 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %60, i32 0, i32 1
  %61 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx76 = getelementptr %struct._object*, %struct._object** %61, i64 %58
  store %struct._object* %57, %struct._object** %arrayidx76, align 8
  %62 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra77 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %62, i32 0, i32 4
  %63 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra77, align 8
  %children78 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %63, i32 0, i32 3
  %64 = load %struct._object**, %struct._object*** %children78, align 8
  %65 = load i64, i64* %cur40, align 8
  %add.ptr = getelementptr %struct._object*, %struct._object** %64, i64 %65
  %66 = load i64, i64* %i41, align 8
  %idx.neg = sub i64 0, %66
  %add.ptr79 = getelementptr %struct._object*, %struct._object** %add.ptr, i64 %idx.neg
  %67 = bitcast %struct._object** %add.ptr79 to i8*
  %68 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra80 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %68, i32 0, i32 4
  %69 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra80, align 8
  %children81 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %69, i32 0, i32 3
  %70 = load %struct._object**, %struct._object*** %children81, align 8
  %71 = load i64, i64* %cur40, align 8
  %add.ptr82 = getelementptr %struct._object*, %struct._object** %70, i64 %71
  %add.ptr83 = getelementptr %struct._object*, %struct._object** %add.ptr82, i64 1
  %72 = bitcast %struct._object** %add.ptr83 to i8*
  %73 = load i64, i64* %num_moved, align 8
  %mul84 = mul i64 %73, 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %67, i8* %72, i64 %mul84, i32 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %if.end.74
  %74 = load i64, i64* %step, align 8
  %75 = load i64, i64* %cur40, align 8
  %add85 = add i64 %75, %74
  store i64 %add85, i64* %cur40, align 8
  %76 = load i64, i64* %i41, align 8
  %inc = add i64 %76, 1
  store i64 %inc, i64* %i41, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %77 = load i64, i64* %start, align 8
  %78 = load i64, i64* %slicelen, align 8
  %79 = load i64, i64* %step, align 8
  %mul86 = mul i64 %78, %79
  %add87 = add i64 %77, %mul86
  store i64 %add87, i64* %cur40, align 8
  %80 = load i64, i64* %cur40, align 8
  %81 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra88 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %81, i32 0, i32 4
  %82 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra88, align 8
  %length89 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %82, i32 0, i32 1
  %83 = load i32, i32* %length89, align 4
  %conv90 = sext i32 %83 to i64
  %cmp91 = icmp ult i64 %80, %conv90
  br i1 %cmp91, label %if.then.93, label %if.end.107

if.then.93:                                       ; preds = %for.end
  %84 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra94 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %84, i32 0, i32 4
  %85 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra94, align 8
  %children95 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %85, i32 0, i32 3
  %86 = load %struct._object**, %struct._object*** %children95, align 8
  %87 = load i64, i64* %cur40, align 8
  %add.ptr96 = getelementptr %struct._object*, %struct._object** %86, i64 %87
  %88 = load i64, i64* %slicelen, align 8
  %idx.neg97 = sub i64 0, %88
  %add.ptr98 = getelementptr %struct._object*, %struct._object** %add.ptr96, i64 %idx.neg97
  %89 = bitcast %struct._object** %add.ptr98 to i8*
  %90 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra99 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %90, i32 0, i32 4
  %91 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra99, align 8
  %children100 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %91, i32 0, i32 3
  %92 = load %struct._object**, %struct._object*** %children100, align 8
  %93 = load i64, i64* %cur40, align 8
  %add.ptr101 = getelementptr %struct._object*, %struct._object** %92, i64 %93
  %94 = bitcast %struct._object** %add.ptr101 to i8*
  %95 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra102 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %95, i32 0, i32 4
  %96 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra102, align 8
  %length103 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %96, i32 0, i32 1
  %97 = load i32, i32* %length103, align 4
  %conv104 = sext i32 %97 to i64
  %98 = load i64, i64* %cur40, align 8
  %sub105 = sub i64 %conv104, %98
  %mul106 = mul i64 %sub105, 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %89, i8* %94, i64 %mul106, i32 8, i1 false)
  br label %if.end.107

if.end.107:                                       ; preds = %if.then.93, %for.end
  %99 = load i64, i64* %slicelen, align 8
  %100 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra108 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %100, i32 0, i32 4
  %101 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra108, align 8
  %length109 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %101, i32 0, i32 1
  %102 = load i32, i32* %length109, align 4
  %conv110 = sext i32 %102 to i64
  %sub111 = sub i64 %conv110, %99
  %conv112 = trunc i64 %sub111 to i32
  store i32 %conv112, i32* %length109, align 4
  br label %do.body

do.body:                                          ; preds = %if.end.107
  %103 = load %struct._object*, %struct._object** %recycle, align 8
  store %struct._object* %103, %struct._object** %_py_xdecref_tmp, align 8
  %104 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp113 = icmp ne %struct._object* %104, null
  br i1 %cmp113, label %if.then.115, label %if.end.123

if.then.115:                                      ; preds = %do.body
  br label %do.body.116

do.body.116:                                      ; preds = %if.then.115
  %105 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %105, %struct._object** %_py_decref_tmp, align 8
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 0
  %107 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %107, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp117 = icmp ne i64 %dec, 0
  br i1 %cmp117, label %if.then.119, label %if.else.120

if.then.119:                                      ; preds = %do.body.116
  br label %if.end.122

if.else.120:                                      ; preds = %do.body.116
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type121 = getelementptr inbounds %struct._object, %struct._object* %108, i32 0, i32 1
  %109 = load %struct._typeobject*, %struct._typeobject** %ob_type121, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %109, i32 0, i32 4
  %110 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %111 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %110(%struct._object* %111)
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.120, %if.then.119
  br label %do.end

do.end:                                           ; preds = %if.end.122
  br label %if.end.123

if.end.123:                                       ; preds = %do.end, %do.body
  br label %do.end.124

do.end.124:                                       ; preds = %if.end.123
  store i32 0, i32* %retval
  br label %return

if.else.125:                                      ; preds = %if.end.36
  %112 = load %struct._object*, %struct._object** %value.addr, align 8
  %call126 = call %struct._object* @PySequence_Fast(%struct._object* %112, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0))
  store %struct._object* %call126, %struct._object** %seq, align 8
  %113 = load %struct._object*, %struct._object** %seq, align 8
  %tobool127 = icmp ne %struct._object* %113, null
  br i1 %tobool127, label %if.end.131, label %if.then.128

if.then.128:                                      ; preds = %if.else.125
  %114 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %115 = load %struct._object*, %struct._object** %value.addr, align 8
  %ob_type129 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 1
  %116 = load %struct._typeobject*, %struct._typeobject** %ob_type129, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %116, i32 0, i32 1
  %117 = load i8*, i8** %tp_name, align 8
  %call130 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %114, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i32 0, i32 0), i8* %117)
  store i32 -1, i32* %retval
  br label %return

if.end.131:                                       ; preds = %if.else.125
  %118 = load %struct._object*, %struct._object** %seq, align 8
  %call132 = call i64 @PySequence_Size(%struct._object* %118)
  store i64 %call132, i64* %newlen, align 8
  br label %if.end.133

if.end.133:                                       ; preds = %if.end.131
  %119 = load i64, i64* %step, align 8
  %cmp134 = icmp ne i64 %119, 1
  br i1 %cmp134, label %land.lhs.true.136, label %if.end.141

land.lhs.true.136:                                ; preds = %if.end.133
  %120 = load i64, i64* %newlen, align 8
  %121 = load i64, i64* %slicelen, align 8
  %cmp137 = icmp ne i64 %120, %121
  br i1 %cmp137, label %if.then.139, label %if.end.141

if.then.139:                                      ; preds = %land.lhs.true.136
  %122 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  %123 = load i64, i64* %newlen, align 8
  %124 = load i64, i64* %slicelen, align 8
  %call140 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %122, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.43, i32 0, i32 0), i64 %123, i64 %124)
  store i32 -1, i32* %retval
  br label %return

if.end.141:                                       ; preds = %land.lhs.true.136, %if.end.133
  %125 = load i64, i64* %newlen, align 8
  %126 = load i64, i64* %slicelen, align 8
  %cmp142 = icmp sgt i64 %125, %126
  br i1 %cmp142, label %if.then.144, label %if.end.167

if.then.144:                                      ; preds = %if.end.141
  %127 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %128 = load i64, i64* %newlen, align 8
  %129 = load i64, i64* %slicelen, align 8
  %sub145 = sub i64 %128, %129
  %conv146 = trunc i64 %sub145 to i32
  %call147 = call i32 @element_resize(%struct.ElementObject* %127, i32 %conv146)
  %cmp148 = icmp slt i32 %call147, 0
  br i1 %cmp148, label %if.then.150, label %if.end.166

if.then.150:                                      ; preds = %if.then.144
  %130 = load %struct._object*, %struct._object** %seq, align 8
  %tobool151 = icmp ne %struct._object* %130, null
  br i1 %tobool151, label %if.then.152, label %if.end.165

if.then.152:                                      ; preds = %if.then.150
  br label %do.body.153

do.body.153:                                      ; preds = %if.then.152
  %131 = load %struct._object*, %struct._object** %seq, align 8
  store %struct._object* %131, %struct._object** %_py_decref_tmp154, align 8
  %132 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8
  %ob_refcnt155 = getelementptr inbounds %struct._object, %struct._object* %132, i32 0, i32 0
  %133 = load i64, i64* %ob_refcnt155, align 8
  %dec156 = add i64 %133, -1
  store i64 %dec156, i64* %ob_refcnt155, align 8
  %cmp157 = icmp ne i64 %dec156, 0
  br i1 %cmp157, label %if.then.159, label %if.else.160

if.then.159:                                      ; preds = %do.body.153
  br label %if.end.163

if.else.160:                                      ; preds = %do.body.153
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8
  %ob_type161 = getelementptr inbounds %struct._object, %struct._object* %134, i32 0, i32 1
  %135 = load %struct._typeobject*, %struct._typeobject** %ob_type161, align 8
  %tp_dealloc162 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %135, i32 0, i32 4
  %136 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc162, align 8
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8
  call void %136(%struct._object* %137)
  br label %if.end.163

if.end.163:                                       ; preds = %if.else.160, %if.then.159
  br label %do.end.164

do.end.164:                                       ; preds = %if.end.163
  br label %if.end.165

if.end.165:                                       ; preds = %do.end.164, %if.then.150
  store i32 -1, i32* %retval
  br label %return

if.end.166:                                       ; preds = %if.then.144
  br label %if.end.167

if.end.167:                                       ; preds = %if.end.166, %if.end.141
  %138 = load i64, i64* %slicelen, align 8
  %cmp168 = icmp sgt i64 %138, 0
  br i1 %cmp168, label %if.then.170, label %if.end.203

if.then.170:                                      ; preds = %if.end.167
  %139 = load i64, i64* %slicelen, align 8
  %call171 = call %struct._object* @PyList_New(i64 %139)
  store %struct._object* %call171, %struct._object** %recycle, align 8
  %140 = load %struct._object*, %struct._object** %recycle, align 8
  %tobool172 = icmp ne %struct._object* %140, null
  br i1 %tobool172, label %if.end.189, label %if.then.173

if.then.173:                                      ; preds = %if.then.170
  %141 = load %struct._object*, %struct._object** %seq, align 8
  %tobool174 = icmp ne %struct._object* %141, null
  br i1 %tobool174, label %if.then.175, label %if.end.188

if.then.175:                                      ; preds = %if.then.173
  br label %do.body.176

do.body.176:                                      ; preds = %if.then.175
  %142 = load %struct._object*, %struct._object** %seq, align 8
  store %struct._object* %142, %struct._object** %_py_decref_tmp177, align 8
  %143 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8
  %ob_refcnt178 = getelementptr inbounds %struct._object, %struct._object* %143, i32 0, i32 0
  %144 = load i64, i64* %ob_refcnt178, align 8
  %dec179 = add i64 %144, -1
  store i64 %dec179, i64* %ob_refcnt178, align 8
  %cmp180 = icmp ne i64 %dec179, 0
  br i1 %cmp180, label %if.then.182, label %if.else.183

if.then.182:                                      ; preds = %do.body.176
  br label %if.end.186

if.else.183:                                      ; preds = %do.body.176
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8
  %ob_type184 = getelementptr inbounds %struct._object, %struct._object* %145, i32 0, i32 1
  %146 = load %struct._typeobject*, %struct._typeobject** %ob_type184, align 8
  %tp_dealloc185 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %146, i32 0, i32 4
  %147 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc185, align 8
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8
  call void %147(%struct._object* %148)
  br label %if.end.186

if.end.186:                                       ; preds = %if.else.183, %if.then.182
  br label %do.end.187

do.end.187:                                       ; preds = %if.end.186
  br label %if.end.188

if.end.188:                                       ; preds = %do.end.187, %if.then.173
  store i32 -1, i32* %retval
  br label %return

if.end.189:                                       ; preds = %if.then.170
  %149 = load i64, i64* %start, align 8
  store i64 %149, i64* %cur, align 8
  store i64 0, i64* %i19, align 8
  br label %for.cond.190

for.cond.190:                                     ; preds = %for.inc.199, %if.end.189
  %150 = load i64, i64* %i19, align 8
  %151 = load i64, i64* %slicelen, align 8
  %cmp191 = icmp slt i64 %150, %151
  br i1 %cmp191, label %for.body.193, label %for.end.202

for.body.193:                                     ; preds = %for.cond.190
  %152 = load i64, i64* %cur, align 8
  %153 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra194 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %153, i32 0, i32 4
  %154 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra194, align 8
  %children195 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %154, i32 0, i32 3
  %155 = load %struct._object**, %struct._object*** %children195, align 8
  %arrayidx196 = getelementptr %struct._object*, %struct._object** %155, i64 %152
  %156 = load %struct._object*, %struct._object** %arrayidx196, align 8
  %157 = load i64, i64* %i19, align 8
  %158 = load %struct._object*, %struct._object** %recycle, align 8
  %159 = bitcast %struct._object* %158 to %struct.PyListObject*
  %ob_item197 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %159, i32 0, i32 1
  %160 = load %struct._object**, %struct._object*** %ob_item197, align 8
  %arrayidx198 = getelementptr %struct._object*, %struct._object** %160, i64 %157
  store %struct._object* %156, %struct._object** %arrayidx198, align 8
  br label %for.inc.199

for.inc.199:                                      ; preds = %for.body.193
  %161 = load i64, i64* %step, align 8
  %162 = load i64, i64* %cur, align 8
  %add200 = add i64 %162, %161
  store i64 %add200, i64* %cur, align 8
  %163 = load i64, i64* %i19, align 8
  %inc201 = add i64 %163, 1
  store i64 %inc201, i64* %i19, align 8
  br label %for.cond.190

for.end.202:                                      ; preds = %for.cond.190
  br label %if.end.203

if.end.203:                                       ; preds = %for.end.202, %if.end.167
  %164 = load i64, i64* %newlen, align 8
  %165 = load i64, i64* %slicelen, align 8
  %cmp204 = icmp slt i64 %164, %165
  br i1 %cmp204, label %if.then.206, label %if.else.225

if.then.206:                                      ; preds = %if.end.203
  %166 = load i64, i64* %stop, align 8
  store i64 %166, i64* %i19, align 8
  br label %for.cond.207

for.cond.207:                                     ; preds = %for.inc.222, %if.then.206
  %167 = load i64, i64* %i19, align 8
  %168 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra208 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %168, i32 0, i32 4
  %169 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra208, align 8
  %length209 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %169, i32 0, i32 1
  %170 = load i32, i32* %length209, align 4
  %conv210 = sext i32 %170 to i64
  %cmp211 = icmp slt i64 %167, %conv210
  br i1 %cmp211, label %for.body.213, label %for.end.224

for.body.213:                                     ; preds = %for.cond.207
  %171 = load i64, i64* %i19, align 8
  %172 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra214 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %172, i32 0, i32 4
  %173 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra214, align 8
  %children215 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %173, i32 0, i32 3
  %174 = load %struct._object**, %struct._object*** %children215, align 8
  %arrayidx216 = getelementptr %struct._object*, %struct._object** %174, i64 %171
  %175 = load %struct._object*, %struct._object** %arrayidx216, align 8
  %176 = load i64, i64* %i19, align 8
  %177 = load i64, i64* %newlen, align 8
  %add217 = add i64 %176, %177
  %178 = load i64, i64* %slicelen, align 8
  %sub218 = sub i64 %add217, %178
  %179 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra219 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %179, i32 0, i32 4
  %180 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra219, align 8
  %children220 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %180, i32 0, i32 3
  %181 = load %struct._object**, %struct._object*** %children220, align 8
  %arrayidx221 = getelementptr %struct._object*, %struct._object** %181, i64 %sub218
  store %struct._object* %175, %struct._object** %arrayidx221, align 8
  br label %for.inc.222

for.inc.222:                                      ; preds = %for.body.213
  %182 = load i64, i64* %i19, align 8
  %inc223 = add i64 %182, 1
  store i64 %inc223, i64* %i19, align 8
  br label %for.cond.207

for.end.224:                                      ; preds = %for.cond.207
  br label %if.end.249

if.else.225:                                      ; preds = %if.end.203
  %183 = load i64, i64* %newlen, align 8
  %184 = load i64, i64* %slicelen, align 8
  %cmp226 = icmp sgt i64 %183, %184
  br i1 %cmp226, label %if.then.228, label %if.end.248

if.then.228:                                      ; preds = %if.else.225
  %185 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra229 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %185, i32 0, i32 4
  %186 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra229, align 8
  %length230 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %186, i32 0, i32 1
  %187 = load i32, i32* %length230, align 4
  %sub231 = sub i32 %187, 1
  %conv232 = sext i32 %sub231 to i64
  store i64 %conv232, i64* %i19, align 8
  br label %for.cond.233

for.cond.233:                                     ; preds = %for.inc.245, %if.then.228
  %188 = load i64, i64* %i19, align 8
  %189 = load i64, i64* %stop, align 8
  %cmp234 = icmp sge i64 %188, %189
  br i1 %cmp234, label %for.body.236, label %for.end.247

for.body.236:                                     ; preds = %for.cond.233
  %190 = load i64, i64* %i19, align 8
  %191 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra237 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %191, i32 0, i32 4
  %192 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra237, align 8
  %children238 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %192, i32 0, i32 3
  %193 = load %struct._object**, %struct._object*** %children238, align 8
  %arrayidx239 = getelementptr %struct._object*, %struct._object** %193, i64 %190
  %194 = load %struct._object*, %struct._object** %arrayidx239, align 8
  %195 = load i64, i64* %i19, align 8
  %196 = load i64, i64* %newlen, align 8
  %add240 = add i64 %195, %196
  %197 = load i64, i64* %slicelen, align 8
  %sub241 = sub i64 %add240, %197
  %198 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra242 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %198, i32 0, i32 4
  %199 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra242, align 8
  %children243 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %199, i32 0, i32 3
  %200 = load %struct._object**, %struct._object*** %children243, align 8
  %arrayidx244 = getelementptr %struct._object*, %struct._object** %200, i64 %sub241
  store %struct._object* %194, %struct._object** %arrayidx244, align 8
  br label %for.inc.245

for.inc.245:                                      ; preds = %for.body.236
  %201 = load i64, i64* %i19, align 8
  %dec246 = add i64 %201, -1
  store i64 %dec246, i64* %i19, align 8
  br label %for.cond.233

for.end.247:                                      ; preds = %for.cond.233
  br label %if.end.248

if.end.248:                                       ; preds = %for.end.247, %if.else.225
  br label %if.end.249

if.end.249:                                       ; preds = %if.end.248, %for.end.224
  %202 = load i64, i64* %start, align 8
  store i64 %202, i64* %cur, align 8
  store i64 0, i64* %i19, align 8
  br label %for.cond.250

for.cond.250:                                     ; preds = %for.inc.266, %if.end.249
  %203 = load i64, i64* %i19, align 8
  %204 = load i64, i64* %newlen, align 8
  %cmp251 = icmp slt i64 %203, %204
  br i1 %cmp251, label %for.body.253, label %for.end.269

for.body.253:                                     ; preds = %for.cond.250
  %205 = load %struct._object*, %struct._object** %seq, align 8
  %ob_type254 = getelementptr inbounds %struct._object, %struct._object* %205, i32 0, i32 1
  %206 = load %struct._typeobject*, %struct._typeobject** %ob_type254, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %206, i32 0, i32 19
  %207 = load i64, i64* %tp_flags, align 8
  %and = and i64 %207, 33554432
  %cmp255 = icmp ne i64 %and, 0
  br i1 %cmp255, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body.253
  %208 = load i64, i64* %i19, align 8
  %209 = load %struct._object*, %struct._object** %seq, align 8
  %210 = bitcast %struct._object* %209 to %struct.PyListObject*
  %ob_item257 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %210, i32 0, i32 1
  %211 = load %struct._object**, %struct._object*** %ob_item257, align 8
  %arrayidx258 = getelementptr %struct._object*, %struct._object** %211, i64 %208
  %212 = load %struct._object*, %struct._object** %arrayidx258, align 8
  br label %cond.end

cond.false:                                       ; preds = %for.body.253
  %213 = load i64, i64* %i19, align 8
  %214 = load %struct._object*, %struct._object** %seq, align 8
  %215 = bitcast %struct._object* %214 to %struct.PyTupleObject*
  %ob_item259 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %215, i32 0, i32 1
  %arrayidx260 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item259, i32 0, i64 %213
  %216 = load %struct._object*, %struct._object** %arrayidx260, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %212, %cond.true ], [ %216, %cond.false ]
  store %struct._object* %cond, %struct._object** %element, align 8
  %217 = load %struct._object*, %struct._object** %element, align 8
  %ob_refcnt261 = getelementptr inbounds %struct._object, %struct._object* %217, i32 0, i32 0
  %218 = load i64, i64* %ob_refcnt261, align 8
  %inc262 = add i64 %218, 1
  store i64 %inc262, i64* %ob_refcnt261, align 8
  %219 = load %struct._object*, %struct._object** %element, align 8
  %220 = load i64, i64* %cur, align 8
  %221 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra263 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %221, i32 0, i32 4
  %222 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra263, align 8
  %children264 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %222, i32 0, i32 3
  %223 = load %struct._object**, %struct._object*** %children264, align 8
  %arrayidx265 = getelementptr %struct._object*, %struct._object** %223, i64 %220
  store %struct._object* %219, %struct._object** %arrayidx265, align 8
  br label %for.inc.266

for.inc.266:                                      ; preds = %cond.end
  %224 = load i64, i64* %step, align 8
  %225 = load i64, i64* %cur, align 8
  %add267 = add i64 %225, %224
  store i64 %add267, i64* %cur, align 8
  %226 = load i64, i64* %i19, align 8
  %inc268 = add i64 %226, 1
  store i64 %inc268, i64* %i19, align 8
  br label %for.cond.250

for.end.269:                                      ; preds = %for.cond.250
  %227 = load i64, i64* %newlen, align 8
  %228 = load i64, i64* %slicelen, align 8
  %sub270 = sub i64 %227, %228
  %229 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra271 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %229, i32 0, i32 4
  %230 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra271, align 8
  %length272 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %230, i32 0, i32 1
  %231 = load i32, i32* %length272, align 4
  %conv273 = sext i32 %231 to i64
  %add274 = add i64 %conv273, %sub270
  %conv275 = trunc i64 %add274 to i32
  store i32 %conv275, i32* %length272, align 4
  %232 = load %struct._object*, %struct._object** %seq, align 8
  %tobool276 = icmp ne %struct._object* %232, null
  br i1 %tobool276, label %if.then.277, label %if.end.290

if.then.277:                                      ; preds = %for.end.269
  br label %do.body.278

do.body.278:                                      ; preds = %if.then.277
  %233 = load %struct._object*, %struct._object** %seq, align 8
  store %struct._object* %233, %struct._object** %_py_decref_tmp279, align 8
  %234 = load %struct._object*, %struct._object** %_py_decref_tmp279, align 8
  %ob_refcnt280 = getelementptr inbounds %struct._object, %struct._object* %234, i32 0, i32 0
  %235 = load i64, i64* %ob_refcnt280, align 8
  %dec281 = add i64 %235, -1
  store i64 %dec281, i64* %ob_refcnt280, align 8
  %cmp282 = icmp ne i64 %dec281, 0
  br i1 %cmp282, label %if.then.284, label %if.else.285

if.then.284:                                      ; preds = %do.body.278
  br label %if.end.288

if.else.285:                                      ; preds = %do.body.278
  %236 = load %struct._object*, %struct._object** %_py_decref_tmp279, align 8
  %ob_type286 = getelementptr inbounds %struct._object, %struct._object* %236, i32 0, i32 1
  %237 = load %struct._typeobject*, %struct._typeobject** %ob_type286, align 8
  %tp_dealloc287 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %237, i32 0, i32 4
  %238 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc287, align 8
  %239 = load %struct._object*, %struct._object** %_py_decref_tmp279, align 8
  call void %238(%struct._object* %239)
  br label %if.end.288

if.end.288:                                       ; preds = %if.else.285, %if.then.284
  br label %do.end.289

do.end.289:                                       ; preds = %if.end.288
  br label %if.end.290

if.end.290:                                       ; preds = %do.end.289, %for.end.269
  br label %do.body.291

do.body.291:                                      ; preds = %if.end.290
  %240 = load %struct._object*, %struct._object** %recycle, align 8
  store %struct._object* %240, %struct._object** %_py_xdecref_tmp292, align 8
  %241 = load %struct._object*, %struct._object** %_py_xdecref_tmp292, align 8
  %cmp293 = icmp ne %struct._object* %241, null
  br i1 %cmp293, label %if.then.295, label %if.end.308

if.then.295:                                      ; preds = %do.body.291
  br label %do.body.296

do.body.296:                                      ; preds = %if.then.295
  %242 = load %struct._object*, %struct._object** %_py_xdecref_tmp292, align 8
  store %struct._object* %242, %struct._object** %_py_decref_tmp297, align 8
  %243 = load %struct._object*, %struct._object** %_py_decref_tmp297, align 8
  %ob_refcnt298 = getelementptr inbounds %struct._object, %struct._object* %243, i32 0, i32 0
  %244 = load i64, i64* %ob_refcnt298, align 8
  %dec299 = add i64 %244, -1
  store i64 %dec299, i64* %ob_refcnt298, align 8
  %cmp300 = icmp ne i64 %dec299, 0
  br i1 %cmp300, label %if.then.302, label %if.else.303

if.then.302:                                      ; preds = %do.body.296
  br label %if.end.306

if.else.303:                                      ; preds = %do.body.296
  %245 = load %struct._object*, %struct._object** %_py_decref_tmp297, align 8
  %ob_type304 = getelementptr inbounds %struct._object, %struct._object* %245, i32 0, i32 1
  %246 = load %struct._typeobject*, %struct._typeobject** %ob_type304, align 8
  %tp_dealloc305 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %246, i32 0, i32 4
  %247 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc305, align 8
  %248 = load %struct._object*, %struct._object** %_py_decref_tmp297, align 8
  call void %247(%struct._object* %248)
  br label %if.end.306

if.end.306:                                       ; preds = %if.else.303, %if.then.302
  br label %do.end.307

do.end.307:                                       ; preds = %if.end.306
  br label %if.end.308

if.end.308:                                       ; preds = %do.end.307, %do.body.291
  br label %do.end.309

do.end.309:                                       ; preds = %if.end.308
  store i32 0, i32* %retval
  br label %return

if.else.310:                                      ; preds = %if.else
  %249 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %249, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

return:                                           ; preds = %if.else.310, %do.end.309, %if.end.188, %if.end.165, %if.then.139, %if.then.128, %do.end.124, %if.then.56, %if.then.44, %if.then.35, %if.then.26, %if.end.13, %if.then.7
  %250 = load i32, i32* %retval
  ret i32 %250
}

declare i64 @PyNumber_AsSsize_t(%struct._object*, %struct._object*) #1

declare %struct._object* @PyErr_Occurred() #1

declare i32 @PySlice_GetIndicesEx(%struct._object*, i64, i64*, i64*, i64*, i64*) #1

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

declare %struct._object* @PySequence_Fast(%struct._object*, i8*) #1

declare i64 @PySequence_Size(%struct._object*) #1

declare i8* @PyUnicode_AsUTF8(%struct._object*) #1

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_get_attrib(%struct.ElementObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 4
  %1 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %1, i32 0, i32 0
  %2 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %2, %struct._object** %res, align 8
  %3 = load %struct._object*, %struct._object** %res, align 8
  %cmp = icmp eq %struct._object* %3, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end.7

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyDict_New()
  store %struct._object* %call, %struct._object** %res, align 8
  %4 = load %struct._object*, %struct._object** %res, align 8
  %tobool = icmp ne %struct._object* %4, null
  br i1 %tobool, label %if.end, label %if.then.1

if.then.1:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %do.body

do.body:                                          ; preds = %if.end
  store %struct._object* @_Py_NoneStruct, %struct._object** %_py_decref_tmp, align 8
  %5 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0
  %6 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %6, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp2 = icmp ne i64 %dec, 0
  br i1 %cmp2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %do.body
  br label %if.end.4

if.else:                                          ; preds = %do.body
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 4
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %9(%struct._object* %10)
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  br label %do.end

do.end:                                           ; preds = %if.end.4
  %11 = load %struct._object*, %struct._object** %res, align 8
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %12, i32 0, i32 4
  %13 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8
  %attrib6 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %13, i32 0, i32 0
  store %struct._object* %11, %struct._object** %attrib6, align 8
  br label %if.end.7

if.end.7:                                         ; preds = %do.end, %entry
  %14 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %14, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.7, %if.then.1
  %15 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %15
}

; Function Attrs: nounwind uwtable
define internal void @_clear_joined_ptr(%struct._object** %p) #0 {
entry:
  %p.addr = alloca %struct._object**, align 8
  %tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object** %p, %struct._object*** %p.addr, align 8
  %0 = load %struct._object**, %struct._object*** %p.addr, align 8
  %1 = load %struct._object*, %struct._object** %0, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.then, label %if.end.3

if.then:                                          ; preds = %entry
  %2 = load %struct._object**, %struct._object*** %p.addr, align 8
  %3 = load %struct._object*, %struct._object** %2, align 8
  %4 = ptrtoint %struct._object* %3 to i64
  %and = and i64 %4, -2
  %5 = inttoptr i64 %and to %struct._object*
  store %struct._object* %5, %struct._object** %tmp, align 8
  %6 = load %struct._object**, %struct._object*** %p.addr, align 8
  store %struct._object* null, %struct._object** %6, align 8
  br label %do.body

do.body:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** %tmp, align 8
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0
  %9 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %9, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %do.body
  br label %if.end

if.else:                                          ; preds = %do.body
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %12(%struct._object* %13)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end.3

if.end.3:                                         ; preds = %do.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dealloc_extra(%struct.ElementObject* %self) #0 {
entry:
  %self.addr = alloca %struct.ElementObject*, align 8
  %myextra = alloca %struct.ElementObjectExtra*, align 8
  %i = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp7 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 4
  %1 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool = icmp ne %struct.ElementObjectExtra* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4
  %3 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8
  store %struct.ElementObjectExtra* %3, %struct.ElementObjectExtra** %myextra, align 8
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %4, i32 0, i32 4
  store %struct.ElementObjectExtra* null, %struct.ElementObjectExtra** %extra2, align 8
  br label %do.body

do.body:                                          ; preds = %if.end
  %5 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %5, i32 0, i32 0
  %6 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0
  %8 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %8, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %do.body
  br label %if.end.4

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %11(%struct._object* %12)
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  br label %do.end

do.end:                                           ; preds = %if.end.4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %13 = load i32, i32* %i, align 4
  %14 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %14, i32 0, i32 1
  %15 = load i32, i32* %length, align 4
  %cmp5 = icmp slt i32 %13, %15
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %do.body.6

do.body.6:                                        ; preds = %for.body
  %16 = load i32, i32* %i, align 4
  %idxprom = sext i32 %16 to i64
  %17 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %17, i32 0, i32 3
  %18 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %18, i64 %idxprom
  %19 = load %struct._object*, %struct._object** %arrayidx, align 8
  store %struct._object* %19, %struct._object** %_py_decref_tmp7, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0
  %21 = load i64, i64* %ob_refcnt8, align 8
  %dec9 = add i64 %21, -1
  store i64 %dec9, i64* %ob_refcnt8, align 8
  %cmp10 = icmp ne i64 %dec9, 0
  br i1 %cmp10, label %if.then.11, label %if.else.12

if.then.11:                                       ; preds = %do.body.6
  br label %if.end.15

if.else.12:                                       ; preds = %do.body.6
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8
  %tp_dealloc14 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc14, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8
  call void %24(%struct._object* %25)
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.12, %if.then.11
  br label %do.end.16

do.end.16:                                        ; preds = %if.end.15
  br label %for.inc

for.inc:                                          ; preds = %do.end.16
  %26 = load i32, i32* %i, align 4
  %inc = add i32 %26, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %27 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8
  %children17 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %27, i32 0, i32 3
  %28 = load %struct._object**, %struct._object*** %children17, align 8
  %29 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8
  %_children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %29, i32 0, i32 4
  %arraydecay = getelementptr inbounds [4 x %struct._object*], [4 x %struct._object*]* %_children, i32 0, i32 0
  %cmp18 = icmp ne %struct._object** %28, %arraydecay
  br i1 %cmp18, label %if.then.19, label %if.end.21

if.then.19:                                       ; preds = %for.end
  %30 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8
  %children20 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %30, i32 0, i32 3
  %31 = load %struct._object**, %struct._object*** %children20, align 8
  %32 = bitcast %struct._object** %31 to i8*
  call void @PyObject_Free(i8* %32)
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.19, %for.end
  %33 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8
  %34 = bitcast %struct.ElementObjectExtra* %33 to i8*
  call void @PyObject_Free(i8* %34)
  br label %return

return:                                           ; preds = %if.end.21, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_clearmethod(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp6 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0))
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  call void @dealloc_extra(%struct.ElementObject* %1)
  %2 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %2, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  br label %do.body

do.body:                                          ; preds = %if.end
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 2
  %4 = load %struct._object*, %struct._object** %text, align 8
  %5 = ptrtoint %struct._object* %4 to i64
  %and = and i64 %5, -2
  %6 = inttoptr i64 %and to %struct._object*
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0
  %8 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %8, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %do.body
  br label %if.end.2

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %11(%struct._object* %12)
  br label %if.end.2

if.end.2:                                         ; preds = %if.else, %if.then.1
  br label %do.end

do.end:                                           ; preds = %if.end.2
  %13 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text3 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %13, i32 0, i32 2
  store %struct._object* @_Py_NoneStruct, %struct._object** %text3, align 8
  %14 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc4 = add i64 %14, 1
  store i64 %inc4, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  br label %do.body.5

do.body.5:                                        ; preds = %do.end
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 3
  %16 = load %struct._object*, %struct._object** %tail, align 8
  %17 = ptrtoint %struct._object* %16 to i64
  %and7 = and i64 %17, -2
  %18 = inttoptr i64 %and7 to %struct._object*
  store %struct._object* %18, %struct._object** %_py_decref_tmp6, align 8
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp6, align 8
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0
  %20 = load i64, i64* %ob_refcnt8, align 8
  %dec9 = add i64 %20, -1
  store i64 %dec9, i64* %ob_refcnt8, align 8
  %cmp10 = icmp ne i64 %dec9, 0
  br i1 %cmp10, label %if.then.11, label %if.else.12

if.then.11:                                       ; preds = %do.body.5
  br label %if.end.15

if.else.12:                                       ; preds = %do.body.5
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp6, align 8
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8
  %tp_dealloc14 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc14, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp6, align 8
  call void %23(%struct._object* %24)
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.12, %if.then.11
  br label %do.end.16

do.end.16:                                        ; preds = %if.end.15
  %25 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail17 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %25, i32 0, i32 3
  store %struct._object* @_Py_NoneStruct, %struct._object** %tail17, align 8
  %26 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc18 = add i64 %26, 1
  store i64 %inc18, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.16, %if.then
  %27 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %27
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_get(%struct.ElementObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %key = alloca %struct._object*, align 8
  %default_value = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %default_value, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %1 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %0, %struct._object* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.71, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @element_get.kwlist, i32 0, i32 0), %struct._object** %key, %struct._object** %default_value)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4
  %3 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool1 = icmp ne %struct.ElementObjectExtra* %3, null
  br i1 %tobool1, label %lor.lhs.false, label %if.then.3

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %4, i32 0, i32 4
  %5 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %5, i32 0, i32 0
  %6 = load %struct._object*, %struct._object** %attrib, align 8
  %cmp = icmp eq %struct._object* %6, @_Py_NoneStruct
  br i1 %cmp, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._object*, %struct._object** %default_value, align 8
  store %struct._object* %7, %struct._object** %value, align 8
  br label %if.end.10

if.else:                                          ; preds = %lor.lhs.false
  %8 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra4 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %8, i32 0, i32 4
  %9 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra4, align 8
  %attrib5 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %9, i32 0, i32 0
  %10 = load %struct._object*, %struct._object** %attrib5, align 8
  %11 = load %struct._object*, %struct._object** %key, align 8
  %call6 = call %struct._object* @PyDict_GetItem(%struct._object* %10, %struct._object* %11)
  store %struct._object* %call6, %struct._object** %value, align 8
  %12 = load %struct._object*, %struct._object** %value, align 8
  %tobool7 = icmp ne %struct._object* %12, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.else
  %13 = load %struct._object*, %struct._object** %default_value, align 8
  store %struct._object* %13, %struct._object** %value, align 8
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.8, %if.else
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.then.3
  %14 = load %struct._object*, %struct._object** %value, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0
  %15 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %15, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %16 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %16, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.10, %if.then
  %17 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %17
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_set(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %key = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i32 0, i32 0), %struct._object** %key, %struct._object** %value)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 4
  %2 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool1 = icmp ne %struct.ElementObjectExtra* %2, null
  br i1 %tobool1, label %if.end.6, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call3 = call i32 @create_extra(%struct.ElementObject* %3, %struct._object* null)
  %cmp = icmp slt i32 %call3, 0
  br i1 %cmp, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.then.2
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.5:                                         ; preds = %if.then.2
  br label %if.end.6

if.end.6:                                         ; preds = %if.end.5, %if.end
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call7 = call %struct._object* @element_get_attrib(%struct.ElementObject* %4)
  store %struct._object* %call7, %struct._object** %attrib, align 8
  %5 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool8 = icmp ne %struct._object* %5, null
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.6
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.10:                                        ; preds = %if.end.6
  %6 = load %struct._object*, %struct._object** %attrib, align 8
  %7 = load %struct._object*, %struct._object** %key, align 8
  %8 = load %struct._object*, %struct._object** %value, align 8
  %call11 = call i32 @PyDict_SetItem(%struct._object* %6, %struct._object* %7, %struct._object* %8)
  %cmp12 = icmp slt i32 %call11, 0
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.10
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.14:                                        ; preds = %if.end.10
  %9 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %9, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.14, %if.then.13, %if.then.9, %if.then.4, %if.then
  %10 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %10
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_find(%struct.ElementObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %tag = alloca %struct._object*, align 8
  %namespaces = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %item = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %namespaces, align 8
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule)
  %call1 = call i8* @PyModule_GetState(%struct._object* %call)
  %0 = bitcast i8* %call1 to %struct.elementtreestate*
  store %struct.elementtreestate* %0, %struct.elementtreestate** %st, align 8
  %1 = load %struct._object*, %struct._object** %args.addr, align 8
  %2 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call2 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %1, %struct._object* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @element_find.kwlist, i32 0, i32 0), %struct._object** %tag, %struct._object** %namespaces)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %tag, align 8
  %call3 = call i32 @checkpath(%struct._object* %3)
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.then.5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._object*, %struct._object** %namespaces, align 8
  %cmp = icmp ne %struct._object* %4, @_Py_NoneStruct
  br i1 %cmp, label %if.then.5, label %if.end.7

if.then.5:                                        ; preds = %lor.lhs.false, %if.end
  %5 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %5, i32 0, i32 2
  %6 = load %struct._object*, %struct._object** %elementpath_obj, align 8
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %8 = load %struct._object*, %struct._object** %tag, align 8
  %9 = load %struct._object*, %struct._object** %namespaces, align 8
  %call6 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %6, %struct._Py_Identifier* @element_find.PyId_find, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct.ElementObject* %7, %struct._object* %8, %struct._object* %9)
  store %struct._object* %call6, %struct._object** %retval
  br label %return

if.end.7:                                         ; preds = %lor.lhs.false
  %10 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 4
  %11 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool8 = icmp ne %struct.ElementObjectExtra* %11, null
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.7
  %12 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %12, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end.10:                                        ; preds = %if.end.7
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.10
  %13 = load i32, i32* %i, align 4
  %14 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %14, i32 0, i32 4
  %15 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra11, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %15, i32 0, i32 1
  %16 = load i32, i32* %length, align 4
  %cmp12 = icmp slt i32 %13, %16
  br i1 %cmp12, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %i, align 4
  %idxprom = sext i32 %17 to i64
  %18 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra13 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %18, i32 0, i32 4
  %19 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra13, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %19, i32 0, i32 3
  %20 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %20, i64 %idxprom
  %21 = load %struct._object*, %struct._object** %arrayidx, align 8
  store %struct._object* %21, %struct._object** %item, align 8
  %22 = load %struct._object*, %struct._object** %item, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp14 = icmp eq %struct._typeobject* %23, @Element_Type
  br i1 %cmp14, label %land.lhs.true, label %if.end.20

land.lhs.true:                                    ; preds = %for.body
  %24 = load %struct._object*, %struct._object** %item, align 8
  %25 = bitcast %struct._object* %24 to %struct.ElementObject*
  %tag15 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %25, i32 0, i32 1
  %26 = load %struct._object*, %struct._object** %tag15, align 8
  %27 = load %struct._object*, %struct._object** %tag, align 8
  %call16 = call i32 @PyObject_RichCompareBool(%struct._object* %26, %struct._object* %27, i32 2)
  %cmp17 = icmp eq i32 %call16, 1
  br i1 %cmp17, label %if.then.18, label %if.end.20

if.then.18:                                       ; preds = %land.lhs.true
  %28 = load %struct._object*, %struct._object** %item, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0
  %29 = load i64, i64* %ob_refcnt, align 8
  %inc19 = add i64 %29, 1
  store i64 %inc19, i64* %ob_refcnt, align 8
  %30 = load %struct._object*, %struct._object** %item, align 8
  store %struct._object* %30, %struct._object** %retval
  br label %return

if.end.20:                                        ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.20
  %31 = load i32, i32* %i, align 4
  %inc21 = add i32 %31, 1
  store i32 %inc21, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %32 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc22 = add i64 %32, 1
  store i64 %inc22, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.18, %if.then.9, %if.then.5, %if.then
  %33 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %33
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_findtext(%struct.ElementObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %tag = alloca %struct._object*, align 8
  %default_value = alloca %struct._object*, align 8
  %namespaces = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %item = alloca %struct.ElementObject*, align 8
  %text = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %default_value, align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %namespaces, align 8
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule)
  %call1 = call i8* @PyModule_GetState(%struct._object* %call)
  %0 = bitcast i8* %call1 to %struct.elementtreestate*
  store %struct.elementtreestate* %0, %struct.elementtreestate** %st, align 8
  %1 = load %struct._object*, %struct._object** %args.addr, align 8
  %2 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call2 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %1, %struct._object* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.77, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @element_findtext.kwlist, i32 0, i32 0), %struct._object** %tag, %struct._object** %default_value, %struct._object** %namespaces)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %tag, align 8
  %call3 = call i32 @checkpath(%struct._object* %3)
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.then.5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._object*, %struct._object** %namespaces, align 8
  %cmp = icmp ne %struct._object* %4, @_Py_NoneStruct
  br i1 %cmp, label %if.then.5, label %if.end.7

if.then.5:                                        ; preds = %lor.lhs.false, %if.end
  %5 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %5, i32 0, i32 2
  %6 = load %struct._object*, %struct._object** %elementpath_obj, align 8
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %8 = load %struct._object*, %struct._object** %tag, align 8
  %9 = load %struct._object*, %struct._object** %default_value, align 8
  %10 = load %struct._object*, %struct._object** %namespaces, align 8
  %call6 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %6, %struct._Py_Identifier* @element_findtext.PyId_findtext, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0), %struct.ElementObject* %7, %struct._object* %8, %struct._object* %9, %struct._object* %10)
  store %struct._object* %call6, %struct._object** %retval
  br label %return

if.end.7:                                         ; preds = %lor.lhs.false
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 4
  %12 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool8 = icmp ne %struct.ElementObjectExtra* %12, null
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.7
  %13 = load %struct._object*, %struct._object** %default_value, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %14, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %15 = load %struct._object*, %struct._object** %default_value, align 8
  store %struct._object* %15, %struct._object** %retval
  br label %return

if.end.10:                                        ; preds = %if.end.7
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.10
  %16 = load i32, i32* %i, align 4
  %17 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %17, i32 0, i32 4
  %18 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra11, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %18, i32 0, i32 1
  %19 = load i32, i32* %length, align 4
  %cmp12 = icmp slt i32 %16, %19
  br i1 %cmp12, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %i, align 4
  %idxprom = sext i32 %20 to i64
  %21 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra13 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %21, i32 0, i32 4
  %22 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra13, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %22, i32 0, i32 3
  %23 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %23, i64 %idxprom
  %24 = load %struct._object*, %struct._object** %arrayidx, align 8
  %25 = bitcast %struct._object* %24 to %struct.ElementObject*
  store %struct.ElementObject* %25, %struct.ElementObject** %item, align 8
  %26 = load %struct.ElementObject*, %struct.ElementObject** %item, align 8
  %27 = bitcast %struct.ElementObject* %26 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp14 = icmp eq %struct._typeobject* %28, @Element_Type
  br i1 %cmp14, label %land.lhs.true, label %if.end.29

land.lhs.true:                                    ; preds = %for.body
  %29 = load %struct.ElementObject*, %struct.ElementObject** %item, align 8
  %tag15 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %29, i32 0, i32 1
  %30 = load %struct._object*, %struct._object** %tag15, align 8
  %31 = load %struct._object*, %struct._object** %tag, align 8
  %call16 = call i32 @PyObject_RichCompareBool(%struct._object* %30, %struct._object* %31, i32 2)
  %cmp17 = icmp eq i32 %call16, 1
  br i1 %cmp17, label %if.then.18, label %if.end.29

if.then.18:                                       ; preds = %land.lhs.true
  %32 = load %struct.ElementObject*, %struct.ElementObject** %item, align 8
  %call19 = call %struct._object* @element_get_text(%struct.ElementObject* %32)
  store %struct._object* %call19, %struct._object** %text, align 8
  %33 = load %struct._object*, %struct._object** %text, align 8
  %cmp20 = icmp eq %struct._object* %33, @_Py_NoneStruct
  br i1 %cmp20, label %if.then.21, label %if.end.23

if.then.21:                                       ; preds = %if.then.18
  %call22 = call %struct._object* @PyUnicode_New(i64 0, i32 0)
  store %struct._object* %call22, %struct._object** %retval
  br label %return

if.end.23:                                        ; preds = %if.then.18
  br label %do.body

do.body:                                          ; preds = %if.end.23
  %34 = load %struct._object*, %struct._object** %text, align 8
  store %struct._object* %34, %struct._object** %_py_xincref_tmp, align 8
  %35 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8
  %cmp24 = icmp ne %struct._object* %35, null
  br i1 %cmp24, label %if.then.25, label %if.end.28

if.then.25:                                       ; preds = %do.body
  %36 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0
  %37 = load i64, i64* %ob_refcnt26, align 8
  %inc27 = add i64 %37, 1
  store i64 %inc27, i64* %ob_refcnt26, align 8
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.25, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end.28
  %38 = load %struct._object*, %struct._object** %text, align 8
  store %struct._object* %38, %struct._object** %retval
  br label %return

if.end.29:                                        ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.29
  %39 = load i32, i32* %i, align 4
  %inc30 = add i32 %39, 1
  store i32 %inc30, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %40 = load %struct._object*, %struct._object** %default_value, align 8
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0
  %41 = load i64, i64* %ob_refcnt31, align 8
  %inc32 = add i64 %41, 1
  store i64 %inc32, i64* %ob_refcnt31, align 8
  %42 = load %struct._object*, %struct._object** %default_value, align 8
  store %struct._object* %42, %struct._object** %retval
  br label %return

return:                                           ; preds = %for.end, %do.end, %if.then.21, %if.then.9, %if.then.5, %if.then
  %43 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %43
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_findall(%struct.ElementObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %out = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %namespaces = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %item = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %namespaces, align 8
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule)
  %call1 = call i8* @PyModule_GetState(%struct._object* %call)
  %0 = bitcast i8* %call1 to %struct.elementtreestate*
  store %struct.elementtreestate* %0, %struct.elementtreestate** %st, align 8
  %1 = load %struct._object*, %struct._object** %args.addr, align 8
  %2 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call2 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %1, %struct._object* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.79, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @element_findall.kwlist, i32 0, i32 0), %struct._object** %tag, %struct._object** %namespaces)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %tag, align 8
  %call3 = call i32 @checkpath(%struct._object* %3)
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.then.5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._object*, %struct._object** %namespaces, align 8
  %cmp = icmp ne %struct._object* %4, @_Py_NoneStruct
  br i1 %cmp, label %if.then.5, label %if.end.7

if.then.5:                                        ; preds = %lor.lhs.false, %if.end
  %5 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %5, i32 0, i32 2
  %6 = load %struct._object*, %struct._object** %elementpath_obj, align 8
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %8 = load %struct._object*, %struct._object** %tag, align 8
  %9 = load %struct._object*, %struct._object** %namespaces, align 8
  %call6 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %6, %struct._Py_Identifier* @element_findall.PyId_findall, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct.ElementObject* %7, %struct._object* %8, %struct._object* %9)
  store %struct._object* %call6, %struct._object** %retval
  br label %return

if.end.7:                                         ; preds = %lor.lhs.false
  %call8 = call %struct._object* @PyList_New(i64 0)
  store %struct._object* %call8, %struct._object** %out, align 8
  %10 = load %struct._object*, %struct._object** %out, align 8
  %tobool9 = icmp ne %struct._object* %10, null
  br i1 %tobool9, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %if.end.7
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.11:                                        ; preds = %if.end.7
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 4
  %12 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool12 = icmp ne %struct.ElementObjectExtra* %12, null
  br i1 %tobool12, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.end.11
  %13 = load %struct._object*, %struct._object** %out, align 8
  store %struct._object* %13, %struct._object** %retval
  br label %return

if.end.14:                                        ; preds = %if.end.11
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.14
  %14 = load i32, i32* %i, align 4
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra15 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 4
  %16 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra15, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %16, i32 0, i32 1
  %17 = load i32, i32* %length, align 4
  %cmp16 = icmp slt i32 %14, %17
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4
  %idxprom = sext i32 %18 to i64
  %19 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra17 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %19, i32 0, i32 4
  %20 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra17, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %20, i32 0, i32 3
  %21 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %21, i64 %idxprom
  %22 = load %struct._object*, %struct._object** %arrayidx, align 8
  store %struct._object* %22, %struct._object** %item, align 8
  %23 = load %struct._object*, %struct._object** %item, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp18 = icmp eq %struct._typeobject* %24, @Element_Type
  br i1 %cmp18, label %land.lhs.true, label %if.end.31

land.lhs.true:                                    ; preds = %for.body
  %25 = load %struct._object*, %struct._object** %item, align 8
  %26 = bitcast %struct._object* %25 to %struct.ElementObject*
  %tag19 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %26, i32 0, i32 1
  %27 = load %struct._object*, %struct._object** %tag19, align 8
  %28 = load %struct._object*, %struct._object** %tag, align 8
  %call20 = call i32 @PyObject_RichCompareBool(%struct._object* %27, %struct._object* %28, i32 2)
  %cmp21 = icmp eq i32 %call20, 1
  br i1 %cmp21, label %if.then.22, label %if.end.31

if.then.22:                                       ; preds = %land.lhs.true
  %29 = load %struct._object*, %struct._object** %out, align 8
  %30 = load %struct._object*, %struct._object** %item, align 8
  %call23 = call i32 @PyList_Append(%struct._object* %29, %struct._object* %30)
  %cmp24 = icmp slt i32 %call23, 0
  br i1 %cmp24, label %if.then.25, label %if.end.30

if.then.25:                                       ; preds = %if.then.22
  br label %do.body

do.body:                                          ; preds = %if.then.25
  %31 = load %struct._object*, %struct._object** %out, align 8
  store %struct._object* %31, %struct._object** %_py_decref_tmp, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0
  %33 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %33, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp26 = icmp ne i64 %dec, 0
  br i1 %cmp26, label %if.then.27, label %if.else

if.then.27:                                       ; preds = %do.body
  br label %if.end.29

if.else:                                          ; preds = %do.body
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %36(%struct._object* %37)
  br label %if.end.29

if.end.29:                                        ; preds = %if.else, %if.then.27
  br label %do.end

do.end:                                           ; preds = %if.end.29
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.30:                                        ; preds = %if.then.22
  br label %if.end.31

if.end.31:                                        ; preds = %if.end.30, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.31
  %38 = load i32, i32* %i, align 4
  %inc = add i32 %38, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %39 = load %struct._object*, %struct._object** %out, align 8
  store %struct._object* %39, %struct._object** %retval
  br label %return

return:                                           ; preds = %for.end, %do.end, %if.then.13, %if.then.10, %if.then.5, %if.then
  %40 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %40
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_append(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %element = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i32 0, i32 0), %struct._typeobject* @Element_Type, %struct._object** %element)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %2 = load %struct._object*, %struct._object** %element, align 8
  %call1 = call i32 @element_add_subelement(%struct.ElementObject* %1, %struct._object* %2)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %4 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %4
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_extend(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %seqlen = alloca i64, align 8
  %seq_in = alloca %struct._object*, align 8
  %element = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp26 = alloca %struct._object*, align 8
  %_py_decref_tmp38 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store i64 0, i64* %seqlen, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), %struct._object** %seq_in)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %seq_in, align 8
  %call1 = call %struct._object* @PySequence_Fast(%struct._object* %1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0))
  store %struct._object* %call1, %struct._object** %seq, align 8
  %2 = load %struct._object*, %struct._object** %seq, align 8
  %tobool2 = icmp ne %struct._object* %2, null
  br i1 %tobool2, label %if.end.5, label %if.then.3

if.then.3:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %4 = load %struct._object*, %struct._object** %seq_in, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 1
  %6 = load i8*, i8** %tp_name, align 8
  %call4 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i32 0, i32 0), i8* %6)
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.5:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %seq, align 8
  %call6 = call i64 @PySequence_Size(%struct._object* %7)
  store i64 %call6, i64* %seqlen, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.5
  %8 = load i64, i64* %i, align 8
  %9 = load i64, i64* %seqlen, align 8
  %cmp = icmp slt i64 %8, %9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load %struct._object*, %struct._object** %seq, align 8
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 19
  %12 = load i64, i64* %tp_flags, align 8
  %and = and i64 %12, 33554432
  %cmp8 = icmp ne i64 %and, 0
  br i1 %cmp8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %13 = load i64, i64* %i, align 8
  %14 = load %struct._object*, %struct._object** %seq, align 8
  %15 = bitcast %struct._object* %14 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %15, i32 0, i32 1
  %16 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %16, i64 %13
  %17 = load %struct._object*, %struct._object** %arrayidx, align 8
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %18 = load i64, i64* %i, align 8
  %19 = load %struct._object*, %struct._object** %seq, align 8
  %20 = bitcast %struct._object* %19 to %struct.PyTupleObject*
  %ob_item9 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %20, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item9, i32 0, i64 %18
  %21 = load %struct._object*, %struct._object** %arrayidx10, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %17, %cond.true ], [ %21, %cond.false ]
  store %struct._object* %cond, %struct._object** %element, align 8
  %22 = load %struct._object*, %struct._object** %element, align 8
  %call11 = call i32 @PyObject_IsInstance(%struct._object* %22, %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @Element_Type, i32 0, i32 0, i32 0))
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end.21, label %if.then.13

if.then.13:                                       ; preds = %cond.end
  br label %do.body

do.body:                                          ; preds = %if.then.13
  %23 = load %struct._object*, %struct._object** %seq, align 8
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0
  %25 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %25, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp14 = icmp ne i64 %dec, 0
  br i1 %cmp14, label %if.then.15, label %if.else

if.then.15:                                       ; preds = %do.body
  br label %if.end.17

if.else:                                          ; preds = %do.body
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %28(%struct._object* %29)
  br label %if.end.17

if.end.17:                                        ; preds = %if.else, %if.then.15
  br label %do.end

do.end:                                           ; preds = %if.end.17
  %30 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %31 = load %struct._object*, %struct._object** %element, align 8
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8
  %tp_name19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 1
  %33 = load i8*, i8** %tp_name19, align 8
  %call20 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %30, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.82, i32 0, i32 0), i8* %33)
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.21:                                        ; preds = %cond.end
  %34 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %35 = load %struct._object*, %struct._object** %element, align 8
  %call22 = call i32 @element_add_subelement(%struct.ElementObject* %34, %struct._object* %35)
  %cmp23 = icmp slt i32 %call22, 0
  br i1 %cmp23, label %if.then.24, label %if.end.36

if.then.24:                                       ; preds = %if.end.21
  br label %do.body.25

do.body.25:                                       ; preds = %if.then.24
  %36 = load %struct._object*, %struct._object** %seq, align 8
  store %struct._object* %36, %struct._object** %_py_decref_tmp26, align 8
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0
  %38 = load i64, i64* %ob_refcnt27, align 8
  %dec28 = add i64 %38, -1
  store i64 %dec28, i64* %ob_refcnt27, align 8
  %cmp29 = icmp ne i64 %dec28, 0
  br i1 %cmp29, label %if.then.30, label %if.else.31

if.then.30:                                       ; preds = %do.body.25
  br label %if.end.34

if.else.31:                                       ; preds = %do.body.25
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8
  %tp_dealloc33 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc33, align 8
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8
  call void %41(%struct._object* %42)
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.31, %if.then.30
  br label %do.end.35

do.end.35:                                        ; preds = %if.end.34
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.36:                                        ; preds = %if.end.21
  br label %for.inc

for.inc:                                          ; preds = %if.end.36
  %43 = load i64, i64* %i, align 8
  %inc = add i64 %43, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body.37

do.body.37:                                       ; preds = %for.end
  %44 = load %struct._object*, %struct._object** %seq, align 8
  store %struct._object* %44, %struct._object** %_py_decref_tmp38, align 8
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0
  %46 = load i64, i64* %ob_refcnt39, align 8
  %dec40 = add i64 %46, -1
  store i64 %dec40, i64* %ob_refcnt39, align 8
  %cmp41 = icmp ne i64 %dec40, 0
  br i1 %cmp41, label %if.then.42, label %if.else.43

if.then.42:                                       ; preds = %do.body.37
  br label %if.end.46

if.else.43:                                       ; preds = %do.body.37
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8
  %ob_type44 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type44, align 8
  %tp_dealloc45 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc45, align 8
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8
  call void %49(%struct._object* %50)
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.43, %if.then.42
  br label %do.end.47

do.end.47:                                        ; preds = %if.end.46
  %51 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc48 = add i64 %51, 1
  store i64 %inc48, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.47, %do.end.35, %do.end, %if.then.3, %if.then
  %52 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %52
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_insert(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %element = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83, i32 0, i32 0), i32* %index, %struct._typeobject* @Element_Type, %struct._object** %element)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 4
  %2 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool1 = icmp ne %struct.ElementObjectExtra* %2, null
  br i1 %tobool1, label %if.end.6, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call3 = call i32 @create_extra(%struct.ElementObject* %3, %struct._object* null)
  %cmp = icmp slt i32 %call3, 0
  br i1 %cmp, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.then.2
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.5:                                         ; preds = %if.then.2
  br label %if.end.6

if.end.6:                                         ; preds = %if.end.5, %if.end
  %4 = load i32, i32* %index, align 4
  %cmp7 = icmp slt i32 %4, 0
  br i1 %cmp7, label %if.then.8, label %if.end.13

if.then.8:                                        ; preds = %if.end.6
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra9 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %5, i32 0, i32 4
  %6 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra9, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %6, i32 0, i32 1
  %7 = load i32, i32* %length, align 4
  %8 = load i32, i32* %index, align 4
  %add = add i32 %8, %7
  store i32 %add, i32* %index, align 4
  %9 = load i32, i32* %index, align 4
  %cmp10 = icmp slt i32 %9, 0
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.then.8
  store i32 0, i32* %index, align 4
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.11, %if.then.8
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %if.end.6
  %10 = load i32, i32* %index, align 4
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra14 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 4
  %12 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra14, align 8
  %length15 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %12, i32 0, i32 1
  %13 = load i32, i32* %length15, align 4
  %cmp16 = icmp sgt i32 %10, %13
  br i1 %cmp16, label %if.then.17, label %if.end.20

if.then.17:                                       ; preds = %if.end.13
  %14 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra18 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %14, i32 0, i32 4
  %15 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra18, align 8
  %length19 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %15, i32 0, i32 1
  %16 = load i32, i32* %length19, align 4
  store i32 %16, i32* %index, align 4
  br label %if.end.20

if.end.20:                                        ; preds = %if.then.17, %if.end.13
  %17 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call21 = call i32 @element_resize(%struct.ElementObject* %17, i32 1)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.end.20
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.24:                                        ; preds = %if.end.20
  %18 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra25 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %18, i32 0, i32 4
  %19 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra25, align 8
  %length26 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %19, i32 0, i32 1
  %20 = load i32, i32* %length26, align 4
  store i32 %20, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.24
  %21 = load i32, i32* %i, align 4
  %22 = load i32, i32* %index, align 4
  %cmp27 = icmp sgt i32 %21, %22
  br i1 %cmp27, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %i, align 4
  %sub = sub i32 %23, 1
  %idxprom = sext i32 %sub to i64
  %24 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra28 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %24, i32 0, i32 4
  %25 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra28, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %25, i32 0, i32 3
  %26 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %26, i64 %idxprom
  %27 = load %struct._object*, %struct._object** %arrayidx, align 8
  %28 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %28 to i64
  %29 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra30 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %29, i32 0, i32 4
  %30 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra30, align 8
  %children31 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %30, i32 0, i32 3
  %31 = load %struct._object**, %struct._object*** %children31, align 8
  %arrayidx32 = getelementptr %struct._object*, %struct._object** %31, i64 %idxprom29
  store %struct._object* %27, %struct._object** %arrayidx32, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4
  %dec = add i32 %32, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %33 = load %struct._object*, %struct._object** %element, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0
  %34 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %34, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %35 = load %struct._object*, %struct._object** %element, align 8
  %36 = load i32, i32* %index, align 4
  %idxprom33 = sext i32 %36 to i64
  %37 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra34 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %37, i32 0, i32 4
  %38 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra34, align 8
  %children35 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %38, i32 0, i32 3
  %39 = load %struct._object**, %struct._object*** %children35, align 8
  %arrayidx36 = getelementptr %struct._object*, %struct._object** %39, i64 %idxprom33
  store %struct._object* %35, %struct._object** %arrayidx36, align 8
  %40 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra37 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %40, i32 0, i32 4
  %41 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra37, align 8
  %length38 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %41, i32 0, i32 1
  %42 = load i32, i32* %length38, align 4
  %inc39 = add i32 %42, 1
  store i32 %inc39, i32* %length38, align 4
  %43 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc40 = add i64 %43, 1
  store i64 %inc40, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.23, %if.then.4, %if.then
  %44 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %44
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_remove(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %element = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i32 0, i32 0), %struct._typeobject* @Element_Type, %struct._object** %element)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 4
  %2 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool1 = icmp ne %struct.ElementObjectExtra* %2, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.85, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.3
  %4 = load i32, i32* %i, align 4
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra4 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %5, i32 0, i32 4
  %6 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra4, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %6, i32 0, i32 1
  %7 = load i32, i32* %length, align 4
  %cmp = icmp slt i32 %4, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4
  %idxprom = sext i32 %8 to i64
  %9 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %9, i32 0, i32 4
  %10 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %10, i32 0, i32 3
  %11 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %11, i64 %idxprom
  %12 = load %struct._object*, %struct._object** %arrayidx, align 8
  %13 = load %struct._object*, %struct._object** %element, align 8
  %cmp6 = icmp eq %struct._object* %12, %13
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %for.body
  br label %for.end

if.end.8:                                         ; preds = %for.body
  %14 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %14 to i64
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra10 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 4
  %16 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra10, align 8
  %children11 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %16, i32 0, i32 3
  %17 = load %struct._object**, %struct._object*** %children11, align 8
  %arrayidx12 = getelementptr %struct._object*, %struct._object** %17, i64 %idxprom9
  %18 = load %struct._object*, %struct._object** %arrayidx12, align 8
  %19 = load %struct._object*, %struct._object** %element, align 8
  %call13 = call i32 @PyObject_RichCompareBool(%struct._object* %18, %struct._object* %19, i32 2)
  %cmp14 = icmp eq i32 %call13, 1
  br i1 %cmp14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.8
  br label %for.end

if.end.16:                                        ; preds = %if.end.8
  br label %for.inc

for.inc:                                          ; preds = %if.end.16
  %20 = load i32, i32* %i, align 4
  %inc = add i32 %20, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then.15, %if.then.7, %for.cond
  %21 = load i32, i32* %i, align 4
  %22 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra17 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %22, i32 0, i32 4
  %23 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra17, align 8
  %length18 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %23, i32 0, i32 1
  %24 = load i32, i32* %length18, align 4
  %cmp19 = icmp eq i32 %21, %24
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %for.end
  %25 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %25, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.85, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.21:                                        ; preds = %for.end
  br label %do.body

do.body:                                          ; preds = %if.end.21
  %26 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %26 to i64
  %27 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra23 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %27, i32 0, i32 4
  %28 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra23, align 8
  %children24 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %28, i32 0, i32 3
  %29 = load %struct._object**, %struct._object*** %children24, align 8
  %arrayidx25 = getelementptr %struct._object*, %struct._object** %29, i64 %idxprom22
  %30 = load %struct._object*, %struct._object** %arrayidx25, align 8
  store %struct._object* %30, %struct._object** %_py_decref_tmp, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0
  %32 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %32, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp26 = icmp ne i64 %dec, 0
  br i1 %cmp26, label %if.then.27, label %if.else

if.then.27:                                       ; preds = %do.body
  br label %if.end.28

if.else:                                          ; preds = %do.body
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %35(%struct._object* %36)
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.27
  br label %do.end

do.end:                                           ; preds = %if.end.28
  %37 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra29 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %37, i32 0, i32 4
  %38 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra29, align 8
  %length30 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %38, i32 0, i32 1
  %39 = load i32, i32* %length30, align 4
  %dec31 = add i32 %39, -1
  store i32 %dec31, i32* %length30, align 4
  br label %for.cond.32

for.cond.32:                                      ; preds = %for.inc.45, %do.end
  %40 = load i32, i32* %i, align 4
  %41 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra33 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %41, i32 0, i32 4
  %42 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra33, align 8
  %length34 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %42, i32 0, i32 1
  %43 = load i32, i32* %length34, align 4
  %cmp35 = icmp slt i32 %40, %43
  br i1 %cmp35, label %for.body.36, label %for.end.47

for.body.36:                                      ; preds = %for.cond.32
  %44 = load i32, i32* %i, align 4
  %add = add i32 %44, 1
  %idxprom37 = sext i32 %add to i64
  %45 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra38 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %45, i32 0, i32 4
  %46 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra38, align 8
  %children39 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %46, i32 0, i32 3
  %47 = load %struct._object**, %struct._object*** %children39, align 8
  %arrayidx40 = getelementptr %struct._object*, %struct._object** %47, i64 %idxprom37
  %48 = load %struct._object*, %struct._object** %arrayidx40, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom41 = sext i32 %49 to i64
  %50 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra42 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %50, i32 0, i32 4
  %51 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra42, align 8
  %children43 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %51, i32 0, i32 3
  %52 = load %struct._object**, %struct._object*** %children43, align 8
  %arrayidx44 = getelementptr %struct._object*, %struct._object** %52, i64 %idxprom41
  store %struct._object* %48, %struct._object** %arrayidx44, align 8
  br label %for.inc.45

for.inc.45:                                       ; preds = %for.body.36
  %53 = load i32, i32* %i, align 4
  %inc46 = add i32 %53, 1
  store i32 %inc46, i32* %i, align 4
  br label %for.cond.32

for.end.47:                                       ; preds = %for.cond.32
  %54 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc48 = add i64 %54, 1
  store i64 %inc48, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

return:                                           ; preds = %for.end.47, %if.then.20, %if.then.2, %if.then
  %55 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %55
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_iter(%struct.ElementObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %tag, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %1 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %0, %struct._object* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @element_iter.kwlist, i32 0, i32 0), %struct._object** %tag)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %3 = load %struct._object*, %struct._object** %tag, align 8
  %call1 = call %struct._object* @create_elementiter(%struct.ElementObject* %2, %struct._object* %3, i32 0)
  store %struct._object* %call1, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %4
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_itertext(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i32 0, i32 0))
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %call1 = call %struct._object* @create_elementiter(%struct.ElementObject* %1, %struct._object* @_Py_NoneStruct, i32 1)
  store %struct._object* %call1, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %2
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_iterfind(%struct.ElementObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %namespaces = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %namespaces, align 8
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule)
  %call1 = call i8* @PyModule_GetState(%struct._object* %call)
  %0 = bitcast i8* %call1 to %struct.elementtreestate*
  store %struct.elementtreestate* %0, %struct.elementtreestate** %st, align 8
  %1 = load %struct._object*, %struct._object** %args.addr, align 8
  %2 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call2 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %1, %struct._object* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @element_iterfind.kwlist, i32 0, i32 0), %struct._object** %tag, %struct._object** %namespaces)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %3, i32 0, i32 2
  %4 = load %struct._object*, %struct._object** %elementpath_obj, align 8
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %6 = load %struct._object*, %struct._object** %tag, align 8
  %7 = load %struct._object*, %struct._object** %namespaces, align 8
  %call3 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %4, %struct._Py_Identifier* @element_iterfind.PyId_iterfind, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct.ElementObject* %5, %struct._object* %6, %struct._object* %7)
  store %struct._object* %call3, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %8
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_getchildren(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %list = alloca %struct._object*, align 8
  %item = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i32 0, i32 0))
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 4
  %2 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool1 = icmp ne %struct.ElementObjectExtra* %2, null
  br i1 %tobool1, label %if.end.4, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %call3 = call %struct._object* @PyList_New(i64 0)
  store %struct._object* %call3, %struct._object** %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 4
  %4 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %4, i32 0, i32 1
  %5 = load i32, i32* %length, align 4
  %conv = sext i32 %5 to i64
  %call6 = call %struct._object* @PyList_New(i64 %conv)
  store %struct._object* %call6, %struct._object** %list, align 8
  %6 = load %struct._object*, %struct._object** %list, align 8
  %tobool7 = icmp ne %struct._object* %6, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.9:                                         ; preds = %if.end.4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.9
  %7 = load i32, i32* %i, align 4
  %8 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra10 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %8, i32 0, i32 4
  %9 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra10, align 8
  %length11 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %9, i32 0, i32 1
  %10 = load i32, i32* %length11, align 4
  %cmp = icmp slt i32 %7, %10
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4
  %idxprom = sext i32 %11 to i64
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra13 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %12, i32 0, i32 4
  %13 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra13, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %13, i32 0, i32 3
  %14 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %14, i64 %idxprom
  %15 = load %struct._object*, %struct._object** %arrayidx, align 8
  store %struct._object* %15, %struct._object** %item, align 8
  %16 = load %struct._object*, %struct._object** %item, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0
  %17 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %17, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %18 = load %struct._object*, %struct._object** %item, align 8
  %19 = load i32, i32* %i, align 4
  %idxprom14 = sext i32 %19 to i64
  %20 = load %struct._object*, %struct._object** %list, align 8
  %21 = bitcast %struct._object* %20 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %21, i32 0, i32 1
  %22 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx15 = getelementptr %struct._object*, %struct._object** %22, i64 %idxprom14
  store %struct._object* %18, %struct._object** %arrayidx15, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4
  %inc16 = add i32 %23, 1
  store i32 %inc16, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %24 = load %struct._object*, %struct._object** %list, align 8
  store %struct._object* %24, %struct._object** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then.8, %if.then.2, %if.then
  %25 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %25
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_items(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0))
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 4
  %2 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool1 = icmp ne %struct.ElementObjectExtra* %2, null
  br i1 %tobool1, label %lor.lhs.false, label %if.then.3

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 4
  %4 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %4, i32 0, i32 0
  %5 = load %struct._object*, %struct._object** %attrib, align 8
  %cmp = icmp eq %struct._object* %5, @_Py_NoneStruct
  br i1 %cmp, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %call4 = call %struct._object* @PyList_New(i64 0)
  store %struct._object* %call4, %struct._object** %retval
  br label %return

if.end.5:                                         ; preds = %lor.lhs.false
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra6 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %6, i32 0, i32 4
  %7 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra6, align 8
  %attrib7 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %7, i32 0, i32 0
  %8 = load %struct._object*, %struct._object** %attrib7, align 8
  %call8 = call %struct._object* @PyDict_Items(%struct._object* %8)
  store %struct._object* %call8, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.5, %if.then.3, %if.then
  %9 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %9
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_keys(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i32 0, i32 0))
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 4
  %2 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool1 = icmp ne %struct.ElementObjectExtra* %2, null
  br i1 %tobool1, label %lor.lhs.false, label %if.then.3

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 4
  %4 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %4, i32 0, i32 0
  %5 = load %struct._object*, %struct._object** %attrib, align 8
  %cmp = icmp eq %struct._object* %5, @_Py_NoneStruct
  br i1 %cmp, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %call4 = call %struct._object* @PyList_New(i64 0)
  store %struct._object* %call4, %struct._object** %retval
  br label %return

if.end.5:                                         ; preds = %lor.lhs.false
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra6 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %6, i32 0, i32 4
  %7 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra6, align 8
  %attrib7 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %7, i32 0, i32 0
  %8 = load %struct._object*, %struct._object** %attrib7, align 8
  %call8 = call %struct._object* @PyDict_Keys(%struct._object* %8)
  store %struct._object* %call8, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.5, %if.then.3, %if.then
  %9 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %9
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_makeelement(%struct._object* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %elem = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kw, %struct._object** %kw.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.93, i32 0, i32 0), %struct._object** %tag, %struct._object** %attrib)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %attrib, align 8
  %call1 = call %struct._object* @PyDict_Copy(%struct._object* %1)
  store %struct._object* %call1, %struct._object** %attrib, align 8
  %2 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool2 = icmp ne %struct._object* %2, null
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  %3 = load %struct._object*, %struct._object** %tag, align 8
  %4 = load %struct._object*, %struct._object** %attrib, align 8
  %call5 = call %struct._object* @create_new_element(%struct._object* %3, %struct._object* %4)
  store %struct._object* %call5, %struct._object** %elem, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.4
  %5 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %5, %struct._object** %_py_decref_tmp, align 8
  %6 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0
  %7 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %7, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %do.body
  br label %if.end.7

if.else:                                          ; preds = %do.body
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 4
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %10(%struct._object* %11)
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  br label %do.end

do.end:                                           ; preds = %if.end.7
  %12 = load %struct._object*, %struct._object** %elem, align 8
  store %struct._object* %12, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end, %if.then.3, %if.then
  %13 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %13
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_copy(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %element = alloca %struct.ElementObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp40 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i32 0, i32 0))
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 1
  %2 = load %struct._object*, %struct._object** %tag, align 8
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 4
  %4 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool1 = icmp ne %struct.ElementObjectExtra* %4, null
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %5, i32 0, i32 4
  %6 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %6, i32 0, i32 0
  %7 = load %struct._object*, %struct._object** %attrib, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %7, %cond.true ], [ @_Py_NoneStruct, %cond.false ]
  %call3 = call %struct._object* @create_new_element(%struct._object* %2, %struct._object* %cond)
  %8 = bitcast %struct._object* %call3 to %struct.ElementObject*
  store %struct.ElementObject* %8, %struct.ElementObject** %element, align 8
  %9 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %tobool4 = icmp ne %struct.ElementObject* %9, null
  br i1 %tobool4, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.6:                                         ; preds = %cond.end
  br label %do.body

do.body:                                          ; preds = %if.end.6
  %10 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 2
  %11 = load %struct._object*, %struct._object** %text, align 8
  %12 = ptrtoint %struct._object* %11 to i64
  %and = and i64 %12, -2
  %13 = inttoptr i64 %and to %struct._object*
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0
  %15 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %15, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %do.body
  br label %if.end.8

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %18(%struct._object* %19)
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  br label %do.end

do.end:                                           ; preds = %if.end.8
  %20 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text9 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %20, i32 0, i32 2
  %21 = load %struct._object*, %struct._object** %text9, align 8
  %22 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %text10 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %22, i32 0, i32 2
  store %struct._object* %21, %struct._object** %text10, align 8
  %23 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %text11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %23, i32 0, i32 2
  %24 = load %struct._object*, %struct._object** %text11, align 8
  %25 = ptrtoint %struct._object* %24 to i64
  %and12 = and i64 %25, -2
  %26 = inttoptr i64 %and12 to %struct._object*
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0
  %27 = load i64, i64* %ob_refcnt13, align 8
  %inc = add i64 %27, 1
  store i64 %inc, i64* %ob_refcnt13, align 8
  br label %do.body.14

do.body.14:                                       ; preds = %do.end
  %28 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %28, i32 0, i32 3
  %29 = load %struct._object*, %struct._object** %tail, align 8
  %30 = ptrtoint %struct._object* %29 to i64
  %and16 = and i64 %30, -2
  %31 = inttoptr i64 %and16 to %struct._object*
  store %struct._object* %31, %struct._object** %_py_decref_tmp15, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0
  %33 = load i64, i64* %ob_refcnt17, align 8
  %dec18 = add i64 %33, -1
  store i64 %dec18, i64* %ob_refcnt17, align 8
  %cmp19 = icmp ne i64 %dec18, 0
  br i1 %cmp19, label %if.then.20, label %if.else.21

if.then.20:                                       ; preds = %do.body.14
  br label %if.end.24

if.else.21:                                       ; preds = %do.body.14
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8
  call void %36(%struct._object* %37)
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  br label %do.end.25

do.end.25:                                        ; preds = %if.end.24
  %38 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail26 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %38, i32 0, i32 3
  %39 = load %struct._object*, %struct._object** %tail26, align 8
  %40 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %tail27 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %40, i32 0, i32 3
  store %struct._object* %39, %struct._object** %tail27, align 8
  %41 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %tail28 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %41, i32 0, i32 3
  %42 = load %struct._object*, %struct._object** %tail28, align 8
  %43 = ptrtoint %struct._object* %42 to i64
  %and29 = and i64 %43, -2
  %44 = inttoptr i64 %and29 to %struct._object*
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0
  %45 = load i64, i64* %ob_refcnt30, align 8
  %inc31 = add i64 %45, 1
  store i64 %inc31, i64* %ob_refcnt30, align 8
  %46 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra32 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %46, i32 0, i32 4
  %47 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra32, align 8
  %tobool33 = icmp ne %struct.ElementObjectExtra* %47, null
  br i1 %tobool33, label %if.then.34, label %if.end.70

if.then.34:                                       ; preds = %do.end.25
  %48 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %49 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra35 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %49, i32 0, i32 4
  %50 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra35, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %50, i32 0, i32 1
  %51 = load i32, i32* %length, align 4
  %call36 = call i32 @element_resize(%struct.ElementObject* %48, i32 %51)
  %cmp37 = icmp slt i32 %call36, 0
  br i1 %cmp37, label %if.then.38, label %if.end.50

if.then.38:                                       ; preds = %if.then.34
  br label %do.body.39

do.body.39:                                       ; preds = %if.then.38
  %52 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %53 = bitcast %struct.ElementObject* %52 to %struct._object*
  store %struct._object* %53, %struct._object** %_py_decref_tmp40, align 8
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0
  %55 = load i64, i64* %ob_refcnt41, align 8
  %dec42 = add i64 %55, -1
  store i64 %dec42, i64* %ob_refcnt41, align 8
  %cmp43 = icmp ne i64 %dec42, 0
  br i1 %cmp43, label %if.then.44, label %if.else.45

if.then.44:                                       ; preds = %do.body.39
  br label %if.end.48

if.else.45:                                       ; preds = %do.body.39
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 1
  %57 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8
  %tp_dealloc47 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %57, i32 0, i32 4
  %58 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc47, align 8
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8
  call void %58(%struct._object* %59)
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.45, %if.then.44
  br label %do.end.49

do.end.49:                                        ; preds = %if.end.48
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.50:                                        ; preds = %if.then.34
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.50
  %60 = load i32, i32* %i, align 4
  %61 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra51 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %61, i32 0, i32 4
  %62 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra51, align 8
  %length52 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %62, i32 0, i32 1
  %63 = load i32, i32* %length52, align 4
  %cmp53 = icmp slt i32 %60, %63
  br i1 %cmp53, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %64 = load i32, i32* %i, align 4
  %idxprom = sext i32 %64 to i64
  %65 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra54 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %65, i32 0, i32 4
  %66 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra54, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %66, i32 0, i32 3
  %67 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %67, i64 %idxprom
  %68 = load %struct._object*, %struct._object** %arrayidx, align 8
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0
  %69 = load i64, i64* %ob_refcnt55, align 8
  %inc56 = add i64 %69, 1
  store i64 %inc56, i64* %ob_refcnt55, align 8
  %70 = load i32, i32* %i, align 4
  %idxprom57 = sext i32 %70 to i64
  %71 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra58 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %71, i32 0, i32 4
  %72 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra58, align 8
  %children59 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %72, i32 0, i32 3
  %73 = load %struct._object**, %struct._object*** %children59, align 8
  %arrayidx60 = getelementptr %struct._object*, %struct._object** %73, i64 %idxprom57
  %74 = load %struct._object*, %struct._object** %arrayidx60, align 8
  %75 = load i32, i32* %i, align 4
  %idxprom61 = sext i32 %75 to i64
  %76 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %extra62 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %76, i32 0, i32 4
  %77 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra62, align 8
  %children63 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %77, i32 0, i32 3
  %78 = load %struct._object**, %struct._object*** %children63, align 8
  %arrayidx64 = getelementptr %struct._object*, %struct._object** %78, i64 %idxprom61
  store %struct._object* %74, %struct._object** %arrayidx64, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %79 = load i32, i32* %i, align 4
  %inc65 = add i32 %79, 1
  store i32 %inc65, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %80 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra66 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %80, i32 0, i32 4
  %81 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra66, align 8
  %length67 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %81, i32 0, i32 1
  %82 = load i32, i32* %length67, align 4
  %83 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %extra68 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %83, i32 0, i32 4
  %84 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra68, align 8
  %length69 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %84, i32 0, i32 1
  store i32 %82, i32* %length69, align 4
  br label %if.end.70

if.end.70:                                        ; preds = %for.end, %do.end.25
  %85 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %86 = bitcast %struct.ElementObject* %85 to %struct._object*
  store %struct._object* %86, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.70, %do.end.49, %if.then.5, %if.then
  %87 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %87
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_deepcopy(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %element = alloca %struct.ElementObject*, align 8
  %tag = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %text = alloca %struct._object*, align 8
  %tail = alloca %struct._object*, align 8
  %id = alloca %struct._object*, align 8
  %memo = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp20 = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  %_py_decref_tmp50 = alloca %struct._object*, align 8
  %_py_decref_tmp72 = alloca %struct._object*, align 8
  %child = alloca %struct._object*, align 8
  %_py_decref_tmp122 = alloca %struct._object*, align 8
  %_py_decref_tmp136 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i32 0, i32 0), %struct._object** %memo)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 1
  %2 = load %struct._object*, %struct._object** %tag1, align 8
  %3 = load %struct._object*, %struct._object** %memo, align 8
  %call2 = call %struct._object* @deepcopy(%struct._object* %2, %struct._object* %3)
  store %struct._object* %call2, %struct._object** %tag, align 8
  %4 = load %struct._object*, %struct._object** %tag, align 8
  %tobool3 = icmp ne %struct._object* %4, null
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.5:                                         ; preds = %if.end
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %5, i32 0, i32 4
  %6 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool6 = icmp ne %struct.ElementObjectExtra* %6, null
  br i1 %tobool6, label %if.then.7, label %if.else.16

if.then.7:                                        ; preds = %if.end.5
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra8 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %7, i32 0, i32 4
  %8 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra8, align 8
  %attrib9 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %8, i32 0, i32 0
  %9 = load %struct._object*, %struct._object** %attrib9, align 8
  %10 = load %struct._object*, %struct._object** %memo, align 8
  %call10 = call %struct._object* @deepcopy(%struct._object* %9, %struct._object* %10)
  store %struct._object* %call10, %struct._object** %attrib, align 8
  %11 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool11 = icmp ne %struct._object* %11, null
  br i1 %tobool11, label %if.end.15, label %if.then.12

if.then.12:                                       ; preds = %if.then.7
  br label %do.body

do.body:                                          ; preds = %if.then.12
  %12 = load %struct._object*, %struct._object** %tag, align 8
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %14, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.13, label %if.else

if.then.13:                                       ; preds = %do.body
  br label %if.end.14

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %17(%struct._object* %18)
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  br label %do.end

do.end:                                           ; preds = %if.end.14
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.15:                                        ; preds = %if.then.7
  br label %if.end.17

if.else.16:                                       ; preds = %if.end.5
  %19 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %19, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %attrib, align 8
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.16, %if.end.15
  %20 = load %struct._object*, %struct._object** %tag, align 8
  %21 = load %struct._object*, %struct._object** %attrib, align 8
  %call18 = call %struct._object* @create_new_element(%struct._object* %20, %struct._object* %21)
  %22 = bitcast %struct._object* %call18 to %struct.ElementObject*
  store %struct.ElementObject* %22, %struct.ElementObject** %element, align 8
  br label %do.body.19

do.body.19:                                       ; preds = %if.end.17
  %23 = load %struct._object*, %struct._object** %tag, align 8
  store %struct._object* %23, %struct._object** %_py_decref_tmp20, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0
  %25 = load i64, i64* %ob_refcnt21, align 8
  %dec22 = add i64 %25, -1
  store i64 %dec22, i64* %ob_refcnt21, align 8
  %cmp23 = icmp ne i64 %dec22, 0
  br i1 %cmp23, label %if.then.24, label %if.else.25

if.then.24:                                       ; preds = %do.body.19
  br label %if.end.28

if.else.25:                                       ; preds = %do.body.19
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8
  %tp_dealloc27 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc27, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8
  call void %28(%struct._object* %29)
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.25, %if.then.24
  br label %do.end.29

do.end.29:                                        ; preds = %if.end.28
  br label %do.body.30

do.body.30:                                       ; preds = %do.end.29
  %30 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %30, %struct._object** %_py_decref_tmp31, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0
  %32 = load i64, i64* %ob_refcnt32, align 8
  %dec33 = add i64 %32, -1
  store i64 %dec33, i64* %ob_refcnt32, align 8
  %cmp34 = icmp ne i64 %dec33, 0
  br i1 %cmp34, label %if.then.35, label %if.else.36

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39

if.else.36:                                       ; preds = %do.body.30
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  call void %35(%struct._object* %36)
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  br label %do.end.40

do.end.40:                                        ; preds = %if.end.39
  %37 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %tobool41 = icmp ne %struct.ElementObject* %37, null
  br i1 %tobool41, label %if.end.43, label %if.then.42

if.then.42:                                       ; preds = %do.end.40
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.43:                                        ; preds = %do.end.40
  %38 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text44 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %38, i32 0, i32 2
  %39 = load %struct._object*, %struct._object** %text44, align 8
  %40 = ptrtoint %struct._object* %39 to i64
  %and = and i64 %40, -2
  %41 = inttoptr i64 %and to %struct._object*
  %42 = load %struct._object*, %struct._object** %memo, align 8
  %call45 = call %struct._object* @deepcopy(%struct._object* %41, %struct._object* %42)
  store %struct._object* %call45, %struct._object** %text, align 8
  %43 = load %struct._object*, %struct._object** %text, align 8
  %tobool46 = icmp ne %struct._object* %43, null
  br i1 %tobool46, label %if.end.48, label %if.then.47

if.then.47:                                       ; preds = %if.end.43
  br label %error

if.end.48:                                        ; preds = %if.end.43
  br label %do.body.49

do.body.49:                                       ; preds = %if.end.48
  %44 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %text51 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %44, i32 0, i32 2
  %45 = load %struct._object*, %struct._object** %text51, align 8
  store %struct._object* %45, %struct._object** %_py_decref_tmp50, align 8
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8
  %ob_refcnt52 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0
  %47 = load i64, i64* %ob_refcnt52, align 8
  %dec53 = add i64 %47, -1
  store i64 %dec53, i64* %ob_refcnt52, align 8
  %cmp54 = icmp ne i64 %dec53, 0
  br i1 %cmp54, label %if.then.55, label %if.else.56

if.then.55:                                       ; preds = %do.body.49
  br label %if.end.59

if.else.56:                                       ; preds = %do.body.49
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8
  %ob_type57 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type57, align 8
  %tp_dealloc58 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc58, align 8
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8
  call void %50(%struct._object* %51)
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.56, %if.then.55
  br label %do.end.60

do.end.60:                                        ; preds = %if.end.59
  %52 = load %struct._object*, %struct._object** %text, align 8
  %53 = ptrtoint %struct._object* %52 to i64
  %and61 = and i64 %53, -2
  %54 = inttoptr i64 %and61 to %struct._object*
  %55 = ptrtoint %struct._object* %54 to i64
  %56 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text62 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %56, i32 0, i32 2
  %57 = load %struct._object*, %struct._object** %text62, align 8
  %58 = ptrtoint %struct._object* %57 to i64
  %and63 = and i64 %58, 1
  %or = or i64 %55, %and63
  %59 = inttoptr i64 %or to i8*
  %60 = bitcast i8* %59 to %struct._object*
  %61 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %text64 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %61, i32 0, i32 2
  store %struct._object* %60, %struct._object** %text64, align 8
  %62 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail65 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %62, i32 0, i32 3
  %63 = load %struct._object*, %struct._object** %tail65, align 8
  %64 = ptrtoint %struct._object* %63 to i64
  %and66 = and i64 %64, -2
  %65 = inttoptr i64 %and66 to %struct._object*
  %66 = load %struct._object*, %struct._object** %memo, align 8
  %call67 = call %struct._object* @deepcopy(%struct._object* %65, %struct._object* %66)
  store %struct._object* %call67, %struct._object** %tail, align 8
  %67 = load %struct._object*, %struct._object** %tail, align 8
  %tobool68 = icmp ne %struct._object* %67, null
  br i1 %tobool68, label %if.end.70, label %if.then.69

if.then.69:                                       ; preds = %do.end.60
  br label %error

if.end.70:                                        ; preds = %do.end.60
  br label %do.body.71

do.body.71:                                       ; preds = %if.end.70
  %68 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %tail73 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %68, i32 0, i32 3
  %69 = load %struct._object*, %struct._object** %tail73, align 8
  store %struct._object* %69, %struct._object** %_py_decref_tmp72, align 8
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 0
  %71 = load i64, i64* %ob_refcnt74, align 8
  %dec75 = add i64 %71, -1
  store i64 %dec75, i64* %ob_refcnt74, align 8
  %cmp76 = icmp ne i64 %dec75, 0
  br i1 %cmp76, label %if.then.77, label %if.else.78

if.then.77:                                       ; preds = %do.body.71
  br label %if.end.81

if.else.78:                                       ; preds = %do.body.71
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8
  %ob_type79 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 1
  %73 = load %struct._typeobject*, %struct._typeobject** %ob_type79, align 8
  %tp_dealloc80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %73, i32 0, i32 4
  %74 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc80, align 8
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8
  call void %74(%struct._object* %75)
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.78, %if.then.77
  br label %do.end.82

do.end.82:                                        ; preds = %if.end.81
  %76 = load %struct._object*, %struct._object** %tail, align 8
  %77 = ptrtoint %struct._object* %76 to i64
  %and83 = and i64 %77, -2
  %78 = inttoptr i64 %and83 to %struct._object*
  %79 = ptrtoint %struct._object* %78 to i64
  %80 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail84 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %80, i32 0, i32 3
  %81 = load %struct._object*, %struct._object** %tail84, align 8
  %82 = ptrtoint %struct._object* %81 to i64
  %and85 = and i64 %82, 1
  %or86 = or i64 %79, %and85
  %83 = inttoptr i64 %or86 to i8*
  %84 = bitcast i8* %83 to %struct._object*
  %85 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %tail87 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %85, i32 0, i32 3
  store %struct._object* %84, %struct._object** %tail87, align 8
  %86 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra88 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %86, i32 0, i32 4
  %87 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra88, align 8
  %tobool89 = icmp ne %struct.ElementObjectExtra* %87, null
  br i1 %tobool89, label %if.then.90, label %if.end.115

if.then.90:                                       ; preds = %do.end.82
  %88 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %89 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra91 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %89, i32 0, i32 4
  %90 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra91, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %90, i32 0, i32 1
  %91 = load i32, i32* %length, align 4
  %call92 = call i32 @element_resize(%struct.ElementObject* %88, i32 %91)
  %cmp93 = icmp slt i32 %call92, 0
  br i1 %cmp93, label %if.then.94, label %if.end.95

if.then.94:                                       ; preds = %if.then.90
  br label %error

if.end.95:                                        ; preds = %if.then.90
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.95
  %92 = load i32, i32* %i, align 4
  %93 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra96 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %93, i32 0, i32 4
  %94 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra96, align 8
  %length97 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %94, i32 0, i32 1
  %95 = load i32, i32* %length97, align 4
  %cmp98 = icmp slt i32 %92, %95
  br i1 %cmp98, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %96 = load i32, i32* %i, align 4
  %idxprom = sext i32 %96 to i64
  %97 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra99 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %97, i32 0, i32 4
  %98 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra99, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %98, i32 0, i32 3
  %99 = load %struct._object**, %struct._object*** %children, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %99, i64 %idxprom
  %100 = load %struct._object*, %struct._object** %arrayidx, align 8
  %101 = load %struct._object*, %struct._object** %memo, align 8
  %call100 = call %struct._object* @deepcopy(%struct._object* %100, %struct._object* %101)
  store %struct._object* %call100, %struct._object** %child, align 8
  %102 = load %struct._object*, %struct._object** %child, align 8
  %tobool101 = icmp ne %struct._object* %102, null
  br i1 %tobool101, label %if.end.105, label %if.then.102

if.then.102:                                      ; preds = %for.body
  %103 = load i32, i32* %i, align 4
  %104 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %extra103 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %104, i32 0, i32 4
  %105 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra103, align 8
  %length104 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %105, i32 0, i32 1
  store i32 %103, i32* %length104, align 4
  br label %error

if.end.105:                                       ; preds = %for.body
  %106 = load %struct._object*, %struct._object** %child, align 8
  %107 = load i32, i32* %i, align 4
  %idxprom106 = sext i32 %107 to i64
  %108 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %extra107 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %108, i32 0, i32 4
  %109 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra107, align 8
  %children108 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %109, i32 0, i32 3
  %110 = load %struct._object**, %struct._object*** %children108, align 8
  %arrayidx109 = getelementptr %struct._object*, %struct._object** %110, i64 %idxprom106
  store %struct._object* %106, %struct._object** %arrayidx109, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end.105
  %111 = load i32, i32* %i, align 4
  %inc110 = add i32 %111, 1
  store i32 %inc110, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %112 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra111 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %112, i32 0, i32 4
  %113 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra111, align 8
  %length112 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %113, i32 0, i32 1
  %114 = load i32, i32* %length112, align 4
  %115 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %extra113 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %115, i32 0, i32 4
  %116 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra113, align 8
  %length114 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %116, i32 0, i32 1
  store i32 %114, i32* %length114, align 4
  br label %if.end.115

if.end.115:                                       ; preds = %for.end, %do.end.82
  %117 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %118 = ptrtoint %struct.ElementObject* %117 to i64
  %call116 = call %struct._object* @PyLong_FromSsize_t(i64 %118)
  store %struct._object* %call116, %struct._object** %id, align 8
  %119 = load %struct._object*, %struct._object** %id, align 8
  %tobool117 = icmp ne %struct._object* %119, null
  br i1 %tobool117, label %if.end.119, label %if.then.118

if.then.118:                                      ; preds = %if.end.115
  br label %error

if.end.119:                                       ; preds = %if.end.115
  %120 = load %struct._object*, %struct._object** %memo, align 8
  %121 = load %struct._object*, %struct._object** %id, align 8
  %122 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %123 = bitcast %struct.ElementObject* %122 to %struct._object*
  %call120 = call i32 @PyDict_SetItem(%struct._object* %120, %struct._object* %121, %struct._object* %123)
  store i32 %call120, i32* %i, align 4
  br label %do.body.121

do.body.121:                                      ; preds = %if.end.119
  %124 = load %struct._object*, %struct._object** %id, align 8
  store %struct._object* %124, %struct._object** %_py_decref_tmp122, align 8
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8
  %ob_refcnt123 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 0
  %126 = load i64, i64* %ob_refcnt123, align 8
  %dec124 = add i64 %126, -1
  store i64 %dec124, i64* %ob_refcnt123, align 8
  %cmp125 = icmp ne i64 %dec124, 0
  br i1 %cmp125, label %if.then.126, label %if.else.127

if.then.126:                                      ; preds = %do.body.121
  br label %if.end.130

if.else.127:                                      ; preds = %do.body.121
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8
  %ob_type128 = getelementptr inbounds %struct._object, %struct._object* %127, i32 0, i32 1
  %128 = load %struct._typeobject*, %struct._typeobject** %ob_type128, align 8
  %tp_dealloc129 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %128, i32 0, i32 4
  %129 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc129, align 8
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8
  call void %129(%struct._object* %130)
  br label %if.end.130

if.end.130:                                       ; preds = %if.else.127, %if.then.126
  br label %do.end.131

do.end.131:                                       ; preds = %if.end.130
  %131 = load i32, i32* %i, align 4
  %cmp132 = icmp slt i32 %131, 0
  br i1 %cmp132, label %if.then.133, label %if.end.134

if.then.133:                                      ; preds = %do.end.131
  br label %error

if.end.134:                                       ; preds = %do.end.131
  %132 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %133 = bitcast %struct.ElementObject* %132 to %struct._object*
  store %struct._object* %133, %struct._object** %retval
  br label %return

error:                                            ; preds = %if.then.133, %if.then.118, %if.then.102, %if.then.94, %if.then.69, %if.then.47
  br label %do.body.135

do.body.135:                                      ; preds = %error
  %134 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8
  %135 = bitcast %struct.ElementObject* %134 to %struct._object*
  store %struct._object* %135, %struct._object** %_py_decref_tmp136, align 8
  %136 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8
  %ob_refcnt137 = getelementptr inbounds %struct._object, %struct._object* %136, i32 0, i32 0
  %137 = load i64, i64* %ob_refcnt137, align 8
  %dec138 = add i64 %137, -1
  store i64 %dec138, i64* %ob_refcnt137, align 8
  %cmp139 = icmp ne i64 %dec138, 0
  br i1 %cmp139, label %if.then.140, label %if.else.141

if.then.140:                                      ; preds = %do.body.135
  br label %if.end.144

if.else.141:                                      ; preds = %do.body.135
  %138 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8
  %ob_type142 = getelementptr inbounds %struct._object, %struct._object* %138, i32 0, i32 1
  %139 = load %struct._typeobject*, %struct._typeobject** %ob_type142, align 8
  %tp_dealloc143 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %139, i32 0, i32 4
  %140 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc143, align 8
  %141 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8
  call void %140(%struct._object* %141)
  br label %if.end.144

if.end.144:                                       ; preds = %if.else.141, %if.then.140
  br label %do.end.145

do.end.145:                                       ; preds = %if.end.144
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.145, %if.end.134, %if.then.42, %do.end, %if.then.4, %if.then
  %142 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %142
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_sizeof(%struct._object* %myself, %struct._object* %args) #0 {
entry:
  %myself.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %self = alloca %struct.ElementObject*, align 8
  %result = alloca i64, align 8
  store %struct._object* %myself, %struct._object** %myself.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %myself.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct.ElementObject*
  store %struct.ElementObject* %1, %struct.ElementObject** %self, align 8
  store i64 56, i64* %result, align 8
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4
  %3 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool = icmp ne %struct.ElementObjectExtra* %3, null
  br i1 %tobool, label %if.then, label %if.end.6

if.then:                                          ; preds = %entry
  %4 = load i64, i64* %result, align 8
  %add = add i64 %4, 56
  store i64 %add, i64* %result, align 8
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %5, i32 0, i32 4
  %6 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %6, i32 0, i32 3
  %7 = load %struct._object**, %struct._object*** %children, align 8
  %8 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %8, i32 0, i32 4
  %9 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8
  %_children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %9, i32 0, i32 4
  %arraydecay = getelementptr inbounds [4 x %struct._object*], [4 x %struct._object*]* %_children, i32 0, i32 0
  %cmp = icmp ne %struct._object** %7, %arraydecay
  br i1 %cmp, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  %10 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8
  %extra4 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 4
  %11 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra4, align 8
  %allocated = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %11, i32 0, i32 2
  %12 = load i32, i32* %allocated, align 4
  %conv = sext i32 %12 to i64
  %mul = mul i64 8, %conv
  %13 = load i64, i64* %result, align 8
  %add5 = add i64 %13, %mul
  store i64 %add5, i64* %result, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.3, %if.then
  br label %if.end.6

if.end.6:                                         ; preds = %if.end, %entry
  %14 = load i64, i64* %result, align 8
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %14)
  ret %struct._object* %call
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_getstate(%struct.ElementObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %i = alloca i32, align 4
  %noattrib = alloca i32, align 4
  %instancedict = alloca %struct._object*, align 8
  %children = alloca %struct._object*, align 8
  %child = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp45 = alloca %struct._object*, align 8
  %_py_decref_tmp63 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* null, %struct._object** %instancedict, align 8
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 4
  %1 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %tobool = icmp ne %struct.ElementObjectExtra* %1, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4
  %3 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %3, i32 0, i32 1
  %4 = load i32, i32* %length, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ 0, %cond.false ]
  %conv = sext i32 %cond to i64
  %call = call %struct._object* @PyList_New(i64 %conv)
  store %struct._object* %call, %struct._object** %children, align 8
  %5 = load %struct._object*, %struct._object** %children, align 8
  %tobool2 = icmp ne %struct._object* %5, null
  br i1 %tobool2, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %cond.end
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4
  %conv3 = sext i32 %6 to i64
  %7 = load %struct._object*, %struct._object** %children, align 8
  %8 = bitcast %struct._object* %7 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i32 0, i32 1
  %9 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %conv3, %9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4
  %idxprom = sext i32 %10 to i64
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 4
  %12 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8
  %children6 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %12, i32 0, i32 3
  %13 = load %struct._object**, %struct._object*** %children6, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %13, i64 %idxprom
  %14 = load %struct._object*, %struct._object** %arrayidx, align 8
  store %struct._object* %14, %struct._object** %child, align 8
  %15 = load %struct._object*, %struct._object** %child, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0
  %16 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %16, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %17 = load %struct._object*, %struct._object** %child, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %18 to i64
  %19 = load %struct._object*, %struct._object** %children, align 8
  %20 = bitcast %struct._object* %19 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %20, i32 0, i32 1
  %21 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx8 = getelementptr %struct._object*, %struct._object** %21, i64 %idxprom7
  store %struct._object* %17, %struct._object** %arrayidx8, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4
  %inc9 = add i32 %22, 1
  store i32 %inc9, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %23 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra10 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %23, i32 0, i32 4
  %24 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra10, align 8
  %cmp11 = icmp eq %struct.ElementObjectExtra* %24, null
  br i1 %cmp11, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %for.end
  %25 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra13 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %25, i32 0, i32 4
  %26 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra13, align 8
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %26, i32 0, i32 0
  %27 = load %struct._object*, %struct._object** %attrib, align 8
  %cmp14 = icmp eq %struct._object* %27, @_Py_NoneStruct
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %for.end
  %28 = phi i1 [ true, %for.end ], [ %cmp14, %lor.rhs ]
  %lor.ext = zext i1 %28 to i32
  store i32 %lor.ext, i32* %noattrib, align 4
  %29 = load i32, i32* %noattrib, align 4
  %tobool16 = icmp ne i32 %29, 0
  br i1 %tobool16, label %if.then.17, label %if.else

if.then.17:                                       ; preds = %lor.end
  %30 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %30, i32 0, i32 1
  %31 = load %struct._object*, %struct._object** %tag, align 8
  %32 = load %struct._object*, %struct._object** %children, align 8
  %33 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %33, i32 0, i32 2
  %34 = load %struct._object*, %struct._object** %text, align 8
  %35 = ptrtoint %struct._object* %34 to i64
  %and = and i64 %35, -2
  %36 = inttoptr i64 %and to %struct._object*
  %37 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %37, i32 0, i32 3
  %38 = load %struct._object*, %struct._object** %tail, align 8
  %39 = ptrtoint %struct._object* %38 to i64
  %and18 = and i64 %39, -2
  %40 = inttoptr i64 %and18 to %struct._object*
  %call19 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), %struct._object* %31, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), %struct._object* %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), %struct._object* %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), %struct._object* %40)
  store %struct._object* %call19, %struct._object** %instancedict, align 8
  br label %if.end.28

if.else:                                          ; preds = %lor.end
  %41 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag20 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %41, i32 0, i32 1
  %42 = load %struct._object*, %struct._object** %tag20, align 8
  %43 = load %struct._object*, %struct._object** %children, align 8
  %44 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra21 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %44, i32 0, i32 4
  %45 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra21, align 8
  %attrib22 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %45, i32 0, i32 0
  %46 = load %struct._object*, %struct._object** %attrib22, align 8
  %47 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text23 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %47, i32 0, i32 2
  %48 = load %struct._object*, %struct._object** %text23, align 8
  %49 = ptrtoint %struct._object* %48 to i64
  %and24 = and i64 %49, -2
  %50 = inttoptr i64 %and24 to %struct._object*
  %51 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail25 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %51, i32 0, i32 3
  %52 = load %struct._object*, %struct._object** %tail25, align 8
  %53 = ptrtoint %struct._object* %52 to i64
  %and26 = and i64 %53, -2
  %54 = inttoptr i64 %and26 to %struct._object*
  %call27 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), %struct._object* %42, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), %struct._object* %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), %struct._object* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), %struct._object* %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), %struct._object* %54)
  store %struct._object* %call27, %struct._object** %instancedict, align 8
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.17
  %55 = load %struct._object*, %struct._object** %instancedict, align 8
  %tobool29 = icmp ne %struct._object* %55, null
  br i1 %tobool29, label %if.then.30, label %if.else.37

if.then.30:                                       ; preds = %if.end.28
  br label %do.body

do.body:                                          ; preds = %if.then.30
  %56 = load %struct._object*, %struct._object** %children, align 8
  store %struct._object* %56, %struct._object** %_py_decref_tmp, align 8
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0
  %58 = load i64, i64* %ob_refcnt31, align 8
  %dec = add i64 %58, -1
  store i64 %dec, i64* %ob_refcnt31, align 8
  %cmp32 = icmp ne i64 %dec, 0
  br i1 %cmp32, label %if.then.34, label %if.else.35

if.then.34:                                       ; preds = %do.body
  br label %if.end.36

if.else.35:                                       ; preds = %do.body
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %61(%struct._object* %62)
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.35, %if.then.34
  br label %do.end

do.end:                                           ; preds = %if.end.36
  %63 = load %struct._object*, %struct._object** %instancedict, align 8
  store %struct._object* %63, %struct._object** %retval
  br label %return

if.else.37:                                       ; preds = %if.end.28
  store i32 0, i32* %i, align 4
  br label %for.cond.38

for.cond.38:                                      ; preds = %for.inc.59, %if.else.37
  %64 = load i32, i32* %i, align 4
  %conv39 = sext i32 %64 to i64
  %65 = load %struct._object*, %struct._object** %children, align 8
  %66 = bitcast %struct._object* %65 to %struct.PyVarObject*
  %ob_size40 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %66, i32 0, i32 1
  %67 = load i64, i64* %ob_size40, align 8
  %cmp41 = icmp slt i64 %conv39, %67
  br i1 %cmp41, label %for.body.43, label %for.end.61

for.body.43:                                      ; preds = %for.cond.38
  br label %do.body.44

do.body.44:                                       ; preds = %for.body.43
  %68 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %68 to i64
  %69 = load %struct._object*, %struct._object** %children, align 8
  %70 = bitcast %struct._object* %69 to %struct.PyListObject*
  %ob_item47 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %70, i32 0, i32 1
  %71 = load %struct._object**, %struct._object*** %ob_item47, align 8
  %arrayidx48 = getelementptr %struct._object*, %struct._object** %71, i64 %idxprom46
  %72 = load %struct._object*, %struct._object** %arrayidx48, align 8
  store %struct._object* %72, %struct._object** %_py_decref_tmp45, align 8
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  %ob_refcnt49 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0
  %74 = load i64, i64* %ob_refcnt49, align 8
  %dec50 = add i64 %74, -1
  store i64 %dec50, i64* %ob_refcnt49, align 8
  %cmp51 = icmp ne i64 %dec50, 0
  br i1 %cmp51, label %if.then.53, label %if.else.54

if.then.53:                                       ; preds = %do.body.44
  br label %if.end.57

if.else.54:                                       ; preds = %do.body.44
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 1
  %76 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8
  %tp_dealloc56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %76, i32 0, i32 4
  %77 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc56, align 8
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  call void %77(%struct._object* %78)
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.54, %if.then.53
  br label %do.end.58

do.end.58:                                        ; preds = %if.end.57
  br label %for.inc.59

for.inc.59:                                       ; preds = %do.end.58
  %79 = load i32, i32* %i, align 4
  %inc60 = add i32 %79, 1
  store i32 %inc60, i32* %i, align 4
  br label %for.cond.38

for.end.61:                                       ; preds = %for.cond.38
  br label %do.body.62

do.body.62:                                       ; preds = %for.end.61
  %80 = load %struct._object*, %struct._object** %children, align 8
  store %struct._object* %80, %struct._object** %_py_decref_tmp63, align 8
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 0
  %82 = load i64, i64* %ob_refcnt64, align 8
  %dec65 = add i64 %82, -1
  store i64 %dec65, i64* %ob_refcnt64, align 8
  %cmp66 = icmp ne i64 %dec65, 0
  br i1 %cmp66, label %if.then.68, label %if.else.69

if.then.68:                                       ; preds = %do.body.62
  br label %if.end.72

if.else.69:                                       ; preds = %do.body.62
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 1
  %84 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8
  %tp_dealloc71 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %84, i32 0, i32 4
  %85 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc71, align 8
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8
  call void %85(%struct._object* %86)
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.69, %if.then.68
  br label %do.end.73

do.end.73:                                        ; preds = %if.end.72
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.73, %do.end, %if.then
  %87 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %87
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_setstate(%struct.ElementObject* %self, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %state.addr = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %state, %struct._object** %state.addr, align 8
  %0 = load %struct._object*, %struct._object** %state.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %1, @PyDict_Type
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %3 = load %struct._object*, %struct._object** %state.addr, align 8
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.100, i32 0, i32 0), %struct._object* %3)
  store %struct._object* null, %struct._object** %retval
  br label %return

if.else:                                          ; preds = %entry
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %5 = load %struct._object*, %struct._object** %state.addr, align 8
  %call1 = call %struct._object* @element_setstate_from_Python(%struct.ElementObject* %4, %struct._object* %5)
  store %struct._object* %call1, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %6 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %6
}

declare i32 @PyDict_SetItem(%struct._object*, %struct._object*, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal i32 @checkpath(%struct._object* %tag) #0 {
entry:
  %retval = alloca i32, align 4
  %tag.addr = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %check = alloca i32, align 4
  %len = alloca i64, align 8
  %data = alloca i8*, align 8
  %kind = alloca i32, align 4
  %ch = alloca i32, align 4
  %p = alloca i8*, align 8
  store %struct._object* %tag, %struct._object** %tag.addr, align 8
  store i32 1, i32* %check, align 4
  %0 = load %struct._object*, %struct._object** %tag.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 268435456
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %if.then, label %if.end.55

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %tag.addr, align 8
  %4 = bitcast %struct._object* %3 to %struct.PyASCIIObject*
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %4, i32 0, i32 1
  %5 = load i64, i64* %length, align 8
  store i64 %5, i64* %len, align 8
  %6 = load %struct._object*, %struct._object** %tag.addr, align 8
  %7 = bitcast %struct._object* %6 to %struct.PyASCIIObject*
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %7, i32 0, i32 3
  %8 = bitcast %struct.anon* %state to i32*
  %bf.load = load i32, i32* %8, align 4
  %bf.lshr = lshr i32 %bf.load, 5
  %bf.clear = and i32 %bf.lshr, 1
  %tobool = icmp ne i32 %bf.clear, 0
  br i1 %tobool, label %cond.true, label %cond.false.8

cond.true:                                        ; preds = %if.then
  %9 = load %struct._object*, %struct._object** %tag.addr, align 8
  %10 = bitcast %struct._object* %9 to %struct.PyASCIIObject*
  %state1 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %10, i32 0, i32 3
  %11 = bitcast %struct.anon* %state1 to i32*
  %bf.load2 = load i32, i32* %11, align 4
  %bf.lshr3 = lshr i32 %bf.load2, 6
  %bf.clear4 = and i32 %bf.lshr3, 1
  %tobool5 = icmp ne i32 %bf.clear4, 0
  br i1 %tobool5, label %cond.true.6, label %cond.false

cond.true.6:                                      ; preds = %cond.true
  %12 = load %struct._object*, %struct._object** %tag.addr, align 8
  %13 = bitcast %struct._object* %12 to %struct.PyASCIIObject*
  %add.ptr = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %13, i64 1
  %14 = bitcast %struct.PyASCIIObject* %add.ptr to i8*
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %15 = load %struct._object*, %struct._object** %tag.addr, align 8
  %16 = bitcast %struct._object* %15 to %struct.PyCompactUnicodeObject*
  %add.ptr7 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %16, i64 1
  %17 = bitcast %struct.PyCompactUnicodeObject* %add.ptr7 to i8*
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.6
  %cond = phi i8* [ %14, %cond.true.6 ], [ %17, %cond.false ]
  br label %cond.end.10

cond.false.8:                                     ; preds = %if.then
  %18 = load %struct._object*, %struct._object** %tag.addr, align 8
  %19 = bitcast %struct._object* %18 to %struct.PyUnicodeObject*
  %data9 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %19, i32 0, i32 1
  %any = bitcast %union.anon* %data9 to i8**
  %20 = load i8*, i8** %any, align 8
  br label %cond.end.10

cond.end.10:                                      ; preds = %cond.false.8, %cond.end
  %cond11 = phi i8* [ %cond, %cond.end ], [ %20, %cond.false.8 ]
  store i8* %cond11, i8** %data, align 8
  %21 = load %struct._object*, %struct._object** %tag.addr, align 8
  %22 = bitcast %struct._object* %21 to %struct.PyASCIIObject*
  %state12 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %22, i32 0, i32 3
  %23 = bitcast %struct.anon* %state12 to i32*
  %bf.load13 = load i32, i32* %23, align 4
  %bf.lshr14 = lshr i32 %bf.load13, 2
  %bf.clear15 = and i32 %bf.lshr14, 7
  store i32 %bf.clear15, i32* %kind, align 4
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.10
  %24 = load i64, i64* %i, align 8
  %25 = load i64, i64* %len, align 8
  %cmp16 = icmp slt i64 %24, %25
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* %kind, align 4
  %cmp17 = icmp eq i32 %26, 1
  br i1 %cmp17, label %cond.true.18, label %cond.false.19

cond.true.18:                                     ; preds = %for.body
  %27 = load i64, i64* %i, align 8
  %28 = load i8*, i8** %data, align 8
  %arrayidx = getelementptr i8, i8* %28, i64 %27
  %29 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %29 to i32
  br label %cond.end.29

cond.false.19:                                    ; preds = %for.body
  %30 = load i32, i32* %kind, align 4
  %cmp20 = icmp eq i32 %30, 2
  br i1 %cmp20, label %cond.true.22, label %cond.false.25

cond.true.22:                                     ; preds = %cond.false.19
  %31 = load i64, i64* %i, align 8
  %32 = load i8*, i8** %data, align 8
  %33 = bitcast i8* %32 to i16*
  %arrayidx23 = getelementptr i16, i16* %33, i64 %31
  %34 = load i16, i16* %arrayidx23, align 2
  %conv24 = zext i16 %34 to i32
  br label %cond.end.27

cond.false.25:                                    ; preds = %cond.false.19
  %35 = load i64, i64* %i, align 8
  %36 = load i8*, i8** %data, align 8
  %37 = bitcast i8* %36 to i32*
  %arrayidx26 = getelementptr i32, i32* %37, i64 %35
  %38 = load i32, i32* %arrayidx26, align 4
  br label %cond.end.27

cond.end.27:                                      ; preds = %cond.false.25, %cond.true.22
  %cond28 = phi i32 [ %conv24, %cond.true.22 ], [ %38, %cond.false.25 ]
  br label %cond.end.29

cond.end.29:                                      ; preds = %cond.end.27, %cond.true.18
  %cond30 = phi i32 [ %conv, %cond.true.18 ], [ %cond28, %cond.end.27 ]
  store i32 %cond30, i32* %ch, align 4
  %39 = load i32, i32* %ch, align 4
  %cmp31 = icmp eq i32 %39, 123
  br i1 %cmp31, label %if.then.33, label %if.else

if.then.33:                                       ; preds = %cond.end.29
  store i32 0, i32* %check, align 4
  br label %if.end.54

if.else:                                          ; preds = %cond.end.29
  %40 = load i32, i32* %ch, align 4
  %cmp34 = icmp eq i32 %40, 125
  br i1 %cmp34, label %if.then.36, label %if.else.37

if.then.36:                                       ; preds = %if.else
  store i32 1, i32* %check, align 4
  br label %if.end.53

if.else.37:                                       ; preds = %if.else
  %41 = load i32, i32* %check, align 4
  %tobool38 = icmp ne i32 %41, 0
  br i1 %tobool38, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.else.37
  %42 = load i32, i32* %ch, align 4
  %cmp39 = icmp eq i32 %42, 47
  br i1 %cmp39, label %if.then.52, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %43 = load i32, i32* %ch, align 4
  %cmp41 = icmp eq i32 %43, 42
  br i1 %cmp41, label %if.then.52, label %lor.lhs.false.43

lor.lhs.false.43:                                 ; preds = %lor.lhs.false
  %44 = load i32, i32* %ch, align 4
  %cmp44 = icmp eq i32 %44, 91
  br i1 %cmp44, label %if.then.52, label %lor.lhs.false.46

lor.lhs.false.46:                                 ; preds = %lor.lhs.false.43
  %45 = load i32, i32* %ch, align 4
  %cmp47 = icmp eq i32 %45, 64
  br i1 %cmp47, label %if.then.52, label %lor.lhs.false.49

lor.lhs.false.49:                                 ; preds = %lor.lhs.false.46
  %46 = load i32, i32* %ch, align 4
  %cmp50 = icmp eq i32 %46, 46
  br i1 %cmp50, label %if.then.52, label %if.end

if.then.52:                                       ; preds = %lor.lhs.false.49, %lor.lhs.false.46, %lor.lhs.false.43, %lor.lhs.false, %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.49, %if.else.37
  br label %if.end.53

if.end.53:                                        ; preds = %if.end, %if.then.36
  br label %if.end.54

if.end.54:                                        ; preds = %if.end.53, %if.then.33
  br label %for.inc

for.inc:                                          ; preds = %if.end.54
  %47 = load i64, i64* %i, align 8
  %inc = add i64 %47, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

if.end.55:                                        ; preds = %entry
  %48 = load %struct._object*, %struct._object** %tag.addr, align 8
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8
  %tp_flags57 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 19
  %50 = load i64, i64* %tp_flags57, align 8
  %and58 = and i64 %50, 134217728
  %cmp59 = icmp ne i64 %and58, 0
  br i1 %cmp59, label %if.then.61, label %if.end.111

if.then.61:                                       ; preds = %if.end.55
  %51 = load %struct._object*, %struct._object** %tag.addr, align 8
  %52 = bitcast %struct._object* %51 to %struct.PyBytesObject*
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %52, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0
  store i8* %arraydecay, i8** %p, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond.62

for.cond.62:                                      ; preds = %for.inc.108, %if.then.61
  %53 = load i64, i64* %i, align 8
  %54 = load %struct._object*, %struct._object** %tag.addr, align 8
  %55 = bitcast %struct._object* %54 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %55, i32 0, i32 1
  %56 = load i64, i64* %ob_size, align 8
  %cmp63 = icmp slt i64 %53, %56
  br i1 %cmp63, label %for.body.65, label %for.end.110

for.body.65:                                      ; preds = %for.cond.62
  %57 = load i64, i64* %i, align 8
  %58 = load i8*, i8** %p, align 8
  %arrayidx66 = getelementptr i8, i8* %58, i64 %57
  %59 = load i8, i8* %arrayidx66, align 1
  %conv67 = sext i8 %59 to i32
  %cmp68 = icmp eq i32 %conv67, 123
  br i1 %cmp68, label %if.then.70, label %if.else.71

if.then.70:                                       ; preds = %for.body.65
  store i32 0, i32* %check, align 4
  br label %if.end.107

if.else.71:                                       ; preds = %for.body.65
  %60 = load i64, i64* %i, align 8
  %61 = load i8*, i8** %p, align 8
  %arrayidx72 = getelementptr i8, i8* %61, i64 %60
  %62 = load i8, i8* %arrayidx72, align 1
  %conv73 = sext i8 %62 to i32
  %cmp74 = icmp eq i32 %conv73, 125
  br i1 %cmp74, label %if.then.76, label %if.else.77

if.then.76:                                       ; preds = %if.else.71
  store i32 1, i32* %check, align 4
  br label %if.end.106

if.else.77:                                       ; preds = %if.else.71
  %63 = load i32, i32* %check, align 4
  %tobool78 = icmp ne i32 %63, 0
  br i1 %tobool78, label %land.lhs.true.79, label %if.end.105

land.lhs.true.79:                                 ; preds = %if.else.77
  %64 = load i64, i64* %i, align 8
  %65 = load i8*, i8** %p, align 8
  %arrayidx80 = getelementptr i8, i8* %65, i64 %64
  %66 = load i8, i8* %arrayidx80, align 1
  %conv81 = sext i8 %66 to i32
  %cmp82 = icmp eq i32 %conv81, 47
  br i1 %cmp82, label %if.then.104, label %lor.lhs.false.84

lor.lhs.false.84:                                 ; preds = %land.lhs.true.79
  %67 = load i64, i64* %i, align 8
  %68 = load i8*, i8** %p, align 8
  %arrayidx85 = getelementptr i8, i8* %68, i64 %67
  %69 = load i8, i8* %arrayidx85, align 1
  %conv86 = sext i8 %69 to i32
  %cmp87 = icmp eq i32 %conv86, 42
  br i1 %cmp87, label %if.then.104, label %lor.lhs.false.89

lor.lhs.false.89:                                 ; preds = %lor.lhs.false.84
  %70 = load i64, i64* %i, align 8
  %71 = load i8*, i8** %p, align 8
  %arrayidx90 = getelementptr i8, i8* %71, i64 %70
  %72 = load i8, i8* %arrayidx90, align 1
  %conv91 = sext i8 %72 to i32
  %cmp92 = icmp eq i32 %conv91, 91
  br i1 %cmp92, label %if.then.104, label %lor.lhs.false.94

lor.lhs.false.94:                                 ; preds = %lor.lhs.false.89
  %73 = load i64, i64* %i, align 8
  %74 = load i8*, i8** %p, align 8
  %arrayidx95 = getelementptr i8, i8* %74, i64 %73
  %75 = load i8, i8* %arrayidx95, align 1
  %conv96 = sext i8 %75 to i32
  %cmp97 = icmp eq i32 %conv96, 64
  br i1 %cmp97, label %if.then.104, label %lor.lhs.false.99

lor.lhs.false.99:                                 ; preds = %lor.lhs.false.94
  %76 = load i64, i64* %i, align 8
  %77 = load i8*, i8** %p, align 8
  %arrayidx100 = getelementptr i8, i8* %77, i64 %76
  %78 = load i8, i8* %arrayidx100, align 1
  %conv101 = sext i8 %78 to i32
  %cmp102 = icmp eq i32 %conv101, 46
  br i1 %cmp102, label %if.then.104, label %if.end.105

if.then.104:                                      ; preds = %lor.lhs.false.99, %lor.lhs.false.94, %lor.lhs.false.89, %lor.lhs.false.84, %land.lhs.true.79
  store i32 1, i32* %retval
  br label %return

if.end.105:                                       ; preds = %lor.lhs.false.99, %if.else.77
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %if.then.76
  br label %if.end.107

if.end.107:                                       ; preds = %if.end.106, %if.then.70
  br label %for.inc.108

for.inc.108:                                      ; preds = %if.end.107
  %79 = load i64, i64* %i, align 8
  %inc109 = add i64 %79, 1
  store i64 %inc109, i64* %i, align 8
  br label %for.cond.62

for.end.110:                                      ; preds = %for.cond.62
  store i32 0, i32* %retval
  br label %return

if.end.111:                                       ; preds = %if.end.55
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.111, %for.end.110, %if.then.104, %for.end, %if.then.52
  %80 = load i32, i32* %retval
  ret i32 %80
}

declare %struct._object* @PyUnicode_New(i64, i32) #1

declare i32 @PyObject_IsInstance(%struct._object*, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @create_elementiter(%struct.ElementObject* %self, %struct._object* %tag, i32 %gettext) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %tag.addr = alloca %struct._object*, align 8
  %gettext.addr = alloca i32, align 4
  %it = alloca %struct.ElementIterObject*, align 8
  %star = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp35 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %tag, %struct._object** %tag.addr, align 8
  store i32 %gettext, i32* %gettext.addr, align 4
  store %struct._object* null, %struct._object** %star, align 8
  %call = call %struct._object* @_PyObject_GC_New(%struct._typeobject* @ElementIter_Type)
  %0 = bitcast %struct._object* %call to %struct.ElementIterObject*
  store %struct.ElementIterObject* %0, %struct.ElementIterObject** %it, align 8
  %1 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %tobool = icmp ne %struct.ElementIterObject* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %tag.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 19
  %4 = load i64, i64* %tp_flags, align 8
  %and = and i64 %4, 268435456
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.end
  %call2 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87, i32 0, i32 0))
  store %struct._object* %call2, %struct._object** %star, align 8
  br label %if.end.10

if.else:                                          ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %tag.addr, align 8
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8
  %tp_flags4 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19
  %7 = load i64, i64* %tp_flags4, align 8
  %and5 = and i64 %7, 134217728
  %cmp6 = icmp ne i64 %and5, 0
  br i1 %cmp6, label %if.then.7, label %if.end.9

if.then.7:                                        ; preds = %if.else
  %call8 = call %struct._object* @PyBytes_FromString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87, i32 0, i32 0))
  store %struct._object* %call8, %struct._object** %star, align 8
  br label %if.end.9

if.end.9:                                         ; preds = %if.then.7, %if.else
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.then.1
  %8 = load %struct._object*, %struct._object** %star, align 8
  %tobool11 = icmp ne %struct._object* %8, null
  br i1 %tobool11, label %land.lhs.true, label %if.end.15

land.lhs.true:                                    ; preds = %if.end.10
  %9 = load %struct._object*, %struct._object** %tag.addr, align 8
  %10 = load %struct._object*, %struct._object** %star, align 8
  %call12 = call i32 @PyObject_RichCompareBool(%struct._object* %9, %struct._object* %10, i32 2)
  %cmp13 = icmp eq i32 %call12, 1
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %land.lhs.true
  store %struct._object* @_Py_NoneStruct, %struct._object** %tag.addr, align 8
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.14, %land.lhs.true, %if.end.10
  br label %do.body

do.body:                                          ; preds = %if.end.15
  %11 = load %struct._object*, %struct._object** %star, align 8
  store %struct._object* %11, %struct._object** %_py_xdecref_tmp, align 8
  %12 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp16 = icmp ne %struct._object* %12, null
  br i1 %cmp16, label %if.then.17, label %if.end.24

if.then.17:                                       ; preds = %do.body
  br label %do.body.18

do.body.18:                                       ; preds = %if.then.17
  %13 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0
  %15 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %15, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp19 = icmp ne i64 %dec, 0
  br i1 %cmp19, label %if.then.20, label %if.else.21

if.then.20:                                       ; preds = %do.body.18
  br label %if.end.23

if.else.21:                                       ; preds = %do.body.18
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %18(%struct._object* %19)
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.21, %if.then.20
  br label %do.end

do.end:                                           ; preds = %if.end.23
  br label %if.end.24

if.end.24:                                        ; preds = %do.end, %do.body
  br label %do.end.25

do.end.25:                                        ; preds = %if.end.24
  %20 = load %struct._object*, %struct._object** %tag.addr, align 8
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0
  %21 = load i64, i64* %ob_refcnt26, align 8
  %inc = add i64 %21, 1
  store i64 %inc, i64* %ob_refcnt26, align 8
  %22 = load %struct._object*, %struct._object** %tag.addr, align 8
  %23 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %sought_tag = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %23, i32 0, i32 3
  store %struct._object* %22, %struct._object** %sought_tag, align 8
  %24 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %root_done = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %24, i32 0, i32 4
  store i32 0, i32* %root_done, align 4
  %25 = load i32, i32* %gettext.addr, align 4
  %26 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %gettext27 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %26, i32 0, i32 5
  store i32 %25, i32* %gettext27, align 4
  %27 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %28 = bitcast %struct.ElementObject* %27 to %struct._object*
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0
  %29 = load i64, i64* %ob_refcnt28, align 8
  %inc29 = add i64 %29, 1
  store i64 %inc29, i64* %ob_refcnt28, align 8
  %30 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %31 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %root_element = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %31, i32 0, i32 2
  store %struct.ElementObject* %30, %struct.ElementObject** %root_element, align 8
  %32 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %33 = bitcast %struct.ElementIterObject* %32 to i8*
  call void @PyObject_GC_Track(i8* %33)
  %call30 = call i8* @PyObject_Malloc(i64 24)
  %34 = bitcast i8* %call30 to %struct.ParentLocator_t*
  %35 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %parent_stack = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %35, i32 0, i32 1
  store %struct.ParentLocator_t* %34, %struct.ParentLocator_t** %parent_stack, align 8
  %36 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %parent_stack31 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %36, i32 0, i32 1
  %37 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack31, align 8
  %cmp32 = icmp eq %struct.ParentLocator_t* %37, null
  br i1 %cmp32, label %if.then.33, label %if.end.46

if.then.33:                                       ; preds = %do.end.25
  br label %do.body.34

do.body.34:                                       ; preds = %if.then.33
  %38 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %39 = bitcast %struct.ElementIterObject* %38 to %struct._object*
  store %struct._object* %39, %struct._object** %_py_decref_tmp35, align 8
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8
  %ob_refcnt36 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0
  %41 = load i64, i64* %ob_refcnt36, align 8
  %dec37 = add i64 %41, -1
  store i64 %dec37, i64* %ob_refcnt36, align 8
  %cmp38 = icmp ne i64 %dec37, 0
  br i1 %cmp38, label %if.then.39, label %if.else.40

if.then.39:                                       ; preds = %do.body.34
  br label %if.end.43

if.else.40:                                       ; preds = %do.body.34
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8
  %tp_dealloc42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc42, align 8
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8
  call void %44(%struct._object* %45)
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.40, %if.then.39
  br label %do.end.44

do.end.44:                                        ; preds = %if.end.43
  %call45 = call %struct._object* @PyErr_NoMemory()
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.46:                                        ; preds = %do.end.25
  %46 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %parent_stack47 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %46, i32 0, i32 1
  %47 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack47, align 8
  %parent = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %47, i32 0, i32 0
  store %struct.ElementObject* null, %struct.ElementObject** %parent, align 8
  %48 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %parent_stack48 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %48, i32 0, i32 1
  %49 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack48, align 8
  %child_index = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %49, i32 0, i32 1
  store i64 0, i64* %child_index, align 8
  %50 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %parent_stack49 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %50, i32 0, i32 1
  %51 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack49, align 8
  %next = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %51, i32 0, i32 2
  store %struct.ParentLocator_t* null, %struct.ParentLocator_t** %next, align 8
  %52 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8
  %53 = bitcast %struct.ElementIterObject* %52 to %struct._object*
  store %struct._object* %53, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.46, %do.end.44, %if.then
  %54 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %54
}

declare %struct._object* @PyBytes_FromString(i8*) #1

declare %struct._object* @PyDict_Items(%struct._object*) #1

declare %struct._object* @PyDict_Keys(%struct._object*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @deepcopy(%struct._object* %object, %struct._object* %memo) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %object.addr = alloca %struct._object*, align 8
  %memo.addr = alloca %struct._object*, align 8
  %args = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %object, %struct._object** %object.addr, align 8
  store %struct._object* %memo, %struct._object** %memo.addr, align 8
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule)
  %call1 = call i8* @PyModule_GetState(%struct._object* %call)
  %0 = bitcast i8* %call1 to %struct.elementtreestate*
  store %struct.elementtreestate* %0, %struct.elementtreestate** %st, align 8
  %1 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %deepcopy_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %1, i32 0, i32 1
  %2 = load %struct._object*, %struct._object** %deepcopy_obj, align 8
  %tobool = icmp ne %struct._object* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.96, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %object.addr, align 8
  %5 = load %struct._object*, %struct._object** %memo.addr, align 8
  %call2 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %4, %struct._object* %5)
  store %struct._object* %call2, %struct._object** %args, align 8
  %6 = load %struct._object*, %struct._object** %args, align 8
  %tobool3 = icmp ne %struct._object* %6, null
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.5:                                         ; preds = %if.end
  %7 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %deepcopy_obj6 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %7, i32 0, i32 1
  %8 = load %struct._object*, %struct._object** %deepcopy_obj6, align 8
  %9 = load %struct._object*, %struct._object** %args, align 8
  %call7 = call %struct._object* @PyObject_CallObject(%struct._object* %8, %struct._object* %9)
  store %struct._object* %call7, %struct._object** %result, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.5
  %10 = load %struct._object*, %struct._object** %args, align 8
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0
  %12 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %12, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %do.body
  br label %if.end.9

if.else:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %15(%struct._object* %16)
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  br label %do.end

do.end:                                           ; preds = %if.end.9
  %17 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %17, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end, %if.then.4, %if.then
  %18 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %18
}

declare %struct._object* @PyLong_FromSsize_t(i64) #1

declare %struct._object* @PyObject_CallObject(%struct._object*, %struct._object*) #1

declare %struct._object* @Py_BuildValue(i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_setstate_from_Python(%struct.ElementObject* %self, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %args = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %text = alloca %struct._object*, align 8
  %tail = alloca %struct._object*, align 8
  %children = alloca %struct._object*, align 8
  %retval1 = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %state, %struct._object** %state.addr, align 8
  store %struct._object* null, %struct._object** %children, align 8
  store %struct._object* null, %struct._object** %tail, align 8
  store %struct._object* null, %struct._object** %text, align 8
  store %struct._object* null, %struct._object** %attrib, align 8
  store %struct._object* null, %struct._object** %tag, align 8
  %call = call %struct._object* @PyTuple_New(i64 0)
  store %struct._object* %call, %struct._object** %args, align 8
  %0 = load %struct._object*, %struct._object** %args, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %args, align 8
  %2 = load %struct._object*, %struct._object** %state.addr, align 8
  %call2 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %1, %struct._object* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i32 0, i32 0), i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @element_setstate_from_Python.kwlist, i32 0, i32 0), %struct._object** %tag, %struct._object** %attrib, %struct._object** %text, %struct._object** %tail, %struct._object** %children)
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.end
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %4 = load %struct._object*, %struct._object** %tag, align 8
  %5 = load %struct._object*, %struct._object** %attrib, align 8
  %6 = load %struct._object*, %struct._object** %text, align 8
  %7 = load %struct._object*, %struct._object** %tail, align 8
  %8 = load %struct._object*, %struct._object** %children, align 8
  %call5 = call %struct._object* @element_setstate_from_attributes(%struct.ElementObject* %3, %struct._object* %4, %struct._object* %5, %struct._object* %6, %struct._object* %7, %struct._object* %8)
  store %struct._object* %call5, %struct._object** %retval1, align 8
  br label %if.end.6

if.else:                                          ; preds = %if.end
  store %struct._object* null, %struct._object** %retval1, align 8
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.4
  br label %do.body

do.body:                                          ; preds = %if.end.6
  %9 = load %struct._object*, %struct._object** %args, align 8
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0
  %11 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %11, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.7, label %if.else.8

if.then.7:                                        ; preds = %do.body
  br label %if.end.9

if.else.8:                                        ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %14(%struct._object* %15)
  br label %if.end.9

if.end.9:                                         ; preds = %if.else.8, %if.then.7
  br label %do.end

do.end:                                           ; preds = %if.end.9
  %16 = load %struct._object*, %struct._object** %retval1, align 8
  store %struct._object* %16, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end, %if.then
  %17 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %17
}

declare %struct._object* @PyTuple_New(i64) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_setstate_from_attributes(%struct.ElementObject* %self, %struct._object* %tag, %struct._object* %attrib, %struct._object* %text, %struct._object* %tail, %struct._object* %children) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %tag.addr = alloca %struct._object*, align 8
  %attrib.addr = alloca %struct._object*, align 8
  %text.addr = alloca %struct._object*, align 8
  %tail.addr = alloca %struct._object*, align 8
  %children.addr = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %nchildren = alloca i64, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp77 = alloca %struct._object*, align 8
  %_py_decref_tmp86 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8
  store %struct._object* %tag, %struct._object** %tag.addr, align 8
  store %struct._object* %attrib, %struct._object** %attrib.addr, align 8
  store %struct._object* %text, %struct._object** %text.addr, align 8
  store %struct._object* %tail, %struct._object** %tail.addr, align 8
  store %struct._object* %children, %struct._object** %children.addr, align 8
  %0 = load %struct._object*, %struct._object** %tag.addr, align 8
  %tobool = icmp ne %struct._object* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.102, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %if.end
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 1
  %3 = load %struct._object*, %struct._object** %tag1, align 8
  store %struct._object* %3, %struct._object** %_py_tmp, align 8
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp = icmp ne %struct._object* %4, null
  br i1 %cmp, label %if.then.2, label %if.end.8

if.then.2:                                        ; preds = %do.body
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag3 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %5, i32 0, i32 1
  store %struct._object* null, %struct._object** %tag3, align 8
  br label %do.body.4

do.body.4:                                        ; preds = %if.then.2
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0
  %8 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %8, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp5 = icmp ne i64 %dec, 0
  br i1 %cmp5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %do.body.4
  br label %if.end.7

if.else:                                          ; preds = %do.body.4
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %11(%struct._object* %12)
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  br label %do.end

do.end:                                           ; preds = %if.end.7
  br label %if.end.8

if.end.8:                                         ; preds = %do.end, %do.body
  br label %do.end.9

do.end.9:                                         ; preds = %if.end.8
  %13 = load %struct._object*, %struct._object** %tag.addr, align 8
  %14 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag10 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %14, i32 0, i32 1
  store %struct._object* %13, %struct._object** %tag10, align 8
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tag11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 1
  %16 = load %struct._object*, %struct._object** %tag11, align 8
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0
  %17 = load i64, i64* %ob_refcnt12, align 8
  %inc = add i64 %17, 1
  store i64 %inc, i64* %ob_refcnt12, align 8
  %18 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text13 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %18, i32 0, i32 2
  call void @_clear_joined_ptr(%struct._object** %text13)
  %19 = load %struct._object*, %struct._object** %text.addr, align 8
  %tobool14 = icmp ne %struct._object* %19, null
  br i1 %tobool14, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end.9
  %20 = load %struct._object*, %struct._object** %text.addr, align 8
  %21 = ptrtoint %struct._object* %20 to i64
  %and = and i64 %21, -2
  %22 = inttoptr i64 %and to %struct._object*
  %23 = ptrtoint %struct._object* %22 to i64
  %24 = load %struct._object*, %struct._object** %text.addr, align 8
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8
  %cmp16 = icmp eq %struct._typeobject* %25, @PyList_Type
  %conv = zext i1 %cmp16 to i32
  %conv17 = sext i32 %conv to i64
  %or = or i64 %23, %conv17
  %26 = inttoptr i64 %or to i8*
  br label %cond.end

cond.false:                                       ; preds = %do.end.9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %26, %cond.true ], [ bitcast (%struct._object* @_Py_NoneStruct to i8*), %cond.false ]
  %27 = bitcast i8* %cond to %struct._object*
  %28 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text18 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %28, i32 0, i32 2
  store %struct._object* %27, %struct._object** %text18, align 8
  %29 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %text19 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %29, i32 0, i32 2
  %30 = load %struct._object*, %struct._object** %text19, align 8
  %31 = ptrtoint %struct._object* %30 to i64
  %and20 = and i64 %31, -2
  %32 = inttoptr i64 %and20 to %struct._object*
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0
  %33 = load i64, i64* %ob_refcnt21, align 8
  %inc22 = add i64 %33, 1
  store i64 %inc22, i64* %ob_refcnt21, align 8
  %34 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail23 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %34, i32 0, i32 3
  call void @_clear_joined_ptr(%struct._object** %tail23)
  %35 = load %struct._object*, %struct._object** %tail.addr, align 8
  %tobool24 = icmp ne %struct._object* %35, null
  br i1 %tobool24, label %cond.true.25, label %cond.false.32

cond.true.25:                                     ; preds = %cond.end
  %36 = load %struct._object*, %struct._object** %tail.addr, align 8
  %37 = ptrtoint %struct._object* %36 to i64
  %and26 = and i64 %37, -2
  %38 = inttoptr i64 %and26 to %struct._object*
  %39 = ptrtoint %struct._object* %38 to i64
  %40 = load %struct._object*, %struct._object** %tail.addr, align 8
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8
  %cmp28 = icmp eq %struct._typeobject* %41, @PyList_Type
  %conv29 = zext i1 %cmp28 to i32
  %conv30 = sext i32 %conv29 to i64
  %or31 = or i64 %39, %conv30
  %42 = inttoptr i64 %or31 to i8*
  br label %cond.end.33

cond.false.32:                                    ; preds = %cond.end
  br label %cond.end.33

cond.end.33:                                      ; preds = %cond.false.32, %cond.true.25
  %cond34 = phi i8* [ %42, %cond.true.25 ], [ bitcast (%struct._object* @_Py_NoneStruct to i8*), %cond.false.32 ]
  %43 = bitcast i8* %cond34 to %struct._object*
  %44 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail35 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %44, i32 0, i32 3
  store %struct._object* %43, %struct._object** %tail35, align 8
  %45 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %tail36 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %45, i32 0, i32 3
  %46 = load %struct._object*, %struct._object** %tail36, align 8
  %47 = ptrtoint %struct._object* %46 to i64
  %and37 = and i64 %47, -2
  %48 = inttoptr i64 %and37 to %struct._object*
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0
  %49 = load i64, i64* %ob_refcnt38, align 8
  %inc39 = add i64 %49, 1
  store i64 %inc39, i64* %ob_refcnt38, align 8
  %50 = load %struct._object*, %struct._object** %children.addr, align 8
  %tobool40 = icmp ne %struct._object* %50, null
  br i1 %tobool40, label %if.end.44, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end.33
  %51 = load %struct._object*, %struct._object** %attrib.addr, align 8
  %tobool41 = icmp ne %struct._object* %51, null
  br i1 %tobool41, label %if.end.44, label %if.then.42

if.then.42:                                       ; preds = %land.lhs.true
  %52 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc43 = add i64 %52, 1
  store i64 %inc43, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end.44:                                        ; preds = %land.lhs.true, %cond.end.33
  %53 = load %struct._object*, %struct._object** %children.addr, align 8
  %tobool45 = icmp ne %struct._object* %53, null
  br i1 %tobool45, label %if.then.46, label %if.else.53

if.then.46:                                       ; preds = %if.end.44
  %54 = load %struct._object*, %struct._object** %children.addr, align 8
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 19
  %56 = load i64, i64* %tp_flags, align 8
  %and48 = and i64 %56, 33554432
  %cmp49 = icmp ne i64 %and48, 0
  br i1 %cmp49, label %if.end.52, label %if.then.51

if.then.51:                                       ; preds = %if.then.46
  %57 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %57, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.103, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.52:                                        ; preds = %if.then.46
  %58 = load %struct._object*, %struct._object** %children.addr, align 8
  %call = call i64 @PyList_Size(%struct._object* %58)
  store i64 %call, i64* %nchildren, align 8
  br label %if.end.54

if.else.53:                                       ; preds = %if.end.44
  store i64 0, i64* %nchildren, align 8
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.53, %if.end.52
  %59 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %60 = load i64, i64* %nchildren, align 8
  %conv55 = trunc i64 %60 to i32
  %call56 = call i32 @element_resize(%struct.ElementObject* %59, i32 %conv55)
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %if.end.54
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.59:                                        ; preds = %if.end.54
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.59
  %61 = load i64, i64* %i, align 8
  %62 = load i64, i64* %nchildren, align 8
  %cmp60 = icmp slt i64 %61, %62
  br i1 %cmp60, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %63 = load i64, i64* %i, align 8
  %64 = load %struct._object*, %struct._object** %children.addr, align 8
  %65 = bitcast %struct._object* %64 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %65, i32 0, i32 1
  %66 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %66, i64 %63
  %67 = load %struct._object*, %struct._object** %arrayidx, align 8
  %68 = load i64, i64* %i, align 8
  %69 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %69, i32 0, i32 4
  %70 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8
  %children62 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %70, i32 0, i32 3
  %71 = load %struct._object**, %struct._object*** %children62, align 8
  %arrayidx63 = getelementptr %struct._object*, %struct._object** %71, i64 %68
  store %struct._object* %67, %struct._object** %arrayidx63, align 8
  %72 = load i64, i64* %i, align 8
  %73 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra64 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %73, i32 0, i32 4
  %74 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra64, align 8
  %children65 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %74, i32 0, i32 3
  %75 = load %struct._object**, %struct._object*** %children65, align 8
  %arrayidx66 = getelementptr %struct._object*, %struct._object** %75, i64 %72
  %76 = load %struct._object*, %struct._object** %arrayidx66, align 8
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0
  %77 = load i64, i64* %ob_refcnt67, align 8
  %inc68 = add i64 %77, 1
  store i64 %inc68, i64* %ob_refcnt67, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %78 = load i64, i64* %i, align 8
  %inc69 = add i64 %78, 1
  store i64 %inc69, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %79 = load i64, i64* %nchildren, align 8
  %conv70 = trunc i64 %79 to i32
  %80 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra71 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %80, i32 0, i32 4
  %81 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra71, align 8
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %81, i32 0, i32 1
  store i32 %conv70, i32* %length, align 4
  %82 = load i64, i64* %nchildren, align 8
  %conv72 = trunc i64 %82 to i32
  %83 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra73 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %83, i32 0, i32 4
  %84 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra73, align 8
  %allocated = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %84, i32 0, i32 2
  store i32 %conv72, i32* %allocated, align 4
  %85 = load %struct._object*, %struct._object** %attrib.addr, align 8
  %tobool74 = icmp ne %struct._object* %85, null
  br i1 %tobool74, label %if.then.75, label %if.end.103

if.then.75:                                       ; preds = %for.end
  br label %do.body.76

do.body.76:                                       ; preds = %if.then.75
  %86 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra78 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %86, i32 0, i32 4
  %87 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra78, align 8
  %attrib79 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %87, i32 0, i32 0
  %88 = load %struct._object*, %struct._object** %attrib79, align 8
  store %struct._object* %88, %struct._object** %_py_tmp77, align 8
  %89 = load %struct._object*, %struct._object** %_py_tmp77, align 8
  %cmp80 = icmp ne %struct._object* %89, null
  br i1 %cmp80, label %if.then.82, label %if.end.97

if.then.82:                                       ; preds = %do.body.76
  %90 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra83 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %90, i32 0, i32 4
  %91 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra83, align 8
  %attrib84 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %91, i32 0, i32 0
  store %struct._object* null, %struct._object** %attrib84, align 8
  br label %do.body.85

do.body.85:                                       ; preds = %if.then.82
  %92 = load %struct._object*, %struct._object** %_py_tmp77, align 8
  store %struct._object* %92, %struct._object** %_py_decref_tmp86, align 8
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8
  %ob_refcnt87 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0
  %94 = load i64, i64* %ob_refcnt87, align 8
  %dec88 = add i64 %94, -1
  store i64 %dec88, i64* %ob_refcnt87, align 8
  %cmp89 = icmp ne i64 %dec88, 0
  br i1 %cmp89, label %if.then.91, label %if.else.92

if.then.91:                                       ; preds = %do.body.85
  br label %if.end.95

if.else.92:                                       ; preds = %do.body.85
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8
  %ob_type93 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 1
  %96 = load %struct._typeobject*, %struct._typeobject** %ob_type93, align 8
  %tp_dealloc94 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %96, i32 0, i32 4
  %97 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc94, align 8
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8
  call void %97(%struct._object* %98)
  br label %if.end.95

if.end.95:                                        ; preds = %if.else.92, %if.then.91
  br label %do.end.96

do.end.96:                                        ; preds = %if.end.95
  br label %if.end.97

if.end.97:                                        ; preds = %do.end.96, %do.body.76
  br label %do.end.98

do.end.98:                                        ; preds = %if.end.97
  %99 = load %struct._object*, %struct._object** %attrib.addr, align 8
  %100 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8
  %extra99 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %100, i32 0, i32 4
  %101 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra99, align 8
  %attrib100 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %101, i32 0, i32 0
  store %struct._object* %99, %struct._object** %attrib100, align 8
  %102 = load %struct._object*, %struct._object** %attrib.addr, align 8
  %ob_refcnt101 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 0
  %103 = load i64, i64* %ob_refcnt101, align 8
  %inc102 = add i64 %103, 1
  store i64 %inc102, i64* %ob_refcnt101, align 8
  br label %if.end.103

if.end.103:                                       ; preds = %do.end.98, %for.end
  %104 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc104 = add i64 %104, 1
  store i64 %inc104, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.103, %if.then.58, %if.then.51, %if.then.42, %if.then
  %105 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %105
}

declare i64 @PyList_Size(%struct._object*) #1

; Function Attrs: nounwind uwtable
define internal void @xmlparser_dealloc(%struct.XMLParserObject* %self) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  %0 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %1 = bitcast %struct.XMLParserObject* %0 to i8*
  call void @PyObject_GC_UnTrack(i8* %1)
  %2 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %call = call i32 @xmlparser_gc_clear(%struct.XMLParserObject* %2)
  %3 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %4 = bitcast %struct.XMLParserObject* %3 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 38
  %6 = load void (i8*)*, void (i8*)** %tp_free, align 8
  %7 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %8 = bitcast %struct.XMLParserObject* %7 to %struct._object*
  %9 = bitcast %struct._object* %8 to i8*
  call void %6(i8* %9)
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_getattro(%struct.XMLParserObject* %self, %struct._object* %nameobj) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %nameobj.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store %struct._object* %nameobj, %struct._object** %nameobj.addr, align 8
  %0 = load %struct._object*, %struct._object** %nameobj.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 268435456
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %if.then, label %if.end.13

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %nameobj.addr, align 8
  %call = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.106, i32 0, i32 0))
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.then
  %4 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %entity = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %4, i32 0, i32 3
  %5 = load %struct._object*, %struct._object** %entity, align 8
  store %struct._object* %5, %struct._object** %res, align 8
  br label %if.end.12

if.else:                                          ; preds = %if.then
  %6 = load %struct._object*, %struct._object** %nameobj.addr, align 8
  %call3 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i32 0, i32 0))
  %cmp4 = icmp eq i32 %call3, 0
  br i1 %cmp4, label %if.then.5, label %if.else.6

if.then.5:                                        ; preds = %if.else
  %7 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %7, i32 0, i32 2
  %8 = load %struct._object*, %struct._object** %target, align 8
  store %struct._object* %8, %struct._object** %res, align 8
  br label %if.end

if.else.6:                                        ; preds = %if.else
  %9 = load %struct._object*, %struct._object** %nameobj.addr, align 8
  %call7 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.108, i32 0, i32 0))
  %cmp8 = icmp eq i32 %call7, 0
  br i1 %cmp8, label %if.then.9, label %if.else.11

if.then.9:                                        ; preds = %if.else.6
  %call10 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.109, i32 0, i32 0), i32 2, i32 1, i32 0)
  store %struct._object* %call10, %struct._object** %retval
  br label %return

if.else.11:                                       ; preds = %if.else.6
  br label %generic

if.end:                                           ; preds = %if.then.5
  br label %if.end.12

if.end.12:                                        ; preds = %if.end, %if.then.2
  %10 = load %struct._object*, %struct._object** %res, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0
  %11 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %11, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %12 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %12, %struct._object** %retval
  br label %return

if.end.13:                                        ; preds = %entry
  br label %generic

generic:                                          ; preds = %if.end.13, %if.else.11
  %13 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %14 = bitcast %struct.XMLParserObject* %13 to %struct._object*
  %15 = load %struct._object*, %struct._object** %nameobj.addr, align 8
  %call14 = call %struct._object* @PyObject_GenericGetAttr(%struct._object* %14, %struct._object* %15)
  store %struct._object* %call14, %struct._object** %retval
  br label %return

return:                                           ; preds = %generic, %if.end.12, %if.then.9
  %16 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %16
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlparser_gc_traverse(%struct.XMLParserObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %vret8 = alloca i32, align 4
  %vret19 = alloca i32, align 4
  %vret30 = alloca i32, align 4
  %vret41 = alloca i32, align 4
  %vret52 = alloca i32, align 4
  %vret63 = alloca i32, align 4
  %vret74 = alloca i32, align 4
  %vret85 = alloca i32, align 4
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8
  store i8* %arg, i8** %arg.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_close = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %0, i32 0, i32 11
  %1 = load %struct._object*, %struct._object** %handle_close, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.then, label %if.end.4

if.then:                                          ; preds = %do.body
  %2 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %3 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_close1 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %3, i32 0, i32 11
  %4 = load %struct._object*, %struct._object** %handle_close1, align 8
  %5 = load i8*, i8** %arg.addr, align 8
  %call = call i32 %2(%struct._object* %4, i8* %5)
  store i32 %call, i32* %vret, align 4
  %6 = load i32, i32* %vret, align 4
  %tobool2 = icmp ne i32 %6, 0
  br i1 %tobool2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  %7 = load i32, i32* %vret, align 4
  store i32 %7, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end.4
  br label %do.body.5

do.body.5:                                        ; preds = %do.end
  %8 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_pi = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %8, i32 0, i32 9
  %9 = load %struct._object*, %struct._object** %handle_pi, align 8
  %tobool6 = icmp ne %struct._object* %9, null
  br i1 %tobool6, label %if.then.7, label %if.end.14

if.then.7:                                        ; preds = %do.body.5
  %10 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %11 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_pi9 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %11, i32 0, i32 9
  %12 = load %struct._object*, %struct._object** %handle_pi9, align 8
  %13 = load i8*, i8** %arg.addr, align 8
  %call10 = call i32 %10(%struct._object* %12, i8* %13)
  store i32 %call10, i32* %vret8, align 4
  %14 = load i32, i32* %vret8, align 4
  %tobool11 = icmp ne i32 %14, 0
  br i1 %tobool11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.then.7
  %15 = load i32, i32* %vret8, align 4
  store i32 %15, i32* %retval
  br label %return

if.end.13:                                        ; preds = %if.then.7
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13, %do.body.5
  br label %do.end.15

do.end.15:                                        ; preds = %if.end.14
  br label %do.body.16

do.body.16:                                       ; preds = %do.end.15
  %16 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_comment = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %16, i32 0, i32 8
  %17 = load %struct._object*, %struct._object** %handle_comment, align 8
  %tobool17 = icmp ne %struct._object* %17, null
  br i1 %tobool17, label %if.then.18, label %if.end.25

if.then.18:                                       ; preds = %do.body.16
  %18 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %19 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_comment20 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %19, i32 0, i32 8
  %20 = load %struct._object*, %struct._object** %handle_comment20, align 8
  %21 = load i8*, i8** %arg.addr, align 8
  %call21 = call i32 %18(%struct._object* %20, i8* %21)
  store i32 %call21, i32* %vret19, align 4
  %22 = load i32, i32* %vret19, align 4
  %tobool22 = icmp ne i32 %22, 0
  br i1 %tobool22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.then.18
  %23 = load i32, i32* %vret19, align 4
  store i32 %23, i32* %retval
  br label %return

if.end.24:                                        ; preds = %if.then.18
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24, %do.body.16
  br label %do.end.26

do.end.26:                                        ; preds = %if.end.25
  br label %do.body.27

do.body.27:                                       ; preds = %do.end.26
  %24 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_end = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %24, i32 0, i32 7
  %25 = load %struct._object*, %struct._object** %handle_end, align 8
  %tobool28 = icmp ne %struct._object* %25, null
  br i1 %tobool28, label %if.then.29, label %if.end.36

if.then.29:                                       ; preds = %do.body.27
  %26 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %27 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_end31 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %27, i32 0, i32 7
  %28 = load %struct._object*, %struct._object** %handle_end31, align 8
  %29 = load i8*, i8** %arg.addr, align 8
  %call32 = call i32 %26(%struct._object* %28, i8* %29)
  store i32 %call32, i32* %vret30, align 4
  %30 = load i32, i32* %vret30, align 4
  %tobool33 = icmp ne i32 %30, 0
  br i1 %tobool33, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %if.then.29
  %31 = load i32, i32* %vret30, align 4
  store i32 %31, i32* %retval
  br label %return

if.end.35:                                        ; preds = %if.then.29
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %do.body.27
  br label %do.end.37

do.end.37:                                        ; preds = %if.end.36
  br label %do.body.38

do.body.38:                                       ; preds = %do.end.37
  %32 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_data = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %32, i32 0, i32 6
  %33 = load %struct._object*, %struct._object** %handle_data, align 8
  %tobool39 = icmp ne %struct._object* %33, null
  br i1 %tobool39, label %if.then.40, label %if.end.47

if.then.40:                                       ; preds = %do.body.38
  %34 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %35 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_data42 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %35, i32 0, i32 6
  %36 = load %struct._object*, %struct._object** %handle_data42, align 8
  %37 = load i8*, i8** %arg.addr, align 8
  %call43 = call i32 %34(%struct._object* %36, i8* %37)
  store i32 %call43, i32* %vret41, align 4
  %38 = load i32, i32* %vret41, align 4
  %tobool44 = icmp ne i32 %38, 0
  br i1 %tobool44, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %if.then.40
  %39 = load i32, i32* %vret41, align 4
  store i32 %39, i32* %retval
  br label %return

if.end.46:                                        ; preds = %if.then.40
  br label %if.end.47

if.end.47:                                        ; preds = %if.end.46, %do.body.38
  br label %do.end.48

do.end.48:                                        ; preds = %if.end.47
  br label %do.body.49

do.body.49:                                       ; preds = %do.end.48
  %40 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_start = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %40, i32 0, i32 5
  %41 = load %struct._object*, %struct._object** %handle_start, align 8
  %tobool50 = icmp ne %struct._object* %41, null
  br i1 %tobool50, label %if.then.51, label %if.end.58

if.then.51:                                       ; preds = %do.body.49
  %42 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %43 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_start53 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %43, i32 0, i32 5
  %44 = load %struct._object*, %struct._object** %handle_start53, align 8
  %45 = load i8*, i8** %arg.addr, align 8
  %call54 = call i32 %42(%struct._object* %44, i8* %45)
  store i32 %call54, i32* %vret52, align 4
  %46 = load i32, i32* %vret52, align 4
  %tobool55 = icmp ne i32 %46, 0
  br i1 %tobool55, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %if.then.51
  %47 = load i32, i32* %vret52, align 4
  store i32 %47, i32* %retval
  br label %return

if.end.57:                                        ; preds = %if.then.51
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57, %do.body.49
  br label %do.end.59

do.end.59:                                        ; preds = %if.end.58
  br label %do.body.60

do.body.60:                                       ; preds = %do.end.59
  %48 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %48, i32 0, i32 2
  %49 = load %struct._object*, %struct._object** %target, align 8
  %tobool61 = icmp ne %struct._object* %49, null
  br i1 %tobool61, label %if.then.62, label %if.end.69

if.then.62:                                       ; preds = %do.body.60
  %50 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %51 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target64 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %51, i32 0, i32 2
  %52 = load %struct._object*, %struct._object** %target64, align 8
  %53 = load i8*, i8** %arg.addr, align 8
  %call65 = call i32 %50(%struct._object* %52, i8* %53)
  store i32 %call65, i32* %vret63, align 4
  %54 = load i32, i32* %vret63, align 4
  %tobool66 = icmp ne i32 %54, 0
  br i1 %tobool66, label %if.then.67, label %if.end.68

if.then.67:                                       ; preds = %if.then.62
  %55 = load i32, i32* %vret63, align 4
  store i32 %55, i32* %retval
  br label %return

if.end.68:                                        ; preds = %if.then.62
  br label %if.end.69

if.end.69:                                        ; preds = %if.end.68, %do.body.60
  br label %do.end.70

do.end.70:                                        ; preds = %if.end.69
  br label %do.body.71

do.body.71:                                       ; preds = %do.end.70
  %56 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %entity = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %56, i32 0, i32 3
  %57 = load %struct._object*, %struct._object** %entity, align 8
  %tobool72 = icmp ne %struct._object* %57, null
  br i1 %tobool72, label %if.then.73, label %if.end.80

if.then.73:                                       ; preds = %do.body.71
  %58 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %59 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %entity75 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %59, i32 0, i32 3
  %60 = load %struct._object*, %struct._object** %entity75, align 8
  %61 = load i8*, i8** %arg.addr, align 8
  %call76 = call i32 %58(%struct._object* %60, i8* %61)
  store i32 %call76, i32* %vret74, align 4
  %62 = load i32, i32* %vret74, align 4
  %tobool77 = icmp ne i32 %62, 0
  br i1 %tobool77, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %if.then.73
  %63 = load i32, i32* %vret74, align 4
  store i32 %63, i32* %retval
  br label %return

if.end.79:                                        ; preds = %if.then.73
  br label %if.end.80

if.end.80:                                        ; preds = %if.end.79, %do.body.71
  br label %do.end.81

do.end.81:                                        ; preds = %if.end.80
  br label %do.body.82

do.body.82:                                       ; preds = %do.end.81
  %64 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %names = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %64, i32 0, i32 4
  %65 = load %struct._object*, %struct._object** %names, align 8
  %tobool83 = icmp ne %struct._object* %65, null
  br i1 %tobool83, label %if.then.84, label %if.end.91

if.then.84:                                       ; preds = %do.body.82
  %66 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8
  %67 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %names86 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %67, i32 0, i32 4
  %68 = load %struct._object*, %struct._object** %names86, align 8
  %69 = load i8*, i8** %arg.addr, align 8
  %call87 = call i32 %66(%struct._object* %68, i8* %69)
  store i32 %call87, i32* %vret85, align 4
  %70 = load i32, i32* %vret85, align 4
  %tobool88 = icmp ne i32 %70, 0
  br i1 %tobool88, label %if.then.89, label %if.end.90

if.then.89:                                       ; preds = %if.then.84
  %71 = load i32, i32* %vret85, align 4
  store i32 %71, i32* %retval
  br label %return

if.end.90:                                        ; preds = %if.then.84
  br label %if.end.91

if.end.91:                                        ; preds = %if.end.90, %do.body.82
  br label %do.end.92

do.end.92:                                        ; preds = %if.end.91
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end.92, %if.then.89, %if.then.78, %if.then.67, %if.then.56, %if.then.45, %if.then.34, %if.then.23, %if.then.12, %if.then.3
  %72 = load i32, i32* %retval
  ret i32 %72
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlparser_gc_clear(%struct.XMLParserObject* %self) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp13 = alloca %struct._object*, align 8
  %_py_tmp26 = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  %_py_tmp44 = alloca %struct._object*, align 8
  %_py_decref_tmp49 = alloca %struct._object*, align 8
  %_py_tmp62 = alloca %struct._object*, align 8
  %_py_decref_tmp67 = alloca %struct._object*, align 8
  %_py_tmp80 = alloca %struct._object*, align 8
  %_py_decref_tmp85 = alloca %struct._object*, align 8
  %_py_tmp98 = alloca %struct._object*, align 8
  %_py_decref_tmp103 = alloca %struct._object*, align 8
  %_py_tmp116 = alloca %struct._object*, align 8
  %_py_decref_tmp121 = alloca %struct._object*, align 8
  %_py_tmp134 = alloca %struct._object*, align 8
  %_py_decref_tmp139 = alloca %struct._object*, align 8
  %_py_tmp152 = alloca %struct._object*, align 8
  %_py_decref_tmp157 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  %0 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %ParserFree = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %0, i32 0, i32 11
  %1 = load void (%struct.XML_ParserStruct*)*, void (%struct.XML_ParserStruct*)** %ParserFree, align 8
  %2 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %2, i32 0, i32 1
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  call void %1(%struct.XML_ParserStruct* %3)
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_close = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %4, i32 0, i32 11
  %5 = load %struct._object*, %struct._object** %handle_close, align 8
  store %struct._object* %5, %struct._object** %_py_tmp, align 8
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp = icmp ne %struct._object* %6, null
  br i1 %cmp, label %if.then, label %if.end.5

if.then:                                          ; preds = %do.body
  %7 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_close1 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %7, i32 0, i32 11
  store %struct._object* null, %struct._object** %handle_close1, align 8
  br label %do.body.2

do.body.2:                                        ; preds = %if.then
  %8 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0
  %10 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %10, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp3 = icmp ne i64 %dec, 0
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %do.body.2
  br label %if.end

if.else:                                          ; preds = %do.body.2
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %13(%struct._object* %14)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %if.end.5

if.end.5:                                         ; preds = %do.end, %do.body
  br label %do.end.6

do.end.6:                                         ; preds = %if.end.5
  br label %do.body.7

do.body.7:                                        ; preds = %do.end.6
  %15 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_pi = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %15, i32 0, i32 9
  %16 = load %struct._object*, %struct._object** %handle_pi, align 8
  store %struct._object* %16, %struct._object** %_py_tmp8, align 8
  %17 = load %struct._object*, %struct._object** %_py_tmp8, align 8
  %cmp9 = icmp ne %struct._object* %17, null
  br i1 %cmp9, label %if.then.10, label %if.end.23

if.then.10:                                       ; preds = %do.body.7
  %18 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_pi11 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %18, i32 0, i32 9
  store %struct._object* null, %struct._object** %handle_pi11, align 8
  br label %do.body.12

do.body.12:                                       ; preds = %if.then.10
  %19 = load %struct._object*, %struct._object** %_py_tmp8, align 8
  store %struct._object* %19, %struct._object** %_py_decref_tmp13, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0
  %21 = load i64, i64* %ob_refcnt14, align 8
  %dec15 = add i64 %21, -1
  store i64 %dec15, i64* %ob_refcnt14, align 8
  %cmp16 = icmp ne i64 %dec15, 0
  br i1 %cmp16, label %if.then.17, label %if.else.18

if.then.17:                                       ; preds = %do.body.12
  br label %if.end.21

if.else.18:                                       ; preds = %do.body.12
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8
  %tp_dealloc20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc20, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8
  call void %24(%struct._object* %25)
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.18, %if.then.17
  br label %do.end.22

do.end.22:                                        ; preds = %if.end.21
  br label %if.end.23

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  br label %do.end.24

do.end.24:                                        ; preds = %if.end.23
  br label %do.body.25

do.body.25:                                       ; preds = %do.end.24
  %26 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_comment = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %26, i32 0, i32 8
  %27 = load %struct._object*, %struct._object** %handle_comment, align 8
  store %struct._object* %27, %struct._object** %_py_tmp26, align 8
  %28 = load %struct._object*, %struct._object** %_py_tmp26, align 8
  %cmp27 = icmp ne %struct._object* %28, null
  br i1 %cmp27, label %if.then.28, label %if.end.41

if.then.28:                                       ; preds = %do.body.25
  %29 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_comment29 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %29, i32 0, i32 8
  store %struct._object* null, %struct._object** %handle_comment29, align 8
  br label %do.body.30

do.body.30:                                       ; preds = %if.then.28
  %30 = load %struct._object*, %struct._object** %_py_tmp26, align 8
  store %struct._object* %30, %struct._object** %_py_decref_tmp31, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0
  %32 = load i64, i64* %ob_refcnt32, align 8
  %dec33 = add i64 %32, -1
  store i64 %dec33, i64* %ob_refcnt32, align 8
  %cmp34 = icmp ne i64 %dec33, 0
  br i1 %cmp34, label %if.then.35, label %if.else.36

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39

if.else.36:                                       ; preds = %do.body.30
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  call void %35(%struct._object* %36)
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  br label %do.end.40

do.end.40:                                        ; preds = %if.end.39
  br label %if.end.41

if.end.41:                                        ; preds = %do.end.40, %do.body.25
  br label %do.end.42

do.end.42:                                        ; preds = %if.end.41
  br label %do.body.43

do.body.43:                                       ; preds = %do.end.42
  %37 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_end = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %37, i32 0, i32 7
  %38 = load %struct._object*, %struct._object** %handle_end, align 8
  store %struct._object* %38, %struct._object** %_py_tmp44, align 8
  %39 = load %struct._object*, %struct._object** %_py_tmp44, align 8
  %cmp45 = icmp ne %struct._object* %39, null
  br i1 %cmp45, label %if.then.46, label %if.end.59

if.then.46:                                       ; preds = %do.body.43
  %40 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_end47 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %40, i32 0, i32 7
  store %struct._object* null, %struct._object** %handle_end47, align 8
  br label %do.body.48

do.body.48:                                       ; preds = %if.then.46
  %41 = load %struct._object*, %struct._object** %_py_tmp44, align 8
  store %struct._object* %41, %struct._object** %_py_decref_tmp49, align 8
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8
  %ob_refcnt50 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0
  %43 = load i64, i64* %ob_refcnt50, align 8
  %dec51 = add i64 %43, -1
  store i64 %dec51, i64* %ob_refcnt50, align 8
  %cmp52 = icmp ne i64 %dec51, 0
  br i1 %cmp52, label %if.then.53, label %if.else.54

if.then.53:                                       ; preds = %do.body.48
  br label %if.end.57

if.else.54:                                       ; preds = %do.body.48
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8
  %tp_dealloc56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc56, align 8
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8
  call void %46(%struct._object* %47)
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.54, %if.then.53
  br label %do.end.58

do.end.58:                                        ; preds = %if.end.57
  br label %if.end.59

if.end.59:                                        ; preds = %do.end.58, %do.body.43
  br label %do.end.60

do.end.60:                                        ; preds = %if.end.59
  br label %do.body.61

do.body.61:                                       ; preds = %do.end.60
  %48 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_data = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %48, i32 0, i32 6
  %49 = load %struct._object*, %struct._object** %handle_data, align 8
  store %struct._object* %49, %struct._object** %_py_tmp62, align 8
  %50 = load %struct._object*, %struct._object** %_py_tmp62, align 8
  %cmp63 = icmp ne %struct._object* %50, null
  br i1 %cmp63, label %if.then.64, label %if.end.77

if.then.64:                                       ; preds = %do.body.61
  %51 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_data65 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %51, i32 0, i32 6
  store %struct._object* null, %struct._object** %handle_data65, align 8
  br label %do.body.66

do.body.66:                                       ; preds = %if.then.64
  %52 = load %struct._object*, %struct._object** %_py_tmp62, align 8
  store %struct._object* %52, %struct._object** %_py_decref_tmp67, align 8
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8
  %ob_refcnt68 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0
  %54 = load i64, i64* %ob_refcnt68, align 8
  %dec69 = add i64 %54, -1
  store i64 %dec69, i64* %ob_refcnt68, align 8
  %cmp70 = icmp ne i64 %dec69, 0
  br i1 %cmp70, label %if.then.71, label %if.else.72

if.then.71:                                       ; preds = %do.body.66
  br label %if.end.75

if.else.72:                                       ; preds = %do.body.66
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8
  %ob_type73 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 1
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type73, align 8
  %tp_dealloc74 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i32 0, i32 4
  %57 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc74, align 8
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8
  call void %57(%struct._object* %58)
  br label %if.end.75

if.end.75:                                        ; preds = %if.else.72, %if.then.71
  br label %do.end.76

do.end.76:                                        ; preds = %if.end.75
  br label %if.end.77

if.end.77:                                        ; preds = %do.end.76, %do.body.61
  br label %do.end.78

do.end.78:                                        ; preds = %if.end.77
  br label %do.body.79

do.body.79:                                       ; preds = %do.end.78
  %59 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_start = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %59, i32 0, i32 5
  %60 = load %struct._object*, %struct._object** %handle_start, align 8
  store %struct._object* %60, %struct._object** %_py_tmp80, align 8
  %61 = load %struct._object*, %struct._object** %_py_tmp80, align 8
  %cmp81 = icmp ne %struct._object* %61, null
  br i1 %cmp81, label %if.then.82, label %if.end.95

if.then.82:                                       ; preds = %do.body.79
  %62 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_start83 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %62, i32 0, i32 5
  store %struct._object* null, %struct._object** %handle_start83, align 8
  br label %do.body.84

do.body.84:                                       ; preds = %if.then.82
  %63 = load %struct._object*, %struct._object** %_py_tmp80, align 8
  store %struct._object* %63, %struct._object** %_py_decref_tmp85, align 8
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8
  %ob_refcnt86 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 0
  %65 = load i64, i64* %ob_refcnt86, align 8
  %dec87 = add i64 %65, -1
  store i64 %dec87, i64* %ob_refcnt86, align 8
  %cmp88 = icmp ne i64 %dec87, 0
  br i1 %cmp88, label %if.then.89, label %if.else.90

if.then.89:                                       ; preds = %do.body.84
  br label %if.end.93

if.else.90:                                       ; preds = %do.body.84
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8
  %ob_type91 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 1
  %67 = load %struct._typeobject*, %struct._typeobject** %ob_type91, align 8
  %tp_dealloc92 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %67, i32 0, i32 4
  %68 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc92, align 8
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8
  call void %68(%struct._object* %69)
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.90, %if.then.89
  br label %do.end.94

do.end.94:                                        ; preds = %if.end.93
  br label %if.end.95

if.end.95:                                        ; preds = %do.end.94, %do.body.79
  br label %do.end.96

do.end.96:                                        ; preds = %if.end.95
  br label %do.body.97

do.body.97:                                       ; preds = %do.end.96
  %70 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_doctype = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %70, i32 0, i32 10
  %71 = load %struct._object*, %struct._object** %handle_doctype, align 8
  store %struct._object* %71, %struct._object** %_py_tmp98, align 8
  %72 = load %struct._object*, %struct._object** %_py_tmp98, align 8
  %cmp99 = icmp ne %struct._object* %72, null
  br i1 %cmp99, label %if.then.100, label %if.end.113

if.then.100:                                      ; preds = %do.body.97
  %73 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_doctype101 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %73, i32 0, i32 10
  store %struct._object* null, %struct._object** %handle_doctype101, align 8
  br label %do.body.102

do.body.102:                                      ; preds = %if.then.100
  %74 = load %struct._object*, %struct._object** %_py_tmp98, align 8
  store %struct._object* %74, %struct._object** %_py_decref_tmp103, align 8
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8
  %ob_refcnt104 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 0
  %76 = load i64, i64* %ob_refcnt104, align 8
  %dec105 = add i64 %76, -1
  store i64 %dec105, i64* %ob_refcnt104, align 8
  %cmp106 = icmp ne i64 %dec105, 0
  br i1 %cmp106, label %if.then.107, label %if.else.108

if.then.107:                                      ; preds = %do.body.102
  br label %if.end.111

if.else.108:                                      ; preds = %do.body.102
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8
  %ob_type109 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 1
  %78 = load %struct._typeobject*, %struct._typeobject** %ob_type109, align 8
  %tp_dealloc110 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %78, i32 0, i32 4
  %79 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc110, align 8
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8
  call void %79(%struct._object* %80)
  br label %if.end.111

if.end.111:                                       ; preds = %if.else.108, %if.then.107
  br label %do.end.112

do.end.112:                                       ; preds = %if.end.111
  br label %if.end.113

if.end.113:                                       ; preds = %do.end.112, %do.body.97
  br label %do.end.114

do.end.114:                                       ; preds = %if.end.113
  br label %do.body.115

do.body.115:                                      ; preds = %do.end.114
  %81 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %81, i32 0, i32 2
  %82 = load %struct._object*, %struct._object** %target, align 8
  store %struct._object* %82, %struct._object** %_py_tmp116, align 8
  %83 = load %struct._object*, %struct._object** %_py_tmp116, align 8
  %cmp117 = icmp ne %struct._object* %83, null
  br i1 %cmp117, label %if.then.118, label %if.end.131

if.then.118:                                      ; preds = %do.body.115
  %84 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target119 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %84, i32 0, i32 2
  store %struct._object* null, %struct._object** %target119, align 8
  br label %do.body.120

do.body.120:                                      ; preds = %if.then.118
  %85 = load %struct._object*, %struct._object** %_py_tmp116, align 8
  store %struct._object* %85, %struct._object** %_py_decref_tmp121, align 8
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8
  %ob_refcnt122 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 0
  %87 = load i64, i64* %ob_refcnt122, align 8
  %dec123 = add i64 %87, -1
  store i64 %dec123, i64* %ob_refcnt122, align 8
  %cmp124 = icmp ne i64 %dec123, 0
  br i1 %cmp124, label %if.then.125, label %if.else.126

if.then.125:                                      ; preds = %do.body.120
  br label %if.end.129

if.else.126:                                      ; preds = %do.body.120
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8
  %ob_type127 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 1
  %89 = load %struct._typeobject*, %struct._typeobject** %ob_type127, align 8
  %tp_dealloc128 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %89, i32 0, i32 4
  %90 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc128, align 8
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8
  call void %90(%struct._object* %91)
  br label %if.end.129

if.end.129:                                       ; preds = %if.else.126, %if.then.125
  br label %do.end.130

do.end.130:                                       ; preds = %if.end.129
  br label %if.end.131

if.end.131:                                       ; preds = %do.end.130, %do.body.115
  br label %do.end.132

do.end.132:                                       ; preds = %if.end.131
  br label %do.body.133

do.body.133:                                      ; preds = %do.end.132
  %92 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %entity = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %92, i32 0, i32 3
  %93 = load %struct._object*, %struct._object** %entity, align 8
  store %struct._object* %93, %struct._object** %_py_tmp134, align 8
  %94 = load %struct._object*, %struct._object** %_py_tmp134, align 8
  %cmp135 = icmp ne %struct._object* %94, null
  br i1 %cmp135, label %if.then.136, label %if.end.149

if.then.136:                                      ; preds = %do.body.133
  %95 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %entity137 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %95, i32 0, i32 3
  store %struct._object* null, %struct._object** %entity137, align 8
  br label %do.body.138

do.body.138:                                      ; preds = %if.then.136
  %96 = load %struct._object*, %struct._object** %_py_tmp134, align 8
  store %struct._object* %96, %struct._object** %_py_decref_tmp139, align 8
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8
  %ob_refcnt140 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 0
  %98 = load i64, i64* %ob_refcnt140, align 8
  %dec141 = add i64 %98, -1
  store i64 %dec141, i64* %ob_refcnt140, align 8
  %cmp142 = icmp ne i64 %dec141, 0
  br i1 %cmp142, label %if.then.143, label %if.else.144

if.then.143:                                      ; preds = %do.body.138
  br label %if.end.147

if.else.144:                                      ; preds = %do.body.138
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8
  %ob_type145 = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 1
  %100 = load %struct._typeobject*, %struct._typeobject** %ob_type145, align 8
  %tp_dealloc146 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %100, i32 0, i32 4
  %101 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc146, align 8
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8
  call void %101(%struct._object* %102)
  br label %if.end.147

if.end.147:                                       ; preds = %if.else.144, %if.then.143
  br label %do.end.148

do.end.148:                                       ; preds = %if.end.147
  br label %if.end.149

if.end.149:                                       ; preds = %do.end.148, %do.body.133
  br label %do.end.150

do.end.150:                                       ; preds = %if.end.149
  br label %do.body.151

do.body.151:                                      ; preds = %do.end.150
  %103 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %names = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %103, i32 0, i32 4
  %104 = load %struct._object*, %struct._object** %names, align 8
  store %struct._object* %104, %struct._object** %_py_tmp152, align 8
  %105 = load %struct._object*, %struct._object** %_py_tmp152, align 8
  %cmp153 = icmp ne %struct._object* %105, null
  br i1 %cmp153, label %if.then.154, label %if.end.167

if.then.154:                                      ; preds = %do.body.151
  %106 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %names155 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %106, i32 0, i32 4
  store %struct._object* null, %struct._object** %names155, align 8
  br label %do.body.156

do.body.156:                                      ; preds = %if.then.154
  %107 = load %struct._object*, %struct._object** %_py_tmp152, align 8
  store %struct._object* %107, %struct._object** %_py_decref_tmp157, align 8
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8
  %ob_refcnt158 = getelementptr inbounds %struct._object, %struct._object* %108, i32 0, i32 0
  %109 = load i64, i64* %ob_refcnt158, align 8
  %dec159 = add i64 %109, -1
  store i64 %dec159, i64* %ob_refcnt158, align 8
  %cmp160 = icmp ne i64 %dec159, 0
  br i1 %cmp160, label %if.then.161, label %if.else.162

if.then.161:                                      ; preds = %do.body.156
  br label %if.end.165

if.else.162:                                      ; preds = %do.body.156
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8
  %ob_type163 = getelementptr inbounds %struct._object, %struct._object* %110, i32 0, i32 1
  %111 = load %struct._typeobject*, %struct._typeobject** %ob_type163, align 8
  %tp_dealloc164 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %111, i32 0, i32 4
  %112 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc164, align 8
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8
  call void %112(%struct._object* %113)
  br label %if.end.165

if.end.165:                                       ; preds = %if.else.162, %if.then.161
  br label %do.end.166

do.end.166:                                       ; preds = %if.end.165
  br label %if.end.167

if.end.167:                                       ; preds = %do.end.166, %do.body.151
  br label %do.end.168

do.end.168:                                       ; preds = %if.end.167
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlparser_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %self_xp = alloca %struct.XMLParserObject*, align 8
  %target = alloca %struct._object*, align 8
  %html = alloca %struct._object*, align 8
  %encoding = alloca i8*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp25 = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  %_py_tmp44 = alloca %struct._object*, align 8
  %_py_decref_tmp50 = alloca %struct._object*, align 8
  %_py_tmp72 = alloca %struct._object*, align 8
  %_py_decref_tmp78 = alloca %struct._object*, align 8
  %_py_tmp91 = alloca %struct._object*, align 8
  %_py_decref_tmp97 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  %0 = load %struct._object*, %struct._object** %self.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct.XMLParserObject*
  store %struct.XMLParserObject* %1, %struct.XMLParserObject** %self_xp, align 8
  store %struct._object* null, %struct._object** %target, align 8
  store %struct._object* null, %struct._object** %html, align 8
  store i8* null, i8** %encoding, align 8
  %2 = load %struct._object*, %struct._object** %args.addr, align 8
  %3 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %2, %struct._object* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.134, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @xmlparser_init.kwlist, i32 0, i32 0), %struct._object** %html, %struct._object** %target, i8** %encoding)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyDict_New()
  %4 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %entity = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %4, i32 0, i32 3
  store %struct._object* %call1, %struct._object** %entity, align 8
  %5 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %entity2 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %5, i32 0, i32 3
  %6 = load %struct._object*, %struct._object** %entity2, align 8
  %tobool3 = icmp ne %struct._object* %6, null
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end
  store i32 -1, i32* %retval
  br label %return

if.end.5:                                         ; preds = %if.end
  %call6 = call %struct._object* @PyDict_New()
  %7 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %names = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %7, i32 0, i32 4
  store %struct._object* %call6, %struct._object** %names, align 8
  %8 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %names7 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %8, i32 0, i32 4
  %9 = load %struct._object*, %struct._object** %names7, align 8
  %tobool8 = icmp ne %struct._object* %9, null
  br i1 %tobool8, label %if.end.19, label %if.then.9

if.then.9:                                        ; preds = %if.end.5
  br label %do.body

do.body:                                          ; preds = %if.then.9
  %10 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %entity10 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %10, i32 0, i32 3
  %11 = load %struct._object*, %struct._object** %entity10, align 8
  store %struct._object* %11, %struct._object** %_py_tmp, align 8
  %12 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp = icmp ne %struct._object* %12, null
  br i1 %cmp, label %if.then.11, label %if.end.17

if.then.11:                                       ; preds = %do.body
  %13 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %entity12 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %13, i32 0, i32 3
  store %struct._object* null, %struct._object** %entity12, align 8
  br label %do.body.13

do.body.13:                                       ; preds = %if.then.11
  %14 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0
  %16 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %16, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp14 = icmp ne i64 %dec, 0
  br i1 %cmp14, label %if.then.15, label %if.else

if.then.15:                                       ; preds = %do.body.13
  br label %if.end.16

if.else:                                          ; preds = %do.body.13
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %19(%struct._object* %20)
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.15
  br label %do.end

do.end:                                           ; preds = %if.end.16
  br label %if.end.17

if.end.17:                                        ; preds = %do.end, %do.body
  br label %do.end.18

do.end.18:                                        ; preds = %if.end.17
  store i32 -1, i32* %retval
  br label %return

if.end.19:                                        ; preds = %if.end.5
  %21 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %ParserCreate_MM = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %21, i32 0, i32 10
  %22 = load %struct.XML_ParserStruct* (i8*, %struct.XML_Memory_Handling_Suite*, i8*)*, %struct.XML_ParserStruct* (i8*, %struct.XML_Memory_Handling_Suite*, i8*)** %ParserCreate_MM, align 8
  %23 = load i8*, i8** %encoding, align 8
  %call20 = call %struct.XML_ParserStruct* %22(i8* %23, %struct.XML_Memory_Handling_Suite* @ExpatMemoryHandler, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.135, i32 0, i32 0))
  %24 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %24, i32 0, i32 1
  store %struct.XML_ParserStruct* %call20, %struct.XML_ParserStruct** %parser, align 8
  %25 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %parser21 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %25, i32 0, i32 1
  %26 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser21, align 8
  %tobool22 = icmp ne %struct.XML_ParserStruct* %26, null
  br i1 %tobool22, label %if.end.63, label %if.then.23

if.then.23:                                       ; preds = %if.end.19
  br label %do.body.24

do.body.24:                                       ; preds = %if.then.23
  %27 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %entity26 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %27, i32 0, i32 3
  %28 = load %struct._object*, %struct._object** %entity26, align 8
  store %struct._object* %28, %struct._object** %_py_tmp25, align 8
  %29 = load %struct._object*, %struct._object** %_py_tmp25, align 8
  %cmp27 = icmp ne %struct._object* %29, null
  br i1 %cmp27, label %if.then.28, label %if.end.41

if.then.28:                                       ; preds = %do.body.24
  %30 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %entity29 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %30, i32 0, i32 3
  store %struct._object* null, %struct._object** %entity29, align 8
  br label %do.body.30

do.body.30:                                       ; preds = %if.then.28
  %31 = load %struct._object*, %struct._object** %_py_tmp25, align 8
  store %struct._object* %31, %struct._object** %_py_decref_tmp31, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0
  %33 = load i64, i64* %ob_refcnt32, align 8
  %dec33 = add i64 %33, -1
  store i64 %dec33, i64* %ob_refcnt32, align 8
  %cmp34 = icmp ne i64 %dec33, 0
  br i1 %cmp34, label %if.then.35, label %if.else.36

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39

if.else.36:                                       ; preds = %do.body.30
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  call void %36(%struct._object* %37)
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  br label %do.end.40

do.end.40:                                        ; preds = %if.end.39
  br label %if.end.41

if.end.41:                                        ; preds = %do.end.40, %do.body.24
  br label %do.end.42

do.end.42:                                        ; preds = %if.end.41
  br label %do.body.43

do.body.43:                                       ; preds = %do.end.42
  %38 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %names45 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %38, i32 0, i32 4
  %39 = load %struct._object*, %struct._object** %names45, align 8
  store %struct._object* %39, %struct._object** %_py_tmp44, align 8
  %40 = load %struct._object*, %struct._object** %_py_tmp44, align 8
  %cmp46 = icmp ne %struct._object* %40, null
  br i1 %cmp46, label %if.then.47, label %if.end.60

if.then.47:                                       ; preds = %do.body.43
  %41 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %names48 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %41, i32 0, i32 4
  store %struct._object* null, %struct._object** %names48, align 8
  br label %do.body.49

do.body.49:                                       ; preds = %if.then.47
  %42 = load %struct._object*, %struct._object** %_py_tmp44, align 8
  store %struct._object* %42, %struct._object** %_py_decref_tmp50, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0
  %44 = load i64, i64* %ob_refcnt51, align 8
  %dec52 = add i64 %44, -1
  store i64 %dec52, i64* %ob_refcnt51, align 8
  %cmp53 = icmp ne i64 %dec52, 0
  br i1 %cmp53, label %if.then.54, label %if.else.55

if.then.54:                                       ; preds = %do.body.49
  br label %if.end.58

if.else.55:                                       ; preds = %do.body.49
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8
  %tp_dealloc57 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc57, align 8
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8
  call void %47(%struct._object* %48)
  br label %if.end.58

if.end.58:                                        ; preds = %if.else.55, %if.then.54
  br label %do.end.59

do.end.59:                                        ; preds = %if.end.58
  br label %if.end.60

if.end.60:                                        ; preds = %do.end.59, %do.body.43
  br label %do.end.61

do.end.61:                                        ; preds = %if.end.60
  %call62 = call %struct._object* @PyErr_NoMemory()
  store i32 -1, i32* %retval
  br label %return

if.end.63:                                        ; preds = %if.end.19
  %49 = load %struct._object*, %struct._object** %target, align 8
  %tobool64 = icmp ne %struct._object* %49, null
  br i1 %tobool64, label %if.then.65, label %if.else.67

if.then.65:                                       ; preds = %if.end.63
  %50 = load %struct._object*, %struct._object** %target, align 8
  %ob_refcnt66 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0
  %51 = load i64, i64* %ob_refcnt66, align 8
  %inc = add i64 %51, 1
  store i64 %inc, i64* %ob_refcnt66, align 8
  br label %if.end.111

if.else.67:                                       ; preds = %if.end.63
  %call68 = call %struct._object* @treebuilder_new(%struct._typeobject* @TreeBuilder_Type, %struct._object* null, %struct._object* null)
  store %struct._object* %call68, %struct._object** %target, align 8
  %52 = load %struct._object*, %struct._object** %target, align 8
  %tobool69 = icmp ne %struct._object* %52, null
  br i1 %tobool69, label %if.end.110, label %if.then.70

if.then.70:                                       ; preds = %if.else.67
  br label %do.body.71

do.body.71:                                       ; preds = %if.then.70
  %53 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %entity73 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %53, i32 0, i32 3
  %54 = load %struct._object*, %struct._object** %entity73, align 8
  store %struct._object* %54, %struct._object** %_py_tmp72, align 8
  %55 = load %struct._object*, %struct._object** %_py_tmp72, align 8
  %cmp74 = icmp ne %struct._object* %55, null
  br i1 %cmp74, label %if.then.75, label %if.end.88

if.then.75:                                       ; preds = %do.body.71
  %56 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %entity76 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %56, i32 0, i32 3
  store %struct._object* null, %struct._object** %entity76, align 8
  br label %do.body.77

do.body.77:                                       ; preds = %if.then.75
  %57 = load %struct._object*, %struct._object** %_py_tmp72, align 8
  store %struct._object* %57, %struct._object** %_py_decref_tmp78, align 8
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 0
  %59 = load i64, i64* %ob_refcnt79, align 8
  %dec80 = add i64 %59, -1
  store i64 %dec80, i64* %ob_refcnt79, align 8
  %cmp81 = icmp ne i64 %dec80, 0
  br i1 %cmp81, label %if.then.82, label %if.else.83

if.then.82:                                       ; preds = %do.body.77
  br label %if.end.86

if.else.83:                                       ; preds = %do.body.77
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8
  %ob_type84 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 1
  %61 = load %struct._typeobject*, %struct._typeobject** %ob_type84, align 8
  %tp_dealloc85 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 4
  %62 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc85, align 8
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8
  call void %62(%struct._object* %63)
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.83, %if.then.82
  br label %do.end.87

do.end.87:                                        ; preds = %if.end.86
  br label %if.end.88

if.end.88:                                        ; preds = %do.end.87, %do.body.71
  br label %do.end.89

do.end.89:                                        ; preds = %if.end.88
  br label %do.body.90

do.body.90:                                       ; preds = %do.end.89
  %64 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %names92 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %64, i32 0, i32 4
  %65 = load %struct._object*, %struct._object** %names92, align 8
  store %struct._object* %65, %struct._object** %_py_tmp91, align 8
  %66 = load %struct._object*, %struct._object** %_py_tmp91, align 8
  %cmp93 = icmp ne %struct._object* %66, null
  br i1 %cmp93, label %if.then.94, label %if.end.107

if.then.94:                                       ; preds = %do.body.90
  %67 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %names95 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %67, i32 0, i32 4
  store %struct._object* null, %struct._object** %names95, align 8
  br label %do.body.96

do.body.96:                                       ; preds = %if.then.94
  %68 = load %struct._object*, %struct._object** %_py_tmp91, align 8
  store %struct._object* %68, %struct._object** %_py_decref_tmp97, align 8
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp97, align 8
  %ob_refcnt98 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0
  %70 = load i64, i64* %ob_refcnt98, align 8
  %dec99 = add i64 %70, -1
  store i64 %dec99, i64* %ob_refcnt98, align 8
  %cmp100 = icmp ne i64 %dec99, 0
  br i1 %cmp100, label %if.then.101, label %if.else.102

if.then.101:                                      ; preds = %do.body.96
  br label %if.end.105

if.else.102:                                      ; preds = %do.body.96
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp97, align 8
  %ob_type103 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type103, align 8
  %tp_dealloc104 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc104, align 8
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp97, align 8
  call void %73(%struct._object* %74)
  br label %if.end.105

if.end.105:                                       ; preds = %if.else.102, %if.then.101
  br label %do.end.106

do.end.106:                                       ; preds = %if.end.105
  br label %if.end.107

if.end.107:                                       ; preds = %do.end.106, %do.body.90
  br label %do.end.108

do.end.108:                                       ; preds = %if.end.107
  %75 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %ParserFree = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %75, i32 0, i32 11
  %76 = load void (%struct.XML_ParserStruct*)*, void (%struct.XML_ParserStruct*)** %ParserFree, align 8
  %77 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %parser109 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %77, i32 0, i32 1
  %78 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser109, align 8
  call void %76(%struct.XML_ParserStruct* %78)
  store i32 -1, i32* %retval
  br label %return

if.end.110:                                       ; preds = %if.else.67
  br label %if.end.111

if.end.111:                                       ; preds = %if.end.110, %if.then.65
  %79 = load %struct._object*, %struct._object** %target, align 8
  %80 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %target112 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %80, i32 0, i32 2
  store %struct._object* %79, %struct._object** %target112, align 8
  %81 = load %struct._object*, %struct._object** %target, align 8
  %call113 = call %struct._object* @PyObject_GetAttrString(%struct._object* %81, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0))
  %82 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %handle_start = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %82, i32 0, i32 5
  store %struct._object* %call113, %struct._object** %handle_start, align 8
  %83 = load %struct._object*, %struct._object** %target, align 8
  %call114 = call %struct._object* @PyObject_GetAttrString(%struct._object* %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0))
  %84 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %handle_data = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %84, i32 0, i32 6
  store %struct._object* %call114, %struct._object** %handle_data, align 8
  %85 = load %struct._object*, %struct._object** %target, align 8
  %call115 = call %struct._object* @PyObject_GetAttrString(%struct._object* %85, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0))
  %86 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %handle_end = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %86, i32 0, i32 7
  store %struct._object* %call115, %struct._object** %handle_end, align 8
  %87 = load %struct._object*, %struct._object** %target, align 8
  %call116 = call %struct._object* @PyObject_GetAttrString(%struct._object* %87, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.136, i32 0, i32 0))
  %88 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %handle_comment = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %88, i32 0, i32 8
  store %struct._object* %call116, %struct._object** %handle_comment, align 8
  %89 = load %struct._object*, %struct._object** %target, align 8
  %call117 = call %struct._object* @PyObject_GetAttrString(%struct._object* %89, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0))
  %90 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %handle_pi = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %90, i32 0, i32 9
  store %struct._object* %call117, %struct._object** %handle_pi, align 8
  %91 = load %struct._object*, %struct._object** %target, align 8
  %call118 = call %struct._object* @PyObject_GetAttrString(%struct._object* %91, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0))
  %92 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %handle_close = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %92, i32 0, i32 11
  store %struct._object* %call118, %struct._object** %handle_close, align 8
  %93 = load %struct._object*, %struct._object** %target, align 8
  %call119 = call %struct._object* @PyObject_GetAttrString(%struct._object* %93, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0))
  %94 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %handle_doctype = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %94, i32 0, i32 10
  store %struct._object* %call119, %struct._object** %handle_doctype, align 8
  call void @PyErr_Clear()
  %95 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %SetUserData = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %95, i32 0, i32 19
  %96 = load void (%struct.XML_ParserStruct*, i8*)*, void (%struct.XML_ParserStruct*, i8*)** %SetUserData, align 8
  %97 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %parser120 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %97, i32 0, i32 1
  %98 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser120, align 8
  %99 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %100 = bitcast %struct.XMLParserObject* %99 to i8*
  call void %96(%struct.XML_ParserStruct* %98, i8* %100)
  %101 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %SetElementHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %101, i32 0, i32 15
  %102 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i8**)*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8**)*, void (i8*, i8*)*)** %SetElementHandler, align 8
  %103 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %parser121 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %103, i32 0, i32 1
  %104 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser121, align 8
  call void %102(%struct.XML_ParserStruct* %104, void (i8*, i8*, i8**)* bitcast (void (%struct.XMLParserObject*, i8*, i8**)* @expat_start_handler to void (i8*, i8*, i8**)*), void (i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*)* @expat_end_handler to void (i8*, i8*)*))
  %105 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %SetDefaultHandlerExpand = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %105, i32 0, i32 14
  %106 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)** %SetDefaultHandlerExpand, align 8
  %107 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %parser122 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %107, i32 0, i32 1
  %108 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser122, align 8
  call void %106(%struct.XML_ParserStruct* %108, void (i8*, i8*, i32)* bitcast (void (%struct.XMLParserObject*, i8*, i32)* @expat_default_handler to void (i8*, i8*, i32)*))
  %109 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %SetCharacterDataHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %109, i32 0, i32 12
  %110 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)** %SetCharacterDataHandler, align 8
  %111 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %parser123 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %111, i32 0, i32 1
  %112 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser123, align 8
  call void %110(%struct.XML_ParserStruct* %112, void (i8*, i8*, i32)* bitcast (void (%struct.XMLParserObject*, i8*, i32)* @expat_data_handler to void (i8*, i8*, i32)*))
  %113 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %handle_comment124 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %113, i32 0, i32 8
  %114 = load %struct._object*, %struct._object** %handle_comment124, align 8
  %tobool125 = icmp ne %struct._object* %114, null
  br i1 %tobool125, label %if.then.126, label %if.end.128

if.then.126:                                      ; preds = %if.end.111
  %115 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %SetCommentHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %115, i32 0, i32 13
  %116 = load void (%struct.XML_ParserStruct*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*)*)** %SetCommentHandler, align 8
  %117 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %parser127 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %117, i32 0, i32 1
  %118 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser127, align 8
  call void %116(%struct.XML_ParserStruct* %118, void (i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*)* @expat_comment_handler to void (i8*, i8*)*))
  br label %if.end.128

if.end.128:                                       ; preds = %if.then.126, %if.end.111
  %119 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %handle_pi129 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %119, i32 0, i32 9
  %120 = load %struct._object*, %struct._object** %handle_pi129, align 8
  %tobool130 = icmp ne %struct._object* %120, null
  br i1 %tobool130, label %if.then.131, label %if.end.133

if.then.131:                                      ; preds = %if.end.128
  %121 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %SetProcessingInstructionHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %121, i32 0, i32 17
  %122 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*)** %SetProcessingInstructionHandler, align 8
  %123 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %parser132 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %123, i32 0, i32 1
  %124 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser132, align 8
  call void %122(%struct.XML_ParserStruct* %124, void (i8*, i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*, i8*)* @expat_pi_handler to void (i8*, i8*, i8*)*))
  br label %if.end.133

if.end.133:                                       ; preds = %if.then.131, %if.end.128
  %125 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %SetStartDoctypeDeclHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %125, i32 0, i32 20
  %126 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i8*, i32)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i8*, i32)*)** %SetStartDoctypeDeclHandler, align 8
  %127 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %parser134 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %127, i32 0, i32 1
  %128 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser134, align 8
  call void %126(%struct.XML_ParserStruct* %128, void (i8*, i8*, i8*, i8*, i32)* bitcast (void (%struct.XMLParserObject*, i8*, i8*, i8*, i32)* @expat_start_doctype_handler to void (i8*, i8*, i8*, i8*, i32)*))
  %129 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %SetUnknownEncodingHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %129, i32 0, i32 18
  %130 = load void (%struct.XML_ParserStruct*, i32 (i8*, i8*, %struct.XML_Encoding*)*, i8*)*, void (%struct.XML_ParserStruct*, i32 (i8*, i8*, %struct.XML_Encoding*)*, i8*)** %SetUnknownEncodingHandler, align 8
  %131 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8
  %parser135 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %131, i32 0, i32 1
  %132 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser135, align 8
  %133 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %DefaultUnknownEncodingHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %133, i32 0, i32 22
  %134 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %DefaultUnknownEncodingHandler, align 8
  call void %130(%struct.XML_ParserStruct* %132, i32 (i8*, i8*, %struct.XML_Encoding*)* %134, i8* null)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.133, %do.end.108, %do.end.61, %do.end.18, %if.then.4, %if.then
  %135 = load i32, i32* %retval
  ret i32 %135
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %self = alloca %struct.XMLParserObject*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  %0 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %0, i32 0, i32 36
  %1 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8
  %2 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %call = call %struct._object* %1(%struct._typeobject* %2, i64 0)
  %3 = bitcast %struct._object* %call to %struct.XMLParserObject*
  store %struct.XMLParserObject* %3, %struct.XMLParserObject** %self, align 8
  %4 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %tobool = icmp ne %struct.XMLParserObject* %4, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %5, i32 0, i32 1
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %parser, align 8
  %6 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %names = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %6, i32 0, i32 4
  store %struct._object* null, %struct._object** %names, align 8
  %7 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %entity = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %7, i32 0, i32 3
  store %struct._object* null, %struct._object** %entity, align 8
  %8 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %8, i32 0, i32 2
  store %struct._object* null, %struct._object** %target, align 8
  %9 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %handle_end = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %9, i32 0, i32 7
  store %struct._object* null, %struct._object** %handle_end, align 8
  %10 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %handle_data = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %10, i32 0, i32 6
  store %struct._object* null, %struct._object** %handle_data, align 8
  %11 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %handle_start = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %11, i32 0, i32 5
  store %struct._object* null, %struct._object** %handle_start, align 8
  %12 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %handle_close = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %12, i32 0, i32 11
  store %struct._object* null, %struct._object** %handle_close, align 8
  %13 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %handle_pi = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %13, i32 0, i32 9
  store %struct._object* null, %struct._object** %handle_pi, align 8
  %14 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %handle_comment = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %14, i32 0, i32 8
  store %struct._object* null, %struct._object** %handle_comment, align 8
  %15 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %handle_doctype = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %15, i32 0, i32 10
  store %struct._object* null, %struct._object** %handle_doctype, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8
  %17 = bitcast %struct.XMLParserObject* %16 to %struct._object*
  ret %struct._object* %17
}

declare i32 @PyUnicode_CompareWithASCIIString(%struct._object*, i8*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_feed(%struct.XMLParserObject* %self, %struct._object* %arg) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %data_len = alloca i64, align 8
  %data = alloca i8*, align 8
  %view = alloca %struct.bufferinfo, align 8
  %res = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store %struct._object* %arg, %struct._object** %arg.addr, align 8
  %0 = load %struct._object*, %struct._object** %arg.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 268435456
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %arg.addr, align 8
  %call = call i8* @PyUnicode_AsUTF8AndSize(%struct._object* %3, i64* %data_len)
  store i8* %call, i8** %data, align 8
  %4 = load i8*, i8** %data, align 8
  %cmp1 = icmp eq i8* %4, null
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %if.then
  %5 = load i64, i64* %data_len, align 8
  %cmp3 = icmp sgt i64 %5, 2147483647
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.114, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.5:                                         ; preds = %if.end
  %7 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %SetEncoding = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %7, i32 0, i32 21
  %8 = load i32 (%struct.XML_ParserStruct*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*)** %SetEncoding, align 8
  %9 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %9, i32 0, i32 1
  %10 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %call6 = call i32 %8(%struct.XML_ParserStruct* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0))
  %11 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %12 = load i8*, i8** %data, align 8
  %13 = load i64, i64* %data_len, align 8
  %conv = trunc i64 %13 to i32
  %call7 = call %struct._object* @expat_parse(%struct.XMLParserObject* %11, i8* %12, i32 %conv, i32 0)
  store %struct._object* %call7, %struct._object** %retval
  br label %return

if.else:                                          ; preds = %entry
  %14 = load %struct._object*, %struct._object** %arg.addr, align 8
  %call8 = call i32 @PyObject_GetBuffer(%struct._object* %14, %struct.bufferinfo* %view, i32 0)
  %cmp9 = icmp slt i32 %call8, 0
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.12:                                        ; preds = %if.else
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 2
  %15 = load i64, i64* %len, align 8
  %cmp13 = icmp sgt i64 %15, 2147483647
  br i1 %cmp13, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.12
  call void @PyBuffer_Release(%struct.bufferinfo* %view)
  %16 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.114, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.16:                                        ; preds = %if.end.12
  %17 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 0
  %18 = load i8*, i8** %buf, align 8
  %len17 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 2
  %19 = load i64, i64* %len17, align 8
  %conv18 = trunc i64 %19 to i32
  %call19 = call %struct._object* @expat_parse(%struct.XMLParserObject* %17, i8* %18, i32 %conv18, i32 0)
  store %struct._object* %call19, %struct._object** %res, align 8
  call void @PyBuffer_Release(%struct.bufferinfo* %view)
  %20 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %20, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.16, %if.then.15, %if.then.11, %if.end.5, %if.then.4, %if.then.2
  %21 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %21
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_close(%struct.XMLParserObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0))
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %call1 = call %struct._object* @expat_parse(%struct.XMLParserObject* %1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0), i32 0, i32 1)
  store %struct._object* %call1, %struct._object** %res, align 8
  %2 = load %struct._object*, %struct._object** %res, align 8
  %tobool2 = icmp ne %struct._object* %2, null
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  %3 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %3, i32 0, i32 2
  %4 = load %struct._object*, %struct._object** %target, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %5, @TreeBuilder_Type
  br i1 %cmp, label %if.then.5, label %if.else.12

if.then.5:                                        ; preds = %if.end.4
  br label %do.body

do.body:                                          ; preds = %if.then.5
  %6 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0
  %8 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %8, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp6 = icmp ne i64 %dec, 0
  br i1 %cmp6, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %do.body
  br label %if.end.9

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type8 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type8, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %11(%struct._object* %12)
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.7
  br label %do.end

do.end:                                           ; preds = %if.end.9
  %13 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target10 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %13, i32 0, i32 2
  %14 = load %struct._object*, %struct._object** %target10, align 8
  %15 = bitcast %struct._object* %14 to %struct.TreeBuilderObject*
  %call11 = call %struct._object* @treebuilder_done(%struct.TreeBuilderObject* %15)
  store %struct._object* %call11, %struct._object** %retval
  br label %return

if.else.12:                                       ; preds = %if.end.4
  %16 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_close = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %16, i32 0, i32 11
  %17 = load %struct._object*, %struct._object** %handle_close, align 8
  %tobool13 = icmp ne %struct._object* %17, null
  br i1 %tobool13, label %if.then.14, label %if.else.28

if.then.14:                                       ; preds = %if.else.12
  br label %do.body.15

do.body.15:                                       ; preds = %if.then.14
  %18 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %18, %struct._object** %_py_decref_tmp16, align 8
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0
  %20 = load i64, i64* %ob_refcnt17, align 8
  %dec18 = add i64 %20, -1
  store i64 %dec18, i64* %ob_refcnt17, align 8
  %cmp19 = icmp ne i64 %dec18, 0
  br i1 %cmp19, label %if.then.20, label %if.else.21

if.then.20:                                       ; preds = %do.body.15
  br label %if.end.24

if.else.21:                                       ; preds = %do.body.15
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8
  call void %23(%struct._object* %24)
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  br label %do.end.25

do.end.25:                                        ; preds = %if.end.24
  %25 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_close26 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %25, i32 0, i32 11
  %26 = load %struct._object*, %struct._object** %handle_close26, align 8
  %call27 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0))
  store %struct._object* %call27, %struct._object** %retval
  br label %return

if.else.28:                                       ; preds = %if.else.12
  %27 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %27, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.else.28, %do.end.25, %do.end, %if.then.3, %if.then
  %28 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %28
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_parse_whole(%struct.XMLParserObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %reader = alloca %struct._object*, align 8
  %buffer = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %fileobj = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  %_py_decref_tmp30 = alloca %struct._object*, align 8
  %_py_decref_tmp43 = alloca %struct._object*, align 8
  %_py_decref_tmp60 = alloca %struct._object*, align 8
  %_py_decref_tmp75 = alloca %struct._object*, align 8
  %_py_decref_tmp89 = alloca %struct._object*, align 8
  %_py_decref_tmp102 = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  %_py_decref_tmp132 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i32 0, i32 0), %struct._object** %fileobj)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %fileobj, align 8
  %call1 = call %struct._object* @PyObject_GetAttrString(%struct._object* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i32 0, i32 0))
  store %struct._object* %call1, %struct._object** %reader, align 8
  %2 = load %struct._object*, %struct._object** %reader, align 8
  %tobool2 = icmp ne %struct._object* %2, null
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  br label %for.cond

for.cond:                                         ; preds = %do.end.112, %if.end.4
  %3 = load %struct._object*, %struct._object** %reader, align 8
  %call5 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122, i32 0, i32 0), i32 65536)
  store %struct._object* %call5, %struct._object** %buffer, align 8
  %4 = load %struct._object*, %struct._object** %buffer, align 8
  %tobool6 = icmp ne %struct._object* %4, null
  br i1 %tobool6, label %if.end.10, label %if.then.7

if.then.7:                                        ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %if.then.7
  %5 = load %struct._object*, %struct._object** %reader, align 8
  store %struct._object* %5, %struct._object** %_py_decref_tmp, align 8
  %6 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0
  %7 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %7, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.8, label %if.else

if.then.8:                                        ; preds = %do.body
  br label %if.end.9

if.else:                                          ; preds = %do.body
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 4
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %10(%struct._object* %11)
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  br label %do.end

do.end:                                           ; preds = %if.end.9
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.10:                                        ; preds = %for.cond
  %12 = load %struct._object*, %struct._object** %buffer, align 8
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8
  %cmp12 = icmp eq %struct._typeobject* %13, @PyUnicode_Type
  br i1 %cmp12, label %if.then.13, label %if.else.54

if.then.13:                                       ; preds = %if.end.10
  %14 = load %struct._object*, %struct._object** %buffer, align 8
  %15 = bitcast %struct._object* %14 to %struct.PyASCIIObject*
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %15, i32 0, i32 1
  %16 = load i64, i64* %length, align 8
  %cmp14 = icmp eq i64 %16, 0
  br i1 %cmp14, label %if.then.15, label %if.end.27

if.then.15:                                       ; preds = %if.then.13
  br label %do.body.16

do.body.16:                                       ; preds = %if.then.15
  %17 = load %struct._object*, %struct._object** %buffer, align 8
  store %struct._object* %17, %struct._object** %_py_decref_tmp17, align 8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0
  %19 = load i64, i64* %ob_refcnt18, align 8
  %dec19 = add i64 %19, -1
  store i64 %dec19, i64* %ob_refcnt18, align 8
  %cmp20 = icmp ne i64 %dec19, 0
  br i1 %cmp20, label %if.then.21, label %if.else.22

if.then.21:                                       ; preds = %do.body.16
  br label %if.end.25

if.else.22:                                       ; preds = %do.body.16
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  call void %22(%struct._object* %23)
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  br label %do.end.26

do.end.26:                                        ; preds = %if.end.25
  br label %for.end

if.end.27:                                        ; preds = %if.then.13
  %24 = load %struct._object*, %struct._object** %buffer, align 8
  %call28 = call %struct._object* @PyUnicode_AsEncodedString(%struct._object* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.123, i32 0, i32 0))
  store %struct._object* %call28, %struct._object** %temp, align 8
  br label %do.body.29

do.body.29:                                       ; preds = %if.end.27
  %25 = load %struct._object*, %struct._object** %buffer, align 8
  store %struct._object* %25, %struct._object** %_py_decref_tmp30, align 8
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0
  %27 = load i64, i64* %ob_refcnt31, align 8
  %dec32 = add i64 %27, -1
  store i64 %dec32, i64* %ob_refcnt31, align 8
  %cmp33 = icmp ne i64 %dec32, 0
  br i1 %cmp33, label %if.then.34, label %if.else.35

if.then.34:                                       ; preds = %do.body.29
  br label %if.end.38

if.else.35:                                       ; preds = %do.body.29
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8
  %tp_dealloc37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc37, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8
  call void %30(%struct._object* %31)
  br label %if.end.38

if.end.38:                                        ; preds = %if.else.35, %if.then.34
  br label %do.end.39

do.end.39:                                        ; preds = %if.end.38
  %32 = load %struct._object*, %struct._object** %temp, align 8
  %tobool40 = icmp ne %struct._object* %32, null
  br i1 %tobool40, label %if.end.53, label %if.then.41

if.then.41:                                       ; preds = %do.end.39
  br label %do.body.42

do.body.42:                                       ; preds = %if.then.41
  %33 = load %struct._object*, %struct._object** %reader, align 8
  store %struct._object* %33, %struct._object** %_py_decref_tmp43, align 8
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0
  %35 = load i64, i64* %ob_refcnt44, align 8
  %dec45 = add i64 %35, -1
  store i64 %dec45, i64* %ob_refcnt44, align 8
  %cmp46 = icmp ne i64 %dec45, 0
  br i1 %cmp46, label %if.then.47, label %if.else.48

if.then.47:                                       ; preds = %do.body.42
  br label %if.end.51

if.else.48:                                       ; preds = %do.body.42
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  %ob_type49 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type49, align 8
  %tp_dealloc50 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc50, align 8
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  call void %38(%struct._object* %39)
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.48, %if.then.47
  br label %do.end.52

do.end.52:                                        ; preds = %if.end.51
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.53:                                        ; preds = %do.end.39
  %40 = load %struct._object*, %struct._object** %temp, align 8
  store %struct._object* %40, %struct._object** %buffer, align 8
  br label %if.end.71

if.else.54:                                       ; preds = %if.end.10
  %41 = load %struct._object*, %struct._object** %buffer, align 8
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8
  %cmp56 = icmp eq %struct._typeobject* %42, @PyBytes_Type
  br i1 %cmp56, label %lor.lhs.false, label %if.then.58

lor.lhs.false:                                    ; preds = %if.else.54
  %43 = load %struct._object*, %struct._object** %buffer, align 8
  %44 = bitcast %struct._object* %43 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %44, i32 0, i32 1
  %45 = load i64, i64* %ob_size, align 8
  %cmp57 = icmp eq i64 %45, 0
  br i1 %cmp57, label %if.then.58, label %if.end.70

if.then.58:                                       ; preds = %lor.lhs.false, %if.else.54
  br label %do.body.59

do.body.59:                                       ; preds = %if.then.58
  %46 = load %struct._object*, %struct._object** %buffer, align 8
  store %struct._object* %46, %struct._object** %_py_decref_tmp60, align 8
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0
  %48 = load i64, i64* %ob_refcnt61, align 8
  %dec62 = add i64 %48, -1
  store i64 %dec62, i64* %ob_refcnt61, align 8
  %cmp63 = icmp ne i64 %dec62, 0
  br i1 %cmp63, label %if.then.64, label %if.else.65

if.then.64:                                       ; preds = %do.body.59
  br label %if.end.68

if.else.65:                                       ; preds = %do.body.59
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8
  %ob_type66 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 1
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type66, align 8
  %tp_dealloc67 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %50, i32 0, i32 4
  %51 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc67, align 8
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8
  call void %51(%struct._object* %52)
  br label %if.end.68

if.end.68:                                        ; preds = %if.else.65, %if.then.64
  br label %do.end.69

do.end.69:                                        ; preds = %if.end.68
  br label %for.end

if.end.70:                                        ; preds = %lor.lhs.false
  br label %if.end.71

if.end.71:                                        ; preds = %if.end.70, %if.end.53
  %53 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %54 = load %struct._object*, %struct._object** %buffer, align 8
  %55 = bitcast %struct._object* %54 to %struct.PyBytesObject*
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %55, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0
  %56 = load %struct._object*, %struct._object** %buffer, align 8
  %57 = bitcast %struct._object* %56 to %struct.PyVarObject*
  %ob_size72 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %57, i32 0, i32 1
  %58 = load i64, i64* %ob_size72, align 8
  %conv = trunc i64 %58 to i32
  %call73 = call %struct._object* @expat_parse(%struct.XMLParserObject* %53, i8* %arraydecay, i32 %conv, i32 0)
  store %struct._object* %call73, %struct._object** %res, align 8
  br label %do.body.74

do.body.74:                                       ; preds = %if.end.71
  %59 = load %struct._object*, %struct._object** %buffer, align 8
  store %struct._object* %59, %struct._object** %_py_decref_tmp75, align 8
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8
  %ob_refcnt76 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0
  %61 = load i64, i64* %ob_refcnt76, align 8
  %dec77 = add i64 %61, -1
  store i64 %dec77, i64* %ob_refcnt76, align 8
  %cmp78 = icmp ne i64 %dec77, 0
  br i1 %cmp78, label %if.then.80, label %if.else.81

if.then.80:                                       ; preds = %do.body.74
  br label %if.end.84

if.else.81:                                       ; preds = %do.body.74
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8
  %ob_type82 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type82, align 8
  %tp_dealloc83 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc83, align 8
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8
  call void %64(%struct._object* %65)
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.81, %if.then.80
  br label %do.end.85

do.end.85:                                        ; preds = %if.end.84
  %66 = load %struct._object*, %struct._object** %res, align 8
  %tobool86 = icmp ne %struct._object* %66, null
  br i1 %tobool86, label %if.end.100, label %if.then.87

if.then.87:                                       ; preds = %do.end.85
  br label %do.body.88

do.body.88:                                       ; preds = %if.then.87
  %67 = load %struct._object*, %struct._object** %reader, align 8
  store %struct._object* %67, %struct._object** %_py_decref_tmp89, align 8
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8
  %ob_refcnt90 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0
  %69 = load i64, i64* %ob_refcnt90, align 8
  %dec91 = add i64 %69, -1
  store i64 %dec91, i64* %ob_refcnt90, align 8
  %cmp92 = icmp ne i64 %dec91, 0
  br i1 %cmp92, label %if.then.94, label %if.else.95

if.then.94:                                       ; preds = %do.body.88
  br label %if.end.98

if.else.95:                                       ; preds = %do.body.88
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8
  %ob_type96 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type96, align 8
  %tp_dealloc97 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc97, align 8
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8
  call void %72(%struct._object* %73)
  br label %if.end.98

if.end.98:                                        ; preds = %if.else.95, %if.then.94
  br label %do.end.99

do.end.99:                                        ; preds = %if.end.98
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.100:                                       ; preds = %do.end.85
  br label %do.body.101

do.body.101:                                      ; preds = %if.end.100
  %74 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %74, %struct._object** %_py_decref_tmp102, align 8
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp102, align 8
  %ob_refcnt103 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 0
  %76 = load i64, i64* %ob_refcnt103, align 8
  %dec104 = add i64 %76, -1
  store i64 %dec104, i64* %ob_refcnt103, align 8
  %cmp105 = icmp ne i64 %dec104, 0
  br i1 %cmp105, label %if.then.107, label %if.else.108

if.then.107:                                      ; preds = %do.body.101
  br label %if.end.111

if.else.108:                                      ; preds = %do.body.101
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp102, align 8
  %ob_type109 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 1
  %78 = load %struct._typeobject*, %struct._typeobject** %ob_type109, align 8
  %tp_dealloc110 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %78, i32 0, i32 4
  %79 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc110, align 8
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp102, align 8
  call void %79(%struct._object* %80)
  br label %if.end.111

if.end.111:                                       ; preds = %if.else.108, %if.then.107
  br label %do.end.112

do.end.112:                                       ; preds = %if.end.111
  br label %for.cond

for.end:                                          ; preds = %do.end.69, %do.end.26
  br label %do.body.113

do.body.113:                                      ; preds = %for.end
  %81 = load %struct._object*, %struct._object** %reader, align 8
  store %struct._object* %81, %struct._object** %_py_decref_tmp114, align 8
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0
  %83 = load i64, i64* %ob_refcnt115, align 8
  %dec116 = add i64 %83, -1
  store i64 %dec116, i64* %ob_refcnt115, align 8
  %cmp117 = icmp ne i64 %dec116, 0
  br i1 %cmp117, label %if.then.119, label %if.else.120

if.then.119:                                      ; preds = %do.body.113
  br label %if.end.123

if.else.120:                                      ; preds = %do.body.113
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8
  %ob_type121 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type121, align 8
  %tp_dealloc122 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 4
  %86 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc122, align 8
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8
  call void %86(%struct._object* %87)
  br label %if.end.123

if.end.123:                                       ; preds = %if.else.120, %if.then.119
  br label %do.end.124

do.end.124:                                       ; preds = %if.end.123
  %88 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %call125 = call %struct._object* @expat_parse(%struct.XMLParserObject* %88, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0), i32 0, i32 1)
  store %struct._object* %call125, %struct._object** %res, align 8
  %89 = load %struct._object*, %struct._object** %res, align 8
  %tobool126 = icmp ne %struct._object* %89, null
  br i1 %tobool126, label %land.lhs.true, label %if.end.145

land.lhs.true:                                    ; preds = %do.end.124
  %90 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %90, i32 0, i32 2
  %91 = load %struct._object*, %struct._object** %target, align 8
  %ob_type127 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 1
  %92 = load %struct._typeobject*, %struct._typeobject** %ob_type127, align 8
  %cmp128 = icmp eq %struct._typeobject* %92, @TreeBuilder_Type
  br i1 %cmp128, label %if.then.130, label %if.end.145

if.then.130:                                      ; preds = %land.lhs.true
  br label %do.body.131

do.body.131:                                      ; preds = %if.then.130
  %93 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %93, %struct._object** %_py_decref_tmp132, align 8
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp132, align 8
  %ob_refcnt133 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 0
  %95 = load i64, i64* %ob_refcnt133, align 8
  %dec134 = add i64 %95, -1
  store i64 %dec134, i64* %ob_refcnt133, align 8
  %cmp135 = icmp ne i64 %dec134, 0
  br i1 %cmp135, label %if.then.137, label %if.else.138

if.then.137:                                      ; preds = %do.body.131
  br label %if.end.141

if.else.138:                                      ; preds = %do.body.131
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp132, align 8
  %ob_type139 = getelementptr inbounds %struct._object, %struct._object* %96, i32 0, i32 1
  %97 = load %struct._typeobject*, %struct._typeobject** %ob_type139, align 8
  %tp_dealloc140 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %97, i32 0, i32 4
  %98 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc140, align 8
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp132, align 8
  call void %98(%struct._object* %99)
  br label %if.end.141

if.end.141:                                       ; preds = %if.else.138, %if.then.137
  br label %do.end.142

do.end.142:                                       ; preds = %if.end.141
  %100 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target143 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %100, i32 0, i32 2
  %101 = load %struct._object*, %struct._object** %target143, align 8
  %102 = bitcast %struct._object* %101 to %struct.TreeBuilderObject*
  %call144 = call %struct._object* @treebuilder_done(%struct.TreeBuilderObject* %102)
  store %struct._object* %call144, %struct._object** %retval
  br label %return

if.end.145:                                       ; preds = %land.lhs.true, %do.end.124
  %103 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %103, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.145, %do.end.142, %do.end.99, %do.end.52, %do.end, %if.then.3, %if.then
  %104 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %104
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_setevents(%struct.XMLParserObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %seqlen = alloca i64, align 8
  %target = alloca %struct.TreeBuilderObject*, align 8
  %events_queue = alloca %struct._object*, align 8
  %events_to_report = alloca %struct._object*, align 8
  %events_seq = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp21 = alloca %struct._object*, align 8
  %_py_tmp34 = alloca %struct._object*, align 8
  %_py_decref_tmp39 = alloca %struct._object*, align 8
  %_py_tmp52 = alloca %struct._object*, align 8
  %_py_decref_tmp57 = alloca %struct._object*, align 8
  %_py_tmp70 = alloca %struct._object*, align 8
  %_py_decref_tmp75 = alloca %struct._object*, align 8
  %event_name_obj = alloca %struct._object*, align 8
  %event_name = alloca i8*, align 8
  %_py_decref_tmp120 = alloca %struct._object*, align 8
  %_py_xdecref_tmp145 = alloca %struct._object*, align 8
  %_py_decref_tmp150 = alloca %struct._object*, align 8
  %_py_xdecref_tmp170 = alloca %struct._object*, align 8
  %_py_decref_tmp175 = alloca %struct._object*, align 8
  %_py_xdecref_tmp195 = alloca %struct._object*, align 8
  %_py_decref_tmp200 = alloca %struct._object*, align 8
  %_py_decref_tmp217 = alloca %struct._object*, align 8
  %_py_decref_tmp235 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %events_to_report, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.124, i32 0, i32 0), %struct._typeobject* @PyList_Type, %struct._object** %events_queue, %struct._object** %events_to_report)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target1 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %1, i32 0, i32 2
  %2 = load %struct._object*, %struct._object** %target1, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %3, @TreeBuilder_Type
  br i1 %cmp, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.125, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target4 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %5, i32 0, i32 2
  %6 = load %struct._object*, %struct._object** %target4, align 8
  %7 = bitcast %struct._object* %6 to %struct.TreeBuilderObject*
  store %struct.TreeBuilderObject* %7, %struct.TreeBuilderObject** %target, align 8
  %8 = load %struct._object*, %struct._object** %events_queue, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0
  %9 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %9, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.3
  %10 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %events = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %10, i32 0, i32 8
  %11 = load %struct._object*, %struct._object** %events, align 8
  store %struct._object* %11, %struct._object** %_py_xdecref_tmp, align 8
  %12 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp5 = icmp ne %struct._object* %12, null
  br i1 %cmp5, label %if.then.6, label %if.end.13

if.then.6:                                        ; preds = %do.body
  br label %do.body.7

do.body.7:                                        ; preds = %if.then.6
  %13 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0
  %15 = load i64, i64* %ob_refcnt8, align 8
  %dec = add i64 %15, -1
  store i64 %dec, i64* %ob_refcnt8, align 8
  %cmp9 = icmp ne i64 %dec, 0
  br i1 %cmp9, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %do.body.7
  br label %if.end.12

if.else:                                          ; preds = %do.body.7
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %18(%struct._object* %19)
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.10
  br label %do.end

do.end:                                           ; preds = %if.end.12
  br label %if.end.13

if.end.13:                                        ; preds = %do.end, %do.body
  br label %do.end.14

do.end.14:                                        ; preds = %if.end.13
  %20 = load %struct._object*, %struct._object** %events_queue, align 8
  %21 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %events15 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %21, i32 0, i32 8
  store %struct._object* %20, %struct._object** %events15, align 8
  br label %do.body.16

do.body.16:                                       ; preds = %do.end.14
  %22 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %start_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %22, i32 0, i32 9
  %23 = load %struct._object*, %struct._object** %start_event_obj, align 8
  store %struct._object* %23, %struct._object** %_py_tmp, align 8
  %24 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp17 = icmp ne %struct._object* %24, null
  br i1 %cmp17, label %if.then.18, label %if.end.31

if.then.18:                                       ; preds = %do.body.16
  %25 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %start_event_obj19 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %25, i32 0, i32 9
  store %struct._object* null, %struct._object** %start_event_obj19, align 8
  br label %do.body.20

do.body.20:                                       ; preds = %if.then.18
  %26 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %26, %struct._object** %_py_decref_tmp21, align 8
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0
  %28 = load i64, i64* %ob_refcnt22, align 8
  %dec23 = add i64 %28, -1
  store i64 %dec23, i64* %ob_refcnt22, align 8
  %cmp24 = icmp ne i64 %dec23, 0
  br i1 %cmp24, label %if.then.25, label %if.else.26

if.then.25:                                       ; preds = %do.body.20
  br label %if.end.29

if.else.26:                                       ; preds = %do.body.20
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8
  call void %31(%struct._object* %32)
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.then.25
  br label %do.end.30

do.end.30:                                        ; preds = %if.end.29
  br label %if.end.31

if.end.31:                                        ; preds = %do.end.30, %do.body.16
  br label %do.end.32

do.end.32:                                        ; preds = %if.end.31
  br label %do.body.33

do.body.33:                                       ; preds = %do.end.32
  %33 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %end_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %33, i32 0, i32 10
  %34 = load %struct._object*, %struct._object** %end_event_obj, align 8
  store %struct._object* %34, %struct._object** %_py_tmp34, align 8
  %35 = load %struct._object*, %struct._object** %_py_tmp34, align 8
  %cmp35 = icmp ne %struct._object* %35, null
  br i1 %cmp35, label %if.then.36, label %if.end.49

if.then.36:                                       ; preds = %do.body.33
  %36 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %end_event_obj37 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %36, i32 0, i32 10
  store %struct._object* null, %struct._object** %end_event_obj37, align 8
  br label %do.body.38

do.body.38:                                       ; preds = %if.then.36
  %37 = load %struct._object*, %struct._object** %_py_tmp34, align 8
  store %struct._object* %37, %struct._object** %_py_decref_tmp39, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0
  %39 = load i64, i64* %ob_refcnt40, align 8
  %dec41 = add i64 %39, -1
  store i64 %dec41, i64* %ob_refcnt40, align 8
  %cmp42 = icmp ne i64 %dec41, 0
  br i1 %cmp42, label %if.then.43, label %if.else.44

if.then.43:                                       ; preds = %do.body.38
  br label %if.end.47

if.else.44:                                       ; preds = %do.body.38
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8
  %tp_dealloc46 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc46, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8
  call void %42(%struct._object* %43)
  br label %if.end.47

if.end.47:                                        ; preds = %if.else.44, %if.then.43
  br label %do.end.48

do.end.48:                                        ; preds = %if.end.47
  br label %if.end.49

if.end.49:                                        ; preds = %do.end.48, %do.body.33
  br label %do.end.50

do.end.50:                                        ; preds = %if.end.49
  br label %do.body.51

do.body.51:                                       ; preds = %do.end.50
  %44 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %start_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %44, i32 0, i32 11
  %45 = load %struct._object*, %struct._object** %start_ns_event_obj, align 8
  store %struct._object* %45, %struct._object** %_py_tmp52, align 8
  %46 = load %struct._object*, %struct._object** %_py_tmp52, align 8
  %cmp53 = icmp ne %struct._object* %46, null
  br i1 %cmp53, label %if.then.54, label %if.end.67

if.then.54:                                       ; preds = %do.body.51
  %47 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %start_ns_event_obj55 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %47, i32 0, i32 11
  store %struct._object* null, %struct._object** %start_ns_event_obj55, align 8
  br label %do.body.56

do.body.56:                                       ; preds = %if.then.54
  %48 = load %struct._object*, %struct._object** %_py_tmp52, align 8
  store %struct._object* %48, %struct._object** %_py_decref_tmp57, align 8
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8
  %ob_refcnt58 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0
  %50 = load i64, i64* %ob_refcnt58, align 8
  %dec59 = add i64 %50, -1
  store i64 %dec59, i64* %ob_refcnt58, align 8
  %cmp60 = icmp ne i64 %dec59, 0
  br i1 %cmp60, label %if.then.61, label %if.else.62

if.then.61:                                       ; preds = %do.body.56
  br label %if.end.65

if.else.62:                                       ; preds = %do.body.56
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8
  %tp_dealloc64 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc64, align 8
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8
  call void %53(%struct._object* %54)
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.62, %if.then.61
  br label %do.end.66

do.end.66:                                        ; preds = %if.end.65
  br label %if.end.67

if.end.67:                                        ; preds = %do.end.66, %do.body.51
  br label %do.end.68

do.end.68:                                        ; preds = %if.end.67
  br label %do.body.69

do.body.69:                                       ; preds = %do.end.68
  %55 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %end_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %55, i32 0, i32 12
  %56 = load %struct._object*, %struct._object** %end_ns_event_obj, align 8
  store %struct._object* %56, %struct._object** %_py_tmp70, align 8
  %57 = load %struct._object*, %struct._object** %_py_tmp70, align 8
  %cmp71 = icmp ne %struct._object* %57, null
  br i1 %cmp71, label %if.then.72, label %if.end.85

if.then.72:                                       ; preds = %do.body.69
  %58 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %end_ns_event_obj73 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %58, i32 0, i32 12
  store %struct._object* null, %struct._object** %end_ns_event_obj73, align 8
  br label %do.body.74

do.body.74:                                       ; preds = %if.then.72
  %59 = load %struct._object*, %struct._object** %_py_tmp70, align 8
  store %struct._object* %59, %struct._object** %_py_decref_tmp75, align 8
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8
  %ob_refcnt76 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0
  %61 = load i64, i64* %ob_refcnt76, align 8
  %dec77 = add i64 %61, -1
  store i64 %dec77, i64* %ob_refcnt76, align 8
  %cmp78 = icmp ne i64 %dec77, 0
  br i1 %cmp78, label %if.then.79, label %if.else.80

if.then.79:                                       ; preds = %do.body.74
  br label %if.end.83

if.else.80:                                       ; preds = %do.body.74
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8
  %ob_type81 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type81, align 8
  %tp_dealloc82 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc82, align 8
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8
  call void %64(%struct._object* %65)
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.80, %if.then.79
  br label %do.end.84

do.end.84:                                        ; preds = %if.end.83
  br label %if.end.85

if.end.85:                                        ; preds = %do.end.84, %do.body.69
  br label %do.end.86

do.end.86:                                        ; preds = %if.end.85
  %66 = load %struct._object*, %struct._object** %events_to_report, align 8
  %cmp87 = icmp eq %struct._object* %66, @_Py_NoneStruct
  br i1 %cmp87, label %if.then.88, label %if.end.92

if.then.88:                                       ; preds = %do.end.86
  %call89 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0))
  %67 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %end_event_obj90 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %67, i32 0, i32 10
  store %struct._object* %call89, %struct._object** %end_event_obj90, align 8
  %68 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc91 = add i64 %68, 1
  store i64 %inc91, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

if.end.92:                                        ; preds = %do.end.86
  %69 = load %struct._object*, %struct._object** %events_to_report, align 8
  %call93 = call %struct._object* @PySequence_Fast(%struct._object* %69, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.126, i32 0, i32 0))
  store %struct._object* %call93, %struct._object** %events_seq, align 8
  %tobool94 = icmp ne %struct._object* %call93, null
  br i1 %tobool94, label %if.end.96, label %if.then.95

if.then.95:                                       ; preds = %if.end.92
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.96:                                        ; preds = %if.end.92
  %70 = load %struct._object*, %struct._object** %events_seq, align 8
  %call97 = call i64 @PySequence_Size(%struct._object* %70)
  store i64 %call97, i64* %seqlen, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.96
  %71 = load i64, i64* %i, align 8
  %72 = load i64, i64* %seqlen, align 8
  %cmp98 = icmp slt i64 %71, %72
  br i1 %cmp98, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %73 = load %struct._object*, %struct._object** %events_seq, align 8
  %ob_type99 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type99, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 19
  %75 = load i64, i64* %tp_flags, align 8
  %and = and i64 %75, 33554432
  %cmp100 = icmp ne i64 %and, 0
  br i1 %cmp100, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %76 = load i64, i64* %i, align 8
  %77 = load %struct._object*, %struct._object** %events_seq, align 8
  %78 = bitcast %struct._object* %77 to %struct.PyListObject*
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %78, i32 0, i32 1
  %79 = load %struct._object**, %struct._object*** %ob_item, align 8
  %arrayidx = getelementptr %struct._object*, %struct._object** %79, i64 %76
  %80 = load %struct._object*, %struct._object** %arrayidx, align 8
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %81 = load i64, i64* %i, align 8
  %82 = load %struct._object*, %struct._object** %events_seq, align 8
  %83 = bitcast %struct._object* %82 to %struct.PyTupleObject*
  %ob_item101 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %83, i32 0, i32 1
  %arrayidx102 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item101, i32 0, i64 %81
  %84 = load %struct._object*, %struct._object** %arrayidx102, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %80, %cond.true ], [ %84, %cond.false ]
  store %struct._object* %cond, %struct._object** %event_name_obj, align 8
  store i8* null, i8** %event_name, align 8
  %85 = load %struct._object*, %struct._object** %event_name_obj, align 8
  %ob_type103 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type103, align 8
  %tp_flags104 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 19
  %87 = load i64, i64* %tp_flags104, align 8
  %and105 = and i64 %87, 268435456
  %cmp106 = icmp ne i64 %and105, 0
  br i1 %cmp106, label %if.then.107, label %if.else.109

if.then.107:                                      ; preds = %cond.end
  %88 = load %struct._object*, %struct._object** %event_name_obj, align 8
  %call108 = call i8* @PyUnicode_AsUTF8(%struct._object* %88)
  store i8* %call108, i8** %event_name, align 8
  br label %if.end.116

if.else.109:                                      ; preds = %cond.end
  %89 = load %struct._object*, %struct._object** %event_name_obj, align 8
  %ob_type110 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 1
  %90 = load %struct._typeobject*, %struct._typeobject** %ob_type110, align 8
  %tp_flags111 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %90, i32 0, i32 19
  %91 = load i64, i64* %tp_flags111, align 8
  %and112 = and i64 %91, 134217728
  %cmp113 = icmp ne i64 %and112, 0
  br i1 %cmp113, label %if.then.114, label %if.end.115

if.then.114:                                      ; preds = %if.else.109
  %92 = load %struct._object*, %struct._object** %event_name_obj, align 8
  %93 = bitcast %struct._object* %92 to %struct.PyBytesObject*
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %93, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0
  store i8* %arraydecay, i8** %event_name, align 8
  br label %if.end.115

if.end.115:                                       ; preds = %if.then.114, %if.else.109
  br label %if.end.116

if.end.116:                                       ; preds = %if.end.115, %if.then.107
  %94 = load i8*, i8** %event_name, align 8
  %cmp117 = icmp eq i8* %94, null
  br i1 %cmp117, label %if.then.118, label %if.else.131

if.then.118:                                      ; preds = %if.end.116
  br label %do.body.119

do.body.119:                                      ; preds = %if.then.118
  %95 = load %struct._object*, %struct._object** %events_seq, align 8
  store %struct._object* %95, %struct._object** %_py_decref_tmp120, align 8
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp120, align 8
  %ob_refcnt121 = getelementptr inbounds %struct._object, %struct._object* %96, i32 0, i32 0
  %97 = load i64, i64* %ob_refcnt121, align 8
  %dec122 = add i64 %97, -1
  store i64 %dec122, i64* %ob_refcnt121, align 8
  %cmp123 = icmp ne i64 %dec122, 0
  br i1 %cmp123, label %if.then.124, label %if.else.125

if.then.124:                                      ; preds = %do.body.119
  br label %if.end.128

if.else.125:                                      ; preds = %do.body.119
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp120, align 8
  %ob_type126 = getelementptr inbounds %struct._object, %struct._object* %98, i32 0, i32 1
  %99 = load %struct._typeobject*, %struct._typeobject** %ob_type126, align 8
  %tp_dealloc127 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %99, i32 0, i32 4
  %100 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc127, align 8
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp120, align 8
  call void %100(%struct._object* %101)
  br label %if.end.128

if.end.128:                                       ; preds = %if.else.125, %if.then.124
  br label %do.end.129

do.end.129:                                       ; preds = %if.end.128
  %102 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  %call130 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %102, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.127, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.else.131:                                      ; preds = %if.end.116
  %103 = load i8*, i8** %event_name, align 8
  %call132 = call i32 @strcmp(i8* %103, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0)) #5
  %cmp133 = icmp eq i32 %call132, 0
  br i1 %cmp133, label %if.then.134, label %if.else.138

if.then.134:                                      ; preds = %if.else.131
  %104 = load %struct._object*, %struct._object** %event_name_obj, align 8
  %ob_refcnt135 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 0
  %105 = load i64, i64* %ob_refcnt135, align 8
  %inc136 = add i64 %105, 1
  store i64 %inc136, i64* %ob_refcnt135, align 8
  %106 = load %struct._object*, %struct._object** %event_name_obj, align 8
  %107 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %start_event_obj137 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %107, i32 0, i32 9
  store %struct._object* %106, %struct._object** %start_event_obj137, align 8
  br label %if.end.231

if.else.138:                                      ; preds = %if.else.131
  %108 = load i8*, i8** %event_name, align 8
  %call139 = call i32 @strcmp(i8* %108, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0)) #5
  %cmp140 = icmp eq i32 %call139, 0
  br i1 %cmp140, label %if.then.141, label %if.else.163

if.then.141:                                      ; preds = %if.else.138
  %109 = load %struct._object*, %struct._object** %event_name_obj, align 8
  %ob_refcnt142 = getelementptr inbounds %struct._object, %struct._object* %109, i32 0, i32 0
  %110 = load i64, i64* %ob_refcnt142, align 8
  %inc143 = add i64 %110, 1
  store i64 %inc143, i64* %ob_refcnt142, align 8
  br label %do.body.144

do.body.144:                                      ; preds = %if.then.141
  %111 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %end_event_obj146 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %111, i32 0, i32 10
  %112 = load %struct._object*, %struct._object** %end_event_obj146, align 8
  store %struct._object* %112, %struct._object** %_py_xdecref_tmp145, align 8
  %113 = load %struct._object*, %struct._object** %_py_xdecref_tmp145, align 8
  %cmp147 = icmp ne %struct._object* %113, null
  br i1 %cmp147, label %if.then.148, label %if.end.160

if.then.148:                                      ; preds = %do.body.144
  br label %do.body.149

do.body.149:                                      ; preds = %if.then.148
  %114 = load %struct._object*, %struct._object** %_py_xdecref_tmp145, align 8
  store %struct._object* %114, %struct._object** %_py_decref_tmp150, align 8
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8
  %ob_refcnt151 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 0
  %116 = load i64, i64* %ob_refcnt151, align 8
  %dec152 = add i64 %116, -1
  store i64 %dec152, i64* %ob_refcnt151, align 8
  %cmp153 = icmp ne i64 %dec152, 0
  br i1 %cmp153, label %if.then.154, label %if.else.155

if.then.154:                                      ; preds = %do.body.149
  br label %if.end.158

if.else.155:                                      ; preds = %do.body.149
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8
  %ob_type156 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 1
  %118 = load %struct._typeobject*, %struct._typeobject** %ob_type156, align 8
  %tp_dealloc157 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %118, i32 0, i32 4
  %119 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc157, align 8
  %120 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8
  call void %119(%struct._object* %120)
  br label %if.end.158

if.end.158:                                       ; preds = %if.else.155, %if.then.154
  br label %do.end.159

do.end.159:                                       ; preds = %if.end.158
  br label %if.end.160

if.end.160:                                       ; preds = %do.end.159, %do.body.144
  br label %do.end.161

do.end.161:                                       ; preds = %if.end.160
  %121 = load %struct._object*, %struct._object** %event_name_obj, align 8
  %122 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %end_event_obj162 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %122, i32 0, i32 10
  store %struct._object* %121, %struct._object** %end_event_obj162, align 8
  br label %if.end.230

if.else.163:                                      ; preds = %if.else.138
  %123 = load i8*, i8** %event_name, align 8
  %call164 = call i32 @strcmp(i8* %123, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i32 0)) #5
  %cmp165 = icmp eq i32 %call164, 0
  br i1 %cmp165, label %if.then.166, label %if.else.188

if.then.166:                                      ; preds = %if.else.163
  %124 = load %struct._object*, %struct._object** %event_name_obj, align 8
  %ob_refcnt167 = getelementptr inbounds %struct._object, %struct._object* %124, i32 0, i32 0
  %125 = load i64, i64* %ob_refcnt167, align 8
  %inc168 = add i64 %125, 1
  store i64 %inc168, i64* %ob_refcnt167, align 8
  br label %do.body.169

do.body.169:                                      ; preds = %if.then.166
  %126 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %start_ns_event_obj171 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %126, i32 0, i32 11
  %127 = load %struct._object*, %struct._object** %start_ns_event_obj171, align 8
  store %struct._object* %127, %struct._object** %_py_xdecref_tmp170, align 8
  %128 = load %struct._object*, %struct._object** %_py_xdecref_tmp170, align 8
  %cmp172 = icmp ne %struct._object* %128, null
  br i1 %cmp172, label %if.then.173, label %if.end.185

if.then.173:                                      ; preds = %do.body.169
  br label %do.body.174

do.body.174:                                      ; preds = %if.then.173
  %129 = load %struct._object*, %struct._object** %_py_xdecref_tmp170, align 8
  store %struct._object* %129, %struct._object** %_py_decref_tmp175, align 8
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp175, align 8
  %ob_refcnt176 = getelementptr inbounds %struct._object, %struct._object* %130, i32 0, i32 0
  %131 = load i64, i64* %ob_refcnt176, align 8
  %dec177 = add i64 %131, -1
  store i64 %dec177, i64* %ob_refcnt176, align 8
  %cmp178 = icmp ne i64 %dec177, 0
  br i1 %cmp178, label %if.then.179, label %if.else.180

if.then.179:                                      ; preds = %do.body.174
  br label %if.end.183

if.else.180:                                      ; preds = %do.body.174
  %132 = load %struct._object*, %struct._object** %_py_decref_tmp175, align 8
  %ob_type181 = getelementptr inbounds %struct._object, %struct._object* %132, i32 0, i32 1
  %133 = load %struct._typeobject*, %struct._typeobject** %ob_type181, align 8
  %tp_dealloc182 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %133, i32 0, i32 4
  %134 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc182, align 8
  %135 = load %struct._object*, %struct._object** %_py_decref_tmp175, align 8
  call void %134(%struct._object* %135)
  br label %if.end.183

if.end.183:                                       ; preds = %if.else.180, %if.then.179
  br label %do.end.184

do.end.184:                                       ; preds = %if.end.183
  br label %if.end.185

if.end.185:                                       ; preds = %do.end.184, %do.body.169
  br label %do.end.186

do.end.186:                                       ; preds = %if.end.185
  %136 = load %struct._object*, %struct._object** %event_name_obj, align 8
  %137 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %start_ns_event_obj187 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %137, i32 0, i32 11
  store %struct._object* %136, %struct._object** %start_ns_event_obj187, align 8
  %138 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %SetNamespaceDeclHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %138, i32 0, i32 16
  %139 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*, void (i8*, i8*)*)** %SetNamespaceDeclHandler, align 8
  %140 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %140, i32 0, i32 1
  %141 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  call void %139(%struct.XML_ParserStruct* %141, void (i8*, i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*, i8*)* @expat_start_ns_handler to void (i8*, i8*, i8*)*), void (i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*)* @expat_end_ns_handler to void (i8*, i8*)*))
  br label %if.end.229

if.else.188:                                      ; preds = %if.else.163
  %142 = load i8*, i8** %event_name, align 8
  %call189 = call i32 @strcmp(i8* %142, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.129, i32 0, i32 0)) #5
  %cmp190 = icmp eq i32 %call189, 0
  br i1 %cmp190, label %if.then.191, label %if.else.215

if.then.191:                                      ; preds = %if.else.188
  %143 = load %struct._object*, %struct._object** %event_name_obj, align 8
  %ob_refcnt192 = getelementptr inbounds %struct._object, %struct._object* %143, i32 0, i32 0
  %144 = load i64, i64* %ob_refcnt192, align 8
  %inc193 = add i64 %144, 1
  store i64 %inc193, i64* %ob_refcnt192, align 8
  br label %do.body.194

do.body.194:                                      ; preds = %if.then.191
  %145 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %end_ns_event_obj196 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %145, i32 0, i32 12
  %146 = load %struct._object*, %struct._object** %end_ns_event_obj196, align 8
  store %struct._object* %146, %struct._object** %_py_xdecref_tmp195, align 8
  %147 = load %struct._object*, %struct._object** %_py_xdecref_tmp195, align 8
  %cmp197 = icmp ne %struct._object* %147, null
  br i1 %cmp197, label %if.then.198, label %if.end.210

if.then.198:                                      ; preds = %do.body.194
  br label %do.body.199

do.body.199:                                      ; preds = %if.then.198
  %148 = load %struct._object*, %struct._object** %_py_xdecref_tmp195, align 8
  store %struct._object* %148, %struct._object** %_py_decref_tmp200, align 8
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp200, align 8
  %ob_refcnt201 = getelementptr inbounds %struct._object, %struct._object* %149, i32 0, i32 0
  %150 = load i64, i64* %ob_refcnt201, align 8
  %dec202 = add i64 %150, -1
  store i64 %dec202, i64* %ob_refcnt201, align 8
  %cmp203 = icmp ne i64 %dec202, 0
  br i1 %cmp203, label %if.then.204, label %if.else.205

if.then.204:                                      ; preds = %do.body.199
  br label %if.end.208

if.else.205:                                      ; preds = %do.body.199
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp200, align 8
  %ob_type206 = getelementptr inbounds %struct._object, %struct._object* %151, i32 0, i32 1
  %152 = load %struct._typeobject*, %struct._typeobject** %ob_type206, align 8
  %tp_dealloc207 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %152, i32 0, i32 4
  %153 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc207, align 8
  %154 = load %struct._object*, %struct._object** %_py_decref_tmp200, align 8
  call void %153(%struct._object* %154)
  br label %if.end.208

if.end.208:                                       ; preds = %if.else.205, %if.then.204
  br label %do.end.209

do.end.209:                                       ; preds = %if.end.208
  br label %if.end.210

if.end.210:                                       ; preds = %do.end.209, %do.body.194
  br label %do.end.211

do.end.211:                                       ; preds = %if.end.210
  %155 = load %struct._object*, %struct._object** %event_name_obj, align 8
  %156 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8
  %end_ns_event_obj212 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %156, i32 0, i32 12
  store %struct._object* %155, %struct._object** %end_ns_event_obj212, align 8
  %157 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %SetNamespaceDeclHandler213 = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %157, i32 0, i32 16
  %158 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*, void (i8*, i8*)*)** %SetNamespaceDeclHandler213, align 8
  %159 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %parser214 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %159, i32 0, i32 1
  %160 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser214, align 8
  call void %158(%struct.XML_ParserStruct* %160, void (i8*, i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*, i8*)* @expat_start_ns_handler to void (i8*, i8*, i8*)*), void (i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*)* @expat_end_ns_handler to void (i8*, i8*)*))
  br label %if.end.228

if.else.215:                                      ; preds = %if.else.188
  br label %do.body.216

do.body.216:                                      ; preds = %if.else.215
  %161 = load %struct._object*, %struct._object** %events_seq, align 8
  store %struct._object* %161, %struct._object** %_py_decref_tmp217, align 8
  %162 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8
  %ob_refcnt218 = getelementptr inbounds %struct._object, %struct._object* %162, i32 0, i32 0
  %163 = load i64, i64* %ob_refcnt218, align 8
  %dec219 = add i64 %163, -1
  store i64 %dec219, i64* %ob_refcnt218, align 8
  %cmp220 = icmp ne i64 %dec219, 0
  br i1 %cmp220, label %if.then.221, label %if.else.222

if.then.221:                                      ; preds = %do.body.216
  br label %if.end.225

if.else.222:                                      ; preds = %do.body.216
  %164 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8
  %ob_type223 = getelementptr inbounds %struct._object, %struct._object* %164, i32 0, i32 1
  %165 = load %struct._typeobject*, %struct._typeobject** %ob_type223, align 8
  %tp_dealloc224 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %165, i32 0, i32 4
  %166 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc224, align 8
  %167 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8
  call void %166(%struct._object* %167)
  br label %if.end.225

if.end.225:                                       ; preds = %if.else.222, %if.then.221
  br label %do.end.226

do.end.226:                                       ; preds = %if.end.225
  %168 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  %169 = load i8*, i8** %event_name, align 8
  %call227 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %168, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.130, i32 0, i32 0), i8* %169)
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.228:                                       ; preds = %do.end.211
  br label %if.end.229

if.end.229:                                       ; preds = %if.end.228, %do.end.186
  br label %if.end.230

if.end.230:                                       ; preds = %if.end.229, %do.end.161
  br label %if.end.231

if.end.231:                                       ; preds = %if.end.230, %if.then.134
  br label %if.end.232

if.end.232:                                       ; preds = %if.end.231
  br label %for.inc

for.inc:                                          ; preds = %if.end.232
  %170 = load i64, i64* %i, align 8
  %inc233 = add i64 %170, 1
  store i64 %inc233, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body.234

do.body.234:                                      ; preds = %for.end
  %171 = load %struct._object*, %struct._object** %events_seq, align 8
  store %struct._object* %171, %struct._object** %_py_decref_tmp235, align 8
  %172 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8
  %ob_refcnt236 = getelementptr inbounds %struct._object, %struct._object* %172, i32 0, i32 0
  %173 = load i64, i64* %ob_refcnt236, align 8
  %dec237 = add i64 %173, -1
  store i64 %dec237, i64* %ob_refcnt236, align 8
  %cmp238 = icmp ne i64 %dec237, 0
  br i1 %cmp238, label %if.then.239, label %if.else.240

if.then.239:                                      ; preds = %do.body.234
  br label %if.end.243

if.else.240:                                      ; preds = %do.body.234
  %174 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8
  %ob_type241 = getelementptr inbounds %struct._object, %struct._object* %174, i32 0, i32 1
  %175 = load %struct._typeobject*, %struct._typeobject** %ob_type241, align 8
  %tp_dealloc242 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %175, i32 0, i32 4
  %176 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc242, align 8
  %177 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8
  call void %176(%struct._object* %177)
  br label %if.end.243

if.end.243:                                       ; preds = %if.else.240, %if.then.239
  br label %do.end.244

do.end.244:                                       ; preds = %if.end.243
  %178 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc245 = add i64 %178, 1
  store i64 %inc245, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.244, %do.end.226, %do.end.129, %if.then.95, %if.then.88, %if.then.2, %if.then
  %179 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %179
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_doctype(%struct.XMLParserObject* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %0, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  ret %struct._object* @_Py_NoneStruct
}

declare i8* @PyUnicode_AsUTF8AndSize(%struct._object*, i64*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @expat_parse(%struct.XMLParserObject* %self, i8* %data, i32 %data_len, i32 %final) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %data.addr = alloca i8*, align 8
  %data_len.addr = alloca i32, align 4
  %final.addr = alloca i32, align 4
  %ok = alloca i32, align 4
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store i8* %data, i8** %data.addr, align 8
  store i32 %data_len, i32* %data_len.addr, align 4
  store i32 %final, i32* %final.addr, align 4
  %0 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %Parse = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %0, i32 0, i32 9
  %1 = load i32 (%struct.XML_ParserStruct*, i8*, i32, i32)*, i32 (%struct.XML_ParserStruct*, i8*, i32, i32)** %Parse, align 8
  %2 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %2, i32 0, i32 1
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %4 = load i8*, i8** %data.addr, align 8
  %5 = load i32, i32* %data_len.addr, align 4
  %6 = load i32, i32* %final.addr, align 4
  %call = call i32 %1(%struct.XML_ParserStruct* %3, i8* %4, i32 %5, i32 %6)
  store i32 %call, i32* %ok, align 4
  %call1 = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %ok, align 4
  %tobool2 = icmp ne i32 %7, 0
  br i1 %tobool2, label %if.end.11, label %if.then.3

if.then.3:                                        ; preds = %if.end
  %8 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %GetErrorCode = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %8, i32 0, i32 6
  %9 = load i32 (%struct.XML_ParserStruct*)*, i32 (%struct.XML_ParserStruct*)** %GetErrorCode, align 8
  %10 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %parser4 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %10, i32 0, i32 1
  %11 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser4, align 8
  %call5 = call i32 %9(%struct.XML_ParserStruct* %11)
  %12 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %GetErrorLineNumber = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %12, i32 0, i32 8
  %13 = load i64 (%struct.XML_ParserStruct*)*, i64 (%struct.XML_ParserStruct*)** %GetErrorLineNumber, align 8
  %14 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %parser6 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %14, i32 0, i32 1
  %15 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser6, align 8
  %call7 = call i64 %13(%struct.XML_ParserStruct* %15)
  %conv = trunc i64 %call7 to i32
  %16 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %GetErrorColumnNumber = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %16, i32 0, i32 7
  %17 = load i64 (%struct.XML_ParserStruct*)*, i64 (%struct.XML_ParserStruct*)** %GetErrorColumnNumber, align 8
  %18 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %parser8 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %18, i32 0, i32 1
  %19 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser8, align 8
  %call9 = call i64 %17(%struct.XML_ParserStruct* %19)
  %conv10 = trunc i64 %call9 to i32
  call void @expat_set_error(i32 %call5, i32 %conv, i32 %conv10, i8* null)
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.11:                                        ; preds = %if.end
  %20 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %20, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.11, %if.then.3, %if.then
  %21 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %21
}

declare i32 @PyObject_GetBuffer(%struct._object*, %struct.bufferinfo*, i32) #1

declare void @PyBuffer_Release(%struct.bufferinfo*) #1

; Function Attrs: nounwind uwtable
define internal void @expat_set_error(i32 %error_code, i32 %line, i32 %column, i8* %message) #0 {
entry:
  %error_code.addr = alloca i32, align 4
  %line.addr = alloca i32, align 4
  %column.addr = alloca i32, align 4
  %message.addr = alloca i8*, align 8
  %errmsg = alloca %struct._object*, align 8
  %error = alloca %struct._object*, align 8
  %position = alloca %struct._object*, align 8
  %code = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  %_py_decref_tmp44 = alloca %struct._object*, align 8
  %_py_decref_tmp57 = alloca %struct._object*, align 8
  %_py_decref_tmp72 = alloca %struct._object*, align 8
  %_py_decref_tmp89 = alloca %struct._object*, align 8
  %_py_decref_tmp101 = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  %_py_decref_tmp127 = alloca %struct._object*, align 8
  store i32 %error_code, i32* %error_code.addr, align 4
  store i32 %line, i32* %line.addr, align 4
  store i32 %column, i32* %column.addr, align 4
  store i8* %message, i8** %message.addr, align 8
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule)
  %call1 = call i8* @PyModule_GetState(%struct._object* %call)
  %0 = bitcast i8* %call1 to %struct.elementtreestate*
  store %struct.elementtreestate* %0, %struct.elementtreestate** %st, align 8
  %1 = load i8*, i8** %message.addr, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load i8*, i8** %message.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %ErrorString = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %3, i32 0, i32 5
  %4 = load i8* (i32)*, i8* (i32)** %ErrorString, align 8
  %5 = load i32, i32* %error_code.addr, align 4
  %call2 = call i8* %4(i32 %5)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ %call2, %cond.false ]
  %6 = load i32, i32* %line.addr, align 4
  %7 = load i32, i32* %column.addr, align 4
  %call3 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.116, i32 0, i32 0), i8* %cond, i32 %6, i32 %7)
  store %struct._object* %call3, %struct._object** %errmsg, align 8
  %8 = load %struct._object*, %struct._object** %errmsg, align 8
  %cmp = icmp eq %struct._object* %8, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  br label %do.end.137

if.end:                                           ; preds = %cond.end
  %9 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %parseerror_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %9, i32 0, i32 0
  %10 = load %struct._object*, %struct._object** %parseerror_obj, align 8
  %11 = load %struct._object*, %struct._object** %errmsg, align 8
  %call4 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), %struct._object* %11)
  store %struct._object* %call4, %struct._object** %error, align 8
  br label %do.body

do.body:                                          ; preds = %if.end
  %12 = load %struct._object*, %struct._object** %errmsg, align 8
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0
  %14 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %14, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp5 = icmp ne i64 %dec, 0
  br i1 %cmp5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %do.body
  br label %if.end.7

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %17(%struct._object* %18)
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  br label %do.end

do.end:                                           ; preds = %if.end.7
  %19 = load %struct._object*, %struct._object** %error, align 8
  %tobool8 = icmp ne %struct._object* %19, null
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %do.end
  br label %do.end.137

if.end.10:                                        ; preds = %do.end
  %20 = load i32, i32* %error_code.addr, align 4
  %conv = zext i32 %20 to i64
  %call11 = call %struct._object* @PyLong_FromLong(i64 %conv)
  store %struct._object* %call11, %struct._object** %code, align 8
  %21 = load %struct._object*, %struct._object** %code, align 8
  %tobool12 = icmp ne %struct._object* %21, null
  br i1 %tobool12, label %if.end.26, label %if.then.13

if.then.13:                                       ; preds = %if.end.10
  br label %do.body.14

do.body.14:                                       ; preds = %if.then.13
  %22 = load %struct._object*, %struct._object** %error, align 8
  store %struct._object* %22, %struct._object** %_py_decref_tmp15, align 8
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0
  %24 = load i64, i64* %ob_refcnt16, align 8
  %dec17 = add i64 %24, -1
  store i64 %dec17, i64* %ob_refcnt16, align 8
  %cmp18 = icmp ne i64 %dec17, 0
  br i1 %cmp18, label %if.then.20, label %if.else.21

if.then.20:                                       ; preds = %do.body.14
  br label %if.end.24

if.else.21:                                       ; preds = %do.body.14
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8
  call void %27(%struct._object* %28)
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  br label %do.end.25

do.end.25:                                        ; preds = %if.end.24
  br label %do.end.137

if.end.26:                                        ; preds = %if.end.10
  %29 = load %struct._object*, %struct._object** %error, align 8
  %30 = load %struct._object*, %struct._object** %code, align 8
  %call27 = call i32 @PyObject_SetAttrString(%struct._object* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i32 0, i32 0), %struct._object* %30)
  %cmp28 = icmp eq i32 %call27, -1
  br i1 %cmp28, label %if.then.30, label %if.end.55

if.then.30:                                       ; preds = %if.end.26
  br label %do.body.31

do.body.31:                                       ; preds = %if.then.30
  %31 = load %struct._object*, %struct._object** %error, align 8
  store %struct._object* %31, %struct._object** %_py_decref_tmp32, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0
  %33 = load i64, i64* %ob_refcnt33, align 8
  %dec34 = add i64 %33, -1
  store i64 %dec34, i64* %ob_refcnt33, align 8
  %cmp35 = icmp ne i64 %dec34, 0
  br i1 %cmp35, label %if.then.37, label %if.else.38

if.then.37:                                       ; preds = %do.body.31
  br label %if.end.41

if.else.38:                                       ; preds = %do.body.31
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8
  %ob_type39 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type39, align 8
  %tp_dealloc40 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc40, align 8
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8
  call void %36(%struct._object* %37)
  br label %if.end.41

if.end.41:                                        ; preds = %if.else.38, %if.then.37
  br label %do.end.42

do.end.42:                                        ; preds = %if.end.41
  br label %do.body.43

do.body.43:                                       ; preds = %do.end.42
  %38 = load %struct._object*, %struct._object** %code, align 8
  store %struct._object* %38, %struct._object** %_py_decref_tmp44, align 8
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp44, align 8
  %ob_refcnt45 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0
  %40 = load i64, i64* %ob_refcnt45, align 8
  %dec46 = add i64 %40, -1
  store i64 %dec46, i64* %ob_refcnt45, align 8
  %cmp47 = icmp ne i64 %dec46, 0
  br i1 %cmp47, label %if.then.49, label %if.else.50

if.then.49:                                       ; preds = %do.body.43
  br label %if.end.53

if.else.50:                                       ; preds = %do.body.43
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp44, align 8
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8
  %tp_dealloc52 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc52, align 8
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp44, align 8
  call void %43(%struct._object* %44)
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.50, %if.then.49
  br label %do.end.54

do.end.54:                                        ; preds = %if.end.53
  br label %do.end.137

if.end.55:                                        ; preds = %if.end.26
  br label %do.body.56

do.body.56:                                       ; preds = %if.end.55
  %45 = load %struct._object*, %struct._object** %code, align 8
  store %struct._object* %45, %struct._object** %_py_decref_tmp57, align 8
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8
  %ob_refcnt58 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0
  %47 = load i64, i64* %ob_refcnt58, align 8
  %dec59 = add i64 %47, -1
  store i64 %dec59, i64* %ob_refcnt58, align 8
  %cmp60 = icmp ne i64 %dec59, 0
  br i1 %cmp60, label %if.then.62, label %if.else.63

if.then.62:                                       ; preds = %do.body.56
  br label %if.end.66

if.else.63:                                       ; preds = %do.body.56
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8
  %ob_type64 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type64, align 8
  %tp_dealloc65 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc65, align 8
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8
  call void %50(%struct._object* %51)
  br label %if.end.66

if.end.66:                                        ; preds = %if.else.63, %if.then.62
  br label %do.end.67

do.end.67:                                        ; preds = %if.end.66
  %52 = load i32, i32* %line.addr, align 4
  %53 = load i32, i32* %column.addr, align 4
  %call68 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i32 0, i32 0), i32 %52, i32 %53)
  store %struct._object* %call68, %struct._object** %position, align 8
  %54 = load %struct._object*, %struct._object** %position, align 8
  %tobool69 = icmp ne %struct._object* %54, null
  br i1 %tobool69, label %if.end.83, label %if.then.70

if.then.70:                                       ; preds = %do.end.67
  br label %do.body.71

do.body.71:                                       ; preds = %if.then.70
  %55 = load %struct._object*, %struct._object** %error, align 8
  store %struct._object* %55, %struct._object** %_py_decref_tmp72, align 8
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0
  %57 = load i64, i64* %ob_refcnt73, align 8
  %dec74 = add i64 %57, -1
  store i64 %dec74, i64* %ob_refcnt73, align 8
  %cmp75 = icmp ne i64 %dec74, 0
  br i1 %cmp75, label %if.then.77, label %if.else.78

if.then.77:                                       ; preds = %do.body.71
  br label %if.end.81

if.else.78:                                       ; preds = %do.body.71
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8
  %ob_type79 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type79, align 8
  %tp_dealloc80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc80, align 8
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8
  call void %60(%struct._object* %61)
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.78, %if.then.77
  br label %do.end.82

do.end.82:                                        ; preds = %if.end.81
  br label %do.end.137

if.end.83:                                        ; preds = %do.end.67
  %62 = load %struct._object*, %struct._object** %error, align 8
  %63 = load %struct._object*, %struct._object** %position, align 8
  %call84 = call i32 @PyObject_SetAttrString(%struct._object* %62, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.119, i32 0, i32 0), %struct._object* %63)
  %cmp85 = icmp eq i32 %call84, -1
  br i1 %cmp85, label %if.then.87, label %if.end.112

if.then.87:                                       ; preds = %if.end.83
  br label %do.body.88

do.body.88:                                       ; preds = %if.then.87
  %64 = load %struct._object*, %struct._object** %error, align 8
  store %struct._object* %64, %struct._object** %_py_decref_tmp89, align 8
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8
  %ob_refcnt90 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0
  %66 = load i64, i64* %ob_refcnt90, align 8
  %dec91 = add i64 %66, -1
  store i64 %dec91, i64* %ob_refcnt90, align 8
  %cmp92 = icmp ne i64 %dec91, 0
  br i1 %cmp92, label %if.then.94, label %if.else.95

if.then.94:                                       ; preds = %do.body.88
  br label %if.end.98

if.else.95:                                       ; preds = %do.body.88
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8
  %ob_type96 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type96, align 8
  %tp_dealloc97 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc97, align 8
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8
  call void %69(%struct._object* %70)
  br label %if.end.98

if.end.98:                                        ; preds = %if.else.95, %if.then.94
  br label %do.end.99

do.end.99:                                        ; preds = %if.end.98
  br label %do.body.100

do.body.100:                                      ; preds = %do.end.99
  %71 = load %struct._object*, %struct._object** %position, align 8
  store %struct._object* %71, %struct._object** %_py_decref_tmp101, align 8
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8
  %ob_refcnt102 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 0
  %73 = load i64, i64* %ob_refcnt102, align 8
  %dec103 = add i64 %73, -1
  store i64 %dec103, i64* %ob_refcnt102, align 8
  %cmp104 = icmp ne i64 %dec103, 0
  br i1 %cmp104, label %if.then.106, label %if.else.107

if.then.106:                                      ; preds = %do.body.100
  br label %if.end.110

if.else.107:                                      ; preds = %do.body.100
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8
  %ob_type108 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type108, align 8
  %tp_dealloc109 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 4
  %76 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc109, align 8
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8
  call void %76(%struct._object* %77)
  br label %if.end.110

if.end.110:                                       ; preds = %if.else.107, %if.then.106
  br label %do.end.111

do.end.111:                                       ; preds = %if.end.110
  br label %do.end.137

if.end.112:                                       ; preds = %if.end.83
  br label %do.body.113

do.body.113:                                      ; preds = %if.end.112
  %78 = load %struct._object*, %struct._object** %position, align 8
  store %struct._object* %78, %struct._object** %_py_decref_tmp114, align 8
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 0
  %80 = load i64, i64* %ob_refcnt115, align 8
  %dec116 = add i64 %80, -1
  store i64 %dec116, i64* %ob_refcnt115, align 8
  %cmp117 = icmp ne i64 %dec116, 0
  br i1 %cmp117, label %if.then.119, label %if.else.120

if.then.119:                                      ; preds = %do.body.113
  br label %if.end.123

if.else.120:                                      ; preds = %do.body.113
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8
  %ob_type121 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 1
  %82 = load %struct._typeobject*, %struct._typeobject** %ob_type121, align 8
  %tp_dealloc122 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %82, i32 0, i32 4
  %83 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc122, align 8
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8
  call void %83(%struct._object* %84)
  br label %if.end.123

if.end.123:                                       ; preds = %if.else.120, %if.then.119
  br label %do.end.124

do.end.124:                                       ; preds = %if.end.123
  %85 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8
  %parseerror_obj125 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %85, i32 0, i32 0
  %86 = load %struct._object*, %struct._object** %parseerror_obj125, align 8
  %87 = load %struct._object*, %struct._object** %error, align 8
  call void @PyErr_SetObject(%struct._object* %86, %struct._object* %87)
  br label %do.body.126

do.body.126:                                      ; preds = %do.end.124
  %88 = load %struct._object*, %struct._object** %error, align 8
  store %struct._object* %88, %struct._object** %_py_decref_tmp127, align 8
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp127, align 8
  %ob_refcnt128 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 0
  %90 = load i64, i64* %ob_refcnt128, align 8
  %dec129 = add i64 %90, -1
  store i64 %dec129, i64* %ob_refcnt128, align 8
  %cmp130 = icmp ne i64 %dec129, 0
  br i1 %cmp130, label %if.then.132, label %if.else.133

if.then.132:                                      ; preds = %do.body.126
  br label %if.end.136

if.else.133:                                      ; preds = %do.body.126
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp127, align 8
  %ob_type134 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 1
  %92 = load %struct._typeobject*, %struct._typeobject** %ob_type134, align 8
  %tp_dealloc135 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %92, i32 0, i32 4
  %93 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc135, align 8
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp127, align 8
  call void %93(%struct._object* %94)
  br label %if.end.136

if.end.136:                                       ; preds = %if.else.133, %if.then.132
  br label %do.end.137

do.end.137:                                       ; preds = %if.then, %if.then.9, %do.end.25, %do.end.54, %do.end.82, %do.end.111, %if.end.136
  ret void
}

declare %struct._object* @PyLong_FromLong(i64) #1

declare i32 @PyObject_SetAttrString(%struct._object*, i8*, %struct._object*) #1

declare void @PyErr_SetObject(%struct._object*, %struct._object*) #1

declare %struct._object* @PyUnicode_AsEncodedString(%struct._object*, i8*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @expat_start_ns_handler(%struct.XMLParserObject* %self, i8* %prefix, i8* %uri) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %prefix.addr = alloca i8*, align 8
  %uri.addr = alloca i8*, align 8
  %sprefix = alloca %struct._object*, align 8
  %suri = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp24 = alloca %struct._object*, align 8
  %_py_decref_tmp35 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store i8* %prefix, i8** %prefix.addr, align 8
  store i8* %uri, i8** %uri.addr, align 8
  store %struct._object* null, %struct._object** %sprefix, align 8
  store %struct._object* null, %struct._object** %suri, align 8
  %call = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %do.end.44

if.end:                                           ; preds = %entry
  %0 = load i8*, i8** %uri.addr, align 8
  %tobool1 = icmp ne i8* %0, null
  br i1 %tobool1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.end
  %1 = load i8*, i8** %uri.addr, align 8
  %2 = load i8*, i8** %uri.addr, align 8
  %call3 = call i64 @strlen(i8* %2) #5
  %call4 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %1, i64 %call3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0))
  store %struct._object* %call4, %struct._object** %suri, align 8
  br label %if.end.6

if.else:                                          ; preds = %if.end
  %call5 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0))
  store %struct._object* %call5, %struct._object** %suri, align 8
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %3 = load %struct._object*, %struct._object** %suri, align 8
  %tobool7 = icmp ne %struct._object* %3, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.6
  br label %do.end.44

if.end.9:                                         ; preds = %if.end.6
  %4 = load i8*, i8** %prefix.addr, align 8
  %tobool10 = icmp ne i8* %4, null
  br i1 %tobool10, label %if.then.11, label %if.else.14

if.then.11:                                       ; preds = %if.end.9
  %5 = load i8*, i8** %prefix.addr, align 8
  %6 = load i8*, i8** %prefix.addr, align 8
  %call12 = call i64 @strlen(i8* %6) #5
  %call13 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %5, i64 %call12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0))
  store %struct._object* %call13, %struct._object** %sprefix, align 8
  br label %if.end.16

if.else.14:                                       ; preds = %if.end.9
  %call15 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0))
  store %struct._object* %call15, %struct._object** %sprefix, align 8
  br label %if.end.16

if.end.16:                                        ; preds = %if.else.14, %if.then.11
  %7 = load %struct._object*, %struct._object** %sprefix, align 8
  %tobool17 = icmp ne %struct._object* %7, null
  br i1 %tobool17, label %if.end.22, label %if.then.18

if.then.18:                                       ; preds = %if.end.16
  br label %do.body

do.body:                                          ; preds = %if.then.18
  %8 = load %struct._object*, %struct._object** %suri, align 8
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0
  %10 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %10, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.19, label %if.else.20

if.then.19:                                       ; preds = %do.body
  br label %if.end.21

if.else.20:                                       ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %13(%struct._object* %14)
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.20, %if.then.19
  br label %do.end

do.end:                                           ; preds = %if.end.21
  br label %do.end.44

if.end.22:                                        ; preds = %if.end.16
  %15 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %15, i32 0, i32 2
  %16 = load %struct._object*, %struct._object** %target, align 8
  %17 = bitcast %struct._object* %16 to %struct.TreeBuilderObject*
  %18 = load %struct._object*, %struct._object** %sprefix, align 8
  %19 = load %struct._object*, %struct._object** %suri, align 8
  call void @treebuilder_handle_namespace(%struct.TreeBuilderObject* %17, i32 1, %struct._object* %18, %struct._object* %19)
  br label %do.body.23

do.body.23:                                       ; preds = %if.end.22
  %20 = load %struct._object*, %struct._object** %sprefix, align 8
  store %struct._object* %20, %struct._object** %_py_decref_tmp24, align 8
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8
  %ob_refcnt25 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0
  %22 = load i64, i64* %ob_refcnt25, align 8
  %dec26 = add i64 %22, -1
  store i64 %dec26, i64* %ob_refcnt25, align 8
  %cmp27 = icmp ne i64 %dec26, 0
  br i1 %cmp27, label %if.then.28, label %if.else.29

if.then.28:                                       ; preds = %do.body.23
  br label %if.end.32

if.else.29:                                       ; preds = %do.body.23
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8
  %tp_dealloc31 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 4
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc31, align 8
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8
  call void %25(%struct._object* %26)
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.29, %if.then.28
  br label %do.end.33

do.end.33:                                        ; preds = %if.end.32
  br label %do.body.34

do.body.34:                                       ; preds = %do.end.33
  %27 = load %struct._object*, %struct._object** %suri, align 8
  store %struct._object* %27, %struct._object** %_py_decref_tmp35, align 8
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8
  %ob_refcnt36 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0
  %29 = load i64, i64* %ob_refcnt36, align 8
  %dec37 = add i64 %29, -1
  store i64 %dec37, i64* %ob_refcnt36, align 8
  %cmp38 = icmp ne i64 %dec37, 0
  br i1 %cmp38, label %if.then.39, label %if.else.40

if.then.39:                                       ; preds = %do.body.34
  br label %if.end.43

if.else.40:                                       ; preds = %do.body.34
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8
  %tp_dealloc42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc42, align 8
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8
  call void %32(%struct._object* %33)
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.40, %if.then.39
  br label %do.end.44

do.end.44:                                        ; preds = %if.then, %if.then.8, %do.end, %if.end.43
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @expat_end_ns_handler(%struct.XMLParserObject* %self, i8* %prefix_in) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %prefix_in.addr = alloca i8*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store i8* %prefix_in, i8** %prefix_in.addr, align 8
  %call = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %0 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %0, i32 0, i32 2
  %1 = load %struct._object*, %struct._object** %target, align 8
  %2 = bitcast %struct._object* %1 to %struct.TreeBuilderObject*
  call void @treebuilder_handle_namespace(%struct.TreeBuilderObject* %2, i32 0, %struct._object* null, %struct._object* null)
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

declare %struct._object* @PyUnicode_DecodeUTF8(i8*, i64, i8*) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #2

; Function Attrs: nounwind uwtable
define internal void @treebuilder_handle_namespace(%struct.TreeBuilderObject* %self, i32 %start, %struct._object* %prefix, %struct._object* %uri) #0 {
entry:
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %start.addr = alloca i32, align 4
  %prefix.addr = alloca %struct._object*, align 8
  %uri.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %action = alloca %struct._object*, align 8
  %parcel = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  %_py_decref_tmp43 = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8
  store i32 %start, i32* %start.addr, align 4
  store %struct._object* %prefix, %struct._object** %prefix.addr, align 8
  store %struct._object* %uri, %struct._object** %uri.addr, align 8
  %0 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %events = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %0, i32 0, i32 8
  %1 = load %struct._object*, %struct._object** %events, align 8
  %tobool = icmp ne %struct._object* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %if.end.53

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %start.addr, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.end
  %3 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %start_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %3, i32 0, i32 11
  %4 = load %struct._object*, %struct._object** %start_ns_event_obj, align 8
  %tobool3 = icmp ne %struct._object* %4, null
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.then.2
  br label %if.end.53

if.end.5:                                         ; preds = %if.then.2
  %5 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %start_ns_event_obj6 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %5, i32 0, i32 11
  %6 = load %struct._object*, %struct._object** %start_ns_event_obj6, align 8
  store %struct._object* %6, %struct._object** %action, align 8
  %7 = load %struct._object*, %struct._object** %prefix.addr, align 8
  %8 = load %struct._object*, %struct._object** %uri.addr, align 8
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), %struct._object* %7, %struct._object* %8)
  store %struct._object* %call, %struct._object** %parcel, align 8
  %9 = load %struct._object*, %struct._object** %parcel, align 8
  %tobool7 = icmp ne %struct._object* %9, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.5
  br label %if.end.53

if.end.9:                                         ; preds = %if.end.5
  %10 = load %struct._object*, %struct._object** %action, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0
  %11 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %11, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  br label %if.end.18

if.else:                                          ; preds = %if.end
  %12 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %end_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %12, i32 0, i32 12
  %13 = load %struct._object*, %struct._object** %end_ns_event_obj, align 8
  %tobool10 = icmp ne %struct._object* %13, null
  br i1 %tobool10, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.else
  br label %if.end.53

if.end.12:                                        ; preds = %if.else
  %14 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %end_ns_event_obj13 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %14, i32 0, i32 12
  %15 = load %struct._object*, %struct._object** %end_ns_event_obj13, align 8
  store %struct._object* %15, %struct._object** %action, align 8
  %16 = load %struct._object*, %struct._object** %action, align 8
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0
  %17 = load i64, i64* %ob_refcnt14, align 8
  %inc15 = add i64 %17, 1
  store i64 %inc15, i64* %ob_refcnt14, align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %parcel, align 8
  %18 = load %struct._object*, %struct._object** %parcel, align 8
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0
  %19 = load i64, i64* %ob_refcnt16, align 8
  %inc17 = add i64 %19, 1
  store i64 %inc17, i64* %ob_refcnt16, align 8
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.12, %if.end.9
  %call19 = call %struct._object* @PyTuple_New(i64 2)
  store %struct._object* %call19, %struct._object** %res, align 8
  %20 = load %struct._object*, %struct._object** %res, align 8
  %tobool20 = icmp ne %struct._object* %20, null
  br i1 %tobool20, label %if.then.21, label %if.else.30

if.then.21:                                       ; preds = %if.end.18
  %21 = load %struct._object*, %struct._object** %action, align 8
  %22 = load %struct._object*, %struct._object** %res, align 8
  %23 = bitcast %struct._object* %22 to %struct.PyTupleObject*
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %23, i32 0, i32 1
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0
  store %struct._object* %21, %struct._object** %arrayidx, align 8
  %24 = load %struct._object*, %struct._object** %parcel, align 8
  %25 = load %struct._object*, %struct._object** %res, align 8
  %26 = bitcast %struct._object* %25 to %struct.PyTupleObject*
  %ob_item22 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %26, i32 0, i32 1
  %arrayidx23 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item22, i32 0, i64 1
  store %struct._object* %24, %struct._object** %arrayidx23, align 8
  %27 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8
  %events24 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %27, i32 0, i32 8
  %28 = load %struct._object*, %struct._object** %events24, align 8
  %29 = load %struct._object*, %struct._object** %res, align 8
  %call25 = call i32 @PyList_Append(%struct._object* %28, %struct._object* %29)
  br label %do.body

do.body:                                          ; preds = %if.then.21
  %30 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %30, %struct._object** %_py_decref_tmp, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0
  %32 = load i64, i64* %ob_refcnt26, align 8
  %dec = add i64 %32, -1
  store i64 %dec, i64* %ob_refcnt26, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.27, label %if.else.28

if.then.27:                                       ; preds = %do.body
  br label %if.end.29

if.else.28:                                       ; preds = %do.body
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %35(%struct._object* %36)
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.28, %if.then.27
  br label %do.end

do.end:                                           ; preds = %if.end.29
  br label %if.end.53

if.else.30:                                       ; preds = %if.end.18
  br label %do.body.31

do.body.31:                                       ; preds = %if.else.30
  %37 = load %struct._object*, %struct._object** %action, align 8
  store %struct._object* %37, %struct._object** %_py_decref_tmp32, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0
  %39 = load i64, i64* %ob_refcnt33, align 8
  %dec34 = add i64 %39, -1
  store i64 %dec34, i64* %ob_refcnt33, align 8
  %cmp35 = icmp ne i64 %dec34, 0
  br i1 %cmp35, label %if.then.36, label %if.else.37

if.then.36:                                       ; preds = %do.body.31
  br label %if.end.40

if.else.37:                                       ; preds = %do.body.31
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8
  call void %42(%struct._object* %43)
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.37, %if.then.36
  br label %do.end.41

do.end.41:                                        ; preds = %if.end.40
  br label %do.body.42

do.body.42:                                       ; preds = %do.end.41
  %44 = load %struct._object*, %struct._object** %parcel, align 8
  store %struct._object* %44, %struct._object** %_py_decref_tmp43, align 8
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0
  %46 = load i64, i64* %ob_refcnt44, align 8
  %dec45 = add i64 %46, -1
  store i64 %dec45, i64* %ob_refcnt44, align 8
  %cmp46 = icmp ne i64 %dec45, 0
  br i1 %cmp46, label %if.then.47, label %if.else.48

if.then.47:                                       ; preds = %do.body.42
  br label %if.end.51

if.else.48:                                       ; preds = %do.body.42
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  %ob_type49 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type49, align 8
  %tp_dealloc50 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc50, align 8
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  call void %49(%struct._object* %50)
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.48, %if.then.47
  br label %do.end.52

do.end.52:                                        ; preds = %if.end.51
  call void @PyErr_Clear()
  br label %if.end.53

if.end.53:                                        ; preds = %if.then, %if.then.4, %if.then.8, %if.then.11, %do.end.52, %do.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @expat_start_handler(%struct.XMLParserObject* %self, i8* %tag_in, i8** %attrib_in) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %tag_in.addr = alloca i8*, align 8
  %attrib_in.addr = alloca i8**, align 8
  %res = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %ok = alloca i32, align 4
  %key = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp32 = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  %_py_decref_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp62 = alloca %struct._object*, align 8
  %_py_decref_tmp73 = alloca %struct._object*, align 8
  %_py_decref_tmp86 = alloca %struct._object*, align 8
  %_py_decref_tmp117 = alloca %struct._object*, align 8
  %_py_decref_tmp128 = alloca %struct._object*, align 8
  %_py_xdecref_tmp139 = alloca %struct._object*, align 8
  %_py_decref_tmp143 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store i8* %tag_in, i8** %tag_in.addr, align 8
  store i8** %attrib_in, i8*** %attrib_in.addr, align 8
  %call = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %do.end.154

if.end:                                           ; preds = %entry
  %0 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %1 = load i8*, i8** %tag_in.addr, align 8
  %call1 = call %struct._object* @makeuniversal(%struct.XMLParserObject* %0, i8* %1)
  store %struct._object* %call1, %struct._object** %tag, align 8
  %2 = load %struct._object*, %struct._object** %tag, align 8
  %tobool2 = icmp ne %struct._object* %2, null
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  br label %do.end.154

if.end.4:                                         ; preds = %if.end
  %3 = load i8**, i8*** %attrib_in.addr, align 8
  %arrayidx = getelementptr i8*, i8** %3, i64 0
  %4 = load i8*, i8** %arrayidx, align 8
  %tobool5 = icmp ne i8* %4, null
  br i1 %tobool5, label %if.then.6, label %if.else.97

if.then.6:                                        ; preds = %if.end.4
  %call7 = call %struct._object* @PyDict_New()
  store %struct._object* %call7, %struct._object** %attrib, align 8
  %5 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool8 = icmp ne %struct._object* %5, null
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.then.6
  br label %do.end.154

if.end.10:                                        ; preds = %if.then.6
  br label %while.cond

while.cond:                                       ; preds = %if.end.96, %if.end.10
  %6 = load i8**, i8*** %attrib_in.addr, align 8
  %arrayidx11 = getelementptr i8*, i8** %6, i64 0
  %7 = load i8*, i8** %arrayidx11, align 8
  %tobool12 = icmp ne i8* %7, null
  br i1 %tobool12, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %8 = load i8**, i8*** %attrib_in.addr, align 8
  %arrayidx13 = getelementptr i8*, i8** %8, i64 1
  %9 = load i8*, i8** %arrayidx13, align 8
  %tobool14 = icmp ne i8* %9, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %tobool14, %land.rhs ]
  br i1 %10, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %11 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %12 = load i8**, i8*** %attrib_in.addr, align 8
  %arrayidx15 = getelementptr i8*, i8** %12, i64 0
  %13 = load i8*, i8** %arrayidx15, align 8
  %call16 = call %struct._object* @makeuniversal(%struct.XMLParserObject* %11, i8* %13)
  store %struct._object* %call16, %struct._object** %key, align 8
  %14 = load i8**, i8*** %attrib_in.addr, align 8
  %arrayidx17 = getelementptr i8*, i8** %14, i64 1
  %15 = load i8*, i8** %arrayidx17, align 8
  %16 = load i8**, i8*** %attrib_in.addr, align 8
  %arrayidx18 = getelementptr i8*, i8** %16, i64 1
  %17 = load i8*, i8** %arrayidx18, align 8
  %call19 = call i64 @strlen(i8* %17) #5
  %call20 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %15, i64 %call19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0))
  store %struct._object* %call20, %struct._object** %value, align 8
  %18 = load %struct._object*, %struct._object** %key, align 8
  %tobool21 = icmp ne %struct._object* %18, null
  br i1 %tobool21, label %lor.lhs.false, label %if.then.23

lor.lhs.false:                                    ; preds = %while.body
  %19 = load %struct._object*, %struct._object** %value, align 8
  %tobool22 = icmp ne %struct._object* %19, null
  br i1 %tobool22, label %if.end.59, label %if.then.23

if.then.23:                                       ; preds = %lor.lhs.false, %while.body
  br label %do.body

do.body:                                          ; preds = %if.then.23
  %20 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %20, %struct._object** %_py_xdecref_tmp, align 8
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp = icmp ne %struct._object* %21, null
  br i1 %cmp, label %if.then.24, label %if.end.29

if.then.24:                                       ; preds = %do.body
  br label %do.body.25

do.body.25:                                       ; preds = %if.then.24
  %22 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %22, %struct._object** %_py_decref_tmp, align 8
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0
  %24 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %24, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp26 = icmp ne i64 %dec, 0
  br i1 %cmp26, label %if.then.27, label %if.else

if.then.27:                                       ; preds = %do.body.25
  br label %if.end.28

if.else:                                          ; preds = %do.body.25
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %27(%struct._object* %28)
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.27
  br label %do.end

do.end:                                           ; preds = %if.end.28
  br label %if.end.29

if.end.29:                                        ; preds = %do.end, %do.body
  br label %do.end.30

do.end.30:                                        ; preds = %if.end.29
  br label %do.body.31

do.body.31:                                       ; preds = %do.end.30
  %29 = load %struct._object*, %struct._object** %key, align 8
  store %struct._object* %29, %struct._object** %_py_xdecref_tmp32, align 8
  %30 = load %struct._object*, %struct._object** %_py_xdecref_tmp32, align 8
  %cmp33 = icmp ne %struct._object* %30, null
  br i1 %cmp33, label %if.then.34, label %if.end.46

if.then.34:                                       ; preds = %do.body.31
  br label %do.body.35

do.body.35:                                       ; preds = %if.then.34
  %31 = load %struct._object*, %struct._object** %_py_xdecref_tmp32, align 8
  store %struct._object* %31, %struct._object** %_py_decref_tmp36, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0
  %33 = load i64, i64* %ob_refcnt37, align 8
  %dec38 = add i64 %33, -1
  store i64 %dec38, i64* %ob_refcnt37, align 8
  %cmp39 = icmp ne i64 %dec38, 0
  br i1 %cmp39, label %if.then.40, label %if.else.41

if.then.40:                                       ; preds = %do.body.35
  br label %if.end.44

if.else.41:                                       ; preds = %do.body.35
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8
  call void %36(%struct._object* %37)
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.then.40
  br label %do.end.45

do.end.45:                                        ; preds = %if.end.44
  br label %if.end.46

if.end.46:                                        ; preds = %do.end.45, %do.body.31
  br label %do.end.47

do.end.47:                                        ; preds = %if.end.46
  br label %do.body.48

do.body.48:                                       ; preds = %do.end.47
  %38 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %38, %struct._object** %_py_decref_tmp49, align 8
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8
  %ob_refcnt50 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0
  %40 = load i64, i64* %ob_refcnt50, align 8
  %dec51 = add i64 %40, -1
  store i64 %dec51, i64* %ob_refcnt50, align 8
  %cmp52 = icmp ne i64 %dec51, 0
  br i1 %cmp52, label %if.then.53, label %if.else.54

if.then.53:                                       ; preds = %do.body.48
  br label %if.end.57

if.else.54:                                       ; preds = %do.body.48
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8
  %tp_dealloc56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc56, align 8
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8
  call void %43(%struct._object* %44)
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.54, %if.then.53
  br label %do.end.58

do.end.58:                                        ; preds = %if.end.57
  br label %do.end.154

if.end.59:                                        ; preds = %lor.lhs.false
  %45 = load %struct._object*, %struct._object** %attrib, align 8
  %46 = load %struct._object*, %struct._object** %key, align 8
  %47 = load %struct._object*, %struct._object** %value, align 8
  %call60 = call i32 @PyDict_SetItem(%struct._object* %45, %struct._object* %46, %struct._object* %47)
  store i32 %call60, i32* %ok, align 4
  br label %do.body.61

do.body.61:                                       ; preds = %if.end.59
  %48 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %48, %struct._object** %_py_decref_tmp62, align 8
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8
  %ob_refcnt63 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0
  %50 = load i64, i64* %ob_refcnt63, align 8
  %dec64 = add i64 %50, -1
  store i64 %dec64, i64* %ob_refcnt63, align 8
  %cmp65 = icmp ne i64 %dec64, 0
  br i1 %cmp65, label %if.then.66, label %if.else.67

if.then.66:                                       ; preds = %do.body.61
  br label %if.end.70

if.else.67:                                       ; preds = %do.body.61
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8
  %ob_type68 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type68, align 8
  %tp_dealloc69 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc69, align 8
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8
  call void %53(%struct._object* %54)
  br label %if.end.70

if.end.70:                                        ; preds = %if.else.67, %if.then.66
  br label %do.end.71

do.end.71:                                        ; preds = %if.end.70
  br label %do.body.72

do.body.72:                                       ; preds = %do.end.71
  %55 = load %struct._object*, %struct._object** %key, align 8
  store %struct._object* %55, %struct._object** %_py_decref_tmp73, align 8
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0
  %57 = load i64, i64* %ob_refcnt74, align 8
  %dec75 = add i64 %57, -1
  store i64 %dec75, i64* %ob_refcnt74, align 8
  %cmp76 = icmp ne i64 %dec75, 0
  br i1 %cmp76, label %if.then.77, label %if.else.78

if.then.77:                                       ; preds = %do.body.72
  br label %if.end.81

if.else.78:                                       ; preds = %do.body.72
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8
  %ob_type79 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type79, align 8
  %tp_dealloc80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc80, align 8
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8
  call void %60(%struct._object* %61)
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.78, %if.then.77
  br label %do.end.82

do.end.82:                                        ; preds = %if.end.81
  %62 = load i32, i32* %ok, align 4
  %cmp83 = icmp slt i32 %62, 0
  br i1 %cmp83, label %if.then.84, label %if.end.96

if.then.84:                                       ; preds = %do.end.82
  br label %do.body.85

do.body.85:                                       ; preds = %if.then.84
  %63 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %63, %struct._object** %_py_decref_tmp86, align 8
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8
  %ob_refcnt87 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 0
  %65 = load i64, i64* %ob_refcnt87, align 8
  %dec88 = add i64 %65, -1
  store i64 %dec88, i64* %ob_refcnt87, align 8
  %cmp89 = icmp ne i64 %dec88, 0
  br i1 %cmp89, label %if.then.90, label %if.else.91

if.then.90:                                       ; preds = %do.body.85
  br label %if.end.94

if.else.91:                                       ; preds = %do.body.85
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8
  %ob_type92 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 1
  %67 = load %struct._typeobject*, %struct._typeobject** %ob_type92, align 8
  %tp_dealloc93 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %67, i32 0, i32 4
  %68 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc93, align 8
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8
  call void %68(%struct._object* %69)
  br label %if.end.94

if.end.94:                                        ; preds = %if.else.91, %if.then.90
  br label %do.end.95

do.end.95:                                        ; preds = %if.end.94
  br label %do.end.154

if.end.96:                                        ; preds = %do.end.82
  %70 = load i8**, i8*** %attrib_in.addr, align 8
  %add.ptr = getelementptr i8*, i8** %70, i64 2
  store i8** %add.ptr, i8*** %attrib_in.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end.102

if.else.97:                                       ; preds = %if.end.4
  %call98 = call %struct._object* @PyDict_New()
  store %struct._object* %call98, %struct._object** %attrib, align 8
  %71 = load %struct._object*, %struct._object** %attrib, align 8
  %tobool99 = icmp ne %struct._object* %71, null
  br i1 %tobool99, label %if.end.101, label %if.then.100

if.then.100:                                      ; preds = %if.else.97
  br label %do.end.154

if.end.101:                                       ; preds = %if.else.97
  br label %if.end.102

if.end.102:                                       ; preds = %if.end.101, %while.end
  %72 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %72, i32 0, i32 2
  %73 = load %struct._object*, %struct._object** %target, align 8
  %ob_type103 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type103, align 8
  %cmp104 = icmp eq %struct._typeobject* %74, @TreeBuilder_Type
  br i1 %cmp104, label %if.then.105, label %if.else.108

if.then.105:                                      ; preds = %if.end.102
  %75 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target106 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %75, i32 0, i32 2
  %76 = load %struct._object*, %struct._object** %target106, align 8
  %77 = bitcast %struct._object* %76 to %struct.TreeBuilderObject*
  %78 = load %struct._object*, %struct._object** %tag, align 8
  %79 = load %struct._object*, %struct._object** %attrib, align 8
  %call107 = call %struct._object* @treebuilder_handle_start(%struct.TreeBuilderObject* %77, %struct._object* %78, %struct._object* %79)
  store %struct._object* %call107, %struct._object** %res, align 8
  br label %if.end.115

if.else.108:                                      ; preds = %if.end.102
  %80 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_start = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %80, i32 0, i32 5
  %81 = load %struct._object*, %struct._object** %handle_start, align 8
  %tobool109 = icmp ne %struct._object* %81, null
  br i1 %tobool109, label %if.then.110, label %if.else.113

if.then.110:                                      ; preds = %if.else.108
  %82 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_start111 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %82, i32 0, i32 5
  %83 = load %struct._object*, %struct._object** %handle_start111, align 8
  %84 = load %struct._object*, %struct._object** %tag, align 8
  %85 = load %struct._object*, %struct._object** %attrib, align 8
  %call112 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), %struct._object* %84, %struct._object* %85)
  store %struct._object* %call112, %struct._object** %res, align 8
  br label %if.end.114

if.else.113:                                      ; preds = %if.else.108
  store %struct._object* null, %struct._object** %res, align 8
  br label %if.end.114

if.end.114:                                       ; preds = %if.else.113, %if.then.110
  br label %if.end.115

if.end.115:                                       ; preds = %if.end.114, %if.then.105
  br label %do.body.116

do.body.116:                                      ; preds = %if.end.115
  %86 = load %struct._object*, %struct._object** %tag, align 8
  store %struct._object* %86, %struct._object** %_py_decref_tmp117, align 8
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp117, align 8
  %ob_refcnt118 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 0
  %88 = load i64, i64* %ob_refcnt118, align 8
  %dec119 = add i64 %88, -1
  store i64 %dec119, i64* %ob_refcnt118, align 8
  %cmp120 = icmp ne i64 %dec119, 0
  br i1 %cmp120, label %if.then.121, label %if.else.122

if.then.121:                                      ; preds = %do.body.116
  br label %if.end.125

if.else.122:                                      ; preds = %do.body.116
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp117, align 8
  %ob_type123 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 1
  %90 = load %struct._typeobject*, %struct._typeobject** %ob_type123, align 8
  %tp_dealloc124 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %90, i32 0, i32 4
  %91 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc124, align 8
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp117, align 8
  call void %91(%struct._object* %92)
  br label %if.end.125

if.end.125:                                       ; preds = %if.else.122, %if.then.121
  br label %do.end.126

do.end.126:                                       ; preds = %if.end.125
  br label %do.body.127

do.body.127:                                      ; preds = %do.end.126
  %93 = load %struct._object*, %struct._object** %attrib, align 8
  store %struct._object* %93, %struct._object** %_py_decref_tmp128, align 8
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8
  %ob_refcnt129 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 0
  %95 = load i64, i64* %ob_refcnt129, align 8
  %dec130 = add i64 %95, -1
  store i64 %dec130, i64* %ob_refcnt129, align 8
  %cmp131 = icmp ne i64 %dec130, 0
  br i1 %cmp131, label %if.then.132, label %if.else.133

if.then.132:                                      ; preds = %do.body.127
  br label %if.end.136

if.else.133:                                      ; preds = %do.body.127
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8
  %ob_type134 = getelementptr inbounds %struct._object, %struct._object* %96, i32 0, i32 1
  %97 = load %struct._typeobject*, %struct._typeobject** %ob_type134, align 8
  %tp_dealloc135 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %97, i32 0, i32 4
  %98 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc135, align 8
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8
  call void %98(%struct._object* %99)
  br label %if.end.136

if.end.136:                                       ; preds = %if.else.133, %if.then.132
  br label %do.end.137

do.end.137:                                       ; preds = %if.end.136
  br label %do.body.138

do.body.138:                                      ; preds = %do.end.137
  %100 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %100, %struct._object** %_py_xdecref_tmp139, align 8
  %101 = load %struct._object*, %struct._object** %_py_xdecref_tmp139, align 8
  %cmp140 = icmp ne %struct._object* %101, null
  br i1 %cmp140, label %if.then.141, label %if.end.153

if.then.141:                                      ; preds = %do.body.138
  br label %do.body.142

do.body.142:                                      ; preds = %if.then.141
  %102 = load %struct._object*, %struct._object** %_py_xdecref_tmp139, align 8
  store %struct._object* %102, %struct._object** %_py_decref_tmp143, align 8
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8
  %ob_refcnt144 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 0
  %104 = load i64, i64* %ob_refcnt144, align 8
  %dec145 = add i64 %104, -1
  store i64 %dec145, i64* %ob_refcnt144, align 8
  %cmp146 = icmp ne i64 %dec145, 0
  br i1 %cmp146, label %if.then.147, label %if.else.148

if.then.147:                                      ; preds = %do.body.142
  br label %if.end.151

if.else.148:                                      ; preds = %do.body.142
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8
  %ob_type149 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 1
  %106 = load %struct._typeobject*, %struct._typeobject** %ob_type149, align 8
  %tp_dealloc150 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %106, i32 0, i32 4
  %107 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc150, align 8
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8
  call void %107(%struct._object* %108)
  br label %if.end.151

if.end.151:                                       ; preds = %if.else.148, %if.then.147
  br label %do.end.152

do.end.152:                                       ; preds = %if.end.151
  br label %if.end.153

if.end.153:                                       ; preds = %do.end.152, %do.body.138
  br label %do.end.154

do.end.154:                                       ; preds = %if.then, %if.then.3, %if.then.9, %do.end.58, %do.end.95, %if.then.100, %if.end.153
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @expat_end_handler(%struct.XMLParserObject* %self, i8* %tag_in) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %tag_in.addr = alloca i8*, align 8
  %tag = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store i8* %tag_in, i8** %tag_in.addr, align 8
  store %struct._object* null, %struct._object** %res, align 8
  %call = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %do.end.34

if.end:                                           ; preds = %entry
  %0 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %0, i32 0, i32 2
  %1 = load %struct._object*, %struct._object** %target, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %2, @TreeBuilder_Type
  br i1 %cmp, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.end
  %3 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target2 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %3, i32 0, i32 2
  %4 = load %struct._object*, %struct._object** %target2, align 8
  %5 = bitcast %struct._object* %4 to %struct.TreeBuilderObject*
  %call3 = call %struct._object* @treebuilder_handle_end(%struct.TreeBuilderObject* %5, %struct._object* @_Py_NoneStruct)
  store %struct._object* %call3, %struct._object** %res, align 8
  br label %if.end.18

if.else:                                          ; preds = %if.end
  %6 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_end = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %6, i32 0, i32 7
  %7 = load %struct._object*, %struct._object** %handle_end, align 8
  %tobool4 = icmp ne %struct._object* %7, null
  br i1 %tobool4, label %if.then.5, label %if.end.17

if.then.5:                                        ; preds = %if.else
  %8 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %9 = load i8*, i8** %tag_in.addr, align 8
  %call6 = call %struct._object* @makeuniversal(%struct.XMLParserObject* %8, i8* %9)
  store %struct._object* %call6, %struct._object** %tag, align 8
  %10 = load %struct._object*, %struct._object** %tag, align 8
  %tobool7 = icmp ne %struct._object* %10, null
  br i1 %tobool7, label %if.then.8, label %if.end.16

if.then.8:                                        ; preds = %if.then.5
  %11 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_end9 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %11, i32 0, i32 7
  %12 = load %struct._object*, %struct._object** %handle_end9, align 8
  %13 = load %struct._object*, %struct._object** %tag, align 8
  %call10 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), %struct._object* %13)
  store %struct._object* %call10, %struct._object** %res, align 8
  br label %do.body

do.body:                                          ; preds = %if.then.8
  %14 = load %struct._object*, %struct._object** %tag, align 8
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0
  %16 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %16, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else.13

if.then.12:                                       ; preds = %do.body
  br label %if.end.15

if.else.13:                                       ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type14 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type14, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %19(%struct._object* %20)
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.13, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.15
  br label %if.end.16

if.end.16:                                        ; preds = %do.end, %if.then.5
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.16, %if.else
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.then.1
  br label %do.body.19

do.body.19:                                       ; preds = %if.end.18
  %21 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %21, %struct._object** %_py_xdecref_tmp, align 8
  %22 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp20 = icmp ne %struct._object* %22, null
  br i1 %cmp20, label %if.then.21, label %if.end.33

if.then.21:                                       ; preds = %do.body.19
  br label %do.body.22

do.body.22:                                       ; preds = %if.then.21
  %23 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %23, %struct._object** %_py_decref_tmp23, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0
  %25 = load i64, i64* %ob_refcnt24, align 8
  %dec25 = add i64 %25, -1
  store i64 %dec25, i64* %ob_refcnt24, align 8
  %cmp26 = icmp ne i64 %dec25, 0
  br i1 %cmp26, label %if.then.27, label %if.else.28

if.then.27:                                       ; preds = %do.body.22
  br label %if.end.31

if.else.28:                                       ; preds = %do.body.22
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8
  call void %28(%struct._object* %29)
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  br label %do.end.32

do.end.32:                                        ; preds = %if.end.31
  br label %if.end.33

if.end.33:                                        ; preds = %do.end.32, %do.body.19
  br label %do.end.34

do.end.34:                                        ; preds = %if.then, %if.end.33
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @expat_default_handler(%struct.XMLParserObject* %self, i8* %data_in, i32 %data_len) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %data_in.addr = alloca i8*, align 8
  %data_len.addr = alloca i32, align 4
  %key = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %message = alloca [128 x i8], align 16
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store i8* %data_in, i8** %data_in.addr, align 8
  store i32 %data_len, i32* %data_len.addr, align 4
  %0 = load i32, i32* %data_len.addr, align 4
  %cmp = icmp slt i32 %0, 2
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %data_in.addr, align 8
  %arrayidx = getelementptr i8, i8* %1, i64 0
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp ne i32 %conv, 38
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %do.end.64

if.end:                                           ; preds = %lor.lhs.false
  %call = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call, null
  br i1 %tobool, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  br label %do.end.64

if.end.4:                                         ; preds = %if.end
  %3 = load i8*, i8** %data_in.addr, align 8
  %add.ptr = getelementptr i8, i8* %3, i64 1
  %4 = load i32, i32* %data_len.addr, align 4
  %sub = sub i32 %4, 2
  %conv5 = sext i32 %sub to i64
  %call6 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %add.ptr, i64 %conv5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0))
  store %struct._object* %call6, %struct._object** %key, align 8
  %5 = load %struct._object*, %struct._object** %key, align 8
  %tobool7 = icmp ne %struct._object* %5, null
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.4
  br label %do.end.64

if.end.9:                                         ; preds = %if.end.4
  %6 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %entity = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %6, i32 0, i32 3
  %7 = load %struct._object*, %struct._object** %entity, align 8
  %8 = load %struct._object*, %struct._object** %key, align 8
  %call10 = call %struct._object* @PyDict_GetItem(%struct._object* %7, %struct._object* %8)
  store %struct._object* %call10, %struct._object** %value, align 8
  %9 = load %struct._object*, %struct._object** %value, align 8
  %tobool11 = icmp ne %struct._object* %9, null
  br i1 %tobool11, label %if.then.12, label %if.else.37

if.then.12:                                       ; preds = %if.end.9
  %10 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %10, i32 0, i32 2
  %11 = load %struct._object*, %struct._object** %target, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp13 = icmp eq %struct._typeobject* %12, @TreeBuilder_Type
  br i1 %cmp13, label %if.then.15, label %if.else

if.then.15:                                       ; preds = %if.then.12
  %13 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target16 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %13, i32 0, i32 2
  %14 = load %struct._object*, %struct._object** %target16, align 8
  %15 = bitcast %struct._object* %14 to %struct.TreeBuilderObject*
  %16 = load %struct._object*, %struct._object** %value, align 8
  %call17 = call %struct._object* @treebuilder_handle_data(%struct.TreeBuilderObject* %15, %struct._object* %16)
  store %struct._object* %call17, %struct._object** %res, align 8
  br label %if.end.24

if.else:                                          ; preds = %if.then.12
  %17 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_data = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %17, i32 0, i32 6
  %18 = load %struct._object*, %struct._object** %handle_data, align 8
  %tobool18 = icmp ne %struct._object* %18, null
  br i1 %tobool18, label %if.then.19, label %if.else.22

if.then.19:                                       ; preds = %if.else
  %19 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_data20 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %19, i32 0, i32 6
  %20 = load %struct._object*, %struct._object** %handle_data20, align 8
  %21 = load %struct._object*, %struct._object** %value, align 8
  %call21 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), %struct._object* %21)
  store %struct._object* %call21, %struct._object** %res, align 8
  br label %if.end.23

if.else.22:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %res, align 8
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.22, %if.then.19
  br label %if.end.24

if.end.24:                                        ; preds = %if.end.23, %if.then.15
  br label %do.body

do.body:                                          ; preds = %if.end.24
  %22 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %22, %struct._object** %_py_xdecref_tmp, align 8
  %23 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp25 = icmp ne %struct._object* %23, null
  br i1 %cmp25, label %if.then.27, label %if.end.35

if.then.27:                                       ; preds = %do.body
  br label %do.body.28

do.body.28:                                       ; preds = %if.then.27
  %24 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %26, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp29 = icmp ne i64 %dec, 0
  br i1 %cmp29, label %if.then.31, label %if.else.32

if.then.31:                                       ; preds = %do.body.28
  br label %if.end.34

if.else.32:                                       ; preds = %do.body.28
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %29(%struct._object* %30)
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.32, %if.then.31
  br label %do.end

do.end:                                           ; preds = %if.end.34
  br label %if.end.35

if.end.35:                                        ; preds = %do.end, %do.body
  br label %do.end.36

do.end.36:                                        ; preds = %if.end.35
  br label %if.end.52

if.else.37:                                       ; preds = %if.end.9
  %call38 = call %struct._object* @PyErr_Occurred()
  %tobool39 = icmp ne %struct._object* %call38, null
  br i1 %tobool39, label %if.end.51, label %if.then.40

if.then.40:                                       ; preds = %if.else.37
  %31 = bitcast [128 x i8]* %message to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @expat_default_handler.message, i32 0, i32 0), i64 128, i32 16, i1 false)
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %message, i32 0, i32 0
  %32 = load i8*, i8** %data_in.addr, align 8
  %33 = load i32, i32* %data_len.addr, align 4
  %cmp41 = icmp slt i32 %33, 100
  br i1 %cmp41, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.40
  %34 = load i32, i32* %data_len.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then.40
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ 100, %cond.false ]
  %conv43 = sext i32 %cond to i64
  %call44 = call i8* @strncat(i8* %arraydecay, i8* %32, i64 %conv43) #3
  %35 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %GetErrorLineNumber = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %35, i32 0, i32 8
  %36 = load i64 (%struct.XML_ParserStruct*)*, i64 (%struct.XML_ParserStruct*)** %GetErrorLineNumber, align 8
  %37 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %37, i32 0, i32 1
  %38 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8
  %call45 = call i64 %36(%struct.XML_ParserStruct* %38)
  %conv46 = trunc i64 %call45 to i32
  %39 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8
  %GetErrorColumnNumber = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %39, i32 0, i32 7
  %40 = load i64 (%struct.XML_ParserStruct*)*, i64 (%struct.XML_ParserStruct*)** %GetErrorColumnNumber, align 8
  %41 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %parser47 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %41, i32 0, i32 1
  %42 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser47, align 8
  %call48 = call i64 %40(%struct.XML_ParserStruct* %42)
  %conv49 = trunc i64 %call48 to i32
  %arraydecay50 = getelementptr inbounds [128 x i8], [128 x i8]* %message, i32 0, i32 0
  call void @expat_set_error(i32 11, i32 %conv46, i32 %conv49, i8* %arraydecay50)
  br label %if.end.51

if.end.51:                                        ; preds = %cond.end, %if.else.37
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51, %do.end.36
  br label %do.body.53

do.body.53:                                       ; preds = %if.end.52
  %43 = load %struct._object*, %struct._object** %key, align 8
  store %struct._object* %43, %struct._object** %_py_decref_tmp54, align 8
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0
  %45 = load i64, i64* %ob_refcnt55, align 8
  %dec56 = add i64 %45, -1
  store i64 %dec56, i64* %ob_refcnt55, align 8
  %cmp57 = icmp ne i64 %dec56, 0
  br i1 %cmp57, label %if.then.59, label %if.else.60

if.then.59:                                       ; preds = %do.body.53
  br label %if.end.63

if.else.60:                                       ; preds = %do.body.53
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i32 0, i32 4
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  call void %48(%struct._object* %49)
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.59
  br label %do.end.64

do.end.64:                                        ; preds = %if.then, %if.then.3, %if.then.8, %if.end.63
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @expat_data_handler(%struct.XMLParserObject* %self, i8* %data_in, i32 %data_len) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %data_in.addr = alloca i8*, align 8
  %data_len.addr = alloca i32, align 4
  %data = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp27 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store i8* %data_in, i8** %data_in.addr, align 8
  store i32 %data_len, i32* %data_len.addr, align 4
  %call = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %do.end.39

if.end:                                           ; preds = %entry
  %0 = load i8*, i8** %data_in.addr, align 8
  %1 = load i32, i32* %data_len.addr, align 4
  %conv = sext i32 %1 to i64
  %call1 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %0, i64 %conv, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0))
  store %struct._object* %call1, %struct._object** %data, align 8
  %2 = load %struct._object*, %struct._object** %data, align 8
  %tobool2 = icmp ne %struct._object* %2, null
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  br label %do.end.39

if.end.4:                                         ; preds = %if.end
  %3 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %3, i32 0, i32 2
  %4 = load %struct._object*, %struct._object** %target, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %5, @TreeBuilder_Type
  br i1 %cmp, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %if.end.4
  %6 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %target7 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %6, i32 0, i32 2
  %7 = load %struct._object*, %struct._object** %target7, align 8
  %8 = bitcast %struct._object* %7 to %struct.TreeBuilderObject*
  %9 = load %struct._object*, %struct._object** %data, align 8
  %call8 = call %struct._object* @treebuilder_handle_data(%struct.TreeBuilderObject* %8, %struct._object* %9)
  store %struct._object* %call8, %struct._object** %res, align 8
  br label %if.end.15

if.else:                                          ; preds = %if.end.4
  %10 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_data = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %10, i32 0, i32 6
  %11 = load %struct._object*, %struct._object** %handle_data, align 8
  %tobool9 = icmp ne %struct._object* %11, null
  br i1 %tobool9, label %if.then.10, label %if.else.13

if.then.10:                                       ; preds = %if.else
  %12 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_data11 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %12, i32 0, i32 6
  %13 = load %struct._object*, %struct._object** %handle_data11, align 8
  %14 = load %struct._object*, %struct._object** %data, align 8
  %call12 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), %struct._object* %14)
  store %struct._object* %call12, %struct._object** %res, align 8
  br label %if.end.14

if.else.13:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %res, align 8
  br label %if.end.14

if.end.14:                                        ; preds = %if.else.13, %if.then.10
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.then.6
  br label %do.body

do.body:                                          ; preds = %if.end.15
  %15 = load %struct._object*, %struct._object** %data, align 8
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0
  %17 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %17, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp16 = icmp ne i64 %dec, 0
  br i1 %cmp16, label %if.then.18, label %if.else.19

if.then.18:                                       ; preds = %do.body
  br label %if.end.21

if.else.19:                                       ; preds = %do.body
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %20(%struct._object* %21)
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.19, %if.then.18
  br label %do.end

do.end:                                           ; preds = %if.end.21
  br label %do.body.22

do.body.22:                                       ; preds = %do.end
  %22 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %22, %struct._object** %_py_xdecref_tmp, align 8
  %23 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp23 = icmp ne %struct._object* %23, null
  br i1 %cmp23, label %if.then.25, label %if.end.38

if.then.25:                                       ; preds = %do.body.22
  br label %do.body.26

do.body.26:                                       ; preds = %if.then.25
  %24 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %24, %struct._object** %_py_decref_tmp27, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt28, align 8
  %dec29 = add i64 %26, -1
  store i64 %dec29, i64* %ob_refcnt28, align 8
  %cmp30 = icmp ne i64 %dec29, 0
  br i1 %cmp30, label %if.then.32, label %if.else.33

if.then.32:                                       ; preds = %do.body.26
  br label %if.end.36

if.else.33:                                       ; preds = %do.body.26
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8
  %tp_dealloc35 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc35, align 8
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8
  call void %29(%struct._object* %30)
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.33, %if.then.32
  br label %do.end.37

do.end.37:                                        ; preds = %if.end.36
  br label %if.end.38

if.end.38:                                        ; preds = %do.end.37, %do.body.22
  br label %do.end.39

do.end.39:                                        ; preds = %if.then, %if.then.3, %if.end.38
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @expat_comment_handler(%struct.XMLParserObject* %self, i8* %comment_in) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %comment_in.addr = alloca i8*, align 8
  %comment = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store i8* %comment_in, i8** %comment_in.addr, align 8
  %call = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end.28

if.end:                                           ; preds = %entry
  %0 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_comment = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %0, i32 0, i32 8
  %1 = load %struct._object*, %struct._object** %handle_comment, align 8
  %tobool1 = icmp ne %struct._object* %1, null
  br i1 %tobool1, label %if.then.2, label %if.end.28

if.then.2:                                        ; preds = %if.end
  %2 = load i8*, i8** %comment_in.addr, align 8
  %3 = load i8*, i8** %comment_in.addr, align 8
  %call3 = call i64 @strlen(i8* %3) #5
  %call4 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %2, i64 %call3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0))
  store %struct._object* %call4, %struct._object** %comment, align 8
  %4 = load %struct._object*, %struct._object** %comment, align 8
  %tobool5 = icmp ne %struct._object* %4, null
  br i1 %tobool5, label %if.then.6, label %if.end.27

if.then.6:                                        ; preds = %if.then.2
  %5 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_comment7 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %5, i32 0, i32 8
  %6 = load %struct._object*, %struct._object** %handle_comment7, align 8
  %7 = load %struct._object*, %struct._object** %comment, align 8
  %call8 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), %struct._object* %7)
  store %struct._object* %call8, %struct._object** %res, align 8
  br label %do.body

do.body:                                          ; preds = %if.then.6
  %8 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %8, %struct._object** %_py_xdecref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp = icmp ne %struct._object* %9, null
  br i1 %cmp, label %if.then.9, label %if.end.14

if.then.9:                                        ; preds = %do.body
  br label %do.body.10

do.body.10:                                       ; preds = %if.then.9
  %10 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0
  %12 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %12, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body.10
  br label %if.end.13

if.else:                                          ; preds = %do.body.10
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %15(%struct._object* %16)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  br label %if.end.14

if.end.14:                                        ; preds = %do.end, %do.body
  br label %do.end.15

do.end.15:                                        ; preds = %if.end.14
  br label %do.body.16

do.body.16:                                       ; preds = %do.end.15
  %17 = load %struct._object*, %struct._object** %comment, align 8
  store %struct._object* %17, %struct._object** %_py_decref_tmp17, align 8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0
  %19 = load i64, i64* %ob_refcnt18, align 8
  %dec19 = add i64 %19, -1
  store i64 %dec19, i64* %ob_refcnt18, align 8
  %cmp20 = icmp ne i64 %dec19, 0
  br i1 %cmp20, label %if.then.21, label %if.else.22

if.then.21:                                       ; preds = %do.body.16
  br label %if.end.25

if.else.22:                                       ; preds = %do.body.16
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  call void %22(%struct._object* %23)
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  br label %do.end.26

do.end.26:                                        ; preds = %if.end.25
  br label %if.end.27

if.end.27:                                        ; preds = %do.end.26, %if.then.2
  br label %if.end.28

if.end.28:                                        ; preds = %if.then, %if.end.27, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @expat_pi_handler(%struct.XMLParserObject* %self, i8* %target_in, i8* %data_in) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %target_in.addr = alloca i8*, align 8
  %data_in.addr = alloca i8*, align 8
  %target = alloca %struct._object*, align 8
  %data = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp20 = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  %_py_xdecref_tmp43 = alloca %struct._object*, align 8
  %_py_decref_tmp47 = alloca %struct._object*, align 8
  %_py_xdecref_tmp60 = alloca %struct._object*, align 8
  %_py_decref_tmp64 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store i8* %target_in, i8** %target_in.addr, align 8
  store i8* %data_in, i8** %data_in.addr, align 8
  %call = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end.77

if.end:                                           ; preds = %entry
  %0 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_pi = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %0, i32 0, i32 9
  %1 = load %struct._object*, %struct._object** %handle_pi, align 8
  %tobool1 = icmp ne %struct._object* %1, null
  br i1 %tobool1, label %if.then.2, label %if.end.77

if.then.2:                                        ; preds = %if.end
  %2 = load i8*, i8** %target_in.addr, align 8
  %3 = load i8*, i8** %target_in.addr, align 8
  %call3 = call i64 @strlen(i8* %3) #5
  %call4 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %2, i64 %call3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0))
  store %struct._object* %call4, %struct._object** %target, align 8
  %4 = load i8*, i8** %data_in.addr, align 8
  %5 = load i8*, i8** %data_in.addr, align 8
  %call5 = call i64 @strlen(i8* %5) #5
  %call6 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %4, i64 %call5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0))
  store %struct._object* %call6, %struct._object** %data, align 8
  %6 = load %struct._object*, %struct._object** %target, align 8
  %tobool7 = icmp ne %struct._object* %6, null
  br i1 %tobool7, label %land.lhs.true, label %if.else.41

land.lhs.true:                                    ; preds = %if.then.2
  %7 = load %struct._object*, %struct._object** %data, align 8
  %tobool8 = icmp ne %struct._object* %7, null
  br i1 %tobool8, label %if.then.9, label %if.else.41

if.then.9:                                        ; preds = %land.lhs.true
  %8 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_pi10 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %8, i32 0, i32 9
  %9 = load %struct._object*, %struct._object** %handle_pi10, align 8
  %10 = load %struct._object*, %struct._object** %target, align 8
  %11 = load %struct._object*, %struct._object** %data, align 8
  %call11 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), %struct._object* %10, %struct._object* %11)
  store %struct._object* %call11, %struct._object** %res, align 8
  br label %do.body

do.body:                                          ; preds = %if.then.9
  %12 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %12, %struct._object** %_py_xdecref_tmp, align 8
  %13 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp = icmp ne %struct._object* %13, null
  br i1 %cmp, label %if.then.12, label %if.end.17

if.then.12:                                       ; preds = %do.body
  br label %do.body.13

do.body.13:                                       ; preds = %if.then.12
  %14 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0
  %16 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %16, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp14 = icmp ne i64 %dec, 0
  br i1 %cmp14, label %if.then.15, label %if.else

if.then.15:                                       ; preds = %do.body.13
  br label %if.end.16

if.else:                                          ; preds = %do.body.13
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %19(%struct._object* %20)
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.15
  br label %do.end

do.end:                                           ; preds = %if.end.16
  br label %if.end.17

if.end.17:                                        ; preds = %do.end, %do.body
  br label %do.end.18

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19

do.body.19:                                       ; preds = %do.end.18
  %21 = load %struct._object*, %struct._object** %data, align 8
  store %struct._object* %21, %struct._object** %_py_decref_tmp20, align 8
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0
  %23 = load i64, i64* %ob_refcnt21, align 8
  %dec22 = add i64 %23, -1
  store i64 %dec22, i64* %ob_refcnt21, align 8
  %cmp23 = icmp ne i64 %dec22, 0
  br i1 %cmp23, label %if.then.24, label %if.else.25

if.then.24:                                       ; preds = %do.body.19
  br label %if.end.28

if.else.25:                                       ; preds = %do.body.19
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8
  %tp_dealloc27 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc27, align 8
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8
  call void %26(%struct._object* %27)
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.25, %if.then.24
  br label %do.end.29

do.end.29:                                        ; preds = %if.end.28
  br label %do.body.30

do.body.30:                                       ; preds = %do.end.29
  %28 = load %struct._object*, %struct._object** %target, align 8
  store %struct._object* %28, %struct._object** %_py_decref_tmp31, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0
  %30 = load i64, i64* %ob_refcnt32, align 8
  %dec33 = add i64 %30, -1
  store i64 %dec33, i64* %ob_refcnt32, align 8
  %cmp34 = icmp ne i64 %dec33, 0
  br i1 %cmp34, label %if.then.35, label %if.else.36

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39

if.else.36:                                       ; preds = %do.body.30
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8
  call void %33(%struct._object* %34)
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  br label %do.end.40

do.end.40:                                        ; preds = %if.end.39
  br label %if.end.76

if.else.41:                                       ; preds = %land.lhs.true, %if.then.2
  br label %do.body.42

do.body.42:                                       ; preds = %if.else.41
  %35 = load %struct._object*, %struct._object** %data, align 8
  store %struct._object* %35, %struct._object** %_py_xdecref_tmp43, align 8
  %36 = load %struct._object*, %struct._object** %_py_xdecref_tmp43, align 8
  %cmp44 = icmp ne %struct._object* %36, null
  br i1 %cmp44, label %if.then.45, label %if.end.57

if.then.45:                                       ; preds = %do.body.42
  br label %do.body.46

do.body.46:                                       ; preds = %if.then.45
  %37 = load %struct._object*, %struct._object** %_py_xdecref_tmp43, align 8
  store %struct._object* %37, %struct._object** %_py_decref_tmp47, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8
  %ob_refcnt48 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0
  %39 = load i64, i64* %ob_refcnt48, align 8
  %dec49 = add i64 %39, -1
  store i64 %dec49, i64* %ob_refcnt48, align 8
  %cmp50 = icmp ne i64 %dec49, 0
  br i1 %cmp50, label %if.then.51, label %if.else.52

if.then.51:                                       ; preds = %do.body.46
  br label %if.end.55

if.else.52:                                       ; preds = %do.body.46
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8
  %ob_type53 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type53, align 8
  %tp_dealloc54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc54, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8
  call void %42(%struct._object* %43)
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.52, %if.then.51
  br label %do.end.56

do.end.56:                                        ; preds = %if.end.55
  br label %if.end.57

if.end.57:                                        ; preds = %do.end.56, %do.body.42
  br label %do.end.58

do.end.58:                                        ; preds = %if.end.57
  br label %do.body.59

do.body.59:                                       ; preds = %do.end.58
  %44 = load %struct._object*, %struct._object** %target, align 8
  store %struct._object* %44, %struct._object** %_py_xdecref_tmp60, align 8
  %45 = load %struct._object*, %struct._object** %_py_xdecref_tmp60, align 8
  %cmp61 = icmp ne %struct._object* %45, null
  br i1 %cmp61, label %if.then.62, label %if.end.74

if.then.62:                                       ; preds = %do.body.59
  br label %do.body.63

do.body.63:                                       ; preds = %if.then.62
  %46 = load %struct._object*, %struct._object** %_py_xdecref_tmp60, align 8
  store %struct._object* %46, %struct._object** %_py_decref_tmp64, align 8
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8
  %ob_refcnt65 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0
  %48 = load i64, i64* %ob_refcnt65, align 8
  %dec66 = add i64 %48, -1
  store i64 %dec66, i64* %ob_refcnt65, align 8
  %cmp67 = icmp ne i64 %dec66, 0
  br i1 %cmp67, label %if.then.68, label %if.else.69

if.then.68:                                       ; preds = %do.body.63
  br label %if.end.72

if.else.69:                                       ; preds = %do.body.63
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 1
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8
  %tp_dealloc71 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %50, i32 0, i32 4
  %51 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc71, align 8
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8
  call void %51(%struct._object* %52)
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.69, %if.then.68
  br label %do.end.73

do.end.73:                                        ; preds = %if.end.72
  br label %if.end.74

if.end.74:                                        ; preds = %do.end.73, %do.body.59
  br label %do.end.75

do.end.75:                                        ; preds = %if.end.74
  br label %if.end.76

if.end.76:                                        ; preds = %do.end.75, %do.end.40
  br label %if.end.77

if.end.77:                                        ; preds = %if.then, %if.end.76, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @expat_start_doctype_handler(%struct.XMLParserObject* %self, i8* %doctype_name, i8* %sysid, i8* %pubid, i32 %has_internal_subset) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %doctype_name.addr = alloca i8*, align 8
  %sysid.addr = alloca i8*, align 8
  %pubid.addr = alloca i8*, align 8
  %has_internal_subset.addr = alloca i32, align 4
  %self_pyobj = alloca %struct._object*, align 8
  %doctype_name_obj = alloca %struct._object*, align 8
  %sysid_obj = alloca %struct._object*, align 8
  %pubid_obj = alloca %struct._object*, align 8
  %parser_doctype = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp21 = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  %_py_tmp79 = alloca %struct._object*, align 8
  %_py_decref_tmp83 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp101 = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  %_py_decref_tmp125 = alloca %struct._object*, align 8
  %_py_decref_tmp136 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store i8* %doctype_name, i8** %doctype_name.addr, align 8
  store i8* %sysid, i8** %sysid.addr, align 8
  store i8* %pubid, i8** %pubid.addr, align 8
  store i32 %has_internal_subset, i32* %has_internal_subset.addr, align 4
  %0 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %1 = bitcast %struct.XMLParserObject* %0 to %struct._object*
  store %struct._object* %1, %struct._object** %self_pyobj, align 8
  store %struct._object* null, %struct._object** %parser_doctype, align 8
  store %struct._object* null, %struct._object** %res, align 8
  %call = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %do.end.145

if.end:                                           ; preds = %entry
  %2 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %3 = load i8*, i8** %doctype_name.addr, align 8
  %call1 = call %struct._object* @makeuniversal(%struct.XMLParserObject* %2, i8* %3)
  store %struct._object* %call1, %struct._object** %doctype_name_obj, align 8
  %4 = load %struct._object*, %struct._object** %doctype_name_obj, align 8
  %tobool2 = icmp ne %struct._object* %4, null
  br i1 %tobool2, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  br label %do.end.145

if.end.4:                                         ; preds = %if.end
  %5 = load i8*, i8** %sysid.addr, align 8
  %tobool5 = icmp ne i8* %5, null
  br i1 %tobool5, label %if.then.6, label %if.else.13

if.then.6:                                        ; preds = %if.end.4
  %6 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %7 = load i8*, i8** %sysid.addr, align 8
  %call7 = call %struct._object* @makeuniversal(%struct.XMLParserObject* %6, i8* %7)
  store %struct._object* %call7, %struct._object** %sysid_obj, align 8
  %8 = load %struct._object*, %struct._object** %sysid_obj, align 8
  %tobool8 = icmp ne %struct._object* %8, null
  br i1 %tobool8, label %if.end.12, label %if.then.9

if.then.9:                                        ; preds = %if.then.6
  br label %do.body

do.body:                                          ; preds = %if.then.9
  %9 = load %struct._object*, %struct._object** %doctype_name_obj, align 8
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0
  %11 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %11, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp = icmp ne i64 %dec, 0
  br i1 %cmp, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %do.body
  br label %if.end.11

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %14(%struct._object* %15)
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  br label %do.end

do.end:                                           ; preds = %if.end.11
  br label %do.end.145

if.end.12:                                        ; preds = %if.then.6
  br label %if.end.14

if.else.13:                                       ; preds = %if.end.4
  %16 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc = add i64 %16, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %sysid_obj, align 8
  br label %if.end.14

if.end.14:                                        ; preds = %if.else.13, %if.end.12
  %17 = load i8*, i8** %pubid.addr, align 8
  %tobool15 = icmp ne i8* %17, null
  br i1 %tobool15, label %if.then.16, label %if.else.43

if.then.16:                                       ; preds = %if.end.14
  %18 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %19 = load i8*, i8** %pubid.addr, align 8
  %call17 = call %struct._object* @makeuniversal(%struct.XMLParserObject* %18, i8* %19)
  store %struct._object* %call17, %struct._object** %pubid_obj, align 8
  %20 = load %struct._object*, %struct._object** %pubid_obj, align 8
  %tobool18 = icmp ne %struct._object* %20, null
  br i1 %tobool18, label %if.end.42, label %if.then.19

if.then.19:                                       ; preds = %if.then.16
  br label %do.body.20

do.body.20:                                       ; preds = %if.then.19
  %21 = load %struct._object*, %struct._object** %doctype_name_obj, align 8
  store %struct._object* %21, %struct._object** %_py_decref_tmp21, align 8
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0
  %23 = load i64, i64* %ob_refcnt22, align 8
  %dec23 = add i64 %23, -1
  store i64 %dec23, i64* %ob_refcnt22, align 8
  %cmp24 = icmp ne i64 %dec23, 0
  br i1 %cmp24, label %if.then.25, label %if.else.26

if.then.25:                                       ; preds = %do.body.20
  br label %if.end.29

if.else.26:                                       ; preds = %do.body.20
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8
  call void %26(%struct._object* %27)
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.then.25
  br label %do.end.30

do.end.30:                                        ; preds = %if.end.29
  br label %do.body.31

do.body.31:                                       ; preds = %do.end.30
  %28 = load %struct._object*, %struct._object** %sysid_obj, align 8
  store %struct._object* %28, %struct._object** %_py_decref_tmp32, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0
  %30 = load i64, i64* %ob_refcnt33, align 8
  %dec34 = add i64 %30, -1
  store i64 %dec34, i64* %ob_refcnt33, align 8
  %cmp35 = icmp ne i64 %dec34, 0
  br i1 %cmp35, label %if.then.36, label %if.else.37

if.then.36:                                       ; preds = %do.body.31
  br label %if.end.40

if.else.37:                                       ; preds = %do.body.31
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8
  call void %33(%struct._object* %34)
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.37, %if.then.36
  br label %do.end.41

do.end.41:                                        ; preds = %if.end.40
  br label %do.end.145

if.end.42:                                        ; preds = %if.then.16
  br label %if.end.45

if.else.43:                                       ; preds = %if.end.14
  %35 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  %inc44 = add i64 %35, 1
  store i64 %inc44, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NoneStruct, %struct._object** %pubid_obj, align 8
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.43, %if.end.42
  %36 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_doctype = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %36, i32 0, i32 10
  %37 = load %struct._object*, %struct._object** %handle_doctype, align 8
  %tobool46 = icmp ne %struct._object* %37, null
  br i1 %tobool46, label %if.then.47, label %if.end.66

if.then.47:                                       ; preds = %if.end.45
  %38 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %handle_doctype48 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %38, i32 0, i32 10
  %39 = load %struct._object*, %struct._object** %handle_doctype48, align 8
  %40 = load %struct._object*, %struct._object** %doctype_name_obj, align 8
  %41 = load %struct._object*, %struct._object** %pubid_obj, align 8
  %42 = load %struct._object*, %struct._object** %sysid_obj, align 8
  %call49 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %39, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct._object* %40, %struct._object* %41, %struct._object* %42)
  store %struct._object* %call49, %struct._object** %res, align 8
  br label %do.body.50

do.body.50:                                       ; preds = %if.then.47
  %43 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %43, %struct._object** %_py_tmp, align 8
  %44 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp51 = icmp ne %struct._object* %44, null
  br i1 %cmp51, label %if.then.52, label %if.end.64

if.then.52:                                       ; preds = %do.body.50
  store %struct._object* null, %struct._object** %res, align 8
  br label %do.body.53

do.body.53:                                       ; preds = %if.then.52
  %45 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %45, %struct._object** %_py_decref_tmp54, align 8
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0
  %47 = load i64, i64* %ob_refcnt55, align 8
  %dec56 = add i64 %47, -1
  store i64 %dec56, i64* %ob_refcnt55, align 8
  %cmp57 = icmp ne i64 %dec56, 0
  br i1 %cmp57, label %if.then.58, label %if.else.59

if.then.58:                                       ; preds = %do.body.53
  br label %if.end.62

if.else.59:                                       ; preds = %do.body.53
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  call void %50(%struct._object* %51)
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  br label %do.end.63

do.end.63:                                        ; preds = %if.end.62
  br label %if.end.64

if.end.64:                                        ; preds = %do.end.63, %do.body.50
  br label %do.end.65

do.end.65:                                        ; preds = %if.end.64
  br label %if.end.66

if.end.66:                                        ; preds = %do.end.65, %if.end.45
  %52 = load %struct._object*, %struct._object** %self_pyobj, align 8
  %call67 = call %struct._object* @PyObject_GetAttrString(%struct._object* %52, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0))
  store %struct._object* %call67, %struct._object** %parser_doctype, align 8
  %53 = load %struct._object*, %struct._object** %parser_doctype, align 8
  %tobool68 = icmp ne %struct._object* %53, null
  br i1 %tobool68, label %if.then.69, label %if.end.96

if.then.69:                                       ; preds = %if.end.66
  %54 = load %struct._object*, %struct._object** %self_pyobj, align 8
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8
  %cmp71 = icmp eq %struct._typeobject* %55, @XMLParser_Type
  br i1 %cmp71, label %if.end.95, label %if.then.72

if.then.72:                                       ; preds = %if.then.69
  %56 = load %struct._object*, %struct._object** @PyExc_DeprecationWarning, align 8
  %call73 = call i32 @PyErr_WarnEx(%struct._object* %56, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.138, i32 0, i32 0), i64 1)
  %cmp74 = icmp slt i32 %call73, 0
  br i1 %cmp74, label %if.then.75, label %if.end.76

if.then.75:                                       ; preds = %if.then.72
  br label %clear

if.end.76:                                        ; preds = %if.then.72
  %57 = load %struct._object*, %struct._object** %parser_doctype, align 8
  %58 = load %struct._object*, %struct._object** %doctype_name_obj, align 8
  %59 = load %struct._object*, %struct._object** %pubid_obj, align 8
  %60 = load %struct._object*, %struct._object** %sysid_obj, align 8
  %call77 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %57, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct._object* %58, %struct._object* %59, %struct._object* %60)
  store %struct._object* %call77, %struct._object** %res, align 8
  br label %do.body.78

do.body.78:                                       ; preds = %if.end.76
  %61 = load %struct._object*, %struct._object** %res, align 8
  store %struct._object* %61, %struct._object** %_py_tmp79, align 8
  %62 = load %struct._object*, %struct._object** %_py_tmp79, align 8
  %cmp80 = icmp ne %struct._object* %62, null
  br i1 %cmp80, label %if.then.81, label %if.end.93

if.then.81:                                       ; preds = %do.body.78
  store %struct._object* null, %struct._object** %res, align 8
  br label %do.body.82

do.body.82:                                       ; preds = %if.then.81
  %63 = load %struct._object*, %struct._object** %_py_tmp79, align 8
  store %struct._object* %63, %struct._object** %_py_decref_tmp83, align 8
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp83, align 8
  %ob_refcnt84 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 0
  %65 = load i64, i64* %ob_refcnt84, align 8
  %dec85 = add i64 %65, -1
  store i64 %dec85, i64* %ob_refcnt84, align 8
  %cmp86 = icmp ne i64 %dec85, 0
  br i1 %cmp86, label %if.then.87, label %if.else.88

if.then.87:                                       ; preds = %do.body.82
  br label %if.end.91

if.else.88:                                       ; preds = %do.body.82
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp83, align 8
  %ob_type89 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 1
  %67 = load %struct._typeobject*, %struct._typeobject** %ob_type89, align 8
  %tp_dealloc90 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %67, i32 0, i32 4
  %68 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc90, align 8
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp83, align 8
  call void %68(%struct._object* %69)
  br label %if.end.91

if.end.91:                                        ; preds = %if.else.88, %if.then.87
  br label %do.end.92

do.end.92:                                        ; preds = %if.end.91
  br label %if.end.93

if.end.93:                                        ; preds = %do.end.92, %do.body.78
  br label %do.end.94

do.end.94:                                        ; preds = %if.end.93
  br label %if.end.95

if.end.95:                                        ; preds = %do.end.94, %if.then.69
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.95, %if.end.66
  br label %clear

clear:                                            ; preds = %if.end.96, %if.then.75
  br label %do.body.97

do.body.97:                                       ; preds = %clear
  %70 = load %struct._object*, %struct._object** %parser_doctype, align 8
  store %struct._object* %70, %struct._object** %_py_xdecref_tmp, align 8
  %71 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp98 = icmp ne %struct._object* %71, null
  br i1 %cmp98, label %if.then.99, label %if.end.111

if.then.99:                                       ; preds = %do.body.97
  br label %do.body.100

do.body.100:                                      ; preds = %if.then.99
  %72 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %72, %struct._object** %_py_decref_tmp101, align 8
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8
  %ob_refcnt102 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0
  %74 = load i64, i64* %ob_refcnt102, align 8
  %dec103 = add i64 %74, -1
  store i64 %dec103, i64* %ob_refcnt102, align 8
  %cmp104 = icmp ne i64 %dec103, 0
  br i1 %cmp104, label %if.then.105, label %if.else.106

if.then.105:                                      ; preds = %do.body.100
  br label %if.end.109

if.else.106:                                      ; preds = %do.body.100
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8
  %ob_type107 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 1
  %76 = load %struct._typeobject*, %struct._typeobject** %ob_type107, align 8
  %tp_dealloc108 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %76, i32 0, i32 4
  %77 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc108, align 8
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8
  call void %77(%struct._object* %78)
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.106, %if.then.105
  br label %do.end.110

do.end.110:                                       ; preds = %if.end.109
  br label %if.end.111

if.end.111:                                       ; preds = %do.end.110, %do.body.97
  br label %do.end.112

do.end.112:                                       ; preds = %if.end.111
  br label %do.body.113

do.body.113:                                      ; preds = %do.end.112
  %79 = load %struct._object*, %struct._object** %doctype_name_obj, align 8
  store %struct._object* %79, %struct._object** %_py_decref_tmp114, align 8
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0
  %81 = load i64, i64* %ob_refcnt115, align 8
  %dec116 = add i64 %81, -1
  store i64 %dec116, i64* %ob_refcnt115, align 8
  %cmp117 = icmp ne i64 %dec116, 0
  br i1 %cmp117, label %if.then.118, label %if.else.119

if.then.118:                                      ; preds = %do.body.113
  br label %if.end.122

if.else.119:                                      ; preds = %do.body.113
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8
  %ob_type120 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type120, align 8
  %tp_dealloc121 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc121, align 8
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8
  call void %84(%struct._object* %85)
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.119, %if.then.118
  br label %do.end.123

do.end.123:                                       ; preds = %if.end.122
  br label %do.body.124

do.body.124:                                      ; preds = %do.end.123
  %86 = load %struct._object*, %struct._object** %pubid_obj, align 8
  store %struct._object* %86, %struct._object** %_py_decref_tmp125, align 8
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp125, align 8
  %ob_refcnt126 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 0
  %88 = load i64, i64* %ob_refcnt126, align 8
  %dec127 = add i64 %88, -1
  store i64 %dec127, i64* %ob_refcnt126, align 8
  %cmp128 = icmp ne i64 %dec127, 0
  br i1 %cmp128, label %if.then.129, label %if.else.130

if.then.129:                                      ; preds = %do.body.124
  br label %if.end.133

if.else.130:                                      ; preds = %do.body.124
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp125, align 8
  %ob_type131 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 1
  %90 = load %struct._typeobject*, %struct._typeobject** %ob_type131, align 8
  %tp_dealloc132 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %90, i32 0, i32 4
  %91 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc132, align 8
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp125, align 8
  call void %91(%struct._object* %92)
  br label %if.end.133

if.end.133:                                       ; preds = %if.else.130, %if.then.129
  br label %do.end.134

do.end.134:                                       ; preds = %if.end.133
  br label %do.body.135

do.body.135:                                      ; preds = %do.end.134
  %93 = load %struct._object*, %struct._object** %sysid_obj, align 8
  store %struct._object* %93, %struct._object** %_py_decref_tmp136, align 8
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8
  %ob_refcnt137 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 0
  %95 = load i64, i64* %ob_refcnt137, align 8
  %dec138 = add i64 %95, -1
  store i64 %dec138, i64* %ob_refcnt137, align 8
  %cmp139 = icmp ne i64 %dec138, 0
  br i1 %cmp139, label %if.then.140, label %if.else.141

if.then.140:                                      ; preds = %do.body.135
  br label %if.end.144

if.else.141:                                      ; preds = %do.body.135
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8
  %ob_type142 = getelementptr inbounds %struct._object, %struct._object* %96, i32 0, i32 1
  %97 = load %struct._typeobject*, %struct._typeobject** %ob_type142, align 8
  %tp_dealloc143 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %97, i32 0, i32 4
  %98 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc143, align 8
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8
  call void %98(%struct._object* %99)
  br label %if.end.144

if.end.144:                                       ; preds = %if.else.141, %if.then.140
  br label %do.end.145

do.end.145:                                       ; preds = %if.then, %if.then.3, %do.end, %do.end.41, %if.end.144
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @makeuniversal(%struct.XMLParserObject* %self, i8* %string) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %string.addr = alloca i8*, align 8
  %size = alloca i64, align 8
  %key = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %p = alloca i8*, align 8
  %i = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_decref_tmp48 = alloca %struct._object*, align 8
  %_py_decref_tmp66 = alloca %struct._object*, align 8
  %_py_decref_tmp78 = alloca %struct._object*, align 8
  %_py_decref_tmp92 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8
  store i8* %string, i8** %string.addr, align 8
  %0 = load i8*, i8** %string.addr, align 8
  %call = call i64 @strlen(i8* %0) #5
  store i64 %call, i64* %size, align 8
  %1 = load i8*, i8** %string.addr, align 8
  %2 = load i64, i64* %size, align 8
  %call1 = call %struct._object* @PyBytes_FromStringAndSize(i8* %1, i64 %2)
  store %struct._object* %call1, %struct._object** %key, align 8
  %3 = load %struct._object*, %struct._object** %key, align 8
  %tobool = icmp ne %struct._object* %3, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %names = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %4, i32 0, i32 4
  %5 = load %struct._object*, %struct._object** %names, align 8
  %6 = load %struct._object*, %struct._object** %key, align 8
  %call2 = call %struct._object* @PyDict_GetItem(%struct._object* %5, %struct._object* %6)
  store %struct._object* %call2, %struct._object** %value, align 8
  %7 = load %struct._object*, %struct._object** %value, align 8
  %tobool3 = icmp ne %struct._object* %7, null
  br i1 %tobool3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.end
  %8 = load %struct._object*, %struct._object** %value, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0
  %9 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %9, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  br label %if.end.90

if.else:                                          ; preds = %if.end
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %10 = load i64, i64* %i, align 8
  %11 = load i64, i64* %size, align 8
  %cmp = icmp slt i64 %10, %11
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load i64, i64* %i, align 8
  %13 = load i8*, i8** %string.addr, align 8
  %arrayidx = getelementptr i8, i8* %13, i64 %12
  %14 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %14 to i32
  %cmp5 = icmp eq i32 %conv, 125
  br i1 %cmp5, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %for.body
  br label %for.end

if.end.8:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.8
  %15 = load i64, i64* %i, align 8
  %inc9 = add i64 %15, 1
  store i64 %inc9, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.7, %for.cond
  %16 = load i64, i64* %i, align 8
  %17 = load i64, i64* %size, align 8
  %cmp10 = icmp ne i64 %16, %17
  br i1 %cmp10, label %if.then.12, label %if.else.26

if.then.12:                                       ; preds = %for.end
  %18 = load i64, i64* %size, align 8
  %add = add i64 %18, 1
  %call13 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %add)
  store %struct._object* %call13, %struct._object** %tag, align 8
  %19 = load %struct._object*, %struct._object** %tag, align 8
  %cmp14 = icmp eq %struct._object* %19, null
  br i1 %cmp14, label %if.then.16, label %if.end.23

if.then.16:                                       ; preds = %if.then.12
  br label %do.body

do.body:                                          ; preds = %if.then.16
  %20 = load %struct._object*, %struct._object** %key, align 8
  store %struct._object* %20, %struct._object** %_py_decref_tmp, align 8
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0
  %22 = load i64, i64* %ob_refcnt17, align 8
  %dec = add i64 %22, -1
  store i64 %dec, i64* %ob_refcnt17, align 8
  %cmp18 = icmp ne i64 %dec, 0
  br i1 %cmp18, label %if.then.20, label %if.else.21

if.then.20:                                       ; preds = %do.body
  br label %if.end.22

if.else.21:                                       ; preds = %do.body
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 4
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %25(%struct._object* %26)
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.21, %if.then.20
  br label %do.end

do.end:                                           ; preds = %if.end.22
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.23:                                        ; preds = %if.then.12
  %27 = load %struct._object*, %struct._object** %tag, align 8
  %28 = bitcast %struct._object* %27 to %struct.PyBytesObject*
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %28, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0
  store i8* %arraydecay, i8** %p, align 8
  %29 = load i8*, i8** %p, align 8
  %arrayidx24 = getelementptr i8, i8* %29, i64 0
  store i8 123, i8* %arrayidx24, align 1
  %30 = load i8*, i8** %p, align 8
  %add.ptr = getelementptr i8, i8* %30, i64 1
  %31 = load i8*, i8** %string.addr, align 8
  %32 = load i64, i64* %size, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %31, i64 %32, i32 1, i1 false)
  %33 = load i64, i64* %size, align 8
  %inc25 = add i64 %33, 1
  store i64 %inc25, i64* %size, align 8
  br label %if.end.29

if.else.26:                                       ; preds = %for.end
  %34 = load %struct._object*, %struct._object** %key, align 8
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0
  %35 = load i64, i64* %ob_refcnt27, align 8
  %inc28 = add i64 %35, 1
  store i64 %inc28, i64* %ob_refcnt27, align 8
  %36 = load %struct._object*, %struct._object** %key, align 8
  store %struct._object* %36, %struct._object** %tag, align 8
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.end.23
  %37 = load %struct._object*, %struct._object** %tag, align 8
  %38 = bitcast %struct._object* %37 to %struct.PyBytesObject*
  %ob_sval30 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %38, i32 0, i32 2
  %arraydecay31 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval30, i32 0, i32 0
  store i8* %arraydecay31, i8** %p, align 8
  %39 = load i8*, i8** %p, align 8
  %40 = load i64, i64* %size, align 8
  %call32 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %39, i64 %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0))
  store %struct._object* %call32, %struct._object** %value, align 8
  br label %do.body.33

do.body.33:                                       ; preds = %if.end.29
  %41 = load %struct._object*, %struct._object** %tag, align 8
  store %struct._object* %41, %struct._object** %_py_decref_tmp34, align 8
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0
  %43 = load i64, i64* %ob_refcnt35, align 8
  %dec36 = add i64 %43, -1
  store i64 %dec36, i64* %ob_refcnt35, align 8
  %cmp37 = icmp ne i64 %dec36, 0
  br i1 %cmp37, label %if.then.39, label %if.else.40

if.then.39:                                       ; preds = %do.body.33
  br label %if.end.43

if.else.40:                                       ; preds = %do.body.33
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8
  %tp_dealloc42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc42, align 8
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8
  call void %46(%struct._object* %47)
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.40, %if.then.39
  br label %do.end.44

do.end.44:                                        ; preds = %if.end.43
  %48 = load %struct._object*, %struct._object** %value, align 8
  %tobool45 = icmp ne %struct._object* %48, null
  br i1 %tobool45, label %if.end.59, label %if.then.46

if.then.46:                                       ; preds = %do.end.44
  br label %do.body.47

do.body.47:                                       ; preds = %if.then.46
  %49 = load %struct._object*, %struct._object** %key, align 8
  store %struct._object* %49, %struct._object** %_py_decref_tmp48, align 8
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp48, align 8
  %ob_refcnt49 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0
  %51 = load i64, i64* %ob_refcnt49, align 8
  %dec50 = add i64 %51, -1
  store i64 %dec50, i64* %ob_refcnt49, align 8
  %cmp51 = icmp ne i64 %dec50, 0
  br i1 %cmp51, label %if.then.53, label %if.else.54

if.then.53:                                       ; preds = %do.body.47
  br label %if.end.57

if.else.54:                                       ; preds = %do.body.47
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp48, align 8
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8
  %tp_dealloc56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc56, align 8
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp48, align 8
  call void %54(%struct._object* %55)
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.54, %if.then.53
  br label %do.end.58

do.end.58:                                        ; preds = %if.end.57
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.59:                                        ; preds = %do.end.44
  %56 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8
  %names60 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %56, i32 0, i32 4
  %57 = load %struct._object*, %struct._object** %names60, align 8
  %58 = load %struct._object*, %struct._object** %key, align 8
  %59 = load %struct._object*, %struct._object** %value, align 8
  %call61 = call i32 @PyDict_SetItem(%struct._object* %57, %struct._object* %58, %struct._object* %59)
  %cmp62 = icmp slt i32 %call61, 0
  br i1 %cmp62, label %if.then.64, label %if.end.89

if.then.64:                                       ; preds = %if.end.59
  br label %do.body.65

do.body.65:                                       ; preds = %if.then.64
  %60 = load %struct._object*, %struct._object** %key, align 8
  store %struct._object* %60, %struct._object** %_py_decref_tmp66, align 8
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0
  %62 = load i64, i64* %ob_refcnt67, align 8
  %dec68 = add i64 %62, -1
  store i64 %dec68, i64* %ob_refcnt67, align 8
  %cmp69 = icmp ne i64 %dec68, 0
  br i1 %cmp69, label %if.then.71, label %if.else.72

if.then.71:                                       ; preds = %do.body.65
  br label %if.end.75

if.else.72:                                       ; preds = %do.body.65
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8
  %ob_type73 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type73, align 8
  %tp_dealloc74 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc74, align 8
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8
  call void %65(%struct._object* %66)
  br label %if.end.75

if.end.75:                                        ; preds = %if.else.72, %if.then.71
  br label %do.end.76

do.end.76:                                        ; preds = %if.end.75
  br label %do.body.77

do.body.77:                                       ; preds = %do.end.76
  %67 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %67, %struct._object** %_py_decref_tmp78, align 8
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0
  %69 = load i64, i64* %ob_refcnt79, align 8
  %dec80 = add i64 %69, -1
  store i64 %dec80, i64* %ob_refcnt79, align 8
  %cmp81 = icmp ne i64 %dec80, 0
  br i1 %cmp81, label %if.then.83, label %if.else.84

if.then.83:                                       ; preds = %do.body.77
  br label %if.end.87

if.else.84:                                       ; preds = %do.body.77
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8
  %ob_type85 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type85, align 8
  %tp_dealloc86 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc86, align 8
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8
  call void %72(%struct._object* %73)
  br label %if.end.87

if.end.87:                                        ; preds = %if.else.84, %if.then.83
  br label %do.end.88

do.end.88:                                        ; preds = %if.end.87
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.89:                                        ; preds = %if.end.59
  br label %if.end.90

if.end.90:                                        ; preds = %if.end.89, %if.then.4
  br label %do.body.91

do.body.91:                                       ; preds = %if.end.90
  %74 = load %struct._object*, %struct._object** %key, align 8
  store %struct._object* %74, %struct._object** %_py_decref_tmp92, align 8
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8
  %ob_refcnt93 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 0
  %76 = load i64, i64* %ob_refcnt93, align 8
  %dec94 = add i64 %76, -1
  store i64 %dec94, i64* %ob_refcnt93, align 8
  %cmp95 = icmp ne i64 %dec94, 0
  br i1 %cmp95, label %if.then.97, label %if.else.98

if.then.97:                                       ; preds = %do.body.91
  br label %if.end.101

if.else.98:                                       ; preds = %do.body.91
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8
  %ob_type99 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 1
  %78 = load %struct._typeobject*, %struct._typeobject** %ob_type99, align 8
  %tp_dealloc100 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %78, i32 0, i32 4
  %79 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc100, align 8
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8
  call void %79(%struct._object* %80)
  br label %if.end.101

if.end.101:                                       ; preds = %if.else.98, %if.then.97
  br label %do.end.102

do.end.102:                                       ; preds = %if.end.101
  %81 = load %struct._object*, %struct._object** %value, align 8
  store %struct._object* %81, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.102, %do.end.88, %do.end.58, %do.end, %if.then
  %82 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %82
}

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #1

; Function Attrs: nounwind
declare i8* @strncat(i8*, i8*, i64) #4

declare i32 @PyErr_WarnEx(%struct._object*, i8*, i64) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"PIC Level", i32 2}
!1 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
