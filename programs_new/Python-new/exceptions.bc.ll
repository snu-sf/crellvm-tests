; ModuleID = 'programs_new/Python-new/exceptions.bc.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyBaseExceptionObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8 }
%union._gc_head = type { %struct.anon.0 }
%struct.anon.0 = type { %union._gc_head*, %union._gc_head*, i64 }
%struct.PyUnicodeErrorObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object*, %struct._object*, i64, i64, %struct._object* }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, i32* }
%struct.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.PyStopIterationObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object* }
%struct.PySystemExitObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object* }
%struct.PyImportErrorObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object*, %struct._object*, %struct._object* }
%struct.PyOSErrorObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i64 }
%struct.PySyntaxErrorObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object* }
%struct.PyCompactUnicodeObject = type { %struct.PyASCIIObject, i64, i8*, i64 }
%struct.PyUnicodeObject = type { %struct.PyCompactUnicodeObject, %union.anon }
%union.anon = type { i8* }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }

@PyExc_EnvironmentError = global %struct._object* null, align 8
@PyExc_IOError = global %struct._object* null, align 8
@_PyExc_BaseException = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* @PyObject_GenericSetAttr, %struct.PyBufferProcs* null, i64 1074021376, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.82, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @BaseException_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([2 x %struct.PyMemberDef], [2 x %struct.PyMemberDef]* @BaseException_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([6 x %struct.PyGetSetDef], [6 x %struct.PyGetSetDef]* @BaseException_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_BaseException = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BaseException, i32 0, i32 0, i32 0), align 8
@_PyExc_Exception = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.102, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_BaseException, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_Exception = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_Exception, i32 0, i32 0, i32 0), align 8
@_PyExc_TypeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.103, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_TypeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_TypeError, i32 0, i32 0, i32 0), align 8
@_PyExc_StopIteration = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i32 0, i32 0), i64 72, i64 0, void (%struct._object*)* bitcast (void (%struct.PyStopIterationObject*)* @StopIteration_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.104, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyStopIterationObject*, i32 (%struct._object*, i8*)*, i8*)* @StopIteration_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyStopIterationObject*)* @StopIteration_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([2 x %struct.PyMemberDef], [2 x %struct.PyMemberDef]* @StopIteration_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyStopIterationObject*, %struct._object*, %struct._object*)* @StopIteration_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_StopIteration = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_StopIteration, i32 0, i32 0, i32 0), align 8
@_PyExc_GeneratorExit = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.107, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_BaseException, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_GeneratorExit = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_GeneratorExit, i32 0, i32 0, i32 0), align 8
@_PyExc_SystemExit = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i64 72, i64 0, void (%struct._object*)* bitcast (void (%struct.PySystemExitObject*)* @SystemExit_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.108, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PySystemExitObject*, i32 (%struct._object*, i8*)*, i8*)* @SystemExit_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PySystemExitObject*)* @SystemExit_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([2 x %struct.PyMemberDef], [2 x %struct.PyMemberDef]* @SystemExit_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_BaseException, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PySystemExitObject*, %struct._object*, %struct._object*)* @SystemExit_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_SystemExit = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SystemExit, i32 0, i32 0, i32 0), align 8
@_PyExc_KeyboardInterrupt = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.111, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_BaseException, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_KeyboardInterrupt = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_KeyboardInterrupt, i32 0, i32 0, i32 0), align 8
@_PyExc_ImportError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i32 0, i32 0), i64 88, i64 0, void (%struct._object*)* bitcast (void (%struct.PyImportErrorObject*)* @ImportError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyImportErrorObject*)* @ImportError_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.112, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyImportErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @ImportError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyImportErrorObject*)* @ImportError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([1 x %struct.PyMethodDef], [1 x %struct.PyMethodDef]* @ImportError_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([4 x %struct.PyMemberDef], [4 x %struct.PyMemberDef]* @ImportError_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyImportErrorObject*, %struct._object*, %struct._object*)* @ImportError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ImportError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ImportError, i32 0, i32 0, i32 0), align 8
@_PyExc_OSError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyOSErrorObject*)* @OSError_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.119, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @OSError_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([5 x %struct.PyMemberDef], [5 x %struct.PyMemberDef]* @OSError_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @OSError_getset, i32 0, i32 0), %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @OSError_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_OSError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_OSError, i32 0, i32 0, i32 0), align 8
@_PyExc_BlockingIOError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.132, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_BlockingIOError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BlockingIOError, i32 0, i32 0, i32 0), align 8
@_PyExc_ConnectionError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.133, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ConnectionError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionError, i32 0, i32 0, i32 0), align 8
@_PyExc_ChildProcessError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.62, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.134, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ChildProcessError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ChildProcessError, i32 0, i32 0, i32 0), align 8
@_PyExc_BrokenPipeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.135, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ConnectionError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_BrokenPipeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BrokenPipeError, i32 0, i32 0, i32 0), align 8
@_PyExc_ConnectionAbortedError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.63, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.136, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ConnectionError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ConnectionAbortedError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionAbortedError, i32 0, i32 0, i32 0), align 8
@_PyExc_ConnectionRefusedError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.64, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.137, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ConnectionError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ConnectionRefusedError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionRefusedError, i32 0, i32 0, i32 0), align 8
@_PyExc_ConnectionResetError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.138, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ConnectionError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ConnectionResetError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionResetError, i32 0, i32 0, i32 0), align 8
@_PyExc_FileExistsError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.66, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.139, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_FileExistsError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FileExistsError, i32 0, i32 0, i32 0), align 8
@_PyExc_FileNotFoundError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.67, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.140, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_FileNotFoundError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FileNotFoundError, i32 0, i32 0, i32 0), align 8
@_PyExc_IsADirectoryError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.141, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_IsADirectoryError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_IsADirectoryError, i32 0, i32 0, i32 0), align 8
@_PyExc_NotADirectoryError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.142, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_NotADirectoryError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_NotADirectoryError, i32 0, i32 0, i32 0), align 8
@_PyExc_InterruptedError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.143, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_InterruptedError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_InterruptedError, i32 0, i32 0, i32 0), align 8
@_PyExc_PermissionError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.71, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.144, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_PermissionError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_PermissionError, i32 0, i32 0, i32 0), align 8
@_PyExc_ProcessLookupError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.145, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ProcessLookupError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ProcessLookupError, i32 0, i32 0, i32 0), align 8
@_PyExc_TimeoutError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyOSErrorObject*)* @OSError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.146, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*)* @OSError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_OSError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_TimeoutError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_TimeoutError, i32 0, i32 0, i32 0), align 8
@_PyExc_EOFError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.147, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_EOFError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_EOFError, i32 0, i32 0, i32 0), align 8
@_PyExc_RuntimeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.148, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_RuntimeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_RuntimeError, i32 0, i32 0, i32 0), align 8
@_PyExc_NotImplementedError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.149, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_RuntimeError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_NotImplementedError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_NotImplementedError, i32 0, i32 0, i32 0), align 8
@_PyExc_NameError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.150, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_NameError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_NameError, i32 0, i32 0, i32 0), align 8
@_PyExc_UnboundLocalError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.151, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_NameError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UnboundLocalError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnboundLocalError, i32 0, i32 0, i32 0), align 8
@_PyExc_AttributeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.152, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_AttributeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_AttributeError, i32 0, i32 0, i32 0), align 8
@_PyExc_SyntaxError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i32 0, i32 0), i64 112, i64 0, void (%struct._object*)* bitcast (void (%struct.PySyntaxErrorObject*)* @SyntaxError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PySyntaxErrorObject*)* @SyntaxError_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.153, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PySyntaxErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @SyntaxError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PySyntaxErrorObject*)* @SyntaxError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([7 x %struct.PyMemberDef], [7 x %struct.PyMemberDef]* @SyntaxError_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PySyntaxErrorObject*, %struct._object*, %struct._object*)* @SyntaxError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_SyntaxError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SyntaxError, i32 0, i32 0, i32 0), align 8
@_PyExc_IndentationError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i32 0, i32 0), i64 112, i64 0, void (%struct._object*)* bitcast (void (%struct.PySyntaxErrorObject*)* @SyntaxError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.167, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PySyntaxErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @SyntaxError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PySyntaxErrorObject*)* @SyntaxError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_SyntaxError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PySyntaxErrorObject*, %struct._object*, %struct._object*)* @SyntaxError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_IndentationError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_IndentationError, i32 0, i32 0, i32 0), align 8
@_PyExc_TabError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0), i64 112, i64 0, void (%struct._object*)* bitcast (void (%struct.PySyntaxErrorObject*)* @SyntaxError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.168, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PySyntaxErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @SyntaxError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PySyntaxErrorObject*)* @SyntaxError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_IndentationError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PySyntaxErrorObject*, %struct._object*, %struct._object*)* @SyntaxError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_TabError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_TabError, i32 0, i32 0, i32 0), align 8
@_PyExc_LookupError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.169, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_LookupError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_LookupError, i32 0, i32 0, i32 0), align 8
@_PyExc_IndexError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_LookupError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_IndexError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_IndexError, i32 0, i32 0, i32 0), align 8
@_PyExc_KeyError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyBaseExceptionObject*)* @KeyError_str to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.171, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_LookupError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_KeyError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_KeyError, i32 0, i32 0, i32 0), align 8
@_PyExc_ValueError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.172, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ValueError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ValueError, i32 0, i32 0, i32 0), align 8
@_PyExc_UnicodeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.173, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ValueError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UnicodeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeError, i32 0, i32 0, i32 0), align 8
@.str = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"reason\00", align 1
@_PyExc_UnicodeEncodeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyUnicodeErrorObject*)* @UnicodeError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* @UnicodeEncodeError_str, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.177, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyUnicodeErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @UnicodeError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyUnicodeErrorObject*)* @UnicodeError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([6 x %struct.PyMemberDef], [6 x %struct.PyMemberDef]* @UnicodeError_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_UnicodeError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* @UnicodeEncodeError_init, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UnicodeEncodeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeEncodeError, i32 0, i32 0, i32 0), align 8
@.str.3 = private unnamed_addr constant [7 x i8] c"su#nns\00", align 1
@_PyExc_UnicodeDecodeError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyUnicodeErrorObject*)* @UnicodeError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* @UnicodeDecodeError_str, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.190, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyUnicodeErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @UnicodeError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyUnicodeErrorObject*)* @UnicodeError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([6 x %struct.PyMemberDef], [6 x %struct.PyMemberDef]* @UnicodeError_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_UnicodeError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* @UnicodeDecodeError_init, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UnicodeDecodeError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeDecodeError, i32 0, i32 0, i32 0), align 8
@.str.4 = private unnamed_addr constant [7 x i8] c"sy#nns\00", align 1
@_PyExc_UnicodeTranslateError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.PyUnicodeErrorObject*)* @UnicodeError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* @UnicodeTranslateError_str, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.194, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyUnicodeErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @UnicodeError_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyUnicodeErrorObject*)* @UnicodeError_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([6 x %struct.PyMemberDef], [6 x %struct.PyMemberDef]* @UnicodeError_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_UnicodeError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyUnicodeErrorObject*, %struct._object*, %struct._object*)* @UnicodeTranslateError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UnicodeTranslateError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeTranslateError, i32 0, i32 0, i32 0), align 8
@.str.5 = private unnamed_addr constant [6 x i8] c"u#nns\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"Onns\00", align 1
@_PyExc_AssertionError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.200, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_AssertionError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_AssertionError, i32 0, i32 0, i32 0), align 8
@_PyExc_ArithmeticError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.201, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ArithmeticError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ArithmeticError, i32 0, i32 0, i32 0), align 8
@_PyExc_FloatingPointError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.202, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ArithmeticError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_FloatingPointError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FloatingPointError, i32 0, i32 0, i32 0), align 8
@_PyExc_OverflowError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.203, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ArithmeticError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_OverflowError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_OverflowError, i32 0, i32 0, i32 0), align 8
@_PyExc_ZeroDivisionError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.204, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_ArithmeticError, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ZeroDivisionError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ZeroDivisionError, i32 0, i32 0, i32 0), align 8
@_PyExc_SystemError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([176 x i8], [176 x i8]* @.str.205, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_SystemError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SystemError, i32 0, i32 0, i32 0), align 8
@_PyExc_ReferenceError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.206, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ReferenceError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ReferenceError, i32 0, i32 0, i32 0), align 8
@_PyExc_MemoryError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @MemoryError_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.207, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @MemoryError_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_MemoryError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_MemoryError, i32 0, i32 0, i32 0), align 8
@_PyExc_BufferError = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.209, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_BufferError = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BufferError, i32 0, i32 0, i32 0), align 8
@_PyExc_Warning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.210, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Exception, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_Warning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_Warning, i32 0, i32 0, i32 0), align 8
@_PyExc_UserWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.211, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UserWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UserWarning, i32 0, i32 0, i32 0), align 8
@_PyExc_DeprecationWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.212, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_DeprecationWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_DeprecationWarning, i32 0, i32 0, i32 0), align 8
@_PyExc_PendingDeprecationWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.213, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_PendingDeprecationWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_PendingDeprecationWarning, i32 0, i32 0, i32 0), align 8
@_PyExc_SyntaxWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.214, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_SyntaxWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SyntaxWarning, i32 0, i32 0, i32 0), align 8
@_PyExc_RuntimeWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.215, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_RuntimeWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_RuntimeWarning, i32 0, i32 0, i32 0), align 8
@_PyExc_FutureWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.216, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_FutureWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FutureWarning, i32 0, i32 0, i32 0), align 8
@_PyExc_ImportWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.217, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ImportWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ImportWarning, i32 0, i32 0, i32 0), align 8
@_PyExc_UnicodeWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.218, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_UnicodeWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeWarning, i32 0, i32 0, i32 0), align 8
@_PyExc_BytesWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @.str.219, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_BytesWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BytesWarning, i32 0, i32 0, i32 0), align 8
@_PyExc_ResourceWarning = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.220, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @_PyExc_Warning, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 16, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ResourceWarning = global %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ResourceWarning, i32 0, i32 0, i32 0), align 8
@PyExc_RecursionErrorInst = global %struct._object* null, align 8
@.str.7 = private unnamed_addr constant [32 x i8] c"exceptions bootstrapping error.\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"BaseException\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"Module dictionary insertion problem.\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"Exception\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"TypeError\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"StopIteration\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"GeneratorExit\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"SystemExit\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"KeyboardInterrupt\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"ImportError\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"OSError\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"EnvironmentError\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"IOError\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"EOFError\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"RuntimeError\00", align 1
@.str.22 = private unnamed_addr constant [20 x i8] c"NotImplementedError\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"NameError\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"UnboundLocalError\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"AttributeError\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"SyntaxError\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"IndentationError\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"TabError\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"LookupError\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"IndexError\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"KeyError\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"ValueError\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"UnicodeError\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"UnicodeEncodeError\00", align 1
@.str.35 = private unnamed_addr constant [19 x i8] c"UnicodeDecodeError\00", align 1
@.str.36 = private unnamed_addr constant [22 x i8] c"UnicodeTranslateError\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"AssertionError\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"ArithmeticError\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"FloatingPointError\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"OverflowError\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"ZeroDivisionError\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"SystemError\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"ReferenceError\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"BufferError\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c"MemoryError\00", align 1
@.str.46 = private unnamed_addr constant [8 x i8] c"Warning\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"UserWarning\00", align 1
@.str.48 = private unnamed_addr constant [19 x i8] c"DeprecationWarning\00", align 1
@.str.49 = private unnamed_addr constant [26 x i8] c"PendingDeprecationWarning\00", align 1
@.str.50 = private unnamed_addr constant [14 x i8] c"SyntaxWarning\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"RuntimeWarning\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"FutureWarning\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"ImportWarning\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"UnicodeWarning\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"BytesWarning\00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c"ResourceWarning\00", align 1
@errnomap = internal global %struct._object* null, align 8
@.str.57 = private unnamed_addr constant [54 x i8] c"Cannot allocate map from errnos to OSError subclasses\00", align 1
@.str.58 = private unnamed_addr constant [16 x i8] c"ConnectionError\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"BlockingIOError\00", align 1
@.str.60 = private unnamed_addr constant [26 x i8] c"errmap insertion problem.\00", align 1
@.str.61 = private unnamed_addr constant [16 x i8] c"BrokenPipeError\00", align 1
@.str.62 = private unnamed_addr constant [18 x i8] c"ChildProcessError\00", align 1
@.str.63 = private unnamed_addr constant [23 x i8] c"ConnectionAbortedError\00", align 1
@.str.64 = private unnamed_addr constant [23 x i8] c"ConnectionRefusedError\00", align 1
@.str.65 = private unnamed_addr constant [21 x i8] c"ConnectionResetError\00", align 1
@.str.66 = private unnamed_addr constant [16 x i8] c"FileExistsError\00", align 1
@.str.67 = private unnamed_addr constant [18 x i8] c"FileNotFoundError\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"IsADirectoryError\00", align 1
@.str.69 = private unnamed_addr constant [19 x i8] c"NotADirectoryError\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"InterruptedError\00", align 1
@.str.71 = private unnamed_addr constant [16 x i8] c"PermissionError\00", align 1
@.str.72 = private unnamed_addr constant [19 x i8] c"ProcessLookupError\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"TimeoutError\00", align 1
@.str.74 = private unnamed_addr constant [63 x i8] c"Cannot pre-allocate RuntimeError instance for recursion errors\00", align 1
@.str.75 = private unnamed_addr constant [33 x i8] c"maximum recursion depth exceeded\00", align 1
@.str.76 = private unnamed_addr constant [57 x i8] c"cannot allocate argument for RuntimeError pre-allocation\00", align 1
@.str.77 = private unnamed_addr constant [54 x i8] c"cannot allocate tuple for RuntimeError pre-allocation\00", align 1
@.str.78 = private unnamed_addr constant [42 x i8] c"init of pre-allocated RuntimeError failed\00", align 1
@PyUnicode_Type = external global %struct._typeobject, align 8
@.str.79 = private unnamed_addr constant [12 x i8] c"%U (%s: %S)\00", align 1
@.str.80 = private unnamed_addr constant [33 x i8] c"__traceback__ may not be deleted\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@PyTraceBack_Type = external global %struct._typeobject, align 8
@.str.81 = private unnamed_addr constant [42 x i8] c"__traceback__ must be a traceback or None\00", align 1
@.str.82 = private unnamed_addr constant [37 x i8] c"Common base class for all exceptions\00", align 1
@BaseException_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @BaseException_setstate, i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @BaseException_with_traceback, i32 8, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @with_traceback_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@BaseException_members = internal global [2 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.89, i32 0, i32 0), i32 14, i64 56, i32 0, i8* null }, %struct.PyMemberDef zeroinitializer], align 16
@BaseException_getset = internal global [6 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.90, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* @PyObject_GenericGetDict, i32 (%struct._object*, %struct._object*, i8*)* @PyObject_GenericSetDict, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_get_args to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*)* @BaseException_set_args to i32 (%struct._object*, %struct._object*, i8*)*), i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.92, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_get_tb to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*)* @BaseException_set_tb to i32 (%struct._object*, %struct._object*, i8*)*), i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct._object*)* @BaseException_get_context to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct._object*, %struct._object*)* @BaseException_set_context to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.94, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.95, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct._object*)* @BaseException_get_cause to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct._object*, %struct._object*)* @BaseException_set_cause to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.96, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.83 = private unnamed_addr constant [5 x i8] c"%s%R\00", align 1
@.str.84 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"__reduce__\00", align 1
@.str.86 = private unnamed_addr constant [13 x i8] c"__setstate__\00", align 1
@.str.87 = private unnamed_addr constant [15 x i8] c"with_traceback\00", align 1
@with_traceback_doc = internal global [82 x i8] c"Exception.with_traceback(tb) --\0A    set self.__traceback__ to tb and return self.\00", align 16
@.str.88 = private unnamed_addr constant [26 x i8] c"state is not a dictionary\00", align 1
@.str.89 = private unnamed_addr constant [21 x i8] c"__suppress_context__\00", align 1
@.str.90 = private unnamed_addr constant [9 x i8] c"__dict__\00", align 1
@.str.91 = private unnamed_addr constant [5 x i8] c"args\00", align 1
@.str.92 = private unnamed_addr constant [14 x i8] c"__traceback__\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"__context__\00", align 1
@.str.94 = private unnamed_addr constant [18 x i8] c"exception context\00", align 1
@.str.95 = private unnamed_addr constant [10 x i8] c"__cause__\00", align 1
@.str.96 = private unnamed_addr constant [16 x i8] c"exception cause\00", align 1
@.str.97 = private unnamed_addr constant [24 x i8] c"args may not be deleted\00", align 1
@.str.98 = private unnamed_addr constant [31 x i8] c"__context__ may not be deleted\00", align 1
@.str.99 = private unnamed_addr constant [60 x i8] c"exception context must be None or derive from BaseException\00", align 1
@.str.100 = private unnamed_addr constant [29 x i8] c"__cause__ may not be deleted\00", align 1
@.str.101 = private unnamed_addr constant [58 x i8] c"exception cause must be None or derive from BaseException\00", align 1
@.str.102 = private unnamed_addr constant [47 x i8] c"Common base class for all non-exit exceptions.\00", align 1
@.str.103 = private unnamed_addr constant [29 x i8] c"Inappropriate argument type.\00", align 1
@.str.104 = private unnamed_addr constant [41 x i8] c"Signal the end from iterator.__next__().\00", align 1
@StopIteration_members = internal global [2 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i32 0, i32 0), i32 6, i64 64, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.106, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@.str.105 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.106 = private unnamed_addr constant [23 x i8] c"generator return value\00", align 1
@.str.107 = private unnamed_addr constant [31 x i8] c"Request that a generator exit.\00", align 1
@.str.108 = private unnamed_addr constant [38 x i8] c"Request to exit from the interpreter.\00", align 1
@SystemExit_members = internal global [2 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i32 0, i32 0), i32 6, i64 64, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.110, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@.str.109 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.110 = private unnamed_addr constant [15 x i8] c"exception code\00", align 1
@.str.111 = private unnamed_addr constant [29 x i8] c"Program interrupted by user.\00", align 1
@.str.112 = private unnamed_addr constant [56 x i8] c"Import can't find module, or can't find name in module.\00", align 1
@ImportError_methods = internal global [1 x %struct.PyMethodDef] zeroinitializer, align 16
@ImportError_members = internal global [4 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i32 0, i32 0), i32 6, i64 64, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.114, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i32 0, i32 0), i32 6, i64 72, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.116, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i32 0, i32 0), i32 6, i64 80, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.118, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@.str.113 = private unnamed_addr constant [4 x i8] c"msg\00", align 1
@.str.114 = private unnamed_addr constant [18 x i8] c"exception message\00", align 1
@.str.115 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.116 = private unnamed_addr constant [12 x i8] c"module name\00", align 1
@.str.117 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str.118 = private unnamed_addr constant [12 x i8] c"module path\00", align 1
@.str.119 = private unnamed_addr constant [35 x i8] c"Base class for I/O related errors.\00", align 1
@OSError_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyOSErrorObject*)* @OSError_reduce to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@OSError_members = internal global [5 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i32 0, i32 0), i32 6, i64 64, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.124, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.125, i32 0, i32 0), i32 6, i64 72, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.126, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), i32 6, i64 80, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.128, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), i32 6, i64 88, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.130, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@OSError_getset = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.131, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyOSErrorObject*, i8*)* @OSError_written_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, i8*)* @OSError_written_set to i32 (%struct._object*, %struct._object*, i8*)*), i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.120 = private unnamed_addr constant [24 x i8] c"[Errno %S] %S: %R -> %R\00", align 1
@.str.121 = private unnamed_addr constant [18 x i8] c"[Errno %S] %S: %R\00", align 1
@.str.122 = private unnamed_addr constant [14 x i8] c"[Errno %S] %S\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"errno\00", align 1
@.str.124 = private unnamed_addr constant [21 x i8] c"POSIX exception code\00", align 1
@.str.125 = private unnamed_addr constant [9 x i8] c"strerror\00", align 1
@.str.126 = private unnamed_addr constant [19 x i8] c"exception strerror\00", align 1
@.str.127 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@.str.128 = private unnamed_addr constant [19 x i8] c"exception filename\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"filename2\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"second exception filename\00", align 1
@.str.131 = private unnamed_addr constant [19 x i8] c"characters_written\00", align 1
@.str.132 = private unnamed_addr constant [27 x i8] c"I/O operation would block.\00", align 1
@.str.133 = private unnamed_addr constant [18 x i8] c"Connection error.\00", align 1
@.str.134 = private unnamed_addr constant [21 x i8] c"Child process error.\00", align 1
@.str.135 = private unnamed_addr constant [13 x i8] c"Broken pipe.\00", align 1
@.str.136 = private unnamed_addr constant [20 x i8] c"Connection aborted.\00", align 1
@.str.137 = private unnamed_addr constant [20 x i8] c"Connection refused.\00", align 1
@.str.138 = private unnamed_addr constant [18 x i8] c"Connection reset.\00", align 1
@.str.139 = private unnamed_addr constant [21 x i8] c"File already exists.\00", align 1
@.str.140 = private unnamed_addr constant [16 x i8] c"File not found.\00", align 1
@.str.141 = private unnamed_addr constant [39 x i8] c"Operation doesn't work on directories.\00", align 1
@.str.142 = private unnamed_addr constant [37 x i8] c"Operation only works on directories.\00", align 1
@.str.143 = private unnamed_addr constant [23 x i8] c"Interrupted by signal.\00", align 1
@.str.144 = private unnamed_addr constant [24 x i8] c"Not enough permissions.\00", align 1
@.str.145 = private unnamed_addr constant [19 x i8] c"Process not found.\00", align 1
@.str.146 = private unnamed_addr constant [17 x i8] c"Timeout expired.\00", align 1
@.str.147 = private unnamed_addr constant [25 x i8] c"Read beyond end of file.\00", align 1
@.str.148 = private unnamed_addr constant [28 x i8] c"Unspecified run-time error.\00", align 1
@.str.149 = private unnamed_addr constant [48 x i8] c"Method or function hasn't been implemented yet.\00", align 1
@.str.150 = private unnamed_addr constant [25 x i8] c"Name not found globally.\00", align 1
@.str.151 = private unnamed_addr constant [48 x i8] c"Local name referenced but not bound to a value.\00", align 1
@.str.152 = private unnamed_addr constant [21 x i8] c"Attribute not found.\00", align 1
@.str.153 = private unnamed_addr constant [16 x i8] c"Invalid syntax.\00", align 1
@SyntaxError_members = internal global [7 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i32 0, i32 0), i32 6, i64 64, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.157, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), i32 6, i64 72, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.128, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.158, i32 0, i32 0), i32 6, i64 80, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.159, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.160, i32 0, i32 0), i32 6, i64 88, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.161, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.162, i32 0, i32 0), i32 6, i64 96, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.163, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.164, i32 0, i32 0), i32 6, i64 104, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.165, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@PyLong_Type = external global %struct._typeobject, align 8
@.str.154 = private unnamed_addr constant [18 x i8] c"%S (%U, line %ld)\00", align 1
@.str.155 = private unnamed_addr constant [8 x i8] c"%S (%U)\00", align 1
@.str.156 = private unnamed_addr constant [14 x i8] c"%S (line %ld)\00", align 1
@.str.157 = private unnamed_addr constant [14 x i8] c"exception msg\00", align 1
@.str.158 = private unnamed_addr constant [7 x i8] c"lineno\00", align 1
@.str.159 = private unnamed_addr constant [17 x i8] c"exception lineno\00", align 1
@.str.160 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.161 = private unnamed_addr constant [17 x i8] c"exception offset\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.163 = private unnamed_addr constant [15 x i8] c"exception text\00", align 1
@.str.164 = private unnamed_addr constant [20 x i8] c"print_file_and_line\00", align 1
@.str.165 = private unnamed_addr constant [30 x i8] c"exception print_file_and_line\00", align 1
@.str.166 = private unnamed_addr constant [25 x i8] c"tuple index out of range\00", align 1
@.str.167 = private unnamed_addr constant [22 x i8] c"Improper indentation.\00", align 1
@.str.168 = private unnamed_addr constant [37 x i8] c"Improper mixture of spaces and tabs.\00", align 1
@.str.169 = private unnamed_addr constant [30 x i8] c"Base class for lookup errors.\00", align 1
@.str.170 = private unnamed_addr constant [29 x i8] c"Sequence index out of range.\00", align 1
@.str.171 = private unnamed_addr constant [23 x i8] c"Mapping key not found.\00", align 1
@.str.172 = private unnamed_addr constant [48 x i8] c"Inappropriate argument value (of correct type).\00", align 1
@.str.173 = private unnamed_addr constant [23 x i8] c"Unicode related error.\00", align 1
@.str.174 = private unnamed_addr constant [25 x i8] c"%.200s attribute not set\00", align 1
@.str.175 = private unnamed_addr constant [33 x i8] c"%.200s attribute must be unicode\00", align 1
@.str.176 = private unnamed_addr constant [31 x i8] c"%.200s attribute must be bytes\00", align 1
@.str.177 = private unnamed_addr constant [24 x i8] c"Unicode encoding error.\00", align 1
@UnicodeError_members = internal global [6 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 6, i64 64, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.182, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32 6, i64 72, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.183, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.184, i32 0, i32 0), i32 19, i64 80, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.185, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.186, i32 0, i32 0), i32 19, i64 88, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.187, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i32 6, i64 96, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.188, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@.str.178 = private unnamed_addr constant [63 x i8] c"'%U' codec can't encode character '\5Cx%02x' in position %zd: %U\00", align 1
@.str.179 = private unnamed_addr constant [63 x i8] c"'%U' codec can't encode character '\5Cu%04x' in position %zd: %U\00", align 1
@.str.180 = private unnamed_addr constant [63 x i8] c"'%U' codec can't encode character '\5CU%08x' in position %zd: %U\00", align 1
@.str.181 = private unnamed_addr constant [59 x i8] c"'%U' codec can't encode characters in position %zd-%zd: %U\00", align 1
@.str.182 = private unnamed_addr constant [19 x i8] c"exception encoding\00", align 1
@.str.183 = private unnamed_addr constant [17 x i8] c"exception object\00", align 1
@.str.184 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.185 = private unnamed_addr constant [16 x i8] c"exception start\00", align 1
@.str.186 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.187 = private unnamed_addr constant [14 x i8] c"exception end\00", align 1
@.str.188 = private unnamed_addr constant [17 x i8] c"exception reason\00", align 1
@.str.189 = private unnamed_addr constant [9 x i8] c"O!O!nnO!\00", align 1
@.str.190 = private unnamed_addr constant [24 x i8] c"Unicode decoding error.\00", align 1
@.str.191 = private unnamed_addr constant [56 x i8] c"'%U' codec can't decode byte 0x%02x in position %zd: %U\00", align 1
@.str.192 = private unnamed_addr constant [54 x i8] c"'%U' codec can't decode bytes in position %zd-%zd: %U\00", align 1
@.str.193 = private unnamed_addr constant [8 x i8] c"O!OnnO!\00", align 1
@.str.194 = private unnamed_addr constant [27 x i8] c"Unicode translation error.\00", align 1
@.str.195 = private unnamed_addr constant [55 x i8] c"can't translate character '\5Cx%02x' in position %zd: %U\00", align 1
@.str.196 = private unnamed_addr constant [55 x i8] c"can't translate character '\5Cu%04x' in position %zd: %U\00", align 1
@.str.197 = private unnamed_addr constant [55 x i8] c"can't translate character '\5CU%08x' in position %zd: %U\00", align 1
@.str.198 = private unnamed_addr constant [51 x i8] c"can't translate characters in position %zd-%zd: %U\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"O!nnO!\00", align 1
@.str.200 = private unnamed_addr constant [18 x i8] c"Assertion failed.\00", align 1
@.str.201 = private unnamed_addr constant [34 x i8] c"Base class for arithmetic errors.\00", align 1
@.str.202 = private unnamed_addr constant [33 x i8] c"Floating point operation failed.\00", align 1
@.str.203 = private unnamed_addr constant [36 x i8] c"Result too large to be represented.\00", align 1
@.str.204 = private unnamed_addr constant [60 x i8] c"Second argument to a division or modulo operation was zero.\00", align 1
@.str.205 = private unnamed_addr constant [176 x i8] c"Internal error in the Python interpreter.\0A\0APlease report this to the Python maintainer, along with the traceback,\0Athe Python version, and the hardware/OS platform and version.\00", align 1
@.str.206 = private unnamed_addr constant [46 x i8] c"Weak ref proxy used after referent went away.\00", align 1
@.str.207 = private unnamed_addr constant [15 x i8] c"Out of memory.\00", align 1
@memerrors_numfree = internal global i32 0, align 4
@memerrors_freelist = internal global %struct.PyBaseExceptionObject* null, align 8
@.str.208 = private unnamed_addr constant [26 x i8] c"GC object already tracked\00", align 1
@_PyGC_generation0 = external global %union._gc_head*, align 8
@.str.209 = private unnamed_addr constant [14 x i8] c"Buffer error.\00", align 1
@.str.210 = private unnamed_addr constant [35 x i8] c"Base class for warning categories.\00", align 1
@.str.211 = private unnamed_addr constant [48 x i8] c"Base class for warnings generated by user code.\00", align 1
@.str.212 = private unnamed_addr constant [51 x i8] c"Base class for warnings about deprecated features.\00", align 1
@.str.213 = private unnamed_addr constant [79 x i8] c"Base class for warnings about features which will be deprecated\0Ain the future.\00", align 1
@.str.214 = private unnamed_addr constant [46 x i8] c"Base class for warnings about dubious syntax.\00", align 1
@.str.215 = private unnamed_addr constant [56 x i8] c"Base class for warnings about dubious runtime behavior.\00", align 1
@.str.216 = private unnamed_addr constant [86 x i8] c"Base class for warnings about constructs that will change semantically\0Ain the future.\00", align 1
@.str.217 = private unnamed_addr constant [66 x i8] c"Base class for warnings about probable mistakes in module imports\00", align 1
@.str.218 = private unnamed_addr constant [95 x i8] c"Base class for warnings about Unicode related problems, mostly\0Arelated to conversion problems.\00", align 1
@.str.219 = private unnamed_addr constant [124 x i8] c"Base class for warnings about bytes and buffer related problems, mostly\0Arelated to conversion from str or comparing to str.\00", align 1
@.str.220 = private unnamed_addr constant [46 x i8] c"Base class for warnings about resource usage.\00", align 1
@.str.221 = private unnamed_addr constant [41 x i8] c"Could not preallocate MemoryError object\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @PyException_GetTraceback(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %base_self = alloca %struct.PyBaseExceptionObject*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !492, metadata !1979), !dbg !1980
  %0 = bitcast %struct.PyBaseExceptionObject** %base_self to i8*, !dbg !1981
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !1981
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %base_self, metadata !493, metadata !1979), !dbg !1982
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !1983, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyBaseExceptionObject*, !dbg !1984
  store %struct.PyBaseExceptionObject* %2, %struct.PyBaseExceptionObject** %base_self, align 8, !dbg !1982, !tbaa !1975
  br label %do.body, !dbg !1985

do.body:                                          ; preds = %entry
  %3 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !1986
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !1986
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !494, metadata !1979), !dbg !1988
  %4 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %base_self, align 8, !dbg !1989, !tbaa !1975
  %traceback = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %4, i32 0, i32 3, !dbg !1990
  %5 = load %struct._object*, %struct._object** %traceback, align 8, !dbg !1990, !tbaa !1991
  store %struct._object* %5, %struct._object** %_py_xincref_tmp, align 8, !dbg !1988, !tbaa !1975
  %6 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !1995, !tbaa !1975
  %cmp = icmp ne %struct._object* %6, null, !dbg !1997
  br i1 %cmp, label %if.then, label %if.end, !dbg !1998

if.then:                                          ; preds = %do.body
  %7 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !1999, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !2001
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !2002, !tbaa !2003
  %inc = add i64 %8, 1, !dbg !2002
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2002, !tbaa !2003
  br label %if.end, !dbg !2004

if.end:                                           ; preds = %if.then, %do.body
  %9 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !2005
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !2005
  br label %do.cond, !dbg !2008

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2009

do.end:                                           ; preds = %do.cond
  %10 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %base_self, align 8, !dbg !2011, !tbaa !1975
  %traceback1 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %10, i32 0, i32 3, !dbg !2012
  %11 = load %struct._object*, %struct._object** %traceback1, align 8, !dbg !2012, !tbaa !1991
  %12 = bitcast %struct.PyBaseExceptionObject** %base_self to i8*, !dbg !2013
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !2013
  ret %struct._object* %11, !dbg !2014
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define i32 @PyException_SetTraceback(%struct._object* %self, %struct._object* %tb) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %tb.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !498, metadata !1979), !dbg !2015
  store %struct._object* %tb, %struct._object** %tb.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %tb.addr, metadata !499, metadata !1979), !dbg !2016
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2017, !tbaa !1975
  %1 = bitcast %struct._object* %0 to %struct.PyBaseExceptionObject*, !dbg !2018
  %2 = load %struct._object*, %struct._object** %tb.addr, align 8, !dbg !2019, !tbaa !1975
  %call = call i32 @BaseException_set_tb(%struct.PyBaseExceptionObject* %1, %struct._object* %2), !dbg !2020
  ret i32 %call, !dbg !2021
}

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_set_tb(%struct.PyBaseExceptionObject* %self, %struct._object* %tb) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  %tb.addr = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !848, metadata !1979), !dbg !2022
  store %struct._object* %tb, %struct._object** %tb.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %tb.addr, metadata !849, metadata !1979), !dbg !2023
  %0 = load %struct._object*, %struct._object** %tb.addr, align 8, !dbg !2024, !tbaa !1975
  %cmp = icmp eq %struct._object* %0, null, !dbg !2026
  br i1 %cmp, label %if.then, label %if.else, !dbg !2027

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2028, !tbaa !1975
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.80, i32 0, i32 0)), !dbg !2030
  store i32 -1, i32* %retval, !dbg !2031
  br label %return, !dbg !2031

if.else:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** %tb.addr, align 8, !dbg !2032, !tbaa !1975
  %cmp1 = icmp eq %struct._object* %2, @_Py_NoneStruct, !dbg !2034
  br i1 %cmp1, label %if.end, label %lor.lhs.false, !dbg !2035

lor.lhs.false:                                    ; preds = %if.else
  %3 = load %struct._object*, %struct._object** %tb.addr, align 8, !dbg !2036, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !2038
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2038, !tbaa !2039
  %cmp2 = icmp eq %struct._typeobject* %4, @PyTraceBack_Type, !dbg !2040
  br i1 %cmp2, label %if.end, label %if.then.3, !dbg !2041

if.then.3:                                        ; preds = %lor.lhs.false
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2042, !tbaa !1975
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.81, i32 0, i32 0)), !dbg !2044
  store i32 -1, i32* %retval, !dbg !2045
  br label %return, !dbg !2045

if.end:                                           ; preds = %lor.lhs.false, %if.else
  br label %if.end.4

if.end.4:                                         ; preds = %if.end
  br label %do.body, !dbg !2046

do.body:                                          ; preds = %if.end.4
  %6 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !2047
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !2047
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !850, metadata !1979), !dbg !2049
  %7 = load %struct._object*, %struct._object** %tb.addr, align 8, !dbg !2050, !tbaa !1975
  store %struct._object* %7, %struct._object** %_py_xincref_tmp, align 8, !dbg !2049, !tbaa !1975
  %8 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !2051, !tbaa !1975
  %cmp5 = icmp ne %struct._object* %8, null, !dbg !2053
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !2054

if.then.6:                                        ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !2055, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !2057
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !2058, !tbaa !2003
  %inc = add i64 %10, 1, !dbg !2058
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2058, !tbaa !2003
  br label %if.end.7, !dbg !2059

if.end.7:                                         ; preds = %if.then.6, %do.body
  %11 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !2060
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !2060
  br label %do.end, !dbg !2063

do.end:                                           ; preds = %if.end.7
  br label %do.body.8, !dbg !2064

do.body.8:                                        ; preds = %do.end
  %12 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2065
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !2065
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !852, metadata !1979), !dbg !2067
  %13 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !2068, !tbaa !1975
  %traceback = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %13, i32 0, i32 3, !dbg !2069
  %14 = load %struct._object*, %struct._object** %traceback, align 8, !dbg !2069, !tbaa !1991
  store %struct._object* %14, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2067, !tbaa !1975
  %15 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2070, !tbaa !1975
  %cmp9 = icmp ne %struct._object* %15, null, !dbg !2071
  br i1 %cmp9, label %if.then.10, label %if.end.19, !dbg !2072

if.then.10:                                       ; preds = %do.body.8
  br label %do.body.11, !dbg !2073

do.body.11:                                       ; preds = %if.then.10
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2075
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !2075
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !854, metadata !1979), !dbg !2077
  %17 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2078, !tbaa !1975
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !2077, !tbaa !1975
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2079, !tbaa !1975
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !2081
  %19 = load i64, i64* %ob_refcnt12, align 8, !dbg !2082, !tbaa !2003
  %dec = add i64 %19, -1, !dbg !2082
  store i64 %dec, i64* %ob_refcnt12, align 8, !dbg !2082, !tbaa !2003
  %cmp13 = icmp ne i64 %dec, 0, !dbg !2083
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !2084

if.then.14:                                       ; preds = %do.body.11
  br label %if.end.17, !dbg !2085

if.else.15:                                       ; preds = %do.body.11
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2087, !tbaa !1975
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !2089
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !2089, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !2090
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2090, !tbaa !2091
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2095, !tbaa !1975
  call void %22(%struct._object* %23), !dbg !2096
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.15, %if.then.14
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2097
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !2097
  br label %do.cond, !dbg !2099

do.cond:                                          ; preds = %if.end.17
  br label %do.end.18, !dbg !2100

do.end.18:                                        ; preds = %do.cond
  br label %if.end.19, !dbg !2102

if.end.19:                                        ; preds = %do.end.18, %do.body.8
  %25 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2104
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !2104
  br label %do.end.21, !dbg !2106

do.end.21:                                        ; preds = %if.end.19
  %26 = load %struct._object*, %struct._object** %tb.addr, align 8, !dbg !2107, !tbaa !1975
  %27 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !2108, !tbaa !1975
  %traceback22 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %27, i32 0, i32 3, !dbg !2109
  store %struct._object* %26, %struct._object** %traceback22, align 8, !dbg !2110, !tbaa !1991
  store i32 0, i32* %retval, !dbg !2111
  br label %return, !dbg !2111

return:                                           ; preds = %do.end.21, %if.then.3, %if.then
  %28 = load i32, i32* %retval, !dbg !2112
  ret i32 %28, !dbg !2112
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyException_GetCause(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %cause = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !502, metadata !1979), !dbg !2113
  %0 = bitcast %struct._object** %cause to i8*, !dbg !2114
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2114
  call void @llvm.dbg.declare(metadata %struct._object** %cause, metadata !503, metadata !1979), !dbg !2115
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2116, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyBaseExceptionObject*, !dbg !2117
  %cause1 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %2, i32 0, i32 5, !dbg !2118
  %3 = load %struct._object*, %struct._object** %cause1, align 8, !dbg !2118, !tbaa !2119
  store %struct._object* %3, %struct._object** %cause, align 8, !dbg !2115, !tbaa !1975
  br label %do.body, !dbg !2120

do.body:                                          ; preds = %entry
  %4 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !2121
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !2121
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !504, metadata !1979), !dbg !2123
  %5 = load %struct._object*, %struct._object** %cause, align 8, !dbg !2124, !tbaa !1975
  store %struct._object* %5, %struct._object** %_py_xincref_tmp, align 8, !dbg !2123, !tbaa !1975
  %6 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !2125, !tbaa !1975
  %cmp = icmp ne %struct._object* %6, null, !dbg !2127
  br i1 %cmp, label %if.then, label %if.end, !dbg !2128

if.then:                                          ; preds = %do.body
  %7 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !2129, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !2131
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !2132, !tbaa !2003
  %inc = add i64 %8, 1, !dbg !2132
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2132, !tbaa !2003
  br label %if.end, !dbg !2133

if.end:                                           ; preds = %if.then, %do.body
  %9 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !2134
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !2134
  br label %do.cond, !dbg !2137

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2138

do.end:                                           ; preds = %do.cond
  %10 = load %struct._object*, %struct._object** %cause, align 8, !dbg !2140, !tbaa !1975
  %11 = bitcast %struct._object** %cause to i8*, !dbg !2141
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !2141
  ret %struct._object* %10, !dbg !2142
}

; Function Attrs: nounwind uwtable
define void @PyException_SetCause(%struct._object* %self, %struct._object* %cause) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %cause.addr = alloca %struct._object*, align 8
  %old_cause = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !510, metadata !1979), !dbg !2143
  store %struct._object* %cause, %struct._object** %cause.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %cause.addr, metadata !511, metadata !1979), !dbg !2144
  %0 = bitcast %struct._object** %old_cause to i8*, !dbg !2145
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2145
  call void @llvm.dbg.declare(metadata %struct._object** %old_cause, metadata !512, metadata !1979), !dbg !2146
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2147, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyBaseExceptionObject*, !dbg !2148
  %cause1 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %2, i32 0, i32 5, !dbg !2149
  %3 = load %struct._object*, %struct._object** %cause1, align 8, !dbg !2149, !tbaa !2119
  store %struct._object* %3, %struct._object** %old_cause, align 8, !dbg !2146, !tbaa !1975
  %4 = load %struct._object*, %struct._object** %cause.addr, align 8, !dbg !2150, !tbaa !1975
  %5 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2151, !tbaa !1975
  %6 = bitcast %struct._object* %5 to %struct.PyBaseExceptionObject*, !dbg !2152
  %cause2 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %6, i32 0, i32 5, !dbg !2153
  store %struct._object* %4, %struct._object** %cause2, align 8, !dbg !2154, !tbaa !2119
  %7 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2155, !tbaa !1975
  %8 = bitcast %struct._object* %7 to %struct.PyBaseExceptionObject*, !dbg !2156
  %suppress_context = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %8, i32 0, i32 6, !dbg !2157
  store i8 1, i8* %suppress_context, align 1, !dbg !2158, !tbaa !2159
  br label %do.body, !dbg !2160

do.body:                                          ; preds = %entry
  %9 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2161
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !2161
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !513, metadata !1979), !dbg !2163
  %10 = load %struct._object*, %struct._object** %old_cause, align 8, !dbg !2164, !tbaa !1975
  store %struct._object* %10, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2163, !tbaa !1975
  %11 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2165, !tbaa !1975
  %cmp = icmp ne %struct._object* %11, null, !dbg !2166
  br i1 %cmp, label %if.then, label %if.end.6, !dbg !2167

if.then:                                          ; preds = %do.body
  br label %do.body.3, !dbg !2168

do.body.3:                                        ; preds = %if.then
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2170
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !2170
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !515, metadata !1979), !dbg !2172
  %13 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2173, !tbaa !1975
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !2172, !tbaa !1975
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2174, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !2176
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !2177, !tbaa !2003
  %dec = add i64 %15, -1, !dbg !2177
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2177, !tbaa !2003
  %cmp4 = icmp ne i64 %dec, 0, !dbg !2178
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !2179

if.then.5:                                        ; preds = %do.body.3
  br label %if.end, !dbg !2180

if.else:                                          ; preds = %do.body.3
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2182, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !2184
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2184, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !2185
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2185, !tbaa !2091
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2186, !tbaa !1975
  call void %18(%struct._object* %19), !dbg !2187
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.5
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2188
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !2188
  br label %do.cond, !dbg !2190

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2191

do.end:                                           ; preds = %do.cond
  br label %if.end.6, !dbg !2193

if.end.6:                                         ; preds = %do.end, %do.body
  %21 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2195
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !2195
  br label %do.cond.7, !dbg !2198

do.cond.7:                                        ; preds = %if.end.6
  br label %do.end.8, !dbg !2199

do.end.8:                                         ; preds = %do.cond.7
  %22 = bitcast %struct._object** %old_cause to i8*, !dbg !2201
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !2201
  ret void, !dbg !2201
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyException_GetContext(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %context = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !520, metadata !1979), !dbg !2202
  %0 = bitcast %struct._object** %context to i8*, !dbg !2203
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2203
  call void @llvm.dbg.declare(metadata %struct._object** %context, metadata !521, metadata !1979), !dbg !2204
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2205, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyBaseExceptionObject*, !dbg !2206
  %context1 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %2, i32 0, i32 4, !dbg !2207
  %3 = load %struct._object*, %struct._object** %context1, align 8, !dbg !2207, !tbaa !2208
  store %struct._object* %3, %struct._object** %context, align 8, !dbg !2204, !tbaa !1975
  br label %do.body, !dbg !2209

do.body:                                          ; preds = %entry
  %4 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !2210
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !2210
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !522, metadata !1979), !dbg !2212
  %5 = load %struct._object*, %struct._object** %context, align 8, !dbg !2213, !tbaa !1975
  store %struct._object* %5, %struct._object** %_py_xincref_tmp, align 8, !dbg !2212, !tbaa !1975
  %6 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !2214, !tbaa !1975
  %cmp = icmp ne %struct._object* %6, null, !dbg !2216
  br i1 %cmp, label %if.then, label %if.end, !dbg !2217

if.then:                                          ; preds = %do.body
  %7 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !2218, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !2220
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !2221, !tbaa !2003
  %inc = add i64 %8, 1, !dbg !2221
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2221, !tbaa !2003
  br label %if.end, !dbg !2222

if.end:                                           ; preds = %if.then, %do.body
  %9 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !2223
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !2223
  br label %do.cond, !dbg !2226

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2227

do.end:                                           ; preds = %do.cond
  %10 = load %struct._object*, %struct._object** %context, align 8, !dbg !2229, !tbaa !1975
  %11 = bitcast %struct._object** %context to i8*, !dbg !2230
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !2230
  ret %struct._object* %10, !dbg !2231
}

; Function Attrs: nounwind uwtable
define void @PyException_SetContext(%struct._object* %self, %struct._object* %context) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %context.addr = alloca %struct._object*, align 8
  %old_context = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !526, metadata !1979), !dbg !2232
  store %struct._object* %context, %struct._object** %context.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %context.addr, metadata !527, metadata !1979), !dbg !2233
  %0 = bitcast %struct._object** %old_context to i8*, !dbg !2234
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2234
  call void @llvm.dbg.declare(metadata %struct._object** %old_context, metadata !528, metadata !1979), !dbg !2235
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2236, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyBaseExceptionObject*, !dbg !2237
  %context1 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %2, i32 0, i32 4, !dbg !2238
  %3 = load %struct._object*, %struct._object** %context1, align 8, !dbg !2238, !tbaa !2208
  store %struct._object* %3, %struct._object** %old_context, align 8, !dbg !2235, !tbaa !1975
  %4 = load %struct._object*, %struct._object** %context.addr, align 8, !dbg !2239, !tbaa !1975
  %5 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2240, !tbaa !1975
  %6 = bitcast %struct._object* %5 to %struct.PyBaseExceptionObject*, !dbg !2241
  %context2 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %6, i32 0, i32 4, !dbg !2242
  store %struct._object* %4, %struct._object** %context2, align 8, !dbg !2243, !tbaa !2208
  br label %do.body, !dbg !2244

do.body:                                          ; preds = %entry
  %7 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2245
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !2245
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !529, metadata !1979), !dbg !2247
  %8 = load %struct._object*, %struct._object** %old_context, align 8, !dbg !2248, !tbaa !1975
  store %struct._object* %8, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2247, !tbaa !1975
  %9 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2249, !tbaa !1975
  %cmp = icmp ne %struct._object* %9, null, !dbg !2250
  br i1 %cmp, label %if.then, label %if.end.6, !dbg !2251

if.then:                                          ; preds = %do.body
  br label %do.body.3, !dbg !2252

do.body.3:                                        ; preds = %if.then
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2254
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !2254
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !531, metadata !1979), !dbg !2256
  %11 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2257, !tbaa !1975
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !2256, !tbaa !1975
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2258, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !2260
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !2261, !tbaa !2003
  %dec = add i64 %13, -1, !dbg !2261
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2261, !tbaa !2003
  %cmp4 = icmp ne i64 %dec, 0, !dbg !2262
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !2263

if.then.5:                                        ; preds = %do.body.3
  br label %if.end, !dbg !2264

if.else:                                          ; preds = %do.body.3
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2266, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !2268
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2268, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !2269
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2269, !tbaa !2091
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2270, !tbaa !1975
  call void %16(%struct._object* %17), !dbg !2271
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.5
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2272
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !2272
  br label %do.cond, !dbg !2274

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2275

do.end:                                           ; preds = %do.cond
  br label %if.end.6, !dbg !2277

if.end.6:                                         ; preds = %do.end, %do.body
  %19 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2279
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !2279
  br label %do.cond.7, !dbg !2282

do.cond.7:                                        ; preds = %if.end.6
  br label %do.end.8, !dbg !2283

do.end.8:                                         ; preds = %do.cond.7
  %20 = bitcast %struct._object** %old_context to i8*, !dbg !2285
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !2285
  ret void, !dbg !2285
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeEncodeError_GetEncoding(%struct._object* %exc) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !536, metadata !1979), !dbg !2286
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2287, !tbaa !1975
  %1 = bitcast %struct._object* %0 to %struct.PyUnicodeErrorObject*, !dbg !2288
  %encoding = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %1, i32 0, i32 7, !dbg !2289
  %2 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !2289, !tbaa !2290
  %call = call %struct._object* @get_unicode(%struct._object* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)), !dbg !2292
  ret %struct._object* %call, !dbg !2293
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_unicode(%struct._object* %attr, i8* %name) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %attr.addr = alloca %struct._object*, align 8
  %name.addr = alloca i8*, align 8
  store %struct._object* %attr, %struct._object** %attr.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %attr.addr, metadata !1558, metadata !1979), !dbg !2294
  store i8* %name, i8** %name.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !1559, metadata !1979), !dbg !2295
  %0 = load %struct._object*, %struct._object** %attr.addr, align 8, !dbg !2296, !tbaa !1975
  %tobool = icmp ne %struct._object* %0, null, !dbg !2296
  br i1 %tobool, label %if.end, label %if.then, !dbg !2298

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2299, !tbaa !1975
  %2 = load i8*, i8** %name.addr, align 8, !dbg !2301, !tbaa !1975
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i32 0, i32 0), i8* %2), !dbg !2302
  store %struct._object* null, %struct._object** %retval, !dbg !2303
  br label %return, !dbg !2303

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %attr.addr, align 8, !dbg !2304, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !2306
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2306, !tbaa !2039
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19, !dbg !2307
  %5 = load i64, i64* %tp_flags, align 8, !dbg !2307, !tbaa !2308
  %and = and i64 %5, 268435456, !dbg !2309
  %cmp = icmp ne i64 %and, 0, !dbg !2310
  br i1 %cmp, label %if.end.3, label %if.then.1, !dbg !2311

if.then.1:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2312, !tbaa !1975
  %7 = load i8*, i8** %name.addr, align 8, !dbg !2314, !tbaa !1975
  %call2 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.175, i32 0, i32 0), i8* %7), !dbg !2315
  store %struct._object* null, %struct._object** %retval, !dbg !2316
  br label %return, !dbg !2316

if.end.3:                                         ; preds = %if.end
  %8 = load %struct._object*, %struct._object** %attr.addr, align 8, !dbg !2317, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !2318
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !2319, !tbaa !2003
  %inc = add i64 %9, 1, !dbg !2319
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2319, !tbaa !2003
  %10 = load %struct._object*, %struct._object** %attr.addr, align 8, !dbg !2320, !tbaa !1975
  store %struct._object* %10, %struct._object** %retval, !dbg !2321
  br label %return, !dbg !2321

return:                                           ; preds = %if.end.3, %if.then.1, %if.then
  %11 = load %struct._object*, %struct._object** %retval, !dbg !2322
  ret %struct._object* %11, !dbg !2322
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeDecodeError_GetEncoding(%struct._object* %exc) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !539, metadata !1979), !dbg !2323
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2324, !tbaa !1975
  %1 = bitcast %struct._object* %0 to %struct.PyUnicodeErrorObject*, !dbg !2325
  %encoding = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %1, i32 0, i32 7, !dbg !2326
  %2 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !2326, !tbaa !2290
  %call = call %struct._object* @get_unicode(%struct._object* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)), !dbg !2327
  ret %struct._object* %call, !dbg !2328
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeEncodeError_GetObject(%struct._object* %exc) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !542, metadata !1979), !dbg !2329
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2330, !tbaa !1975
  %1 = bitcast %struct._object* %0 to %struct.PyUnicodeErrorObject*, !dbg !2331
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %1, i32 0, i32 8, !dbg !2332
  %2 = load %struct._object*, %struct._object** %object, align 8, !dbg !2332, !tbaa !2333
  %call = call %struct._object* @get_unicode(%struct._object* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0)), !dbg !2334
  ret %struct._object* %call, !dbg !2335
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeDecodeError_GetObject(%struct._object* %exc) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !545, metadata !1979), !dbg !2336
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2337, !tbaa !1975
  %1 = bitcast %struct._object* %0 to %struct.PyUnicodeErrorObject*, !dbg !2338
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %1, i32 0, i32 8, !dbg !2339
  %2 = load %struct._object*, %struct._object** %object, align 8, !dbg !2339, !tbaa !2333
  %call = call %struct._object* @get_string(%struct._object* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0)), !dbg !2340
  ret %struct._object* %call, !dbg !2341
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_string(%struct._object* %attr, i8* %name) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %attr.addr = alloca %struct._object*, align 8
  %name.addr = alloca i8*, align 8
  store %struct._object* %attr, %struct._object** %attr.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %attr.addr, metadata !1562, metadata !1979), !dbg !2342
  store i8* %name, i8** %name.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !1563, metadata !1979), !dbg !2343
  %0 = load %struct._object*, %struct._object** %attr.addr, align 8, !dbg !2344, !tbaa !1975
  %tobool = icmp ne %struct._object* %0, null, !dbg !2344
  br i1 %tobool, label %if.end, label %if.then, !dbg !2346

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2347, !tbaa !1975
  %2 = load i8*, i8** %name.addr, align 8, !dbg !2349, !tbaa !1975
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i32 0, i32 0), i8* %2), !dbg !2350
  store %struct._object* null, %struct._object** %retval, !dbg !2351
  br label %return, !dbg !2351

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %attr.addr, align 8, !dbg !2352, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !2354
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2354, !tbaa !2039
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19, !dbg !2355
  %5 = load i64, i64* %tp_flags, align 8, !dbg !2355, !tbaa !2308
  %and = and i64 %5, 134217728, !dbg !2356
  %cmp = icmp ne i64 %and, 0, !dbg !2357
  br i1 %cmp, label %if.end.3, label %if.then.1, !dbg !2358

if.then.1:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2359, !tbaa !1975
  %7 = load i8*, i8** %name.addr, align 8, !dbg !2361, !tbaa !1975
  %call2 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.176, i32 0, i32 0), i8* %7), !dbg !2362
  store %struct._object* null, %struct._object** %retval, !dbg !2363
  br label %return, !dbg !2363

if.end.3:                                         ; preds = %if.end
  %8 = load %struct._object*, %struct._object** %attr.addr, align 8, !dbg !2364, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !2365
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !2366, !tbaa !2003
  %inc = add i64 %9, 1, !dbg !2366
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2366, !tbaa !2003
  %10 = load %struct._object*, %struct._object** %attr.addr, align 8, !dbg !2367, !tbaa !1975
  store %struct._object* %10, %struct._object** %retval, !dbg !2368
  br label %return, !dbg !2368

return:                                           ; preds = %if.end.3, %if.then.1, %if.then
  %11 = load %struct._object*, %struct._object** %retval, !dbg !2369
  ret %struct._object* %11, !dbg !2369
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeTranslateError_GetObject(%struct._object* %exc) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !548, metadata !1979), !dbg !2370
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2371, !tbaa !1975
  %1 = bitcast %struct._object* %0 to %struct.PyUnicodeErrorObject*, !dbg !2372
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %1, i32 0, i32 8, !dbg !2373
  %2 = load %struct._object*, %struct._object** %object, align 8, !dbg !2373, !tbaa !2333
  %call = call %struct._object* @get_unicode(%struct._object* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0)), !dbg !2374
  ret %struct._object* %call, !dbg !2375
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeEncodeError_GetStart(%struct._object* %exc, i64* %start) #0 {
entry:
  %retval = alloca i32, align 4
  %exc.addr = alloca %struct._object*, align 8
  %start.addr = alloca i64*, align 8
  %size = alloca i64, align 8
  %obj = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !553, metadata !1979), !dbg !2376
  store i64* %start, i64** %start.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i64** %start.addr, metadata !554, metadata !1979), !dbg !2377
  %0 = bitcast i64* %size to i8*, !dbg !2378
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2378
  call void @llvm.dbg.declare(metadata i64* %size, metadata !555, metadata !1979), !dbg !2379
  %1 = bitcast %struct._object** %obj to i8*, !dbg !2380
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2380
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !556, metadata !1979), !dbg !2381
  %2 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2382, !tbaa !1975
  %3 = bitcast %struct._object* %2 to %struct.PyUnicodeErrorObject*, !dbg !2383
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %3, i32 0, i32 8, !dbg !2384
  %4 = load %struct._object*, %struct._object** %object, align 8, !dbg !2384, !tbaa !2333
  %call = call %struct._object* @get_unicode(%struct._object* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0)), !dbg !2385
  store %struct._object* %call, %struct._object** %obj, align 8, !dbg !2381, !tbaa !1975
  %5 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2386, !tbaa !1975
  %tobool = icmp ne %struct._object* %5, null, !dbg !2386
  br i1 %tobool, label %if.end, label %if.then, !dbg !2388

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !2389
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2389

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2390, !tbaa !1975
  %7 = bitcast %struct._object* %6 to %struct.PyUnicodeErrorObject*, !dbg !2391
  %start1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %7, i32 0, i32 9, !dbg !2392
  %8 = load i64, i64* %start1, align 8, !dbg !2392, !tbaa !2393
  %9 = load i64*, i64** %start.addr, align 8, !dbg !2394, !tbaa !1975
  store i64 %8, i64* %9, align 8, !dbg !2395, !tbaa !2396
  %10 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2397, !tbaa !1975
  %11 = bitcast %struct._object* %10 to %struct.PyASCIIObject*, !dbg !2398
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %11, i32 0, i32 1, !dbg !2399
  %12 = load i64, i64* %length, align 8, !dbg !2399, !tbaa !2400
  store i64 %12, i64* %size, align 8, !dbg !2403, !tbaa !2396
  %13 = load i64*, i64** %start.addr, align 8, !dbg !2404, !tbaa !1975
  %14 = load i64, i64* %13, align 8, !dbg !2406, !tbaa !2396
  %cmp = icmp slt i64 %14, 0, !dbg !2407
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !2408

if.then.2:                                        ; preds = %if.end
  %15 = load i64*, i64** %start.addr, align 8, !dbg !2409, !tbaa !1975
  store i64 0, i64* %15, align 8, !dbg !2410, !tbaa !2396
  br label %if.end.3, !dbg !2411

if.end.3:                                         ; preds = %if.then.2, %if.end
  %16 = load i64*, i64** %start.addr, align 8, !dbg !2412, !tbaa !1975
  %17 = load i64, i64* %16, align 8, !dbg !2414, !tbaa !2396
  %18 = load i64, i64* %size, align 8, !dbg !2415, !tbaa !2396
  %cmp4 = icmp sge i64 %17, %18, !dbg !2416
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !2417

if.then.5:                                        ; preds = %if.end.3
  %19 = load i64, i64* %size, align 8, !dbg !2418, !tbaa !2396
  %sub = sub i64 %19, 1, !dbg !2419
  %20 = load i64*, i64** %start.addr, align 8, !dbg !2420, !tbaa !1975
  store i64 %sub, i64* %20, align 8, !dbg !2421, !tbaa !2396
  br label %if.end.6, !dbg !2422

if.end.6:                                         ; preds = %if.then.5, %if.end.3
  br label %do.body, !dbg !2423

do.body:                                          ; preds = %if.end.6
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2424
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !2424
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !557, metadata !1979), !dbg !2426
  %22 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2427, !tbaa !1975
  store %struct._object* %22, %struct._object** %_py_decref_tmp, align 8, !dbg !2426, !tbaa !1975
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2428, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !2430
  %24 = load i64, i64* %ob_refcnt, align 8, !dbg !2431, !tbaa !2003
  %dec = add i64 %24, -1, !dbg !2431
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2431, !tbaa !2003
  %cmp7 = icmp ne i64 %dec, 0, !dbg !2432
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !2433

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !2434

if.else:                                          ; preds = %do.body
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2436, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !2438
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2438, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !2439
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2439, !tbaa !2091
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2440, !tbaa !1975
  call void %27(%struct._object* %28), !dbg !2441
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2442
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !2442
  br label %do.cond, !dbg !2444

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !2445

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !2447
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2447

cleanup:                                          ; preds = %do.end, %if.then
  %30 = bitcast %struct._object** %obj to i8*, !dbg !2448
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !2448
  %31 = bitcast i64* %size to i8*, !dbg !2448
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !2448
  %32 = load i32, i32* %retval, !dbg !2448
  ret i32 %32, !dbg !2448
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeDecodeError_GetStart(%struct._object* %exc, i64* %start) #0 {
entry:
  %retval = alloca i32, align 4
  %exc.addr = alloca %struct._object*, align 8
  %start.addr = alloca i64*, align 8
  %size = alloca i64, align 8
  %obj = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !561, metadata !1979), !dbg !2449
  store i64* %start, i64** %start.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i64** %start.addr, metadata !562, metadata !1979), !dbg !2450
  %0 = bitcast i64* %size to i8*, !dbg !2451
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2451
  call void @llvm.dbg.declare(metadata i64* %size, metadata !563, metadata !1979), !dbg !2452
  %1 = bitcast %struct._object** %obj to i8*, !dbg !2453
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2453
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !564, metadata !1979), !dbg !2454
  %2 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2455, !tbaa !1975
  %3 = bitcast %struct._object* %2 to %struct.PyUnicodeErrorObject*, !dbg !2456
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %3, i32 0, i32 8, !dbg !2457
  %4 = load %struct._object*, %struct._object** %object, align 8, !dbg !2457, !tbaa !2333
  %call = call %struct._object* @get_string(%struct._object* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0)), !dbg !2458
  store %struct._object* %call, %struct._object** %obj, align 8, !dbg !2454, !tbaa !1975
  %5 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2459, !tbaa !1975
  %tobool = icmp ne %struct._object* %5, null, !dbg !2459
  br i1 %tobool, label %if.end, label %if.then, !dbg !2461

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !2462
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2462

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2463, !tbaa !1975
  %7 = bitcast %struct._object* %6 to %struct.PyVarObject*, !dbg !2464
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1, !dbg !2465
  %8 = load i64, i64* %ob_size, align 8, !dbg !2465, !tbaa !2466
  store i64 %8, i64* %size, align 8, !dbg !2467, !tbaa !2396
  %9 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2468, !tbaa !1975
  %10 = bitcast %struct._object* %9 to %struct.PyUnicodeErrorObject*, !dbg !2469
  %start1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %10, i32 0, i32 9, !dbg !2470
  %11 = load i64, i64* %start1, align 8, !dbg !2470, !tbaa !2393
  %12 = load i64*, i64** %start.addr, align 8, !dbg !2471, !tbaa !1975
  store i64 %11, i64* %12, align 8, !dbg !2472, !tbaa !2396
  %13 = load i64*, i64** %start.addr, align 8, !dbg !2473, !tbaa !1975
  %14 = load i64, i64* %13, align 8, !dbg !2475, !tbaa !2396
  %cmp = icmp slt i64 %14, 0, !dbg !2476
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !2477

if.then.2:                                        ; preds = %if.end
  %15 = load i64*, i64** %start.addr, align 8, !dbg !2478, !tbaa !1975
  store i64 0, i64* %15, align 8, !dbg !2479, !tbaa !2396
  br label %if.end.3, !dbg !2480

if.end.3:                                         ; preds = %if.then.2, %if.end
  %16 = load i64*, i64** %start.addr, align 8, !dbg !2481, !tbaa !1975
  %17 = load i64, i64* %16, align 8, !dbg !2483, !tbaa !2396
  %18 = load i64, i64* %size, align 8, !dbg !2484, !tbaa !2396
  %cmp4 = icmp sge i64 %17, %18, !dbg !2485
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !2486

if.then.5:                                        ; preds = %if.end.3
  %19 = load i64, i64* %size, align 8, !dbg !2487, !tbaa !2396
  %sub = sub i64 %19, 1, !dbg !2488
  %20 = load i64*, i64** %start.addr, align 8, !dbg !2489, !tbaa !1975
  store i64 %sub, i64* %20, align 8, !dbg !2490, !tbaa !2396
  br label %if.end.6, !dbg !2491

if.end.6:                                         ; preds = %if.then.5, %if.end.3
  br label %do.body, !dbg !2492

do.body:                                          ; preds = %if.end.6
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2493
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !2493
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !565, metadata !1979), !dbg !2495
  %22 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2496, !tbaa !1975
  store %struct._object* %22, %struct._object** %_py_decref_tmp, align 8, !dbg !2495, !tbaa !1975
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2497, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !2499
  %24 = load i64, i64* %ob_refcnt, align 8, !dbg !2500, !tbaa !2003
  %dec = add i64 %24, -1, !dbg !2500
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2500, !tbaa !2003
  %cmp7 = icmp ne i64 %dec, 0, !dbg !2501
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !2502

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !2503

if.else:                                          ; preds = %do.body
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2505, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !2507
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2507, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !2508
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2508, !tbaa !2091
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2509, !tbaa !1975
  call void %27(%struct._object* %28), !dbg !2510
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2511
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !2511
  br label %do.cond, !dbg !2513

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !2514

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !2516
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2516

cleanup:                                          ; preds = %do.end, %if.then
  %30 = bitcast %struct._object** %obj to i8*, !dbg !2517
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !2517
  %31 = bitcast i64* %size to i8*, !dbg !2517
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !2517
  %32 = load i32, i32* %retval, !dbg !2517
  ret i32 %32, !dbg !2517
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeTranslateError_GetStart(%struct._object* %exc, i64* %start) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  %start.addr = alloca i64*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !569, metadata !1979), !dbg !2518
  store i64* %start, i64** %start.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i64** %start.addr, metadata !570, metadata !1979), !dbg !2519
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2520, !tbaa !1975
  %1 = load i64*, i64** %start.addr, align 8, !dbg !2521, !tbaa !1975
  %call = call i32 @PyUnicodeEncodeError_GetStart(%struct._object* %0, i64* %1), !dbg !2522
  ret i32 %call, !dbg !2523
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeEncodeError_SetStart(%struct._object* %exc, i64 %start) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  %start.addr = alloca i64, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !575, metadata !1979), !dbg !2524
  store i64 %start, i64* %start.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !576, metadata !1979), !dbg !2525
  %0 = load i64, i64* %start.addr, align 8, !dbg !2526, !tbaa !2396
  %1 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2527, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyUnicodeErrorObject*, !dbg !2528
  %start1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %2, i32 0, i32 9, !dbg !2529
  store i64 %0, i64* %start1, align 8, !dbg !2530, !tbaa !2393
  ret i32 0, !dbg !2531
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeDecodeError_SetStart(%struct._object* %exc, i64 %start) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  %start.addr = alloca i64, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !579, metadata !1979), !dbg !2532
  store i64 %start, i64* %start.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !580, metadata !1979), !dbg !2533
  %0 = load i64, i64* %start.addr, align 8, !dbg !2534, !tbaa !2396
  %1 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2535, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyUnicodeErrorObject*, !dbg !2536
  %start1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %2, i32 0, i32 9, !dbg !2537
  store i64 %0, i64* %start1, align 8, !dbg !2538, !tbaa !2393
  ret i32 0, !dbg !2539
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeTranslateError_SetStart(%struct._object* %exc, i64 %start) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  %start.addr = alloca i64, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !583, metadata !1979), !dbg !2540
  store i64 %start, i64* %start.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !584, metadata !1979), !dbg !2541
  %0 = load i64, i64* %start.addr, align 8, !dbg !2542, !tbaa !2396
  %1 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2543, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyUnicodeErrorObject*, !dbg !2544
  %start1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %2, i32 0, i32 9, !dbg !2545
  store i64 %0, i64* %start1, align 8, !dbg !2546, !tbaa !2393
  ret i32 0, !dbg !2547
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeEncodeError_GetEnd(%struct._object* %exc, i64* %end) #0 {
entry:
  %retval = alloca i32, align 4
  %exc.addr = alloca %struct._object*, align 8
  %end.addr = alloca i64*, align 8
  %size = alloca i64, align 8
  %obj = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !587, metadata !1979), !dbg !2548
  store i64* %end, i64** %end.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i64** %end.addr, metadata !588, metadata !1979), !dbg !2549
  %0 = bitcast i64* %size to i8*, !dbg !2550
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2550
  call void @llvm.dbg.declare(metadata i64* %size, metadata !589, metadata !1979), !dbg !2551
  %1 = bitcast %struct._object** %obj to i8*, !dbg !2552
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2552
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !590, metadata !1979), !dbg !2553
  %2 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2554, !tbaa !1975
  %3 = bitcast %struct._object* %2 to %struct.PyUnicodeErrorObject*, !dbg !2555
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %3, i32 0, i32 8, !dbg !2556
  %4 = load %struct._object*, %struct._object** %object, align 8, !dbg !2556, !tbaa !2333
  %call = call %struct._object* @get_unicode(%struct._object* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0)), !dbg !2557
  store %struct._object* %call, %struct._object** %obj, align 8, !dbg !2553, !tbaa !1975
  %5 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2558, !tbaa !1975
  %tobool = icmp ne %struct._object* %5, null, !dbg !2558
  br i1 %tobool, label %if.end, label %if.then, !dbg !2560

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !2561
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2561

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2562, !tbaa !1975
  %7 = bitcast %struct._object* %6 to %struct.PyUnicodeErrorObject*, !dbg !2563
  %end1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %7, i32 0, i32 10, !dbg !2564
  %8 = load i64, i64* %end1, align 8, !dbg !2564, !tbaa !2565
  %9 = load i64*, i64** %end.addr, align 8, !dbg !2566, !tbaa !1975
  store i64 %8, i64* %9, align 8, !dbg !2567, !tbaa !2396
  %10 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2568, !tbaa !1975
  %11 = bitcast %struct._object* %10 to %struct.PyASCIIObject*, !dbg !2569
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %11, i32 0, i32 1, !dbg !2570
  %12 = load i64, i64* %length, align 8, !dbg !2570, !tbaa !2400
  store i64 %12, i64* %size, align 8, !dbg !2571, !tbaa !2396
  %13 = load i64*, i64** %end.addr, align 8, !dbg !2572, !tbaa !1975
  %14 = load i64, i64* %13, align 8, !dbg !2574, !tbaa !2396
  %cmp = icmp slt i64 %14, 1, !dbg !2575
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !2576

if.then.2:                                        ; preds = %if.end
  %15 = load i64*, i64** %end.addr, align 8, !dbg !2577, !tbaa !1975
  store i64 1, i64* %15, align 8, !dbg !2578, !tbaa !2396
  br label %if.end.3, !dbg !2579

if.end.3:                                         ; preds = %if.then.2, %if.end
  %16 = load i64*, i64** %end.addr, align 8, !dbg !2580, !tbaa !1975
  %17 = load i64, i64* %16, align 8, !dbg !2582, !tbaa !2396
  %18 = load i64, i64* %size, align 8, !dbg !2583, !tbaa !2396
  %cmp4 = icmp sgt i64 %17, %18, !dbg !2584
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !2585

if.then.5:                                        ; preds = %if.end.3
  %19 = load i64, i64* %size, align 8, !dbg !2586, !tbaa !2396
  %20 = load i64*, i64** %end.addr, align 8, !dbg !2587, !tbaa !1975
  store i64 %19, i64* %20, align 8, !dbg !2588, !tbaa !2396
  br label %if.end.6, !dbg !2589

if.end.6:                                         ; preds = %if.then.5, %if.end.3
  br label %do.body, !dbg !2590

do.body:                                          ; preds = %if.end.6
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2591
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !2591
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !591, metadata !1979), !dbg !2593
  %22 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2594, !tbaa !1975
  store %struct._object* %22, %struct._object** %_py_decref_tmp, align 8, !dbg !2593, !tbaa !1975
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2595, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !2597
  %24 = load i64, i64* %ob_refcnt, align 8, !dbg !2598, !tbaa !2003
  %dec = add i64 %24, -1, !dbg !2598
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2598, !tbaa !2003
  %cmp7 = icmp ne i64 %dec, 0, !dbg !2599
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !2600

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !2601

if.else:                                          ; preds = %do.body
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2603, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !2605
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2605, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !2606
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2606, !tbaa !2091
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2607, !tbaa !1975
  call void %27(%struct._object* %28), !dbg !2608
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2609
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !2609
  br label %do.cond, !dbg !2611

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !2612

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !2614
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2614

cleanup:                                          ; preds = %do.end, %if.then
  %30 = bitcast %struct._object** %obj to i8*, !dbg !2615
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !2615
  %31 = bitcast i64* %size to i8*, !dbg !2615
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !2615
  %32 = load i32, i32* %retval, !dbg !2615
  ret i32 %32, !dbg !2615
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeDecodeError_GetEnd(%struct._object* %exc, i64* %end) #0 {
entry:
  %retval = alloca i32, align 4
  %exc.addr = alloca %struct._object*, align 8
  %end.addr = alloca i64*, align 8
  %size = alloca i64, align 8
  %obj = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !595, metadata !1979), !dbg !2616
  store i64* %end, i64** %end.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i64** %end.addr, metadata !596, metadata !1979), !dbg !2617
  %0 = bitcast i64* %size to i8*, !dbg !2618
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2618
  call void @llvm.dbg.declare(metadata i64* %size, metadata !597, metadata !1979), !dbg !2619
  %1 = bitcast %struct._object** %obj to i8*, !dbg !2620
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2620
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !598, metadata !1979), !dbg !2621
  %2 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2622, !tbaa !1975
  %3 = bitcast %struct._object* %2 to %struct.PyUnicodeErrorObject*, !dbg !2623
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %3, i32 0, i32 8, !dbg !2624
  %4 = load %struct._object*, %struct._object** %object, align 8, !dbg !2624, !tbaa !2333
  %call = call %struct._object* @get_string(%struct._object* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0)), !dbg !2625
  store %struct._object* %call, %struct._object** %obj, align 8, !dbg !2621, !tbaa !1975
  %5 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2626, !tbaa !1975
  %tobool = icmp ne %struct._object* %5, null, !dbg !2626
  br i1 %tobool, label %if.end, label %if.then, !dbg !2628

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !2629
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2629

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2630, !tbaa !1975
  %7 = bitcast %struct._object* %6 to %struct.PyVarObject*, !dbg !2631
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1, !dbg !2632
  %8 = load i64, i64* %ob_size, align 8, !dbg !2632, !tbaa !2466
  store i64 %8, i64* %size, align 8, !dbg !2633, !tbaa !2396
  %9 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2634, !tbaa !1975
  %10 = bitcast %struct._object* %9 to %struct.PyUnicodeErrorObject*, !dbg !2635
  %end1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %10, i32 0, i32 10, !dbg !2636
  %11 = load i64, i64* %end1, align 8, !dbg !2636, !tbaa !2565
  %12 = load i64*, i64** %end.addr, align 8, !dbg !2637, !tbaa !1975
  store i64 %11, i64* %12, align 8, !dbg !2638, !tbaa !2396
  %13 = load i64*, i64** %end.addr, align 8, !dbg !2639, !tbaa !1975
  %14 = load i64, i64* %13, align 8, !dbg !2641, !tbaa !2396
  %cmp = icmp slt i64 %14, 1, !dbg !2642
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !2643

if.then.2:                                        ; preds = %if.end
  %15 = load i64*, i64** %end.addr, align 8, !dbg !2644, !tbaa !1975
  store i64 1, i64* %15, align 8, !dbg !2645, !tbaa !2396
  br label %if.end.3, !dbg !2646

if.end.3:                                         ; preds = %if.then.2, %if.end
  %16 = load i64*, i64** %end.addr, align 8, !dbg !2647, !tbaa !1975
  %17 = load i64, i64* %16, align 8, !dbg !2649, !tbaa !2396
  %18 = load i64, i64* %size, align 8, !dbg !2650, !tbaa !2396
  %cmp4 = icmp sgt i64 %17, %18, !dbg !2651
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !2652

if.then.5:                                        ; preds = %if.end.3
  %19 = load i64, i64* %size, align 8, !dbg !2653, !tbaa !2396
  %20 = load i64*, i64** %end.addr, align 8, !dbg !2654, !tbaa !1975
  store i64 %19, i64* %20, align 8, !dbg !2655, !tbaa !2396
  br label %if.end.6, !dbg !2656

if.end.6:                                         ; preds = %if.then.5, %if.end.3
  br label %do.body, !dbg !2657

do.body:                                          ; preds = %if.end.6
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2658
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !2658
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !599, metadata !1979), !dbg !2660
  %22 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2661, !tbaa !1975
  store %struct._object* %22, %struct._object** %_py_decref_tmp, align 8, !dbg !2660, !tbaa !1975
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2662, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !2664
  %24 = load i64, i64* %ob_refcnt, align 8, !dbg !2665, !tbaa !2003
  %dec = add i64 %24, -1, !dbg !2665
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2665, !tbaa !2003
  %cmp7 = icmp ne i64 %dec, 0, !dbg !2666
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !2667

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !2668

if.else:                                          ; preds = %do.body
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2670, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !2672
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2672, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !2673
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2673, !tbaa !2091
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2674, !tbaa !1975
  call void %27(%struct._object* %28), !dbg !2675
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2676
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !2676
  br label %do.cond, !dbg !2678

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !2679

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !2681
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2681

cleanup:                                          ; preds = %do.end, %if.then
  %30 = bitcast %struct._object** %obj to i8*, !dbg !2682
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !2682
  %31 = bitcast i64* %size to i8*, !dbg !2682
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !2682
  %32 = load i32, i32* %retval, !dbg !2682
  ret i32 %32, !dbg !2682
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeTranslateError_GetEnd(%struct._object* %exc, i64* %start) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  %start.addr = alloca i64*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !603, metadata !1979), !dbg !2683
  store i64* %start, i64** %start.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i64** %start.addr, metadata !604, metadata !1979), !dbg !2684
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2685, !tbaa !1975
  %1 = load i64*, i64** %start.addr, align 8, !dbg !2686, !tbaa !1975
  %call = call i32 @PyUnicodeEncodeError_GetEnd(%struct._object* %0, i64* %1), !dbg !2687
  ret i32 %call, !dbg !2688
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeEncodeError_SetEnd(%struct._object* %exc, i64 %end) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  %end.addr = alloca i64, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !607, metadata !1979), !dbg !2689
  store i64 %end, i64* %end.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %end.addr, metadata !608, metadata !1979), !dbg !2690
  %0 = load i64, i64* %end.addr, align 8, !dbg !2691, !tbaa !2396
  %1 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2692, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyUnicodeErrorObject*, !dbg !2693
  %end1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %2, i32 0, i32 10, !dbg !2694
  store i64 %0, i64* %end1, align 8, !dbg !2695, !tbaa !2565
  ret i32 0, !dbg !2696
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeDecodeError_SetEnd(%struct._object* %exc, i64 %end) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  %end.addr = alloca i64, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !611, metadata !1979), !dbg !2697
  store i64 %end, i64* %end.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %end.addr, metadata !612, metadata !1979), !dbg !2698
  %0 = load i64, i64* %end.addr, align 8, !dbg !2699, !tbaa !2396
  %1 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2700, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyUnicodeErrorObject*, !dbg !2701
  %end1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %2, i32 0, i32 10, !dbg !2702
  store i64 %0, i64* %end1, align 8, !dbg !2703, !tbaa !2565
  ret i32 0, !dbg !2704
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeTranslateError_SetEnd(%struct._object* %exc, i64 %end) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  %end.addr = alloca i64, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !615, metadata !1979), !dbg !2705
  store i64 %end, i64* %end.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %end.addr, metadata !616, metadata !1979), !dbg !2706
  %0 = load i64, i64* %end.addr, align 8, !dbg !2707, !tbaa !2396
  %1 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2708, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyUnicodeErrorObject*, !dbg !2709
  %end1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %2, i32 0, i32 10, !dbg !2710
  store i64 %0, i64* %end1, align 8, !dbg !2711, !tbaa !2565
  ret i32 0, !dbg !2712
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeEncodeError_GetReason(%struct._object* %exc) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !619, metadata !1979), !dbg !2713
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2714, !tbaa !1975
  %1 = bitcast %struct._object* %0 to %struct.PyUnicodeErrorObject*, !dbg !2715
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %1, i32 0, i32 11, !dbg !2716
  %2 = load %struct._object*, %struct._object** %reason, align 8, !dbg !2716, !tbaa !2717
  %call = call %struct._object* @get_unicode(%struct._object* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0)), !dbg !2718
  ret %struct._object* %call, !dbg !2719
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeDecodeError_GetReason(%struct._object* %exc) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !622, metadata !1979), !dbg !2720
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2721, !tbaa !1975
  %1 = bitcast %struct._object* %0 to %struct.PyUnicodeErrorObject*, !dbg !2722
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %1, i32 0, i32 11, !dbg !2723
  %2 = load %struct._object*, %struct._object** %reason, align 8, !dbg !2723, !tbaa !2717
  %call = call %struct._object* @get_unicode(%struct._object* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0)), !dbg !2724
  ret %struct._object* %call, !dbg !2725
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeTranslateError_GetReason(%struct._object* %exc) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !625, metadata !1979), !dbg !2726
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2727, !tbaa !1975
  %1 = bitcast %struct._object* %0 to %struct.PyUnicodeErrorObject*, !dbg !2728
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %1, i32 0, i32 11, !dbg !2729
  %2 = load %struct._object*, %struct._object** %reason, align 8, !dbg !2729, !tbaa !2717
  %call = call %struct._object* @get_unicode(%struct._object* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0)), !dbg !2730
  ret %struct._object* %call, !dbg !2731
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeEncodeError_SetReason(%struct._object* %exc, i8* %reason) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  %reason.addr = alloca i8*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !630, metadata !1979), !dbg !2732
  store i8* %reason, i8** %reason.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %reason.addr, metadata !631, metadata !1979), !dbg !2733
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2734, !tbaa !1975
  %1 = bitcast %struct._object* %0 to %struct.PyUnicodeErrorObject*, !dbg !2735
  %reason1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %1, i32 0, i32 11, !dbg !2736
  %2 = load i8*, i8** %reason.addr, align 8, !dbg !2737, !tbaa !1975
  %call = call i32 @set_unicodefromstring(%struct._object** %reason1, i8* %2), !dbg !2738
  ret i32 %call, !dbg !2739
}

; Function Attrs: nounwind uwtable
define internal i32 @set_unicodefromstring(%struct._object** %attr, i8* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %attr.addr = alloca %struct._object**, align 8
  %value.addr = alloca i8*, align 8
  %obj = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object** %attr, %struct._object*** %attr.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object*** %attr.addr, metadata !1568, metadata !1979), !dbg !2740
  store i8* %value, i8** %value.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !1569, metadata !1979), !dbg !2741
  %0 = bitcast %struct._object** %obj to i8*, !dbg !2742
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2742
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !1570, metadata !1979), !dbg !2743
  %1 = load i8*, i8** %value.addr, align 8, !dbg !2744, !tbaa !1975
  %call = call %struct._object* @PyUnicode_FromString(i8* %1), !dbg !2745
  store %struct._object* %call, %struct._object** %obj, align 8, !dbg !2743, !tbaa !1975
  %2 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2746, !tbaa !1975
  %tobool = icmp ne %struct._object* %2, null, !dbg !2746
  br i1 %tobool, label %if.end, label %if.then, !dbg !2748

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !2749
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2749

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !2750

do.body:                                          ; preds = %if.end
  %3 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2751
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !2751
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1571, metadata !1979), !dbg !2753
  %4 = load %struct._object**, %struct._object*** %attr.addr, align 8, !dbg !2754, !tbaa !1975
  %5 = load %struct._object*, %struct._object** %4, align 8, !dbg !2755, !tbaa !1975
  store %struct._object* %5, %struct._object** %_py_tmp, align 8, !dbg !2753, !tbaa !1975
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2756, !tbaa !1975
  %cmp = icmp ne %struct._object* %6, null, !dbg !2757
  br i1 %cmp, label %if.then.1, label %if.end.6, !dbg !2758

if.then.1:                                        ; preds = %do.body
  %7 = load %struct._object**, %struct._object*** %attr.addr, align 8, !dbg !2759, !tbaa !1975
  store %struct._object* null, %struct._object** %7, align 8, !dbg !2761, !tbaa !1975
  br label %do.body.2, !dbg !2762

do.body.2:                                        ; preds = %if.then.1
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2763
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !2763
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1573, metadata !1979), !dbg !2765
  %9 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2766, !tbaa !1975
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !2765, !tbaa !1975
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2767, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !2769
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !2770, !tbaa !2003
  %dec = add i64 %11, -1, !dbg !2770
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2770, !tbaa !2003
  %cmp3 = icmp ne i64 %dec, 0, !dbg !2771
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !2772

if.then.4:                                        ; preds = %do.body.2
  br label %if.end.5, !dbg !2773

if.else:                                          ; preds = %do.body.2
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2775, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !2777
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2777, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !2778
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2778, !tbaa !2091
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2779, !tbaa !1975
  call void %14(%struct._object* %15), !dbg !2780
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then.4
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2781
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !2781
  br label %do.cond, !dbg !2783

do.cond:                                          ; preds = %if.end.5
  br label %do.end, !dbg !2784

do.end:                                           ; preds = %do.cond
  br label %if.end.6, !dbg !2786

if.end.6:                                         ; preds = %do.end, %do.body
  %17 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2788
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !2788
  br label %do.cond.7, !dbg !2791

do.cond.7:                                        ; preds = %if.end.6
  br label %do.end.8, !dbg !2792

do.end.8:                                         ; preds = %do.cond.7
  %18 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2794, !tbaa !1975
  %19 = load %struct._object**, %struct._object*** %attr.addr, align 8, !dbg !2795, !tbaa !1975
  store %struct._object* %18, %struct._object** %19, align 8, !dbg !2796, !tbaa !1975
  store i32 0, i32* %retval, !dbg !2797
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2797

cleanup:                                          ; preds = %do.end.8, %if.then
  %20 = bitcast %struct._object** %obj to i8*, !dbg !2798
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !2798
  %21 = load i32, i32* %retval, !dbg !2798
  ret i32 %21, !dbg !2798
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeDecodeError_SetReason(%struct._object* %exc, i8* %reason) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  %reason.addr = alloca i8*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !634, metadata !1979), !dbg !2799
  store i8* %reason, i8** %reason.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %reason.addr, metadata !635, metadata !1979), !dbg !2800
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2801, !tbaa !1975
  %1 = bitcast %struct._object* %0 to %struct.PyUnicodeErrorObject*, !dbg !2802
  %reason1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %1, i32 0, i32 11, !dbg !2803
  %2 = load i8*, i8** %reason.addr, align 8, !dbg !2804, !tbaa !1975
  %call = call i32 @set_unicodefromstring(%struct._object** %reason1, i8* %2), !dbg !2805
  ret i32 %call, !dbg !2806
}

; Function Attrs: nounwind uwtable
define i32 @PyUnicodeTranslateError_SetReason(%struct._object* %exc, i8* %reason) #0 {
entry:
  %exc.addr = alloca %struct._object*, align 8
  %reason.addr = alloca i8*, align 8
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !638, metadata !1979), !dbg !2807
  store i8* %reason, i8** %reason.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %reason.addr, metadata !639, metadata !1979), !dbg !2808
  %0 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !2809, !tbaa !1975
  %1 = bitcast %struct._object* %0 to %struct.PyUnicodeErrorObject*, !dbg !2810
  %reason1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %1, i32 0, i32 11, !dbg !2811
  %2 = load i8*, i8** %reason.addr, align 8, !dbg !2812, !tbaa !1975
  %call = call i32 @set_unicodefromstring(%struct._object** %reason1, i8* %2), !dbg !2813
  ret i32 %call, !dbg !2814
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeEncodeError_Create(i8* %encoding, i32* %object, i64 %length, i64 %start, i64 %end, i8* %reason) #0 {
entry:
  %encoding.addr = alloca i8*, align 8
  %object.addr = alloca i32*, align 8
  %length.addr = alloca i64, align 8
  %start.addr = alloca i64, align 8
  %end.addr = alloca i64, align 8
  %reason.addr = alloca i8*, align 8
  store i8* %encoding, i8** %encoding.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %encoding.addr, metadata !647, metadata !1979), !dbg !2815
  store i32* %object, i32** %object.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i32** %object.addr, metadata !648, metadata !1979), !dbg !2816
  store i64 %length, i64* %length.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !649, metadata !1979), !dbg !2817
  store i64 %start, i64* %start.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !650, metadata !1979), !dbg !2818
  store i64 %end, i64* %end.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %end.addr, metadata !651, metadata !1979), !dbg !2819
  store i8* %reason, i8** %reason.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %reason.addr, metadata !652, metadata !1979), !dbg !2820
  %0 = load %struct._object*, %struct._object** @PyExc_UnicodeEncodeError, align 8, !dbg !2821, !tbaa !1975
  %1 = load i8*, i8** %encoding.addr, align 8, !dbg !2822, !tbaa !1975
  %2 = load i32*, i32** %object.addr, align 8, !dbg !2823, !tbaa !1975
  %3 = load i64, i64* %length.addr, align 8, !dbg !2824, !tbaa !2396
  %4 = load i64, i64* %start.addr, align 8, !dbg !2825, !tbaa !2396
  %5 = load i64, i64* %end.addr, align 8, !dbg !2826, !tbaa !2396
  %6 = load i8*, i8** %reason.addr, align 8, !dbg !2827, !tbaa !1975
  %call = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i8* %1, i32* %2, i64 %3, i64 %4, i64 %5, i8* %6), !dbg !2828
  ret %struct._object* %call, !dbg !2829
}

declare %struct._object* @_PyObject_CallFunction_SizeT(%struct._object*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeDecodeError_Create(i8* %encoding, i8* %object, i64 %length, i64 %start, i64 %end, i8* %reason) #0 {
entry:
  %encoding.addr = alloca i8*, align 8
  %object.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %start.addr = alloca i64, align 8
  %end.addr = alloca i64, align 8
  %reason.addr = alloca i8*, align 8
  store i8* %encoding, i8** %encoding.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %encoding.addr, metadata !657, metadata !1979), !dbg !2830
  store i8* %object, i8** %object.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !658, metadata !1979), !dbg !2831
  store i64 %length, i64* %length.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !659, metadata !1979), !dbg !2832
  store i64 %start, i64* %start.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !660, metadata !1979), !dbg !2833
  store i64 %end, i64* %end.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %end.addr, metadata !661, metadata !1979), !dbg !2834
  store i8* %reason, i8** %reason.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %reason.addr, metadata !662, metadata !1979), !dbg !2835
  %0 = load %struct._object*, %struct._object** @PyExc_UnicodeDecodeError, align 8, !dbg !2836, !tbaa !1975
  %1 = load i8*, i8** %encoding.addr, align 8, !dbg !2837, !tbaa !1975
  %2 = load i8*, i8** %object.addr, align 8, !dbg !2838, !tbaa !1975
  %3 = load i64, i64* %length.addr, align 8, !dbg !2839, !tbaa !2396
  %4 = load i64, i64* %start.addr, align 8, !dbg !2840, !tbaa !2396
  %5 = load i64, i64* %end.addr, align 8, !dbg !2841, !tbaa !2396
  %6 = load i8*, i8** %reason.addr, align 8, !dbg !2842, !tbaa !1975
  %call = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i8* %1, i8* %2, i64 %3, i64 %4, i64 %5, i8* %6), !dbg !2843
  ret %struct._object* %call, !dbg !2844
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyUnicodeTranslateError_Create(i32* %object, i64 %length, i64 %start, i64 %end, i8* %reason) #0 {
entry:
  %object.addr = alloca i32*, align 8
  %length.addr = alloca i64, align 8
  %start.addr = alloca i64, align 8
  %end.addr = alloca i64, align 8
  %reason.addr = alloca i8*, align 8
  store i32* %object, i32** %object.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i32** %object.addr, metadata !667, metadata !1979), !dbg !2845
  store i64 %length, i64* %length.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !668, metadata !1979), !dbg !2846
  store i64 %start, i64* %start.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !669, metadata !1979), !dbg !2847
  store i64 %end, i64* %end.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %end.addr, metadata !670, metadata !1979), !dbg !2848
  store i8* %reason, i8** %reason.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %reason.addr, metadata !671, metadata !1979), !dbg !2849
  %0 = load %struct._object*, %struct._object** @PyExc_UnicodeTranslateError, align 8, !dbg !2850, !tbaa !1975
  %1 = load i32*, i32** %object.addr, align 8, !dbg !2851, !tbaa !1975
  %2 = load i64, i64* %length.addr, align 8, !dbg !2852, !tbaa !2396
  %3 = load i64, i64* %start.addr, align 8, !dbg !2853, !tbaa !2396
  %4 = load i64, i64* %end.addr, align 8, !dbg !2854, !tbaa !2396
  %5 = load i8*, i8** %reason.addr, align 8, !dbg !2855, !tbaa !1975
  %call = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i32* %1, i64 %2, i64 %3, i64 %4, i8* %5), !dbg !2856
  ret %struct._object* %call, !dbg !2857
}

; Function Attrs: nounwind uwtable
define %struct._object* @_PyUnicodeTranslateError_Create(%struct._object* %object, i64 %start, i64 %end, i8* %reason) #0 {
entry:
  %object.addr = alloca %struct._object*, align 8
  %start.addr = alloca i64, align 8
  %end.addr = alloca i64, align 8
  %reason.addr = alloca i8*, align 8
  store %struct._object* %object, %struct._object** %object.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %object.addr, metadata !676, metadata !1979), !dbg !2858
  store i64 %start, i64* %start.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !677, metadata !1979), !dbg !2859
  store i64 %end, i64* %end.addr, align 8, !tbaa !2396
  call void @llvm.dbg.declare(metadata i64* %end.addr, metadata !678, metadata !1979), !dbg !2860
  store i8* %reason, i8** %reason.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %reason.addr, metadata !679, metadata !1979), !dbg !2861
  %0 = load %struct._object*, %struct._object** @PyExc_UnicodeTranslateError, align 8, !dbg !2862, !tbaa !1975
  %1 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !2863, !tbaa !1975
  %2 = load i64, i64* %start.addr, align 8, !dbg !2864, !tbaa !2396
  %3 = load i64, i64* %end.addr, align 8, !dbg !2865, !tbaa !2396
  %4 = load i8*, i8** %reason.addr, align 8, !dbg !2866, !tbaa !1975
  %call = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), %struct._object* %1, i64 %2, i64 %3, i8* %4), !dbg !2867
  ret %struct._object* %call, !dbg !2868
}

; Function Attrs: nounwind uwtable
define void @_PyExc_Init(%struct._object* %bltinmod) #0 {
entry:
  %bltinmod.addr = alloca %struct._object*, align 8
  %bdict = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp672 = alloca %struct._object*, align 8
  %_py_decref_tmp676 = alloca %struct._object*, align 8
  %_code = alloca %struct._object*, align 8
  %_py_decref_tmp868 = alloca %struct._object*, align 8
  %_code879 = alloca %struct._object*, align 8
  %_py_decref_tmp888 = alloca %struct._object*, align 8
  %_code899 = alloca %struct._object*, align 8
  %_py_decref_tmp908 = alloca %struct._object*, align 8
  %_code919 = alloca %struct._object*, align 8
  %_py_decref_tmp928 = alloca %struct._object*, align 8
  %_code943 = alloca %struct._object*, align 8
  %_py_decref_tmp952 = alloca %struct._object*, align 8
  %_code963 = alloca %struct._object*, align 8
  %_py_decref_tmp972 = alloca %struct._object*, align 8
  %_code987 = alloca %struct._object*, align 8
  %_py_decref_tmp996 = alloca %struct._object*, align 8
  %_code1011 = alloca %struct._object*, align 8
  %_py_decref_tmp1020 = alloca %struct._object*, align 8
  %_code1035 = alloca %struct._object*, align 8
  %_py_decref_tmp1044 = alloca %struct._object*, align 8
  %_code1059 = alloca %struct._object*, align 8
  %_py_decref_tmp1068 = alloca %struct._object*, align 8
  %_code1083 = alloca %struct._object*, align 8
  %_py_decref_tmp1092 = alloca %struct._object*, align 8
  %_code1107 = alloca %struct._object*, align 8
  %_py_decref_tmp1116 = alloca %struct._object*, align 8
  %_code1131 = alloca %struct._object*, align 8
  %_py_decref_tmp1140 = alloca %struct._object*, align 8
  %_code1155 = alloca %struct._object*, align 8
  %_py_decref_tmp1164 = alloca %struct._object*, align 8
  %_code1179 = alloca %struct._object*, align 8
  %_py_decref_tmp1188 = alloca %struct._object*, align 8
  %_code1203 = alloca %struct._object*, align 8
  %_py_decref_tmp1212 = alloca %struct._object*, align 8
  %_code1223 = alloca %struct._object*, align 8
  %_py_decref_tmp1232 = alloca %struct._object*, align 8
  %_code1247 = alloca %struct._object*, align 8
  %_py_decref_tmp1256 = alloca %struct._object*, align 8
  %_code1271 = alloca %struct._object*, align 8
  %_py_decref_tmp1280 = alloca %struct._object*, align 8
  %err_inst = alloca %struct.PyBaseExceptionObject*, align 8
  %args_tuple = alloca %struct._object*, align 8
  %exc_message = alloca %struct._object*, align 8
  %_py_decref_tmp1306 = alloca %struct._object*, align 8
  %_py_decref_tmp1322 = alloca %struct._object*, align 8
  store %struct._object* %bltinmod, %struct._object** %bltinmod.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %bltinmod.addr, metadata !682, metadata !1979), !dbg !2869
  %0 = bitcast %struct._object** %bdict to i8*, !dbg !2870
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2870
  call void @llvm.dbg.declare(metadata %struct._object** %bdict, metadata !683, metadata !1979), !dbg !2871
  %1 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BaseException, i32 0, i32 19), align 8, !dbg !2872, !tbaa !2308
  %and = and i64 %1, 4096, !dbg !2874
  %tobool = icmp ne i64 %and, 0, !dbg !2874
  br i1 %tobool, label %if.end.2, label %if.then, !dbg !2875

if.then:                                          ; preds = %entry
  %call = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_BaseException), !dbg !2876
  %cmp = icmp slt i32 %call, 0, !dbg !2880
  br i1 %cmp, label %if.then.1, label %if.end, !dbg !2881

if.then.1:                                        ; preds = %if.then
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !2882
  unreachable, !dbg !2882

if.end:                                           ; preds = %if.then
  %2 = load %struct._object*, %struct._object** @PyExc_BaseException, align 8, !dbg !2884, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 0, !dbg !2886
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !2887, !tbaa !2003
  %inc = add i64 %3, 1, !dbg !2887
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2887, !tbaa !2003
  br label %if.end.2, !dbg !2888

if.end.2:                                         ; preds = %if.end, %entry
  %4 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_Exception, i32 0, i32 19), align 8, !dbg !2889, !tbaa !2308
  %and3 = and i64 %4, 4096, !dbg !2891
  %tobool4 = icmp ne i64 %and3, 0, !dbg !2891
  br i1 %tobool4, label %if.end.12, label %if.then.5, !dbg !2892

if.then.5:                                        ; preds = %if.end.2
  %call6 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_Exception), !dbg !2893
  %cmp7 = icmp slt i32 %call6, 0, !dbg !2897
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !2898

if.then.8:                                        ; preds = %if.then.5
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !2899
  unreachable, !dbg !2899

if.end.9:                                         ; preds = %if.then.5
  %5 = load %struct._object*, %struct._object** @PyExc_Exception, align 8, !dbg !2901, !tbaa !1975
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !2903
  %6 = load i64, i64* %ob_refcnt10, align 8, !dbg !2904, !tbaa !2003
  %inc11 = add i64 %6, 1, !dbg !2904
  store i64 %inc11, i64* %ob_refcnt10, align 8, !dbg !2904, !tbaa !2003
  br label %if.end.12, !dbg !2905

if.end.12:                                        ; preds = %if.end.9, %if.end.2
  %7 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_TypeError, i32 0, i32 19), align 8, !dbg !2906, !tbaa !2308
  %and13 = and i64 %7, 4096, !dbg !2908
  %tobool14 = icmp ne i64 %and13, 0, !dbg !2908
  br i1 %tobool14, label %if.end.22, label %if.then.15, !dbg !2909

if.then.15:                                       ; preds = %if.end.12
  %call16 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_TypeError), !dbg !2910
  %cmp17 = icmp slt i32 %call16, 0, !dbg !2914
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !2915

if.then.18:                                       ; preds = %if.then.15
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !2916
  unreachable, !dbg !2916

if.end.19:                                        ; preds = %if.then.15
  %8 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2918, !tbaa !1975
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !2920
  %9 = load i64, i64* %ob_refcnt20, align 8, !dbg !2921, !tbaa !2003
  %inc21 = add i64 %9, 1, !dbg !2921
  store i64 %inc21, i64* %ob_refcnt20, align 8, !dbg !2921, !tbaa !2003
  br label %if.end.22, !dbg !2922

if.end.22:                                        ; preds = %if.end.19, %if.end.12
  %10 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_StopIteration, i32 0, i32 19), align 8, !dbg !2923, !tbaa !2308
  %and23 = and i64 %10, 4096, !dbg !2925
  %tobool24 = icmp ne i64 %and23, 0, !dbg !2925
  br i1 %tobool24, label %if.end.32, label %if.then.25, !dbg !2926

if.then.25:                                       ; preds = %if.end.22
  %call26 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_StopIteration), !dbg !2927
  %cmp27 = icmp slt i32 %call26, 0, !dbg !2931
  br i1 %cmp27, label %if.then.28, label %if.end.29, !dbg !2932

if.then.28:                                       ; preds = %if.then.25
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !2933
  unreachable, !dbg !2933

if.end.29:                                        ; preds = %if.then.25
  %11 = load %struct._object*, %struct._object** @PyExc_StopIteration, align 8, !dbg !2935, !tbaa !1975
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !2937
  %12 = load i64, i64* %ob_refcnt30, align 8, !dbg !2938, !tbaa !2003
  %inc31 = add i64 %12, 1, !dbg !2938
  store i64 %inc31, i64* %ob_refcnt30, align 8, !dbg !2938, !tbaa !2003
  br label %if.end.32, !dbg !2939

if.end.32:                                        ; preds = %if.end.29, %if.end.22
  %13 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_GeneratorExit, i32 0, i32 19), align 8, !dbg !2940, !tbaa !2308
  %and33 = and i64 %13, 4096, !dbg !2942
  %tobool34 = icmp ne i64 %and33, 0, !dbg !2942
  br i1 %tobool34, label %if.end.42, label %if.then.35, !dbg !2943

if.then.35:                                       ; preds = %if.end.32
  %call36 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_GeneratorExit), !dbg !2944
  %cmp37 = icmp slt i32 %call36, 0, !dbg !2948
  br i1 %cmp37, label %if.then.38, label %if.end.39, !dbg !2949

if.then.38:                                       ; preds = %if.then.35
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !2950
  unreachable, !dbg !2950

if.end.39:                                        ; preds = %if.then.35
  %14 = load %struct._object*, %struct._object** @PyExc_GeneratorExit, align 8, !dbg !2952, !tbaa !1975
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !2954
  %15 = load i64, i64* %ob_refcnt40, align 8, !dbg !2955, !tbaa !2003
  %inc41 = add i64 %15, 1, !dbg !2955
  store i64 %inc41, i64* %ob_refcnt40, align 8, !dbg !2955, !tbaa !2003
  br label %if.end.42, !dbg !2956

if.end.42:                                        ; preds = %if.end.39, %if.end.32
  %16 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SystemExit, i32 0, i32 19), align 8, !dbg !2957, !tbaa !2308
  %and43 = and i64 %16, 4096, !dbg !2959
  %tobool44 = icmp ne i64 %and43, 0, !dbg !2959
  br i1 %tobool44, label %if.end.52, label %if.then.45, !dbg !2960

if.then.45:                                       ; preds = %if.end.42
  %call46 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_SystemExit), !dbg !2961
  %cmp47 = icmp slt i32 %call46, 0, !dbg !2965
  br i1 %cmp47, label %if.then.48, label %if.end.49, !dbg !2966

if.then.48:                                       ; preds = %if.then.45
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !2967
  unreachable, !dbg !2967

if.end.49:                                        ; preds = %if.then.45
  %17 = load %struct._object*, %struct._object** @PyExc_SystemExit, align 8, !dbg !2969, !tbaa !1975
  %ob_refcnt50 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !2971
  %18 = load i64, i64* %ob_refcnt50, align 8, !dbg !2972, !tbaa !2003
  %inc51 = add i64 %18, 1, !dbg !2972
  store i64 %inc51, i64* %ob_refcnt50, align 8, !dbg !2972, !tbaa !2003
  br label %if.end.52, !dbg !2973

if.end.52:                                        ; preds = %if.end.49, %if.end.42
  %19 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_KeyboardInterrupt, i32 0, i32 19), align 8, !dbg !2974, !tbaa !2308
  %and53 = and i64 %19, 4096, !dbg !2976
  %tobool54 = icmp ne i64 %and53, 0, !dbg !2976
  br i1 %tobool54, label %if.end.62, label %if.then.55, !dbg !2977

if.then.55:                                       ; preds = %if.end.52
  %call56 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_KeyboardInterrupt), !dbg !2978
  %cmp57 = icmp slt i32 %call56, 0, !dbg !2982
  br i1 %cmp57, label %if.then.58, label %if.end.59, !dbg !2983

if.then.58:                                       ; preds = %if.then.55
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !2984
  unreachable, !dbg !2984

if.end.59:                                        ; preds = %if.then.55
  %20 = load %struct._object*, %struct._object** @PyExc_KeyboardInterrupt, align 8, !dbg !2986, !tbaa !1975
  %ob_refcnt60 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !2988
  %21 = load i64, i64* %ob_refcnt60, align 8, !dbg !2989, !tbaa !2003
  %inc61 = add i64 %21, 1, !dbg !2989
  store i64 %inc61, i64* %ob_refcnt60, align 8, !dbg !2989, !tbaa !2003
  br label %if.end.62, !dbg !2990

if.end.62:                                        ; preds = %if.end.59, %if.end.52
  %22 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ImportError, i32 0, i32 19), align 8, !dbg !2991, !tbaa !2308
  %and63 = and i64 %22, 4096, !dbg !2993
  %tobool64 = icmp ne i64 %and63, 0, !dbg !2993
  br i1 %tobool64, label %if.end.72, label %if.then.65, !dbg !2994

if.then.65:                                       ; preds = %if.end.62
  %call66 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ImportError), !dbg !2995
  %cmp67 = icmp slt i32 %call66, 0, !dbg !2999
  br i1 %cmp67, label %if.then.68, label %if.end.69, !dbg !3000

if.then.68:                                       ; preds = %if.then.65
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3001
  unreachable, !dbg !3001

if.end.69:                                        ; preds = %if.then.65
  %23 = load %struct._object*, %struct._object** @PyExc_ImportError, align 8, !dbg !3003, !tbaa !1975
  %ob_refcnt70 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !3005
  %24 = load i64, i64* %ob_refcnt70, align 8, !dbg !3006, !tbaa !2003
  %inc71 = add i64 %24, 1, !dbg !3006
  store i64 %inc71, i64* %ob_refcnt70, align 8, !dbg !3006, !tbaa !2003
  br label %if.end.72, !dbg !3007

if.end.72:                                        ; preds = %if.end.69, %if.end.62
  %25 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_OSError, i32 0, i32 19), align 8, !dbg !3008, !tbaa !2308
  %and73 = and i64 %25, 4096, !dbg !3010
  %tobool74 = icmp ne i64 %and73, 0, !dbg !3010
  br i1 %tobool74, label %if.end.82, label %if.then.75, !dbg !3011

if.then.75:                                       ; preds = %if.end.72
  %call76 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_OSError), !dbg !3012
  %cmp77 = icmp slt i32 %call76, 0, !dbg !3016
  br i1 %cmp77, label %if.then.78, label %if.end.79, !dbg !3017

if.then.78:                                       ; preds = %if.then.75
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3018
  unreachable, !dbg !3018

if.end.79:                                        ; preds = %if.then.75
  %26 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !3020, !tbaa !1975
  %ob_refcnt80 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !3022
  %27 = load i64, i64* %ob_refcnt80, align 8, !dbg !3023, !tbaa !2003
  %inc81 = add i64 %27, 1, !dbg !3023
  store i64 %inc81, i64* %ob_refcnt80, align 8, !dbg !3023, !tbaa !2003
  br label %if.end.82, !dbg !3024

if.end.82:                                        ; preds = %if.end.79, %if.end.72
  %28 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_EOFError, i32 0, i32 19), align 8, !dbg !3025, !tbaa !2308
  %and83 = and i64 %28, 4096, !dbg !3027
  %tobool84 = icmp ne i64 %and83, 0, !dbg !3027
  br i1 %tobool84, label %if.end.92, label %if.then.85, !dbg !3028

if.then.85:                                       ; preds = %if.end.82
  %call86 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_EOFError), !dbg !3029
  %cmp87 = icmp slt i32 %call86, 0, !dbg !3033
  br i1 %cmp87, label %if.then.88, label %if.end.89, !dbg !3034

if.then.88:                                       ; preds = %if.then.85
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3035
  unreachable, !dbg !3035

if.end.89:                                        ; preds = %if.then.85
  %29 = load %struct._object*, %struct._object** @PyExc_EOFError, align 8, !dbg !3037, !tbaa !1975
  %ob_refcnt90 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !3039
  %30 = load i64, i64* %ob_refcnt90, align 8, !dbg !3040, !tbaa !2003
  %inc91 = add i64 %30, 1, !dbg !3040
  store i64 %inc91, i64* %ob_refcnt90, align 8, !dbg !3040, !tbaa !2003
  br label %if.end.92, !dbg !3041

if.end.92:                                        ; preds = %if.end.89, %if.end.82
  %31 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_RuntimeError, i32 0, i32 19), align 8, !dbg !3042, !tbaa !2308
  %and93 = and i64 %31, 4096, !dbg !3044
  %tobool94 = icmp ne i64 %and93, 0, !dbg !3044
  br i1 %tobool94, label %if.end.102, label %if.then.95, !dbg !3045

if.then.95:                                       ; preds = %if.end.92
  %call96 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_RuntimeError), !dbg !3046
  %cmp97 = icmp slt i32 %call96, 0, !dbg !3050
  br i1 %cmp97, label %if.then.98, label %if.end.99, !dbg !3051

if.then.98:                                       ; preds = %if.then.95
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3052
  unreachable, !dbg !3052

if.end.99:                                        ; preds = %if.then.95
  %32 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !3054, !tbaa !1975
  %ob_refcnt100 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !3056
  %33 = load i64, i64* %ob_refcnt100, align 8, !dbg !3057, !tbaa !2003
  %inc101 = add i64 %33, 1, !dbg !3057
  store i64 %inc101, i64* %ob_refcnt100, align 8, !dbg !3057, !tbaa !2003
  br label %if.end.102, !dbg !3058

if.end.102:                                       ; preds = %if.end.99, %if.end.92
  %34 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_NotImplementedError, i32 0, i32 19), align 8, !dbg !3059, !tbaa !2308
  %and103 = and i64 %34, 4096, !dbg !3061
  %tobool104 = icmp ne i64 %and103, 0, !dbg !3061
  br i1 %tobool104, label %if.end.112, label %if.then.105, !dbg !3062

if.then.105:                                      ; preds = %if.end.102
  %call106 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_NotImplementedError), !dbg !3063
  %cmp107 = icmp slt i32 %call106, 0, !dbg !3067
  br i1 %cmp107, label %if.then.108, label %if.end.109, !dbg !3068

if.then.108:                                      ; preds = %if.then.105
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3069
  unreachable, !dbg !3069

if.end.109:                                       ; preds = %if.then.105
  %35 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !3071, !tbaa !1975
  %ob_refcnt110 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !3073
  %36 = load i64, i64* %ob_refcnt110, align 8, !dbg !3074, !tbaa !2003
  %inc111 = add i64 %36, 1, !dbg !3074
  store i64 %inc111, i64* %ob_refcnt110, align 8, !dbg !3074, !tbaa !2003
  br label %if.end.112, !dbg !3075

if.end.112:                                       ; preds = %if.end.109, %if.end.102
  %37 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_NameError, i32 0, i32 19), align 8, !dbg !3076, !tbaa !2308
  %and113 = and i64 %37, 4096, !dbg !3078
  %tobool114 = icmp ne i64 %and113, 0, !dbg !3078
  br i1 %tobool114, label %if.end.122, label %if.then.115, !dbg !3079

if.then.115:                                      ; preds = %if.end.112
  %call116 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_NameError), !dbg !3080
  %cmp117 = icmp slt i32 %call116, 0, !dbg !3084
  br i1 %cmp117, label %if.then.118, label %if.end.119, !dbg !3085

if.then.118:                                      ; preds = %if.then.115
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3086
  unreachable, !dbg !3086

if.end.119:                                       ; preds = %if.then.115
  %38 = load %struct._object*, %struct._object** @PyExc_NameError, align 8, !dbg !3088, !tbaa !1975
  %ob_refcnt120 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !3090
  %39 = load i64, i64* %ob_refcnt120, align 8, !dbg !3091, !tbaa !2003
  %inc121 = add i64 %39, 1, !dbg !3091
  store i64 %inc121, i64* %ob_refcnt120, align 8, !dbg !3091, !tbaa !2003
  br label %if.end.122, !dbg !3092

if.end.122:                                       ; preds = %if.end.119, %if.end.112
  %40 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnboundLocalError, i32 0, i32 19), align 8, !dbg !3093, !tbaa !2308
  %and123 = and i64 %40, 4096, !dbg !3095
  %tobool124 = icmp ne i64 %and123, 0, !dbg !3095
  br i1 %tobool124, label %if.end.132, label %if.then.125, !dbg !3096

if.then.125:                                      ; preds = %if.end.122
  %call126 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_UnboundLocalError), !dbg !3097
  %cmp127 = icmp slt i32 %call126, 0, !dbg !3101
  br i1 %cmp127, label %if.then.128, label %if.end.129, !dbg !3102

if.then.128:                                      ; preds = %if.then.125
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3103
  unreachable, !dbg !3103

if.end.129:                                       ; preds = %if.then.125
  %41 = load %struct._object*, %struct._object** @PyExc_UnboundLocalError, align 8, !dbg !3105, !tbaa !1975
  %ob_refcnt130 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !3107
  %42 = load i64, i64* %ob_refcnt130, align 8, !dbg !3108, !tbaa !2003
  %inc131 = add i64 %42, 1, !dbg !3108
  store i64 %inc131, i64* %ob_refcnt130, align 8, !dbg !3108, !tbaa !2003
  br label %if.end.132, !dbg !3109

if.end.132:                                       ; preds = %if.end.129, %if.end.122
  %43 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_AttributeError, i32 0, i32 19), align 8, !dbg !3110, !tbaa !2308
  %and133 = and i64 %43, 4096, !dbg !3112
  %tobool134 = icmp ne i64 %and133, 0, !dbg !3112
  br i1 %tobool134, label %if.end.142, label %if.then.135, !dbg !3113

if.then.135:                                      ; preds = %if.end.132
  %call136 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_AttributeError), !dbg !3114
  %cmp137 = icmp slt i32 %call136, 0, !dbg !3118
  br i1 %cmp137, label %if.then.138, label %if.end.139, !dbg !3119

if.then.138:                                      ; preds = %if.then.135
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3120
  unreachable, !dbg !3120

if.end.139:                                       ; preds = %if.then.135
  %44 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !3122, !tbaa !1975
  %ob_refcnt140 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !3124
  %45 = load i64, i64* %ob_refcnt140, align 8, !dbg !3125, !tbaa !2003
  %inc141 = add i64 %45, 1, !dbg !3125
  store i64 %inc141, i64* %ob_refcnt140, align 8, !dbg !3125, !tbaa !2003
  br label %if.end.142, !dbg !3126

if.end.142:                                       ; preds = %if.end.139, %if.end.132
  %46 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SyntaxError, i32 0, i32 19), align 8, !dbg !3127, !tbaa !2308
  %and143 = and i64 %46, 4096, !dbg !3129
  %tobool144 = icmp ne i64 %and143, 0, !dbg !3129
  br i1 %tobool144, label %if.end.152, label %if.then.145, !dbg !3130

if.then.145:                                      ; preds = %if.end.142
  %call146 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_SyntaxError), !dbg !3131
  %cmp147 = icmp slt i32 %call146, 0, !dbg !3135
  br i1 %cmp147, label %if.then.148, label %if.end.149, !dbg !3136

if.then.148:                                      ; preds = %if.then.145
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3137
  unreachable, !dbg !3137

if.end.149:                                       ; preds = %if.then.145
  %47 = load %struct._object*, %struct._object** @PyExc_SyntaxError, align 8, !dbg !3139, !tbaa !1975
  %ob_refcnt150 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0, !dbg !3141
  %48 = load i64, i64* %ob_refcnt150, align 8, !dbg !3142, !tbaa !2003
  %inc151 = add i64 %48, 1, !dbg !3142
  store i64 %inc151, i64* %ob_refcnt150, align 8, !dbg !3142, !tbaa !2003
  br label %if.end.152, !dbg !3143

if.end.152:                                       ; preds = %if.end.149, %if.end.142
  %49 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_IndentationError, i32 0, i32 19), align 8, !dbg !3144, !tbaa !2308
  %and153 = and i64 %49, 4096, !dbg !3146
  %tobool154 = icmp ne i64 %and153, 0, !dbg !3146
  br i1 %tobool154, label %if.end.162, label %if.then.155, !dbg !3147

if.then.155:                                      ; preds = %if.end.152
  %call156 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_IndentationError), !dbg !3148
  %cmp157 = icmp slt i32 %call156, 0, !dbg !3152
  br i1 %cmp157, label %if.then.158, label %if.end.159, !dbg !3153

if.then.158:                                      ; preds = %if.then.155
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3154
  unreachable, !dbg !3154

if.end.159:                                       ; preds = %if.then.155
  %50 = load %struct._object*, %struct._object** @PyExc_IndentationError, align 8, !dbg !3156, !tbaa !1975
  %ob_refcnt160 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !3158
  %51 = load i64, i64* %ob_refcnt160, align 8, !dbg !3159, !tbaa !2003
  %inc161 = add i64 %51, 1, !dbg !3159
  store i64 %inc161, i64* %ob_refcnt160, align 8, !dbg !3159, !tbaa !2003
  br label %if.end.162, !dbg !3160

if.end.162:                                       ; preds = %if.end.159, %if.end.152
  %52 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_TabError, i32 0, i32 19), align 8, !dbg !3161, !tbaa !2308
  %and163 = and i64 %52, 4096, !dbg !3163
  %tobool164 = icmp ne i64 %and163, 0, !dbg !3163
  br i1 %tobool164, label %if.end.172, label %if.then.165, !dbg !3164

if.then.165:                                      ; preds = %if.end.162
  %call166 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_TabError), !dbg !3165
  %cmp167 = icmp slt i32 %call166, 0, !dbg !3169
  br i1 %cmp167, label %if.then.168, label %if.end.169, !dbg !3170

if.then.168:                                      ; preds = %if.then.165
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3171
  unreachable, !dbg !3171

if.end.169:                                       ; preds = %if.then.165
  %53 = load %struct._object*, %struct._object** @PyExc_TabError, align 8, !dbg !3173, !tbaa !1975
  %ob_refcnt170 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !3175
  %54 = load i64, i64* %ob_refcnt170, align 8, !dbg !3176, !tbaa !2003
  %inc171 = add i64 %54, 1, !dbg !3176
  store i64 %inc171, i64* %ob_refcnt170, align 8, !dbg !3176, !tbaa !2003
  br label %if.end.172, !dbg !3177

if.end.172:                                       ; preds = %if.end.169, %if.end.162
  %55 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_LookupError, i32 0, i32 19), align 8, !dbg !3178, !tbaa !2308
  %and173 = and i64 %55, 4096, !dbg !3180
  %tobool174 = icmp ne i64 %and173, 0, !dbg !3180
  br i1 %tobool174, label %if.end.182, label %if.then.175, !dbg !3181

if.then.175:                                      ; preds = %if.end.172
  %call176 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_LookupError), !dbg !3182
  %cmp177 = icmp slt i32 %call176, 0, !dbg !3186
  br i1 %cmp177, label %if.then.178, label %if.end.179, !dbg !3187

if.then.178:                                      ; preds = %if.then.175
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3188
  unreachable, !dbg !3188

if.end.179:                                       ; preds = %if.then.175
  %56 = load %struct._object*, %struct._object** @PyExc_LookupError, align 8, !dbg !3190, !tbaa !1975
  %ob_refcnt180 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0, !dbg !3192
  %57 = load i64, i64* %ob_refcnt180, align 8, !dbg !3193, !tbaa !2003
  %inc181 = add i64 %57, 1, !dbg !3193
  store i64 %inc181, i64* %ob_refcnt180, align 8, !dbg !3193, !tbaa !2003
  br label %if.end.182, !dbg !3194

if.end.182:                                       ; preds = %if.end.179, %if.end.172
  %58 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_IndexError, i32 0, i32 19), align 8, !dbg !3195, !tbaa !2308
  %and183 = and i64 %58, 4096, !dbg !3197
  %tobool184 = icmp ne i64 %and183, 0, !dbg !3197
  br i1 %tobool184, label %if.end.192, label %if.then.185, !dbg !3198

if.then.185:                                      ; preds = %if.end.182
  %call186 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_IndexError), !dbg !3199
  %cmp187 = icmp slt i32 %call186, 0, !dbg !3203
  br i1 %cmp187, label %if.then.188, label %if.end.189, !dbg !3204

if.then.188:                                      ; preds = %if.then.185
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3205
  unreachable, !dbg !3205

if.end.189:                                       ; preds = %if.then.185
  %59 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !3207, !tbaa !1975
  %ob_refcnt190 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 0, !dbg !3209
  %60 = load i64, i64* %ob_refcnt190, align 8, !dbg !3210, !tbaa !2003
  %inc191 = add i64 %60, 1, !dbg !3210
  store i64 %inc191, i64* %ob_refcnt190, align 8, !dbg !3210, !tbaa !2003
  br label %if.end.192, !dbg !3211

if.end.192:                                       ; preds = %if.end.189, %if.end.182
  %61 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_KeyError, i32 0, i32 19), align 8, !dbg !3212, !tbaa !2308
  %and193 = and i64 %61, 4096, !dbg !3214
  %tobool194 = icmp ne i64 %and193, 0, !dbg !3214
  br i1 %tobool194, label %if.end.202, label %if.then.195, !dbg !3215

if.then.195:                                      ; preds = %if.end.192
  %call196 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_KeyError), !dbg !3216
  %cmp197 = icmp slt i32 %call196, 0, !dbg !3220
  br i1 %cmp197, label %if.then.198, label %if.end.199, !dbg !3221

if.then.198:                                      ; preds = %if.then.195
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3222
  unreachable, !dbg !3222

if.end.199:                                       ; preds = %if.then.195
  %62 = load %struct._object*, %struct._object** @PyExc_KeyError, align 8, !dbg !3224, !tbaa !1975
  %ob_refcnt200 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0, !dbg !3226
  %63 = load i64, i64* %ob_refcnt200, align 8, !dbg !3227, !tbaa !2003
  %inc201 = add i64 %63, 1, !dbg !3227
  store i64 %inc201, i64* %ob_refcnt200, align 8, !dbg !3227, !tbaa !2003
  br label %if.end.202, !dbg !3228

if.end.202:                                       ; preds = %if.end.199, %if.end.192
  %64 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ValueError, i32 0, i32 19), align 8, !dbg !3229, !tbaa !2308
  %and203 = and i64 %64, 4096, !dbg !3231
  %tobool204 = icmp ne i64 %and203, 0, !dbg !3231
  br i1 %tobool204, label %if.end.212, label %if.then.205, !dbg !3232

if.then.205:                                      ; preds = %if.end.202
  %call206 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ValueError), !dbg !3233
  %cmp207 = icmp slt i32 %call206, 0, !dbg !3237
  br i1 %cmp207, label %if.then.208, label %if.end.209, !dbg !3238

if.then.208:                                      ; preds = %if.then.205
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3239
  unreachable, !dbg !3239

if.end.209:                                       ; preds = %if.then.205
  %65 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3241, !tbaa !1975
  %ob_refcnt210 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !3243
  %66 = load i64, i64* %ob_refcnt210, align 8, !dbg !3244, !tbaa !2003
  %inc211 = add i64 %66, 1, !dbg !3244
  store i64 %inc211, i64* %ob_refcnt210, align 8, !dbg !3244, !tbaa !2003
  br label %if.end.212, !dbg !3245

if.end.212:                                       ; preds = %if.end.209, %if.end.202
  %67 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeError, i32 0, i32 19), align 8, !dbg !3246, !tbaa !2308
  %and213 = and i64 %67, 4096, !dbg !3248
  %tobool214 = icmp ne i64 %and213, 0, !dbg !3248
  br i1 %tobool214, label %if.end.222, label %if.then.215, !dbg !3249

if.then.215:                                      ; preds = %if.end.212
  %call216 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_UnicodeError), !dbg !3250
  %cmp217 = icmp slt i32 %call216, 0, !dbg !3254
  br i1 %cmp217, label %if.then.218, label %if.end.219, !dbg !3255

if.then.218:                                      ; preds = %if.then.215
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3256
  unreachable, !dbg !3256

if.end.219:                                       ; preds = %if.then.215
  %68 = load %struct._object*, %struct._object** @PyExc_UnicodeError, align 8, !dbg !3258, !tbaa !1975
  %ob_refcnt220 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0, !dbg !3260
  %69 = load i64, i64* %ob_refcnt220, align 8, !dbg !3261, !tbaa !2003
  %inc221 = add i64 %69, 1, !dbg !3261
  store i64 %inc221, i64* %ob_refcnt220, align 8, !dbg !3261, !tbaa !2003
  br label %if.end.222, !dbg !3262

if.end.222:                                       ; preds = %if.end.219, %if.end.212
  %70 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeEncodeError, i32 0, i32 19), align 8, !dbg !3263, !tbaa !2308
  %and223 = and i64 %70, 4096, !dbg !3265
  %tobool224 = icmp ne i64 %and223, 0, !dbg !3265
  br i1 %tobool224, label %if.end.232, label %if.then.225, !dbg !3266

if.then.225:                                      ; preds = %if.end.222
  %call226 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_UnicodeEncodeError), !dbg !3267
  %cmp227 = icmp slt i32 %call226, 0, !dbg !3271
  br i1 %cmp227, label %if.then.228, label %if.end.229, !dbg !3272

if.then.228:                                      ; preds = %if.then.225
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3273
  unreachable, !dbg !3273

if.end.229:                                       ; preds = %if.then.225
  %71 = load %struct._object*, %struct._object** @PyExc_UnicodeEncodeError, align 8, !dbg !3275, !tbaa !1975
  %ob_refcnt230 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0, !dbg !3277
  %72 = load i64, i64* %ob_refcnt230, align 8, !dbg !3278, !tbaa !2003
  %inc231 = add i64 %72, 1, !dbg !3278
  store i64 %inc231, i64* %ob_refcnt230, align 8, !dbg !3278, !tbaa !2003
  br label %if.end.232, !dbg !3279

if.end.232:                                       ; preds = %if.end.229, %if.end.222
  %73 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeDecodeError, i32 0, i32 19), align 8, !dbg !3280, !tbaa !2308
  %and233 = and i64 %73, 4096, !dbg !3282
  %tobool234 = icmp ne i64 %and233, 0, !dbg !3282
  br i1 %tobool234, label %if.end.242, label %if.then.235, !dbg !3283

if.then.235:                                      ; preds = %if.end.232
  %call236 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_UnicodeDecodeError), !dbg !3284
  %cmp237 = icmp slt i32 %call236, 0, !dbg !3288
  br i1 %cmp237, label %if.then.238, label %if.end.239, !dbg !3289

if.then.238:                                      ; preds = %if.then.235
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3290
  unreachable, !dbg !3290

if.end.239:                                       ; preds = %if.then.235
  %74 = load %struct._object*, %struct._object** @PyExc_UnicodeDecodeError, align 8, !dbg !3292, !tbaa !1975
  %ob_refcnt240 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !3294
  %75 = load i64, i64* %ob_refcnt240, align 8, !dbg !3295, !tbaa !2003
  %inc241 = add i64 %75, 1, !dbg !3295
  store i64 %inc241, i64* %ob_refcnt240, align 8, !dbg !3295, !tbaa !2003
  br label %if.end.242, !dbg !3296

if.end.242:                                       ; preds = %if.end.239, %if.end.232
  %76 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeTranslateError, i32 0, i32 19), align 8, !dbg !3297, !tbaa !2308
  %and243 = and i64 %76, 4096, !dbg !3299
  %tobool244 = icmp ne i64 %and243, 0, !dbg !3299
  br i1 %tobool244, label %if.end.252, label %if.then.245, !dbg !3300

if.then.245:                                      ; preds = %if.end.242
  %call246 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_UnicodeTranslateError), !dbg !3301
  %cmp247 = icmp slt i32 %call246, 0, !dbg !3305
  br i1 %cmp247, label %if.then.248, label %if.end.249, !dbg !3306

if.then.248:                                      ; preds = %if.then.245
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3307
  unreachable, !dbg !3307

if.end.249:                                       ; preds = %if.then.245
  %77 = load %struct._object*, %struct._object** @PyExc_UnicodeTranslateError, align 8, !dbg !3309, !tbaa !1975
  %ob_refcnt250 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 0, !dbg !3311
  %78 = load i64, i64* %ob_refcnt250, align 8, !dbg !3312, !tbaa !2003
  %inc251 = add i64 %78, 1, !dbg !3312
  store i64 %inc251, i64* %ob_refcnt250, align 8, !dbg !3312, !tbaa !2003
  br label %if.end.252, !dbg !3313

if.end.252:                                       ; preds = %if.end.249, %if.end.242
  %79 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_AssertionError, i32 0, i32 19), align 8, !dbg !3314, !tbaa !2308
  %and253 = and i64 %79, 4096, !dbg !3316
  %tobool254 = icmp ne i64 %and253, 0, !dbg !3316
  br i1 %tobool254, label %if.end.262, label %if.then.255, !dbg !3317

if.then.255:                                      ; preds = %if.end.252
  %call256 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_AssertionError), !dbg !3318
  %cmp257 = icmp slt i32 %call256, 0, !dbg !3322
  br i1 %cmp257, label %if.then.258, label %if.end.259, !dbg !3323

if.then.258:                                      ; preds = %if.then.255
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3324
  unreachable, !dbg !3324

if.end.259:                                       ; preds = %if.then.255
  %80 = load %struct._object*, %struct._object** @PyExc_AssertionError, align 8, !dbg !3326, !tbaa !1975
  %ob_refcnt260 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0, !dbg !3328
  %81 = load i64, i64* %ob_refcnt260, align 8, !dbg !3329, !tbaa !2003
  %inc261 = add i64 %81, 1, !dbg !3329
  store i64 %inc261, i64* %ob_refcnt260, align 8, !dbg !3329, !tbaa !2003
  br label %if.end.262, !dbg !3330

if.end.262:                                       ; preds = %if.end.259, %if.end.252
  %82 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ArithmeticError, i32 0, i32 19), align 8, !dbg !3331, !tbaa !2308
  %and263 = and i64 %82, 4096, !dbg !3333
  %tobool264 = icmp ne i64 %and263, 0, !dbg !3333
  br i1 %tobool264, label %if.end.272, label %if.then.265, !dbg !3334

if.then.265:                                      ; preds = %if.end.262
  %call266 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ArithmeticError), !dbg !3335
  %cmp267 = icmp slt i32 %call266, 0, !dbg !3339
  br i1 %cmp267, label %if.then.268, label %if.end.269, !dbg !3340

if.then.268:                                      ; preds = %if.then.265
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3341
  unreachable, !dbg !3341

if.end.269:                                       ; preds = %if.then.265
  %83 = load %struct._object*, %struct._object** @PyExc_ArithmeticError, align 8, !dbg !3343, !tbaa !1975
  %ob_refcnt270 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !3345
  %84 = load i64, i64* %ob_refcnt270, align 8, !dbg !3346, !tbaa !2003
  %inc271 = add i64 %84, 1, !dbg !3346
  store i64 %inc271, i64* %ob_refcnt270, align 8, !dbg !3346, !tbaa !2003
  br label %if.end.272, !dbg !3347

if.end.272:                                       ; preds = %if.end.269, %if.end.262
  %85 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FloatingPointError, i32 0, i32 19), align 8, !dbg !3348, !tbaa !2308
  %and273 = and i64 %85, 4096, !dbg !3350
  %tobool274 = icmp ne i64 %and273, 0, !dbg !3350
  br i1 %tobool274, label %if.end.282, label %if.then.275, !dbg !3351

if.then.275:                                      ; preds = %if.end.272
  %call276 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_FloatingPointError), !dbg !3352
  %cmp277 = icmp slt i32 %call276, 0, !dbg !3356
  br i1 %cmp277, label %if.then.278, label %if.end.279, !dbg !3357

if.then.278:                                      ; preds = %if.then.275
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3358
  unreachable, !dbg !3358

if.end.279:                                       ; preds = %if.then.275
  %86 = load %struct._object*, %struct._object** @PyExc_FloatingPointError, align 8, !dbg !3360, !tbaa !1975
  %ob_refcnt280 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 0, !dbg !3362
  %87 = load i64, i64* %ob_refcnt280, align 8, !dbg !3363, !tbaa !2003
  %inc281 = add i64 %87, 1, !dbg !3363
  store i64 %inc281, i64* %ob_refcnt280, align 8, !dbg !3363, !tbaa !2003
  br label %if.end.282, !dbg !3364

if.end.282:                                       ; preds = %if.end.279, %if.end.272
  %88 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_OverflowError, i32 0, i32 19), align 8, !dbg !3365, !tbaa !2308
  %and283 = and i64 %88, 4096, !dbg !3367
  %tobool284 = icmp ne i64 %and283, 0, !dbg !3367
  br i1 %tobool284, label %if.end.292, label %if.then.285, !dbg !3368

if.then.285:                                      ; preds = %if.end.282
  %call286 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_OverflowError), !dbg !3369
  %cmp287 = icmp slt i32 %call286, 0, !dbg !3373
  br i1 %cmp287, label %if.then.288, label %if.end.289, !dbg !3374

if.then.288:                                      ; preds = %if.then.285
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3375
  unreachable, !dbg !3375

if.end.289:                                       ; preds = %if.then.285
  %89 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !3377, !tbaa !1975
  %ob_refcnt290 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 0, !dbg !3379
  %90 = load i64, i64* %ob_refcnt290, align 8, !dbg !3380, !tbaa !2003
  %inc291 = add i64 %90, 1, !dbg !3380
  store i64 %inc291, i64* %ob_refcnt290, align 8, !dbg !3380, !tbaa !2003
  br label %if.end.292, !dbg !3381

if.end.292:                                       ; preds = %if.end.289, %if.end.282
  %91 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ZeroDivisionError, i32 0, i32 19), align 8, !dbg !3382, !tbaa !2308
  %and293 = and i64 %91, 4096, !dbg !3384
  %tobool294 = icmp ne i64 %and293, 0, !dbg !3384
  br i1 %tobool294, label %if.end.302, label %if.then.295, !dbg !3385

if.then.295:                                      ; preds = %if.end.292
  %call296 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ZeroDivisionError), !dbg !3386
  %cmp297 = icmp slt i32 %call296, 0, !dbg !3390
  br i1 %cmp297, label %if.then.298, label %if.end.299, !dbg !3391

if.then.298:                                      ; preds = %if.then.295
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3392
  unreachable, !dbg !3392

if.end.299:                                       ; preds = %if.then.295
  %92 = load %struct._object*, %struct._object** @PyExc_ZeroDivisionError, align 8, !dbg !3394, !tbaa !1975
  %ob_refcnt300 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 0, !dbg !3396
  %93 = load i64, i64* %ob_refcnt300, align 8, !dbg !3397, !tbaa !2003
  %inc301 = add i64 %93, 1, !dbg !3397
  store i64 %inc301, i64* %ob_refcnt300, align 8, !dbg !3397, !tbaa !2003
  br label %if.end.302, !dbg !3398

if.end.302:                                       ; preds = %if.end.299, %if.end.292
  %94 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SystemError, i32 0, i32 19), align 8, !dbg !3399, !tbaa !2308
  %and303 = and i64 %94, 4096, !dbg !3401
  %tobool304 = icmp ne i64 %and303, 0, !dbg !3401
  br i1 %tobool304, label %if.end.312, label %if.then.305, !dbg !3402

if.then.305:                                      ; preds = %if.end.302
  %call306 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_SystemError), !dbg !3403
  %cmp307 = icmp slt i32 %call306, 0, !dbg !3407
  br i1 %cmp307, label %if.then.308, label %if.end.309, !dbg !3408

if.then.308:                                      ; preds = %if.then.305
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3409
  unreachable, !dbg !3409

if.end.309:                                       ; preds = %if.then.305
  %95 = load %struct._object*, %struct._object** @PyExc_SystemError, align 8, !dbg !3411, !tbaa !1975
  %ob_refcnt310 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !3413
  %96 = load i64, i64* %ob_refcnt310, align 8, !dbg !3414, !tbaa !2003
  %inc311 = add i64 %96, 1, !dbg !3414
  store i64 %inc311, i64* %ob_refcnt310, align 8, !dbg !3414, !tbaa !2003
  br label %if.end.312, !dbg !3415

if.end.312:                                       ; preds = %if.end.309, %if.end.302
  %97 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ReferenceError, i32 0, i32 19), align 8, !dbg !3416, !tbaa !2308
  %and313 = and i64 %97, 4096, !dbg !3418
  %tobool314 = icmp ne i64 %and313, 0, !dbg !3418
  br i1 %tobool314, label %if.end.322, label %if.then.315, !dbg !3419

if.then.315:                                      ; preds = %if.end.312
  %call316 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ReferenceError), !dbg !3420
  %cmp317 = icmp slt i32 %call316, 0, !dbg !3424
  br i1 %cmp317, label %if.then.318, label %if.end.319, !dbg !3425

if.then.318:                                      ; preds = %if.then.315
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3426
  unreachable, !dbg !3426

if.end.319:                                       ; preds = %if.then.315
  %98 = load %struct._object*, %struct._object** @PyExc_ReferenceError, align 8, !dbg !3428, !tbaa !1975
  %ob_refcnt320 = getelementptr inbounds %struct._object, %struct._object* %98, i32 0, i32 0, !dbg !3430
  %99 = load i64, i64* %ob_refcnt320, align 8, !dbg !3431, !tbaa !2003
  %inc321 = add i64 %99, 1, !dbg !3431
  store i64 %inc321, i64* %ob_refcnt320, align 8, !dbg !3431, !tbaa !2003
  br label %if.end.322, !dbg !3432

if.end.322:                                       ; preds = %if.end.319, %if.end.312
  %100 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BufferError, i32 0, i32 19), align 8, !dbg !3433, !tbaa !2308
  %and323 = and i64 %100, 4096, !dbg !3435
  %tobool324 = icmp ne i64 %and323, 0, !dbg !3435
  br i1 %tobool324, label %if.end.332, label %if.then.325, !dbg !3436

if.then.325:                                      ; preds = %if.end.322
  %call326 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_BufferError), !dbg !3437
  %cmp327 = icmp slt i32 %call326, 0, !dbg !3441
  br i1 %cmp327, label %if.then.328, label %if.end.329, !dbg !3442

if.then.328:                                      ; preds = %if.then.325
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3443
  unreachable, !dbg !3443

if.end.329:                                       ; preds = %if.then.325
  %101 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !3445, !tbaa !1975
  %ob_refcnt330 = getelementptr inbounds %struct._object, %struct._object* %101, i32 0, i32 0, !dbg !3447
  %102 = load i64, i64* %ob_refcnt330, align 8, !dbg !3448, !tbaa !2003
  %inc331 = add i64 %102, 1, !dbg !3448
  store i64 %inc331, i64* %ob_refcnt330, align 8, !dbg !3448, !tbaa !2003
  br label %if.end.332, !dbg !3449

if.end.332:                                       ; preds = %if.end.329, %if.end.322
  %103 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_MemoryError, i32 0, i32 19), align 8, !dbg !3450, !tbaa !2308
  %and333 = and i64 %103, 4096, !dbg !3452
  %tobool334 = icmp ne i64 %and333, 0, !dbg !3452
  br i1 %tobool334, label %if.end.342, label %if.then.335, !dbg !3453

if.then.335:                                      ; preds = %if.end.332
  %call336 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_MemoryError), !dbg !3454
  %cmp337 = icmp slt i32 %call336, 0, !dbg !3458
  br i1 %cmp337, label %if.then.338, label %if.end.339, !dbg !3459

if.then.338:                                      ; preds = %if.then.335
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3460
  unreachable, !dbg !3460

if.end.339:                                       ; preds = %if.then.335
  %104 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !3462, !tbaa !1975
  %ob_refcnt340 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 0, !dbg !3464
  %105 = load i64, i64* %ob_refcnt340, align 8, !dbg !3465, !tbaa !2003
  %inc341 = add i64 %105, 1, !dbg !3465
  store i64 %inc341, i64* %ob_refcnt340, align 8, !dbg !3465, !tbaa !2003
  br label %if.end.342, !dbg !3466

if.end.342:                                       ; preds = %if.end.339, %if.end.332
  %106 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BufferError, i32 0, i32 19), align 8, !dbg !3467, !tbaa !2308
  %and343 = and i64 %106, 4096, !dbg !3469
  %tobool344 = icmp ne i64 %and343, 0, !dbg !3469
  br i1 %tobool344, label %if.end.352, label %if.then.345, !dbg !3470

if.then.345:                                      ; preds = %if.end.342
  %call346 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_BufferError), !dbg !3471
  %cmp347 = icmp slt i32 %call346, 0, !dbg !3475
  br i1 %cmp347, label %if.then.348, label %if.end.349, !dbg !3476

if.then.348:                                      ; preds = %if.then.345
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3477
  unreachable, !dbg !3477

if.end.349:                                       ; preds = %if.then.345
  %107 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !3479, !tbaa !1975
  %ob_refcnt350 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 0, !dbg !3481
  %108 = load i64, i64* %ob_refcnt350, align 8, !dbg !3482, !tbaa !2003
  %inc351 = add i64 %108, 1, !dbg !3482
  store i64 %inc351, i64* %ob_refcnt350, align 8, !dbg !3482, !tbaa !2003
  br label %if.end.352, !dbg !3483

if.end.352:                                       ; preds = %if.end.349, %if.end.342
  %109 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_Warning, i32 0, i32 19), align 8, !dbg !3484, !tbaa !2308
  %and353 = and i64 %109, 4096, !dbg !3486
  %tobool354 = icmp ne i64 %and353, 0, !dbg !3486
  br i1 %tobool354, label %if.end.362, label %if.then.355, !dbg !3487

if.then.355:                                      ; preds = %if.end.352
  %call356 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_Warning), !dbg !3488
  %cmp357 = icmp slt i32 %call356, 0, !dbg !3492
  br i1 %cmp357, label %if.then.358, label %if.end.359, !dbg !3493

if.then.358:                                      ; preds = %if.then.355
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3494
  unreachable, !dbg !3494

if.end.359:                                       ; preds = %if.then.355
  %110 = load %struct._object*, %struct._object** @PyExc_Warning, align 8, !dbg !3496, !tbaa !1975
  %ob_refcnt360 = getelementptr inbounds %struct._object, %struct._object* %110, i32 0, i32 0, !dbg !3498
  %111 = load i64, i64* %ob_refcnt360, align 8, !dbg !3499, !tbaa !2003
  %inc361 = add i64 %111, 1, !dbg !3499
  store i64 %inc361, i64* %ob_refcnt360, align 8, !dbg !3499, !tbaa !2003
  br label %if.end.362, !dbg !3500

if.end.362:                                       ; preds = %if.end.359, %if.end.352
  %112 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UserWarning, i32 0, i32 19), align 8, !dbg !3501, !tbaa !2308
  %and363 = and i64 %112, 4096, !dbg !3503
  %tobool364 = icmp ne i64 %and363, 0, !dbg !3503
  br i1 %tobool364, label %if.end.372, label %if.then.365, !dbg !3504

if.then.365:                                      ; preds = %if.end.362
  %call366 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_UserWarning), !dbg !3505
  %cmp367 = icmp slt i32 %call366, 0, !dbg !3509
  br i1 %cmp367, label %if.then.368, label %if.end.369, !dbg !3510

if.then.368:                                      ; preds = %if.then.365
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3511
  unreachable, !dbg !3511

if.end.369:                                       ; preds = %if.then.365
  %113 = load %struct._object*, %struct._object** @PyExc_UserWarning, align 8, !dbg !3513, !tbaa !1975
  %ob_refcnt370 = getelementptr inbounds %struct._object, %struct._object* %113, i32 0, i32 0, !dbg !3515
  %114 = load i64, i64* %ob_refcnt370, align 8, !dbg !3516, !tbaa !2003
  %inc371 = add i64 %114, 1, !dbg !3516
  store i64 %inc371, i64* %ob_refcnt370, align 8, !dbg !3516, !tbaa !2003
  br label %if.end.372, !dbg !3517

if.end.372:                                       ; preds = %if.end.369, %if.end.362
  %115 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_DeprecationWarning, i32 0, i32 19), align 8, !dbg !3518, !tbaa !2308
  %and373 = and i64 %115, 4096, !dbg !3520
  %tobool374 = icmp ne i64 %and373, 0, !dbg !3520
  br i1 %tobool374, label %if.end.382, label %if.then.375, !dbg !3521

if.then.375:                                      ; preds = %if.end.372
  %call376 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_DeprecationWarning), !dbg !3522
  %cmp377 = icmp slt i32 %call376, 0, !dbg !3526
  br i1 %cmp377, label %if.then.378, label %if.end.379, !dbg !3527

if.then.378:                                      ; preds = %if.then.375
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3528
  unreachable, !dbg !3528

if.end.379:                                       ; preds = %if.then.375
  %116 = load %struct._object*, %struct._object** @PyExc_DeprecationWarning, align 8, !dbg !3530, !tbaa !1975
  %ob_refcnt380 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 0, !dbg !3532
  %117 = load i64, i64* %ob_refcnt380, align 8, !dbg !3533, !tbaa !2003
  %inc381 = add i64 %117, 1, !dbg !3533
  store i64 %inc381, i64* %ob_refcnt380, align 8, !dbg !3533, !tbaa !2003
  br label %if.end.382, !dbg !3534

if.end.382:                                       ; preds = %if.end.379, %if.end.372
  %118 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_PendingDeprecationWarning, i32 0, i32 19), align 8, !dbg !3535, !tbaa !2308
  %and383 = and i64 %118, 4096, !dbg !3537
  %tobool384 = icmp ne i64 %and383, 0, !dbg !3537
  br i1 %tobool384, label %if.end.392, label %if.then.385, !dbg !3538

if.then.385:                                      ; preds = %if.end.382
  %call386 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_PendingDeprecationWarning), !dbg !3539
  %cmp387 = icmp slt i32 %call386, 0, !dbg !3543
  br i1 %cmp387, label %if.then.388, label %if.end.389, !dbg !3544

if.then.388:                                      ; preds = %if.then.385
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3545
  unreachable, !dbg !3545

if.end.389:                                       ; preds = %if.then.385
  %119 = load %struct._object*, %struct._object** @PyExc_PendingDeprecationWarning, align 8, !dbg !3547, !tbaa !1975
  %ob_refcnt390 = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 0, !dbg !3549
  %120 = load i64, i64* %ob_refcnt390, align 8, !dbg !3550, !tbaa !2003
  %inc391 = add i64 %120, 1, !dbg !3550
  store i64 %inc391, i64* %ob_refcnt390, align 8, !dbg !3550, !tbaa !2003
  br label %if.end.392, !dbg !3551

if.end.392:                                       ; preds = %if.end.389, %if.end.382
  %121 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_SyntaxWarning, i32 0, i32 19), align 8, !dbg !3552, !tbaa !2308
  %and393 = and i64 %121, 4096, !dbg !3554
  %tobool394 = icmp ne i64 %and393, 0, !dbg !3554
  br i1 %tobool394, label %if.end.402, label %if.then.395, !dbg !3555

if.then.395:                                      ; preds = %if.end.392
  %call396 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_SyntaxWarning), !dbg !3556
  %cmp397 = icmp slt i32 %call396, 0, !dbg !3560
  br i1 %cmp397, label %if.then.398, label %if.end.399, !dbg !3561

if.then.398:                                      ; preds = %if.then.395
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3562
  unreachable, !dbg !3562

if.end.399:                                       ; preds = %if.then.395
  %122 = load %struct._object*, %struct._object** @PyExc_SyntaxWarning, align 8, !dbg !3564, !tbaa !1975
  %ob_refcnt400 = getelementptr inbounds %struct._object, %struct._object* %122, i32 0, i32 0, !dbg !3566
  %123 = load i64, i64* %ob_refcnt400, align 8, !dbg !3567, !tbaa !2003
  %inc401 = add i64 %123, 1, !dbg !3567
  store i64 %inc401, i64* %ob_refcnt400, align 8, !dbg !3567, !tbaa !2003
  br label %if.end.402, !dbg !3568

if.end.402:                                       ; preds = %if.end.399, %if.end.392
  %124 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_RuntimeWarning, i32 0, i32 19), align 8, !dbg !3569, !tbaa !2308
  %and403 = and i64 %124, 4096, !dbg !3571
  %tobool404 = icmp ne i64 %and403, 0, !dbg !3571
  br i1 %tobool404, label %if.end.412, label %if.then.405, !dbg !3572

if.then.405:                                      ; preds = %if.end.402
  %call406 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_RuntimeWarning), !dbg !3573
  %cmp407 = icmp slt i32 %call406, 0, !dbg !3577
  br i1 %cmp407, label %if.then.408, label %if.end.409, !dbg !3578

if.then.408:                                      ; preds = %if.then.405
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3579
  unreachable, !dbg !3579

if.end.409:                                       ; preds = %if.then.405
  %125 = load %struct._object*, %struct._object** @PyExc_RuntimeWarning, align 8, !dbg !3581, !tbaa !1975
  %ob_refcnt410 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 0, !dbg !3583
  %126 = load i64, i64* %ob_refcnt410, align 8, !dbg !3584, !tbaa !2003
  %inc411 = add i64 %126, 1, !dbg !3584
  store i64 %inc411, i64* %ob_refcnt410, align 8, !dbg !3584, !tbaa !2003
  br label %if.end.412, !dbg !3585

if.end.412:                                       ; preds = %if.end.409, %if.end.402
  %127 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FutureWarning, i32 0, i32 19), align 8, !dbg !3586, !tbaa !2308
  %and413 = and i64 %127, 4096, !dbg !3588
  %tobool414 = icmp ne i64 %and413, 0, !dbg !3588
  br i1 %tobool414, label %if.end.422, label %if.then.415, !dbg !3589

if.then.415:                                      ; preds = %if.end.412
  %call416 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_FutureWarning), !dbg !3590
  %cmp417 = icmp slt i32 %call416, 0, !dbg !3594
  br i1 %cmp417, label %if.then.418, label %if.end.419, !dbg !3595

if.then.418:                                      ; preds = %if.then.415
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3596
  unreachable, !dbg !3596

if.end.419:                                       ; preds = %if.then.415
  %128 = load %struct._object*, %struct._object** @PyExc_FutureWarning, align 8, !dbg !3598, !tbaa !1975
  %ob_refcnt420 = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 0, !dbg !3600
  %129 = load i64, i64* %ob_refcnt420, align 8, !dbg !3601, !tbaa !2003
  %inc421 = add i64 %129, 1, !dbg !3601
  store i64 %inc421, i64* %ob_refcnt420, align 8, !dbg !3601, !tbaa !2003
  br label %if.end.422, !dbg !3602

if.end.422:                                       ; preds = %if.end.419, %if.end.412
  %130 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ImportWarning, i32 0, i32 19), align 8, !dbg !3603, !tbaa !2308
  %and423 = and i64 %130, 4096, !dbg !3605
  %tobool424 = icmp ne i64 %and423, 0, !dbg !3605
  br i1 %tobool424, label %if.end.432, label %if.then.425, !dbg !3606

if.then.425:                                      ; preds = %if.end.422
  %call426 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ImportWarning), !dbg !3607
  %cmp427 = icmp slt i32 %call426, 0, !dbg !3611
  br i1 %cmp427, label %if.then.428, label %if.end.429, !dbg !3612

if.then.428:                                      ; preds = %if.then.425
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3613
  unreachable, !dbg !3613

if.end.429:                                       ; preds = %if.then.425
  %131 = load %struct._object*, %struct._object** @PyExc_ImportWarning, align 8, !dbg !3615, !tbaa !1975
  %ob_refcnt430 = getelementptr inbounds %struct._object, %struct._object* %131, i32 0, i32 0, !dbg !3617
  %132 = load i64, i64* %ob_refcnt430, align 8, !dbg !3618, !tbaa !2003
  %inc431 = add i64 %132, 1, !dbg !3618
  store i64 %inc431, i64* %ob_refcnt430, align 8, !dbg !3618, !tbaa !2003
  br label %if.end.432, !dbg !3619

if.end.432:                                       ; preds = %if.end.429, %if.end.422
  %133 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_UnicodeWarning, i32 0, i32 19), align 8, !dbg !3620, !tbaa !2308
  %and433 = and i64 %133, 4096, !dbg !3622
  %tobool434 = icmp ne i64 %and433, 0, !dbg !3622
  br i1 %tobool434, label %if.end.442, label %if.then.435, !dbg !3623

if.then.435:                                      ; preds = %if.end.432
  %call436 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_UnicodeWarning), !dbg !3624
  %cmp437 = icmp slt i32 %call436, 0, !dbg !3628
  br i1 %cmp437, label %if.then.438, label %if.end.439, !dbg !3629

if.then.438:                                      ; preds = %if.then.435
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3630
  unreachable, !dbg !3630

if.end.439:                                       ; preds = %if.then.435
  %134 = load %struct._object*, %struct._object** @PyExc_UnicodeWarning, align 8, !dbg !3632, !tbaa !1975
  %ob_refcnt440 = getelementptr inbounds %struct._object, %struct._object* %134, i32 0, i32 0, !dbg !3634
  %135 = load i64, i64* %ob_refcnt440, align 8, !dbg !3635, !tbaa !2003
  %inc441 = add i64 %135, 1, !dbg !3635
  store i64 %inc441, i64* %ob_refcnt440, align 8, !dbg !3635, !tbaa !2003
  br label %if.end.442, !dbg !3636

if.end.442:                                       ; preds = %if.end.439, %if.end.432
  %136 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BytesWarning, i32 0, i32 19), align 8, !dbg !3637, !tbaa !2308
  %and443 = and i64 %136, 4096, !dbg !3639
  %tobool444 = icmp ne i64 %and443, 0, !dbg !3639
  br i1 %tobool444, label %if.end.452, label %if.then.445, !dbg !3640

if.then.445:                                      ; preds = %if.end.442
  %call446 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_BytesWarning), !dbg !3641
  %cmp447 = icmp slt i32 %call446, 0, !dbg !3645
  br i1 %cmp447, label %if.then.448, label %if.end.449, !dbg !3646

if.then.448:                                      ; preds = %if.then.445
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3647
  unreachable, !dbg !3647

if.end.449:                                       ; preds = %if.then.445
  %137 = load %struct._object*, %struct._object** @PyExc_BytesWarning, align 8, !dbg !3649, !tbaa !1975
  %ob_refcnt450 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 0, !dbg !3651
  %138 = load i64, i64* %ob_refcnt450, align 8, !dbg !3652, !tbaa !2003
  %inc451 = add i64 %138, 1, !dbg !3652
  store i64 %inc451, i64* %ob_refcnt450, align 8, !dbg !3652, !tbaa !2003
  br label %if.end.452, !dbg !3653

if.end.452:                                       ; preds = %if.end.449, %if.end.442
  %139 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ResourceWarning, i32 0, i32 19), align 8, !dbg !3654, !tbaa !2308
  %and453 = and i64 %139, 4096, !dbg !3656
  %tobool454 = icmp ne i64 %and453, 0, !dbg !3656
  br i1 %tobool454, label %if.end.462, label %if.then.455, !dbg !3657

if.then.455:                                      ; preds = %if.end.452
  %call456 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ResourceWarning), !dbg !3658
  %cmp457 = icmp slt i32 %call456, 0, !dbg !3662
  br i1 %cmp457, label %if.then.458, label %if.end.459, !dbg !3663

if.then.458:                                      ; preds = %if.then.455
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3664
  unreachable, !dbg !3664

if.end.459:                                       ; preds = %if.then.455
  %140 = load %struct._object*, %struct._object** @PyExc_ResourceWarning, align 8, !dbg !3666, !tbaa !1975
  %ob_refcnt460 = getelementptr inbounds %struct._object, %struct._object* %140, i32 0, i32 0, !dbg !3668
  %141 = load i64, i64* %ob_refcnt460, align 8, !dbg !3669, !tbaa !2003
  %inc461 = add i64 %141, 1, !dbg !3669
  store i64 %inc461, i64* %ob_refcnt460, align 8, !dbg !3669, !tbaa !2003
  br label %if.end.462, !dbg !3670

if.end.462:                                       ; preds = %if.end.459, %if.end.452
  %142 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionError, i32 0, i32 19), align 8, !dbg !3671, !tbaa !2308
  %and463 = and i64 %142, 4096, !dbg !3673
  %tobool464 = icmp ne i64 %and463, 0, !dbg !3673
  br i1 %tobool464, label %if.end.472, label %if.then.465, !dbg !3674

if.then.465:                                      ; preds = %if.end.462
  %call466 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ConnectionError), !dbg !3675
  %cmp467 = icmp slt i32 %call466, 0, !dbg !3679
  br i1 %cmp467, label %if.then.468, label %if.end.469, !dbg !3680

if.then.468:                                      ; preds = %if.then.465
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3681
  unreachable, !dbg !3681

if.end.469:                                       ; preds = %if.then.465
  %143 = load %struct._object*, %struct._object** @PyExc_ConnectionError, align 8, !dbg !3683, !tbaa !1975
  %ob_refcnt470 = getelementptr inbounds %struct._object, %struct._object* %143, i32 0, i32 0, !dbg !3685
  %144 = load i64, i64* %ob_refcnt470, align 8, !dbg !3686, !tbaa !2003
  %inc471 = add i64 %144, 1, !dbg !3686
  store i64 %inc471, i64* %ob_refcnt470, align 8, !dbg !3686, !tbaa !2003
  br label %if.end.472, !dbg !3687

if.end.472:                                       ; preds = %if.end.469, %if.end.462
  %145 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BlockingIOError, i32 0, i32 19), align 8, !dbg !3688, !tbaa !2308
  %and473 = and i64 %145, 4096, !dbg !3690
  %tobool474 = icmp ne i64 %and473, 0, !dbg !3690
  br i1 %tobool474, label %if.end.482, label %if.then.475, !dbg !3691

if.then.475:                                      ; preds = %if.end.472
  %call476 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_BlockingIOError), !dbg !3692
  %cmp477 = icmp slt i32 %call476, 0, !dbg !3696
  br i1 %cmp477, label %if.then.478, label %if.end.479, !dbg !3697

if.then.478:                                      ; preds = %if.then.475
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3698
  unreachable, !dbg !3698

if.end.479:                                       ; preds = %if.then.475
  %146 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !3700, !tbaa !1975
  %ob_refcnt480 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 0, !dbg !3702
  %147 = load i64, i64* %ob_refcnt480, align 8, !dbg !3703, !tbaa !2003
  %inc481 = add i64 %147, 1, !dbg !3703
  store i64 %inc481, i64* %ob_refcnt480, align 8, !dbg !3703, !tbaa !2003
  br label %if.end.482, !dbg !3704

if.end.482:                                       ; preds = %if.end.479, %if.end.472
  %148 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BrokenPipeError, i32 0, i32 19), align 8, !dbg !3705, !tbaa !2308
  %and483 = and i64 %148, 4096, !dbg !3707
  %tobool484 = icmp ne i64 %and483, 0, !dbg !3707
  br i1 %tobool484, label %if.end.492, label %if.then.485, !dbg !3708

if.then.485:                                      ; preds = %if.end.482
  %call486 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_BrokenPipeError), !dbg !3709
  %cmp487 = icmp slt i32 %call486, 0, !dbg !3713
  br i1 %cmp487, label %if.then.488, label %if.end.489, !dbg !3714

if.then.488:                                      ; preds = %if.then.485
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3715
  unreachable, !dbg !3715

if.end.489:                                       ; preds = %if.then.485
  %149 = load %struct._object*, %struct._object** @PyExc_BrokenPipeError, align 8, !dbg !3717, !tbaa !1975
  %ob_refcnt490 = getelementptr inbounds %struct._object, %struct._object* %149, i32 0, i32 0, !dbg !3719
  %150 = load i64, i64* %ob_refcnt490, align 8, !dbg !3720, !tbaa !2003
  %inc491 = add i64 %150, 1, !dbg !3720
  store i64 %inc491, i64* %ob_refcnt490, align 8, !dbg !3720, !tbaa !2003
  br label %if.end.492, !dbg !3721

if.end.492:                                       ; preds = %if.end.489, %if.end.482
  %151 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ChildProcessError, i32 0, i32 19), align 8, !dbg !3722, !tbaa !2308
  %and493 = and i64 %151, 4096, !dbg !3724
  %tobool494 = icmp ne i64 %and493, 0, !dbg !3724
  br i1 %tobool494, label %if.end.502, label %if.then.495, !dbg !3725

if.then.495:                                      ; preds = %if.end.492
  %call496 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ChildProcessError), !dbg !3726
  %cmp497 = icmp slt i32 %call496, 0, !dbg !3730
  br i1 %cmp497, label %if.then.498, label %if.end.499, !dbg !3731

if.then.498:                                      ; preds = %if.then.495
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3732
  unreachable, !dbg !3732

if.end.499:                                       ; preds = %if.then.495
  %152 = load %struct._object*, %struct._object** @PyExc_ChildProcessError, align 8, !dbg !3734, !tbaa !1975
  %ob_refcnt500 = getelementptr inbounds %struct._object, %struct._object* %152, i32 0, i32 0, !dbg !3736
  %153 = load i64, i64* %ob_refcnt500, align 8, !dbg !3737, !tbaa !2003
  %inc501 = add i64 %153, 1, !dbg !3737
  store i64 %inc501, i64* %ob_refcnt500, align 8, !dbg !3737, !tbaa !2003
  br label %if.end.502, !dbg !3738

if.end.502:                                       ; preds = %if.end.499, %if.end.492
  %154 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionAbortedError, i32 0, i32 19), align 8, !dbg !3739, !tbaa !2308
  %and503 = and i64 %154, 4096, !dbg !3741
  %tobool504 = icmp ne i64 %and503, 0, !dbg !3741
  br i1 %tobool504, label %if.end.512, label %if.then.505, !dbg !3742

if.then.505:                                      ; preds = %if.end.502
  %call506 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ConnectionAbortedError), !dbg !3743
  %cmp507 = icmp slt i32 %call506, 0, !dbg !3747
  br i1 %cmp507, label %if.then.508, label %if.end.509, !dbg !3748

if.then.508:                                      ; preds = %if.then.505
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3749
  unreachable, !dbg !3749

if.end.509:                                       ; preds = %if.then.505
  %155 = load %struct._object*, %struct._object** @PyExc_ConnectionAbortedError, align 8, !dbg !3751, !tbaa !1975
  %ob_refcnt510 = getelementptr inbounds %struct._object, %struct._object* %155, i32 0, i32 0, !dbg !3753
  %156 = load i64, i64* %ob_refcnt510, align 8, !dbg !3754, !tbaa !2003
  %inc511 = add i64 %156, 1, !dbg !3754
  store i64 %inc511, i64* %ob_refcnt510, align 8, !dbg !3754, !tbaa !2003
  br label %if.end.512, !dbg !3755

if.end.512:                                       ; preds = %if.end.509, %if.end.502
  %157 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionRefusedError, i32 0, i32 19), align 8, !dbg !3756, !tbaa !2308
  %and513 = and i64 %157, 4096, !dbg !3758
  %tobool514 = icmp ne i64 %and513, 0, !dbg !3758
  br i1 %tobool514, label %if.end.522, label %if.then.515, !dbg !3759

if.then.515:                                      ; preds = %if.end.512
  %call516 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ConnectionRefusedError), !dbg !3760
  %cmp517 = icmp slt i32 %call516, 0, !dbg !3764
  br i1 %cmp517, label %if.then.518, label %if.end.519, !dbg !3765

if.then.518:                                      ; preds = %if.then.515
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3766
  unreachable, !dbg !3766

if.end.519:                                       ; preds = %if.then.515
  %158 = load %struct._object*, %struct._object** @PyExc_ConnectionRefusedError, align 8, !dbg !3768, !tbaa !1975
  %ob_refcnt520 = getelementptr inbounds %struct._object, %struct._object* %158, i32 0, i32 0, !dbg !3770
  %159 = load i64, i64* %ob_refcnt520, align 8, !dbg !3771, !tbaa !2003
  %inc521 = add i64 %159, 1, !dbg !3771
  store i64 %inc521, i64* %ob_refcnt520, align 8, !dbg !3771, !tbaa !2003
  br label %if.end.522, !dbg !3772

if.end.522:                                       ; preds = %if.end.519, %if.end.512
  %160 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ConnectionResetError, i32 0, i32 19), align 8, !dbg !3773, !tbaa !2308
  %and523 = and i64 %160, 4096, !dbg !3775
  %tobool524 = icmp ne i64 %and523, 0, !dbg !3775
  br i1 %tobool524, label %if.end.532, label %if.then.525, !dbg !3776

if.then.525:                                      ; preds = %if.end.522
  %call526 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ConnectionResetError), !dbg !3777
  %cmp527 = icmp slt i32 %call526, 0, !dbg !3781
  br i1 %cmp527, label %if.then.528, label %if.end.529, !dbg !3782

if.then.528:                                      ; preds = %if.then.525
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3783
  unreachable, !dbg !3783

if.end.529:                                       ; preds = %if.then.525
  %161 = load %struct._object*, %struct._object** @PyExc_ConnectionResetError, align 8, !dbg !3785, !tbaa !1975
  %ob_refcnt530 = getelementptr inbounds %struct._object, %struct._object* %161, i32 0, i32 0, !dbg !3787
  %162 = load i64, i64* %ob_refcnt530, align 8, !dbg !3788, !tbaa !2003
  %inc531 = add i64 %162, 1, !dbg !3788
  store i64 %inc531, i64* %ob_refcnt530, align 8, !dbg !3788, !tbaa !2003
  br label %if.end.532, !dbg !3789

if.end.532:                                       ; preds = %if.end.529, %if.end.522
  %163 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FileExistsError, i32 0, i32 19), align 8, !dbg !3790, !tbaa !2308
  %and533 = and i64 %163, 4096, !dbg !3792
  %tobool534 = icmp ne i64 %and533, 0, !dbg !3792
  br i1 %tobool534, label %if.end.542, label %if.then.535, !dbg !3793

if.then.535:                                      ; preds = %if.end.532
  %call536 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_FileExistsError), !dbg !3794
  %cmp537 = icmp slt i32 %call536, 0, !dbg !3798
  br i1 %cmp537, label %if.then.538, label %if.end.539, !dbg !3799

if.then.538:                                      ; preds = %if.then.535
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3800
  unreachable, !dbg !3800

if.end.539:                                       ; preds = %if.then.535
  %164 = load %struct._object*, %struct._object** @PyExc_FileExistsError, align 8, !dbg !3802, !tbaa !1975
  %ob_refcnt540 = getelementptr inbounds %struct._object, %struct._object* %164, i32 0, i32 0, !dbg !3804
  %165 = load i64, i64* %ob_refcnt540, align 8, !dbg !3805, !tbaa !2003
  %inc541 = add i64 %165, 1, !dbg !3805
  store i64 %inc541, i64* %ob_refcnt540, align 8, !dbg !3805, !tbaa !2003
  br label %if.end.542, !dbg !3806

if.end.542:                                       ; preds = %if.end.539, %if.end.532
  %166 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_FileNotFoundError, i32 0, i32 19), align 8, !dbg !3807, !tbaa !2308
  %and543 = and i64 %166, 4096, !dbg !3809
  %tobool544 = icmp ne i64 %and543, 0, !dbg !3809
  br i1 %tobool544, label %if.end.552, label %if.then.545, !dbg !3810

if.then.545:                                      ; preds = %if.end.542
  %call546 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_FileNotFoundError), !dbg !3811
  %cmp547 = icmp slt i32 %call546, 0, !dbg !3815
  br i1 %cmp547, label %if.then.548, label %if.end.549, !dbg !3816

if.then.548:                                      ; preds = %if.then.545
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3817
  unreachable, !dbg !3817

if.end.549:                                       ; preds = %if.then.545
  %167 = load %struct._object*, %struct._object** @PyExc_FileNotFoundError, align 8, !dbg !3819, !tbaa !1975
  %ob_refcnt550 = getelementptr inbounds %struct._object, %struct._object* %167, i32 0, i32 0, !dbg !3821
  %168 = load i64, i64* %ob_refcnt550, align 8, !dbg !3822, !tbaa !2003
  %inc551 = add i64 %168, 1, !dbg !3822
  store i64 %inc551, i64* %ob_refcnt550, align 8, !dbg !3822, !tbaa !2003
  br label %if.end.552, !dbg !3823

if.end.552:                                       ; preds = %if.end.549, %if.end.542
  %169 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_IsADirectoryError, i32 0, i32 19), align 8, !dbg !3824, !tbaa !2308
  %and553 = and i64 %169, 4096, !dbg !3826
  %tobool554 = icmp ne i64 %and553, 0, !dbg !3826
  br i1 %tobool554, label %if.end.562, label %if.then.555, !dbg !3827

if.then.555:                                      ; preds = %if.end.552
  %call556 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_IsADirectoryError), !dbg !3828
  %cmp557 = icmp slt i32 %call556, 0, !dbg !3832
  br i1 %cmp557, label %if.then.558, label %if.end.559, !dbg !3833

if.then.558:                                      ; preds = %if.then.555
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3834
  unreachable, !dbg !3834

if.end.559:                                       ; preds = %if.then.555
  %170 = load %struct._object*, %struct._object** @PyExc_IsADirectoryError, align 8, !dbg !3836, !tbaa !1975
  %ob_refcnt560 = getelementptr inbounds %struct._object, %struct._object* %170, i32 0, i32 0, !dbg !3838
  %171 = load i64, i64* %ob_refcnt560, align 8, !dbg !3839, !tbaa !2003
  %inc561 = add i64 %171, 1, !dbg !3839
  store i64 %inc561, i64* %ob_refcnt560, align 8, !dbg !3839, !tbaa !2003
  br label %if.end.562, !dbg !3840

if.end.562:                                       ; preds = %if.end.559, %if.end.552
  %172 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_NotADirectoryError, i32 0, i32 19), align 8, !dbg !3841, !tbaa !2308
  %and563 = and i64 %172, 4096, !dbg !3843
  %tobool564 = icmp ne i64 %and563, 0, !dbg !3843
  br i1 %tobool564, label %if.end.572, label %if.then.565, !dbg !3844

if.then.565:                                      ; preds = %if.end.562
  %call566 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_NotADirectoryError), !dbg !3845
  %cmp567 = icmp slt i32 %call566, 0, !dbg !3849
  br i1 %cmp567, label %if.then.568, label %if.end.569, !dbg !3850

if.then.568:                                      ; preds = %if.then.565
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3851
  unreachable, !dbg !3851

if.end.569:                                       ; preds = %if.then.565
  %173 = load %struct._object*, %struct._object** @PyExc_NotADirectoryError, align 8, !dbg !3853, !tbaa !1975
  %ob_refcnt570 = getelementptr inbounds %struct._object, %struct._object* %173, i32 0, i32 0, !dbg !3855
  %174 = load i64, i64* %ob_refcnt570, align 8, !dbg !3856, !tbaa !2003
  %inc571 = add i64 %174, 1, !dbg !3856
  store i64 %inc571, i64* %ob_refcnt570, align 8, !dbg !3856, !tbaa !2003
  br label %if.end.572, !dbg !3857

if.end.572:                                       ; preds = %if.end.569, %if.end.562
  %175 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_InterruptedError, i32 0, i32 19), align 8, !dbg !3858, !tbaa !2308
  %and573 = and i64 %175, 4096, !dbg !3860
  %tobool574 = icmp ne i64 %and573, 0, !dbg !3860
  br i1 %tobool574, label %if.end.582, label %if.then.575, !dbg !3861

if.then.575:                                      ; preds = %if.end.572
  %call576 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_InterruptedError), !dbg !3862
  %cmp577 = icmp slt i32 %call576, 0, !dbg !3866
  br i1 %cmp577, label %if.then.578, label %if.end.579, !dbg !3867

if.then.578:                                      ; preds = %if.then.575
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3868
  unreachable, !dbg !3868

if.end.579:                                       ; preds = %if.then.575
  %176 = load %struct._object*, %struct._object** @PyExc_InterruptedError, align 8, !dbg !3870, !tbaa !1975
  %ob_refcnt580 = getelementptr inbounds %struct._object, %struct._object* %176, i32 0, i32 0, !dbg !3872
  %177 = load i64, i64* %ob_refcnt580, align 8, !dbg !3873, !tbaa !2003
  %inc581 = add i64 %177, 1, !dbg !3873
  store i64 %inc581, i64* %ob_refcnt580, align 8, !dbg !3873, !tbaa !2003
  br label %if.end.582, !dbg !3874

if.end.582:                                       ; preds = %if.end.579, %if.end.572
  %178 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_PermissionError, i32 0, i32 19), align 8, !dbg !3875, !tbaa !2308
  %and583 = and i64 %178, 4096, !dbg !3877
  %tobool584 = icmp ne i64 %and583, 0, !dbg !3877
  br i1 %tobool584, label %if.end.592, label %if.then.585, !dbg !3878

if.then.585:                                      ; preds = %if.end.582
  %call586 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_PermissionError), !dbg !3879
  %cmp587 = icmp slt i32 %call586, 0, !dbg !3883
  br i1 %cmp587, label %if.then.588, label %if.end.589, !dbg !3884

if.then.588:                                      ; preds = %if.then.585
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3885
  unreachable, !dbg !3885

if.end.589:                                       ; preds = %if.then.585
  %179 = load %struct._object*, %struct._object** @PyExc_PermissionError, align 8, !dbg !3887, !tbaa !1975
  %ob_refcnt590 = getelementptr inbounds %struct._object, %struct._object* %179, i32 0, i32 0, !dbg !3889
  %180 = load i64, i64* %ob_refcnt590, align 8, !dbg !3890, !tbaa !2003
  %inc591 = add i64 %180, 1, !dbg !3890
  store i64 %inc591, i64* %ob_refcnt590, align 8, !dbg !3890, !tbaa !2003
  br label %if.end.592, !dbg !3891

if.end.592:                                       ; preds = %if.end.589, %if.end.582
  %181 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_ProcessLookupError, i32 0, i32 19), align 8, !dbg !3892, !tbaa !2308
  %and593 = and i64 %181, 4096, !dbg !3894
  %tobool594 = icmp ne i64 %and593, 0, !dbg !3894
  br i1 %tobool594, label %if.end.602, label %if.then.595, !dbg !3895

if.then.595:                                      ; preds = %if.end.592
  %call596 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_ProcessLookupError), !dbg !3896
  %cmp597 = icmp slt i32 %call596, 0, !dbg !3900
  br i1 %cmp597, label %if.then.598, label %if.end.599, !dbg !3901

if.then.598:                                      ; preds = %if.then.595
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3902
  unreachable, !dbg !3902

if.end.599:                                       ; preds = %if.then.595
  %182 = load %struct._object*, %struct._object** @PyExc_ProcessLookupError, align 8, !dbg !3904, !tbaa !1975
  %ob_refcnt600 = getelementptr inbounds %struct._object, %struct._object* %182, i32 0, i32 0, !dbg !3906
  %183 = load i64, i64* %ob_refcnt600, align 8, !dbg !3907, !tbaa !2003
  %inc601 = add i64 %183, 1, !dbg !3907
  store i64 %inc601, i64* %ob_refcnt600, align 8, !dbg !3907, !tbaa !2003
  br label %if.end.602, !dbg !3908

if.end.602:                                       ; preds = %if.end.599, %if.end.592
  %184 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_TimeoutError, i32 0, i32 19), align 8, !dbg !3909, !tbaa !2308
  %and603 = and i64 %184, 4096, !dbg !3911
  %tobool604 = icmp ne i64 %and603, 0, !dbg !3911
  br i1 %tobool604, label %if.end.612, label %if.then.605, !dbg !3912

if.then.605:                                      ; preds = %if.end.602
  %call606 = call i32 @PyType_Ready(%struct._typeobject* @_PyExc_TimeoutError), !dbg !3913
  %cmp607 = icmp slt i32 %call606, 0, !dbg !3917
  br i1 %cmp607, label %if.then.608, label %if.end.609, !dbg !3918

if.then.608:                                      ; preds = %if.then.605
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3919
  unreachable, !dbg !3919

if.end.609:                                       ; preds = %if.then.605
  %185 = load %struct._object*, %struct._object** @PyExc_TimeoutError, align 8, !dbg !3921, !tbaa !1975
  %ob_refcnt610 = getelementptr inbounds %struct._object, %struct._object* %185, i32 0, i32 0, !dbg !3923
  %186 = load i64, i64* %ob_refcnt610, align 8, !dbg !3924, !tbaa !2003
  %inc611 = add i64 %186, 1, !dbg !3924
  store i64 %inc611, i64* %ob_refcnt610, align 8, !dbg !3924, !tbaa !2003
  br label %if.end.612, !dbg !3925

if.end.612:                                       ; preds = %if.end.609, %if.end.602
  %187 = load %struct._object*, %struct._object** %bltinmod.addr, align 8, !dbg !3926, !tbaa !1975
  %call613 = call %struct._object* @PyModule_GetDict(%struct._object* %187), !dbg !3927
  store %struct._object* %call613, %struct._object** %bdict, align 8, !dbg !3928, !tbaa !1975
  %188 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !3929, !tbaa !1975
  %cmp614 = icmp eq %struct._object* %188, null, !dbg !3931
  br i1 %cmp614, label %if.then.615, label %if.end.616, !dbg !3932

if.then.615:                                      ; preds = %if.end.612
  call void @Py_FatalError(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3933
  unreachable, !dbg !3933

if.end.616:                                       ; preds = %if.end.612
  %189 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !3934, !tbaa !1975
  %190 = load %struct._object*, %struct._object** @PyExc_BaseException, align 8, !dbg !3936, !tbaa !1975
  %call617 = call i32 @PyDict_SetItemString(%struct._object* %189, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), %struct._object* %190), !dbg !3937
  %tobool618 = icmp ne i32 %call617, 0, !dbg !3937
  br i1 %tobool618, label %if.then.619, label %if.end.620, !dbg !3938

if.then.619:                                      ; preds = %if.end.616
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !3939
  unreachable, !dbg !3939

if.end.620:                                       ; preds = %if.end.616
  %191 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !3941, !tbaa !1975
  %192 = load %struct._object*, %struct._object** @PyExc_Exception, align 8, !dbg !3943, !tbaa !1975
  %call621 = call i32 @PyDict_SetItemString(%struct._object* %191, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), %struct._object* %192), !dbg !3944
  %tobool622 = icmp ne i32 %call621, 0, !dbg !3944
  br i1 %tobool622, label %if.then.623, label %if.end.624, !dbg !3945

if.then.623:                                      ; preds = %if.end.620
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !3946
  unreachable, !dbg !3946

if.end.624:                                       ; preds = %if.end.620
  %193 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !3948, !tbaa !1975
  %194 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3950, !tbaa !1975
  %call625 = call i32 @PyDict_SetItemString(%struct._object* %193, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), %struct._object* %194), !dbg !3951
  %tobool626 = icmp ne i32 %call625, 0, !dbg !3951
  br i1 %tobool626, label %if.then.627, label %if.end.628, !dbg !3952

if.then.627:                                      ; preds = %if.end.624
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !3953
  unreachable, !dbg !3953

if.end.628:                                       ; preds = %if.end.624
  %195 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !3955, !tbaa !1975
  %196 = load %struct._object*, %struct._object** @PyExc_StopIteration, align 8, !dbg !3957, !tbaa !1975
  %call629 = call i32 @PyDict_SetItemString(%struct._object* %195, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i32 0, i32 0), %struct._object* %196), !dbg !3958
  %tobool630 = icmp ne i32 %call629, 0, !dbg !3958
  br i1 %tobool630, label %if.then.631, label %if.end.632, !dbg !3959

if.then.631:                                      ; preds = %if.end.628
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !3960
  unreachable, !dbg !3960

if.end.632:                                       ; preds = %if.end.628
  %197 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !3962, !tbaa !1975
  %198 = load %struct._object*, %struct._object** @PyExc_GeneratorExit, align 8, !dbg !3964, !tbaa !1975
  %call633 = call i32 @PyDict_SetItemString(%struct._object* %197, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0), %struct._object* %198), !dbg !3965
  %tobool634 = icmp ne i32 %call633, 0, !dbg !3965
  br i1 %tobool634, label %if.then.635, label %if.end.636, !dbg !3966

if.then.635:                                      ; preds = %if.end.632
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !3967
  unreachable, !dbg !3967

if.end.636:                                       ; preds = %if.end.632
  %199 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !3969, !tbaa !1975
  %200 = load %struct._object*, %struct._object** @PyExc_SystemExit, align 8, !dbg !3971, !tbaa !1975
  %call637 = call i32 @PyDict_SetItemString(%struct._object* %199, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), %struct._object* %200), !dbg !3972
  %tobool638 = icmp ne i32 %call637, 0, !dbg !3972
  br i1 %tobool638, label %if.then.639, label %if.end.640, !dbg !3973

if.then.639:                                      ; preds = %if.end.636
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !3974
  unreachable, !dbg !3974

if.end.640:                                       ; preds = %if.end.636
  %201 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !3976, !tbaa !1975
  %202 = load %struct._object*, %struct._object** @PyExc_KeyboardInterrupt, align 8, !dbg !3978, !tbaa !1975
  %call641 = call i32 @PyDict_SetItemString(%struct._object* %201, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i32 0, i32 0), %struct._object* %202), !dbg !3979
  %tobool642 = icmp ne i32 %call641, 0, !dbg !3979
  br i1 %tobool642, label %if.then.643, label %if.end.644, !dbg !3980

if.then.643:                                      ; preds = %if.end.640
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !3981
  unreachable, !dbg !3981

if.end.644:                                       ; preds = %if.end.640
  %203 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !3983, !tbaa !1975
  %204 = load %struct._object*, %struct._object** @PyExc_ImportError, align 8, !dbg !3985, !tbaa !1975
  %call645 = call i32 @PyDict_SetItemString(%struct._object* %203, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i32 0, i32 0), %struct._object* %204), !dbg !3986
  %tobool646 = icmp ne i32 %call645, 0, !dbg !3986
  br i1 %tobool646, label %if.then.647, label %if.end.648, !dbg !3987

if.then.647:                                      ; preds = %if.end.644
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !3988
  unreachable, !dbg !3988

if.end.648:                                       ; preds = %if.end.644
  %205 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !3990, !tbaa !1975
  %206 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !3992, !tbaa !1975
  %call649 = call i32 @PyDict_SetItemString(%struct._object* %205, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), %struct._object* %206), !dbg !3993
  %tobool650 = icmp ne i32 %call649, 0, !dbg !3993
  br i1 %tobool650, label %if.then.651, label %if.end.652, !dbg !3994

if.then.651:                                      ; preds = %if.end.648
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !3995
  unreachable, !dbg !3995

if.end.652:                                       ; preds = %if.end.648
  %207 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !3997, !tbaa !1975
  %ob_refcnt653 = getelementptr inbounds %struct._object, %struct._object* %207, i32 0, i32 0, !dbg !3998
  %208 = load i64, i64* %ob_refcnt653, align 8, !dbg !3999, !tbaa !2003
  %inc654 = add i64 %208, 1, !dbg !3999
  store i64 %inc654, i64* %ob_refcnt653, align 8, !dbg !3999, !tbaa !2003
  br label %do.body, !dbg !4000

do.body:                                          ; preds = %if.end.652
  %209 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4001
  call void @llvm.lifetime.start(i64 8, i8* %209) #2, !dbg !4001
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !684, metadata !1979), !dbg !4003
  %210 = load %struct._object*, %struct._object** @PyExc_EnvironmentError, align 8, !dbg !4004, !tbaa !1975
  store %struct._object* %210, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4003, !tbaa !1975
  %211 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4005, !tbaa !1975
  %cmp655 = icmp ne %struct._object* %211, null, !dbg !4006
  br i1 %cmp655, label %if.then.656, label %if.end.662, !dbg !4007

if.then.656:                                      ; preds = %do.body
  br label %do.body.657, !dbg !4008

do.body.657:                                      ; preds = %if.then.656
  %212 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4010
  call void @llvm.lifetime.start(i64 8, i8* %212) #2, !dbg !4010
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !686, metadata !1979), !dbg !4012
  %213 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4013, !tbaa !1975
  store %struct._object* %213, %struct._object** %_py_decref_tmp, align 8, !dbg !4012, !tbaa !1975
  %214 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4014, !tbaa !1975
  %ob_refcnt658 = getelementptr inbounds %struct._object, %struct._object* %214, i32 0, i32 0, !dbg !4016
  %215 = load i64, i64* %ob_refcnt658, align 8, !dbg !4017, !tbaa !2003
  %dec = add i64 %215, -1, !dbg !4017
  store i64 %dec, i64* %ob_refcnt658, align 8, !dbg !4017, !tbaa !2003
  %cmp659 = icmp ne i64 %dec, 0, !dbg !4018
  br i1 %cmp659, label %if.then.660, label %if.else, !dbg !4019

if.then.660:                                      ; preds = %do.body.657
  br label %if.end.661, !dbg !4020

if.else:                                          ; preds = %do.body.657
  %216 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4022, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %216, i32 0, i32 1, !dbg !4024
  %217 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4024, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %217, i32 0, i32 4, !dbg !4025
  %218 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4025, !tbaa !2091
  %219 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4026, !tbaa !1975
  call void %218(%struct._object* %219), !dbg !4027
  br label %if.end.661

if.end.661:                                       ; preds = %if.else, %if.then.660
  %220 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4028
  call void @llvm.lifetime.end(i64 8, i8* %220) #2, !dbg !4028
  br label %do.cond, !dbg !4030

do.cond:                                          ; preds = %if.end.661
  br label %do.end, !dbg !4031

do.end:                                           ; preds = %do.cond
  br label %if.end.662, !dbg !4033

if.end.662:                                       ; preds = %do.end, %do.body
  %221 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4035
  call void @llvm.lifetime.end(i64 8, i8* %221) #2, !dbg !4035
  br label %do.cond.663, !dbg !4038

do.cond.663:                                      ; preds = %if.end.662
  br label %do.end.664, !dbg !4039

do.end.664:                                       ; preds = %do.cond.663
  %222 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !4041, !tbaa !1975
  store %struct._object* %222, %struct._object** @PyExc_EnvironmentError, align 8, !dbg !4043, !tbaa !1975
  %223 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4044, !tbaa !1975
  %224 = load %struct._object*, %struct._object** @PyExc_EnvironmentError, align 8, !dbg !4046, !tbaa !1975
  %call665 = call i32 @PyDict_SetItemString(%struct._object* %223, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i32 0, i32 0), %struct._object* %224), !dbg !4047
  %tobool666 = icmp ne i32 %call665, 0, !dbg !4047
  br i1 %tobool666, label %if.then.667, label %if.end.668, !dbg !4048

if.then.667:                                      ; preds = %do.end.664
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4049
  unreachable, !dbg !4049

if.end.668:                                       ; preds = %do.end.664
  %225 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !4051, !tbaa !1975
  %ob_refcnt669 = getelementptr inbounds %struct._object, %struct._object* %225, i32 0, i32 0, !dbg !4052
  %226 = load i64, i64* %ob_refcnt669, align 8, !dbg !4053, !tbaa !2003
  %inc670 = add i64 %226, 1, !dbg !4053
  store i64 %inc670, i64* %ob_refcnt669, align 8, !dbg !4053, !tbaa !2003
  br label %do.body.671, !dbg !4054

do.body.671:                                      ; preds = %if.end.668
  %227 = bitcast %struct._object** %_py_xdecref_tmp672 to i8*, !dbg !4055
  call void @llvm.lifetime.start(i64 8, i8* %227) #2, !dbg !4055
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp672, metadata !689, metadata !1979), !dbg !4057
  %228 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !4058, !tbaa !1975
  store %struct._object* %228, %struct._object** %_py_xdecref_tmp672, align 8, !dbg !4057, !tbaa !1975
  %229 = load %struct._object*, %struct._object** %_py_xdecref_tmp672, align 8, !dbg !4059, !tbaa !1975
  %cmp673 = icmp ne %struct._object* %229, null, !dbg !4060
  br i1 %cmp673, label %if.then.674, label %if.end.687, !dbg !4061

if.then.674:                                      ; preds = %do.body.671
  br label %do.body.675, !dbg !4062

do.body.675:                                      ; preds = %if.then.674
  %230 = bitcast %struct._object** %_py_decref_tmp676 to i8*, !dbg !4064
  call void @llvm.lifetime.start(i64 8, i8* %230) #2, !dbg !4064
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp676, metadata !691, metadata !1979), !dbg !4066
  %231 = load %struct._object*, %struct._object** %_py_xdecref_tmp672, align 8, !dbg !4067, !tbaa !1975
  store %struct._object* %231, %struct._object** %_py_decref_tmp676, align 8, !dbg !4066, !tbaa !1975
  %232 = load %struct._object*, %struct._object** %_py_decref_tmp676, align 8, !dbg !4068, !tbaa !1975
  %ob_refcnt677 = getelementptr inbounds %struct._object, %struct._object* %232, i32 0, i32 0, !dbg !4070
  %233 = load i64, i64* %ob_refcnt677, align 8, !dbg !4071, !tbaa !2003
  %dec678 = add i64 %233, -1, !dbg !4071
  store i64 %dec678, i64* %ob_refcnt677, align 8, !dbg !4071, !tbaa !2003
  %cmp679 = icmp ne i64 %dec678, 0, !dbg !4072
  br i1 %cmp679, label %if.then.680, label %if.else.681, !dbg !4073

if.then.680:                                      ; preds = %do.body.675
  br label %if.end.684, !dbg !4074

if.else.681:                                      ; preds = %do.body.675
  %234 = load %struct._object*, %struct._object** %_py_decref_tmp676, align 8, !dbg !4076, !tbaa !1975
  %ob_type682 = getelementptr inbounds %struct._object, %struct._object* %234, i32 0, i32 1, !dbg !4078
  %235 = load %struct._typeobject*, %struct._typeobject** %ob_type682, align 8, !dbg !4078, !tbaa !2039
  %tp_dealloc683 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %235, i32 0, i32 4, !dbg !4079
  %236 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc683, align 8, !dbg !4079, !tbaa !2091
  %237 = load %struct._object*, %struct._object** %_py_decref_tmp676, align 8, !dbg !4080, !tbaa !1975
  call void %236(%struct._object* %237), !dbg !4081
  br label %if.end.684

if.end.684:                                       ; preds = %if.else.681, %if.then.680
  %238 = bitcast %struct._object** %_py_decref_tmp676 to i8*, !dbg !4082
  call void @llvm.lifetime.end(i64 8, i8* %238) #2, !dbg !4082
  br label %do.cond.685, !dbg !4084

do.cond.685:                                      ; preds = %if.end.684
  br label %do.end.686, !dbg !4085

do.end.686:                                       ; preds = %do.cond.685
  br label %if.end.687, !dbg !4087

if.end.687:                                       ; preds = %do.end.686, %do.body.671
  %239 = bitcast %struct._object** %_py_xdecref_tmp672 to i8*, !dbg !4089
  call void @llvm.lifetime.end(i64 8, i8* %239) #2, !dbg !4089
  br label %do.cond.688, !dbg !4090

do.cond.688:                                      ; preds = %if.end.687
  br label %do.end.689, !dbg !4091

do.end.689:                                       ; preds = %do.cond.688
  %240 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !4093, !tbaa !1975
  store %struct._object* %240, %struct._object** @PyExc_IOError, align 8, !dbg !4094, !tbaa !1975
  %241 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4095, !tbaa !1975
  %242 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !4097, !tbaa !1975
  %call690 = call i32 @PyDict_SetItemString(%struct._object* %241, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), %struct._object* %242), !dbg !4098
  %tobool691 = icmp ne i32 %call690, 0, !dbg !4098
  br i1 %tobool691, label %if.then.692, label %if.end.693, !dbg !4099

if.then.692:                                      ; preds = %do.end.689
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4100
  unreachable, !dbg !4100

if.end.693:                                       ; preds = %do.end.689
  %243 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4102, !tbaa !1975
  %244 = load %struct._object*, %struct._object** @PyExc_EOFError, align 8, !dbg !4104, !tbaa !1975
  %call694 = call i32 @PyDict_SetItemString(%struct._object* %243, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), %struct._object* %244), !dbg !4105
  %tobool695 = icmp ne i32 %call694, 0, !dbg !4105
  br i1 %tobool695, label %if.then.696, label %if.end.697, !dbg !4106

if.then.696:                                      ; preds = %if.end.693
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4107
  unreachable, !dbg !4107

if.end.697:                                       ; preds = %if.end.693
  %245 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4109, !tbaa !1975
  %246 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !4111, !tbaa !1975
  %call698 = call i32 @PyDict_SetItemString(%struct._object* %245, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i32 0, i32 0), %struct._object* %246), !dbg !4112
  %tobool699 = icmp ne i32 %call698, 0, !dbg !4112
  br i1 %tobool699, label %if.then.700, label %if.end.701, !dbg !4113

if.then.700:                                      ; preds = %if.end.697
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4114
  unreachable, !dbg !4114

if.end.701:                                       ; preds = %if.end.697
  %247 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4116, !tbaa !1975
  %248 = load %struct._object*, %struct._object** @PyExc_NotImplementedError, align 8, !dbg !4118, !tbaa !1975
  %call702 = call i32 @PyDict_SetItemString(%struct._object* %247, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i32 0, i32 0), %struct._object* %248), !dbg !4119
  %tobool703 = icmp ne i32 %call702, 0, !dbg !4119
  br i1 %tobool703, label %if.then.704, label %if.end.705, !dbg !4120

if.then.704:                                      ; preds = %if.end.701
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4121
  unreachable, !dbg !4121

if.end.705:                                       ; preds = %if.end.701
  %249 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4123, !tbaa !1975
  %250 = load %struct._object*, %struct._object** @PyExc_NameError, align 8, !dbg !4125, !tbaa !1975
  %call706 = call i32 @PyDict_SetItemString(%struct._object* %249, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), %struct._object* %250), !dbg !4126
  %tobool707 = icmp ne i32 %call706, 0, !dbg !4126
  br i1 %tobool707, label %if.then.708, label %if.end.709, !dbg !4127

if.then.708:                                      ; preds = %if.end.705
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4128
  unreachable, !dbg !4128

if.end.709:                                       ; preds = %if.end.705
  %251 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4130, !tbaa !1975
  %252 = load %struct._object*, %struct._object** @PyExc_UnboundLocalError, align 8, !dbg !4132, !tbaa !1975
  %call710 = call i32 @PyDict_SetItemString(%struct._object* %251, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i32 0, i32 0), %struct._object* %252), !dbg !4133
  %tobool711 = icmp ne i32 %call710, 0, !dbg !4133
  br i1 %tobool711, label %if.then.712, label %if.end.713, !dbg !4134

if.then.712:                                      ; preds = %if.end.709
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4135
  unreachable, !dbg !4135

if.end.713:                                       ; preds = %if.end.709
  %253 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4137, !tbaa !1975
  %254 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !4139, !tbaa !1975
  %call714 = call i32 @PyDict_SetItemString(%struct._object* %253, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i32 0, i32 0), %struct._object* %254), !dbg !4140
  %tobool715 = icmp ne i32 %call714, 0, !dbg !4140
  br i1 %tobool715, label %if.then.716, label %if.end.717, !dbg !4141

if.then.716:                                      ; preds = %if.end.713
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4142
  unreachable, !dbg !4142

if.end.717:                                       ; preds = %if.end.713
  %255 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4144, !tbaa !1975
  %256 = load %struct._object*, %struct._object** @PyExc_SyntaxError, align 8, !dbg !4146, !tbaa !1975
  %call718 = call i32 @PyDict_SetItemString(%struct._object* %255, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i32 0, i32 0), %struct._object* %256), !dbg !4147
  %tobool719 = icmp ne i32 %call718, 0, !dbg !4147
  br i1 %tobool719, label %if.then.720, label %if.end.721, !dbg !4148

if.then.720:                                      ; preds = %if.end.717
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4149
  unreachable, !dbg !4149

if.end.721:                                       ; preds = %if.end.717
  %257 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4151, !tbaa !1975
  %258 = load %struct._object*, %struct._object** @PyExc_IndentationError, align 8, !dbg !4153, !tbaa !1975
  %call722 = call i32 @PyDict_SetItemString(%struct._object* %257, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i32 0, i32 0), %struct._object* %258), !dbg !4154
  %tobool723 = icmp ne i32 %call722, 0, !dbg !4154
  br i1 %tobool723, label %if.then.724, label %if.end.725, !dbg !4155

if.then.724:                                      ; preds = %if.end.721
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4156
  unreachable, !dbg !4156

if.end.725:                                       ; preds = %if.end.721
  %259 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4158, !tbaa !1975
  %260 = load %struct._object*, %struct._object** @PyExc_TabError, align 8, !dbg !4160, !tbaa !1975
  %call726 = call i32 @PyDict_SetItemString(%struct._object* %259, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0), %struct._object* %260), !dbg !4161
  %tobool727 = icmp ne i32 %call726, 0, !dbg !4161
  br i1 %tobool727, label %if.then.728, label %if.end.729, !dbg !4162

if.then.728:                                      ; preds = %if.end.725
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4163
  unreachable, !dbg !4163

if.end.729:                                       ; preds = %if.end.725
  %261 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4165, !tbaa !1975
  %262 = load %struct._object*, %struct._object** @PyExc_LookupError, align 8, !dbg !4167, !tbaa !1975
  %call730 = call i32 @PyDict_SetItemString(%struct._object* %261, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i32 0, i32 0), %struct._object* %262), !dbg !4168
  %tobool731 = icmp ne i32 %call730, 0, !dbg !4168
  br i1 %tobool731, label %if.then.732, label %if.end.733, !dbg !4169

if.then.732:                                      ; preds = %if.end.729
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4170
  unreachable, !dbg !4170

if.end.733:                                       ; preds = %if.end.729
  %263 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4172, !tbaa !1975
  %264 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !4174, !tbaa !1975
  %call734 = call i32 @PyDict_SetItemString(%struct._object* %263, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), %struct._object* %264), !dbg !4175
  %tobool735 = icmp ne i32 %call734, 0, !dbg !4175
  br i1 %tobool735, label %if.then.736, label %if.end.737, !dbg !4176

if.then.736:                                      ; preds = %if.end.733
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4177
  unreachable, !dbg !4177

if.end.737:                                       ; preds = %if.end.733
  %265 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4179, !tbaa !1975
  %266 = load %struct._object*, %struct._object** @PyExc_KeyError, align 8, !dbg !4181, !tbaa !1975
  %call738 = call i32 @PyDict_SetItemString(%struct._object* %265, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i32 0, i32 0), %struct._object* %266), !dbg !4182
  %tobool739 = icmp ne i32 %call738, 0, !dbg !4182
  br i1 %tobool739, label %if.then.740, label %if.end.741, !dbg !4183

if.then.740:                                      ; preds = %if.end.737
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4184
  unreachable, !dbg !4184

if.end.741:                                       ; preds = %if.end.737
  %267 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4186, !tbaa !1975
  %268 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4188, !tbaa !1975
  %call742 = call i32 @PyDict_SetItemString(%struct._object* %267, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i32 0, i32 0), %struct._object* %268), !dbg !4189
  %tobool743 = icmp ne i32 %call742, 0, !dbg !4189
  br i1 %tobool743, label %if.then.744, label %if.end.745, !dbg !4190

if.then.744:                                      ; preds = %if.end.741
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4191
  unreachable, !dbg !4191

if.end.745:                                       ; preds = %if.end.741
  %269 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4193, !tbaa !1975
  %270 = load %struct._object*, %struct._object** @PyExc_UnicodeError, align 8, !dbg !4195, !tbaa !1975
  %call746 = call i32 @PyDict_SetItemString(%struct._object* %269, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), %struct._object* %270), !dbg !4196
  %tobool747 = icmp ne i32 %call746, 0, !dbg !4196
  br i1 %tobool747, label %if.then.748, label %if.end.749, !dbg !4197

if.then.748:                                      ; preds = %if.end.745
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4198
  unreachable, !dbg !4198

if.end.749:                                       ; preds = %if.end.745
  %271 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4200, !tbaa !1975
  %272 = load %struct._object*, %struct._object** @PyExc_UnicodeEncodeError, align 8, !dbg !4202, !tbaa !1975
  %call750 = call i32 @PyDict_SetItemString(%struct._object* %271, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i32 0, i32 0), %struct._object* %272), !dbg !4203
  %tobool751 = icmp ne i32 %call750, 0, !dbg !4203
  br i1 %tobool751, label %if.then.752, label %if.end.753, !dbg !4204

if.then.752:                                      ; preds = %if.end.749
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4205
  unreachable, !dbg !4205

if.end.753:                                       ; preds = %if.end.749
  %273 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4207, !tbaa !1975
  %274 = load %struct._object*, %struct._object** @PyExc_UnicodeDecodeError, align 8, !dbg !4209, !tbaa !1975
  %call754 = call i32 @PyDict_SetItemString(%struct._object* %273, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i32 0, i32 0), %struct._object* %274), !dbg !4210
  %tobool755 = icmp ne i32 %call754, 0, !dbg !4210
  br i1 %tobool755, label %if.then.756, label %if.end.757, !dbg !4211

if.then.756:                                      ; preds = %if.end.753
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4212
  unreachable, !dbg !4212

if.end.757:                                       ; preds = %if.end.753
  %275 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4214, !tbaa !1975
  %276 = load %struct._object*, %struct._object** @PyExc_UnicodeTranslateError, align 8, !dbg !4216, !tbaa !1975
  %call758 = call i32 @PyDict_SetItemString(%struct._object* %275, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i32 0, i32 0), %struct._object* %276), !dbg !4217
  %tobool759 = icmp ne i32 %call758, 0, !dbg !4217
  br i1 %tobool759, label %if.then.760, label %if.end.761, !dbg !4218

if.then.760:                                      ; preds = %if.end.757
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4219
  unreachable, !dbg !4219

if.end.761:                                       ; preds = %if.end.757
  %277 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4221, !tbaa !1975
  %278 = load %struct._object*, %struct._object** @PyExc_AssertionError, align 8, !dbg !4223, !tbaa !1975
  %call762 = call i32 @PyDict_SetItemString(%struct._object* %277, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), %struct._object* %278), !dbg !4224
  %tobool763 = icmp ne i32 %call762, 0, !dbg !4224
  br i1 %tobool763, label %if.then.764, label %if.end.765, !dbg !4225

if.then.764:                                      ; preds = %if.end.761
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4226
  unreachable, !dbg !4226

if.end.765:                                       ; preds = %if.end.761
  %279 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4228, !tbaa !1975
  %280 = load %struct._object*, %struct._object** @PyExc_ArithmeticError, align 8, !dbg !4230, !tbaa !1975
  %call766 = call i32 @PyDict_SetItemString(%struct._object* %279, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), %struct._object* %280), !dbg !4231
  %tobool767 = icmp ne i32 %call766, 0, !dbg !4231
  br i1 %tobool767, label %if.then.768, label %if.end.769, !dbg !4232

if.then.768:                                      ; preds = %if.end.765
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4233
  unreachable, !dbg !4233

if.end.769:                                       ; preds = %if.end.765
  %281 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4235, !tbaa !1975
  %282 = load %struct._object*, %struct._object** @PyExc_FloatingPointError, align 8, !dbg !4237, !tbaa !1975
  %call770 = call i32 @PyDict_SetItemString(%struct._object* %281, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i32 0, i32 0), %struct._object* %282), !dbg !4238
  %tobool771 = icmp ne i32 %call770, 0, !dbg !4238
  br i1 %tobool771, label %if.then.772, label %if.end.773, !dbg !4239

if.then.772:                                      ; preds = %if.end.769
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4240
  unreachable, !dbg !4240

if.end.773:                                       ; preds = %if.end.769
  %283 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4242, !tbaa !1975
  %284 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !4244, !tbaa !1975
  %call774 = call i32 @PyDict_SetItemString(%struct._object* %283, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), %struct._object* %284), !dbg !4245
  %tobool775 = icmp ne i32 %call774, 0, !dbg !4245
  br i1 %tobool775, label %if.then.776, label %if.end.777, !dbg !4246

if.then.776:                                      ; preds = %if.end.773
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4247
  unreachable, !dbg !4247

if.end.777:                                       ; preds = %if.end.773
  %285 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4249, !tbaa !1975
  %286 = load %struct._object*, %struct._object** @PyExc_ZeroDivisionError, align 8, !dbg !4251, !tbaa !1975
  %call778 = call i32 @PyDict_SetItemString(%struct._object* %285, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i32 0, i32 0), %struct._object* %286), !dbg !4252
  %tobool779 = icmp ne i32 %call778, 0, !dbg !4252
  br i1 %tobool779, label %if.then.780, label %if.end.781, !dbg !4253

if.then.780:                                      ; preds = %if.end.777
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4254
  unreachable, !dbg !4254

if.end.781:                                       ; preds = %if.end.777
  %287 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4256, !tbaa !1975
  %288 = load %struct._object*, %struct._object** @PyExc_SystemError, align 8, !dbg !4258, !tbaa !1975
  %call782 = call i32 @PyDict_SetItemString(%struct._object* %287, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0), %struct._object* %288), !dbg !4259
  %tobool783 = icmp ne i32 %call782, 0, !dbg !4259
  br i1 %tobool783, label %if.then.784, label %if.end.785, !dbg !4260

if.then.784:                                      ; preds = %if.end.781
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4261
  unreachable, !dbg !4261

if.end.785:                                       ; preds = %if.end.781
  %289 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4263, !tbaa !1975
  %290 = load %struct._object*, %struct._object** @PyExc_ReferenceError, align 8, !dbg !4265, !tbaa !1975
  %call786 = call i32 @PyDict_SetItemString(%struct._object* %289, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0), %struct._object* %290), !dbg !4266
  %tobool787 = icmp ne i32 %call786, 0, !dbg !4266
  br i1 %tobool787, label %if.then.788, label %if.end.789, !dbg !4267

if.then.788:                                      ; preds = %if.end.785
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4268
  unreachable, !dbg !4268

if.end.789:                                       ; preds = %if.end.785
  %291 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4270, !tbaa !1975
  %292 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !4272, !tbaa !1975
  %call790 = call i32 @PyDict_SetItemString(%struct._object* %291, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i32 0, i32 0), %struct._object* %292), !dbg !4273
  %tobool791 = icmp ne i32 %call790, 0, !dbg !4273
  br i1 %tobool791, label %if.then.792, label %if.end.793, !dbg !4274

if.then.792:                                      ; preds = %if.end.789
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4275
  unreachable, !dbg !4275

if.end.793:                                       ; preds = %if.end.789
  %293 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4277, !tbaa !1975
  %294 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !4279, !tbaa !1975
  %call794 = call i32 @PyDict_SetItemString(%struct._object* %293, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i32 0, i32 0), %struct._object* %294), !dbg !4280
  %tobool795 = icmp ne i32 %call794, 0, !dbg !4280
  br i1 %tobool795, label %if.then.796, label %if.end.797, !dbg !4281

if.then.796:                                      ; preds = %if.end.793
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4282
  unreachable, !dbg !4282

if.end.797:                                       ; preds = %if.end.793
  %295 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4284, !tbaa !1975
  %296 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !4286, !tbaa !1975
  %call798 = call i32 @PyDict_SetItemString(%struct._object* %295, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i32 0, i32 0), %struct._object* %296), !dbg !4287
  %tobool799 = icmp ne i32 %call798, 0, !dbg !4287
  br i1 %tobool799, label %if.then.800, label %if.end.801, !dbg !4288

if.then.800:                                      ; preds = %if.end.797
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4289
  unreachable, !dbg !4289

if.end.801:                                       ; preds = %if.end.797
  %297 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4291, !tbaa !1975
  %298 = load %struct._object*, %struct._object** @PyExc_Warning, align 8, !dbg !4293, !tbaa !1975
  %call802 = call i32 @PyDict_SetItemString(%struct._object* %297, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46, i32 0, i32 0), %struct._object* %298), !dbg !4294
  %tobool803 = icmp ne i32 %call802, 0, !dbg !4294
  br i1 %tobool803, label %if.then.804, label %if.end.805, !dbg !4295

if.then.804:                                      ; preds = %if.end.801
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4296
  unreachable, !dbg !4296

if.end.805:                                       ; preds = %if.end.801
  %299 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4298, !tbaa !1975
  %300 = load %struct._object*, %struct._object** @PyExc_UserWarning, align 8, !dbg !4300, !tbaa !1975
  %call806 = call i32 @PyDict_SetItemString(%struct._object* %299, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), %struct._object* %300), !dbg !4301
  %tobool807 = icmp ne i32 %call806, 0, !dbg !4301
  br i1 %tobool807, label %if.then.808, label %if.end.809, !dbg !4302

if.then.808:                                      ; preds = %if.end.805
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4303
  unreachable, !dbg !4303

if.end.809:                                       ; preds = %if.end.805
  %301 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4305, !tbaa !1975
  %302 = load %struct._object*, %struct._object** @PyExc_DeprecationWarning, align 8, !dbg !4307, !tbaa !1975
  %call810 = call i32 @PyDict_SetItemString(%struct._object* %301, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i32 0, i32 0), %struct._object* %302), !dbg !4308
  %tobool811 = icmp ne i32 %call810, 0, !dbg !4308
  br i1 %tobool811, label %if.then.812, label %if.end.813, !dbg !4309

if.then.812:                                      ; preds = %if.end.809
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4310
  unreachable, !dbg !4310

if.end.813:                                       ; preds = %if.end.809
  %303 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4312, !tbaa !1975
  %304 = load %struct._object*, %struct._object** @PyExc_PendingDeprecationWarning, align 8, !dbg !4314, !tbaa !1975
  %call814 = call i32 @PyDict_SetItemString(%struct._object* %303, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.49, i32 0, i32 0), %struct._object* %304), !dbg !4315
  %tobool815 = icmp ne i32 %call814, 0, !dbg !4315
  br i1 %tobool815, label %if.then.816, label %if.end.817, !dbg !4316

if.then.816:                                      ; preds = %if.end.813
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4317
  unreachable, !dbg !4317

if.end.817:                                       ; preds = %if.end.813
  %305 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4319, !tbaa !1975
  %306 = load %struct._object*, %struct._object** @PyExc_SyntaxWarning, align 8, !dbg !4321, !tbaa !1975
  %call818 = call i32 @PyDict_SetItemString(%struct._object* %305, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i32 0, i32 0), %struct._object* %306), !dbg !4322
  %tobool819 = icmp ne i32 %call818, 0, !dbg !4322
  br i1 %tobool819, label %if.then.820, label %if.end.821, !dbg !4323

if.then.820:                                      ; preds = %if.end.817
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4324
  unreachable, !dbg !4324

if.end.821:                                       ; preds = %if.end.817
  %307 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4326, !tbaa !1975
  %308 = load %struct._object*, %struct._object** @PyExc_RuntimeWarning, align 8, !dbg !4328, !tbaa !1975
  %call822 = call i32 @PyDict_SetItemString(%struct._object* %307, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), %struct._object* %308), !dbg !4329
  %tobool823 = icmp ne i32 %call822, 0, !dbg !4329
  br i1 %tobool823, label %if.then.824, label %if.end.825, !dbg !4330

if.then.824:                                      ; preds = %if.end.821
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4331
  unreachable, !dbg !4331

if.end.825:                                       ; preds = %if.end.821
  %309 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4333, !tbaa !1975
  %310 = load %struct._object*, %struct._object** @PyExc_FutureWarning, align 8, !dbg !4335, !tbaa !1975
  %call826 = call i32 @PyDict_SetItemString(%struct._object* %309, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0), %struct._object* %310), !dbg !4336
  %tobool827 = icmp ne i32 %call826, 0, !dbg !4336
  br i1 %tobool827, label %if.then.828, label %if.end.829, !dbg !4337

if.then.828:                                      ; preds = %if.end.825
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4338
  unreachable, !dbg !4338

if.end.829:                                       ; preds = %if.end.825
  %311 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4340, !tbaa !1975
  %312 = load %struct._object*, %struct._object** @PyExc_ImportWarning, align 8, !dbg !4342, !tbaa !1975
  %call830 = call i32 @PyDict_SetItemString(%struct._object* %311, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), %struct._object* %312), !dbg !4343
  %tobool831 = icmp ne i32 %call830, 0, !dbg !4343
  br i1 %tobool831, label %if.then.832, label %if.end.833, !dbg !4344

if.then.832:                                      ; preds = %if.end.829
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4345
  unreachable, !dbg !4345

if.end.833:                                       ; preds = %if.end.829
  %313 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4347, !tbaa !1975
  %314 = load %struct._object*, %struct._object** @PyExc_UnicodeWarning, align 8, !dbg !4349, !tbaa !1975
  %call834 = call i32 @PyDict_SetItemString(%struct._object* %313, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), %struct._object* %314), !dbg !4350
  %tobool835 = icmp ne i32 %call834, 0, !dbg !4350
  br i1 %tobool835, label %if.then.836, label %if.end.837, !dbg !4351

if.then.836:                                      ; preds = %if.end.833
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4352
  unreachable, !dbg !4352

if.end.837:                                       ; preds = %if.end.833
  %315 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4354, !tbaa !1975
  %316 = load %struct._object*, %struct._object** @PyExc_BytesWarning, align 8, !dbg !4356, !tbaa !1975
  %call838 = call i32 @PyDict_SetItemString(%struct._object* %315, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), %struct._object* %316), !dbg !4357
  %tobool839 = icmp ne i32 %call838, 0, !dbg !4357
  br i1 %tobool839, label %if.then.840, label %if.end.841, !dbg !4358

if.then.840:                                      ; preds = %if.end.837
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4359
  unreachable, !dbg !4359

if.end.841:                                       ; preds = %if.end.837
  %317 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4361, !tbaa !1975
  %318 = load %struct._object*, %struct._object** @PyExc_ResourceWarning, align 8, !dbg !4363, !tbaa !1975
  %call842 = call i32 @PyDict_SetItemString(%struct._object* %317, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i32 0, i32 0), %struct._object* %318), !dbg !4364
  %tobool843 = icmp ne i32 %call842, 0, !dbg !4364
  br i1 %tobool843, label %if.then.844, label %if.end.845, !dbg !4365

if.then.844:                                      ; preds = %if.end.841
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4366
  unreachable, !dbg !4366

if.end.845:                                       ; preds = %if.end.841
  %319 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4368, !tbaa !1975
  %tobool846 = icmp ne %struct._object* %319, null, !dbg !4368
  br i1 %tobool846, label %if.end.852, label %if.then.847, !dbg !4370

if.then.847:                                      ; preds = %if.end.845
  %call848 = call %struct._object* @PyDict_New(), !dbg !4371
  store %struct._object* %call848, %struct._object** @errnomap, align 8, !dbg !4373, !tbaa !1975
  %320 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4374, !tbaa !1975
  %tobool849 = icmp ne %struct._object* %320, null, !dbg !4374
  br i1 %tobool849, label %if.end.851, label %if.then.850, !dbg !4376

if.then.850:                                      ; preds = %if.then.847
  call void @Py_FatalError(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.57, i32 0, i32 0)) #6, !dbg !4377
  unreachable, !dbg !4377

if.end.851:                                       ; preds = %if.then.847
  br label %if.end.852, !dbg !4378

if.end.852:                                       ; preds = %if.end.851, %if.end.845
  %321 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4379, !tbaa !1975
  %322 = load %struct._object*, %struct._object** @PyExc_ConnectionError, align 8, !dbg !4381, !tbaa !1975
  %call853 = call i32 @PyDict_SetItemString(%struct._object* %321, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i32 0, i32 0), %struct._object* %322), !dbg !4382
  %tobool854 = icmp ne i32 %call853, 0, !dbg !4382
  br i1 %tobool854, label %if.then.855, label %if.end.856, !dbg !4383

if.then.855:                                      ; preds = %if.end.852
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4384
  unreachable, !dbg !4384

if.end.856:                                       ; preds = %if.end.852
  %323 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4386, !tbaa !1975
  %324 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !4388, !tbaa !1975
  %call857 = call i32 @PyDict_SetItemString(%struct._object* %323, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i32 0, i32 0), %struct._object* %324), !dbg !4389
  %tobool858 = icmp ne i32 %call857, 0, !dbg !4389
  br i1 %tobool858, label %if.then.859, label %if.end.860, !dbg !4390

if.then.859:                                      ; preds = %if.end.856
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4391
  unreachable, !dbg !4391

if.end.860:                                       ; preds = %if.end.856
  %325 = bitcast %struct._object** %_code to i8*, !dbg !4393
  call void @llvm.lifetime.start(i64 8, i8* %325) #2, !dbg !4393
  call void @llvm.dbg.declare(metadata %struct._object** %_code, metadata !694, metadata !1979), !dbg !4394
  %call861 = call %struct._object* @PyLong_FromLong(i64 11), !dbg !4395
  store %struct._object* %call861, %struct._object** %_code, align 8, !dbg !4394, !tbaa !1975
  %326 = load %struct._object*, %struct._object** %_code, align 8, !dbg !4396, !tbaa !1975
  %tobool862 = icmp ne %struct._object* %326, null, !dbg !4396
  br i1 %tobool862, label %lor.lhs.false, label %if.then.865, !dbg !4398

lor.lhs.false:                                    ; preds = %if.end.860
  %327 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4399, !tbaa !1975
  %328 = load %struct._object*, %struct._object** %_code, align 8, !dbg !4401, !tbaa !1975
  %329 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !4402, !tbaa !1975
  %call863 = call i32 @PyDict_SetItem(%struct._object* %327, %struct._object* %328, %struct._object* %329), !dbg !4403
  %tobool864 = icmp ne i32 %call863, 0, !dbg !4403
  br i1 %tobool864, label %if.then.865, label %if.end.866, !dbg !4404

if.then.865:                                      ; preds = %lor.lhs.false, %if.end.860
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4405
  unreachable, !dbg !4405

if.end.866:                                       ; preds = %lor.lhs.false
  br label %do.body.867, !dbg !4408

do.body.867:                                      ; preds = %if.end.866
  %330 = bitcast %struct._object** %_py_decref_tmp868 to i8*, !dbg !4410
  call void @llvm.lifetime.start(i64 8, i8* %330) #2, !dbg !4410
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp868, metadata !696, metadata !1979), !dbg !4412
  %331 = load %struct._object*, %struct._object** %_code, align 8, !dbg !4413, !tbaa !1975
  store %struct._object* %331, %struct._object** %_py_decref_tmp868, align 8, !dbg !4412, !tbaa !1975
  %332 = load %struct._object*, %struct._object** %_py_decref_tmp868, align 8, !dbg !4414, !tbaa !1975
  %ob_refcnt869 = getelementptr inbounds %struct._object, %struct._object* %332, i32 0, i32 0, !dbg !4416
  %333 = load i64, i64* %ob_refcnt869, align 8, !dbg !4417, !tbaa !2003
  %dec870 = add i64 %333, -1, !dbg !4417
  store i64 %dec870, i64* %ob_refcnt869, align 8, !dbg !4417, !tbaa !2003
  %cmp871 = icmp ne i64 %dec870, 0, !dbg !4418
  br i1 %cmp871, label %if.then.872, label %if.else.873, !dbg !4419

if.then.872:                                      ; preds = %do.body.867
  br label %if.end.876, !dbg !4420

if.else.873:                                      ; preds = %do.body.867
  %334 = load %struct._object*, %struct._object** %_py_decref_tmp868, align 8, !dbg !4422, !tbaa !1975
  %ob_type874 = getelementptr inbounds %struct._object, %struct._object* %334, i32 0, i32 1, !dbg !4424
  %335 = load %struct._typeobject*, %struct._typeobject** %ob_type874, align 8, !dbg !4424, !tbaa !2039
  %tp_dealloc875 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %335, i32 0, i32 4, !dbg !4425
  %336 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc875, align 8, !dbg !4425, !tbaa !2091
  %337 = load %struct._object*, %struct._object** %_py_decref_tmp868, align 8, !dbg !4426, !tbaa !1975
  call void %336(%struct._object* %337), !dbg !4427
  br label %if.end.876

if.end.876:                                       ; preds = %if.else.873, %if.then.872
  %338 = bitcast %struct._object** %_py_decref_tmp868 to i8*, !dbg !4428
  call void @llvm.lifetime.end(i64 8, i8* %338) #2, !dbg !4428
  br label %do.cond.877, !dbg !4430

do.cond.877:                                      ; preds = %if.end.876
  br label %do.end.878, !dbg !4431

do.end.878:                                       ; preds = %do.cond.877
  %339 = bitcast %struct._object** %_code to i8*, !dbg !4433
  call void @llvm.lifetime.end(i64 8, i8* %339) #2, !dbg !4433
  %340 = bitcast %struct._object** %_code879 to i8*, !dbg !4435
  call void @llvm.lifetime.start(i64 8, i8* %340) #2, !dbg !4435
  call void @llvm.dbg.declare(metadata %struct._object** %_code879, metadata !698, metadata !1979), !dbg !4436
  %call880 = call %struct._object* @PyLong_FromLong(i64 114), !dbg !4437
  store %struct._object* %call880, %struct._object** %_code879, align 8, !dbg !4436, !tbaa !1975
  %341 = load %struct._object*, %struct._object** %_code879, align 8, !dbg !4438, !tbaa !1975
  %tobool881 = icmp ne %struct._object* %341, null, !dbg !4438
  br i1 %tobool881, label %lor.lhs.false.882, label %if.then.885, !dbg !4440

lor.lhs.false.882:                                ; preds = %do.end.878
  %342 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4441, !tbaa !1975
  %343 = load %struct._object*, %struct._object** %_code879, align 8, !dbg !4443, !tbaa !1975
  %344 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !4444, !tbaa !1975
  %call883 = call i32 @PyDict_SetItem(%struct._object* %342, %struct._object* %343, %struct._object* %344), !dbg !4445
  %tobool884 = icmp ne i32 %call883, 0, !dbg !4445
  br i1 %tobool884, label %if.then.885, label %if.end.886, !dbg !4446

if.then.885:                                      ; preds = %lor.lhs.false.882, %do.end.878
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4447
  unreachable, !dbg !4447

if.end.886:                                       ; preds = %lor.lhs.false.882
  br label %do.body.887, !dbg !4450

do.body.887:                                      ; preds = %if.end.886
  %345 = bitcast %struct._object** %_py_decref_tmp888 to i8*, !dbg !4452
  call void @llvm.lifetime.start(i64 8, i8* %345) #2, !dbg !4452
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp888, metadata !700, metadata !1979), !dbg !4454
  %346 = load %struct._object*, %struct._object** %_code879, align 8, !dbg !4455, !tbaa !1975
  store %struct._object* %346, %struct._object** %_py_decref_tmp888, align 8, !dbg !4454, !tbaa !1975
  %347 = load %struct._object*, %struct._object** %_py_decref_tmp888, align 8, !dbg !4456, !tbaa !1975
  %ob_refcnt889 = getelementptr inbounds %struct._object, %struct._object* %347, i32 0, i32 0, !dbg !4458
  %348 = load i64, i64* %ob_refcnt889, align 8, !dbg !4459, !tbaa !2003
  %dec890 = add i64 %348, -1, !dbg !4459
  store i64 %dec890, i64* %ob_refcnt889, align 8, !dbg !4459, !tbaa !2003
  %cmp891 = icmp ne i64 %dec890, 0, !dbg !4460
  br i1 %cmp891, label %if.then.892, label %if.else.893, !dbg !4461

if.then.892:                                      ; preds = %do.body.887
  br label %if.end.896, !dbg !4462

if.else.893:                                      ; preds = %do.body.887
  %349 = load %struct._object*, %struct._object** %_py_decref_tmp888, align 8, !dbg !4464, !tbaa !1975
  %ob_type894 = getelementptr inbounds %struct._object, %struct._object* %349, i32 0, i32 1, !dbg !4466
  %350 = load %struct._typeobject*, %struct._typeobject** %ob_type894, align 8, !dbg !4466, !tbaa !2039
  %tp_dealloc895 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %350, i32 0, i32 4, !dbg !4467
  %351 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc895, align 8, !dbg !4467, !tbaa !2091
  %352 = load %struct._object*, %struct._object** %_py_decref_tmp888, align 8, !dbg !4468, !tbaa !1975
  call void %351(%struct._object* %352), !dbg !4469
  br label %if.end.896

if.end.896:                                       ; preds = %if.else.893, %if.then.892
  %353 = bitcast %struct._object** %_py_decref_tmp888 to i8*, !dbg !4470
  call void @llvm.lifetime.end(i64 8, i8* %353) #2, !dbg !4470
  br label %do.cond.897, !dbg !4472

do.cond.897:                                      ; preds = %if.end.896
  br label %do.end.898, !dbg !4473

do.end.898:                                       ; preds = %do.cond.897
  %354 = bitcast %struct._object** %_code879 to i8*, !dbg !4475
  call void @llvm.lifetime.end(i64 8, i8* %354) #2, !dbg !4475
  %355 = bitcast %struct._object** %_code899 to i8*, !dbg !4476
  call void @llvm.lifetime.start(i64 8, i8* %355) #2, !dbg !4476
  call void @llvm.dbg.declare(metadata %struct._object** %_code899, metadata !702, metadata !1979), !dbg !4477
  %call900 = call %struct._object* @PyLong_FromLong(i64 115), !dbg !4478
  store %struct._object* %call900, %struct._object** %_code899, align 8, !dbg !4477, !tbaa !1975
  %356 = load %struct._object*, %struct._object** %_code899, align 8, !dbg !4479, !tbaa !1975
  %tobool901 = icmp ne %struct._object* %356, null, !dbg !4479
  br i1 %tobool901, label %lor.lhs.false.902, label %if.then.905, !dbg !4481

lor.lhs.false.902:                                ; preds = %do.end.898
  %357 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4482, !tbaa !1975
  %358 = load %struct._object*, %struct._object** %_code899, align 8, !dbg !4484, !tbaa !1975
  %359 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !4485, !tbaa !1975
  %call903 = call i32 @PyDict_SetItem(%struct._object* %357, %struct._object* %358, %struct._object* %359), !dbg !4486
  %tobool904 = icmp ne i32 %call903, 0, !dbg !4486
  br i1 %tobool904, label %if.then.905, label %if.end.906, !dbg !4487

if.then.905:                                      ; preds = %lor.lhs.false.902, %do.end.898
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4488
  unreachable, !dbg !4488

if.end.906:                                       ; preds = %lor.lhs.false.902
  br label %do.body.907, !dbg !4491

do.body.907:                                      ; preds = %if.end.906
  %360 = bitcast %struct._object** %_py_decref_tmp908 to i8*, !dbg !4493
  call void @llvm.lifetime.start(i64 8, i8* %360) #2, !dbg !4493
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp908, metadata !704, metadata !1979), !dbg !4495
  %361 = load %struct._object*, %struct._object** %_code899, align 8, !dbg !4496, !tbaa !1975
  store %struct._object* %361, %struct._object** %_py_decref_tmp908, align 8, !dbg !4495, !tbaa !1975
  %362 = load %struct._object*, %struct._object** %_py_decref_tmp908, align 8, !dbg !4497, !tbaa !1975
  %ob_refcnt909 = getelementptr inbounds %struct._object, %struct._object* %362, i32 0, i32 0, !dbg !4499
  %363 = load i64, i64* %ob_refcnt909, align 8, !dbg !4500, !tbaa !2003
  %dec910 = add i64 %363, -1, !dbg !4500
  store i64 %dec910, i64* %ob_refcnt909, align 8, !dbg !4500, !tbaa !2003
  %cmp911 = icmp ne i64 %dec910, 0, !dbg !4501
  br i1 %cmp911, label %if.then.912, label %if.else.913, !dbg !4502

if.then.912:                                      ; preds = %do.body.907
  br label %if.end.916, !dbg !4503

if.else.913:                                      ; preds = %do.body.907
  %364 = load %struct._object*, %struct._object** %_py_decref_tmp908, align 8, !dbg !4505, !tbaa !1975
  %ob_type914 = getelementptr inbounds %struct._object, %struct._object* %364, i32 0, i32 1, !dbg !4507
  %365 = load %struct._typeobject*, %struct._typeobject** %ob_type914, align 8, !dbg !4507, !tbaa !2039
  %tp_dealloc915 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %365, i32 0, i32 4, !dbg !4508
  %366 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc915, align 8, !dbg !4508, !tbaa !2091
  %367 = load %struct._object*, %struct._object** %_py_decref_tmp908, align 8, !dbg !4509, !tbaa !1975
  call void %366(%struct._object* %367), !dbg !4510
  br label %if.end.916

if.end.916:                                       ; preds = %if.else.913, %if.then.912
  %368 = bitcast %struct._object** %_py_decref_tmp908 to i8*, !dbg !4511
  call void @llvm.lifetime.end(i64 8, i8* %368) #2, !dbg !4511
  br label %do.cond.917, !dbg !4513

do.cond.917:                                      ; preds = %if.end.916
  br label %do.end.918, !dbg !4514

do.end.918:                                       ; preds = %do.cond.917
  %369 = bitcast %struct._object** %_code899 to i8*, !dbg !4516
  call void @llvm.lifetime.end(i64 8, i8* %369) #2, !dbg !4516
  %370 = bitcast %struct._object** %_code919 to i8*, !dbg !4517
  call void @llvm.lifetime.start(i64 8, i8* %370) #2, !dbg !4517
  call void @llvm.dbg.declare(metadata %struct._object** %_code919, metadata !706, metadata !1979), !dbg !4518
  %call920 = call %struct._object* @PyLong_FromLong(i64 11), !dbg !4519
  store %struct._object* %call920, %struct._object** %_code919, align 8, !dbg !4518, !tbaa !1975
  %371 = load %struct._object*, %struct._object** %_code919, align 8, !dbg !4520, !tbaa !1975
  %tobool921 = icmp ne %struct._object* %371, null, !dbg !4520
  br i1 %tobool921, label %lor.lhs.false.922, label %if.then.925, !dbg !4522

lor.lhs.false.922:                                ; preds = %do.end.918
  %372 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4523, !tbaa !1975
  %373 = load %struct._object*, %struct._object** %_code919, align 8, !dbg !4525, !tbaa !1975
  %374 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !4526, !tbaa !1975
  %call923 = call i32 @PyDict_SetItem(%struct._object* %372, %struct._object* %373, %struct._object* %374), !dbg !4527
  %tobool924 = icmp ne i32 %call923, 0, !dbg !4527
  br i1 %tobool924, label %if.then.925, label %if.end.926, !dbg !4528

if.then.925:                                      ; preds = %lor.lhs.false.922, %do.end.918
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4529
  unreachable, !dbg !4529

if.end.926:                                       ; preds = %lor.lhs.false.922
  br label %do.body.927, !dbg !4532

do.body.927:                                      ; preds = %if.end.926
  %375 = bitcast %struct._object** %_py_decref_tmp928 to i8*, !dbg !4534
  call void @llvm.lifetime.start(i64 8, i8* %375) #2, !dbg !4534
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp928, metadata !708, metadata !1979), !dbg !4536
  %376 = load %struct._object*, %struct._object** %_code919, align 8, !dbg !4537, !tbaa !1975
  store %struct._object* %376, %struct._object** %_py_decref_tmp928, align 8, !dbg !4536, !tbaa !1975
  %377 = load %struct._object*, %struct._object** %_py_decref_tmp928, align 8, !dbg !4538, !tbaa !1975
  %ob_refcnt929 = getelementptr inbounds %struct._object, %struct._object* %377, i32 0, i32 0, !dbg !4540
  %378 = load i64, i64* %ob_refcnt929, align 8, !dbg !4541, !tbaa !2003
  %dec930 = add i64 %378, -1, !dbg !4541
  store i64 %dec930, i64* %ob_refcnt929, align 8, !dbg !4541, !tbaa !2003
  %cmp931 = icmp ne i64 %dec930, 0, !dbg !4542
  br i1 %cmp931, label %if.then.932, label %if.else.933, !dbg !4543

if.then.932:                                      ; preds = %do.body.927
  br label %if.end.936, !dbg !4544

if.else.933:                                      ; preds = %do.body.927
  %379 = load %struct._object*, %struct._object** %_py_decref_tmp928, align 8, !dbg !4546, !tbaa !1975
  %ob_type934 = getelementptr inbounds %struct._object, %struct._object* %379, i32 0, i32 1, !dbg !4548
  %380 = load %struct._typeobject*, %struct._typeobject** %ob_type934, align 8, !dbg !4548, !tbaa !2039
  %tp_dealloc935 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %380, i32 0, i32 4, !dbg !4549
  %381 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc935, align 8, !dbg !4549, !tbaa !2091
  %382 = load %struct._object*, %struct._object** %_py_decref_tmp928, align 8, !dbg !4550, !tbaa !1975
  call void %381(%struct._object* %382), !dbg !4551
  br label %if.end.936

if.end.936:                                       ; preds = %if.else.933, %if.then.932
  %383 = bitcast %struct._object** %_py_decref_tmp928 to i8*, !dbg !4552
  call void @llvm.lifetime.end(i64 8, i8* %383) #2, !dbg !4552
  br label %do.cond.937, !dbg !4554

do.cond.937:                                      ; preds = %if.end.936
  br label %do.end.938, !dbg !4555

do.end.938:                                       ; preds = %do.cond.937
  %384 = bitcast %struct._object** %_code919 to i8*, !dbg !4557
  call void @llvm.lifetime.end(i64 8, i8* %384) #2, !dbg !4557
  %385 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4558, !tbaa !1975
  %386 = load %struct._object*, %struct._object** @PyExc_BrokenPipeError, align 8, !dbg !4560, !tbaa !1975
  %call939 = call i32 @PyDict_SetItemString(%struct._object* %385, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i32 0, i32 0), %struct._object* %386), !dbg !4561
  %tobool940 = icmp ne i32 %call939, 0, !dbg !4561
  br i1 %tobool940, label %if.then.941, label %if.end.942, !dbg !4562

if.then.941:                                      ; preds = %do.end.938
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4563
  unreachable, !dbg !4563

if.end.942:                                       ; preds = %do.end.938
  %387 = bitcast %struct._object** %_code943 to i8*, !dbg !4565
  call void @llvm.lifetime.start(i64 8, i8* %387) #2, !dbg !4565
  call void @llvm.dbg.declare(metadata %struct._object** %_code943, metadata !710, metadata !1979), !dbg !4566
  %call944 = call %struct._object* @PyLong_FromLong(i64 32), !dbg !4567
  store %struct._object* %call944, %struct._object** %_code943, align 8, !dbg !4566, !tbaa !1975
  %388 = load %struct._object*, %struct._object** %_code943, align 8, !dbg !4568, !tbaa !1975
  %tobool945 = icmp ne %struct._object* %388, null, !dbg !4568
  br i1 %tobool945, label %lor.lhs.false.946, label %if.then.949, !dbg !4570

lor.lhs.false.946:                                ; preds = %if.end.942
  %389 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4571, !tbaa !1975
  %390 = load %struct._object*, %struct._object** %_code943, align 8, !dbg !4573, !tbaa !1975
  %391 = load %struct._object*, %struct._object** @PyExc_BrokenPipeError, align 8, !dbg !4574, !tbaa !1975
  %call947 = call i32 @PyDict_SetItem(%struct._object* %389, %struct._object* %390, %struct._object* %391), !dbg !4575
  %tobool948 = icmp ne i32 %call947, 0, !dbg !4575
  br i1 %tobool948, label %if.then.949, label %if.end.950, !dbg !4576

if.then.949:                                      ; preds = %lor.lhs.false.946, %if.end.942
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4577
  unreachable, !dbg !4577

if.end.950:                                       ; preds = %lor.lhs.false.946
  br label %do.body.951, !dbg !4580

do.body.951:                                      ; preds = %if.end.950
  %392 = bitcast %struct._object** %_py_decref_tmp952 to i8*, !dbg !4582
  call void @llvm.lifetime.start(i64 8, i8* %392) #2, !dbg !4582
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp952, metadata !712, metadata !1979), !dbg !4584
  %393 = load %struct._object*, %struct._object** %_code943, align 8, !dbg !4585, !tbaa !1975
  store %struct._object* %393, %struct._object** %_py_decref_tmp952, align 8, !dbg !4584, !tbaa !1975
  %394 = load %struct._object*, %struct._object** %_py_decref_tmp952, align 8, !dbg !4586, !tbaa !1975
  %ob_refcnt953 = getelementptr inbounds %struct._object, %struct._object* %394, i32 0, i32 0, !dbg !4588
  %395 = load i64, i64* %ob_refcnt953, align 8, !dbg !4589, !tbaa !2003
  %dec954 = add i64 %395, -1, !dbg !4589
  store i64 %dec954, i64* %ob_refcnt953, align 8, !dbg !4589, !tbaa !2003
  %cmp955 = icmp ne i64 %dec954, 0, !dbg !4590
  br i1 %cmp955, label %if.then.956, label %if.else.957, !dbg !4591

if.then.956:                                      ; preds = %do.body.951
  br label %if.end.960, !dbg !4592

if.else.957:                                      ; preds = %do.body.951
  %396 = load %struct._object*, %struct._object** %_py_decref_tmp952, align 8, !dbg !4594, !tbaa !1975
  %ob_type958 = getelementptr inbounds %struct._object, %struct._object* %396, i32 0, i32 1, !dbg !4596
  %397 = load %struct._typeobject*, %struct._typeobject** %ob_type958, align 8, !dbg !4596, !tbaa !2039
  %tp_dealloc959 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %397, i32 0, i32 4, !dbg !4597
  %398 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc959, align 8, !dbg !4597, !tbaa !2091
  %399 = load %struct._object*, %struct._object** %_py_decref_tmp952, align 8, !dbg !4598, !tbaa !1975
  call void %398(%struct._object* %399), !dbg !4599
  br label %if.end.960

if.end.960:                                       ; preds = %if.else.957, %if.then.956
  %400 = bitcast %struct._object** %_py_decref_tmp952 to i8*, !dbg !4600
  call void @llvm.lifetime.end(i64 8, i8* %400) #2, !dbg !4600
  br label %do.cond.961, !dbg !4602

do.cond.961:                                      ; preds = %if.end.960
  br label %do.end.962, !dbg !4603

do.end.962:                                       ; preds = %do.cond.961
  %401 = bitcast %struct._object** %_code943 to i8*, !dbg !4605
  call void @llvm.lifetime.end(i64 8, i8* %401) #2, !dbg !4605
  %402 = bitcast %struct._object** %_code963 to i8*, !dbg !4606
  call void @llvm.lifetime.start(i64 8, i8* %402) #2, !dbg !4606
  call void @llvm.dbg.declare(metadata %struct._object** %_code963, metadata !714, metadata !1979), !dbg !4607
  %call964 = call %struct._object* @PyLong_FromLong(i64 108), !dbg !4608
  store %struct._object* %call964, %struct._object** %_code963, align 8, !dbg !4607, !tbaa !1975
  %403 = load %struct._object*, %struct._object** %_code963, align 8, !dbg !4609, !tbaa !1975
  %tobool965 = icmp ne %struct._object* %403, null, !dbg !4609
  br i1 %tobool965, label %lor.lhs.false.966, label %if.then.969, !dbg !4611

lor.lhs.false.966:                                ; preds = %do.end.962
  %404 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4612, !tbaa !1975
  %405 = load %struct._object*, %struct._object** %_code963, align 8, !dbg !4614, !tbaa !1975
  %406 = load %struct._object*, %struct._object** @PyExc_BrokenPipeError, align 8, !dbg !4615, !tbaa !1975
  %call967 = call i32 @PyDict_SetItem(%struct._object* %404, %struct._object* %405, %struct._object* %406), !dbg !4616
  %tobool968 = icmp ne i32 %call967, 0, !dbg !4616
  br i1 %tobool968, label %if.then.969, label %if.end.970, !dbg !4617

if.then.969:                                      ; preds = %lor.lhs.false.966, %do.end.962
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4618
  unreachable, !dbg !4618

if.end.970:                                       ; preds = %lor.lhs.false.966
  br label %do.body.971, !dbg !4621

do.body.971:                                      ; preds = %if.end.970
  %407 = bitcast %struct._object** %_py_decref_tmp972 to i8*, !dbg !4623
  call void @llvm.lifetime.start(i64 8, i8* %407) #2, !dbg !4623
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp972, metadata !716, metadata !1979), !dbg !4625
  %408 = load %struct._object*, %struct._object** %_code963, align 8, !dbg !4626, !tbaa !1975
  store %struct._object* %408, %struct._object** %_py_decref_tmp972, align 8, !dbg !4625, !tbaa !1975
  %409 = load %struct._object*, %struct._object** %_py_decref_tmp972, align 8, !dbg !4627, !tbaa !1975
  %ob_refcnt973 = getelementptr inbounds %struct._object, %struct._object* %409, i32 0, i32 0, !dbg !4629
  %410 = load i64, i64* %ob_refcnt973, align 8, !dbg !4630, !tbaa !2003
  %dec974 = add i64 %410, -1, !dbg !4630
  store i64 %dec974, i64* %ob_refcnt973, align 8, !dbg !4630, !tbaa !2003
  %cmp975 = icmp ne i64 %dec974, 0, !dbg !4631
  br i1 %cmp975, label %if.then.976, label %if.else.977, !dbg !4632

if.then.976:                                      ; preds = %do.body.971
  br label %if.end.980, !dbg !4633

if.else.977:                                      ; preds = %do.body.971
  %411 = load %struct._object*, %struct._object** %_py_decref_tmp972, align 8, !dbg !4635, !tbaa !1975
  %ob_type978 = getelementptr inbounds %struct._object, %struct._object* %411, i32 0, i32 1, !dbg !4637
  %412 = load %struct._typeobject*, %struct._typeobject** %ob_type978, align 8, !dbg !4637, !tbaa !2039
  %tp_dealloc979 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %412, i32 0, i32 4, !dbg !4638
  %413 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc979, align 8, !dbg !4638, !tbaa !2091
  %414 = load %struct._object*, %struct._object** %_py_decref_tmp972, align 8, !dbg !4639, !tbaa !1975
  call void %413(%struct._object* %414), !dbg !4640
  br label %if.end.980

if.end.980:                                       ; preds = %if.else.977, %if.then.976
  %415 = bitcast %struct._object** %_py_decref_tmp972 to i8*, !dbg !4641
  call void @llvm.lifetime.end(i64 8, i8* %415) #2, !dbg !4641
  br label %do.cond.981, !dbg !4643

do.cond.981:                                      ; preds = %if.end.980
  br label %do.end.982, !dbg !4644

do.end.982:                                       ; preds = %do.cond.981
  %416 = bitcast %struct._object** %_code963 to i8*, !dbg !4646
  call void @llvm.lifetime.end(i64 8, i8* %416) #2, !dbg !4646
  %417 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4647, !tbaa !1975
  %418 = load %struct._object*, %struct._object** @PyExc_ChildProcessError, align 8, !dbg !4649, !tbaa !1975
  %call983 = call i32 @PyDict_SetItemString(%struct._object* %417, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.62, i32 0, i32 0), %struct._object* %418), !dbg !4650
  %tobool984 = icmp ne i32 %call983, 0, !dbg !4650
  br i1 %tobool984, label %if.then.985, label %if.end.986, !dbg !4651

if.then.985:                                      ; preds = %do.end.982
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4652
  unreachable, !dbg !4652

if.end.986:                                       ; preds = %do.end.982
  %419 = bitcast %struct._object** %_code987 to i8*, !dbg !4654
  call void @llvm.lifetime.start(i64 8, i8* %419) #2, !dbg !4654
  call void @llvm.dbg.declare(metadata %struct._object** %_code987, metadata !718, metadata !1979), !dbg !4655
  %call988 = call %struct._object* @PyLong_FromLong(i64 10), !dbg !4656
  store %struct._object* %call988, %struct._object** %_code987, align 8, !dbg !4655, !tbaa !1975
  %420 = load %struct._object*, %struct._object** %_code987, align 8, !dbg !4657, !tbaa !1975
  %tobool989 = icmp ne %struct._object* %420, null, !dbg !4657
  br i1 %tobool989, label %lor.lhs.false.990, label %if.then.993, !dbg !4659

lor.lhs.false.990:                                ; preds = %if.end.986
  %421 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4660, !tbaa !1975
  %422 = load %struct._object*, %struct._object** %_code987, align 8, !dbg !4662, !tbaa !1975
  %423 = load %struct._object*, %struct._object** @PyExc_ChildProcessError, align 8, !dbg !4663, !tbaa !1975
  %call991 = call i32 @PyDict_SetItem(%struct._object* %421, %struct._object* %422, %struct._object* %423), !dbg !4664
  %tobool992 = icmp ne i32 %call991, 0, !dbg !4664
  br i1 %tobool992, label %if.then.993, label %if.end.994, !dbg !4665

if.then.993:                                      ; preds = %lor.lhs.false.990, %if.end.986
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4666
  unreachable, !dbg !4666

if.end.994:                                       ; preds = %lor.lhs.false.990
  br label %do.body.995, !dbg !4669

do.body.995:                                      ; preds = %if.end.994
  %424 = bitcast %struct._object** %_py_decref_tmp996 to i8*, !dbg !4671
  call void @llvm.lifetime.start(i64 8, i8* %424) #2, !dbg !4671
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp996, metadata !720, metadata !1979), !dbg !4673
  %425 = load %struct._object*, %struct._object** %_code987, align 8, !dbg !4674, !tbaa !1975
  store %struct._object* %425, %struct._object** %_py_decref_tmp996, align 8, !dbg !4673, !tbaa !1975
  %426 = load %struct._object*, %struct._object** %_py_decref_tmp996, align 8, !dbg !4675, !tbaa !1975
  %ob_refcnt997 = getelementptr inbounds %struct._object, %struct._object* %426, i32 0, i32 0, !dbg !4677
  %427 = load i64, i64* %ob_refcnt997, align 8, !dbg !4678, !tbaa !2003
  %dec998 = add i64 %427, -1, !dbg !4678
  store i64 %dec998, i64* %ob_refcnt997, align 8, !dbg !4678, !tbaa !2003
  %cmp999 = icmp ne i64 %dec998, 0, !dbg !4679
  br i1 %cmp999, label %if.then.1000, label %if.else.1001, !dbg !4680

if.then.1000:                                     ; preds = %do.body.995
  br label %if.end.1004, !dbg !4681

if.else.1001:                                     ; preds = %do.body.995
  %428 = load %struct._object*, %struct._object** %_py_decref_tmp996, align 8, !dbg !4683, !tbaa !1975
  %ob_type1002 = getelementptr inbounds %struct._object, %struct._object* %428, i32 0, i32 1, !dbg !4685
  %429 = load %struct._typeobject*, %struct._typeobject** %ob_type1002, align 8, !dbg !4685, !tbaa !2039
  %tp_dealloc1003 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %429, i32 0, i32 4, !dbg !4686
  %430 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1003, align 8, !dbg !4686, !tbaa !2091
  %431 = load %struct._object*, %struct._object** %_py_decref_tmp996, align 8, !dbg !4687, !tbaa !1975
  call void %430(%struct._object* %431), !dbg !4688
  br label %if.end.1004

if.end.1004:                                      ; preds = %if.else.1001, %if.then.1000
  %432 = bitcast %struct._object** %_py_decref_tmp996 to i8*, !dbg !4689
  call void @llvm.lifetime.end(i64 8, i8* %432) #2, !dbg !4689
  br label %do.cond.1005, !dbg !4691

do.cond.1005:                                     ; preds = %if.end.1004
  br label %do.end.1006, !dbg !4692

do.end.1006:                                      ; preds = %do.cond.1005
  %433 = bitcast %struct._object** %_code987 to i8*, !dbg !4694
  call void @llvm.lifetime.end(i64 8, i8* %433) #2, !dbg !4694
  %434 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4695, !tbaa !1975
  %435 = load %struct._object*, %struct._object** @PyExc_ConnectionAbortedError, align 8, !dbg !4697, !tbaa !1975
  %call1007 = call i32 @PyDict_SetItemString(%struct._object* %434, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.63, i32 0, i32 0), %struct._object* %435), !dbg !4698
  %tobool1008 = icmp ne i32 %call1007, 0, !dbg !4698
  br i1 %tobool1008, label %if.then.1009, label %if.end.1010, !dbg !4699

if.then.1009:                                     ; preds = %do.end.1006
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4700
  unreachable, !dbg !4700

if.end.1010:                                      ; preds = %do.end.1006
  %436 = bitcast %struct._object** %_code1011 to i8*, !dbg !4702
  call void @llvm.lifetime.start(i64 8, i8* %436) #2, !dbg !4702
  call void @llvm.dbg.declare(metadata %struct._object** %_code1011, metadata !722, metadata !1979), !dbg !4703
  %call1012 = call %struct._object* @PyLong_FromLong(i64 103), !dbg !4704
  store %struct._object* %call1012, %struct._object** %_code1011, align 8, !dbg !4703, !tbaa !1975
  %437 = load %struct._object*, %struct._object** %_code1011, align 8, !dbg !4705, !tbaa !1975
  %tobool1013 = icmp ne %struct._object* %437, null, !dbg !4705
  br i1 %tobool1013, label %lor.lhs.false.1014, label %if.then.1017, !dbg !4707

lor.lhs.false.1014:                               ; preds = %if.end.1010
  %438 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4708, !tbaa !1975
  %439 = load %struct._object*, %struct._object** %_code1011, align 8, !dbg !4710, !tbaa !1975
  %440 = load %struct._object*, %struct._object** @PyExc_ConnectionAbortedError, align 8, !dbg !4711, !tbaa !1975
  %call1015 = call i32 @PyDict_SetItem(%struct._object* %438, %struct._object* %439, %struct._object* %440), !dbg !4712
  %tobool1016 = icmp ne i32 %call1015, 0, !dbg !4712
  br i1 %tobool1016, label %if.then.1017, label %if.end.1018, !dbg !4713

if.then.1017:                                     ; preds = %lor.lhs.false.1014, %if.end.1010
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4714
  unreachable, !dbg !4714

if.end.1018:                                      ; preds = %lor.lhs.false.1014
  br label %do.body.1019, !dbg !4717

do.body.1019:                                     ; preds = %if.end.1018
  %441 = bitcast %struct._object** %_py_decref_tmp1020 to i8*, !dbg !4719
  call void @llvm.lifetime.start(i64 8, i8* %441) #2, !dbg !4719
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1020, metadata !724, metadata !1979), !dbg !4721
  %442 = load %struct._object*, %struct._object** %_code1011, align 8, !dbg !4722, !tbaa !1975
  store %struct._object* %442, %struct._object** %_py_decref_tmp1020, align 8, !dbg !4721, !tbaa !1975
  %443 = load %struct._object*, %struct._object** %_py_decref_tmp1020, align 8, !dbg !4723, !tbaa !1975
  %ob_refcnt1021 = getelementptr inbounds %struct._object, %struct._object* %443, i32 0, i32 0, !dbg !4725
  %444 = load i64, i64* %ob_refcnt1021, align 8, !dbg !4726, !tbaa !2003
  %dec1022 = add i64 %444, -1, !dbg !4726
  store i64 %dec1022, i64* %ob_refcnt1021, align 8, !dbg !4726, !tbaa !2003
  %cmp1023 = icmp ne i64 %dec1022, 0, !dbg !4727
  br i1 %cmp1023, label %if.then.1024, label %if.else.1025, !dbg !4728

if.then.1024:                                     ; preds = %do.body.1019
  br label %if.end.1028, !dbg !4729

if.else.1025:                                     ; preds = %do.body.1019
  %445 = load %struct._object*, %struct._object** %_py_decref_tmp1020, align 8, !dbg !4731, !tbaa !1975
  %ob_type1026 = getelementptr inbounds %struct._object, %struct._object* %445, i32 0, i32 1, !dbg !4733
  %446 = load %struct._typeobject*, %struct._typeobject** %ob_type1026, align 8, !dbg !4733, !tbaa !2039
  %tp_dealloc1027 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %446, i32 0, i32 4, !dbg !4734
  %447 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1027, align 8, !dbg !4734, !tbaa !2091
  %448 = load %struct._object*, %struct._object** %_py_decref_tmp1020, align 8, !dbg !4735, !tbaa !1975
  call void %447(%struct._object* %448), !dbg !4736
  br label %if.end.1028

if.end.1028:                                      ; preds = %if.else.1025, %if.then.1024
  %449 = bitcast %struct._object** %_py_decref_tmp1020 to i8*, !dbg !4737
  call void @llvm.lifetime.end(i64 8, i8* %449) #2, !dbg !4737
  br label %do.cond.1029, !dbg !4739

do.cond.1029:                                     ; preds = %if.end.1028
  br label %do.end.1030, !dbg !4740

do.end.1030:                                      ; preds = %do.cond.1029
  %450 = bitcast %struct._object** %_code1011 to i8*, !dbg !4742
  call void @llvm.lifetime.end(i64 8, i8* %450) #2, !dbg !4742
  %451 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4743, !tbaa !1975
  %452 = load %struct._object*, %struct._object** @PyExc_ConnectionRefusedError, align 8, !dbg !4745, !tbaa !1975
  %call1031 = call i32 @PyDict_SetItemString(%struct._object* %451, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.64, i32 0, i32 0), %struct._object* %452), !dbg !4746
  %tobool1032 = icmp ne i32 %call1031, 0, !dbg !4746
  br i1 %tobool1032, label %if.then.1033, label %if.end.1034, !dbg !4747

if.then.1033:                                     ; preds = %do.end.1030
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4748
  unreachable, !dbg !4748

if.end.1034:                                      ; preds = %do.end.1030
  %453 = bitcast %struct._object** %_code1035 to i8*, !dbg !4750
  call void @llvm.lifetime.start(i64 8, i8* %453) #2, !dbg !4750
  call void @llvm.dbg.declare(metadata %struct._object** %_code1035, metadata !726, metadata !1979), !dbg !4751
  %call1036 = call %struct._object* @PyLong_FromLong(i64 111), !dbg !4752
  store %struct._object* %call1036, %struct._object** %_code1035, align 8, !dbg !4751, !tbaa !1975
  %454 = load %struct._object*, %struct._object** %_code1035, align 8, !dbg !4753, !tbaa !1975
  %tobool1037 = icmp ne %struct._object* %454, null, !dbg !4753
  br i1 %tobool1037, label %lor.lhs.false.1038, label %if.then.1041, !dbg !4755

lor.lhs.false.1038:                               ; preds = %if.end.1034
  %455 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4756, !tbaa !1975
  %456 = load %struct._object*, %struct._object** %_code1035, align 8, !dbg !4758, !tbaa !1975
  %457 = load %struct._object*, %struct._object** @PyExc_ConnectionRefusedError, align 8, !dbg !4759, !tbaa !1975
  %call1039 = call i32 @PyDict_SetItem(%struct._object* %455, %struct._object* %456, %struct._object* %457), !dbg !4760
  %tobool1040 = icmp ne i32 %call1039, 0, !dbg !4760
  br i1 %tobool1040, label %if.then.1041, label %if.end.1042, !dbg !4761

if.then.1041:                                     ; preds = %lor.lhs.false.1038, %if.end.1034
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4762
  unreachable, !dbg !4762

if.end.1042:                                      ; preds = %lor.lhs.false.1038
  br label %do.body.1043, !dbg !4765

do.body.1043:                                     ; preds = %if.end.1042
  %458 = bitcast %struct._object** %_py_decref_tmp1044 to i8*, !dbg !4767
  call void @llvm.lifetime.start(i64 8, i8* %458) #2, !dbg !4767
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1044, metadata !728, metadata !1979), !dbg !4769
  %459 = load %struct._object*, %struct._object** %_code1035, align 8, !dbg !4770, !tbaa !1975
  store %struct._object* %459, %struct._object** %_py_decref_tmp1044, align 8, !dbg !4769, !tbaa !1975
  %460 = load %struct._object*, %struct._object** %_py_decref_tmp1044, align 8, !dbg !4771, !tbaa !1975
  %ob_refcnt1045 = getelementptr inbounds %struct._object, %struct._object* %460, i32 0, i32 0, !dbg !4773
  %461 = load i64, i64* %ob_refcnt1045, align 8, !dbg !4774, !tbaa !2003
  %dec1046 = add i64 %461, -1, !dbg !4774
  store i64 %dec1046, i64* %ob_refcnt1045, align 8, !dbg !4774, !tbaa !2003
  %cmp1047 = icmp ne i64 %dec1046, 0, !dbg !4775
  br i1 %cmp1047, label %if.then.1048, label %if.else.1049, !dbg !4776

if.then.1048:                                     ; preds = %do.body.1043
  br label %if.end.1052, !dbg !4777

if.else.1049:                                     ; preds = %do.body.1043
  %462 = load %struct._object*, %struct._object** %_py_decref_tmp1044, align 8, !dbg !4779, !tbaa !1975
  %ob_type1050 = getelementptr inbounds %struct._object, %struct._object* %462, i32 0, i32 1, !dbg !4781
  %463 = load %struct._typeobject*, %struct._typeobject** %ob_type1050, align 8, !dbg !4781, !tbaa !2039
  %tp_dealloc1051 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %463, i32 0, i32 4, !dbg !4782
  %464 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1051, align 8, !dbg !4782, !tbaa !2091
  %465 = load %struct._object*, %struct._object** %_py_decref_tmp1044, align 8, !dbg !4783, !tbaa !1975
  call void %464(%struct._object* %465), !dbg !4784
  br label %if.end.1052

if.end.1052:                                      ; preds = %if.else.1049, %if.then.1048
  %466 = bitcast %struct._object** %_py_decref_tmp1044 to i8*, !dbg !4785
  call void @llvm.lifetime.end(i64 8, i8* %466) #2, !dbg !4785
  br label %do.cond.1053, !dbg !4787

do.cond.1053:                                     ; preds = %if.end.1052
  br label %do.end.1054, !dbg !4788

do.end.1054:                                      ; preds = %do.cond.1053
  %467 = bitcast %struct._object** %_code1035 to i8*, !dbg !4790
  call void @llvm.lifetime.end(i64 8, i8* %467) #2, !dbg !4790
  %468 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4791, !tbaa !1975
  %469 = load %struct._object*, %struct._object** @PyExc_ConnectionResetError, align 8, !dbg !4793, !tbaa !1975
  %call1055 = call i32 @PyDict_SetItemString(%struct._object* %468, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i32 0, i32 0), %struct._object* %469), !dbg !4794
  %tobool1056 = icmp ne i32 %call1055, 0, !dbg !4794
  br i1 %tobool1056, label %if.then.1057, label %if.end.1058, !dbg !4795

if.then.1057:                                     ; preds = %do.end.1054
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4796
  unreachable, !dbg !4796

if.end.1058:                                      ; preds = %do.end.1054
  %470 = bitcast %struct._object** %_code1059 to i8*, !dbg !4798
  call void @llvm.lifetime.start(i64 8, i8* %470) #2, !dbg !4798
  call void @llvm.dbg.declare(metadata %struct._object** %_code1059, metadata !730, metadata !1979), !dbg !4799
  %call1060 = call %struct._object* @PyLong_FromLong(i64 104), !dbg !4800
  store %struct._object* %call1060, %struct._object** %_code1059, align 8, !dbg !4799, !tbaa !1975
  %471 = load %struct._object*, %struct._object** %_code1059, align 8, !dbg !4801, !tbaa !1975
  %tobool1061 = icmp ne %struct._object* %471, null, !dbg !4801
  br i1 %tobool1061, label %lor.lhs.false.1062, label %if.then.1065, !dbg !4803

lor.lhs.false.1062:                               ; preds = %if.end.1058
  %472 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4804, !tbaa !1975
  %473 = load %struct._object*, %struct._object** %_code1059, align 8, !dbg !4806, !tbaa !1975
  %474 = load %struct._object*, %struct._object** @PyExc_ConnectionResetError, align 8, !dbg !4807, !tbaa !1975
  %call1063 = call i32 @PyDict_SetItem(%struct._object* %472, %struct._object* %473, %struct._object* %474), !dbg !4808
  %tobool1064 = icmp ne i32 %call1063, 0, !dbg !4808
  br i1 %tobool1064, label %if.then.1065, label %if.end.1066, !dbg !4809

if.then.1065:                                     ; preds = %lor.lhs.false.1062, %if.end.1058
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4810
  unreachable, !dbg !4810

if.end.1066:                                      ; preds = %lor.lhs.false.1062
  br label %do.body.1067, !dbg !4813

do.body.1067:                                     ; preds = %if.end.1066
  %475 = bitcast %struct._object** %_py_decref_tmp1068 to i8*, !dbg !4815
  call void @llvm.lifetime.start(i64 8, i8* %475) #2, !dbg !4815
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1068, metadata !732, metadata !1979), !dbg !4817
  %476 = load %struct._object*, %struct._object** %_code1059, align 8, !dbg !4818, !tbaa !1975
  store %struct._object* %476, %struct._object** %_py_decref_tmp1068, align 8, !dbg !4817, !tbaa !1975
  %477 = load %struct._object*, %struct._object** %_py_decref_tmp1068, align 8, !dbg !4819, !tbaa !1975
  %ob_refcnt1069 = getelementptr inbounds %struct._object, %struct._object* %477, i32 0, i32 0, !dbg !4821
  %478 = load i64, i64* %ob_refcnt1069, align 8, !dbg !4822, !tbaa !2003
  %dec1070 = add i64 %478, -1, !dbg !4822
  store i64 %dec1070, i64* %ob_refcnt1069, align 8, !dbg !4822, !tbaa !2003
  %cmp1071 = icmp ne i64 %dec1070, 0, !dbg !4823
  br i1 %cmp1071, label %if.then.1072, label %if.else.1073, !dbg !4824

if.then.1072:                                     ; preds = %do.body.1067
  br label %if.end.1076, !dbg !4825

if.else.1073:                                     ; preds = %do.body.1067
  %479 = load %struct._object*, %struct._object** %_py_decref_tmp1068, align 8, !dbg !4827, !tbaa !1975
  %ob_type1074 = getelementptr inbounds %struct._object, %struct._object* %479, i32 0, i32 1, !dbg !4829
  %480 = load %struct._typeobject*, %struct._typeobject** %ob_type1074, align 8, !dbg !4829, !tbaa !2039
  %tp_dealloc1075 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %480, i32 0, i32 4, !dbg !4830
  %481 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1075, align 8, !dbg !4830, !tbaa !2091
  %482 = load %struct._object*, %struct._object** %_py_decref_tmp1068, align 8, !dbg !4831, !tbaa !1975
  call void %481(%struct._object* %482), !dbg !4832
  br label %if.end.1076

if.end.1076:                                      ; preds = %if.else.1073, %if.then.1072
  %483 = bitcast %struct._object** %_py_decref_tmp1068 to i8*, !dbg !4833
  call void @llvm.lifetime.end(i64 8, i8* %483) #2, !dbg !4833
  br label %do.cond.1077, !dbg !4835

do.cond.1077:                                     ; preds = %if.end.1076
  br label %do.end.1078, !dbg !4836

do.end.1078:                                      ; preds = %do.cond.1077
  %484 = bitcast %struct._object** %_code1059 to i8*, !dbg !4838
  call void @llvm.lifetime.end(i64 8, i8* %484) #2, !dbg !4838
  %485 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4839, !tbaa !1975
  %486 = load %struct._object*, %struct._object** @PyExc_FileExistsError, align 8, !dbg !4841, !tbaa !1975
  %call1079 = call i32 @PyDict_SetItemString(%struct._object* %485, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.66, i32 0, i32 0), %struct._object* %486), !dbg !4842
  %tobool1080 = icmp ne i32 %call1079, 0, !dbg !4842
  br i1 %tobool1080, label %if.then.1081, label %if.end.1082, !dbg !4843

if.then.1081:                                     ; preds = %do.end.1078
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4844
  unreachable, !dbg !4844

if.end.1082:                                      ; preds = %do.end.1078
  %487 = bitcast %struct._object** %_code1083 to i8*, !dbg !4846
  call void @llvm.lifetime.start(i64 8, i8* %487) #2, !dbg !4846
  call void @llvm.dbg.declare(metadata %struct._object** %_code1083, metadata !734, metadata !1979), !dbg !4847
  %call1084 = call %struct._object* @PyLong_FromLong(i64 17), !dbg !4848
  store %struct._object* %call1084, %struct._object** %_code1083, align 8, !dbg !4847, !tbaa !1975
  %488 = load %struct._object*, %struct._object** %_code1083, align 8, !dbg !4849, !tbaa !1975
  %tobool1085 = icmp ne %struct._object* %488, null, !dbg !4849
  br i1 %tobool1085, label %lor.lhs.false.1086, label %if.then.1089, !dbg !4851

lor.lhs.false.1086:                               ; preds = %if.end.1082
  %489 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4852, !tbaa !1975
  %490 = load %struct._object*, %struct._object** %_code1083, align 8, !dbg !4854, !tbaa !1975
  %491 = load %struct._object*, %struct._object** @PyExc_FileExistsError, align 8, !dbg !4855, !tbaa !1975
  %call1087 = call i32 @PyDict_SetItem(%struct._object* %489, %struct._object* %490, %struct._object* %491), !dbg !4856
  %tobool1088 = icmp ne i32 %call1087, 0, !dbg !4856
  br i1 %tobool1088, label %if.then.1089, label %if.end.1090, !dbg !4857

if.then.1089:                                     ; preds = %lor.lhs.false.1086, %if.end.1082
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4858
  unreachable, !dbg !4858

if.end.1090:                                      ; preds = %lor.lhs.false.1086
  br label %do.body.1091, !dbg !4861

do.body.1091:                                     ; preds = %if.end.1090
  %492 = bitcast %struct._object** %_py_decref_tmp1092 to i8*, !dbg !4863
  call void @llvm.lifetime.start(i64 8, i8* %492) #2, !dbg !4863
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1092, metadata !736, metadata !1979), !dbg !4865
  %493 = load %struct._object*, %struct._object** %_code1083, align 8, !dbg !4866, !tbaa !1975
  store %struct._object* %493, %struct._object** %_py_decref_tmp1092, align 8, !dbg !4865, !tbaa !1975
  %494 = load %struct._object*, %struct._object** %_py_decref_tmp1092, align 8, !dbg !4867, !tbaa !1975
  %ob_refcnt1093 = getelementptr inbounds %struct._object, %struct._object* %494, i32 0, i32 0, !dbg !4869
  %495 = load i64, i64* %ob_refcnt1093, align 8, !dbg !4870, !tbaa !2003
  %dec1094 = add i64 %495, -1, !dbg !4870
  store i64 %dec1094, i64* %ob_refcnt1093, align 8, !dbg !4870, !tbaa !2003
  %cmp1095 = icmp ne i64 %dec1094, 0, !dbg !4871
  br i1 %cmp1095, label %if.then.1096, label %if.else.1097, !dbg !4872

if.then.1096:                                     ; preds = %do.body.1091
  br label %if.end.1100, !dbg !4873

if.else.1097:                                     ; preds = %do.body.1091
  %496 = load %struct._object*, %struct._object** %_py_decref_tmp1092, align 8, !dbg !4875, !tbaa !1975
  %ob_type1098 = getelementptr inbounds %struct._object, %struct._object* %496, i32 0, i32 1, !dbg !4877
  %497 = load %struct._typeobject*, %struct._typeobject** %ob_type1098, align 8, !dbg !4877, !tbaa !2039
  %tp_dealloc1099 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %497, i32 0, i32 4, !dbg !4878
  %498 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1099, align 8, !dbg !4878, !tbaa !2091
  %499 = load %struct._object*, %struct._object** %_py_decref_tmp1092, align 8, !dbg !4879, !tbaa !1975
  call void %498(%struct._object* %499), !dbg !4880
  br label %if.end.1100

if.end.1100:                                      ; preds = %if.else.1097, %if.then.1096
  %500 = bitcast %struct._object** %_py_decref_tmp1092 to i8*, !dbg !4881
  call void @llvm.lifetime.end(i64 8, i8* %500) #2, !dbg !4881
  br label %do.cond.1101, !dbg !4883

do.cond.1101:                                     ; preds = %if.end.1100
  br label %do.end.1102, !dbg !4884

do.end.1102:                                      ; preds = %do.cond.1101
  %501 = bitcast %struct._object** %_code1083 to i8*, !dbg !4886
  call void @llvm.lifetime.end(i64 8, i8* %501) #2, !dbg !4886
  %502 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4887, !tbaa !1975
  %503 = load %struct._object*, %struct._object** @PyExc_FileNotFoundError, align 8, !dbg !4889, !tbaa !1975
  %call1103 = call i32 @PyDict_SetItemString(%struct._object* %502, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.67, i32 0, i32 0), %struct._object* %503), !dbg !4890
  %tobool1104 = icmp ne i32 %call1103, 0, !dbg !4890
  br i1 %tobool1104, label %if.then.1105, label %if.end.1106, !dbg !4891

if.then.1105:                                     ; preds = %do.end.1102
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4892
  unreachable, !dbg !4892

if.end.1106:                                      ; preds = %do.end.1102
  %504 = bitcast %struct._object** %_code1107 to i8*, !dbg !4894
  call void @llvm.lifetime.start(i64 8, i8* %504) #2, !dbg !4894
  call void @llvm.dbg.declare(metadata %struct._object** %_code1107, metadata !738, metadata !1979), !dbg !4895
  %call1108 = call %struct._object* @PyLong_FromLong(i64 2), !dbg !4896
  store %struct._object* %call1108, %struct._object** %_code1107, align 8, !dbg !4895, !tbaa !1975
  %505 = load %struct._object*, %struct._object** %_code1107, align 8, !dbg !4897, !tbaa !1975
  %tobool1109 = icmp ne %struct._object* %505, null, !dbg !4897
  br i1 %tobool1109, label %lor.lhs.false.1110, label %if.then.1113, !dbg !4899

lor.lhs.false.1110:                               ; preds = %if.end.1106
  %506 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4900, !tbaa !1975
  %507 = load %struct._object*, %struct._object** %_code1107, align 8, !dbg !4902, !tbaa !1975
  %508 = load %struct._object*, %struct._object** @PyExc_FileNotFoundError, align 8, !dbg !4903, !tbaa !1975
  %call1111 = call i32 @PyDict_SetItem(%struct._object* %506, %struct._object* %507, %struct._object* %508), !dbg !4904
  %tobool1112 = icmp ne i32 %call1111, 0, !dbg !4904
  br i1 %tobool1112, label %if.then.1113, label %if.end.1114, !dbg !4905

if.then.1113:                                     ; preds = %lor.lhs.false.1110, %if.end.1106
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4906
  unreachable, !dbg !4906

if.end.1114:                                      ; preds = %lor.lhs.false.1110
  br label %do.body.1115, !dbg !4909

do.body.1115:                                     ; preds = %if.end.1114
  %509 = bitcast %struct._object** %_py_decref_tmp1116 to i8*, !dbg !4911
  call void @llvm.lifetime.start(i64 8, i8* %509) #2, !dbg !4911
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1116, metadata !740, metadata !1979), !dbg !4913
  %510 = load %struct._object*, %struct._object** %_code1107, align 8, !dbg !4914, !tbaa !1975
  store %struct._object* %510, %struct._object** %_py_decref_tmp1116, align 8, !dbg !4913, !tbaa !1975
  %511 = load %struct._object*, %struct._object** %_py_decref_tmp1116, align 8, !dbg !4915, !tbaa !1975
  %ob_refcnt1117 = getelementptr inbounds %struct._object, %struct._object* %511, i32 0, i32 0, !dbg !4917
  %512 = load i64, i64* %ob_refcnt1117, align 8, !dbg !4918, !tbaa !2003
  %dec1118 = add i64 %512, -1, !dbg !4918
  store i64 %dec1118, i64* %ob_refcnt1117, align 8, !dbg !4918, !tbaa !2003
  %cmp1119 = icmp ne i64 %dec1118, 0, !dbg !4919
  br i1 %cmp1119, label %if.then.1120, label %if.else.1121, !dbg !4920

if.then.1120:                                     ; preds = %do.body.1115
  br label %if.end.1124, !dbg !4921

if.else.1121:                                     ; preds = %do.body.1115
  %513 = load %struct._object*, %struct._object** %_py_decref_tmp1116, align 8, !dbg !4923, !tbaa !1975
  %ob_type1122 = getelementptr inbounds %struct._object, %struct._object* %513, i32 0, i32 1, !dbg !4925
  %514 = load %struct._typeobject*, %struct._typeobject** %ob_type1122, align 8, !dbg !4925, !tbaa !2039
  %tp_dealloc1123 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %514, i32 0, i32 4, !dbg !4926
  %515 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1123, align 8, !dbg !4926, !tbaa !2091
  %516 = load %struct._object*, %struct._object** %_py_decref_tmp1116, align 8, !dbg !4927, !tbaa !1975
  call void %515(%struct._object* %516), !dbg !4928
  br label %if.end.1124

if.end.1124:                                      ; preds = %if.else.1121, %if.then.1120
  %517 = bitcast %struct._object** %_py_decref_tmp1116 to i8*, !dbg !4929
  call void @llvm.lifetime.end(i64 8, i8* %517) #2, !dbg !4929
  br label %do.cond.1125, !dbg !4931

do.cond.1125:                                     ; preds = %if.end.1124
  br label %do.end.1126, !dbg !4932

do.end.1126:                                      ; preds = %do.cond.1125
  %518 = bitcast %struct._object** %_code1107 to i8*, !dbg !4934
  call void @llvm.lifetime.end(i64 8, i8* %518) #2, !dbg !4934
  %519 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4935, !tbaa !1975
  %520 = load %struct._object*, %struct._object** @PyExc_IsADirectoryError, align 8, !dbg !4937, !tbaa !1975
  %call1127 = call i32 @PyDict_SetItemString(%struct._object* %519, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i32 0, i32 0), %struct._object* %520), !dbg !4938
  %tobool1128 = icmp ne i32 %call1127, 0, !dbg !4938
  br i1 %tobool1128, label %if.then.1129, label %if.end.1130, !dbg !4939

if.then.1129:                                     ; preds = %do.end.1126
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4940
  unreachable, !dbg !4940

if.end.1130:                                      ; preds = %do.end.1126
  %521 = bitcast %struct._object** %_code1131 to i8*, !dbg !4942
  call void @llvm.lifetime.start(i64 8, i8* %521) #2, !dbg !4942
  call void @llvm.dbg.declare(metadata %struct._object** %_code1131, metadata !742, metadata !1979), !dbg !4943
  %call1132 = call %struct._object* @PyLong_FromLong(i64 21), !dbg !4944
  store %struct._object* %call1132, %struct._object** %_code1131, align 8, !dbg !4943, !tbaa !1975
  %522 = load %struct._object*, %struct._object** %_code1131, align 8, !dbg !4945, !tbaa !1975
  %tobool1133 = icmp ne %struct._object* %522, null, !dbg !4945
  br i1 %tobool1133, label %lor.lhs.false.1134, label %if.then.1137, !dbg !4947

lor.lhs.false.1134:                               ; preds = %if.end.1130
  %523 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4948, !tbaa !1975
  %524 = load %struct._object*, %struct._object** %_code1131, align 8, !dbg !4950, !tbaa !1975
  %525 = load %struct._object*, %struct._object** @PyExc_IsADirectoryError, align 8, !dbg !4951, !tbaa !1975
  %call1135 = call i32 @PyDict_SetItem(%struct._object* %523, %struct._object* %524, %struct._object* %525), !dbg !4952
  %tobool1136 = icmp ne i32 %call1135, 0, !dbg !4952
  br i1 %tobool1136, label %if.then.1137, label %if.end.1138, !dbg !4953

if.then.1137:                                     ; preds = %lor.lhs.false.1134, %if.end.1130
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !4954
  unreachable, !dbg !4954

if.end.1138:                                      ; preds = %lor.lhs.false.1134
  br label %do.body.1139, !dbg !4957

do.body.1139:                                     ; preds = %if.end.1138
  %526 = bitcast %struct._object** %_py_decref_tmp1140 to i8*, !dbg !4959
  call void @llvm.lifetime.start(i64 8, i8* %526) #2, !dbg !4959
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1140, metadata !744, metadata !1979), !dbg !4961
  %527 = load %struct._object*, %struct._object** %_code1131, align 8, !dbg !4962, !tbaa !1975
  store %struct._object* %527, %struct._object** %_py_decref_tmp1140, align 8, !dbg !4961, !tbaa !1975
  %528 = load %struct._object*, %struct._object** %_py_decref_tmp1140, align 8, !dbg !4963, !tbaa !1975
  %ob_refcnt1141 = getelementptr inbounds %struct._object, %struct._object* %528, i32 0, i32 0, !dbg !4965
  %529 = load i64, i64* %ob_refcnt1141, align 8, !dbg !4966, !tbaa !2003
  %dec1142 = add i64 %529, -1, !dbg !4966
  store i64 %dec1142, i64* %ob_refcnt1141, align 8, !dbg !4966, !tbaa !2003
  %cmp1143 = icmp ne i64 %dec1142, 0, !dbg !4967
  br i1 %cmp1143, label %if.then.1144, label %if.else.1145, !dbg !4968

if.then.1144:                                     ; preds = %do.body.1139
  br label %if.end.1148, !dbg !4969

if.else.1145:                                     ; preds = %do.body.1139
  %530 = load %struct._object*, %struct._object** %_py_decref_tmp1140, align 8, !dbg !4971, !tbaa !1975
  %ob_type1146 = getelementptr inbounds %struct._object, %struct._object* %530, i32 0, i32 1, !dbg !4973
  %531 = load %struct._typeobject*, %struct._typeobject** %ob_type1146, align 8, !dbg !4973, !tbaa !2039
  %tp_dealloc1147 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %531, i32 0, i32 4, !dbg !4974
  %532 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1147, align 8, !dbg !4974, !tbaa !2091
  %533 = load %struct._object*, %struct._object** %_py_decref_tmp1140, align 8, !dbg !4975, !tbaa !1975
  call void %532(%struct._object* %533), !dbg !4976
  br label %if.end.1148

if.end.1148:                                      ; preds = %if.else.1145, %if.then.1144
  %534 = bitcast %struct._object** %_py_decref_tmp1140 to i8*, !dbg !4977
  call void @llvm.lifetime.end(i64 8, i8* %534) #2, !dbg !4977
  br label %do.cond.1149, !dbg !4979

do.cond.1149:                                     ; preds = %if.end.1148
  br label %do.end.1150, !dbg !4980

do.end.1150:                                      ; preds = %do.cond.1149
  %535 = bitcast %struct._object** %_code1131 to i8*, !dbg !4982
  call void @llvm.lifetime.end(i64 8, i8* %535) #2, !dbg !4982
  %536 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !4983, !tbaa !1975
  %537 = load %struct._object*, %struct._object** @PyExc_NotADirectoryError, align 8, !dbg !4985, !tbaa !1975
  %call1151 = call i32 @PyDict_SetItemString(%struct._object* %536, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i32 0, i32 0), %struct._object* %537), !dbg !4986
  %tobool1152 = icmp ne i32 %call1151, 0, !dbg !4986
  br i1 %tobool1152, label %if.then.1153, label %if.end.1154, !dbg !4987

if.then.1153:                                     ; preds = %do.end.1150
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !4988
  unreachable, !dbg !4988

if.end.1154:                                      ; preds = %do.end.1150
  %538 = bitcast %struct._object** %_code1155 to i8*, !dbg !4990
  call void @llvm.lifetime.start(i64 8, i8* %538) #2, !dbg !4990
  call void @llvm.dbg.declare(metadata %struct._object** %_code1155, metadata !746, metadata !1979), !dbg !4991
  %call1156 = call %struct._object* @PyLong_FromLong(i64 20), !dbg !4992
  store %struct._object* %call1156, %struct._object** %_code1155, align 8, !dbg !4991, !tbaa !1975
  %539 = load %struct._object*, %struct._object** %_code1155, align 8, !dbg !4993, !tbaa !1975
  %tobool1157 = icmp ne %struct._object* %539, null, !dbg !4993
  br i1 %tobool1157, label %lor.lhs.false.1158, label %if.then.1161, !dbg !4995

lor.lhs.false.1158:                               ; preds = %if.end.1154
  %540 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !4996, !tbaa !1975
  %541 = load %struct._object*, %struct._object** %_code1155, align 8, !dbg !4998, !tbaa !1975
  %542 = load %struct._object*, %struct._object** @PyExc_NotADirectoryError, align 8, !dbg !4999, !tbaa !1975
  %call1159 = call i32 @PyDict_SetItem(%struct._object* %540, %struct._object* %541, %struct._object* %542), !dbg !5000
  %tobool1160 = icmp ne i32 %call1159, 0, !dbg !5000
  br i1 %tobool1160, label %if.then.1161, label %if.end.1162, !dbg !5001

if.then.1161:                                     ; preds = %lor.lhs.false.1158, %if.end.1154
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !5002
  unreachable, !dbg !5002

if.end.1162:                                      ; preds = %lor.lhs.false.1158
  br label %do.body.1163, !dbg !5005

do.body.1163:                                     ; preds = %if.end.1162
  %543 = bitcast %struct._object** %_py_decref_tmp1164 to i8*, !dbg !5007
  call void @llvm.lifetime.start(i64 8, i8* %543) #2, !dbg !5007
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1164, metadata !748, metadata !1979), !dbg !5009
  %544 = load %struct._object*, %struct._object** %_code1155, align 8, !dbg !5010, !tbaa !1975
  store %struct._object* %544, %struct._object** %_py_decref_tmp1164, align 8, !dbg !5009, !tbaa !1975
  %545 = load %struct._object*, %struct._object** %_py_decref_tmp1164, align 8, !dbg !5011, !tbaa !1975
  %ob_refcnt1165 = getelementptr inbounds %struct._object, %struct._object* %545, i32 0, i32 0, !dbg !5013
  %546 = load i64, i64* %ob_refcnt1165, align 8, !dbg !5014, !tbaa !2003
  %dec1166 = add i64 %546, -1, !dbg !5014
  store i64 %dec1166, i64* %ob_refcnt1165, align 8, !dbg !5014, !tbaa !2003
  %cmp1167 = icmp ne i64 %dec1166, 0, !dbg !5015
  br i1 %cmp1167, label %if.then.1168, label %if.else.1169, !dbg !5016

if.then.1168:                                     ; preds = %do.body.1163
  br label %if.end.1172, !dbg !5017

if.else.1169:                                     ; preds = %do.body.1163
  %547 = load %struct._object*, %struct._object** %_py_decref_tmp1164, align 8, !dbg !5019, !tbaa !1975
  %ob_type1170 = getelementptr inbounds %struct._object, %struct._object* %547, i32 0, i32 1, !dbg !5021
  %548 = load %struct._typeobject*, %struct._typeobject** %ob_type1170, align 8, !dbg !5021, !tbaa !2039
  %tp_dealloc1171 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %548, i32 0, i32 4, !dbg !5022
  %549 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1171, align 8, !dbg !5022, !tbaa !2091
  %550 = load %struct._object*, %struct._object** %_py_decref_tmp1164, align 8, !dbg !5023, !tbaa !1975
  call void %549(%struct._object* %550), !dbg !5024
  br label %if.end.1172

if.end.1172:                                      ; preds = %if.else.1169, %if.then.1168
  %551 = bitcast %struct._object** %_py_decref_tmp1164 to i8*, !dbg !5025
  call void @llvm.lifetime.end(i64 8, i8* %551) #2, !dbg !5025
  br label %do.cond.1173, !dbg !5027

do.cond.1173:                                     ; preds = %if.end.1172
  br label %do.end.1174, !dbg !5028

do.end.1174:                                      ; preds = %do.cond.1173
  %552 = bitcast %struct._object** %_code1155 to i8*, !dbg !5030
  call void @llvm.lifetime.end(i64 8, i8* %552) #2, !dbg !5030
  %553 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !5031, !tbaa !1975
  %554 = load %struct._object*, %struct._object** @PyExc_InterruptedError, align 8, !dbg !5033, !tbaa !1975
  %call1175 = call i32 @PyDict_SetItemString(%struct._object* %553, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i32 0, i32 0), %struct._object* %554), !dbg !5034
  %tobool1176 = icmp ne i32 %call1175, 0, !dbg !5034
  br i1 %tobool1176, label %if.then.1177, label %if.end.1178, !dbg !5035

if.then.1177:                                     ; preds = %do.end.1174
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !5036
  unreachable, !dbg !5036

if.end.1178:                                      ; preds = %do.end.1174
  %555 = bitcast %struct._object** %_code1179 to i8*, !dbg !5038
  call void @llvm.lifetime.start(i64 8, i8* %555) #2, !dbg !5038
  call void @llvm.dbg.declare(metadata %struct._object** %_code1179, metadata !750, metadata !1979), !dbg !5039
  %call1180 = call %struct._object* @PyLong_FromLong(i64 4), !dbg !5040
  store %struct._object* %call1180, %struct._object** %_code1179, align 8, !dbg !5039, !tbaa !1975
  %556 = load %struct._object*, %struct._object** %_code1179, align 8, !dbg !5041, !tbaa !1975
  %tobool1181 = icmp ne %struct._object* %556, null, !dbg !5041
  br i1 %tobool1181, label %lor.lhs.false.1182, label %if.then.1185, !dbg !5043

lor.lhs.false.1182:                               ; preds = %if.end.1178
  %557 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !5044, !tbaa !1975
  %558 = load %struct._object*, %struct._object** %_code1179, align 8, !dbg !5046, !tbaa !1975
  %559 = load %struct._object*, %struct._object** @PyExc_InterruptedError, align 8, !dbg !5047, !tbaa !1975
  %call1183 = call i32 @PyDict_SetItem(%struct._object* %557, %struct._object* %558, %struct._object* %559), !dbg !5048
  %tobool1184 = icmp ne i32 %call1183, 0, !dbg !5048
  br i1 %tobool1184, label %if.then.1185, label %if.end.1186, !dbg !5049

if.then.1185:                                     ; preds = %lor.lhs.false.1182, %if.end.1178
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !5050
  unreachable, !dbg !5050

if.end.1186:                                      ; preds = %lor.lhs.false.1182
  br label %do.body.1187, !dbg !5053

do.body.1187:                                     ; preds = %if.end.1186
  %560 = bitcast %struct._object** %_py_decref_tmp1188 to i8*, !dbg !5055
  call void @llvm.lifetime.start(i64 8, i8* %560) #2, !dbg !5055
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1188, metadata !752, metadata !1979), !dbg !5057
  %561 = load %struct._object*, %struct._object** %_code1179, align 8, !dbg !5058, !tbaa !1975
  store %struct._object* %561, %struct._object** %_py_decref_tmp1188, align 8, !dbg !5057, !tbaa !1975
  %562 = load %struct._object*, %struct._object** %_py_decref_tmp1188, align 8, !dbg !5059, !tbaa !1975
  %ob_refcnt1189 = getelementptr inbounds %struct._object, %struct._object* %562, i32 0, i32 0, !dbg !5061
  %563 = load i64, i64* %ob_refcnt1189, align 8, !dbg !5062, !tbaa !2003
  %dec1190 = add i64 %563, -1, !dbg !5062
  store i64 %dec1190, i64* %ob_refcnt1189, align 8, !dbg !5062, !tbaa !2003
  %cmp1191 = icmp ne i64 %dec1190, 0, !dbg !5063
  br i1 %cmp1191, label %if.then.1192, label %if.else.1193, !dbg !5064

if.then.1192:                                     ; preds = %do.body.1187
  br label %if.end.1196, !dbg !5065

if.else.1193:                                     ; preds = %do.body.1187
  %564 = load %struct._object*, %struct._object** %_py_decref_tmp1188, align 8, !dbg !5067, !tbaa !1975
  %ob_type1194 = getelementptr inbounds %struct._object, %struct._object* %564, i32 0, i32 1, !dbg !5069
  %565 = load %struct._typeobject*, %struct._typeobject** %ob_type1194, align 8, !dbg !5069, !tbaa !2039
  %tp_dealloc1195 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %565, i32 0, i32 4, !dbg !5070
  %566 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1195, align 8, !dbg !5070, !tbaa !2091
  %567 = load %struct._object*, %struct._object** %_py_decref_tmp1188, align 8, !dbg !5071, !tbaa !1975
  call void %566(%struct._object* %567), !dbg !5072
  br label %if.end.1196

if.end.1196:                                      ; preds = %if.else.1193, %if.then.1192
  %568 = bitcast %struct._object** %_py_decref_tmp1188 to i8*, !dbg !5073
  call void @llvm.lifetime.end(i64 8, i8* %568) #2, !dbg !5073
  br label %do.cond.1197, !dbg !5075

do.cond.1197:                                     ; preds = %if.end.1196
  br label %do.end.1198, !dbg !5076

do.end.1198:                                      ; preds = %do.cond.1197
  %569 = bitcast %struct._object** %_code1179 to i8*, !dbg !5078
  call void @llvm.lifetime.end(i64 8, i8* %569) #2, !dbg !5078
  %570 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !5079, !tbaa !1975
  %571 = load %struct._object*, %struct._object** @PyExc_PermissionError, align 8, !dbg !5081, !tbaa !1975
  %call1199 = call i32 @PyDict_SetItemString(%struct._object* %570, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.71, i32 0, i32 0), %struct._object* %571), !dbg !5082
  %tobool1200 = icmp ne i32 %call1199, 0, !dbg !5082
  br i1 %tobool1200, label %if.then.1201, label %if.end.1202, !dbg !5083

if.then.1201:                                     ; preds = %do.end.1198
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !5084
  unreachable, !dbg !5084

if.end.1202:                                      ; preds = %do.end.1198
  %572 = bitcast %struct._object** %_code1203 to i8*, !dbg !5086
  call void @llvm.lifetime.start(i64 8, i8* %572) #2, !dbg !5086
  call void @llvm.dbg.declare(metadata %struct._object** %_code1203, metadata !754, metadata !1979), !dbg !5087
  %call1204 = call %struct._object* @PyLong_FromLong(i64 13), !dbg !5088
  store %struct._object* %call1204, %struct._object** %_code1203, align 8, !dbg !5087, !tbaa !1975
  %573 = load %struct._object*, %struct._object** %_code1203, align 8, !dbg !5089, !tbaa !1975
  %tobool1205 = icmp ne %struct._object* %573, null, !dbg !5089
  br i1 %tobool1205, label %lor.lhs.false.1206, label %if.then.1209, !dbg !5091

lor.lhs.false.1206:                               ; preds = %if.end.1202
  %574 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !5092, !tbaa !1975
  %575 = load %struct._object*, %struct._object** %_code1203, align 8, !dbg !5094, !tbaa !1975
  %576 = load %struct._object*, %struct._object** @PyExc_PermissionError, align 8, !dbg !5095, !tbaa !1975
  %call1207 = call i32 @PyDict_SetItem(%struct._object* %574, %struct._object* %575, %struct._object* %576), !dbg !5096
  %tobool1208 = icmp ne i32 %call1207, 0, !dbg !5096
  br i1 %tobool1208, label %if.then.1209, label %if.end.1210, !dbg !5097

if.then.1209:                                     ; preds = %lor.lhs.false.1206, %if.end.1202
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !5098
  unreachable, !dbg !5098

if.end.1210:                                      ; preds = %lor.lhs.false.1206
  br label %do.body.1211, !dbg !5101

do.body.1211:                                     ; preds = %if.end.1210
  %577 = bitcast %struct._object** %_py_decref_tmp1212 to i8*, !dbg !5103
  call void @llvm.lifetime.start(i64 8, i8* %577) #2, !dbg !5103
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1212, metadata !756, metadata !1979), !dbg !5105
  %578 = load %struct._object*, %struct._object** %_code1203, align 8, !dbg !5106, !tbaa !1975
  store %struct._object* %578, %struct._object** %_py_decref_tmp1212, align 8, !dbg !5105, !tbaa !1975
  %579 = load %struct._object*, %struct._object** %_py_decref_tmp1212, align 8, !dbg !5107, !tbaa !1975
  %ob_refcnt1213 = getelementptr inbounds %struct._object, %struct._object* %579, i32 0, i32 0, !dbg !5109
  %580 = load i64, i64* %ob_refcnt1213, align 8, !dbg !5110, !tbaa !2003
  %dec1214 = add i64 %580, -1, !dbg !5110
  store i64 %dec1214, i64* %ob_refcnt1213, align 8, !dbg !5110, !tbaa !2003
  %cmp1215 = icmp ne i64 %dec1214, 0, !dbg !5111
  br i1 %cmp1215, label %if.then.1216, label %if.else.1217, !dbg !5112

if.then.1216:                                     ; preds = %do.body.1211
  br label %if.end.1220, !dbg !5113

if.else.1217:                                     ; preds = %do.body.1211
  %581 = load %struct._object*, %struct._object** %_py_decref_tmp1212, align 8, !dbg !5115, !tbaa !1975
  %ob_type1218 = getelementptr inbounds %struct._object, %struct._object* %581, i32 0, i32 1, !dbg !5117
  %582 = load %struct._typeobject*, %struct._typeobject** %ob_type1218, align 8, !dbg !5117, !tbaa !2039
  %tp_dealloc1219 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %582, i32 0, i32 4, !dbg !5118
  %583 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1219, align 8, !dbg !5118, !tbaa !2091
  %584 = load %struct._object*, %struct._object** %_py_decref_tmp1212, align 8, !dbg !5119, !tbaa !1975
  call void %583(%struct._object* %584), !dbg !5120
  br label %if.end.1220

if.end.1220:                                      ; preds = %if.else.1217, %if.then.1216
  %585 = bitcast %struct._object** %_py_decref_tmp1212 to i8*, !dbg !5121
  call void @llvm.lifetime.end(i64 8, i8* %585) #2, !dbg !5121
  br label %do.cond.1221, !dbg !5123

do.cond.1221:                                     ; preds = %if.end.1220
  br label %do.end.1222, !dbg !5124

do.end.1222:                                      ; preds = %do.cond.1221
  %586 = bitcast %struct._object** %_code1203 to i8*, !dbg !5126
  call void @llvm.lifetime.end(i64 8, i8* %586) #2, !dbg !5126
  %587 = bitcast %struct._object** %_code1223 to i8*, !dbg !5127
  call void @llvm.lifetime.start(i64 8, i8* %587) #2, !dbg !5127
  call void @llvm.dbg.declare(metadata %struct._object** %_code1223, metadata !758, metadata !1979), !dbg !5128
  %call1224 = call %struct._object* @PyLong_FromLong(i64 1), !dbg !5129
  store %struct._object* %call1224, %struct._object** %_code1223, align 8, !dbg !5128, !tbaa !1975
  %588 = load %struct._object*, %struct._object** %_code1223, align 8, !dbg !5130, !tbaa !1975
  %tobool1225 = icmp ne %struct._object* %588, null, !dbg !5130
  br i1 %tobool1225, label %lor.lhs.false.1226, label %if.then.1229, !dbg !5132

lor.lhs.false.1226:                               ; preds = %do.end.1222
  %589 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !5133, !tbaa !1975
  %590 = load %struct._object*, %struct._object** %_code1223, align 8, !dbg !5135, !tbaa !1975
  %591 = load %struct._object*, %struct._object** @PyExc_PermissionError, align 8, !dbg !5136, !tbaa !1975
  %call1227 = call i32 @PyDict_SetItem(%struct._object* %589, %struct._object* %590, %struct._object* %591), !dbg !5137
  %tobool1228 = icmp ne i32 %call1227, 0, !dbg !5137
  br i1 %tobool1228, label %if.then.1229, label %if.end.1230, !dbg !5138

if.then.1229:                                     ; preds = %lor.lhs.false.1226, %do.end.1222
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !5139
  unreachable, !dbg !5139

if.end.1230:                                      ; preds = %lor.lhs.false.1226
  br label %do.body.1231, !dbg !5142

do.body.1231:                                     ; preds = %if.end.1230
  %592 = bitcast %struct._object** %_py_decref_tmp1232 to i8*, !dbg !5144
  call void @llvm.lifetime.start(i64 8, i8* %592) #2, !dbg !5144
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1232, metadata !760, metadata !1979), !dbg !5146
  %593 = load %struct._object*, %struct._object** %_code1223, align 8, !dbg !5147, !tbaa !1975
  store %struct._object* %593, %struct._object** %_py_decref_tmp1232, align 8, !dbg !5146, !tbaa !1975
  %594 = load %struct._object*, %struct._object** %_py_decref_tmp1232, align 8, !dbg !5148, !tbaa !1975
  %ob_refcnt1233 = getelementptr inbounds %struct._object, %struct._object* %594, i32 0, i32 0, !dbg !5150
  %595 = load i64, i64* %ob_refcnt1233, align 8, !dbg !5151, !tbaa !2003
  %dec1234 = add i64 %595, -1, !dbg !5151
  store i64 %dec1234, i64* %ob_refcnt1233, align 8, !dbg !5151, !tbaa !2003
  %cmp1235 = icmp ne i64 %dec1234, 0, !dbg !5152
  br i1 %cmp1235, label %if.then.1236, label %if.else.1237, !dbg !5153

if.then.1236:                                     ; preds = %do.body.1231
  br label %if.end.1240, !dbg !5154

if.else.1237:                                     ; preds = %do.body.1231
  %596 = load %struct._object*, %struct._object** %_py_decref_tmp1232, align 8, !dbg !5156, !tbaa !1975
  %ob_type1238 = getelementptr inbounds %struct._object, %struct._object* %596, i32 0, i32 1, !dbg !5158
  %597 = load %struct._typeobject*, %struct._typeobject** %ob_type1238, align 8, !dbg !5158, !tbaa !2039
  %tp_dealloc1239 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %597, i32 0, i32 4, !dbg !5159
  %598 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1239, align 8, !dbg !5159, !tbaa !2091
  %599 = load %struct._object*, %struct._object** %_py_decref_tmp1232, align 8, !dbg !5160, !tbaa !1975
  call void %598(%struct._object* %599), !dbg !5161
  br label %if.end.1240

if.end.1240:                                      ; preds = %if.else.1237, %if.then.1236
  %600 = bitcast %struct._object** %_py_decref_tmp1232 to i8*, !dbg !5162
  call void @llvm.lifetime.end(i64 8, i8* %600) #2, !dbg !5162
  br label %do.cond.1241, !dbg !5164

do.cond.1241:                                     ; preds = %if.end.1240
  br label %do.end.1242, !dbg !5165

do.end.1242:                                      ; preds = %do.cond.1241
  %601 = bitcast %struct._object** %_code1223 to i8*, !dbg !5167
  call void @llvm.lifetime.end(i64 8, i8* %601) #2, !dbg !5167
  %602 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !5168, !tbaa !1975
  %603 = load %struct._object*, %struct._object** @PyExc_ProcessLookupError, align 8, !dbg !5170, !tbaa !1975
  %call1243 = call i32 @PyDict_SetItemString(%struct._object* %602, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i32 0, i32 0), %struct._object* %603), !dbg !5171
  %tobool1244 = icmp ne i32 %call1243, 0, !dbg !5171
  br i1 %tobool1244, label %if.then.1245, label %if.end.1246, !dbg !5172

if.then.1245:                                     ; preds = %do.end.1242
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !5173
  unreachable, !dbg !5173

if.end.1246:                                      ; preds = %do.end.1242
  %604 = bitcast %struct._object** %_code1247 to i8*, !dbg !5175
  call void @llvm.lifetime.start(i64 8, i8* %604) #2, !dbg !5175
  call void @llvm.dbg.declare(metadata %struct._object** %_code1247, metadata !762, metadata !1979), !dbg !5176
  %call1248 = call %struct._object* @PyLong_FromLong(i64 3), !dbg !5177
  store %struct._object* %call1248, %struct._object** %_code1247, align 8, !dbg !5176, !tbaa !1975
  %605 = load %struct._object*, %struct._object** %_code1247, align 8, !dbg !5178, !tbaa !1975
  %tobool1249 = icmp ne %struct._object* %605, null, !dbg !5178
  br i1 %tobool1249, label %lor.lhs.false.1250, label %if.then.1253, !dbg !5180

lor.lhs.false.1250:                               ; preds = %if.end.1246
  %606 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !5181, !tbaa !1975
  %607 = load %struct._object*, %struct._object** %_code1247, align 8, !dbg !5183, !tbaa !1975
  %608 = load %struct._object*, %struct._object** @PyExc_ProcessLookupError, align 8, !dbg !5184, !tbaa !1975
  %call1251 = call i32 @PyDict_SetItem(%struct._object* %606, %struct._object* %607, %struct._object* %608), !dbg !5185
  %tobool1252 = icmp ne i32 %call1251, 0, !dbg !5185
  br i1 %tobool1252, label %if.then.1253, label %if.end.1254, !dbg !5186

if.then.1253:                                     ; preds = %lor.lhs.false.1250, %if.end.1246
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !5187
  unreachable, !dbg !5187

if.end.1254:                                      ; preds = %lor.lhs.false.1250
  br label %do.body.1255, !dbg !5190

do.body.1255:                                     ; preds = %if.end.1254
  %609 = bitcast %struct._object** %_py_decref_tmp1256 to i8*, !dbg !5192
  call void @llvm.lifetime.start(i64 8, i8* %609) #2, !dbg !5192
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1256, metadata !764, metadata !1979), !dbg !5194
  %610 = load %struct._object*, %struct._object** %_code1247, align 8, !dbg !5195, !tbaa !1975
  store %struct._object* %610, %struct._object** %_py_decref_tmp1256, align 8, !dbg !5194, !tbaa !1975
  %611 = load %struct._object*, %struct._object** %_py_decref_tmp1256, align 8, !dbg !5196, !tbaa !1975
  %ob_refcnt1257 = getelementptr inbounds %struct._object, %struct._object* %611, i32 0, i32 0, !dbg !5198
  %612 = load i64, i64* %ob_refcnt1257, align 8, !dbg !5199, !tbaa !2003
  %dec1258 = add i64 %612, -1, !dbg !5199
  store i64 %dec1258, i64* %ob_refcnt1257, align 8, !dbg !5199, !tbaa !2003
  %cmp1259 = icmp ne i64 %dec1258, 0, !dbg !5200
  br i1 %cmp1259, label %if.then.1260, label %if.else.1261, !dbg !5201

if.then.1260:                                     ; preds = %do.body.1255
  br label %if.end.1264, !dbg !5202

if.else.1261:                                     ; preds = %do.body.1255
  %613 = load %struct._object*, %struct._object** %_py_decref_tmp1256, align 8, !dbg !5204, !tbaa !1975
  %ob_type1262 = getelementptr inbounds %struct._object, %struct._object* %613, i32 0, i32 1, !dbg !5206
  %614 = load %struct._typeobject*, %struct._typeobject** %ob_type1262, align 8, !dbg !5206, !tbaa !2039
  %tp_dealloc1263 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %614, i32 0, i32 4, !dbg !5207
  %615 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1263, align 8, !dbg !5207, !tbaa !2091
  %616 = load %struct._object*, %struct._object** %_py_decref_tmp1256, align 8, !dbg !5208, !tbaa !1975
  call void %615(%struct._object* %616), !dbg !5209
  br label %if.end.1264

if.end.1264:                                      ; preds = %if.else.1261, %if.then.1260
  %617 = bitcast %struct._object** %_py_decref_tmp1256 to i8*, !dbg !5210
  call void @llvm.lifetime.end(i64 8, i8* %617) #2, !dbg !5210
  br label %do.cond.1265, !dbg !5212

do.cond.1265:                                     ; preds = %if.end.1264
  br label %do.end.1266, !dbg !5213

do.end.1266:                                      ; preds = %do.cond.1265
  %618 = bitcast %struct._object** %_code1247 to i8*, !dbg !5215
  call void @llvm.lifetime.end(i64 8, i8* %618) #2, !dbg !5215
  %619 = load %struct._object*, %struct._object** %bdict, align 8, !dbg !5216, !tbaa !1975
  %620 = load %struct._object*, %struct._object** @PyExc_TimeoutError, align 8, !dbg !5218, !tbaa !1975
  %call1267 = call i32 @PyDict_SetItemString(%struct._object* %619, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i32 0, i32 0), %struct._object* %620), !dbg !5219
  %tobool1268 = icmp ne i32 %call1267, 0, !dbg !5219
  br i1 %tobool1268, label %if.then.1269, label %if.end.1270, !dbg !5220

if.then.1269:                                     ; preds = %do.end.1266
  call void @Py_FatalError(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)) #6, !dbg !5221
  unreachable, !dbg !5221

if.end.1270:                                      ; preds = %do.end.1266
  %621 = bitcast %struct._object** %_code1271 to i8*, !dbg !5223
  call void @llvm.lifetime.start(i64 8, i8* %621) #2, !dbg !5223
  call void @llvm.dbg.declare(metadata %struct._object** %_code1271, metadata !766, metadata !1979), !dbg !5224
  %call1272 = call %struct._object* @PyLong_FromLong(i64 110), !dbg !5225
  store %struct._object* %call1272, %struct._object** %_code1271, align 8, !dbg !5224, !tbaa !1975
  %622 = load %struct._object*, %struct._object** %_code1271, align 8, !dbg !5226, !tbaa !1975
  %tobool1273 = icmp ne %struct._object* %622, null, !dbg !5226
  br i1 %tobool1273, label %lor.lhs.false.1274, label %if.then.1277, !dbg !5228

lor.lhs.false.1274:                               ; preds = %if.end.1270
  %623 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !5229, !tbaa !1975
  %624 = load %struct._object*, %struct._object** %_code1271, align 8, !dbg !5231, !tbaa !1975
  %625 = load %struct._object*, %struct._object** @PyExc_TimeoutError, align 8, !dbg !5232, !tbaa !1975
  %call1275 = call i32 @PyDict_SetItem(%struct._object* %623, %struct._object* %624, %struct._object* %625), !dbg !5233
  %tobool1276 = icmp ne i32 %call1275, 0, !dbg !5233
  br i1 %tobool1276, label %if.then.1277, label %if.end.1278, !dbg !5234

if.then.1277:                                     ; preds = %lor.lhs.false.1274, %if.end.1270
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !5235
  unreachable, !dbg !5235

if.end.1278:                                      ; preds = %lor.lhs.false.1274
  br label %do.body.1279, !dbg !5238

do.body.1279:                                     ; preds = %if.end.1278
  %626 = bitcast %struct._object** %_py_decref_tmp1280 to i8*, !dbg !5240
  call void @llvm.lifetime.start(i64 8, i8* %626) #2, !dbg !5240
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1280, metadata !768, metadata !1979), !dbg !5242
  %627 = load %struct._object*, %struct._object** %_code1271, align 8, !dbg !5243, !tbaa !1975
  store %struct._object* %627, %struct._object** %_py_decref_tmp1280, align 8, !dbg !5242, !tbaa !1975
  %628 = load %struct._object*, %struct._object** %_py_decref_tmp1280, align 8, !dbg !5244, !tbaa !1975
  %ob_refcnt1281 = getelementptr inbounds %struct._object, %struct._object* %628, i32 0, i32 0, !dbg !5246
  %629 = load i64, i64* %ob_refcnt1281, align 8, !dbg !5247, !tbaa !2003
  %dec1282 = add i64 %629, -1, !dbg !5247
  store i64 %dec1282, i64* %ob_refcnt1281, align 8, !dbg !5247, !tbaa !2003
  %cmp1283 = icmp ne i64 %dec1282, 0, !dbg !5248
  br i1 %cmp1283, label %if.then.1284, label %if.else.1285, !dbg !5249

if.then.1284:                                     ; preds = %do.body.1279
  br label %if.end.1288, !dbg !5250

if.else.1285:                                     ; preds = %do.body.1279
  %630 = load %struct._object*, %struct._object** %_py_decref_tmp1280, align 8, !dbg !5252, !tbaa !1975
  %ob_type1286 = getelementptr inbounds %struct._object, %struct._object* %630, i32 0, i32 1, !dbg !5254
  %631 = load %struct._typeobject*, %struct._typeobject** %ob_type1286, align 8, !dbg !5254, !tbaa !2039
  %tp_dealloc1287 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %631, i32 0, i32 4, !dbg !5255
  %632 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1287, align 8, !dbg !5255, !tbaa !2091
  %633 = load %struct._object*, %struct._object** %_py_decref_tmp1280, align 8, !dbg !5256, !tbaa !1975
  call void %632(%struct._object* %633), !dbg !5257
  br label %if.end.1288

if.end.1288:                                      ; preds = %if.else.1285, %if.then.1284
  %634 = bitcast %struct._object** %_py_decref_tmp1280 to i8*, !dbg !5258
  call void @llvm.lifetime.end(i64 8, i8* %634) #2, !dbg !5258
  br label %do.cond.1289, !dbg !5260

do.cond.1289:                                     ; preds = %if.end.1288
  br label %do.end.1290, !dbg !5261

do.end.1290:                                      ; preds = %do.cond.1289
  %635 = bitcast %struct._object** %_code1271 to i8*, !dbg !5263
  call void @llvm.lifetime.end(i64 8, i8* %635) #2, !dbg !5263
  call void @preallocate_memerrors(), !dbg !5264
  %636 = load %struct._object*, %struct._object** @PyExc_RecursionErrorInst, align 8, !dbg !5265, !tbaa !1975
  %tobool1291 = icmp ne %struct._object* %636, null, !dbg !5265
  br i1 %tobool1291, label %if.end.1334, label %if.then.1292, !dbg !5266

if.then.1292:                                     ; preds = %do.end.1290
  %call1293 = call %struct._object* @BaseException_new(%struct._typeobject* @_PyExc_RuntimeError, %struct._object* null, %struct._object* null), !dbg !5267
  store %struct._object* %call1293, %struct._object** @PyExc_RecursionErrorInst, align 8, !dbg !5268, !tbaa !1975
  %637 = load %struct._object*, %struct._object** @PyExc_RecursionErrorInst, align 8, !dbg !5269, !tbaa !1975
  %tobool1294 = icmp ne %struct._object* %637, null, !dbg !5269
  br i1 %tobool1294, label %if.else.1296, label %if.then.1295, !dbg !5270

if.then.1295:                                     ; preds = %if.then.1292
  call void @Py_FatalError(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.74, i32 0, i32 0)) #6, !dbg !5271
  unreachable, !dbg !5271

if.else.1296:                                     ; preds = %if.then.1292
  %638 = bitcast %struct.PyBaseExceptionObject** %err_inst to i8*, !dbg !5272
  call void @llvm.lifetime.start(i64 8, i8* %638) #2, !dbg !5272
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %err_inst, metadata !770, metadata !1979), !dbg !5273
  %639 = load %struct._object*, %struct._object** @PyExc_RecursionErrorInst, align 8, !dbg !5274, !tbaa !1975
  %640 = bitcast %struct._object* %639 to %struct.PyBaseExceptionObject*, !dbg !5275
  store %struct.PyBaseExceptionObject* %640, %struct.PyBaseExceptionObject** %err_inst, align 8, !dbg !5273, !tbaa !1975
  %641 = bitcast %struct._object** %args_tuple to i8*, !dbg !5276
  call void @llvm.lifetime.start(i64 8, i8* %641) #2, !dbg !5276
  call void @llvm.dbg.declare(metadata %struct._object** %args_tuple, metadata !775, metadata !1979), !dbg !5277
  %642 = bitcast %struct._object** %exc_message to i8*, !dbg !5278
  call void @llvm.lifetime.start(i64 8, i8* %642) #2, !dbg !5278
  call void @llvm.dbg.declare(metadata %struct._object** %exc_message, metadata !776, metadata !1979), !dbg !5279
  %call1297 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.75, i32 0, i32 0)), !dbg !5280
  store %struct._object* %call1297, %struct._object** %exc_message, align 8, !dbg !5281, !tbaa !1975
  %643 = load %struct._object*, %struct._object** %exc_message, align 8, !dbg !5282, !tbaa !1975
  %tobool1298 = icmp ne %struct._object* %643, null, !dbg !5282
  br i1 %tobool1298, label %if.end.1300, label %if.then.1299, !dbg !5284

if.then.1299:                                     ; preds = %if.else.1296
  call void @Py_FatalError(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.76, i32 0, i32 0)) #6, !dbg !5285
  unreachable, !dbg !5285

if.end.1300:                                      ; preds = %if.else.1296
  %644 = load %struct._object*, %struct._object** %exc_message, align 8, !dbg !5286, !tbaa !1975
  %call1301 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 1, %struct._object* %644), !dbg !5287
  store %struct._object* %call1301, %struct._object** %args_tuple, align 8, !dbg !5288, !tbaa !1975
  %645 = load %struct._object*, %struct._object** %args_tuple, align 8, !dbg !5289, !tbaa !1975
  %tobool1302 = icmp ne %struct._object* %645, null, !dbg !5289
  br i1 %tobool1302, label %if.end.1304, label %if.then.1303, !dbg !5291

if.then.1303:                                     ; preds = %if.end.1300
  call void @Py_FatalError(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.77, i32 0, i32 0)) #6, !dbg !5292
  unreachable, !dbg !5292

if.end.1304:                                      ; preds = %if.end.1300
  br label %do.body.1305, !dbg !5293

do.body.1305:                                     ; preds = %if.end.1304
  %646 = bitcast %struct._object** %_py_decref_tmp1306 to i8*, !dbg !5294
  call void @llvm.lifetime.start(i64 8, i8* %646) #2, !dbg !5294
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1306, metadata !777, metadata !1979), !dbg !5296
  %647 = load %struct._object*, %struct._object** %exc_message, align 8, !dbg !5297, !tbaa !1975
  store %struct._object* %647, %struct._object** %_py_decref_tmp1306, align 8, !dbg !5296, !tbaa !1975
  %648 = load %struct._object*, %struct._object** %_py_decref_tmp1306, align 8, !dbg !5298, !tbaa !1975
  %ob_refcnt1307 = getelementptr inbounds %struct._object, %struct._object* %648, i32 0, i32 0, !dbg !5300
  %649 = load i64, i64* %ob_refcnt1307, align 8, !dbg !5301, !tbaa !2003
  %dec1308 = add i64 %649, -1, !dbg !5301
  store i64 %dec1308, i64* %ob_refcnt1307, align 8, !dbg !5301, !tbaa !2003
  %cmp1309 = icmp ne i64 %dec1308, 0, !dbg !5302
  br i1 %cmp1309, label %if.then.1310, label %if.else.1311, !dbg !5303

if.then.1310:                                     ; preds = %do.body.1305
  br label %if.end.1314, !dbg !5304

if.else.1311:                                     ; preds = %do.body.1305
  %650 = load %struct._object*, %struct._object** %_py_decref_tmp1306, align 8, !dbg !5306, !tbaa !1975
  %ob_type1312 = getelementptr inbounds %struct._object, %struct._object* %650, i32 0, i32 1, !dbg !5308
  %651 = load %struct._typeobject*, %struct._typeobject** %ob_type1312, align 8, !dbg !5308, !tbaa !2039
  %tp_dealloc1313 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %651, i32 0, i32 4, !dbg !5309
  %652 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1313, align 8, !dbg !5309, !tbaa !2091
  %653 = load %struct._object*, %struct._object** %_py_decref_tmp1306, align 8, !dbg !5310, !tbaa !1975
  call void %652(%struct._object* %653), !dbg !5311
  br label %if.end.1314

if.end.1314:                                      ; preds = %if.else.1311, %if.then.1310
  %654 = bitcast %struct._object** %_py_decref_tmp1306 to i8*, !dbg !5312
  call void @llvm.lifetime.end(i64 8, i8* %654) #2, !dbg !5312
  br label %do.cond.1315, !dbg !5314

do.cond.1315:                                     ; preds = %if.end.1314
  br label %do.end.1316, !dbg !5315

do.end.1316:                                      ; preds = %do.cond.1315
  %655 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %err_inst, align 8, !dbg !5317, !tbaa !1975
  %656 = load %struct._object*, %struct._object** %args_tuple, align 8, !dbg !5319, !tbaa !1975
  %call1317 = call i32 @BaseException_init(%struct.PyBaseExceptionObject* %655, %struct._object* %656, %struct._object* null), !dbg !5320
  %tobool1318 = icmp ne i32 %call1317, 0, !dbg !5320
  br i1 %tobool1318, label %if.then.1319, label %if.end.1320, !dbg !5321

if.then.1319:                                     ; preds = %do.end.1316
  call void @Py_FatalError(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.78, i32 0, i32 0)) #6, !dbg !5322
  unreachable, !dbg !5322

if.end.1320:                                      ; preds = %do.end.1316
  br label %do.body.1321, !dbg !5323

do.body.1321:                                     ; preds = %if.end.1320
  %657 = bitcast %struct._object** %_py_decref_tmp1322 to i8*, !dbg !5324
  call void @llvm.lifetime.start(i64 8, i8* %657) #2, !dbg !5324
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp1322, metadata !779, metadata !1979), !dbg !5326
  %658 = load %struct._object*, %struct._object** %args_tuple, align 8, !dbg !5327, !tbaa !1975
  store %struct._object* %658, %struct._object** %_py_decref_tmp1322, align 8, !dbg !5326, !tbaa !1975
  %659 = load %struct._object*, %struct._object** %_py_decref_tmp1322, align 8, !dbg !5328, !tbaa !1975
  %ob_refcnt1323 = getelementptr inbounds %struct._object, %struct._object* %659, i32 0, i32 0, !dbg !5330
  %660 = load i64, i64* %ob_refcnt1323, align 8, !dbg !5331, !tbaa !2003
  %dec1324 = add i64 %660, -1, !dbg !5331
  store i64 %dec1324, i64* %ob_refcnt1323, align 8, !dbg !5331, !tbaa !2003
  %cmp1325 = icmp ne i64 %dec1324, 0, !dbg !5332
  br i1 %cmp1325, label %if.then.1326, label %if.else.1327, !dbg !5333

if.then.1326:                                     ; preds = %do.body.1321
  br label %if.end.1330, !dbg !5334

if.else.1327:                                     ; preds = %do.body.1321
  %661 = load %struct._object*, %struct._object** %_py_decref_tmp1322, align 8, !dbg !5336, !tbaa !1975
  %ob_type1328 = getelementptr inbounds %struct._object, %struct._object* %661, i32 0, i32 1, !dbg !5338
  %662 = load %struct._typeobject*, %struct._typeobject** %ob_type1328, align 8, !dbg !5338, !tbaa !2039
  %tp_dealloc1329 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %662, i32 0, i32 4, !dbg !5339
  %663 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc1329, align 8, !dbg !5339, !tbaa !2091
  %664 = load %struct._object*, %struct._object** %_py_decref_tmp1322, align 8, !dbg !5340, !tbaa !1975
  call void %663(%struct._object* %664), !dbg !5341
  br label %if.end.1330

if.end.1330:                                      ; preds = %if.else.1327, %if.then.1326
  %665 = bitcast %struct._object** %_py_decref_tmp1322 to i8*, !dbg !5342
  call void @llvm.lifetime.end(i64 8, i8* %665) #2, !dbg !5342
  br label %do.cond.1331, !dbg !5343

do.cond.1331:                                     ; preds = %if.end.1330
  br label %do.end.1332, !dbg !5344

do.end.1332:                                      ; preds = %do.cond.1331
  %666 = bitcast %struct._object** %exc_message to i8*, !dbg !5346
  call void @llvm.lifetime.end(i64 8, i8* %666) #2, !dbg !5346
  %667 = bitcast %struct._object** %args_tuple to i8*, !dbg !5346
  call void @llvm.lifetime.end(i64 8, i8* %667) #2, !dbg !5346
  %668 = bitcast %struct.PyBaseExceptionObject** %err_inst to i8*, !dbg !5346
  call void @llvm.lifetime.end(i64 8, i8* %668) #2, !dbg !5346
  br label %if.end.1333

if.end.1333:                                      ; preds = %do.end.1332
  br label %if.end.1334, !dbg !5347

if.end.1334:                                      ; preds = %if.end.1333, %do.end.1290
  %669 = bitcast %struct._object** %bdict to i8*, !dbg !5348
  call void @llvm.lifetime.end(i64 8, i8* %669) #2, !dbg !5348
  ret void, !dbg !5348
}

declare i32 @PyType_Ready(%struct._typeobject*) #3

; Function Attrs: noreturn
declare void @Py_FatalError(i8*) #4

declare %struct._object* @PyModule_GetDict(%struct._object*) #3

declare i32 @PyDict_SetItemString(%struct._object*, i8*, %struct._object*) #3

declare %struct._object* @PyDict_New() #3

declare %struct._object* @PyLong_FromLong(i64) #3

declare i32 @PyDict_SetItem(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @preallocate_memerrors() #0 {
entry:
  %i = alloca i32, align 4
  %errors = alloca [16 x %struct._object*], align 16
  %_py_decref_tmp = alloca %struct._object*, align 8
  %0 = bitcast i32* %i to i8*, !dbg !5349
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !5349
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1766, metadata !1979), !dbg !5350
  %1 = bitcast [16 x %struct._object*]* %errors to i8*, !dbg !5351
  call void @llvm.lifetime.start(i64 128, i8* %1) #2, !dbg !5351
  call void @llvm.dbg.declare(metadata [16 x %struct._object*]* %errors, metadata !1767, metadata !1979), !dbg !5352
  store i32 0, i32* %i, align 4, !dbg !5353, !tbaa !5355
  br label %for.cond, !dbg !5356

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !5357, !tbaa !5355
  %cmp = icmp slt i32 %2, 16, !dbg !5361
  br i1 %cmp, label %for.body, label %for.end, !dbg !5362

for.body:                                         ; preds = %for.cond
  %3 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !5363, !tbaa !1975
  %4 = bitcast %struct._object* %3 to %struct._typeobject*, !dbg !5365
  %call = call %struct._object* @MemoryError_new(%struct._typeobject* %4, %struct._object* null, %struct._object* null), !dbg !5366
  %5 = load i32, i32* %i, align 4, !dbg !5367, !tbaa !5355
  %idxprom = sext i32 %5 to i64, !dbg !5368
  %arrayidx = getelementptr [16 x %struct._object*], [16 x %struct._object*]* %errors, i32 0, i64 %idxprom, !dbg !5368
  store %struct._object* %call, %struct._object** %arrayidx, align 8, !dbg !5369, !tbaa !1975
  %6 = load i32, i32* %i, align 4, !dbg !5370, !tbaa !5355
  %idxprom1 = sext i32 %6 to i64, !dbg !5372
  %arrayidx2 = getelementptr [16 x %struct._object*], [16 x %struct._object*]* %errors, i32 0, i64 %idxprom1, !dbg !5372
  %7 = load %struct._object*, %struct._object** %arrayidx2, align 8, !dbg !5372, !tbaa !1975
  %tobool = icmp ne %struct._object* %7, null, !dbg !5372
  br i1 %tobool, label %if.end, label %if.then, !dbg !5373

if.then:                                          ; preds = %for.body
  call void @Py_FatalError(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.221, i32 0, i32 0)) #6, !dbg !5374
  unreachable, !dbg !5374

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5375

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !5376, !tbaa !5355
  %inc = add i32 %8, 1, !dbg !5376
  store i32 %inc, i32* %i, align 4, !dbg !5376, !tbaa !5355
  br label %for.cond, !dbg !5377

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5378, !tbaa !5355
  br label %for.cond.3, !dbg !5379

for.cond.3:                                       ; preds = %for.inc.11, %for.end
  %9 = load i32, i32* %i, align 4, !dbg !5380, !tbaa !5355
  %cmp4 = icmp slt i32 %9, 16, !dbg !5383
  br i1 %cmp4, label %for.body.5, label %for.end.13, !dbg !5384

for.body.5:                                       ; preds = %for.cond.3
  br label %do.body, !dbg !5385

do.body:                                          ; preds = %for.body.5
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5386
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !5386
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1771, metadata !1979), !dbg !5388
  %11 = load i32, i32* %i, align 4, !dbg !5389, !tbaa !5355
  %idxprom6 = sext i32 %11 to i64, !dbg !5390
  %arrayidx7 = getelementptr [16 x %struct._object*], [16 x %struct._object*]* %errors, i32 0, i64 %idxprom6, !dbg !5390
  %12 = load %struct._object*, %struct._object** %arrayidx7, align 8, !dbg !5390, !tbaa !1975
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8, !dbg !5388, !tbaa !1975
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5391, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !5393
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !5394, !tbaa !2003
  %dec = add i64 %14, -1, !dbg !5394
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5394, !tbaa !2003
  %cmp8 = icmp ne i64 %dec, 0, !dbg !5395
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !5396

if.then.9:                                        ; preds = %do.body
  br label %if.end.10, !dbg !5397

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5399, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !5401
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5401, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4, !dbg !5402
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5402, !tbaa !2091
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5403, !tbaa !1975
  call void %17(%struct._object* %18), !dbg !5404
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.9
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5405
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !5405
  br label %do.cond, !dbg !5407

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !5408

do.end:                                           ; preds = %do.cond
  br label %for.inc.11, !dbg !5410

for.inc.11:                                       ; preds = %do.end
  %20 = load i32, i32* %i, align 4, !dbg !5411, !tbaa !5355
  %inc12 = add i32 %20, 1, !dbg !5411
  store i32 %inc12, i32* %i, align 4, !dbg !5411, !tbaa !5355
  br label %for.cond.3, !dbg !5412

for.end.13:                                       ; preds = %for.cond.3
  %21 = bitcast [16 x %struct._object*]* %errors to i8*, !dbg !5413
  call void @llvm.lifetime.end(i64 128, i8* %21) #2, !dbg !5413
  %22 = bitcast i32* %i to i8*, !dbg !5413
  call void @llvm.lifetime.end(i64 4, i8* %22) #2, !dbg !5413
  ret void, !dbg !5413
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %self = alloca %struct.PyBaseExceptionObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1778, metadata !1979), !dbg !5414
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1779, metadata !1979), !dbg !5415
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1780, metadata !1979), !dbg !5416
  %0 = bitcast %struct.PyBaseExceptionObject** %self to i8*, !dbg !5417
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5417
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self, metadata !1781, metadata !1979), !dbg !5418
  %1 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5419, !tbaa !1975
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 36, !dbg !5420
  %2 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !5420, !tbaa !5421
  %3 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5422, !tbaa !1975
  %call = call %struct._object* %2(%struct._typeobject* %3, i64 0), !dbg !5419
  %4 = bitcast %struct._object* %call to %struct.PyBaseExceptionObject*, !dbg !5423
  store %struct.PyBaseExceptionObject* %4, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5424, !tbaa !1975
  %5 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5425, !tbaa !1975
  %tobool = icmp ne %struct.PyBaseExceptionObject* %5, null, !dbg !5425
  br i1 %tobool, label %if.end, label %if.then, !dbg !5427

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5428
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5428

if.end:                                           ; preds = %entry
  %6 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5429, !tbaa !1975
  %dict = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %6, i32 0, i32 1, !dbg !5430
  store %struct._object* null, %struct._object** %dict, align 8, !dbg !5431, !tbaa !5432
  %7 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5433, !tbaa !1975
  %context = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %7, i32 0, i32 4, !dbg !5434
  store %struct._object* null, %struct._object** %context, align 8, !dbg !5435, !tbaa !2208
  %8 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5436, !tbaa !1975
  %cause = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %8, i32 0, i32 5, !dbg !5437
  store %struct._object* null, %struct._object** %cause, align 8, !dbg !5438, !tbaa !2119
  %9 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5439, !tbaa !1975
  %traceback = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %9, i32 0, i32 3, !dbg !5440
  store %struct._object* null, %struct._object** %traceback, align 8, !dbg !5441, !tbaa !1991
  %10 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5442, !tbaa !1975
  %suppress_context = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %10, i32 0, i32 6, !dbg !5443
  store i8 0, i8* %suppress_context, align 1, !dbg !5444, !tbaa !2159
  %11 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5445, !tbaa !1975
  %tobool1 = icmp ne %struct._object* %11, null, !dbg !5445
  br i1 %tobool1, label %if.then.2, label %if.end.4, !dbg !5447

if.then.2:                                        ; preds = %if.end
  %12 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5448, !tbaa !1975
  %13 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5450, !tbaa !1975
  %args3 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %13, i32 0, i32 2, !dbg !5451
  store %struct._object* %12, %struct._object** %args3, align 8, !dbg !5452, !tbaa !5453
  %14 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5454, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !5455
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !5456, !tbaa !2003
  %inc = add i64 %15, 1, !dbg !5456
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5456, !tbaa !2003
  %16 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5457, !tbaa !1975
  %17 = bitcast %struct.PyBaseExceptionObject* %16 to %struct._object*, !dbg !5458
  store %struct._object* %17, %struct._object** %retval, !dbg !5459
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5459

if.end.4:                                         ; preds = %if.end
  %call5 = call %struct._object* @PyTuple_New(i64 0), !dbg !5460
  %18 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5461, !tbaa !1975
  %args6 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %18, i32 0, i32 2, !dbg !5462
  store %struct._object* %call5, %struct._object** %args6, align 8, !dbg !5463, !tbaa !5453
  %19 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5464, !tbaa !1975
  %args7 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %19, i32 0, i32 2, !dbg !5465
  %20 = load %struct._object*, %struct._object** %args7, align 8, !dbg !5465, !tbaa !5453
  %tobool8 = icmp ne %struct._object* %20, null, !dbg !5464
  br i1 %tobool8, label %if.end.13, label %if.then.9, !dbg !5466

if.then.9:                                        ; preds = %if.end.4
  br label %do.body, !dbg !5467

do.body:                                          ; preds = %if.then.9
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5468
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !5468
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1782, metadata !1979), !dbg !5470
  %22 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5471, !tbaa !1975
  %23 = bitcast %struct.PyBaseExceptionObject* %22 to %struct._object*, !dbg !5472
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8, !dbg !5470, !tbaa !1975
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5473, !tbaa !1975
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !5475
  %25 = load i64, i64* %ob_refcnt10, align 8, !dbg !5476, !tbaa !2003
  %dec = add i64 %25, -1, !dbg !5476
  store i64 %dec, i64* %ob_refcnt10, align 8, !dbg !5476, !tbaa !2003
  %cmp = icmp ne i64 %dec, 0, !dbg !5477
  br i1 %cmp, label %if.then.11, label %if.else, !dbg !5478

if.then.11:                                       ; preds = %do.body
  br label %if.end.12, !dbg !5479

if.else:                                          ; preds = %do.body
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5481, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !5483
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5483, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !5484
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5484, !tbaa !2091
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5485, !tbaa !1975
  call void %28(%struct._object* %29), !dbg !5486
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.11
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5487
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !5487
  br label %do.cond, !dbg !5489

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !5490

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !5492
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5492

if.end.13:                                        ; preds = %if.end.4
  %31 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !5493, !tbaa !1975
  %32 = bitcast %struct.PyBaseExceptionObject* %31 to %struct._object*, !dbg !5494
  store %struct._object* %32, %struct._object** %retval, !dbg !5495
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5495

cleanup:                                          ; preds = %if.end.13, %do.end, %if.then.2, %if.then
  %33 = bitcast %struct.PyBaseExceptionObject** %self to i8*, !dbg !5496
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !5496
  %34 = load %struct._object*, %struct._object** %retval, !dbg !5496
  ret %struct._object* %34, !dbg !5496
}

declare %struct._object* @PyUnicode_FromString(i8*) #3

declare %struct._object* @PyTuple_Pack(i64, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_init(%struct.PyBaseExceptionObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !1790, metadata !1979), !dbg !5497
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1791, metadata !1979), !dbg !5498
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1792, metadata !1979), !dbg !5499
  %0 = bitcast %struct._object** %tmp to i8*, !dbg !5500
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5500
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !1793, metadata !1979), !dbg !5501
  %1 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !5502, !tbaa !1975
  %2 = bitcast %struct.PyBaseExceptionObject* %1 to %struct._object*, !dbg !5504
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !5505
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5505, !tbaa !2039
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 1, !dbg !5506
  %4 = load i8*, i8** %tp_name, align 8, !dbg !5506, !tbaa !5507
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !5508, !tbaa !1975
  %call = call i32 @_PyArg_NoKeywords(i8* %4, %struct._object* %5), !dbg !5509
  %tobool = icmp ne i32 %call, 0, !dbg !5509
  br i1 %tobool, label %if.end, label %if.then, !dbg !5510

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !5511
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5511

if.end:                                           ; preds = %entry
  %6 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !5512, !tbaa !1975
  %args1 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %6, i32 0, i32 2, !dbg !5513
  %7 = load %struct._object*, %struct._object** %args1, align 8, !dbg !5513, !tbaa !5453
  store %struct._object* %7, %struct._object** %tmp, align 8, !dbg !5514, !tbaa !1975
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5515, !tbaa !1975
  %9 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !5516, !tbaa !1975
  %args2 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %9, i32 0, i32 2, !dbg !5517
  store %struct._object* %8, %struct._object** %args2, align 8, !dbg !5518, !tbaa !5453
  %10 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !5519, !tbaa !1975
  %args3 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %10, i32 0, i32 2, !dbg !5520
  %11 = load %struct._object*, %struct._object** %args3, align 8, !dbg !5520, !tbaa !5453
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !5521
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !5522, !tbaa !2003
  %inc = add i64 %12, 1, !dbg !5522
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5522, !tbaa !2003
  br label %do.body, !dbg !5523

do.body:                                          ; preds = %if.end
  %13 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5524
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !5524
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1794, metadata !1979), !dbg !5526
  %14 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5527, !tbaa !1975
  store %struct._object* %14, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5526, !tbaa !1975
  %15 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5528, !tbaa !1975
  %cmp = icmp ne %struct._object* %15, null, !dbg !5529
  br i1 %cmp, label %if.then.5, label %if.end.13, !dbg !5530

if.then.5:                                        ; preds = %do.body
  br label %do.body.6, !dbg !5531

do.body.6:                                        ; preds = %if.then.5
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5533
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !5533
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1796, metadata !1979), !dbg !5535
  %17 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5536, !tbaa !1975
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !5535, !tbaa !1975
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5537, !tbaa !1975
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !5539
  %19 = load i64, i64* %ob_refcnt8, align 8, !dbg !5540, !tbaa !2003
  %dec = add i64 %19, -1, !dbg !5540
  store i64 %dec, i64* %ob_refcnt8, align 8, !dbg !5540, !tbaa !2003
  %cmp9 = icmp ne i64 %dec, 0, !dbg !5541
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !5542

if.then.10:                                       ; preds = %do.body.6
  br label %if.end.12, !dbg !5543

if.else:                                          ; preds = %do.body.6
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5545, !tbaa !1975
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !5547
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !5547, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !5548
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5548, !tbaa !2091
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5549, !tbaa !1975
  call void %22(%struct._object* %23), !dbg !5550
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.10
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5551
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !5551
  br label %do.cond, !dbg !5553

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !5554

do.end:                                           ; preds = %do.cond
  br label %if.end.13, !dbg !5556

if.end.13:                                        ; preds = %do.end, %do.body
  %25 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5558
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !5558
  br label %do.cond.14, !dbg !5561

do.cond.14:                                       ; preds = %if.end.13
  br label %do.end.15, !dbg !5562

do.end.15:                                        ; preds = %do.cond.14
  store i32 0, i32* %retval, !dbg !5564
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5564

cleanup:                                          ; preds = %do.end.15, %if.then
  %26 = bitcast %struct._object** %tmp to i8*, !dbg !5565
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !5565
  %27 = load i32, i32* %retval, !dbg !5565
  ret i32 %27, !dbg !5565
}

; Function Attrs: nounwind uwtable
define void @_PyExc_Fini() #0 {
entry:
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  br label %do.body, !dbg !5566

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !5567
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5567
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !785, metadata !1979), !dbg !5569
  %1 = load %struct._object*, %struct._object** @PyExc_RecursionErrorInst, align 8, !dbg !5570, !tbaa !1975
  store %struct._object* %1, %struct._object** %_py_tmp, align 8, !dbg !5569, !tbaa !1975
  %2 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !5571, !tbaa !1975
  %cmp = icmp ne %struct._object* %2, null, !dbg !5572
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !5573

if.then:                                          ; preds = %do.body
  store %struct._object* null, %struct._object** @PyExc_RecursionErrorInst, align 8, !dbg !5574, !tbaa !1975
  br label %do.body.1, !dbg !5576

do.body.1:                                        ; preds = %if.then
  %3 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5577
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !5577
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !787, metadata !1979), !dbg !5579
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !5580, !tbaa !1975
  store %struct._object* %4, %struct._object** %_py_decref_tmp, align 8, !dbg !5579, !tbaa !1975
  %5 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5581, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !5583
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !5584, !tbaa !2003
  %dec = add i64 %6, -1, !dbg !5584
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5584, !tbaa !2003
  %cmp2 = icmp ne i64 %dec, 0, !dbg !5585
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !5586

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !5587

if.else:                                          ; preds = %do.body.1
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5589, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !5591
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5591, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 4, !dbg !5592
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5592, !tbaa !2091
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5593, !tbaa !1975
  call void %9(%struct._object* %10), !dbg !5594
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5595
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !5595
  br label %do.cond, !dbg !5597

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !5598

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !5600

if.end.4:                                         ; preds = %do.end, %do.body
  %12 = bitcast %struct._object** %_py_tmp to i8*, !dbg !5602
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !5602
  br label %do.end.6, !dbg !5605

do.end.6:                                         ; preds = %if.end.4
  call void @free_preallocated_memerrors(), !dbg !5606
  br label %do.body.7, !dbg !5607

do.body.7:                                        ; preds = %do.end.6
  %13 = bitcast %struct._object** %_py_tmp8 to i8*, !dbg !5608
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !5608
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp8, metadata !791, metadata !1979), !dbg !5610
  %14 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !5611, !tbaa !1975
  store %struct._object* %14, %struct._object** %_py_tmp8, align 8, !dbg !5610, !tbaa !1975
  %15 = load %struct._object*, %struct._object** %_py_tmp8, align 8, !dbg !5612, !tbaa !1975
  %cmp9 = icmp ne %struct._object* %15, null, !dbg !5613
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !5614

if.then.10:                                       ; preds = %do.body.7
  store %struct._object* null, %struct._object** @errnomap, align 8, !dbg !5615, !tbaa !1975
  br label %do.body.11, !dbg !5617

do.body.11:                                       ; preds = %if.then.10
  %16 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !5618
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !5618
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !793, metadata !1979), !dbg !5620
  %17 = load %struct._object*, %struct._object** %_py_tmp8, align 8, !dbg !5621, !tbaa !1975
  store %struct._object* %17, %struct._object** %_py_decref_tmp12, align 8, !dbg !5620, !tbaa !1975
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !5622, !tbaa !1975
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !5624
  %19 = load i64, i64* %ob_refcnt13, align 8, !dbg !5625, !tbaa !2003
  %dec14 = add i64 %19, -1, !dbg !5625
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !5625, !tbaa !2003
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !5626
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !5627

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !5628

if.else.17:                                       ; preds = %do.body.11
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !5630, !tbaa !1975
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !5632
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !5632, !tbaa !2039
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !5633
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !5633, !tbaa !2091
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !5634, !tbaa !1975
  call void %22(%struct._object* %23), !dbg !5635
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %24 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !5636
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !5636
  br label %do.cond.21, !dbg !5638

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !5639

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !5641

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %25 = bitcast %struct._object** %_py_tmp8 to i8*, !dbg !5643
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !5643
  br label %do.end.25, !dbg !5644

do.end.25:                                        ; preds = %if.end.23
  ret void, !dbg !5645
}

; Function Attrs: nounwind uwtable
define internal void @free_preallocated_memerrors() #0 {
entry:
  %self = alloca %struct._object*, align 8
  br label %while.cond, !dbg !5646

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !5647, !tbaa !1975
  %cmp = icmp ne %struct.PyBaseExceptionObject* %0, null, !dbg !5650
  br i1 %cmp, label %while.body, label %while.end, !dbg !5646

while.body:                                       ; preds = %while.cond
  %1 = bitcast %struct._object** %self to i8*, !dbg !5651
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !5651
  call void @llvm.dbg.declare(metadata %struct._object** %self, metadata !1801, metadata !1979), !dbg !5652
  %2 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !5653, !tbaa !1975
  %3 = bitcast %struct.PyBaseExceptionObject* %2 to %struct._object*, !dbg !5654
  store %struct._object* %3, %struct._object** %self, align 8, !dbg !5652, !tbaa !1975
  %4 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !5655, !tbaa !1975
  %dict = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %4, i32 0, i32 1, !dbg !5656
  %5 = load %struct._object*, %struct._object** %dict, align 8, !dbg !5656, !tbaa !5432
  %6 = bitcast %struct._object* %5 to %struct.PyBaseExceptionObject*, !dbg !5657
  store %struct.PyBaseExceptionObject* %6, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !5658, !tbaa !1975
  %7 = load %struct._object*, %struct._object** %self, align 8, !dbg !5659, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !5660
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5660, !tbaa !2039
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 38, !dbg !5661
  %9 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !5661, !tbaa !5662
  %10 = load %struct._object*, %struct._object** %self, align 8, !dbg !5663, !tbaa !1975
  %11 = bitcast %struct._object* %10 to i8*, !dbg !5664
  call void %9(i8* %11), !dbg !5665
  %12 = bitcast %struct._object** %self to i8*, !dbg !5666
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !5666
  br label %while.cond, !dbg !5646

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5667
}

; Function Attrs: nounwind uwtable
define %struct._object* @_PyErr_TrySetFromCause(i8* %format, ...) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %format.addr = alloca i8*, align 8
  %msg_prefix = alloca %struct._object*, align 8
  %exc = alloca %struct._object*, align 8
  %val = alloca %struct._object*, align 8
  %tb = alloca %struct._object*, align 8
  %caught_type = alloca %struct._typeobject*, align 8
  %dictptr = alloca %struct._object**, align 8
  %instance_args = alloca %struct._object*, align 8
  %num_args = alloca i64, align 8
  %caught_type_size = alloca i64, align 8
  %base_exc_size = alloca i64, align 8
  %new_exc = alloca %struct._object*, align 8
  %new_val = alloca %struct._object*, align 8
  %new_tb = alloca %struct._object*, align 8
  %vargs = alloca [1 x %struct.__va_list_tag], align 16
  %same_basic_size = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp38 = alloca %struct._object*, align 8
  %_py_decref_tmp50 = alloca %struct._object*, align 8
  %_py_decref_tmp65 = alloca %struct._object*, align 8
  %_py_decref_tmp77 = alloca %struct._object*, align 8
  store i8* %format, i8** %format.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !801, metadata !1979), !dbg !5668
  %0 = bitcast %struct._object** %msg_prefix to i8*, !dbg !5669
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5669
  call void @llvm.dbg.declare(metadata %struct._object** %msg_prefix, metadata !802, metadata !1979), !dbg !5670
  %1 = bitcast %struct._object** %exc to i8*, !dbg !5671
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !5671
  call void @llvm.dbg.declare(metadata %struct._object** %exc, metadata !803, metadata !1979), !dbg !5672
  %2 = bitcast %struct._object** %val to i8*, !dbg !5671
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !5671
  call void @llvm.dbg.declare(metadata %struct._object** %val, metadata !804, metadata !1979), !dbg !5673
  %3 = bitcast %struct._object** %tb to i8*, !dbg !5671
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !5671
  call void @llvm.dbg.declare(metadata %struct._object** %tb, metadata !805, metadata !1979), !dbg !5674
  %4 = bitcast %struct._typeobject** %caught_type to i8*, !dbg !5675
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !5675
  call void @llvm.dbg.declare(metadata %struct._typeobject** %caught_type, metadata !806, metadata !1979), !dbg !5676
  %5 = bitcast %struct._object*** %dictptr to i8*, !dbg !5677
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !5677
  call void @llvm.dbg.declare(metadata %struct._object*** %dictptr, metadata !807, metadata !1979), !dbg !5678
  %6 = bitcast %struct._object** %instance_args to i8*, !dbg !5679
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !5679
  call void @llvm.dbg.declare(metadata %struct._object** %instance_args, metadata !809, metadata !1979), !dbg !5680
  %7 = bitcast i64* %num_args to i8*, !dbg !5681
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !5681
  call void @llvm.dbg.declare(metadata i64* %num_args, metadata !810, metadata !1979), !dbg !5682
  %8 = bitcast i64* %caught_type_size to i8*, !dbg !5681
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !5681
  call void @llvm.dbg.declare(metadata i64* %caught_type_size, metadata !811, metadata !1979), !dbg !5683
  %9 = bitcast i64* %base_exc_size to i8*, !dbg !5681
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !5681
  call void @llvm.dbg.declare(metadata i64* %base_exc_size, metadata !812, metadata !1979), !dbg !5684
  %10 = bitcast %struct._object** %new_exc to i8*, !dbg !5685
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !5685
  call void @llvm.dbg.declare(metadata %struct._object** %new_exc, metadata !813, metadata !1979), !dbg !5686
  %11 = bitcast %struct._object** %new_val to i8*, !dbg !5685
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !5685
  call void @llvm.dbg.declare(metadata %struct._object** %new_val, metadata !814, metadata !1979), !dbg !5687
  %12 = bitcast %struct._object** %new_tb to i8*, !dbg !5685
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !5685
  call void @llvm.dbg.declare(metadata %struct._object** %new_tb, metadata !815, metadata !1979), !dbg !5688
  %13 = bitcast [1 x %struct.__va_list_tag]* %vargs to i8*, !dbg !5689
  call void @llvm.lifetime.start(i64 24, i8* %13) #2, !dbg !5689
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %vargs, metadata !816, metadata !1979), !dbg !5690
  %14 = bitcast i32* %same_basic_size to i8*, !dbg !5691
  call void @llvm.lifetime.start(i64 4, i8* %14) #2, !dbg !5691
  call void @llvm.dbg.declare(metadata i32* %same_basic_size, metadata !829, metadata !1979), !dbg !5692
  call void @PyErr_Fetch(%struct._object** %exc, %struct._object** %val, %struct._object** %tb), !dbg !5693
  %15 = load %struct._object*, %struct._object** %exc, align 8, !dbg !5694, !tbaa !1975
  %16 = bitcast %struct._object* %15 to %struct._typeobject*, !dbg !5695
  store %struct._typeobject* %16, %struct._typeobject** %caught_type, align 8, !dbg !5696, !tbaa !1975
  %17 = load %struct._typeobject*, %struct._typeobject** %caught_type, align 8, !dbg !5697, !tbaa !1975
  %tp_basicsize = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 2, !dbg !5698
  %18 = load i64, i64* %tp_basicsize, align 8, !dbg !5698, !tbaa !5699
  store i64 %18, i64* %caught_type_size, align 8, !dbg !5700, !tbaa !2396
  %19 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BaseException, i32 0, i32 2), align 8, !dbg !5701, !tbaa !5699
  store i64 %19, i64* %base_exc_size, align 8, !dbg !5702, !tbaa !2396
  %20 = load i64, i64* %caught_type_size, align 8, !dbg !5703, !tbaa !2396
  %21 = load i64, i64* %base_exc_size, align 8, !dbg !5704, !tbaa !2396
  %cmp = icmp eq i64 %20, %21, !dbg !5705
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5706

lor.rhs:                                          ; preds = %entry
  %22 = load %struct._typeobject*, %struct._typeobject** %caught_type, align 8, !dbg !5707, !tbaa !1975
  %tp_weaklistoffset = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 24, !dbg !5708
  %23 = load i64, i64* %tp_weaklistoffset, align 8, !dbg !5708, !tbaa !5709
  %cmp1 = icmp sgt i64 %23, 0, !dbg !5710
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !5711

land.rhs:                                         ; preds = %lor.rhs
  %24 = load i64, i64* %caught_type_size, align 8, !dbg !5712, !tbaa !2396
  %25 = load i64, i64* %base_exc_size, align 8, !dbg !5713, !tbaa !2396
  %add = add i64 %25, 8, !dbg !5714
  %cmp2 = icmp eq i64 %24, %add, !dbg !5715
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %26 = phi i1 [ false, %lor.rhs ], [ %cmp2, %land.rhs ]
  br label %lor.end, !dbg !5706

lor.end:                                          ; preds = %land.end, %entry
  %27 = phi i1 [ true, %entry ], [ %26, %land.end ]
  %lor.ext = zext i1 %27 to i32, !dbg !5716
  store i32 %lor.ext, i32* %same_basic_size, align 4, !dbg !5719, !tbaa !5355
  %28 = load %struct._typeobject*, %struct._typeobject** %caught_type, align 8, !dbg !5720, !tbaa !1975
  %tp_init = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 35, !dbg !5722
  %29 = load i32 (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)** %tp_init, align 8, !dbg !5722, !tbaa !5723
  %cmp3 = icmp ne i32 (%struct._object*, %struct._object*, %struct._object*)* %29, bitcast (i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), !dbg !5724
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !5725

lor.lhs.false:                                    ; preds = %lor.end
  %30 = load %struct._typeobject*, %struct._typeobject** %caught_type, align 8, !dbg !5726, !tbaa !1975
  %tp_new = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 37, !dbg !5727
  %31 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** %tp_new, align 8, !dbg !5727, !tbaa !5728
  %cmp4 = icmp ne %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* %31, @BaseException_new, !dbg !5729
  br i1 %cmp4, label %if.then, label %lor.lhs.false.5, !dbg !5730

lor.lhs.false.5:                                  ; preds = %lor.lhs.false
  %32 = load i32, i32* %same_basic_size, align 4, !dbg !5731, !tbaa !5355
  %tobool = icmp ne i32 %32, 0, !dbg !5731
  br i1 %tobool, label %lor.lhs.false.6, label %if.then, !dbg !5732

lor.lhs.false.6:                                  ; preds = %lor.lhs.false.5
  %33 = load %struct._typeobject*, %struct._typeobject** %caught_type, align 8, !dbg !5733, !tbaa !1975
  %tp_itemsize = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 3, !dbg !5734
  %34 = load i64, i64* %tp_itemsize, align 8, !dbg !5734, !tbaa !5735
  %35 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @_PyExc_BaseException, i32 0, i32 3), align 8, !dbg !5736, !tbaa !5735
  %cmp7 = icmp ne i64 %34, %35, !dbg !5737
  br i1 %cmp7, label %if.then, label %if.end, !dbg !5738

if.then:                                          ; preds = %lor.lhs.false.6, %lor.lhs.false.5, %lor.lhs.false, %lor.end
  %36 = load %struct._object*, %struct._object** %exc, align 8, !dbg !5739, !tbaa !1975
  %37 = load %struct._object*, %struct._object** %val, align 8, !dbg !5741, !tbaa !1975
  %38 = load %struct._object*, %struct._object** %tb, align 8, !dbg !5742, !tbaa !1975
  call void @PyErr_Restore(%struct._object* %36, %struct._object* %37, %struct._object* %38), !dbg !5743
  store %struct._object* null, %struct._object** %retval, !dbg !5744
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5744

if.end:                                           ; preds = %lor.lhs.false.6
  call void @PyErr_NormalizeException(%struct._object** %exc, %struct._object** %val, %struct._object** %tb), !dbg !5745
  %39 = load %struct._object*, %struct._object** %val, align 8, !dbg !5746, !tbaa !1975
  %40 = bitcast %struct._object* %39 to %struct.PyBaseExceptionObject*, !dbg !5747
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %40, i32 0, i32 2, !dbg !5748
  %41 = load %struct._object*, %struct._object** %args, align 8, !dbg !5748, !tbaa !5453
  store %struct._object* %41, %struct._object** %instance_args, align 8, !dbg !5749, !tbaa !1975
  %42 = load %struct._object*, %struct._object** %instance_args, align 8, !dbg !5750, !tbaa !1975
  %43 = bitcast %struct._object* %42 to %struct.PyVarObject*, !dbg !5751
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %43, i32 0, i32 1, !dbg !5752
  %44 = load i64, i64* %ob_size, align 8, !dbg !5752, !tbaa !2466
  store i64 %44, i64* %num_args, align 8, !dbg !5753, !tbaa !2396
  %45 = load i64, i64* %num_args, align 8, !dbg !5754, !tbaa !2396
  %cmp8 = icmp sgt i64 %45, 1, !dbg !5756
  br i1 %cmp8, label %if.then.12, label %lor.lhs.false.9, !dbg !5757

lor.lhs.false.9:                                  ; preds = %if.end
  %46 = load i64, i64* %num_args, align 8, !dbg !5758, !tbaa !2396
  %cmp10 = icmp eq i64 %46, 1, !dbg !5759
  br i1 %cmp10, label %land.lhs.true, label %if.end.13, !dbg !5760

land.lhs.true:                                    ; preds = %lor.lhs.false.9
  %47 = load %struct._object*, %struct._object** %instance_args, align 8, !dbg !5761, !tbaa !1975
  %48 = bitcast %struct._object* %47 to %struct.PyTupleObject*, !dbg !5762
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %48, i32 0, i32 1, !dbg !5763
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !5764
  %49 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !5764, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 1, !dbg !5765
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5765, !tbaa !2039
  %cmp11 = icmp eq %struct._typeobject* %50, @PyUnicode_Type, !dbg !5766
  br i1 %cmp11, label %if.end.13, label %if.then.12, !dbg !5767

if.then.12:                                       ; preds = %land.lhs.true, %if.end
  %51 = load %struct._object*, %struct._object** %exc, align 8, !dbg !5768, !tbaa !1975
  %52 = load %struct._object*, %struct._object** %val, align 8, !dbg !5770, !tbaa !1975
  %53 = load %struct._object*, %struct._object** %tb, align 8, !dbg !5771, !tbaa !1975
  call void @PyErr_Restore(%struct._object* %51, %struct._object* %52, %struct._object* %53), !dbg !5772
  store %struct._object* null, %struct._object** %retval, !dbg !5773
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5773

if.end.13:                                        ; preds = %land.lhs.true, %lor.lhs.false.9
  %54 = load %struct._object*, %struct._object** %val, align 8, !dbg !5774, !tbaa !1975
  %call = call %struct._object** @_PyObject_GetDictPtr(%struct._object* %54), !dbg !5775
  store %struct._object** %call, %struct._object*** %dictptr, align 8, !dbg !5776, !tbaa !1975
  %55 = load %struct._object**, %struct._object*** %dictptr, align 8, !dbg !5777, !tbaa !1975
  %cmp14 = icmp ne %struct._object** %55, null, !dbg !5779
  br i1 %cmp14, label %land.lhs.true.15, label %if.end.21, !dbg !5780

land.lhs.true.15:                                 ; preds = %if.end.13
  %56 = load %struct._object**, %struct._object*** %dictptr, align 8, !dbg !5781, !tbaa !1975
  %57 = load %struct._object*, %struct._object** %56, align 8, !dbg !5783, !tbaa !1975
  %cmp16 = icmp ne %struct._object* %57, null, !dbg !5784
  br i1 %cmp16, label %land.lhs.true.17, label %if.end.21, !dbg !5785

land.lhs.true.17:                                 ; preds = %land.lhs.true.15
  %58 = load %struct._object**, %struct._object*** %dictptr, align 8, !dbg !5786, !tbaa !1975
  %59 = load %struct._object*, %struct._object** %58, align 8, !dbg !5787, !tbaa !1975
  %call18 = call i64 @PyObject_Size(%struct._object* %59), !dbg !5788
  %cmp19 = icmp sgt i64 %call18, 0, !dbg !5789
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !5790

if.then.20:                                       ; preds = %land.lhs.true.17
  %60 = load %struct._object*, %struct._object** %exc, align 8, !dbg !5791, !tbaa !1975
  %61 = load %struct._object*, %struct._object** %val, align 8, !dbg !5793, !tbaa !1975
  %62 = load %struct._object*, %struct._object** %tb, align 8, !dbg !5794, !tbaa !1975
  call void @PyErr_Restore(%struct._object* %60, %struct._object* %61, %struct._object* %62), !dbg !5795
  store %struct._object* null, %struct._object** %retval, !dbg !5796
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5796

if.end.21:                                        ; preds = %land.lhs.true.17, %land.lhs.true.15, %if.end.13
  %63 = load %struct._object*, %struct._object** %tb, align 8, !dbg !5797, !tbaa !1975
  %cmp22 = icmp ne %struct._object* %63, null, !dbg !5798
  br i1 %cmp22, label %if.then.23, label %if.end.29, !dbg !5799

if.then.23:                                       ; preds = %if.end.21
  %64 = load %struct._object*, %struct._object** %val, align 8, !dbg !5800, !tbaa !1975
  %65 = load %struct._object*, %struct._object** %tb, align 8, !dbg !5801, !tbaa !1975
  %call24 = call i32 @PyException_SetTraceback(%struct._object* %64, %struct._object* %65), !dbg !5802
  br label %do.body, !dbg !5803

do.body:                                          ; preds = %if.then.23
  %66 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5804
  call void @llvm.lifetime.start(i64 8, i8* %66) #2, !dbg !5804
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !830, metadata !1979), !dbg !5806
  %67 = load %struct._object*, %struct._object** %tb, align 8, !dbg !5807, !tbaa !1975
  store %struct._object* %67, %struct._object** %_py_decref_tmp, align 8, !dbg !5806, !tbaa !1975
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5808, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0, !dbg !5810
  %69 = load i64, i64* %ob_refcnt, align 8, !dbg !5811, !tbaa !2003
  %dec = add i64 %69, -1, !dbg !5811
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5811, !tbaa !2003
  %cmp25 = icmp ne i64 %dec, 0, !dbg !5812
  br i1 %cmp25, label %if.then.26, label %if.else, !dbg !5813

if.then.26:                                       ; preds = %do.body
  br label %if.end.28, !dbg !5814

if.else:                                          ; preds = %do.body
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5816, !tbaa !1975
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1, !dbg !5818
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !5818, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4, !dbg !5819
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5819, !tbaa !2091
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5820, !tbaa !1975
  call void %72(%struct._object* %73), !dbg !5821
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.26
  %74 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5822
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !5822
  br label %do.cond, !dbg !5824

do.cond:                                          ; preds = %if.end.28
  br label %do.end, !dbg !5825

do.end:                                           ; preds = %do.cond
  br label %if.end.29, !dbg !5827

if.end.29:                                        ; preds = %do.end, %if.end.21
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i32 0, i32 0, !dbg !5828
  %arraydecay30 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !5829
  call void @llvm.va_start(i8* %arraydecay30), !dbg !5829
  %75 = load i8*, i8** %format.addr, align 8, !dbg !5830, !tbaa !1975
  %arraydecay31 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i32 0, i32 0, !dbg !5831
  %call32 = call %struct._object* @PyUnicode_FromFormatV(i8* %75, %struct.__va_list_tag* %arraydecay31), !dbg !5832
  store %struct._object* %call32, %struct._object** %msg_prefix, align 8, !dbg !5833, !tbaa !1975
  %arraydecay33 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vargs, i32 0, i32 0, !dbg !5834
  %arraydecay3334 = bitcast %struct.__va_list_tag* %arraydecay33 to i8*, !dbg !5835
  call void @llvm.va_end(i8* %arraydecay3334), !dbg !5835
  %76 = load %struct._object*, %struct._object** %msg_prefix, align 8, !dbg !5836, !tbaa !1975
  %cmp35 = icmp eq %struct._object* %76, null, !dbg !5837
  br i1 %cmp35, label %if.then.36, label %if.end.61, !dbg !5838

if.then.36:                                       ; preds = %if.end.29
  br label %do.body.37, !dbg !5839

do.body.37:                                       ; preds = %if.then.36
  %77 = bitcast %struct._object** %_py_decref_tmp38 to i8*, !dbg !5840
  call void @llvm.lifetime.start(i64 8, i8* %77) #2, !dbg !5840
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp38, metadata !834, metadata !1979), !dbg !5842
  %78 = load %struct._object*, %struct._object** %exc, align 8, !dbg !5843, !tbaa !1975
  store %struct._object* %78, %struct._object** %_py_decref_tmp38, align 8, !dbg !5842, !tbaa !1975
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !5844, !tbaa !1975
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 0, !dbg !5846
  %80 = load i64, i64* %ob_refcnt39, align 8, !dbg !5847, !tbaa !2003
  %dec40 = add i64 %80, -1, !dbg !5847
  store i64 %dec40, i64* %ob_refcnt39, align 8, !dbg !5847, !tbaa !2003
  %cmp41 = icmp ne i64 %dec40, 0, !dbg !5848
  br i1 %cmp41, label %if.then.42, label %if.else.43, !dbg !5849

if.then.42:                                       ; preds = %do.body.37
  br label %if.end.46, !dbg !5850

if.else.43:                                       ; preds = %do.body.37
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !5852, !tbaa !1975
  %ob_type44 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 1, !dbg !5854
  %82 = load %struct._typeobject*, %struct._typeobject** %ob_type44, align 8, !dbg !5854, !tbaa !2039
  %tp_dealloc45 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %82, i32 0, i32 4, !dbg !5855
  %83 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc45, align 8, !dbg !5855, !tbaa !2091
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !5856, !tbaa !1975
  call void %83(%struct._object* %84), !dbg !5857
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.43, %if.then.42
  %85 = bitcast %struct._object** %_py_decref_tmp38 to i8*, !dbg !5858
  call void @llvm.lifetime.end(i64 8, i8* %85) #2, !dbg !5858
  br label %do.cond.47, !dbg !5860

do.cond.47:                                       ; preds = %if.end.46
  br label %do.end.48, !dbg !5861

do.end.48:                                        ; preds = %do.cond.47
  br label %do.body.49, !dbg !5863

do.body.49:                                       ; preds = %do.end.48
  %86 = bitcast %struct._object** %_py_decref_tmp50 to i8*, !dbg !5864
  call void @llvm.lifetime.start(i64 8, i8* %86) #2, !dbg !5864
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp50, metadata !838, metadata !1979), !dbg !5866
  %87 = load %struct._object*, %struct._object** %val, align 8, !dbg !5867, !tbaa !1975
  store %struct._object* %87, %struct._object** %_py_decref_tmp50, align 8, !dbg !5866, !tbaa !1975
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8, !dbg !5868, !tbaa !1975
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 0, !dbg !5870
  %89 = load i64, i64* %ob_refcnt51, align 8, !dbg !5871, !tbaa !2003
  %dec52 = add i64 %89, -1, !dbg !5871
  store i64 %dec52, i64* %ob_refcnt51, align 8, !dbg !5871, !tbaa !2003
  %cmp53 = icmp ne i64 %dec52, 0, !dbg !5872
  br i1 %cmp53, label %if.then.54, label %if.else.55, !dbg !5873

if.then.54:                                       ; preds = %do.body.49
  br label %if.end.58, !dbg !5874

if.else.55:                                       ; preds = %do.body.49
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8, !dbg !5876, !tbaa !1975
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 1, !dbg !5878
  %91 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8, !dbg !5878, !tbaa !2039
  %tp_dealloc57 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %91, i32 0, i32 4, !dbg !5879
  %92 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc57, align 8, !dbg !5879, !tbaa !2091
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8, !dbg !5880, !tbaa !1975
  call void %92(%struct._object* %93), !dbg !5881
  br label %if.end.58

if.end.58:                                        ; preds = %if.else.55, %if.then.54
  %94 = bitcast %struct._object** %_py_decref_tmp50 to i8*, !dbg !5882
  call void @llvm.lifetime.end(i64 8, i8* %94) #2, !dbg !5882
  br label %do.cond.59, !dbg !5883

do.cond.59:                                       ; preds = %if.end.58
  br label %do.end.60, !dbg !5884

do.end.60:                                        ; preds = %do.cond.59
  store %struct._object* null, %struct._object** %retval, !dbg !5886
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5886

if.end.61:                                        ; preds = %if.end.29
  %95 = load %struct._object*, %struct._object** %exc, align 8, !dbg !5887, !tbaa !1975
  %96 = load %struct._object*, %struct._object** %msg_prefix, align 8, !dbg !5888, !tbaa !1975
  %97 = load %struct._object*, %struct._object** %val, align 8, !dbg !5889, !tbaa !1975
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !5890
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !5890, !tbaa !2039
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 1, !dbg !5891
  %99 = load i8*, i8** %tp_name, align 8, !dbg !5891, !tbaa !5507
  %100 = load %struct._object*, %struct._object** %val, align 8, !dbg !5892, !tbaa !1975
  %call63 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %95, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.79, i32 0, i32 0), %struct._object* %96, i8* %99, %struct._object* %100), !dbg !5893
  br label %do.body.64, !dbg !5894

do.body.64:                                       ; preds = %if.end.61
  %101 = bitcast %struct._object** %_py_decref_tmp65 to i8*, !dbg !5895
  call void @llvm.lifetime.start(i64 8, i8* %101) #2, !dbg !5895
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp65, metadata !840, metadata !1979), !dbg !5897
  %102 = load %struct._object*, %struct._object** %exc, align 8, !dbg !5898, !tbaa !1975
  store %struct._object* %102, %struct._object** %_py_decref_tmp65, align 8, !dbg !5897, !tbaa !1975
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !5899, !tbaa !1975
  %ob_refcnt66 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 0, !dbg !5901
  %104 = load i64, i64* %ob_refcnt66, align 8, !dbg !5902, !tbaa !2003
  %dec67 = add i64 %104, -1, !dbg !5902
  store i64 %dec67, i64* %ob_refcnt66, align 8, !dbg !5902, !tbaa !2003
  %cmp68 = icmp ne i64 %dec67, 0, !dbg !5903
  br i1 %cmp68, label %if.then.69, label %if.else.70, !dbg !5904

if.then.69:                                       ; preds = %do.body.64
  br label %if.end.73, !dbg !5905

if.else.70:                                       ; preds = %do.body.64
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !5907, !tbaa !1975
  %ob_type71 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 1, !dbg !5909
  %106 = load %struct._typeobject*, %struct._typeobject** %ob_type71, align 8, !dbg !5909, !tbaa !2039
  %tp_dealloc72 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %106, i32 0, i32 4, !dbg !5910
  %107 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc72, align 8, !dbg !5910, !tbaa !2091
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !5911, !tbaa !1975
  call void %107(%struct._object* %108), !dbg !5912
  br label %if.end.73

if.end.73:                                        ; preds = %if.else.70, %if.then.69
  %109 = bitcast %struct._object** %_py_decref_tmp65 to i8*, !dbg !5913
  call void @llvm.lifetime.end(i64 8, i8* %109) #2, !dbg !5913
  br label %do.cond.74, !dbg !5915

do.cond.74:                                       ; preds = %if.end.73
  br label %do.end.75, !dbg !5916

do.end.75:                                        ; preds = %do.cond.74
  br label %do.body.76, !dbg !5918

do.body.76:                                       ; preds = %do.end.75
  %110 = bitcast %struct._object** %_py_decref_tmp77 to i8*, !dbg !5919
  call void @llvm.lifetime.start(i64 8, i8* %110) #2, !dbg !5919
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp77, metadata !842, metadata !1979), !dbg !5921
  %111 = load %struct._object*, %struct._object** %msg_prefix, align 8, !dbg !5922, !tbaa !1975
  store %struct._object* %111, %struct._object** %_py_decref_tmp77, align 8, !dbg !5921, !tbaa !1975
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp77, align 8, !dbg !5923, !tbaa !1975
  %ob_refcnt78 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 0, !dbg !5925
  %113 = load i64, i64* %ob_refcnt78, align 8, !dbg !5926, !tbaa !2003
  %dec79 = add i64 %113, -1, !dbg !5926
  store i64 %dec79, i64* %ob_refcnt78, align 8, !dbg !5926, !tbaa !2003
  %cmp80 = icmp ne i64 %dec79, 0, !dbg !5927
  br i1 %cmp80, label %if.then.81, label %if.else.82, !dbg !5928

if.then.81:                                       ; preds = %do.body.76
  br label %if.end.85, !dbg !5929

if.else.82:                                       ; preds = %do.body.76
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp77, align 8, !dbg !5931, !tbaa !1975
  %ob_type83 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 1, !dbg !5933
  %115 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8, !dbg !5933, !tbaa !2039
  %tp_dealloc84 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %115, i32 0, i32 4, !dbg !5934
  %116 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc84, align 8, !dbg !5934, !tbaa !2091
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp77, align 8, !dbg !5935, !tbaa !1975
  call void %116(%struct._object* %117), !dbg !5936
  br label %if.end.85

if.end.85:                                        ; preds = %if.else.82, %if.then.81
  %118 = bitcast %struct._object** %_py_decref_tmp77 to i8*, !dbg !5937
  call void @llvm.lifetime.end(i64 8, i8* %118) #2, !dbg !5937
  br label %do.cond.86, !dbg !5938

do.cond.86:                                       ; preds = %if.end.85
  br label %do.end.87, !dbg !5939

do.end.87:                                        ; preds = %do.cond.86
  call void @PyErr_Fetch(%struct._object** %new_exc, %struct._object** %new_val, %struct._object** %new_tb), !dbg !5941
  call void @PyErr_NormalizeException(%struct._object** %new_exc, %struct._object** %new_val, %struct._object** %new_tb), !dbg !5942
  %119 = load %struct._object*, %struct._object** %new_val, align 8, !dbg !5943, !tbaa !1975
  %120 = load %struct._object*, %struct._object** %val, align 8, !dbg !5944, !tbaa !1975
  call void @PyException_SetCause(%struct._object* %119, %struct._object* %120), !dbg !5945
  %121 = load %struct._object*, %struct._object** %new_exc, align 8, !dbg !5946, !tbaa !1975
  %122 = load %struct._object*, %struct._object** %new_val, align 8, !dbg !5947, !tbaa !1975
  %123 = load %struct._object*, %struct._object** %new_tb, align 8, !dbg !5948, !tbaa !1975
  call void @PyErr_Restore(%struct._object* %121, %struct._object* %122, %struct._object* %123), !dbg !5949
  %124 = load %struct._object*, %struct._object** %new_val, align 8, !dbg !5950, !tbaa !1975
  store %struct._object* %124, %struct._object** %retval, !dbg !5951
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5951

cleanup:                                          ; preds = %do.end.87, %do.end.60, %if.then.20, %if.then.12, %if.then
  %125 = bitcast i32* %same_basic_size to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 4, i8* %125) #2, !dbg !5952
  %126 = bitcast [1 x %struct.__va_list_tag]* %vargs to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 24, i8* %126) #2, !dbg !5952
  %127 = bitcast %struct._object** %new_tb to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %127) #2, !dbg !5952
  %128 = bitcast %struct._object** %new_val to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %128) #2, !dbg !5952
  %129 = bitcast %struct._object** %new_exc to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %129) #2, !dbg !5952
  %130 = bitcast i64* %base_exc_size to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %130) #2, !dbg !5952
  %131 = bitcast i64* %caught_type_size to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %131) #2, !dbg !5952
  %132 = bitcast i64* %num_args to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %132) #2, !dbg !5952
  %133 = bitcast %struct._object** %instance_args to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %133) #2, !dbg !5952
  %134 = bitcast %struct._object*** %dictptr to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %134) #2, !dbg !5952
  %135 = bitcast %struct._typeobject** %caught_type to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %135) #2, !dbg !5952
  %136 = bitcast %struct._object** %tb to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %136) #2, !dbg !5952
  %137 = bitcast %struct._object** %val to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %137) #2, !dbg !5952
  %138 = bitcast %struct._object** %exc to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %138) #2, !dbg !5952
  %139 = bitcast %struct._object** %msg_prefix to i8*, !dbg !5952
  call void @llvm.lifetime.end(i64 8, i8* %139) #2, !dbg !5952
  %140 = load %struct._object*, %struct._object** %retval, !dbg !5952
  ret %struct._object* %140, !dbg !5952
}

declare void @PyErr_Fetch(%struct._object**, %struct._object**, %struct._object**) #3

declare void @PyErr_Restore(%struct._object*, %struct._object*, %struct._object*) #3

declare void @PyErr_NormalizeException(%struct._object**, %struct._object**, %struct._object**) #3

declare %struct._object** @_PyObject_GetDictPtr(%struct._object*) #3

declare i64 @PyObject_Size(%struct._object*) #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #2

declare %struct._object* @PyUnicode_FromFormatV(i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #2

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

declare void @PyErr_SetString(%struct._object*, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @BaseException_dealloc(%struct.PyBaseExceptionObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  %g = alloca %union._gc_head*, align 8
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !861, metadata !1979), !dbg !5953
  br label %do.body, !dbg !5954

do.body:                                          ; preds = %entry
  %0 = bitcast %union._gc_head** %g to i8*, !dbg !5955
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5955
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !862, metadata !1979), !dbg !5957
  %1 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !5958, !tbaa !1975
  %2 = bitcast %struct.PyBaseExceptionObject* %1 to %union._gc_head*, !dbg !5959
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %2, i64 -1, !dbg !5960
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !5957, !tbaa !1975
  br label %do.body.1, !dbg !5961

do.body.1:                                        ; preds = %do.body
  %3 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !5962, !tbaa !1975
  %gc = bitcast %union._gc_head* %3 to %struct.anon.0*, !dbg !5965
  %gc_refs = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc, i32 0, i32 2, !dbg !5966
  %4 = load i64, i64* %gc_refs, align 8, !dbg !5966, !tbaa !5967
  %and = and i64 %4, 1, !dbg !5969
  %or = or i64 %and, -4, !dbg !5970
  %5 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !5971, !tbaa !1975
  %gc2 = bitcast %union._gc_head* %5 to %struct.anon.0*, !dbg !5972
  %gc_refs3 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc2, i32 0, i32 2, !dbg !5973
  store i64 %or, i64* %gc_refs3, align 8, !dbg !5974, !tbaa !5967
  br label %do.cond, !dbg !5975

do.cond:                                          ; preds = %do.body.1
  br label %do.end, !dbg !5976

do.end:                                           ; preds = %do.cond
  %6 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !5978, !tbaa !1975
  %gc4 = bitcast %union._gc_head* %6 to %struct.anon.0*, !dbg !5980
  %gc_next = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc4, i32 0, i32 0, !dbg !5981
  %7 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !5981, !tbaa !5982
  %8 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !5983, !tbaa !1975
  %gc5 = bitcast %union._gc_head* %8 to %struct.anon.0*, !dbg !5984
  %gc_prev = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc5, i32 0, i32 1, !dbg !5985
  %9 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !5985, !tbaa !5986
  %gc6 = bitcast %union._gc_head* %9 to %struct.anon.0*, !dbg !5987
  %gc_next7 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc6, i32 0, i32 0, !dbg !5988
  store %union._gc_head* %7, %union._gc_head** %gc_next7, align 8, !dbg !5989, !tbaa !5982
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !5990, !tbaa !1975
  %gc8 = bitcast %union._gc_head* %10 to %struct.anon.0*, !dbg !5991
  %gc_prev9 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc8, i32 0, i32 1, !dbg !5992
  %11 = load %union._gc_head*, %union._gc_head** %gc_prev9, align 8, !dbg !5992, !tbaa !5986
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !5993, !tbaa !1975
  %gc10 = bitcast %union._gc_head* %12 to %struct.anon.0*, !dbg !5994
  %gc_next11 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc10, i32 0, i32 0, !dbg !5995
  %13 = load %union._gc_head*, %union._gc_head** %gc_next11, align 8, !dbg !5995, !tbaa !5982
  %gc12 = bitcast %union._gc_head* %13 to %struct.anon.0*, !dbg !5996
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc12, i32 0, i32 1, !dbg !5997
  store %union._gc_head* %11, %union._gc_head** %gc_prev13, align 8, !dbg !5998, !tbaa !5986
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !5999, !tbaa !1975
  %gc14 = bitcast %union._gc_head* %14 to %struct.anon.0*, !dbg !6000
  %gc_next15 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc14, i32 0, i32 0, !dbg !6001
  store %union._gc_head* null, %union._gc_head** %gc_next15, align 8, !dbg !6002, !tbaa !5982
  %15 = bitcast %union._gc_head** %g to i8*, !dbg !6003
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !6003
  br label %do.end.17, !dbg !6004

do.end.17:                                        ; preds = %do.end
  %16 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6005, !tbaa !1975
  %call = call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %16), !dbg !6006
  %17 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6007, !tbaa !1975
  %18 = bitcast %struct.PyBaseExceptionObject* %17 to %struct._object*, !dbg !6008
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !6009
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6009, !tbaa !2039
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 38, !dbg !6010
  %20 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6010, !tbaa !5662
  %21 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6011, !tbaa !1975
  %22 = bitcast %struct.PyBaseExceptionObject* %21 to %struct._object*, !dbg !6012
  %23 = bitcast %struct._object* %22 to i8*, !dbg !6012
  call void %20(i8* %23), !dbg !6013
  ret void, !dbg !6014
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_repr(%struct.PyBaseExceptionObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  %name = alloca i8*, align 8
  %dot = alloca i8*, align 8
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !868, metadata !1979), !dbg !6015
  %0 = bitcast i8** %name to i8*, !dbg !6016
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6016
  call void @llvm.dbg.declare(metadata i8** %name, metadata !869, metadata !1979), !dbg !6017
  %1 = bitcast i8** %dot to i8*, !dbg !6018
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6018
  call void @llvm.dbg.declare(metadata i8** %dot, metadata !870, metadata !1979), !dbg !6019
  %2 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6020, !tbaa !1975
  %3 = bitcast %struct.PyBaseExceptionObject* %2 to %struct._object*, !dbg !6021
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !6022
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6022, !tbaa !2039
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 1, !dbg !6023
  %5 = load i8*, i8** %tp_name, align 8, !dbg !6023, !tbaa !5507
  store i8* %5, i8** %name, align 8, !dbg !6024, !tbaa !1975
  %6 = load i8*, i8** %name, align 8, !dbg !6025, !tbaa !1975
  %call = call i8* @strrchr(i8* %6, i32 46) #7, !dbg !6026
  store i8* %call, i8** %dot, align 8, !dbg !6027, !tbaa !1975
  %7 = load i8*, i8** %dot, align 8, !dbg !6028, !tbaa !1975
  %cmp = icmp ne i8* %7, null, !dbg !6030
  br i1 %cmp, label %if.then, label %if.end, !dbg !6031

if.then:                                          ; preds = %entry
  %8 = load i8*, i8** %dot, align 8, !dbg !6032, !tbaa !1975
  %add.ptr = getelementptr i8, i8* %8, i64 1, !dbg !6034
  store i8* %add.ptr, i8** %name, align 8, !dbg !6035, !tbaa !1975
  br label %if.end, !dbg !6036

if.end:                                           ; preds = %if.then, %entry
  %9 = load i8*, i8** %name, align 8, !dbg !6037, !tbaa !1975
  %10 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6038, !tbaa !1975
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %10, i32 0, i32 2, !dbg !6039
  %11 = load %struct._object*, %struct._object** %args, align 8, !dbg !6039, !tbaa !5453
  %call1 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0), i8* %9, %struct._object* %11), !dbg !6040
  %12 = bitcast i8** %dot to i8*, !dbg !6041
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !6041
  %13 = bitcast i8** %name to i8*, !dbg !6041
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !6041
  ret %struct._object* %call1, !dbg !6042
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_str(%struct.PyBaseExceptionObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !873, metadata !1979), !dbg !6043
  %0 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6044, !tbaa !1975
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %0, i32 0, i32 2, !dbg !6045
  %1 = load %struct._object*, %struct._object** %args, align 8, !dbg !6045, !tbaa !5453
  %2 = bitcast %struct._object* %1 to %struct.PyVarObject*, !dbg !6046
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %2, i32 0, i32 1, !dbg !6047
  %3 = load i64, i64* %ob_size, align 8, !dbg !6047, !tbaa !2466
  br label %NodeBlock

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i64 %3, 1
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i64 %3, 1
  br i1 %SwitchLeaf2, label %sw.bb.1, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i64 %3, 0
  br i1 %SwitchLeaf, label %sw.bb, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock
  %call = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.84, i32 0, i32 0)), !dbg !6048
  store %struct._object* %call, %struct._object** %retval, !dbg !6050
  br label %return, !dbg !6050

sw.bb.1:                                          ; preds = %LeafBlock.1
  %4 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6051, !tbaa !1975
  %args2 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %4, i32 0, i32 2, !dbg !6052
  %5 = load %struct._object*, %struct._object** %args2, align 8, !dbg !6052, !tbaa !5453
  %6 = bitcast %struct._object* %5 to %struct.PyTupleObject*, !dbg !6053
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %6, i32 0, i32 1, !dbg !6054
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !6055
  %7 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !6055, !tbaa !1975
  %call3 = call %struct._object* @PyObject_Str(%struct._object* %7), !dbg !6056
  store %struct._object* %call3, %struct._object** %retval, !dbg !6057
  br label %return, !dbg !6057

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  %8 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6058, !tbaa !1975
  %args4 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %8, i32 0, i32 2, !dbg !6059
  %9 = load %struct._object*, %struct._object** %args4, align 8, !dbg !6059, !tbaa !5453
  %call5 = call %struct._object* @PyObject_Str(%struct._object* %9), !dbg !6060
  store %struct._object* %call5, %struct._object** %retval, !dbg !6061
  br label %return, !dbg !6061

return:                                           ; preds = %sw.default, %sw.bb.1, %sw.bb
  %10 = load %struct._object*, %struct._object** %retval, !dbg !6062
  ret %struct._object* %10, !dbg !6062
}

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #3

declare i32 @PyObject_GenericSetAttr(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_traverse(%struct.PyBaseExceptionObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  %vret36 = alloca i32, align 4
  %vret50 = alloca i32, align 4
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !878, metadata !1979), !dbg !6063
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !879, metadata !1979), !dbg !6064
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !880, metadata !1979), !dbg !6065
  br label %do.body, !dbg !6066

do.body:                                          ; preds = %entry
  %0 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6067, !tbaa !1975
  %dict = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %0, i32 0, i32 1, !dbg !6069
  %1 = load %struct._object*, %struct._object** %dict, align 8, !dbg !6069, !tbaa !5432
  %tobool = icmp ne %struct._object* %1, null, !dbg !6070
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !6071

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !6072
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !6072
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !881, metadata !1979), !dbg !6074
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6075, !tbaa !1975
  %4 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6076, !tbaa !1975
  %dict1 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %4, i32 0, i32 1, !dbg !6077
  %5 = load %struct._object*, %struct._object** %dict1, align 8, !dbg !6077, !tbaa !5432
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !6078, !tbaa !1975
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !6075
  store i32 %call, i32* %vret, align 4, !dbg !6074, !tbaa !5355
  %7 = load i32, i32* %vret, align 4, !dbg !6079, !tbaa !5355
  %tobool2 = icmp ne i32 %7, 0, !dbg !6079
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !6081

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !6082, !tbaa !5355
  store i32 %8, i32* %retval, !dbg !6084
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6084

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !6085
  br label %cleanup, !dbg !6085

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !6087
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !6087
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !6090

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !6091

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !6094

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6095, !tbaa !1975
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %10, i32 0, i32 2, !dbg !6097
  %11 = load %struct._object*, %struct._object** %args, align 8, !dbg !6097, !tbaa !5453
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !6098
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !6099

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !6100
  call void @llvm.lifetime.start(i64 4, i8* %12) #2, !dbg !6100
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !885, metadata !1979), !dbg !6102
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6103, !tbaa !1975
  %14 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6104, !tbaa !1975
  %args9 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %14, i32 0, i32 2, !dbg !6105
  %15 = load %struct._object*, %struct._object** %args9, align 8, !dbg !6105, !tbaa !5453
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !6106, !tbaa !1975
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !6103
  store i32 %call10, i32* %vret8, align 4, !dbg !6102, !tbaa !5355
  %17 = load i32, i32* %vret8, align 4, !dbg !6107, !tbaa !5355
  %tobool11 = icmp ne i32 %17, 0, !dbg !6107
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !6109

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !6110, !tbaa !5355
  store i32 %18, i32* %retval, !dbg !6112
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !6112

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !6113
  br label %cleanup.14, !dbg !6113

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !6115
  call void @llvm.lifetime.end(i64 4, i8* %19) #2, !dbg !6115
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !6118

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !6119

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !6122

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6123, !tbaa !1975
  %traceback = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %20, i32 0, i32 3, !dbg !6125
  %21 = load %struct._object*, %struct._object** %traceback, align 8, !dbg !6125, !tbaa !1991
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !6126
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !6127

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !6128
  call void @llvm.lifetime.start(i64 4, i8* %22) #2, !dbg !6128
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !889, metadata !1979), !dbg !6130
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6131, !tbaa !1975
  %24 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6132, !tbaa !1975
  %traceback23 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %24, i32 0, i32 3, !dbg !6133
  %25 = load %struct._object*, %struct._object** %traceback23, align 8, !dbg !6133, !tbaa !1991
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !6134, !tbaa !1975
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !6131
  store i32 %call24, i32* %vret22, align 4, !dbg !6130, !tbaa !5355
  %27 = load i32, i32* %vret22, align 4, !dbg !6135, !tbaa !5355
  %tobool25 = icmp ne i32 %27, 0, !dbg !6135
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !6137

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !6138, !tbaa !5355
  store i32 %28, i32* %retval, !dbg !6140
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !6140

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !6141
  br label %cleanup.28, !dbg !6141

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !6143
  call void @llvm.lifetime.end(i64 4, i8* %29) #2, !dbg !6143
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.5

LeafBlock.5:                                      ; preds = %cleanup.28
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest.29, 1
  br i1 %SwitchLeaf6, label %return, label %NewDefault.4

NewDefault.4:                                     ; preds = %LeafBlock.5
  br label %cleanup.cont.30

cleanup.cont.30:                                  ; preds = %NewDefault.4
  br label %if.end.31, !dbg !6146

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !6147

do.end.32:                                        ; preds = %if.end.31
  br label %do.body.33, !dbg !6150

do.body.33:                                       ; preds = %do.end.32
  %30 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6151, !tbaa !1975
  %cause = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %30, i32 0, i32 5, !dbg !6153
  %31 = load %struct._object*, %struct._object** %cause, align 8, !dbg !6153, !tbaa !2119
  %tobool34 = icmp ne %struct._object* %31, null, !dbg !6154
  br i1 %tobool34, label %if.then.35, label %if.end.45, !dbg !6155

if.then.35:                                       ; preds = %do.body.33
  %32 = bitcast i32* %vret36 to i8*, !dbg !6156
  call void @llvm.lifetime.start(i64 4, i8* %32) #2, !dbg !6156
  call void @llvm.dbg.declare(metadata i32* %vret36, metadata !893, metadata !1979), !dbg !6158
  %33 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6159, !tbaa !1975
  %34 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6160, !tbaa !1975
  %cause37 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %34, i32 0, i32 5, !dbg !6161
  %35 = load %struct._object*, %struct._object** %cause37, align 8, !dbg !6161, !tbaa !2119
  %36 = load i8*, i8** %arg.addr, align 8, !dbg !6162, !tbaa !1975
  %call38 = call i32 %33(%struct._object* %35, i8* %36), !dbg !6159
  store i32 %call38, i32* %vret36, align 4, !dbg !6158, !tbaa !5355
  %37 = load i32, i32* %vret36, align 4, !dbg !6163, !tbaa !5355
  %tobool39 = icmp ne i32 %37, 0, !dbg !6163
  br i1 %tobool39, label %if.then.40, label %if.end.41, !dbg !6165

if.then.40:                                       ; preds = %if.then.35
  %38 = load i32, i32* %vret36, align 4, !dbg !6166, !tbaa !5355
  store i32 %38, i32* %retval, !dbg !6168
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.42, !dbg !6168

if.end.41:                                        ; preds = %if.then.35
  store i32 0, i32* %cleanup.dest.slot, !dbg !6169
  br label %cleanup.42, !dbg !6169

cleanup.42:                                       ; preds = %if.end.41, %if.then.40
  %39 = bitcast i32* %vret36 to i8*, !dbg !6171
  call void @llvm.lifetime.end(i64 4, i8* %39) #2, !dbg !6171
  %cleanup.dest.43 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.8

LeafBlock.8:                                      ; preds = %cleanup.42
  %SwitchLeaf9 = icmp eq i32 %cleanup.dest.43, 1
  br i1 %SwitchLeaf9, label %return, label %NewDefault.7

NewDefault.7:                                     ; preds = %LeafBlock.8
  br label %cleanup.cont.44

cleanup.cont.44:                                  ; preds = %NewDefault.7
  br label %if.end.45, !dbg !6174

if.end.45:                                        ; preds = %cleanup.cont.44, %do.body.33
  br label %do.end.46, !dbg !6175

do.end.46:                                        ; preds = %if.end.45
  br label %do.body.47, !dbg !6178

do.body.47:                                       ; preds = %do.end.46
  %40 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6179, !tbaa !1975
  %context = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %40, i32 0, i32 4, !dbg !6181
  %41 = load %struct._object*, %struct._object** %context, align 8, !dbg !6181, !tbaa !2208
  %tobool48 = icmp ne %struct._object* %41, null, !dbg !6182
  br i1 %tobool48, label %if.then.49, label %if.end.59, !dbg !6183

if.then.49:                                       ; preds = %do.body.47
  %42 = bitcast i32* %vret50 to i8*, !dbg !6184
  call void @llvm.lifetime.start(i64 4, i8* %42) #2, !dbg !6184
  call void @llvm.dbg.declare(metadata i32* %vret50, metadata !897, metadata !1979), !dbg !6186
  %43 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6187, !tbaa !1975
  %44 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6188, !tbaa !1975
  %context51 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %44, i32 0, i32 4, !dbg !6189
  %45 = load %struct._object*, %struct._object** %context51, align 8, !dbg !6189, !tbaa !2208
  %46 = load i8*, i8** %arg.addr, align 8, !dbg !6190, !tbaa !1975
  %call52 = call i32 %43(%struct._object* %45, i8* %46), !dbg !6187
  store i32 %call52, i32* %vret50, align 4, !dbg !6186, !tbaa !5355
  %47 = load i32, i32* %vret50, align 4, !dbg !6191, !tbaa !5355
  %tobool53 = icmp ne i32 %47, 0, !dbg !6191
  br i1 %tobool53, label %if.then.54, label %if.end.55, !dbg !6193

if.then.54:                                       ; preds = %if.then.49
  %48 = load i32, i32* %vret50, align 4, !dbg !6194, !tbaa !5355
  store i32 %48, i32* %retval, !dbg !6196
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !6196

if.end.55:                                        ; preds = %if.then.49
  store i32 0, i32* %cleanup.dest.slot, !dbg !6197
  br label %cleanup.56, !dbg !6197

cleanup.56:                                       ; preds = %if.end.55, %if.then.54
  %49 = bitcast i32* %vret50 to i8*, !dbg !6199
  call void @llvm.lifetime.end(i64 4, i8* %49) #2, !dbg !6199
  %cleanup.dest.57 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.11

LeafBlock.11:                                     ; preds = %cleanup.56
  %SwitchLeaf12 = icmp eq i32 %cleanup.dest.57, 1
  br i1 %SwitchLeaf12, label %return, label %NewDefault.10

NewDefault.10:                                    ; preds = %LeafBlock.11
  br label %cleanup.cont.58

cleanup.cont.58:                                  ; preds = %NewDefault.10
  br label %if.end.59, !dbg !6202

if.end.59:                                        ; preds = %cleanup.cont.58, %do.body.47
  br label %do.end.60, !dbg !6203

do.end.60:                                        ; preds = %if.end.59
  store i32 0, i32* %retval, !dbg !6206
  br label %return, !dbg !6206

return:                                           ; preds = %LeafBlock.11, %LeafBlock.8, %LeafBlock.5, %LeafBlock.2, %LeafBlock, %do.end.60
  %50 = load i32, i32* %retval, !dbg !6207
  ret i32 %50, !dbg !6207
}

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_clear(%struct.PyBaseExceptionObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  %_py_tmp69 = alloca %struct._object*, align 8
  %_py_decref_tmp74 = alloca %struct._object*, align 8
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !905, metadata !1979), !dbg !6208
  br label %do.body, !dbg !6209

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6210
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6210
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !906, metadata !1979), !dbg !6212
  %1 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6213, !tbaa !1975
  %dict = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %1, i32 0, i32 1, !dbg !6214
  %2 = load %struct._object*, %struct._object** %dict, align 8, !dbg !6214, !tbaa !5432
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !6212, !tbaa !1975
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6215, !tbaa !1975
  %cmp = icmp ne %struct._object* %3, null, !dbg !6216
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !6217

if.then:                                          ; preds = %do.body
  %4 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6218, !tbaa !1975
  %dict1 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %4, i32 0, i32 1, !dbg !6220
  store %struct._object* null, %struct._object** %dict1, align 8, !dbg !6221, !tbaa !5432
  br label %do.body.2, !dbg !6222

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6223
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !6223
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !908, metadata !1979), !dbg !6225
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6226, !tbaa !1975
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !6225, !tbaa !1975
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6227, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !6229
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !6230, !tbaa !2003
  %dec = add i64 %8, -1, !dbg !6230
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6230, !tbaa !2003
  %cmp3 = icmp ne i64 %dec, 0, !dbg !6231
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !6232

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !6233

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6235, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !6237
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6237, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !6238
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6238, !tbaa !2091
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6239, !tbaa !1975
  call void %11(%struct._object* %12), !dbg !6240
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6241
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !6241
  br label %do.cond, !dbg !6243

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !6244

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !6246

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6248
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !6248
  br label %do.end.7, !dbg !6251

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !6252

do.body.8:                                        ; preds = %do.end.7
  %15 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !6253
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !6253
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !912, metadata !1979), !dbg !6255
  %16 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6256, !tbaa !1975
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %16, i32 0, i32 2, !dbg !6257
  %17 = load %struct._object*, %struct._object** %args, align 8, !dbg !6257, !tbaa !5453
  store %struct._object* %17, %struct._object** %_py_tmp9, align 8, !dbg !6255, !tbaa !1975
  %18 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !6258, !tbaa !1975
  %cmp10 = icmp ne %struct._object* %18, null, !dbg !6259
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !6260

if.then.11:                                       ; preds = %do.body.8
  %19 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6261, !tbaa !1975
  %args12 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %19, i32 0, i32 2, !dbg !6263
  store %struct._object* null, %struct._object** %args12, align 8, !dbg !6264, !tbaa !5453
  br label %do.body.13, !dbg !6265

do.body.13:                                       ; preds = %if.then.11
  %20 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !6266
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !6266
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !914, metadata !1979), !dbg !6268
  %21 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !6269, !tbaa !1975
  store %struct._object* %21, %struct._object** %_py_decref_tmp14, align 8, !dbg !6268, !tbaa !1975
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !6270, !tbaa !1975
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !6272
  %23 = load i64, i64* %ob_refcnt15, align 8, !dbg !6273, !tbaa !2003
  %dec16 = add i64 %23, -1, !dbg !6273
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !6273, !tbaa !2003
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !6274
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !6275

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !6276

if.else.19:                                       ; preds = %do.body.13
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !6278, !tbaa !1975
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !6280
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !6280, !tbaa !2039
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !6281
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !6281, !tbaa !2091
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !6282, !tbaa !1975
  call void %26(%struct._object* %27), !dbg !6283
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %28 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !6284
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !6284
  br label %do.cond.23, !dbg !6286

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !6287

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !6289

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %29 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !6291
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !6291
  br label %do.end.27, !dbg !6292

do.end.27:                                        ; preds = %if.end.25
  br label %do.body.28, !dbg !6293

do.body.28:                                       ; preds = %do.end.27
  %30 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !6294
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !6294
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !918, metadata !1979), !dbg !6296
  %31 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6297, !tbaa !1975
  %traceback = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %31, i32 0, i32 3, !dbg !6298
  %32 = load %struct._object*, %struct._object** %traceback, align 8, !dbg !6298, !tbaa !1991
  store %struct._object* %32, %struct._object** %_py_tmp29, align 8, !dbg !6296, !tbaa !1975
  %33 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !6299, !tbaa !1975
  %cmp30 = icmp ne %struct._object* %33, null, !dbg !6300
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !6301

if.then.31:                                       ; preds = %do.body.28
  %34 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6302, !tbaa !1975
  %traceback32 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %34, i32 0, i32 3, !dbg !6304
  store %struct._object* null, %struct._object** %traceback32, align 8, !dbg !6305, !tbaa !1991
  br label %do.body.33, !dbg !6306

do.body.33:                                       ; preds = %if.then.31
  %35 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !6307
  call void @llvm.lifetime.start(i64 8, i8* %35) #2, !dbg !6307
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !920, metadata !1979), !dbg !6309
  %36 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !6310, !tbaa !1975
  store %struct._object* %36, %struct._object** %_py_decref_tmp34, align 8, !dbg !6309, !tbaa !1975
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !6311, !tbaa !1975
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !6313
  %38 = load i64, i64* %ob_refcnt35, align 8, !dbg !6314, !tbaa !2003
  %dec36 = add i64 %38, -1, !dbg !6314
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !6314, !tbaa !2003
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !6315
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !6316

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !6317

if.else.39:                                       ; preds = %do.body.33
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !6319, !tbaa !1975
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !6321
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !6321, !tbaa !2039
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !6322
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !6322, !tbaa !2091
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !6323, !tbaa !1975
  call void %41(%struct._object* %42), !dbg !6324
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %43 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !6325
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !6325
  br label %do.cond.43, !dbg !6327

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !6328

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !6330

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %44 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !6332
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !6332
  br label %do.end.47, !dbg !6333

do.end.47:                                        ; preds = %if.end.45
  br label %do.body.48, !dbg !6334

do.body.48:                                       ; preds = %do.end.47
  %45 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !6335
  call void @llvm.lifetime.start(i64 8, i8* %45) #2, !dbg !6335
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp49, metadata !924, metadata !1979), !dbg !6337
  %46 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6338, !tbaa !1975
  %cause = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %46, i32 0, i32 5, !dbg !6339
  %47 = load %struct._object*, %struct._object** %cause, align 8, !dbg !6339, !tbaa !2119
  store %struct._object* %47, %struct._object** %_py_tmp49, align 8, !dbg !6337, !tbaa !1975
  %48 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !6340, !tbaa !1975
  %cmp50 = icmp ne %struct._object* %48, null, !dbg !6341
  br i1 %cmp50, label %if.then.51, label %if.end.65, !dbg !6342

if.then.51:                                       ; preds = %do.body.48
  %49 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6343, !tbaa !1975
  %cause52 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %49, i32 0, i32 5, !dbg !6345
  store %struct._object* null, %struct._object** %cause52, align 8, !dbg !6346, !tbaa !2119
  br label %do.body.53, !dbg !6347

do.body.53:                                       ; preds = %if.then.51
  %50 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !6348
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !6348
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp54, metadata !926, metadata !1979), !dbg !6350
  %51 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !6351, !tbaa !1975
  store %struct._object* %51, %struct._object** %_py_decref_tmp54, align 8, !dbg !6350, !tbaa !1975
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6352, !tbaa !1975
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !6354
  %53 = load i64, i64* %ob_refcnt55, align 8, !dbg !6355, !tbaa !2003
  %dec56 = add i64 %53, -1, !dbg !6355
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !6355, !tbaa !2003
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !6356
  br i1 %cmp57, label %if.then.58, label %if.else.59, !dbg !6357

if.then.58:                                       ; preds = %do.body.53
  br label %if.end.62, !dbg !6358

if.else.59:                                       ; preds = %do.body.53
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6360, !tbaa !1975
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !6362
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !6362, !tbaa !2039
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !6363
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !6363, !tbaa !2091
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6364, !tbaa !1975
  call void %56(%struct._object* %57), !dbg !6365
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  %58 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !6366
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !6366
  br label %do.cond.63, !dbg !6368

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !6369

do.end.64:                                        ; preds = %do.cond.63
  br label %if.end.65, !dbg !6371

if.end.65:                                        ; preds = %do.end.64, %do.body.48
  %59 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !6373
  call void @llvm.lifetime.end(i64 8, i8* %59) #2, !dbg !6373
  br label %do.end.67, !dbg !6374

do.end.67:                                        ; preds = %if.end.65
  br label %do.body.68, !dbg !6375

do.body.68:                                       ; preds = %do.end.67
  %60 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !6376
  call void @llvm.lifetime.start(i64 8, i8* %60) #2, !dbg !6376
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp69, metadata !930, metadata !1979), !dbg !6378
  %61 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6379, !tbaa !1975
  %context = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %61, i32 0, i32 4, !dbg !6380
  %62 = load %struct._object*, %struct._object** %context, align 8, !dbg !6380, !tbaa !2208
  store %struct._object* %62, %struct._object** %_py_tmp69, align 8, !dbg !6378, !tbaa !1975
  %63 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !6381, !tbaa !1975
  %cmp70 = icmp ne %struct._object* %63, null, !dbg !6382
  br i1 %cmp70, label %if.then.71, label %if.end.85, !dbg !6383

if.then.71:                                       ; preds = %do.body.68
  %64 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6384, !tbaa !1975
  %context72 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %64, i32 0, i32 4, !dbg !6386
  store %struct._object* null, %struct._object** %context72, align 8, !dbg !6387, !tbaa !2208
  br label %do.body.73, !dbg !6388

do.body.73:                                       ; preds = %if.then.71
  %65 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !6389
  call void @llvm.lifetime.start(i64 8, i8* %65) #2, !dbg !6389
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp74, metadata !932, metadata !1979), !dbg !6391
  %66 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !6392, !tbaa !1975
  store %struct._object* %66, %struct._object** %_py_decref_tmp74, align 8, !dbg !6391, !tbaa !1975
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !6393, !tbaa !1975
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 0, !dbg !6395
  %68 = load i64, i64* %ob_refcnt75, align 8, !dbg !6396, !tbaa !2003
  %dec76 = add i64 %68, -1, !dbg !6396
  store i64 %dec76, i64* %ob_refcnt75, align 8, !dbg !6396, !tbaa !2003
  %cmp77 = icmp ne i64 %dec76, 0, !dbg !6397
  br i1 %cmp77, label %if.then.78, label %if.else.79, !dbg !6398

if.then.78:                                       ; preds = %do.body.73
  br label %if.end.82, !dbg !6399

if.else.79:                                       ; preds = %do.body.73
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !6401, !tbaa !1975
  %ob_type80 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 1, !dbg !6403
  %70 = load %struct._typeobject*, %struct._typeobject** %ob_type80, align 8, !dbg !6403, !tbaa !2039
  %tp_dealloc81 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %70, i32 0, i32 4, !dbg !6404
  %71 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc81, align 8, !dbg !6404, !tbaa !2091
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !6405, !tbaa !1975
  call void %71(%struct._object* %72), !dbg !6406
  br label %if.end.82

if.end.82:                                        ; preds = %if.else.79, %if.then.78
  %73 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !6407
  call void @llvm.lifetime.end(i64 8, i8* %73) #2, !dbg !6407
  br label %do.cond.83, !dbg !6409

do.cond.83:                                       ; preds = %if.end.82
  br label %do.end.84, !dbg !6410

do.end.84:                                        ; preds = %do.cond.83
  br label %if.end.85, !dbg !6412

if.end.85:                                        ; preds = %do.end.84, %do.body.68
  %74 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !6414
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !6414
  br label %do.end.87, !dbg !6415

do.end.87:                                        ; preds = %if.end.85
  ret i32 0, !dbg !6416
}

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #5

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #3

declare %struct._object* @PyObject_Str(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_reduce(%struct.PyBaseExceptionObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !938, metadata !1979), !dbg !6417
  %0 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6418, !tbaa !1975
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %0, i32 0, i32 2, !dbg !6420
  %1 = load %struct._object*, %struct._object** %args, align 8, !dbg !6420, !tbaa !5453
  %tobool = icmp ne %struct._object* %1, null, !dbg !6418
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !6421

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6422, !tbaa !1975
  %dict = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %2, i32 0, i32 1, !dbg !6424
  %3 = load %struct._object*, %struct._object** %dict, align 8, !dbg !6424, !tbaa !5432
  %tobool1 = icmp ne %struct._object* %3, null, !dbg !6425
  br i1 %tobool1, label %if.then, label %if.else, !dbg !6426

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6427, !tbaa !1975
  %5 = bitcast %struct.PyBaseExceptionObject* %4 to %struct._object*, !dbg !6428
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !6429
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6429, !tbaa !2039
  %7 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6430, !tbaa !1975
  %args2 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %7, i32 0, i32 2, !dbg !6431
  %8 = load %struct._object*, %struct._object** %args2, align 8, !dbg !6431, !tbaa !5453
  %9 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6432, !tbaa !1975
  %dict3 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %9, i32 0, i32 1, !dbg !6433
  %10 = load %struct._object*, %struct._object** %dict3, align 8, !dbg !6433, !tbaa !5432
  %call = call %struct._object* (i64, ...) @PyTuple_Pack(i64 3, %struct._typeobject* %6, %struct._object* %8, %struct._object* %10), !dbg !6434
  store %struct._object* %call, %struct._object** %retval, !dbg !6435
  br label %return, !dbg !6435

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6436, !tbaa !1975
  %12 = bitcast %struct.PyBaseExceptionObject* %11 to %struct._object*, !dbg !6437
  %ob_type4 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !6438
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type4, align 8, !dbg !6438, !tbaa !2039
  %14 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6439, !tbaa !1975
  %args5 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %14, i32 0, i32 2, !dbg !6440
  %15 = load %struct._object*, %struct._object** %args5, align 8, !dbg !6440, !tbaa !5453
  %call6 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._typeobject* %13, %struct._object* %15), !dbg !6441
  store %struct._object* %call6, %struct._object** %retval, !dbg !6442
  br label %return, !dbg !6442

return:                                           ; preds = %if.else, %if.then
  %16 = load %struct._object*, %struct._object** %retval, !dbg !6443
  ret %struct._object* %16, !dbg !6443
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_setstate(%struct._object* %self, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %state.addr = alloca %struct._object*, align 8
  %d_key = alloca %struct._object*, align 8
  %d_value = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !941, metadata !1979), !dbg !6444
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !942, metadata !1979), !dbg !6445
  %0 = bitcast %struct._object** %d_key to i8*, !dbg !6446
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6446
  call void @llvm.dbg.declare(metadata %struct._object** %d_key, metadata !943, metadata !1979), !dbg !6447
  %1 = bitcast %struct._object** %d_value to i8*, !dbg !6446
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6446
  call void @llvm.dbg.declare(metadata %struct._object** %d_value, metadata !944, metadata !1979), !dbg !6448
  %2 = bitcast i64* %i to i8*, !dbg !6449
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !6449
  call void @llvm.dbg.declare(metadata i64* %i, metadata !945, metadata !1979), !dbg !6450
  store i64 0, i64* %i, align 8, !dbg !6450, !tbaa !2396
  %3 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !6451, !tbaa !1975
  %cmp = icmp ne %struct._object* %3, @_Py_NoneStruct, !dbg !6453
  br i1 %cmp, label %if.then, label %if.end.7, !dbg !6454

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !6455, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !6458
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6458, !tbaa !2039
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 19, !dbg !6459
  %6 = load i64, i64* %tp_flags, align 8, !dbg !6459, !tbaa !2308
  %and = and i64 %6, 536870912, !dbg !6460
  %cmp1 = icmp ne i64 %and, 0, !dbg !6461
  br i1 %cmp1, label %if.end, label %if.then.2, !dbg !6462

if.then.2:                                        ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6463, !tbaa !1975
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i32 0, i32 0)), !dbg !6465
  store %struct._object* null, %struct._object** %retval, !dbg !6466
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6466

if.end:                                           ; preds = %if.then
  br label %while.cond, !dbg !6467

while.cond:                                       ; preds = %if.end.6, %if.end
  %8 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !6468, !tbaa !1975
  %call = call i32 @PyDict_Next(%struct._object* %8, i64* %i, %struct._object** %d_key, %struct._object** %d_value), !dbg !6471
  %tobool = icmp ne i32 %call, 0, !dbg !6467
  br i1 %tobool, label %while.body, label %while.end, !dbg !6467

while.body:                                       ; preds = %while.cond
  %9 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6472, !tbaa !1975
  %10 = load %struct._object*, %struct._object** %d_key, align 8, !dbg !6475, !tbaa !1975
  %11 = load %struct._object*, %struct._object** %d_value, align 8, !dbg !6476, !tbaa !1975
  %call3 = call i32 @PyObject_SetAttr(%struct._object* %9, %struct._object* %10, %struct._object* %11), !dbg !6477
  %cmp4 = icmp slt i32 %call3, 0, !dbg !6478
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !6479

if.then.5:                                        ; preds = %while.body
  store %struct._object* null, %struct._object** %retval, !dbg !6480
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6480

if.end.6:                                         ; preds = %while.body
  br label %while.cond, !dbg !6467

while.end:                                        ; preds = %while.cond
  br label %if.end.7, !dbg !6481

if.end.7:                                         ; preds = %while.end, %entry
  %12 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6482, !tbaa !2003
  %inc = add i64 %12, 1, !dbg !6482
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6482, !tbaa !2003
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6483
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6483

cleanup:                                          ; preds = %if.end.7, %if.then.5, %if.then.2
  %13 = bitcast i64* %i to i8*, !dbg !6484
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !6484
  %14 = bitcast %struct._object** %d_value to i8*, !dbg !6484
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !6484
  %15 = bitcast %struct._object** %d_key to i8*, !dbg !6484
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !6484
  %16 = load %struct._object*, %struct._object** %retval, !dbg !6484
  ret %struct._object* %16, !dbg !6484
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_with_traceback(%struct._object* %self, %struct._object* %tb) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %tb.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !948, metadata !1979), !dbg !6485
  store %struct._object* %tb, %struct._object** %tb.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %tb.addr, metadata !949, metadata !1979), !dbg !6486
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6487, !tbaa !1975
  %1 = load %struct._object*, %struct._object** %tb.addr, align 8, !dbg !6489, !tbaa !1975
  %call = call i32 @PyException_SetTraceback(%struct._object* %0, %struct._object* %1), !dbg !6490
  %tobool = icmp ne i32 %call, 0, !dbg !6490
  br i1 %tobool, label %if.then, label %if.end, !dbg !6491

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6492
  br label %return, !dbg !6492

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6493, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 0, !dbg !6494
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !6495, !tbaa !2003
  %inc = add i64 %3, 1, !dbg !6495
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6495, !tbaa !2003
  %4 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6496, !tbaa !1975
  store %struct._object* %4, %struct._object** %retval, !dbg !6497
  br label %return, !dbg !6497

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct._object*, %struct._object** %retval, !dbg !6498
  ret %struct._object* %5, !dbg !6498
}

declare i32 @PyDict_Next(%struct._object*, i64*, %struct._object**, %struct._object**) #3

declare i32 @PyObject_SetAttr(%struct._object*, %struct._object*, %struct._object*) #3

declare %struct._object* @PyObject_GenericGetDict(%struct._object*, i8*) #3

declare i32 @PyObject_GenericSetDict(%struct._object*, %struct._object*, i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_get_args(%struct.PyBaseExceptionObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !952, metadata !1979), !dbg !6499
  %0 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6500, !tbaa !1975
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %0, i32 0, i32 2, !dbg !6502
  %1 = load %struct._object*, %struct._object** %args, align 8, !dbg !6502, !tbaa !5453
  %cmp = icmp eq %struct._object* %1, null, !dbg !6503
  br i1 %cmp, label %if.then, label %if.end, !dbg !6504

if.then:                                          ; preds = %entry
  %2 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6505, !tbaa !2003
  %inc = add i64 %2, 1, !dbg !6505
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6505, !tbaa !2003
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6507
  br label %return, !dbg !6507

if.end:                                           ; preds = %entry
  %3 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6508, !tbaa !1975
  %args1 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %3, i32 0, i32 2, !dbg !6509
  %4 = load %struct._object*, %struct._object** %args1, align 8, !dbg !6509, !tbaa !5453
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0, !dbg !6510
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !6511, !tbaa !2003
  %inc2 = add i64 %5, 1, !dbg !6511
  store i64 %inc2, i64* %ob_refcnt, align 8, !dbg !6511, !tbaa !2003
  %6 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6512, !tbaa !1975
  %args3 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %6, i32 0, i32 2, !dbg !6513
  %7 = load %struct._object*, %struct._object** %args3, align 8, !dbg !6513, !tbaa !5453
  store %struct._object* %7, %struct._object** %retval, !dbg !6514
  br label %return, !dbg !6514

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !6515
  ret %struct._object* %8, !dbg !6515
}

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_set_args(%struct.PyBaseExceptionObject* %self, %struct._object* %val) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  %val.addr = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !955, metadata !1979), !dbg !6516
  store %struct._object* %val, %struct._object** %val.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %val.addr, metadata !956, metadata !1979), !dbg !6517
  %0 = bitcast %struct._object** %seq to i8*, !dbg !6518
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6518
  call void @llvm.dbg.declare(metadata %struct._object** %seq, metadata !957, metadata !1979), !dbg !6519
  %1 = load %struct._object*, %struct._object** %val.addr, align 8, !dbg !6520, !tbaa !1975
  %cmp = icmp eq %struct._object* %1, null, !dbg !6522
  br i1 %cmp, label %if.then, label %if.end, !dbg !6523

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6524, !tbaa !1975
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.97, i32 0, i32 0)), !dbg !6526
  store i32 -1, i32* %retval, !dbg !6527
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6527

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %val.addr, align 8, !dbg !6528, !tbaa !1975
  %call = call %struct._object* @PySequence_Tuple(%struct._object* %3), !dbg !6529
  store %struct._object* %call, %struct._object** %seq, align 8, !dbg !6530, !tbaa !1975
  %4 = load %struct._object*, %struct._object** %seq, align 8, !dbg !6531, !tbaa !1975
  %tobool = icmp ne %struct._object* %4, null, !dbg !6531
  br i1 %tobool, label %if.end.2, label %if.then.1, !dbg !6533

if.then.1:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !6534
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6534

if.end.2:                                         ; preds = %if.end
  br label %do.body, !dbg !6535

do.body:                                          ; preds = %if.end.2
  %5 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6536
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !6536
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !958, metadata !1979), !dbg !6538
  %6 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6539, !tbaa !1975
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %6, i32 0, i32 2, !dbg !6540
  %7 = load %struct._object*, %struct._object** %args, align 8, !dbg !6540, !tbaa !5453
  store %struct._object* %7, %struct._object** %_py_tmp, align 8, !dbg !6538, !tbaa !1975
  %8 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6541, !tbaa !1975
  %cmp3 = icmp ne %struct._object* %8, null, !dbg !6542
  br i1 %cmp3, label %if.then.4, label %if.end.10, !dbg !6543

if.then.4:                                        ; preds = %do.body
  %9 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6544, !tbaa !1975
  %args5 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %9, i32 0, i32 2, !dbg !6546
  store %struct._object* null, %struct._object** %args5, align 8, !dbg !6547, !tbaa !5453
  br label %do.body.6, !dbg !6548

do.body.6:                                        ; preds = %if.then.4
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6549
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !6549
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !960, metadata !1979), !dbg !6551
  %11 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6552, !tbaa !1975
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !6551, !tbaa !1975
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6553, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !6555
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !6556, !tbaa !2003
  %dec = add i64 %13, -1, !dbg !6556
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6556, !tbaa !2003
  %cmp7 = icmp ne i64 %dec, 0, !dbg !6557
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !6558

if.then.8:                                        ; preds = %do.body.6
  br label %if.end.9, !dbg !6559

if.else:                                          ; preds = %do.body.6
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6561, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !6563
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6563, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !6564
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6564, !tbaa !2091
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6565, !tbaa !1975
  call void %16(%struct._object* %17), !dbg !6566
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6567
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !6567
  br label %do.cond, !dbg !6569

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !6570

do.end:                                           ; preds = %do.cond
  br label %if.end.10, !dbg !6572

if.end.10:                                        ; preds = %do.end, %do.body
  %19 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6574
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !6574
  br label %do.cond.11, !dbg !6577

do.cond.11:                                       ; preds = %if.end.10
  br label %do.end.12, !dbg !6578

do.end.12:                                        ; preds = %do.cond.11
  %20 = load %struct._object*, %struct._object** %seq, align 8, !dbg !6580, !tbaa !1975
  %21 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6581, !tbaa !1975
  %args13 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %21, i32 0, i32 2, !dbg !6582
  store %struct._object* %20, %struct._object** %args13, align 8, !dbg !6583, !tbaa !5453
  store i32 0, i32* %retval, !dbg !6584
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6584

cleanup:                                          ; preds = %do.end.12, %if.then.1, %if.then
  %22 = bitcast %struct._object** %seq to i8*, !dbg !6585
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !6585
  %23 = load i32, i32* %retval, !dbg !6585
  ret i32 %23, !dbg !6585
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_get_tb(%struct.PyBaseExceptionObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !966, metadata !1979), !dbg !6586
  %0 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6587, !tbaa !1975
  %traceback = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %0, i32 0, i32 3, !dbg !6589
  %1 = load %struct._object*, %struct._object** %traceback, align 8, !dbg !6589, !tbaa !1991
  %cmp = icmp eq %struct._object* %1, null, !dbg !6590
  br i1 %cmp, label %if.then, label %if.end, !dbg !6591

if.then:                                          ; preds = %entry
  %2 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6592, !tbaa !2003
  %inc = add i64 %2, 1, !dbg !6592
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6592, !tbaa !2003
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6594
  br label %return, !dbg !6594

if.end:                                           ; preds = %entry
  %3 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6595, !tbaa !1975
  %traceback1 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %3, i32 0, i32 3, !dbg !6596
  %4 = load %struct._object*, %struct._object** %traceback1, align 8, !dbg !6596, !tbaa !1991
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0, !dbg !6597
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !6598, !tbaa !2003
  %inc2 = add i64 %5, 1, !dbg !6598
  store i64 %inc2, i64* %ob_refcnt, align 8, !dbg !6598, !tbaa !2003
  %6 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !6599, !tbaa !1975
  %traceback3 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %6, i32 0, i32 3, !dbg !6600
  %7 = load %struct._object*, %struct._object** %traceback3, align 8, !dbg !6600, !tbaa !1991
  store %struct._object* %7, %struct._object** %retval, !dbg !6601
  br label %return, !dbg !6601

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !6602
  ret %struct._object* %8, !dbg !6602
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_get_context(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !969, metadata !1979), !dbg !6603
  %0 = bitcast %struct._object** %res to i8*, !dbg !6604
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6604
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !970, metadata !1979), !dbg !6605
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6606, !tbaa !1975
  %call = call %struct._object* @PyException_GetContext(%struct._object* %1), !dbg !6607
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !6605, !tbaa !1975
  %2 = load %struct._object*, %struct._object** %res, align 8, !dbg !6608, !tbaa !1975
  %tobool = icmp ne %struct._object* %2, null, !dbg !6608
  br i1 %tobool, label %if.then, label %if.end, !dbg !6610

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %res, align 8, !dbg !6611, !tbaa !1975
  store %struct._object* %3, %struct._object** %retval, !dbg !6612
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6612

if.end:                                           ; preds = %entry
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6613, !tbaa !2003
  %inc = add i64 %4, 1, !dbg !6613
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6613, !tbaa !2003
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6614
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6614

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast %struct._object** %res to i8*, !dbg !6615
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !6615
  %6 = load %struct._object*, %struct._object** %retval, !dbg !6615
  ret %struct._object* %6, !dbg !6615
}

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_set_context(%struct._object* %self, %struct._object* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %arg.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !973, metadata !1979), !dbg !6616
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !974, metadata !1979), !dbg !6617
  %0 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !6618, !tbaa !1975
  %cmp = icmp eq %struct._object* %0, null, !dbg !6620
  br i1 %cmp, label %if.then, label %if.else, !dbg !6621

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6622, !tbaa !1975
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.98, i32 0, i32 0)), !dbg !6624
  store i32 -1, i32* %retval, !dbg !6625
  br label %return, !dbg !6625

if.else:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !6626, !tbaa !1975
  %cmp1 = icmp eq %struct._object* %2, @_Py_NoneStruct, !dbg !6628
  br i1 %cmp1, label %if.then.2, label %if.else.3, !dbg !6629

if.then.2:                                        ; preds = %if.else
  store %struct._object* null, %struct._object** %arg.addr, align 8, !dbg !6630, !tbaa !1975
  br label %if.end.7, !dbg !6632

if.else.3:                                        ; preds = %if.else
  %3 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !6633, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !6635
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6635, !tbaa !2039
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19, !dbg !6636
  %5 = load i64, i64* %tp_flags, align 8, !dbg !6636, !tbaa !2308
  %and = and i64 %5, 1073741824, !dbg !6637
  %cmp4 = icmp ne i64 %and, 0, !dbg !6638
  br i1 %cmp4, label %if.else.6, label %if.then.5, !dbg !6639

if.then.5:                                        ; preds = %if.else.3
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6640, !tbaa !1975
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.99, i32 0, i32 0)), !dbg !6642
  store i32 -1, i32* %retval, !dbg !6643
  br label %return, !dbg !6643

if.else.6:                                        ; preds = %if.else.3
  %7 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !6644, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !6646
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !6647, !tbaa !2003
  %inc = add i64 %8, 1, !dbg !6647
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6647, !tbaa !2003
  br label %if.end

if.end:                                           ; preds = %if.else.6
  br label %if.end.7

if.end.7:                                         ; preds = %if.end, %if.then.2
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7
  %9 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6648, !tbaa !1975
  %10 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !6649, !tbaa !1975
  call void @PyException_SetContext(%struct._object* %9, %struct._object* %10), !dbg !6650
  store i32 0, i32* %retval, !dbg !6651
  br label %return, !dbg !6651

return:                                           ; preds = %if.end.8, %if.then.5, %if.then
  %11 = load i32, i32* %retval, !dbg !6652
  ret i32 %11, !dbg !6652
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @BaseException_get_cause(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !977, metadata !1979), !dbg !6653
  %0 = bitcast %struct._object** %res to i8*, !dbg !6654
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6654
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !978, metadata !1979), !dbg !6655
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6656, !tbaa !1975
  %call = call %struct._object* @PyException_GetCause(%struct._object* %1), !dbg !6657
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !6655, !tbaa !1975
  %2 = load %struct._object*, %struct._object** %res, align 8, !dbg !6658, !tbaa !1975
  %tobool = icmp ne %struct._object* %2, null, !dbg !6658
  br i1 %tobool, label %if.then, label %if.end, !dbg !6660

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %res, align 8, !dbg !6661, !tbaa !1975
  store %struct._object* %3, %struct._object** %retval, !dbg !6662
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6662

if.end:                                           ; preds = %entry
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6663, !tbaa !2003
  %inc = add i64 %4, 1, !dbg !6663
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6663, !tbaa !2003
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6664
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6664

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast %struct._object** %res to i8*, !dbg !6665
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !6665
  %6 = load %struct._object*, %struct._object** %retval, !dbg !6665
  ret %struct._object* %6, !dbg !6665
}

; Function Attrs: nounwind uwtable
define internal i32 @BaseException_set_cause(%struct._object* %self, %struct._object* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %arg.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !981, metadata !1979), !dbg !6666
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !982, metadata !1979), !dbg !6667
  %0 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !6668, !tbaa !1975
  %cmp = icmp eq %struct._object* %0, null, !dbg !6670
  br i1 %cmp, label %if.then, label %if.else, !dbg !6671

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6672, !tbaa !1975
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.100, i32 0, i32 0)), !dbg !6674
  store i32 -1, i32* %retval, !dbg !6675
  br label %return, !dbg !6675

if.else:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !6676, !tbaa !1975
  %cmp1 = icmp eq %struct._object* %2, @_Py_NoneStruct, !dbg !6678
  br i1 %cmp1, label %if.then.2, label %if.else.3, !dbg !6679

if.then.2:                                        ; preds = %if.else
  store %struct._object* null, %struct._object** %arg.addr, align 8, !dbg !6680, !tbaa !1975
  br label %if.end.7, !dbg !6682

if.else.3:                                        ; preds = %if.else
  %3 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !6683, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !6685
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6685, !tbaa !2039
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19, !dbg !6686
  %5 = load i64, i64* %tp_flags, align 8, !dbg !6686, !tbaa !2308
  %and = and i64 %5, 1073741824, !dbg !6687
  %cmp4 = icmp ne i64 %and, 0, !dbg !6688
  br i1 %cmp4, label %if.else.6, label %if.then.5, !dbg !6689

if.then.5:                                        ; preds = %if.else.3
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6690, !tbaa !1975
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0)), !dbg !6692
  store i32 -1, i32* %retval, !dbg !6693
  br label %return, !dbg !6693

if.else.6:                                        ; preds = %if.else.3
  %7 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !6694, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !6696
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !6697, !tbaa !2003
  %inc = add i64 %8, 1, !dbg !6697
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6697, !tbaa !2003
  br label %if.end

if.end:                                           ; preds = %if.else.6
  br label %if.end.7

if.end.7:                                         ; preds = %if.end, %if.then.2
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7
  %9 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !6698, !tbaa !1975
  %10 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !6699, !tbaa !1975
  call void @PyException_SetCause(%struct._object* %9, %struct._object* %10), !dbg !6700
  store i32 0, i32* %retval, !dbg !6701
  br label %return, !dbg !6701

return:                                           ; preds = %if.end.8, %if.then.5, %if.then
  %11 = load i32, i32* %retval, !dbg !6702
  ret i32 %11, !dbg !6702
}

declare %struct._object* @PySequence_Tuple(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @StopIteration_dealloc(%struct.PyStopIterationObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyStopIterationObject*, align 8
  %g = alloca %union._gc_head*, align 8
  store %struct.PyStopIterationObject* %self, %struct.PyStopIterationObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyStopIterationObject** %self.addr, metadata !999, metadata !1979), !dbg !6703
  br label %do.body, !dbg !6704

do.body:                                          ; preds = %entry
  %0 = bitcast %union._gc_head** %g to i8*, !dbg !6705
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6705
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !1000, metadata !1979), !dbg !6707
  %1 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6708, !tbaa !1975
  %2 = bitcast %struct.PyStopIterationObject* %1 to %union._gc_head*, !dbg !6709
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %2, i64 -1, !dbg !6710
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !6707, !tbaa !1975
  br label %do.body.1, !dbg !6711

do.body.1:                                        ; preds = %do.body
  %3 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6712, !tbaa !1975
  %gc = bitcast %union._gc_head* %3 to %struct.anon.0*, !dbg !6715
  %gc_refs = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc, i32 0, i32 2, !dbg !6716
  %4 = load i64, i64* %gc_refs, align 8, !dbg !6716, !tbaa !5967
  %and = and i64 %4, 1, !dbg !6717
  %or = or i64 %and, -4, !dbg !6718
  %5 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6719, !tbaa !1975
  %gc2 = bitcast %union._gc_head* %5 to %struct.anon.0*, !dbg !6720
  %gc_refs3 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc2, i32 0, i32 2, !dbg !6721
  store i64 %or, i64* %gc_refs3, align 8, !dbg !6722, !tbaa !5967
  br label %do.cond, !dbg !6723

do.cond:                                          ; preds = %do.body.1
  br label %do.end, !dbg !6724

do.end:                                           ; preds = %do.cond
  %6 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6726, !tbaa !1975
  %gc4 = bitcast %union._gc_head* %6 to %struct.anon.0*, !dbg !6728
  %gc_next = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc4, i32 0, i32 0, !dbg !6729
  %7 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !6729, !tbaa !5982
  %8 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6730, !tbaa !1975
  %gc5 = bitcast %union._gc_head* %8 to %struct.anon.0*, !dbg !6731
  %gc_prev = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc5, i32 0, i32 1, !dbg !6732
  %9 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !6732, !tbaa !5986
  %gc6 = bitcast %union._gc_head* %9 to %struct.anon.0*, !dbg !6733
  %gc_next7 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc6, i32 0, i32 0, !dbg !6734
  store %union._gc_head* %7, %union._gc_head** %gc_next7, align 8, !dbg !6735, !tbaa !5982
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6736, !tbaa !1975
  %gc8 = bitcast %union._gc_head* %10 to %struct.anon.0*, !dbg !6737
  %gc_prev9 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc8, i32 0, i32 1, !dbg !6738
  %11 = load %union._gc_head*, %union._gc_head** %gc_prev9, align 8, !dbg !6738, !tbaa !5986
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6739, !tbaa !1975
  %gc10 = bitcast %union._gc_head* %12 to %struct.anon.0*, !dbg !6740
  %gc_next11 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc10, i32 0, i32 0, !dbg !6741
  %13 = load %union._gc_head*, %union._gc_head** %gc_next11, align 8, !dbg !6741, !tbaa !5982
  %gc12 = bitcast %union._gc_head* %13 to %struct.anon.0*, !dbg !6742
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc12, i32 0, i32 1, !dbg !6743
  store %union._gc_head* %11, %union._gc_head** %gc_prev13, align 8, !dbg !6744, !tbaa !5986
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6745, !tbaa !1975
  %gc14 = bitcast %union._gc_head* %14 to %struct.anon.0*, !dbg !6746
  %gc_next15 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc14, i32 0, i32 0, !dbg !6747
  store %union._gc_head* null, %union._gc_head** %gc_next15, align 8, !dbg !6748, !tbaa !5982
  %15 = bitcast %union._gc_head** %g to i8*, !dbg !6749
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !6749
  br label %do.end.17, !dbg !6750

do.end.17:                                        ; preds = %do.end
  %16 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6751, !tbaa !1975
  %call = call i32 @StopIteration_clear(%struct.PyStopIterationObject* %16), !dbg !6752
  %17 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6753, !tbaa !1975
  %18 = bitcast %struct.PyStopIterationObject* %17 to %struct._object*, !dbg !6754
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !6755
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6755, !tbaa !2039
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 38, !dbg !6756
  %20 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6756, !tbaa !5662
  %21 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6757, !tbaa !1975
  %22 = bitcast %struct.PyStopIterationObject* %21 to %struct._object*, !dbg !6758
  %23 = bitcast %struct._object* %22 to i8*, !dbg !6758
  call void %20(i8* %23), !dbg !6759
  ret void, !dbg !6760
}

; Function Attrs: nounwind uwtable
define internal i32 @StopIteration_traverse(%struct.PyStopIterationObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyStopIterationObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.PyStopIterationObject* %self, %struct.PyStopIterationObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyStopIterationObject** %self.addr, metadata !1006, metadata !1979), !dbg !6761
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1007, metadata !1979), !dbg !6762
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1008, metadata !1979), !dbg !6763
  br label %do.body, !dbg !6764

do.body:                                          ; preds = %entry
  %0 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6765, !tbaa !1975
  %value = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %0, i32 0, i32 7, !dbg !6767
  %1 = load %struct._object*, %struct._object** %value, align 8, !dbg !6767, !tbaa !6768
  %tobool = icmp ne %struct._object* %1, null, !dbg !6770
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !6771

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !6772
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !6772
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1009, metadata !1979), !dbg !6774
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6775, !tbaa !1975
  %4 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6776, !tbaa !1975
  %value1 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %4, i32 0, i32 7, !dbg !6777
  %5 = load %struct._object*, %struct._object** %value1, align 8, !dbg !6777, !tbaa !6768
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !6778, !tbaa !1975
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !6775
  store i32 %call, i32* %vret, align 4, !dbg !6774, !tbaa !5355
  %7 = load i32, i32* %vret, align 4, !dbg !6779, !tbaa !5355
  %tobool2 = icmp ne i32 %7, 0, !dbg !6779
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !6781

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !6782, !tbaa !5355
  store i32 %8, i32* %retval, !dbg !6784
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6784

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !6785
  br label %cleanup, !dbg !6785

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !6787
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !6787
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !6790

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !6791

do.end:                                           ; preds = %if.end.4
  %10 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6794, !tbaa !1975
  %11 = bitcast %struct.PyStopIterationObject* %10 to %struct.PyBaseExceptionObject*, !dbg !6795
  %12 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6796, !tbaa !1975
  %13 = load i8*, i8** %arg.addr, align 8, !dbg !6797, !tbaa !1975
  %call5 = call i32 @BaseException_traverse(%struct.PyBaseExceptionObject* %11, i32 (%struct._object*, i8*)* %12, i8* %13), !dbg !6798
  store i32 %call5, i32* %retval, !dbg !6799
  br label %return, !dbg !6799

return:                                           ; preds = %LeafBlock, %do.end
  %14 = load i32, i32* %retval, !dbg !6800
  ret i32 %14, !dbg !6800
}

; Function Attrs: nounwind uwtable
define internal i32 @StopIteration_clear(%struct.PyStopIterationObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyStopIterationObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyStopIterationObject* %self, %struct.PyStopIterationObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyStopIterationObject** %self.addr, metadata !1017, metadata !1979), !dbg !6801
  br label %do.body, !dbg !6802

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6803
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6803
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1018, metadata !1979), !dbg !6805
  %1 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6806, !tbaa !1975
  %value = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %1, i32 0, i32 7, !dbg !6807
  %2 = load %struct._object*, %struct._object** %value, align 8, !dbg !6807, !tbaa !6768
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !6805, !tbaa !1975
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6808, !tbaa !1975
  %cmp = icmp ne %struct._object* %3, null, !dbg !6809
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !6810

if.then:                                          ; preds = %do.body
  %4 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6811, !tbaa !1975
  %value1 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %4, i32 0, i32 7, !dbg !6813
  store %struct._object* null, %struct._object** %value1, align 8, !dbg !6814, !tbaa !6768
  br label %do.body.2, !dbg !6815

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6816
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !6816
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1020, metadata !1979), !dbg !6818
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6819, !tbaa !1975
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !6818, !tbaa !1975
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6820, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !6822
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !6823, !tbaa !2003
  %dec = add i64 %8, -1, !dbg !6823
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6823, !tbaa !2003
  %cmp3 = icmp ne i64 %dec, 0, !dbg !6824
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !6825

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !6826

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6828, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !6830
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6830, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !6831
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6831, !tbaa !2091
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6832, !tbaa !1975
  call void %11(%struct._object* %12), !dbg !6833
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6834
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !6834
  br label %do.cond, !dbg !6836

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !6837

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !6839

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6841
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !6841
  br label %do.end.7, !dbg !6844

do.end.7:                                         ; preds = %if.end.5
  %15 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6845, !tbaa !1975
  %16 = bitcast %struct.PyStopIterationObject* %15 to %struct.PyBaseExceptionObject*, !dbg !6846
  %call = call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %16), !dbg !6847
  ret i32 %call, !dbg !6848
}

; Function Attrs: nounwind uwtable
define internal i32 @StopIteration_init(%struct.PyStopIterationObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyStopIterationObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %size = alloca i64, align 8
  %value = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyStopIterationObject* %self, %struct.PyStopIterationObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyStopIterationObject** %self.addr, metadata !1028, metadata !1979), !dbg !6849
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1029, metadata !1979), !dbg !6850
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1030, metadata !1979), !dbg !6851
  %0 = bitcast i64* %size to i8*, !dbg !6852
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6852
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1031, metadata !1979), !dbg !6853
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6854, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyVarObject*, !dbg !6855
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %2, i32 0, i32 1, !dbg !6856
  %3 = load i64, i64* %ob_size, align 8, !dbg !6856, !tbaa !2466
  store i64 %3, i64* %size, align 8, !dbg !6853, !tbaa !2396
  %4 = bitcast %struct._object** %value to i8*, !dbg !6857
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !6857
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !1032, metadata !1979), !dbg !6858
  %5 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6859, !tbaa !1975
  %6 = bitcast %struct.PyStopIterationObject* %5 to %struct.PyBaseExceptionObject*, !dbg !6861
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6862, !tbaa !1975
  %8 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !6863, !tbaa !1975
  %call = call i32 @BaseException_init(%struct.PyBaseExceptionObject* %6, %struct._object* %7, %struct._object* %8), !dbg !6864
  %cmp = icmp eq i32 %call, -1, !dbg !6865
  br i1 %cmp, label %if.then, label %if.end, !dbg !6866

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !6867
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6867

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !6868

do.body:                                          ; preds = %if.end
  %9 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6869
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !6869
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1033, metadata !1979), !dbg !6871
  %10 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6872, !tbaa !1975
  %value1 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %10, i32 0, i32 7, !dbg !6873
  %11 = load %struct._object*, %struct._object** %value1, align 8, !dbg !6873, !tbaa !6768
  store %struct._object* %11, %struct._object** %_py_tmp, align 8, !dbg !6871, !tbaa !1975
  %12 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6874, !tbaa !1975
  %cmp2 = icmp ne %struct._object* %12, null, !dbg !6875
  br i1 %cmp2, label %if.then.3, label %if.end.9, !dbg !6876

if.then.3:                                        ; preds = %do.body
  %13 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6877, !tbaa !1975
  %value4 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %13, i32 0, i32 7, !dbg !6879
  store %struct._object* null, %struct._object** %value4, align 8, !dbg !6880, !tbaa !6768
  br label %do.body.5, !dbg !6881

do.body.5:                                        ; preds = %if.then.3
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6882
  call void @llvm.lifetime.start(i64 8, i8* %14) #2, !dbg !6882
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1035, metadata !1979), !dbg !6884
  %15 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6885, !tbaa !1975
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !6884, !tbaa !1975
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6886, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !6888
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !6889, !tbaa !2003
  %dec = add i64 %17, -1, !dbg !6889
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6889, !tbaa !2003
  %cmp6 = icmp ne i64 %dec, 0, !dbg !6890
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !6891

if.then.7:                                        ; preds = %do.body.5
  br label %if.end.8, !dbg !6892

if.else:                                          ; preds = %do.body.5
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6894, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !6896
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6896, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !6897
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6897, !tbaa !2091
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6898, !tbaa !1975
  call void %20(%struct._object* %21), !dbg !6899
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6900
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !6900
  br label %do.cond, !dbg !6902

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !6903

do.end:                                           ; preds = %do.cond
  br label %if.end.9, !dbg !6905

if.end.9:                                         ; preds = %do.end, %do.body
  %23 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6907
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !6907
  br label %do.cond.10, !dbg !6910

do.cond.10:                                       ; preds = %if.end.9
  br label %do.end.11, !dbg !6911

do.end.11:                                        ; preds = %do.cond.10
  %24 = load i64, i64* %size, align 8, !dbg !6913, !tbaa !2396
  %cmp12 = icmp sgt i64 %24, 0, !dbg !6915
  br i1 %cmp12, label %if.then.13, label %if.else.14, !dbg !6916

if.then.13:                                       ; preds = %do.end.11
  %25 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6917, !tbaa !1975
  %26 = bitcast %struct._object* %25 to %struct.PyTupleObject*, !dbg !6918
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %26, i32 0, i32 1, !dbg !6919
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !6920
  %27 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !6920, !tbaa !1975
  store %struct._object* %27, %struct._object** %value, align 8, !dbg !6921, !tbaa !1975
  br label %if.end.15, !dbg !6922

if.else.14:                                       ; preds = %do.end.11
  store %struct._object* @_Py_NoneStruct, %struct._object** %value, align 8, !dbg !6923, !tbaa !1975
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.14, %if.then.13
  %28 = load %struct._object*, %struct._object** %value, align 8, !dbg !6924, !tbaa !1975
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !6925
  %29 = load i64, i64* %ob_refcnt16, align 8, !dbg !6926, !tbaa !2003
  %inc = add i64 %29, 1, !dbg !6926
  store i64 %inc, i64* %ob_refcnt16, align 8, !dbg !6926, !tbaa !2003
  %30 = load %struct._object*, %struct._object** %value, align 8, !dbg !6927, !tbaa !1975
  %31 = load %struct.PyStopIterationObject*, %struct.PyStopIterationObject** %self.addr, align 8, !dbg !6928, !tbaa !1975
  %value17 = getelementptr inbounds %struct.PyStopIterationObject, %struct.PyStopIterationObject* %31, i32 0, i32 7, !dbg !6929
  store %struct._object* %30, %struct._object** %value17, align 8, !dbg !6930, !tbaa !6768
  store i32 0, i32* %retval, !dbg !6931
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6931

cleanup:                                          ; preds = %if.end.15, %if.then
  %32 = bitcast %struct._object** %value to i8*, !dbg !6932
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !6932
  %33 = bitcast i64* %size to i8*, !dbg !6932
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !6932
  %34 = load i32, i32* %retval, !dbg !6932
  ret i32 %34, !dbg !6932
}

; Function Attrs: nounwind uwtable
define internal void @SystemExit_dealloc(%struct.PySystemExitObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PySystemExitObject*, align 8
  %g = alloca %union._gc_head*, align 8
  store %struct.PySystemExitObject* %self, %struct.PySystemExitObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PySystemExitObject** %self.addr, metadata !1055, metadata !1979), !dbg !6933
  br label %do.body, !dbg !6934

do.body:                                          ; preds = %entry
  %0 = bitcast %union._gc_head** %g to i8*, !dbg !6935
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6935
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !1056, metadata !1979), !dbg !6937
  %1 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !6938, !tbaa !1975
  %2 = bitcast %struct.PySystemExitObject* %1 to %union._gc_head*, !dbg !6939
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %2, i64 -1, !dbg !6940
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !6937, !tbaa !1975
  br label %do.body.1, !dbg !6941

do.body.1:                                        ; preds = %do.body
  %3 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6942, !tbaa !1975
  %gc = bitcast %union._gc_head* %3 to %struct.anon.0*, !dbg !6945
  %gc_refs = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc, i32 0, i32 2, !dbg !6946
  %4 = load i64, i64* %gc_refs, align 8, !dbg !6946, !tbaa !5967
  %and = and i64 %4, 1, !dbg !6947
  %or = or i64 %and, -4, !dbg !6948
  %5 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6949, !tbaa !1975
  %gc2 = bitcast %union._gc_head* %5 to %struct.anon.0*, !dbg !6950
  %gc_refs3 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc2, i32 0, i32 2, !dbg !6951
  store i64 %or, i64* %gc_refs3, align 8, !dbg !6952, !tbaa !5967
  br label %do.cond, !dbg !6953

do.cond:                                          ; preds = %do.body.1
  br label %do.end, !dbg !6954

do.end:                                           ; preds = %do.cond
  %6 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6956, !tbaa !1975
  %gc4 = bitcast %union._gc_head* %6 to %struct.anon.0*, !dbg !6958
  %gc_next = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc4, i32 0, i32 0, !dbg !6959
  %7 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !6959, !tbaa !5982
  %8 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6960, !tbaa !1975
  %gc5 = bitcast %union._gc_head* %8 to %struct.anon.0*, !dbg !6961
  %gc_prev = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc5, i32 0, i32 1, !dbg !6962
  %9 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !6962, !tbaa !5986
  %gc6 = bitcast %union._gc_head* %9 to %struct.anon.0*, !dbg !6963
  %gc_next7 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc6, i32 0, i32 0, !dbg !6964
  store %union._gc_head* %7, %union._gc_head** %gc_next7, align 8, !dbg !6965, !tbaa !5982
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6966, !tbaa !1975
  %gc8 = bitcast %union._gc_head* %10 to %struct.anon.0*, !dbg !6967
  %gc_prev9 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc8, i32 0, i32 1, !dbg !6968
  %11 = load %union._gc_head*, %union._gc_head** %gc_prev9, align 8, !dbg !6968, !tbaa !5986
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6969, !tbaa !1975
  %gc10 = bitcast %union._gc_head* %12 to %struct.anon.0*, !dbg !6970
  %gc_next11 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc10, i32 0, i32 0, !dbg !6971
  %13 = load %union._gc_head*, %union._gc_head** %gc_next11, align 8, !dbg !6971, !tbaa !5982
  %gc12 = bitcast %union._gc_head* %13 to %struct.anon.0*, !dbg !6972
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc12, i32 0, i32 1, !dbg !6973
  store %union._gc_head* %11, %union._gc_head** %gc_prev13, align 8, !dbg !6974, !tbaa !5986
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !6975, !tbaa !1975
  %gc14 = bitcast %union._gc_head* %14 to %struct.anon.0*, !dbg !6976
  %gc_next15 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc14, i32 0, i32 0, !dbg !6977
  store %union._gc_head* null, %union._gc_head** %gc_next15, align 8, !dbg !6978, !tbaa !5982
  %15 = bitcast %union._gc_head** %g to i8*, !dbg !6979
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !6979
  br label %do.end.17, !dbg !6980

do.end.17:                                        ; preds = %do.end
  %16 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !6981, !tbaa !1975
  %call = call i32 @SystemExit_clear(%struct.PySystemExitObject* %16), !dbg !6982
  %17 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !6983, !tbaa !1975
  %18 = bitcast %struct.PySystemExitObject* %17 to %struct._object*, !dbg !6984
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !6985
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6985, !tbaa !2039
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 38, !dbg !6986
  %20 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6986, !tbaa !5662
  %21 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !6987, !tbaa !1975
  %22 = bitcast %struct.PySystemExitObject* %21 to %struct._object*, !dbg !6988
  %23 = bitcast %struct._object* %22 to i8*, !dbg !6988
  call void %20(i8* %23), !dbg !6989
  ret void, !dbg !6990
}

; Function Attrs: nounwind uwtable
define internal i32 @SystemExit_traverse(%struct.PySystemExitObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PySystemExitObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.PySystemExitObject* %self, %struct.PySystemExitObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PySystemExitObject** %self.addr, metadata !1062, metadata !1979), !dbg !6991
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1063, metadata !1979), !dbg !6992
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1064, metadata !1979), !dbg !6993
  br label %do.body, !dbg !6994

do.body:                                          ; preds = %entry
  %0 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !6995, !tbaa !1975
  %code = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %0, i32 0, i32 7, !dbg !6997
  %1 = load %struct._object*, %struct._object** %code, align 8, !dbg !6997, !tbaa !6768
  %tobool = icmp ne %struct._object* %1, null, !dbg !6998
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !6999

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !7000
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !7000
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1065, metadata !1979), !dbg !7002
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7003, !tbaa !1975
  %4 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !7004, !tbaa !1975
  %code1 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %4, i32 0, i32 7, !dbg !7005
  %5 = load %struct._object*, %struct._object** %code1, align 8, !dbg !7005, !tbaa !6768
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !7006, !tbaa !1975
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !7003
  store i32 %call, i32* %vret, align 4, !dbg !7002, !tbaa !5355
  %7 = load i32, i32* %vret, align 4, !dbg !7007, !tbaa !5355
  %tobool2 = icmp ne i32 %7, 0, !dbg !7007
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !7009

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !7010, !tbaa !5355
  store i32 %8, i32* %retval, !dbg !7012
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7012

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !7013
  br label %cleanup, !dbg !7013

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !7015
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !7015
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !7018

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !7019

do.end:                                           ; preds = %if.end.4
  %10 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !7022, !tbaa !1975
  %11 = bitcast %struct.PySystemExitObject* %10 to %struct.PyBaseExceptionObject*, !dbg !7023
  %12 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7024, !tbaa !1975
  %13 = load i8*, i8** %arg.addr, align 8, !dbg !7025, !tbaa !1975
  %call5 = call i32 @BaseException_traverse(%struct.PyBaseExceptionObject* %11, i32 (%struct._object*, i8*)* %12, i8* %13), !dbg !7026
  store i32 %call5, i32* %retval, !dbg !7027
  br label %return, !dbg !7027

return:                                           ; preds = %LeafBlock, %do.end
  %14 = load i32, i32* %retval, !dbg !7028
  ret i32 %14, !dbg !7028
}

; Function Attrs: nounwind uwtable
define internal i32 @SystemExit_clear(%struct.PySystemExitObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PySystemExitObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PySystemExitObject* %self, %struct.PySystemExitObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PySystemExitObject** %self.addr, metadata !1073, metadata !1979), !dbg !7029
  br label %do.body, !dbg !7030

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7031
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7031
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1074, metadata !1979), !dbg !7033
  %1 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !7034, !tbaa !1975
  %code = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %1, i32 0, i32 7, !dbg !7035
  %2 = load %struct._object*, %struct._object** %code, align 8, !dbg !7035, !tbaa !6768
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !7033, !tbaa !1975
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7036, !tbaa !1975
  %cmp = icmp ne %struct._object* %3, null, !dbg !7037
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !7038

if.then:                                          ; preds = %do.body
  %4 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !7039, !tbaa !1975
  %code1 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %4, i32 0, i32 7, !dbg !7041
  store %struct._object* null, %struct._object** %code1, align 8, !dbg !7042, !tbaa !6768
  br label %do.body.2, !dbg !7043

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7044
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !7044
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1076, metadata !1979), !dbg !7046
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7047, !tbaa !1975
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !7046, !tbaa !1975
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7048, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !7050
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !7051, !tbaa !2003
  %dec = add i64 %8, -1, !dbg !7051
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7051, !tbaa !2003
  %cmp3 = icmp ne i64 %dec, 0, !dbg !7052
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !7053

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !7054

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7056, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !7058
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7058, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !7059
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7059, !tbaa !2091
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7060, !tbaa !1975
  call void %11(%struct._object* %12), !dbg !7061
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7062
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !7062
  br label %do.cond, !dbg !7064

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7065

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !7067

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7069
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !7069
  br label %do.end.7, !dbg !7072

do.end.7:                                         ; preds = %if.end.5
  %15 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !7073, !tbaa !1975
  %16 = bitcast %struct.PySystemExitObject* %15 to %struct.PyBaseExceptionObject*, !dbg !7074
  %call = call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %16), !dbg !7075
  ret i32 %call, !dbg !7076
}

; Function Attrs: nounwind uwtable
define internal i32 @SystemExit_init(%struct.PySystemExitObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PySystemExitObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PySystemExitObject* %self, %struct.PySystemExitObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PySystemExitObject** %self.addr, metadata !1084, metadata !1979), !dbg !7077
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1085, metadata !1979), !dbg !7078
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1086, metadata !1979), !dbg !7079
  %0 = bitcast i64* %size to i8*, !dbg !7080
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7080
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1087, metadata !1979), !dbg !7081
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7082, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyVarObject*, !dbg !7083
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %2, i32 0, i32 1, !dbg !7084
  %3 = load i64, i64* %ob_size, align 8, !dbg !7084, !tbaa !2466
  store i64 %3, i64* %size, align 8, !dbg !7081, !tbaa !2396
  %4 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !7085, !tbaa !1975
  %5 = bitcast %struct.PySystemExitObject* %4 to %struct.PyBaseExceptionObject*, !dbg !7087
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7088, !tbaa !1975
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7089, !tbaa !1975
  %call = call i32 @BaseException_init(%struct.PyBaseExceptionObject* %5, %struct._object* %6, %struct._object* %7), !dbg !7090
  %cmp = icmp eq i32 %call, -1, !dbg !7091
  br i1 %cmp, label %if.then, label %if.end, !dbg !7092

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !7093
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7093

if.end:                                           ; preds = %entry
  %8 = load i64, i64* %size, align 8, !dbg !7094, !tbaa !2396
  %cmp1 = icmp eq i64 %8, 0, !dbg !7096
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !7097

if.then.2:                                        ; preds = %if.end
  store i32 0, i32* %retval, !dbg !7098
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7098

if.end.3:                                         ; preds = %if.end
  br label %do.body, !dbg !7099

do.body:                                          ; preds = %if.end.3
  %9 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7100
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !7100
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1088, metadata !1979), !dbg !7102
  %10 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !7103, !tbaa !1975
  %code = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %10, i32 0, i32 7, !dbg !7104
  %11 = load %struct._object*, %struct._object** %code, align 8, !dbg !7104, !tbaa !6768
  store %struct._object* %11, %struct._object** %_py_tmp, align 8, !dbg !7102, !tbaa !1975
  %12 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7105, !tbaa !1975
  %cmp4 = icmp ne %struct._object* %12, null, !dbg !7106
  br i1 %cmp4, label %if.then.5, label %if.end.11, !dbg !7107

if.then.5:                                        ; preds = %do.body
  %13 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !7108, !tbaa !1975
  %code6 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %13, i32 0, i32 7, !dbg !7110
  store %struct._object* null, %struct._object** %code6, align 8, !dbg !7111, !tbaa !6768
  br label %do.body.7, !dbg !7112

do.body.7:                                        ; preds = %if.then.5
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7113
  call void @llvm.lifetime.start(i64 8, i8* %14) #2, !dbg !7113
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1090, metadata !1979), !dbg !7115
  %15 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7116, !tbaa !1975
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !7115, !tbaa !1975
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7117, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !7119
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !7120, !tbaa !2003
  %dec = add i64 %17, -1, !dbg !7120
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7120, !tbaa !2003
  %cmp8 = icmp ne i64 %dec, 0, !dbg !7121
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !7122

if.then.9:                                        ; preds = %do.body.7
  br label %if.end.10, !dbg !7123

if.else:                                          ; preds = %do.body.7
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7125, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !7127
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7127, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !7128
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7128, !tbaa !2091
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7129, !tbaa !1975
  call void %20(%struct._object* %21), !dbg !7130
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.9
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7131
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !7131
  br label %do.cond, !dbg !7133

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !7134

do.end:                                           ; preds = %do.cond
  br label %if.end.11, !dbg !7136

if.end.11:                                        ; preds = %do.end, %do.body
  %23 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7138
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !7138
  br label %do.cond.12, !dbg !7141

do.cond.12:                                       ; preds = %if.end.11
  br label %do.end.13, !dbg !7142

do.end.13:                                        ; preds = %do.cond.12
  %24 = load i64, i64* %size, align 8, !dbg !7144, !tbaa !2396
  %cmp14 = icmp eq i64 %24, 1, !dbg !7146
  br i1 %cmp14, label %if.then.15, label %if.else.17, !dbg !7147

if.then.15:                                       ; preds = %do.end.13
  %25 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7148, !tbaa !1975
  %26 = bitcast %struct._object* %25 to %struct.PyTupleObject*, !dbg !7149
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %26, i32 0, i32 1, !dbg !7150
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !7151
  %27 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7151, !tbaa !1975
  %28 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !7152, !tbaa !1975
  %code16 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %28, i32 0, i32 7, !dbg !7153
  store %struct._object* %27, %struct._object** %code16, align 8, !dbg !7154, !tbaa !6768
  br label %if.end.19, !dbg !7152

if.else.17:                                       ; preds = %do.end.13
  %29 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7155, !tbaa !1975
  %30 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !7156, !tbaa !1975
  %code18 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %30, i32 0, i32 7, !dbg !7157
  store %struct._object* %29, %struct._object** %code18, align 8, !dbg !7158, !tbaa !6768
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.17, %if.then.15
  %31 = load %struct.PySystemExitObject*, %struct.PySystemExitObject** %self.addr, align 8, !dbg !7159, !tbaa !1975
  %code20 = getelementptr inbounds %struct.PySystemExitObject, %struct.PySystemExitObject* %31, i32 0, i32 7, !dbg !7160
  %32 = load %struct._object*, %struct._object** %code20, align 8, !dbg !7160, !tbaa !6768
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !7161
  %33 = load i64, i64* %ob_refcnt21, align 8, !dbg !7162, !tbaa !2003
  %inc = add i64 %33, 1, !dbg !7162
  store i64 %inc, i64* %ob_refcnt21, align 8, !dbg !7162, !tbaa !2003
  store i32 0, i32* %retval, !dbg !7163
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7163

cleanup:                                          ; preds = %if.end.19, %if.then.2, %if.then
  %34 = bitcast i64* %size to i8*, !dbg !7164
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !7164
  %35 = load i32, i32* %retval, !dbg !7164
  ret i32 %35, !dbg !7164
}

; Function Attrs: nounwind uwtable
define internal void @ImportError_dealloc(%struct.PyImportErrorObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyImportErrorObject*, align 8
  %g = alloca %union._gc_head*, align 8
  store %struct.PyImportErrorObject* %self, %struct.PyImportErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyImportErrorObject** %self.addr, metadata !1112, metadata !1979), !dbg !7165
  br label %do.body, !dbg !7166

do.body:                                          ; preds = %entry
  %0 = bitcast %union._gc_head** %g to i8*, !dbg !7167
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7167
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !1113, metadata !1979), !dbg !7169
  %1 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7170, !tbaa !1975
  %2 = bitcast %struct.PyImportErrorObject* %1 to %union._gc_head*, !dbg !7171
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %2, i64 -1, !dbg !7172
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !7169, !tbaa !1975
  br label %do.body.1, !dbg !7173

do.body.1:                                        ; preds = %do.body
  %3 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7174, !tbaa !1975
  %gc = bitcast %union._gc_head* %3 to %struct.anon.0*, !dbg !7177
  %gc_refs = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc, i32 0, i32 2, !dbg !7178
  %4 = load i64, i64* %gc_refs, align 8, !dbg !7178, !tbaa !5967
  %and = and i64 %4, 1, !dbg !7179
  %or = or i64 %and, -4, !dbg !7180
  %5 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7181, !tbaa !1975
  %gc2 = bitcast %union._gc_head* %5 to %struct.anon.0*, !dbg !7182
  %gc_refs3 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc2, i32 0, i32 2, !dbg !7183
  store i64 %or, i64* %gc_refs3, align 8, !dbg !7184, !tbaa !5967
  br label %do.cond, !dbg !7185

do.cond:                                          ; preds = %do.body.1
  br label %do.end, !dbg !7186

do.end:                                           ; preds = %do.cond
  %6 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7188, !tbaa !1975
  %gc4 = bitcast %union._gc_head* %6 to %struct.anon.0*, !dbg !7190
  %gc_next = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc4, i32 0, i32 0, !dbg !7191
  %7 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !7191, !tbaa !5982
  %8 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7192, !tbaa !1975
  %gc5 = bitcast %union._gc_head* %8 to %struct.anon.0*, !dbg !7193
  %gc_prev = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc5, i32 0, i32 1, !dbg !7194
  %9 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !7194, !tbaa !5986
  %gc6 = bitcast %union._gc_head* %9 to %struct.anon.0*, !dbg !7195
  %gc_next7 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc6, i32 0, i32 0, !dbg !7196
  store %union._gc_head* %7, %union._gc_head** %gc_next7, align 8, !dbg !7197, !tbaa !5982
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7198, !tbaa !1975
  %gc8 = bitcast %union._gc_head* %10 to %struct.anon.0*, !dbg !7199
  %gc_prev9 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc8, i32 0, i32 1, !dbg !7200
  %11 = load %union._gc_head*, %union._gc_head** %gc_prev9, align 8, !dbg !7200, !tbaa !5986
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7201, !tbaa !1975
  %gc10 = bitcast %union._gc_head* %12 to %struct.anon.0*, !dbg !7202
  %gc_next11 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc10, i32 0, i32 0, !dbg !7203
  %13 = load %union._gc_head*, %union._gc_head** %gc_next11, align 8, !dbg !7203, !tbaa !5982
  %gc12 = bitcast %union._gc_head* %13 to %struct.anon.0*, !dbg !7204
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc12, i32 0, i32 1, !dbg !7205
  store %union._gc_head* %11, %union._gc_head** %gc_prev13, align 8, !dbg !7206, !tbaa !5986
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7207, !tbaa !1975
  %gc14 = bitcast %union._gc_head* %14 to %struct.anon.0*, !dbg !7208
  %gc_next15 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc14, i32 0, i32 0, !dbg !7209
  store %union._gc_head* null, %union._gc_head** %gc_next15, align 8, !dbg !7210, !tbaa !5982
  %15 = bitcast %union._gc_head** %g to i8*, !dbg !7211
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !7211
  br label %do.end.17, !dbg !7212

do.end.17:                                        ; preds = %do.end
  %16 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7213, !tbaa !1975
  %call = call i32 @ImportError_clear(%struct.PyImportErrorObject* %16), !dbg !7214
  %17 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7215, !tbaa !1975
  %18 = bitcast %struct.PyImportErrorObject* %17 to %struct._object*, !dbg !7216
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !7217
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7217, !tbaa !2039
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 38, !dbg !7218
  %20 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !7218, !tbaa !5662
  %21 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7219, !tbaa !1975
  %22 = bitcast %struct.PyImportErrorObject* %21 to %struct._object*, !dbg !7220
  %23 = bitcast %struct._object* %22 to i8*, !dbg !7220
  call void %20(i8* %23), !dbg !7221
  ret void, !dbg !7222
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ImportError_str(%struct.PyImportErrorObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyImportErrorObject*, align 8
  store %struct.PyImportErrorObject* %self, %struct.PyImportErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyImportErrorObject** %self.addr, metadata !1119, metadata !1979), !dbg !7223
  %0 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7224, !tbaa !1975
  %msg = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %0, i32 0, i32 7, !dbg !7226
  %1 = load %struct._object*, %struct._object** %msg, align 8, !dbg !7226, !tbaa !7227
  %tobool = icmp ne %struct._object* %1, null, !dbg !7224
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !7229

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7230, !tbaa !1975
  %msg1 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %2, i32 0, i32 7, !dbg !7232
  %3 = load %struct._object*, %struct._object** %msg1, align 8, !dbg !7232, !tbaa !7227
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !7233
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7233, !tbaa !2039
  %cmp = icmp eq %struct._typeobject* %4, @PyUnicode_Type, !dbg !7234
  br i1 %cmp, label %if.then, label %if.else, !dbg !7235

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7236, !tbaa !1975
  %msg2 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %5, i32 0, i32 7, !dbg !7238
  %6 = load %struct._object*, %struct._object** %msg2, align 8, !dbg !7238, !tbaa !7227
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !7239
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !7240, !tbaa !2003
  %inc = add i64 %7, 1, !dbg !7240
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7240, !tbaa !2003
  %8 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7241, !tbaa !1975
  %msg3 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %8, i32 0, i32 7, !dbg !7242
  %9 = load %struct._object*, %struct._object** %msg3, align 8, !dbg !7242, !tbaa !7227
  store %struct._object* %9, %struct._object** %retval, !dbg !7243
  br label %return, !dbg !7243

if.else:                                          ; preds = %land.lhs.true, %entry
  %10 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7244, !tbaa !1975
  %11 = bitcast %struct.PyImportErrorObject* %10 to %struct.PyBaseExceptionObject*, !dbg !7246
  %call = call %struct._object* @BaseException_str(%struct.PyBaseExceptionObject* %11), !dbg !7247
  store %struct._object* %call, %struct._object** %retval, !dbg !7248
  br label %return, !dbg !7248

return:                                           ; preds = %if.else, %if.then
  %12 = load %struct._object*, %struct._object** %retval, !dbg !7249
  ret %struct._object* %12, !dbg !7249
}

; Function Attrs: nounwind uwtable
define internal i32 @ImportError_traverse(%struct.PyImportErrorObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyImportErrorObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  store %struct.PyImportErrorObject* %self, %struct.PyImportErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyImportErrorObject** %self.addr, metadata !1124, metadata !1979), !dbg !7250
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1125, metadata !1979), !dbg !7251
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1126, metadata !1979), !dbg !7252
  br label %do.body, !dbg !7253

do.body:                                          ; preds = %entry
  %0 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7254, !tbaa !1975
  %msg = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %0, i32 0, i32 7, !dbg !7256
  %1 = load %struct._object*, %struct._object** %msg, align 8, !dbg !7256, !tbaa !7227
  %tobool = icmp ne %struct._object* %1, null, !dbg !7257
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !7258

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !7259
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !7259
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1127, metadata !1979), !dbg !7261
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7262, !tbaa !1975
  %4 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7263, !tbaa !1975
  %msg1 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %4, i32 0, i32 7, !dbg !7264
  %5 = load %struct._object*, %struct._object** %msg1, align 8, !dbg !7264, !tbaa !7227
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !7265, !tbaa !1975
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !7262
  store i32 %call, i32* %vret, align 4, !dbg !7261, !tbaa !5355
  %7 = load i32, i32* %vret, align 4, !dbg !7266, !tbaa !5355
  %tobool2 = icmp ne i32 %7, 0, !dbg !7266
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !7268

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !7269, !tbaa !5355
  store i32 %8, i32* %retval, !dbg !7271
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7271

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !7272
  br label %cleanup, !dbg !7272

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !7274
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !7274
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !7277

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !7278

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !7281

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7282, !tbaa !1975
  %name = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %10, i32 0, i32 8, !dbg !7284
  %11 = load %struct._object*, %struct._object** %name, align 8, !dbg !7284, !tbaa !7285
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !7286
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !7287

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !7288
  call void @llvm.lifetime.start(i64 4, i8* %12) #2, !dbg !7288
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1131, metadata !1979), !dbg !7290
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7291, !tbaa !1975
  %14 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7292, !tbaa !1975
  %name9 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %14, i32 0, i32 8, !dbg !7293
  %15 = load %struct._object*, %struct._object** %name9, align 8, !dbg !7293, !tbaa !7285
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !7294, !tbaa !1975
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !7291
  store i32 %call10, i32* %vret8, align 4, !dbg !7290, !tbaa !5355
  %17 = load i32, i32* %vret8, align 4, !dbg !7295, !tbaa !5355
  %tobool11 = icmp ne i32 %17, 0, !dbg !7295
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !7297

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !7298, !tbaa !5355
  store i32 %18, i32* %retval, !dbg !7300
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !7300

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !7301
  br label %cleanup.14, !dbg !7301

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !7303
  call void @llvm.lifetime.end(i64 4, i8* %19) #2, !dbg !7303
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !7306

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !7307

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !7310

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7311, !tbaa !1975
  %path = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %20, i32 0, i32 9, !dbg !7313
  %21 = load %struct._object*, %struct._object** %path, align 8, !dbg !7313, !tbaa !7314
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !7315
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !7316

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !7317
  call void @llvm.lifetime.start(i64 4, i8* %22) #2, !dbg !7317
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !1135, metadata !1979), !dbg !7319
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7320, !tbaa !1975
  %24 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7321, !tbaa !1975
  %path23 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %24, i32 0, i32 9, !dbg !7322
  %25 = load %struct._object*, %struct._object** %path23, align 8, !dbg !7322, !tbaa !7314
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !7323, !tbaa !1975
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !7320
  store i32 %call24, i32* %vret22, align 4, !dbg !7319, !tbaa !5355
  %27 = load i32, i32* %vret22, align 4, !dbg !7324, !tbaa !5355
  %tobool25 = icmp ne i32 %27, 0, !dbg !7324
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !7326

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !7327, !tbaa !5355
  store i32 %28, i32* %retval, !dbg !7329
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !7329

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !7330
  br label %cleanup.28, !dbg !7330

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !7332
  call void @llvm.lifetime.end(i64 4, i8* %29) #2, !dbg !7332
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.5

LeafBlock.5:                                      ; preds = %cleanup.28
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest.29, 1
  br i1 %SwitchLeaf6, label %return, label %NewDefault.4

NewDefault.4:                                     ; preds = %LeafBlock.5
  br label %cleanup.cont.30

cleanup.cont.30:                                  ; preds = %NewDefault.4
  br label %if.end.31, !dbg !7335

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !7336

do.end.32:                                        ; preds = %if.end.31
  %30 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7339, !tbaa !1975
  %31 = bitcast %struct.PyImportErrorObject* %30 to %struct.PyBaseExceptionObject*, !dbg !7340
  %32 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7341, !tbaa !1975
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !7342, !tbaa !1975
  %call33 = call i32 @BaseException_traverse(%struct.PyBaseExceptionObject* %31, i32 (%struct._object*, i8*)* %32, i8* %33), !dbg !7343
  store i32 %call33, i32* %retval, !dbg !7344
  br label %return, !dbg !7344

return:                                           ; preds = %LeafBlock.5, %LeafBlock.2, %LeafBlock, %do.end.32
  %34 = load i32, i32* %retval, !dbg !7345
  ret i32 %34, !dbg !7345
}

; Function Attrs: nounwind uwtable
define internal i32 @ImportError_clear(%struct.PyImportErrorObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyImportErrorObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  store %struct.PyImportErrorObject* %self, %struct.PyImportErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyImportErrorObject** %self.addr, metadata !1143, metadata !1979), !dbg !7346
  br label %do.body, !dbg !7347

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7348
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7348
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1144, metadata !1979), !dbg !7350
  %1 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7351, !tbaa !1975
  %msg = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %1, i32 0, i32 7, !dbg !7352
  %2 = load %struct._object*, %struct._object** %msg, align 8, !dbg !7352, !tbaa !7227
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !7350, !tbaa !1975
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7353, !tbaa !1975
  %cmp = icmp ne %struct._object* %3, null, !dbg !7354
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !7355

if.then:                                          ; preds = %do.body
  %4 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7356, !tbaa !1975
  %msg1 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %4, i32 0, i32 7, !dbg !7358
  store %struct._object* null, %struct._object** %msg1, align 8, !dbg !7359, !tbaa !7227
  br label %do.body.2, !dbg !7360

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7361
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !7361
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1146, metadata !1979), !dbg !7363
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7364, !tbaa !1975
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !7363, !tbaa !1975
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7365, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !7367
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !7368, !tbaa !2003
  %dec = add i64 %8, -1, !dbg !7368
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7368, !tbaa !2003
  %cmp3 = icmp ne i64 %dec, 0, !dbg !7369
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !7370

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !7371

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7373, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !7375
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7375, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !7376
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7376, !tbaa !2091
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7377, !tbaa !1975
  call void %11(%struct._object* %12), !dbg !7378
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7379
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !7379
  br label %do.cond, !dbg !7381

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7382

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !7384

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7386
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !7386
  br label %do.end.7, !dbg !7389

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !7390

do.body.8:                                        ; preds = %do.end.7
  %15 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !7391
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !7391
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !1150, metadata !1979), !dbg !7393
  %16 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7394, !tbaa !1975
  %name = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %16, i32 0, i32 8, !dbg !7395
  %17 = load %struct._object*, %struct._object** %name, align 8, !dbg !7395, !tbaa !7285
  store %struct._object* %17, %struct._object** %_py_tmp9, align 8, !dbg !7393, !tbaa !1975
  %18 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !7396, !tbaa !1975
  %cmp10 = icmp ne %struct._object* %18, null, !dbg !7397
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !7398

if.then.11:                                       ; preds = %do.body.8
  %19 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7399, !tbaa !1975
  %name12 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %19, i32 0, i32 8, !dbg !7401
  store %struct._object* null, %struct._object** %name12, align 8, !dbg !7402, !tbaa !7285
  br label %do.body.13, !dbg !7403

do.body.13:                                       ; preds = %if.then.11
  %20 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !7404
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !7404
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !1152, metadata !1979), !dbg !7406
  %21 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !7407, !tbaa !1975
  store %struct._object* %21, %struct._object** %_py_decref_tmp14, align 8, !dbg !7406, !tbaa !1975
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !7408, !tbaa !1975
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !7410
  %23 = load i64, i64* %ob_refcnt15, align 8, !dbg !7411, !tbaa !2003
  %dec16 = add i64 %23, -1, !dbg !7411
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !7411, !tbaa !2003
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !7412
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !7413

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !7414

if.else.19:                                       ; preds = %do.body.13
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !7416, !tbaa !1975
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !7418
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !7418, !tbaa !2039
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !7419
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !7419, !tbaa !2091
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !7420, !tbaa !1975
  call void %26(%struct._object* %27), !dbg !7421
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %28 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !7422
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !7422
  br label %do.cond.23, !dbg !7424

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !7425

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !7427

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %29 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !7429
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !7429
  br label %do.end.27, !dbg !7430

do.end.27:                                        ; preds = %if.end.25
  br label %do.body.28, !dbg !7431

do.body.28:                                       ; preds = %do.end.27
  %30 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !7432
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !7432
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !1156, metadata !1979), !dbg !7434
  %31 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7435, !tbaa !1975
  %path = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %31, i32 0, i32 9, !dbg !7436
  %32 = load %struct._object*, %struct._object** %path, align 8, !dbg !7436, !tbaa !7314
  store %struct._object* %32, %struct._object** %_py_tmp29, align 8, !dbg !7434, !tbaa !1975
  %33 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !7437, !tbaa !1975
  %cmp30 = icmp ne %struct._object* %33, null, !dbg !7438
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !7439

if.then.31:                                       ; preds = %do.body.28
  %34 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7440, !tbaa !1975
  %path32 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %34, i32 0, i32 9, !dbg !7442
  store %struct._object* null, %struct._object** %path32, align 8, !dbg !7443, !tbaa !7314
  br label %do.body.33, !dbg !7444

do.body.33:                                       ; preds = %if.then.31
  %35 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !7445
  call void @llvm.lifetime.start(i64 8, i8* %35) #2, !dbg !7445
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !1158, metadata !1979), !dbg !7447
  %36 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !7448, !tbaa !1975
  store %struct._object* %36, %struct._object** %_py_decref_tmp34, align 8, !dbg !7447, !tbaa !1975
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !7449, !tbaa !1975
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !7451
  %38 = load i64, i64* %ob_refcnt35, align 8, !dbg !7452, !tbaa !2003
  %dec36 = add i64 %38, -1, !dbg !7452
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !7452, !tbaa !2003
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !7453
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !7454

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !7455

if.else.39:                                       ; preds = %do.body.33
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !7457, !tbaa !1975
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !7459
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !7459, !tbaa !2039
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !7460
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !7460, !tbaa !2091
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !7461, !tbaa !1975
  call void %41(%struct._object* %42), !dbg !7462
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %43 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !7463
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !7463
  br label %do.cond.43, !dbg !7465

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !7466

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !7468

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %44 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !7470
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !7470
  br label %do.end.47, !dbg !7471

do.end.47:                                        ; preds = %if.end.45
  %45 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7472, !tbaa !1975
  %46 = bitcast %struct.PyImportErrorObject* %45 to %struct.PyBaseExceptionObject*, !dbg !7473
  %call = call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %46), !dbg !7474
  ret i32 %call, !dbg !7475
}

; Function Attrs: nounwind uwtable
define internal i32 @ImportError_init(%struct.PyImportErrorObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyImportErrorObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %msg = alloca %struct._object*, align 8
  %name = alloca %struct._object*, align 8
  %path = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp24 = alloca %struct._object*, align 8
  %_py_decref_tmp30 = alloca %struct._object*, align 8
  %_py_tmp66 = alloca %struct._object*, align 8
  %_py_decref_tmp72 = alloca %struct._object*, align 8
  store %struct.PyImportErrorObject* %self, %struct.PyImportErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyImportErrorObject** %self.addr, metadata !1166, metadata !1979), !dbg !7476
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1167, metadata !1979), !dbg !7477
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1168, metadata !1979), !dbg !7478
  %0 = bitcast %struct._object** %msg to i8*, !dbg !7479
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7479
  call void @llvm.dbg.declare(metadata %struct._object** %msg, metadata !1169, metadata !1979), !dbg !7480
  store %struct._object* null, %struct._object** %msg, align 8, !dbg !7480, !tbaa !1975
  %1 = bitcast %struct._object** %name to i8*, !dbg !7481
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !7481
  call void @llvm.dbg.declare(metadata %struct._object** %name, metadata !1170, metadata !1979), !dbg !7482
  store %struct._object* null, %struct._object** %name, align 8, !dbg !7482, !tbaa !1975
  %2 = bitcast %struct._object** %path to i8*, !dbg !7483
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !7483
  call void @llvm.dbg.declare(metadata %struct._object** %path, metadata !1171, metadata !1979), !dbg !7484
  store %struct._object* null, %struct._object** %path, align 8, !dbg !7484, !tbaa !1975
  %3 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7485, !tbaa !1975
  %tobool = icmp ne %struct._object* %3, null, !dbg !7485
  br i1 %tobool, label %if.then, label %if.end.53, !dbg !7486

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7487, !tbaa !1975
  %call = call %struct._object* @PyDict_GetItemString(%struct._object* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i32 0, i32 0)), !dbg !7488
  store %struct._object* %call, %struct._object** %name, align 8, !dbg !7489, !tbaa !1975
  %5 = load %struct._object*, %struct._object** %name, align 8, !dbg !7490, !tbaa !1975
  %tobool1 = icmp ne %struct._object* %5, null, !dbg !7490
  br i1 %tobool1, label %if.then.2, label %if.end.19, !dbg !7491

if.then.2:                                        ; preds = %if.then
  br label %do.body, !dbg !7492

do.body:                                          ; preds = %if.then.2
  %6 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7494
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !7494
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1172, metadata !1979), !dbg !7496
  %7 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7497, !tbaa !1975
  %name3 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %7, i32 0, i32 8, !dbg !7498
  %8 = load %struct._object*, %struct._object** %name3, align 8, !dbg !7498, !tbaa !7285
  store %struct._object* %8, %struct._object** %_py_tmp, align 8, !dbg !7496, !tbaa !1975
  %9 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7499, !tbaa !1975
  %cmp = icmp ne %struct._object* %9, null, !dbg !7500
  br i1 %cmp, label %if.then.4, label %if.end.9, !dbg !7501

if.then.4:                                        ; preds = %do.body
  %10 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7502, !tbaa !1975
  %name5 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %10, i32 0, i32 8, !dbg !7504
  store %struct._object* null, %struct._object** %name5, align 8, !dbg !7505, !tbaa !7285
  br label %do.body.6, !dbg !7506

do.body.6:                                        ; preds = %if.then.4
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7507
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !7507
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1179, metadata !1979), !dbg !7509
  %12 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7510, !tbaa !1975
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8, !dbg !7509, !tbaa !1975
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7511, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !7513
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !7514, !tbaa !2003
  %dec = add i64 %14, -1, !dbg !7514
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7514, !tbaa !2003
  %cmp7 = icmp ne i64 %dec, 0, !dbg !7515
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !7516

if.then.8:                                        ; preds = %do.body.6
  br label %if.end, !dbg !7517

if.else:                                          ; preds = %do.body.6
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7519, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !7521
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7521, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4, !dbg !7522
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7522, !tbaa !2091
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7523, !tbaa !1975
  call void %17(%struct._object* %18), !dbg !7524
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7525
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !7525
  br label %do.cond, !dbg !7527

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7528

do.end:                                           ; preds = %do.cond
  br label %if.end.9, !dbg !7530

if.end.9:                                         ; preds = %do.end, %do.body
  %20 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7532
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !7532
  br label %do.cond.10, !dbg !7535

do.cond.10:                                       ; preds = %if.end.9
  br label %do.end.11, !dbg !7536

do.end.11:                                        ; preds = %do.cond.10
  %21 = load %struct._object*, %struct._object** %name, align 8, !dbg !7538, !tbaa !1975
  %22 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7540, !tbaa !1975
  %name12 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %22, i32 0, i32 8, !dbg !7541
  store %struct._object* %21, %struct._object** %name12, align 8, !dbg !7542, !tbaa !7285
  %23 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7543, !tbaa !1975
  %name13 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %23, i32 0, i32 8, !dbg !7544
  %24 = load %struct._object*, %struct._object** %name13, align 8, !dbg !7544, !tbaa !7285
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !7545
  %25 = load i64, i64* %ob_refcnt14, align 8, !dbg !7546, !tbaa !2003
  %inc = add i64 %25, 1, !dbg !7546
  store i64 %inc, i64* %ob_refcnt14, align 8, !dbg !7546, !tbaa !2003
  %26 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7547, !tbaa !1975
  %call15 = call i32 @PyDict_DelItemString(%struct._object* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i32 0, i32 0)), !dbg !7549
  %tobool16 = icmp ne i32 %call15, 0, !dbg !7549
  br i1 %tobool16, label %if.then.17, label %if.end.18, !dbg !7550

if.then.17:                                       ; preds = %do.end.11
  store i32 -1, i32* %retval, !dbg !7551
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7553

if.end.18:                                        ; preds = %do.end.11
  br label %if.end.19, !dbg !7554

if.end.19:                                        ; preds = %if.end.18, %if.then
  %27 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7556, !tbaa !1975
  %call20 = call %struct._object* @PyDict_GetItemString(%struct._object* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i32 0, i32 0)), !dbg !7557
  store %struct._object* %call20, %struct._object** %path, align 8, !dbg !7558, !tbaa !1975
  %28 = load %struct._object*, %struct._object** %path, align 8, !dbg !7559, !tbaa !1975
  %tobool21 = icmp ne %struct._object* %28, null, !dbg !7559
  br i1 %tobool21, label %if.then.22, label %if.end.52, !dbg !7560

if.then.22:                                       ; preds = %if.end.19
  br label %do.body.23, !dbg !7561

do.body.23:                                       ; preds = %if.then.22
  %29 = bitcast %struct._object** %_py_tmp24 to i8*, !dbg !7563
  call void @llvm.lifetime.start(i64 8, i8* %29) #2, !dbg !7563
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp24, metadata !1183, metadata !1979), !dbg !7565
  %30 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7566, !tbaa !1975
  %path25 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %30, i32 0, i32 9, !dbg !7567
  %31 = load %struct._object*, %struct._object** %path25, align 8, !dbg !7567, !tbaa !7314
  store %struct._object* %31, %struct._object** %_py_tmp24, align 8, !dbg !7565, !tbaa !1975
  %32 = load %struct._object*, %struct._object** %_py_tmp24, align 8, !dbg !7568, !tbaa !1975
  %cmp26 = icmp ne %struct._object* %32, null, !dbg !7569
  br i1 %cmp26, label %if.then.27, label %if.end.41, !dbg !7570

if.then.27:                                       ; preds = %do.body.23
  %33 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7571, !tbaa !1975
  %path28 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %33, i32 0, i32 9, !dbg !7573
  store %struct._object* null, %struct._object** %path28, align 8, !dbg !7574, !tbaa !7314
  br label %do.body.29, !dbg !7575

do.body.29:                                       ; preds = %if.then.27
  %34 = bitcast %struct._object** %_py_decref_tmp30 to i8*, !dbg !7576
  call void @llvm.lifetime.start(i64 8, i8* %34) #2, !dbg !7576
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp30, metadata !1188, metadata !1979), !dbg !7578
  %35 = load %struct._object*, %struct._object** %_py_tmp24, align 8, !dbg !7579, !tbaa !1975
  store %struct._object* %35, %struct._object** %_py_decref_tmp30, align 8, !dbg !7578, !tbaa !1975
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8, !dbg !7580, !tbaa !1975
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !7582
  %37 = load i64, i64* %ob_refcnt31, align 8, !dbg !7583, !tbaa !2003
  %dec32 = add i64 %37, -1, !dbg !7583
  store i64 %dec32, i64* %ob_refcnt31, align 8, !dbg !7583, !tbaa !2003
  %cmp33 = icmp ne i64 %dec32, 0, !dbg !7584
  br i1 %cmp33, label %if.then.34, label %if.else.35, !dbg !7585

if.then.34:                                       ; preds = %do.body.29
  br label %if.end.38, !dbg !7586

if.else.35:                                       ; preds = %do.body.29
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8, !dbg !7588, !tbaa !1975
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !7590
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8, !dbg !7590, !tbaa !2039
  %tp_dealloc37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !7591
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc37, align 8, !dbg !7591, !tbaa !2091
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp30, align 8, !dbg !7592, !tbaa !1975
  call void %40(%struct._object* %41), !dbg !7593
  br label %if.end.38

if.end.38:                                        ; preds = %if.else.35, %if.then.34
  %42 = bitcast %struct._object** %_py_decref_tmp30 to i8*, !dbg !7594
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !7594
  br label %do.cond.39, !dbg !7596

do.cond.39:                                       ; preds = %if.end.38
  br label %do.end.40, !dbg !7597

do.end.40:                                        ; preds = %do.cond.39
  br label %if.end.41, !dbg !7599

if.end.41:                                        ; preds = %do.end.40, %do.body.23
  %43 = bitcast %struct._object** %_py_tmp24 to i8*, !dbg !7601
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !7601
  br label %do.cond.42, !dbg !7604

do.cond.42:                                       ; preds = %if.end.41
  br label %do.end.43, !dbg !7605

do.end.43:                                        ; preds = %do.cond.42
  %44 = load %struct._object*, %struct._object** %path, align 8, !dbg !7607, !tbaa !1975
  %45 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7609, !tbaa !1975
  %path44 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %45, i32 0, i32 9, !dbg !7610
  store %struct._object* %44, %struct._object** %path44, align 8, !dbg !7611, !tbaa !7314
  %46 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7612, !tbaa !1975
  %path45 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %46, i32 0, i32 9, !dbg !7613
  %47 = load %struct._object*, %struct._object** %path45, align 8, !dbg !7613, !tbaa !7314
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0, !dbg !7614
  %48 = load i64, i64* %ob_refcnt46, align 8, !dbg !7615, !tbaa !2003
  %inc47 = add i64 %48, 1, !dbg !7615
  store i64 %inc47, i64* %ob_refcnt46, align 8, !dbg !7615, !tbaa !2003
  %49 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7616, !tbaa !1975
  %call48 = call i32 @PyDict_DelItemString(%struct._object* %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i32 0, i32 0)), !dbg !7618
  %tobool49 = icmp ne i32 %call48, 0, !dbg !7618
  br i1 %tobool49, label %if.then.50, label %if.end.51, !dbg !7619

if.then.50:                                       ; preds = %do.end.43
  store i32 -1, i32* %retval, !dbg !7620
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7622

if.end.51:                                        ; preds = %do.end.43
  br label %if.end.52, !dbg !7623

if.end.52:                                        ; preds = %if.end.51, %if.end.19
  br label %if.end.53, !dbg !7625

if.end.53:                                        ; preds = %if.end.52, %entry
  %50 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7626, !tbaa !1975
  %51 = bitcast %struct.PyImportErrorObject* %50 to %struct.PyBaseExceptionObject*, !dbg !7628
  %52 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7629, !tbaa !1975
  %53 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7630, !tbaa !1975
  %call54 = call i32 @BaseException_init(%struct.PyBaseExceptionObject* %51, %struct._object* %52, %struct._object* %53), !dbg !7631
  %cmp55 = icmp eq i32 %call54, -1, !dbg !7632
  br i1 %cmp55, label %if.then.56, label %if.end.57, !dbg !7633

if.then.56:                                       ; preds = %if.end.53
  store i32 -1, i32* %retval, !dbg !7634
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7634

if.end.57:                                        ; preds = %if.end.53
  %54 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7635, !tbaa !1975
  %55 = bitcast %struct._object* %54 to %struct.PyVarObject*, !dbg !7637
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %55, i32 0, i32 1, !dbg !7638
  %56 = load i64, i64* %ob_size, align 8, !dbg !7638, !tbaa !2466
  %cmp58 = icmp ne i64 %56, 1, !dbg !7639
  br i1 %cmp58, label %if.then.59, label %if.end.60, !dbg !7640

if.then.59:                                       ; preds = %if.end.57
  store i32 0, i32* %retval, !dbg !7641
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7641

if.end.60:                                        ; preds = %if.end.57
  %57 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7642, !tbaa !1975
  %call61 = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %57, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i32 0, i32 0), i64 1, i64 1, %struct._object** %msg), !dbg !7644
  %tobool62 = icmp ne i32 %call61, 0, !dbg !7644
  br i1 %tobool62, label %if.end.64, label %if.then.63, !dbg !7645

if.then.63:                                       ; preds = %if.end.60
  store i32 -1, i32* %retval, !dbg !7646
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7646

if.end.64:                                        ; preds = %if.end.60
  br label %do.body.65, !dbg !7647

do.body.65:                                       ; preds = %if.end.64
  %58 = bitcast %struct._object** %_py_tmp66 to i8*, !dbg !7648
  call void @llvm.lifetime.start(i64 8, i8* %58) #2, !dbg !7648
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp66, metadata !1192, metadata !1979), !dbg !7650
  %59 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7651, !tbaa !1975
  %msg67 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %59, i32 0, i32 7, !dbg !7652
  %60 = load %struct._object*, %struct._object** %msg67, align 8, !dbg !7652, !tbaa !7227
  store %struct._object* %60, %struct._object** %_py_tmp66, align 8, !dbg !7650, !tbaa !1975
  %61 = load %struct._object*, %struct._object** %_py_tmp66, align 8, !dbg !7653, !tbaa !1975
  %cmp68 = icmp ne %struct._object* %61, null, !dbg !7654
  br i1 %cmp68, label %if.then.69, label %if.end.83, !dbg !7655

if.then.69:                                       ; preds = %do.body.65
  %62 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7656, !tbaa !1975
  %msg70 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %62, i32 0, i32 7, !dbg !7658
  store %struct._object* null, %struct._object** %msg70, align 8, !dbg !7659, !tbaa !7227
  br label %do.body.71, !dbg !7660

do.body.71:                                       ; preds = %if.then.69
  %63 = bitcast %struct._object** %_py_decref_tmp72 to i8*, !dbg !7661
  call void @llvm.lifetime.start(i64 8, i8* %63) #2, !dbg !7661
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp72, metadata !1194, metadata !1979), !dbg !7663
  %64 = load %struct._object*, %struct._object** %_py_tmp66, align 8, !dbg !7664, !tbaa !1975
  store %struct._object* %64, %struct._object** %_py_decref_tmp72, align 8, !dbg !7663, !tbaa !1975
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !7665, !tbaa !1975
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !7667
  %66 = load i64, i64* %ob_refcnt73, align 8, !dbg !7668, !tbaa !2003
  %dec74 = add i64 %66, -1, !dbg !7668
  store i64 %dec74, i64* %ob_refcnt73, align 8, !dbg !7668, !tbaa !2003
  %cmp75 = icmp ne i64 %dec74, 0, !dbg !7669
  br i1 %cmp75, label %if.then.76, label %if.else.77, !dbg !7670

if.then.76:                                       ; preds = %do.body.71
  br label %if.end.80, !dbg !7671

if.else.77:                                       ; preds = %do.body.71
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !7673, !tbaa !1975
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !7675
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8, !dbg !7675, !tbaa !2039
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !7676
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8, !dbg !7676, !tbaa !2091
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !7677, !tbaa !1975
  call void %69(%struct._object* %70), !dbg !7678
  br label %if.end.80

if.end.80:                                        ; preds = %if.else.77, %if.then.76
  %71 = bitcast %struct._object** %_py_decref_tmp72 to i8*, !dbg !7679
  call void @llvm.lifetime.end(i64 8, i8* %71) #2, !dbg !7679
  br label %do.cond.81, !dbg !7681

do.cond.81:                                       ; preds = %if.end.80
  br label %do.end.82, !dbg !7682

do.end.82:                                        ; preds = %do.cond.81
  br label %if.end.83, !dbg !7684

if.end.83:                                        ; preds = %do.end.82, %do.body.65
  %72 = bitcast %struct._object** %_py_tmp66 to i8*, !dbg !7686
  call void @llvm.lifetime.end(i64 8, i8* %72) #2, !dbg !7686
  br label %do.cond.84, !dbg !7689

do.cond.84:                                       ; preds = %if.end.83
  br label %do.end.85, !dbg !7690

do.end.85:                                        ; preds = %do.cond.84
  %73 = load %struct._object*, %struct._object** %msg, align 8, !dbg !7692, !tbaa !1975
  %74 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7693, !tbaa !1975
  %msg86 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %74, i32 0, i32 7, !dbg !7694
  store %struct._object* %73, %struct._object** %msg86, align 8, !dbg !7695, !tbaa !7227
  %75 = load %struct.PyImportErrorObject*, %struct.PyImportErrorObject** %self.addr, align 8, !dbg !7696, !tbaa !1975
  %msg87 = getelementptr inbounds %struct.PyImportErrorObject, %struct.PyImportErrorObject* %75, i32 0, i32 7, !dbg !7697
  %76 = load %struct._object*, %struct._object** %msg87, align 8, !dbg !7697, !tbaa !7227
  %ob_refcnt88 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0, !dbg !7698
  %77 = load i64, i64* %ob_refcnt88, align 8, !dbg !7699, !tbaa !2003
  %inc89 = add i64 %77, 1, !dbg !7699
  store i64 %inc89, i64* %ob_refcnt88, align 8, !dbg !7699, !tbaa !2003
  store i32 0, i32* %retval, !dbg !7700
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7700

cleanup:                                          ; preds = %do.end.85, %if.then.63, %if.then.59, %if.then.56, %if.then.50, %if.then.17
  %78 = bitcast %struct._object** %path to i8*, !dbg !7701
  call void @llvm.lifetime.end(i64 8, i8* %78) #2, !dbg !7701
  %79 = bitcast %struct._object** %name to i8*, !dbg !7701
  call void @llvm.lifetime.end(i64 8, i8* %79) #2, !dbg !7701
  %80 = bitcast %struct._object** %msg to i8*, !dbg !7701
  call void @llvm.lifetime.end(i64 8, i8* %80) #2, !dbg !7701
  %81 = load i32, i32* %retval, !dbg !7701
  ret i32 %81, !dbg !7701
}

declare %struct._object* @PyDict_GetItemString(%struct._object*, i8*) #3

declare i32 @PyDict_DelItemString(%struct._object*, i8*) #3

declare i32 @PyArg_UnpackTuple(%struct._object*, i8*, i64, i64, ...) #3

; Function Attrs: nounwind uwtable
define internal void @OSError_dealloc(%struct.PyOSErrorObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyOSErrorObject*, align 8
  %g = alloca %union._gc_head*, align 8
  store %struct.PyOSErrorObject* %self, %struct.PyOSErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %self.addr, metadata !1202, metadata !1979), !dbg !7702
  br label %do.body, !dbg !7703

do.body:                                          ; preds = %entry
  %0 = bitcast %union._gc_head** %g to i8*, !dbg !7704
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7704
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !1203, metadata !1979), !dbg !7706
  %1 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7707, !tbaa !1975
  %2 = bitcast %struct.PyOSErrorObject* %1 to %union._gc_head*, !dbg !7708
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %2, i64 -1, !dbg !7709
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !7706, !tbaa !1975
  br label %do.body.1, !dbg !7710

do.body.1:                                        ; preds = %do.body
  %3 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7711, !tbaa !1975
  %gc = bitcast %union._gc_head* %3 to %struct.anon.0*, !dbg !7714
  %gc_refs = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc, i32 0, i32 2, !dbg !7715
  %4 = load i64, i64* %gc_refs, align 8, !dbg !7715, !tbaa !5967
  %and = and i64 %4, 1, !dbg !7716
  %or = or i64 %and, -4, !dbg !7717
  %5 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7718, !tbaa !1975
  %gc2 = bitcast %union._gc_head* %5 to %struct.anon.0*, !dbg !7719
  %gc_refs3 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc2, i32 0, i32 2, !dbg !7720
  store i64 %or, i64* %gc_refs3, align 8, !dbg !7721, !tbaa !5967
  br label %do.cond, !dbg !7722

do.cond:                                          ; preds = %do.body.1
  br label %do.end, !dbg !7723

do.end:                                           ; preds = %do.cond
  %6 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7725, !tbaa !1975
  %gc4 = bitcast %union._gc_head* %6 to %struct.anon.0*, !dbg !7727
  %gc_next = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc4, i32 0, i32 0, !dbg !7728
  %7 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !7728, !tbaa !5982
  %8 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7729, !tbaa !1975
  %gc5 = bitcast %union._gc_head* %8 to %struct.anon.0*, !dbg !7730
  %gc_prev = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc5, i32 0, i32 1, !dbg !7731
  %9 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !7731, !tbaa !5986
  %gc6 = bitcast %union._gc_head* %9 to %struct.anon.0*, !dbg !7732
  %gc_next7 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc6, i32 0, i32 0, !dbg !7733
  store %union._gc_head* %7, %union._gc_head** %gc_next7, align 8, !dbg !7734, !tbaa !5982
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7735, !tbaa !1975
  %gc8 = bitcast %union._gc_head* %10 to %struct.anon.0*, !dbg !7736
  %gc_prev9 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc8, i32 0, i32 1, !dbg !7737
  %11 = load %union._gc_head*, %union._gc_head** %gc_prev9, align 8, !dbg !7737, !tbaa !5986
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7738, !tbaa !1975
  %gc10 = bitcast %union._gc_head* %12 to %struct.anon.0*, !dbg !7739
  %gc_next11 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc10, i32 0, i32 0, !dbg !7740
  %13 = load %union._gc_head*, %union._gc_head** %gc_next11, align 8, !dbg !7740, !tbaa !5982
  %gc12 = bitcast %union._gc_head* %13 to %struct.anon.0*, !dbg !7741
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc12, i32 0, i32 1, !dbg !7742
  store %union._gc_head* %11, %union._gc_head** %gc_prev13, align 8, !dbg !7743, !tbaa !5986
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !7744, !tbaa !1975
  %gc14 = bitcast %union._gc_head* %14 to %struct.anon.0*, !dbg !7745
  %gc_next15 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc14, i32 0, i32 0, !dbg !7746
  store %union._gc_head* null, %union._gc_head** %gc_next15, align 8, !dbg !7747, !tbaa !5982
  %15 = bitcast %union._gc_head** %g to i8*, !dbg !7748
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !7748
  br label %do.end.17, !dbg !7749

do.end.17:                                        ; preds = %do.end
  %16 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7750, !tbaa !1975
  %call = call i32 @OSError_clear(%struct.PyOSErrorObject* %16), !dbg !7751
  %17 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7752, !tbaa !1975
  %18 = bitcast %struct.PyOSErrorObject* %17 to %struct._object*, !dbg !7753
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !7754
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7754, !tbaa !2039
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 38, !dbg !7755
  %20 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !7755, !tbaa !5662
  %21 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7756, !tbaa !1975
  %22 = bitcast %struct.PyOSErrorObject* %21 to %struct._object*, !dbg !7757
  %23 = bitcast %struct._object* %22 to i8*, !dbg !7757
  call void %20(i8* %23), !dbg !7758
  ret void, !dbg !7759
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @OSError_str(%struct.PyOSErrorObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyOSErrorObject*, align 8
  store %struct.PyOSErrorObject* %self, %struct.PyOSErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %self.addr, metadata !1209, metadata !1979), !dbg !7760
  %0 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7761, !tbaa !1975
  %filename = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %0, i32 0, i32 9, !dbg !7763
  %1 = load %struct._object*, %struct._object** %filename, align 8, !dbg !7763, !tbaa !7764
  %tobool = icmp ne %struct._object* %1, null, !dbg !7761
  br i1 %tobool, label %if.then, label %if.end, !dbg !7766

if.then:                                          ; preds = %entry
  %2 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7767, !tbaa !1975
  %filename2 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %2, i32 0, i32 10, !dbg !7770
  %3 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !7770, !tbaa !7771
  %tobool1 = icmp ne %struct._object* %3, null, !dbg !7767
  br i1 %tobool1, label %if.then.2, label %if.else, !dbg !7772

if.then.2:                                        ; preds = %if.then
  %4 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7773, !tbaa !1975
  %myerrno = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %4, i32 0, i32 7, !dbg !7775
  %5 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !7775, !tbaa !7776
  %tobool3 = icmp ne %struct._object* %5, null, !dbg !7777
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !7777

cond.true:                                        ; preds = %if.then.2
  %6 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7778, !tbaa !1975
  %myerrno4 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %6, i32 0, i32 7, !dbg !7780
  %7 = load %struct._object*, %struct._object** %myerrno4, align 8, !dbg !7780, !tbaa !7776
  br label %cond.end, !dbg !7777

cond.false:                                       ; preds = %if.then.2
  br label %cond.end, !dbg !7781

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %7, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !7777
  %8 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7783, !tbaa !1975
  %strerror = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %8, i32 0, i32 8, !dbg !7784
  %9 = load %struct._object*, %struct._object** %strerror, align 8, !dbg !7784, !tbaa !7785
  %tobool5 = icmp ne %struct._object* %9, null, !dbg !7786
  br i1 %tobool5, label %cond.true.6, label %cond.false.8, !dbg !7786

cond.true.6:                                      ; preds = %cond.end
  %10 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7787, !tbaa !1975
  %strerror7 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %10, i32 0, i32 8, !dbg !7788
  %11 = load %struct._object*, %struct._object** %strerror7, align 8, !dbg !7788, !tbaa !7785
  br label %cond.end.9, !dbg !7786

cond.false.8:                                     ; preds = %cond.end
  br label %cond.end.9, !dbg !7789

cond.end.9:                                       ; preds = %cond.false.8, %cond.true.6
  %cond10 = phi %struct._object* [ %11, %cond.true.6 ], [ @_Py_NoneStruct, %cond.false.8 ], !dbg !7786
  %12 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7790, !tbaa !1975
  %filename11 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %12, i32 0, i32 9, !dbg !7791
  %13 = load %struct._object*, %struct._object** %filename11, align 8, !dbg !7791, !tbaa !7764
  %14 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7792, !tbaa !1975
  %filename212 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %14, i32 0, i32 10, !dbg !7793
  %15 = load %struct._object*, %struct._object** %filename212, align 8, !dbg !7793, !tbaa !7771
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.120, i32 0, i32 0), %struct._object* %cond, %struct._object* %cond10, %struct._object* %13, %struct._object* %15), !dbg !7794
  store %struct._object* %call, %struct._object** %retval, !dbg !7795
  br label %return, !dbg !7795

if.else:                                          ; preds = %if.then
  %16 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7796, !tbaa !1975
  %myerrno13 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %16, i32 0, i32 7, !dbg !7798
  %17 = load %struct._object*, %struct._object** %myerrno13, align 8, !dbg !7798, !tbaa !7776
  %tobool14 = icmp ne %struct._object* %17, null, !dbg !7799
  br i1 %tobool14, label %cond.true.15, label %cond.false.17, !dbg !7799

cond.true.15:                                     ; preds = %if.else
  %18 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7800, !tbaa !1975
  %myerrno16 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %18, i32 0, i32 7, !dbg !7802
  %19 = load %struct._object*, %struct._object** %myerrno16, align 8, !dbg !7802, !tbaa !7776
  br label %cond.end.18, !dbg !7799

cond.false.17:                                    ; preds = %if.else
  br label %cond.end.18, !dbg !7803

cond.end.18:                                      ; preds = %cond.false.17, %cond.true.15
  %cond19 = phi %struct._object* [ %19, %cond.true.15 ], [ @_Py_NoneStruct, %cond.false.17 ], !dbg !7799
  %20 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7805, !tbaa !1975
  %strerror20 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %20, i32 0, i32 8, !dbg !7806
  %21 = load %struct._object*, %struct._object** %strerror20, align 8, !dbg !7806, !tbaa !7785
  %tobool21 = icmp ne %struct._object* %21, null, !dbg !7807
  br i1 %tobool21, label %cond.true.22, label %cond.false.24, !dbg !7807

cond.true.22:                                     ; preds = %cond.end.18
  %22 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7808, !tbaa !1975
  %strerror23 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %22, i32 0, i32 8, !dbg !7809
  %23 = load %struct._object*, %struct._object** %strerror23, align 8, !dbg !7809, !tbaa !7785
  br label %cond.end.25, !dbg !7807

cond.false.24:                                    ; preds = %cond.end.18
  br label %cond.end.25, !dbg !7810

cond.end.25:                                      ; preds = %cond.false.24, %cond.true.22
  %cond26 = phi %struct._object* [ %23, %cond.true.22 ], [ @_Py_NoneStruct, %cond.false.24 ], !dbg !7807
  %24 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7811, !tbaa !1975
  %filename27 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %24, i32 0, i32 9, !dbg !7812
  %25 = load %struct._object*, %struct._object** %filename27, align 8, !dbg !7812, !tbaa !7764
  %call28 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.121, i32 0, i32 0), %struct._object* %cond19, %struct._object* %cond26, %struct._object* %25), !dbg !7813
  store %struct._object* %call28, %struct._object** %retval, !dbg !7814
  br label %return, !dbg !7814

if.end:                                           ; preds = %entry
  %26 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7815, !tbaa !1975
  %myerrno29 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %26, i32 0, i32 7, !dbg !7817
  %27 = load %struct._object*, %struct._object** %myerrno29, align 8, !dbg !7817, !tbaa !7776
  %tobool30 = icmp ne %struct._object* %27, null, !dbg !7815
  br i1 %tobool30, label %land.lhs.true, label %if.end.49, !dbg !7818

land.lhs.true:                                    ; preds = %if.end
  %28 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7819, !tbaa !1975
  %strerror31 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %28, i32 0, i32 8, !dbg !7821
  %29 = load %struct._object*, %struct._object** %strerror31, align 8, !dbg !7821, !tbaa !7785
  %tobool32 = icmp ne %struct._object* %29, null, !dbg !7822
  br i1 %tobool32, label %if.then.33, label %if.end.49, !dbg !7823

if.then.33:                                       ; preds = %land.lhs.true
  %30 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7824, !tbaa !1975
  %myerrno34 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %30, i32 0, i32 7, !dbg !7825
  %31 = load %struct._object*, %struct._object** %myerrno34, align 8, !dbg !7825, !tbaa !7776
  %tobool35 = icmp ne %struct._object* %31, null, !dbg !7824
  br i1 %tobool35, label %cond.true.36, label %cond.false.38, !dbg !7824

cond.true.36:                                     ; preds = %if.then.33
  %32 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7826, !tbaa !1975
  %myerrno37 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %32, i32 0, i32 7, !dbg !7827
  %33 = load %struct._object*, %struct._object** %myerrno37, align 8, !dbg !7827, !tbaa !7776
  br label %cond.end.39, !dbg !7824

cond.false.38:                                    ; preds = %if.then.33
  br label %cond.end.39, !dbg !7828

cond.end.39:                                      ; preds = %cond.false.38, %cond.true.36
  %cond40 = phi %struct._object* [ %33, %cond.true.36 ], [ @_Py_NoneStruct, %cond.false.38 ], !dbg !7824
  %34 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7830, !tbaa !1975
  %strerror41 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %34, i32 0, i32 8, !dbg !7831
  %35 = load %struct._object*, %struct._object** %strerror41, align 8, !dbg !7831, !tbaa !7785
  %tobool42 = icmp ne %struct._object* %35, null, !dbg !7830
  br i1 %tobool42, label %cond.true.43, label %cond.false.45, !dbg !7830

cond.true.43:                                     ; preds = %cond.end.39
  %36 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7832, !tbaa !1975
  %strerror44 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %36, i32 0, i32 8, !dbg !7833
  %37 = load %struct._object*, %struct._object** %strerror44, align 8, !dbg !7833, !tbaa !7785
  br label %cond.end.46, !dbg !7830

cond.false.45:                                    ; preds = %cond.end.39
  br label %cond.end.46, !dbg !7834

cond.end.46:                                      ; preds = %cond.false.45, %cond.true.43
  %cond47 = phi %struct._object* [ %37, %cond.true.43 ], [ @_Py_NoneStruct, %cond.false.45 ], !dbg !7830
  %call48 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.122, i32 0, i32 0), %struct._object* %cond40, %struct._object* %cond47), !dbg !7835
  store %struct._object* %call48, %struct._object** %retval, !dbg !7836
  br label %return, !dbg !7836

if.end.49:                                        ; preds = %land.lhs.true, %if.end
  %38 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7837, !tbaa !1975
  %39 = bitcast %struct.PyOSErrorObject* %38 to %struct.PyBaseExceptionObject*, !dbg !7838
  %call50 = call %struct._object* @BaseException_str(%struct.PyBaseExceptionObject* %39), !dbg !7839
  store %struct._object* %call50, %struct._object** %retval, !dbg !7840
  br label %return, !dbg !7840

return:                                           ; preds = %if.end.49, %cond.end.46, %cond.end.25, %cond.end.9
  %40 = load %struct._object*, %struct._object** %retval, !dbg !7841
  ret %struct._object* %40, !dbg !7841
}

; Function Attrs: nounwind uwtable
define internal i32 @OSError_traverse(%struct.PyOSErrorObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyOSErrorObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  %vret36 = alloca i32, align 4
  store %struct.PyOSErrorObject* %self, %struct.PyOSErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %self.addr, metadata !1214, metadata !1979), !dbg !7842
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1215, metadata !1979), !dbg !7843
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1216, metadata !1979), !dbg !7844
  br label %do.body, !dbg !7845

do.body:                                          ; preds = %entry
  %0 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7846, !tbaa !1975
  %myerrno = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %0, i32 0, i32 7, !dbg !7848
  %1 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !7848, !tbaa !7776
  %tobool = icmp ne %struct._object* %1, null, !dbg !7849
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !7850

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !7851
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !7851
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1217, metadata !1979), !dbg !7853
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7854, !tbaa !1975
  %4 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7855, !tbaa !1975
  %myerrno1 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %4, i32 0, i32 7, !dbg !7856
  %5 = load %struct._object*, %struct._object** %myerrno1, align 8, !dbg !7856, !tbaa !7776
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !7857, !tbaa !1975
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !7854
  store i32 %call, i32* %vret, align 4, !dbg !7853, !tbaa !5355
  %7 = load i32, i32* %vret, align 4, !dbg !7858, !tbaa !5355
  %tobool2 = icmp ne i32 %7, 0, !dbg !7858
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !7860

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !7861, !tbaa !5355
  store i32 %8, i32* %retval, !dbg !7863
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7863

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !7864
  br label %cleanup, !dbg !7864

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !7866
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !7866
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !7869

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !7870

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !7873

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7874, !tbaa !1975
  %strerror = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %10, i32 0, i32 8, !dbg !7876
  %11 = load %struct._object*, %struct._object** %strerror, align 8, !dbg !7876, !tbaa !7785
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !7877
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !7878

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !7879
  call void @llvm.lifetime.start(i64 4, i8* %12) #2, !dbg !7879
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1221, metadata !1979), !dbg !7881
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7882, !tbaa !1975
  %14 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7883, !tbaa !1975
  %strerror9 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %14, i32 0, i32 8, !dbg !7884
  %15 = load %struct._object*, %struct._object** %strerror9, align 8, !dbg !7884, !tbaa !7785
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !7885, !tbaa !1975
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !7882
  store i32 %call10, i32* %vret8, align 4, !dbg !7881, !tbaa !5355
  %17 = load i32, i32* %vret8, align 4, !dbg !7886, !tbaa !5355
  %tobool11 = icmp ne i32 %17, 0, !dbg !7886
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !7888

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !7889, !tbaa !5355
  store i32 %18, i32* %retval, !dbg !7891
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !7891

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !7892
  br label %cleanup.14, !dbg !7892

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !7894
  call void @llvm.lifetime.end(i64 4, i8* %19) #2, !dbg !7894
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !7897

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !7898

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !7901

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7902, !tbaa !1975
  %filename = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %20, i32 0, i32 9, !dbg !7904
  %21 = load %struct._object*, %struct._object** %filename, align 8, !dbg !7904, !tbaa !7764
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !7905
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !7906

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !7907
  call void @llvm.lifetime.start(i64 4, i8* %22) #2, !dbg !7907
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !1225, metadata !1979), !dbg !7909
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7910, !tbaa !1975
  %24 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7911, !tbaa !1975
  %filename23 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %24, i32 0, i32 9, !dbg !7912
  %25 = load %struct._object*, %struct._object** %filename23, align 8, !dbg !7912, !tbaa !7764
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !7913, !tbaa !1975
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !7910
  store i32 %call24, i32* %vret22, align 4, !dbg !7909, !tbaa !5355
  %27 = load i32, i32* %vret22, align 4, !dbg !7914, !tbaa !5355
  %tobool25 = icmp ne i32 %27, 0, !dbg !7914
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !7916

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !7917, !tbaa !5355
  store i32 %28, i32* %retval, !dbg !7919
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !7919

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !7920
  br label %cleanup.28, !dbg !7920

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !7922
  call void @llvm.lifetime.end(i64 4, i8* %29) #2, !dbg !7922
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.5

LeafBlock.5:                                      ; preds = %cleanup.28
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest.29, 1
  br i1 %SwitchLeaf6, label %return, label %NewDefault.4

NewDefault.4:                                     ; preds = %LeafBlock.5
  br label %cleanup.cont.30

cleanup.cont.30:                                  ; preds = %NewDefault.4
  br label %if.end.31, !dbg !7925

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !7926

do.end.32:                                        ; preds = %if.end.31
  br label %do.body.33, !dbg !7929

do.body.33:                                       ; preds = %do.end.32
  %30 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7930, !tbaa !1975
  %filename2 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %30, i32 0, i32 10, !dbg !7932
  %31 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !7932, !tbaa !7771
  %tobool34 = icmp ne %struct._object* %31, null, !dbg !7933
  br i1 %tobool34, label %if.then.35, label %if.end.45, !dbg !7934

if.then.35:                                       ; preds = %do.body.33
  %32 = bitcast i32* %vret36 to i8*, !dbg !7935
  call void @llvm.lifetime.start(i64 4, i8* %32) #2, !dbg !7935
  call void @llvm.dbg.declare(metadata i32* %vret36, metadata !1229, metadata !1979), !dbg !7937
  %33 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7938, !tbaa !1975
  %34 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7939, !tbaa !1975
  %filename237 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %34, i32 0, i32 10, !dbg !7940
  %35 = load %struct._object*, %struct._object** %filename237, align 8, !dbg !7940, !tbaa !7771
  %36 = load i8*, i8** %arg.addr, align 8, !dbg !7941, !tbaa !1975
  %call38 = call i32 %33(%struct._object* %35, i8* %36), !dbg !7938
  store i32 %call38, i32* %vret36, align 4, !dbg !7937, !tbaa !5355
  %37 = load i32, i32* %vret36, align 4, !dbg !7942, !tbaa !5355
  %tobool39 = icmp ne i32 %37, 0, !dbg !7942
  br i1 %tobool39, label %if.then.40, label %if.end.41, !dbg !7944

if.then.40:                                       ; preds = %if.then.35
  %38 = load i32, i32* %vret36, align 4, !dbg !7945, !tbaa !5355
  store i32 %38, i32* %retval, !dbg !7947
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.42, !dbg !7947

if.end.41:                                        ; preds = %if.then.35
  store i32 0, i32* %cleanup.dest.slot, !dbg !7948
  br label %cleanup.42, !dbg !7948

cleanup.42:                                       ; preds = %if.end.41, %if.then.40
  %39 = bitcast i32* %vret36 to i8*, !dbg !7950
  call void @llvm.lifetime.end(i64 4, i8* %39) #2, !dbg !7950
  %cleanup.dest.43 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.8

LeafBlock.8:                                      ; preds = %cleanup.42
  %SwitchLeaf9 = icmp eq i32 %cleanup.dest.43, 1
  br i1 %SwitchLeaf9, label %return, label %NewDefault.7

NewDefault.7:                                     ; preds = %LeafBlock.8
  br label %cleanup.cont.44

cleanup.cont.44:                                  ; preds = %NewDefault.7
  br label %if.end.45, !dbg !7953

if.end.45:                                        ; preds = %cleanup.cont.44, %do.body.33
  br label %do.end.46, !dbg !7954

do.end.46:                                        ; preds = %if.end.45
  %40 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7957, !tbaa !1975
  %41 = bitcast %struct.PyOSErrorObject* %40 to %struct.PyBaseExceptionObject*, !dbg !7958
  %42 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7959, !tbaa !1975
  %43 = load i8*, i8** %arg.addr, align 8, !dbg !7960, !tbaa !1975
  %call47 = call i32 @BaseException_traverse(%struct.PyBaseExceptionObject* %41, i32 (%struct._object*, i8*)* %42, i8* %43), !dbg !7961
  store i32 %call47, i32* %retval, !dbg !7962
  br label %return, !dbg !7962

return:                                           ; preds = %LeafBlock.8, %LeafBlock.5, %LeafBlock.2, %LeafBlock, %do.end.46
  %44 = load i32, i32* %retval, !dbg !7963
  ret i32 %44, !dbg !7963
}

; Function Attrs: nounwind uwtable
define internal i32 @OSError_clear(%struct.PyOSErrorObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyOSErrorObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  store %struct.PyOSErrorObject* %self, %struct.PyOSErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %self.addr, metadata !1237, metadata !1979), !dbg !7964
  br label %do.body, !dbg !7965

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7966
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7966
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1238, metadata !1979), !dbg !7968
  %1 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7969, !tbaa !1975
  %myerrno = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %1, i32 0, i32 7, !dbg !7970
  %2 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !7970, !tbaa !7776
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !7968, !tbaa !1975
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7971, !tbaa !1975
  %cmp = icmp ne %struct._object* %3, null, !dbg !7972
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !7973

if.then:                                          ; preds = %do.body
  %4 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !7974, !tbaa !1975
  %myerrno1 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %4, i32 0, i32 7, !dbg !7976
  store %struct._object* null, %struct._object** %myerrno1, align 8, !dbg !7977, !tbaa !7776
  br label %do.body.2, !dbg !7978

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7979
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !7979
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1240, metadata !1979), !dbg !7981
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7982, !tbaa !1975
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !7981, !tbaa !1975
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7983, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !7985
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !7986, !tbaa !2003
  %dec = add i64 %8, -1, !dbg !7986
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7986, !tbaa !2003
  %cmp3 = icmp ne i64 %dec, 0, !dbg !7987
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !7988

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !7989

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7991, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !7993
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7993, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !7994
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7994, !tbaa !2091
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7995, !tbaa !1975
  call void %11(%struct._object* %12), !dbg !7996
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7997
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !7997
  br label %do.cond, !dbg !7999

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !8000

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !8002

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8004
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !8004
  br label %do.end.7, !dbg !8007

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !8008

do.body.8:                                        ; preds = %do.end.7
  %15 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !8009
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !8009
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !1244, metadata !1979), !dbg !8011
  %16 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8012, !tbaa !1975
  %strerror = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %16, i32 0, i32 8, !dbg !8013
  %17 = load %struct._object*, %struct._object** %strerror, align 8, !dbg !8013, !tbaa !7785
  store %struct._object* %17, %struct._object** %_py_tmp9, align 8, !dbg !8011, !tbaa !1975
  %18 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !8014, !tbaa !1975
  %cmp10 = icmp ne %struct._object* %18, null, !dbg !8015
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !8016

if.then.11:                                       ; preds = %do.body.8
  %19 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8017, !tbaa !1975
  %strerror12 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %19, i32 0, i32 8, !dbg !8019
  store %struct._object* null, %struct._object** %strerror12, align 8, !dbg !8020, !tbaa !7785
  br label %do.body.13, !dbg !8021

do.body.13:                                       ; preds = %if.then.11
  %20 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !8022
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !8022
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !1246, metadata !1979), !dbg !8024
  %21 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !8025, !tbaa !1975
  store %struct._object* %21, %struct._object** %_py_decref_tmp14, align 8, !dbg !8024, !tbaa !1975
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !8026, !tbaa !1975
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !8028
  %23 = load i64, i64* %ob_refcnt15, align 8, !dbg !8029, !tbaa !2003
  %dec16 = add i64 %23, -1, !dbg !8029
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !8029, !tbaa !2003
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !8030
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !8031

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !8032

if.else.19:                                       ; preds = %do.body.13
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !8034, !tbaa !1975
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !8036
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !8036, !tbaa !2039
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !8037
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !8037, !tbaa !2091
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !8038, !tbaa !1975
  call void %26(%struct._object* %27), !dbg !8039
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %28 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !8040
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !8040
  br label %do.cond.23, !dbg !8042

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !8043

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !8045

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %29 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !8047
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !8047
  br label %do.end.27, !dbg !8048

do.end.27:                                        ; preds = %if.end.25
  br label %do.body.28, !dbg !8049

do.body.28:                                       ; preds = %do.end.27
  %30 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !8050
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !8050
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !1250, metadata !1979), !dbg !8052
  %31 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8053, !tbaa !1975
  %filename = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %31, i32 0, i32 9, !dbg !8054
  %32 = load %struct._object*, %struct._object** %filename, align 8, !dbg !8054, !tbaa !7764
  store %struct._object* %32, %struct._object** %_py_tmp29, align 8, !dbg !8052, !tbaa !1975
  %33 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !8055, !tbaa !1975
  %cmp30 = icmp ne %struct._object* %33, null, !dbg !8056
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !8057

if.then.31:                                       ; preds = %do.body.28
  %34 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8058, !tbaa !1975
  %filename32 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %34, i32 0, i32 9, !dbg !8060
  store %struct._object* null, %struct._object** %filename32, align 8, !dbg !8061, !tbaa !7764
  br label %do.body.33, !dbg !8062

do.body.33:                                       ; preds = %if.then.31
  %35 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !8063
  call void @llvm.lifetime.start(i64 8, i8* %35) #2, !dbg !8063
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !1252, metadata !1979), !dbg !8065
  %36 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !8066, !tbaa !1975
  store %struct._object* %36, %struct._object** %_py_decref_tmp34, align 8, !dbg !8065, !tbaa !1975
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !8067, !tbaa !1975
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !8069
  %38 = load i64, i64* %ob_refcnt35, align 8, !dbg !8070, !tbaa !2003
  %dec36 = add i64 %38, -1, !dbg !8070
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !8070, !tbaa !2003
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !8071
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !8072

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !8073

if.else.39:                                       ; preds = %do.body.33
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !8075, !tbaa !1975
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !8077
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !8077, !tbaa !2039
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !8078
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !8078, !tbaa !2091
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !8079, !tbaa !1975
  call void %41(%struct._object* %42), !dbg !8080
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %43 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !8081
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !8081
  br label %do.cond.43, !dbg !8083

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !8084

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !8086

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %44 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !8088
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !8088
  br label %do.end.47, !dbg !8089

do.end.47:                                        ; preds = %if.end.45
  br label %do.body.48, !dbg !8090

do.body.48:                                       ; preds = %do.end.47
  %45 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !8091
  call void @llvm.lifetime.start(i64 8, i8* %45) #2, !dbg !8091
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp49, metadata !1256, metadata !1979), !dbg !8093
  %46 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8094, !tbaa !1975
  %filename2 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %46, i32 0, i32 10, !dbg !8095
  %47 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !8095, !tbaa !7771
  store %struct._object* %47, %struct._object** %_py_tmp49, align 8, !dbg !8093, !tbaa !1975
  %48 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !8096, !tbaa !1975
  %cmp50 = icmp ne %struct._object* %48, null, !dbg !8097
  br i1 %cmp50, label %if.then.51, label %if.end.65, !dbg !8098

if.then.51:                                       ; preds = %do.body.48
  %49 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8099, !tbaa !1975
  %filename252 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %49, i32 0, i32 10, !dbg !8101
  store %struct._object* null, %struct._object** %filename252, align 8, !dbg !8102, !tbaa !7771
  br label %do.body.53, !dbg !8103

do.body.53:                                       ; preds = %if.then.51
  %50 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !8104
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !8104
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp54, metadata !1258, metadata !1979), !dbg !8106
  %51 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !8107, !tbaa !1975
  store %struct._object* %51, %struct._object** %_py_decref_tmp54, align 8, !dbg !8106, !tbaa !1975
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !8108, !tbaa !1975
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !8110
  %53 = load i64, i64* %ob_refcnt55, align 8, !dbg !8111, !tbaa !2003
  %dec56 = add i64 %53, -1, !dbg !8111
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !8111, !tbaa !2003
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !8112
  br i1 %cmp57, label %if.then.58, label %if.else.59, !dbg !8113

if.then.58:                                       ; preds = %do.body.53
  br label %if.end.62, !dbg !8114

if.else.59:                                       ; preds = %do.body.53
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !8116, !tbaa !1975
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !8118
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !8118, !tbaa !2039
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !8119
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !8119, !tbaa !2091
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !8120, !tbaa !1975
  call void %56(%struct._object* %57), !dbg !8121
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  %58 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !8122
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !8122
  br label %do.cond.63, !dbg !8124

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !8125

do.end.64:                                        ; preds = %do.cond.63
  br label %if.end.65, !dbg !8127

if.end.65:                                        ; preds = %do.end.64, %do.body.48
  %59 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !8129
  call void @llvm.lifetime.end(i64 8, i8* %59) #2, !dbg !8129
  br label %do.end.67, !dbg !8130

do.end.67:                                        ; preds = %if.end.65
  %60 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8131, !tbaa !1975
  %61 = bitcast %struct.PyOSErrorObject* %60 to %struct.PyBaseExceptionObject*, !dbg !8132
  %call = call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %61), !dbg !8133
  ret i32 %call, !dbg !8134
}

; Function Attrs: nounwind uwtable
define internal i32 @OSError_init(%struct.PyOSErrorObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyOSErrorObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %myerrno = alloca %struct._object*, align 8
  %strerror = alloca %struct._object*, align 8
  %filename = alloca %struct._object*, align 8
  %filename2 = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyOSErrorObject* %self, %struct.PyOSErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %self.addr, metadata !1291, metadata !1979), !dbg !8135
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1292, metadata !1979), !dbg !8136
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1293, metadata !1979), !dbg !8137
  %0 = bitcast %struct._object** %myerrno to i8*, !dbg !8138
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8138
  call void @llvm.dbg.declare(metadata %struct._object** %myerrno, metadata !1294, metadata !1979), !dbg !8139
  store %struct._object* null, %struct._object** %myerrno, align 8, !dbg !8139, !tbaa !1975
  %1 = bitcast %struct._object** %strerror to i8*, !dbg !8138
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8138
  call void @llvm.dbg.declare(metadata %struct._object** %strerror, metadata !1295, metadata !1979), !dbg !8140
  store %struct._object* null, %struct._object** %strerror, align 8, !dbg !8140, !tbaa !1975
  %2 = bitcast %struct._object** %filename to i8*, !dbg !8141
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8141
  call void @llvm.dbg.declare(metadata %struct._object** %filename, metadata !1296, metadata !1979), !dbg !8142
  store %struct._object* null, %struct._object** %filename, align 8, !dbg !8142, !tbaa !1975
  %3 = bitcast %struct._object** %filename2 to i8*, !dbg !8141
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8141
  call void @llvm.dbg.declare(metadata %struct._object** %filename2, metadata !1297, metadata !1979), !dbg !8143
  store %struct._object* null, %struct._object** %filename2, align 8, !dbg !8143, !tbaa !1975
  %4 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8144, !tbaa !1975
  %5 = bitcast %struct.PyOSErrorObject* %4 to %struct._object*, !dbg !8146
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !8147
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8147, !tbaa !2039
  %call = call i32 @oserror_use_init(%struct._typeobject* %6), !dbg !8148
  %tobool = icmp ne i32 %call, 0, !dbg !8148
  br i1 %tobool, label %if.end, label %if.then, !dbg !8149

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !8150
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8150

if.end:                                           ; preds = %entry
  %7 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8151, !tbaa !1975
  %8 = bitcast %struct.PyOSErrorObject* %7 to %struct._object*, !dbg !8153
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !8154
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !8154, !tbaa !2039
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 1, !dbg !8155
  %10 = load i8*, i8** %tp_name, align 8, !dbg !8155, !tbaa !5507
  %11 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !8156, !tbaa !1975
  %call2 = call i32 @_PyArg_NoKeywords(i8* %10, %struct._object* %11), !dbg !8157
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8157
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !8158

if.then.4:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !8159
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8159

if.end.5:                                         ; preds = %if.end
  %12 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8160, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !8161
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !8162, !tbaa !2003
  %inc = add i64 %13, 1, !dbg !8162
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8162, !tbaa !2003
  %call6 = call i32 @oserror_parse_args(%struct._object** %args.addr, %struct._object** %myerrno, %struct._object** %strerror, %struct._object** %filename, %struct._object** %filename2), !dbg !8163
  %tobool7 = icmp ne i32 %call6, 0, !dbg !8163
  br i1 %tobool7, label %if.then.8, label %if.end.9, !dbg !8165

if.then.8:                                        ; preds = %if.end.5
  br label %error, !dbg !8166

if.end.9:                                         ; preds = %if.end.5
  %14 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8167, !tbaa !1975
  %15 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !8169, !tbaa !1975
  %16 = load %struct._object*, %struct._object** %strerror, align 8, !dbg !8170, !tbaa !1975
  %17 = load %struct._object*, %struct._object** %filename, align 8, !dbg !8171, !tbaa !1975
  %18 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !8172, !tbaa !1975
  %call10 = call i32 @oserror_init(%struct.PyOSErrorObject* %14, %struct._object** %args.addr, %struct._object* %15, %struct._object* %16, %struct._object* %17, %struct._object* %18), !dbg !8173
  %tobool11 = icmp ne i32 %call10, 0, !dbg !8173
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !8174

if.then.12:                                       ; preds = %if.end.9
  br label %error, !dbg !8175

if.end.13:                                        ; preds = %if.end.9
  store i32 0, i32* %retval, !dbg !8176
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8176

error:                                            ; preds = %if.then.12, %if.then.8
  br label %do.body, !dbg !8177

do.body:                                          ; preds = %error
  %19 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8178
  call void @llvm.lifetime.start(i64 8, i8* %19) #2, !dbg !8178
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1298, metadata !1979), !dbg !8180
  %20 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8181, !tbaa !1975
  store %struct._object* %20, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8180, !tbaa !1975
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8182, !tbaa !1975
  %cmp = icmp ne %struct._object* %21, null, !dbg !8183
  br i1 %cmp, label %if.then.14, label %if.end.21, !dbg !8184

if.then.14:                                       ; preds = %do.body
  br label %do.body.15, !dbg !8185

do.body.15:                                       ; preds = %if.then.14
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8187
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !8187
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1300, metadata !1979), !dbg !8189
  %23 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8190, !tbaa !1975
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8, !dbg !8189, !tbaa !1975
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8191, !tbaa !1975
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !8193
  %25 = load i64, i64* %ob_refcnt16, align 8, !dbg !8194, !tbaa !2003
  %dec = add i64 %25, -1, !dbg !8194
  store i64 %dec, i64* %ob_refcnt16, align 8, !dbg !8194, !tbaa !2003
  %cmp17 = icmp ne i64 %dec, 0, !dbg !8195
  br i1 %cmp17, label %if.then.18, label %if.else, !dbg !8196

if.then.18:                                       ; preds = %do.body.15
  br label %if.end.20, !dbg !8197

if.else:                                          ; preds = %do.body.15
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8199, !tbaa !1975
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !8201
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !8201, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !8202
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8202, !tbaa !2091
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8203, !tbaa !1975
  call void %28(%struct._object* %29), !dbg !8204
  br label %if.end.20

if.end.20:                                        ; preds = %if.else, %if.then.18
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8205
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !8205
  br label %do.cond, !dbg !8207

do.cond:                                          ; preds = %if.end.20
  br label %do.end, !dbg !8208

do.end:                                           ; preds = %do.cond
  br label %if.end.21, !dbg !8210

if.end.21:                                        ; preds = %do.end, %do.body
  %31 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8212
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !8212
  br label %do.cond.22, !dbg !8215

do.cond.22:                                       ; preds = %if.end.21
  br label %do.end.23, !dbg !8216

do.end.23:                                        ; preds = %do.cond.22
  store i32 -1, i32* %retval, !dbg !8218
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8218

cleanup:                                          ; preds = %do.end.23, %if.end.13, %if.then.4, %if.then
  %32 = bitcast %struct._object** %filename2 to i8*, !dbg !8219
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !8219
  %33 = bitcast %struct._object** %filename to i8*, !dbg !8219
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !8219
  %34 = bitcast %struct._object** %strerror to i8*, !dbg !8219
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !8219
  %35 = bitcast %struct._object** %myerrno to i8*, !dbg !8219
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !8219
  %36 = load i32, i32* %retval, !dbg !8219
  ret i32 %36, !dbg !8219
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @OSError_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %self = alloca %struct.PyOSErrorObject*, align 8
  %myerrno = alloca %struct._object*, align 8
  %strerror = alloca %struct._object*, align 8
  %filename = alloca %struct._object*, align 8
  %filename2 = alloca %struct._object*, align 8
  %newtype = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp56 = alloca %struct._object*, align 8
  %_py_decref_tmp60 = alloca %struct._object*, align 8
  %_py_xdecref_tmp75 = alloca %struct._object*, align 8
  %_py_decref_tmp79 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1356, metadata !1979), !dbg !8220
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1357, metadata !1979), !dbg !8221
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1358, metadata !1979), !dbg !8222
  %0 = bitcast %struct.PyOSErrorObject** %self to i8*, !dbg !8223
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8223
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %self, metadata !1359, metadata !1979), !dbg !8224
  store %struct.PyOSErrorObject* null, %struct.PyOSErrorObject** %self, align 8, !dbg !8224, !tbaa !1975
  %1 = bitcast %struct._object** %myerrno to i8*, !dbg !8225
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8225
  call void @llvm.dbg.declare(metadata %struct._object** %myerrno, metadata !1360, metadata !1979), !dbg !8226
  store %struct._object* null, %struct._object** %myerrno, align 8, !dbg !8226, !tbaa !1975
  %2 = bitcast %struct._object** %strerror to i8*, !dbg !8225
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8225
  call void @llvm.dbg.declare(metadata %struct._object** %strerror, metadata !1361, metadata !1979), !dbg !8227
  store %struct._object* null, %struct._object** %strerror, align 8, !dbg !8227, !tbaa !1975
  %3 = bitcast %struct._object** %filename to i8*, !dbg !8228
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8228
  call void @llvm.dbg.declare(metadata %struct._object** %filename, metadata !1362, metadata !1979), !dbg !8229
  store %struct._object* null, %struct._object** %filename, align 8, !dbg !8229, !tbaa !1975
  %4 = bitcast %struct._object** %filename2 to i8*, !dbg !8228
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !8228
  call void @llvm.dbg.declare(metadata %struct._object** %filename2, metadata !1363, metadata !1979), !dbg !8230
  store %struct._object* null, %struct._object** %filename2, align 8, !dbg !8230, !tbaa !1975
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8231, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !8232
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !8233, !tbaa !2003
  %inc = add i64 %6, 1, !dbg !8233
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8233, !tbaa !2003
  %7 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8234, !tbaa !1975
  %call = call i32 @oserror_use_init(%struct._typeobject* %7), !dbg !8235
  %tobool = icmp ne i32 %call, 0, !dbg !8235
  br i1 %tobool, label %if.end.23, label %if.then, !dbg !8236

if.then:                                          ; preds = %entry
  %8 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8237, !tbaa !1975
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 1, !dbg !8239
  %9 = load i8*, i8** %tp_name, align 8, !dbg !8239, !tbaa !5507
  %10 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !8240, !tbaa !1975
  %call1 = call i32 @_PyArg_NoKeywords(i8* %9, %struct._object* %10), !dbg !8241
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8241
  br i1 %tobool2, label %if.end, label %if.then.3, !dbg !8242

if.then.3:                                        ; preds = %if.then
  br label %error, !dbg !8243

if.end:                                           ; preds = %if.then
  %call4 = call i32 @oserror_parse_args(%struct._object** %args.addr, %struct._object** %myerrno, %struct._object** %strerror, %struct._object** %filename, %struct._object** %filename2), !dbg !8244
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8244
  br i1 %tobool5, label %if.then.6, label %if.end.7, !dbg !8246

if.then.6:                                        ; preds = %if.end
  br label %error, !dbg !8247

if.end.7:                                         ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !8248, !tbaa !1975
  %tobool8 = icmp ne %struct._object* %11, null, !dbg !8248
  br i1 %tobool8, label %land.lhs.true, label %if.end.22, !dbg !8249

land.lhs.true:                                    ; preds = %if.end.7
  %12 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !8250, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !8252
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8252, !tbaa !2039
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 19, !dbg !8253
  %14 = load i64, i64* %tp_flags, align 8, !dbg !8253, !tbaa !2308
  %and = and i64 %14, 16777216, !dbg !8254
  %cmp = icmp ne i64 %and, 0, !dbg !8255
  br i1 %cmp, label %land.lhs.true.9, label %if.end.22, !dbg !8256

land.lhs.true.9:                                  ; preds = %land.lhs.true
  %15 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !8257, !tbaa !1975
  %tobool10 = icmp ne %struct._object* %15, null, !dbg !8257
  br i1 %tobool10, label %land.lhs.true.11, label %if.end.22, !dbg !8258

land.lhs.true.11:                                 ; preds = %land.lhs.true.9
  %16 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8259, !tbaa !1975
  %17 = bitcast %struct._typeobject* %16 to %struct._object*, !dbg !8260
  %18 = load %struct._object*, %struct._object** @PyExc_OSError, align 8, !dbg !8261, !tbaa !1975
  %cmp12 = icmp eq %struct._object* %17, %18, !dbg !8262
  br i1 %cmp12, label %if.then.13, label %if.end.22, !dbg !8263

if.then.13:                                       ; preds = %land.lhs.true.11
  %19 = bitcast %struct._object** %newtype to i8*, !dbg !8264
  call void @llvm.lifetime.start(i64 8, i8* %19) #2, !dbg !8264
  call void @llvm.dbg.declare(metadata %struct._object** %newtype, metadata !1364, metadata !1979), !dbg !8265
  %20 = load %struct._object*, %struct._object** @errnomap, align 8, !dbg !8266, !tbaa !1975
  %21 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !8267, !tbaa !1975
  %call14 = call %struct._object* @PyDict_GetItem(%struct._object* %20, %struct._object* %21), !dbg !8268
  store %struct._object* %call14, %struct._object** %newtype, align 8, !dbg !8269, !tbaa !1975
  %22 = load %struct._object*, %struct._object** %newtype, align 8, !dbg !8270, !tbaa !1975
  %tobool15 = icmp ne %struct._object* %22, null, !dbg !8270
  br i1 %tobool15, label %if.then.16, label %if.else, !dbg !8272

if.then.16:                                       ; preds = %if.then.13
  %23 = load %struct._object*, %struct._object** %newtype, align 8, !dbg !8273, !tbaa !1975
  %24 = bitcast %struct._object* %23 to %struct._typeobject*, !dbg !8275
  store %struct._typeobject* %24, %struct._typeobject** %type.addr, align 8, !dbg !8276, !tbaa !1975
  br label %if.end.21, !dbg !8277

if.else:                                          ; preds = %if.then.13
  %call17 = call %struct._object* @PyErr_Occurred(), !dbg !8278
  %tobool18 = icmp ne %struct._object* %call17, null, !dbg !8278
  br i1 %tobool18, label %if.then.19, label %if.end.20, !dbg !8280

if.then.19:                                       ; preds = %if.else
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8281

if.end.20:                                        ; preds = %if.else
  br label %if.end.21

if.end.21:                                        ; preds = %if.end.20, %if.then.16
  store i32 0, i32* %cleanup.dest.slot, !dbg !8282
  br label %cleanup, !dbg !8282

cleanup:                                          ; preds = %if.end.21, %if.then.19
  %25 = bitcast %struct._object** %newtype to i8*, !dbg !8283
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !8283
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %error, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.22, !dbg !8284

if.end.22:                                        ; preds = %cleanup.cont, %land.lhs.true.11, %land.lhs.true.9, %land.lhs.true, %if.end.7
  br label %if.end.23, !dbg !8285

if.end.23:                                        ; preds = %if.end.22, %entry
  %26 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8286, !tbaa !1975
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 36, !dbg !8287
  %27 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !8287, !tbaa !5421
  %28 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8288, !tbaa !1975
  %call24 = call %struct._object* %27(%struct._typeobject* %28, i64 0), !dbg !8286
  %29 = bitcast %struct._object* %call24 to %struct.PyOSErrorObject*, !dbg !8289
  store %struct.PyOSErrorObject* %29, %struct.PyOSErrorObject** %self, align 8, !dbg !8290, !tbaa !1975
  %30 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self, align 8, !dbg !8291, !tbaa !1975
  %tobool25 = icmp ne %struct.PyOSErrorObject* %30, null, !dbg !8291
  br i1 %tobool25, label %if.end.27, label %if.then.26, !dbg !8293

if.then.26:                                       ; preds = %if.end.23
  br label %error, !dbg !8294

if.end.27:                                        ; preds = %if.end.23
  %31 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self, align 8, !dbg !8295, !tbaa !1975
  %dict = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %31, i32 0, i32 1, !dbg !8296
  store %struct._object* null, %struct._object** %dict, align 8, !dbg !8297, !tbaa !8298
  %32 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self, align 8, !dbg !8299, !tbaa !1975
  %context = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %32, i32 0, i32 4, !dbg !8300
  store %struct._object* null, %struct._object** %context, align 8, !dbg !8301, !tbaa !8302
  %33 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self, align 8, !dbg !8303, !tbaa !1975
  %cause = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %33, i32 0, i32 5, !dbg !8304
  store %struct._object* null, %struct._object** %cause, align 8, !dbg !8305, !tbaa !8306
  %34 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self, align 8, !dbg !8307, !tbaa !1975
  %traceback = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %34, i32 0, i32 3, !dbg !8308
  store %struct._object* null, %struct._object** %traceback, align 8, !dbg !8309, !tbaa !8310
  %35 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self, align 8, !dbg !8311, !tbaa !1975
  %written = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %35, i32 0, i32 11, !dbg !8312
  store i64 -1, i64* %written, align 8, !dbg !8313, !tbaa !8314
  %36 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8315, !tbaa !1975
  %call28 = call i32 @oserror_use_init(%struct._typeobject* %36), !dbg !8317
  %tobool29 = icmp ne i32 %call28, 0, !dbg !8317
  br i1 %tobool29, label %if.else.35, label %if.then.30, !dbg !8318

if.then.30:                                       ; preds = %if.end.27
  %37 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self, align 8, !dbg !8319, !tbaa !1975
  %38 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !8322, !tbaa !1975
  %39 = load %struct._object*, %struct._object** %strerror, align 8, !dbg !8323, !tbaa !1975
  %40 = load %struct._object*, %struct._object** %filename, align 8, !dbg !8324, !tbaa !1975
  %41 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !8325, !tbaa !1975
  %call31 = call i32 @oserror_init(%struct.PyOSErrorObject* %37, %struct._object** %args.addr, %struct._object* %38, %struct._object* %39, %struct._object* %40, %struct._object* %41), !dbg !8326
  %tobool32 = icmp ne i32 %call31, 0, !dbg !8326
  br i1 %tobool32, label %if.then.33, label %if.end.34, !dbg !8327

if.then.33:                                       ; preds = %if.then.30
  br label %error, !dbg !8328

if.end.34:                                        ; preds = %if.then.30
  br label %if.end.42, !dbg !8329

if.else.35:                                       ; preds = %if.end.27
  %call36 = call %struct._object* @PyTuple_New(i64 0), !dbg !8330
  %42 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self, align 8, !dbg !8332, !tbaa !1975
  %args37 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %42, i32 0, i32 2, !dbg !8333
  store %struct._object* %call36, %struct._object** %args37, align 8, !dbg !8334, !tbaa !8335
  %43 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self, align 8, !dbg !8336, !tbaa !1975
  %args38 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %43, i32 0, i32 2, !dbg !8338
  %44 = load %struct._object*, %struct._object** %args38, align 8, !dbg !8338, !tbaa !8335
  %cmp39 = icmp eq %struct._object* %44, null, !dbg !8339
  br i1 %cmp39, label %if.then.40, label %if.end.41, !dbg !8340

if.then.40:                                       ; preds = %if.else.35
  br label %error, !dbg !8341

if.end.41:                                        ; preds = %if.else.35
  br label %if.end.42

if.end.42:                                        ; preds = %if.end.41, %if.end.34
  br label %do.body, !dbg !8342

do.body:                                          ; preds = %if.end.42
  %45 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8343
  call void @llvm.lifetime.start(i64 8, i8* %45) #2, !dbg !8343
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1369, metadata !1979), !dbg !8345
  %46 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8346, !tbaa !1975
  store %struct._object* %46, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8345, !tbaa !1975
  %47 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8347, !tbaa !1975
  %cmp43 = icmp ne %struct._object* %47, null, !dbg !8348
  br i1 %cmp43, label %if.then.44, label %if.end.52, !dbg !8349

if.then.44:                                       ; preds = %do.body
  br label %do.body.45, !dbg !8350

do.body.45:                                       ; preds = %if.then.44
  %48 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8352
  call void @llvm.lifetime.start(i64 8, i8* %48) #2, !dbg !8352
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1371, metadata !1979), !dbg !8354
  %49 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8355, !tbaa !1975
  store %struct._object* %49, %struct._object** %_py_decref_tmp, align 8, !dbg !8354, !tbaa !1975
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8356, !tbaa !1975
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !8358
  %51 = load i64, i64* %ob_refcnt46, align 8, !dbg !8359, !tbaa !2003
  %dec = add i64 %51, -1, !dbg !8359
  store i64 %dec, i64* %ob_refcnt46, align 8, !dbg !8359, !tbaa !2003
  %cmp47 = icmp ne i64 %dec, 0, !dbg !8360
  br i1 %cmp47, label %if.then.48, label %if.else.49, !dbg !8361

if.then.48:                                       ; preds = %do.body.45
  br label %if.end.51, !dbg !8362

if.else.49:                                       ; preds = %do.body.45
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8364, !tbaa !1975
  %ob_type50 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !8366
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type50, align 8, !dbg !8366, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !8367
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8367, !tbaa !2091
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8368, !tbaa !1975
  call void %54(%struct._object* %55), !dbg !8369
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.49, %if.then.48
  %56 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8370
  call void @llvm.lifetime.end(i64 8, i8* %56) #2, !dbg !8370
  br label %do.cond, !dbg !8372

do.cond:                                          ; preds = %if.end.51
  br label %do.end, !dbg !8373

do.end:                                           ; preds = %do.cond
  br label %if.end.52, !dbg !8375

if.end.52:                                        ; preds = %do.end, %do.body
  %57 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8377
  call void @llvm.lifetime.end(i64 8, i8* %57) #2, !dbg !8377
  br label %do.cond.53, !dbg !8380

do.cond.53:                                       ; preds = %if.end.52
  br label %do.end.54, !dbg !8381

do.end.54:                                        ; preds = %do.cond.53
  %58 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self, align 8, !dbg !8383, !tbaa !1975
  %59 = bitcast %struct.PyOSErrorObject* %58 to %struct._object*, !dbg !8384
  store %struct._object* %59, %struct._object** %retval, !dbg !8385
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93, !dbg !8385

error:                                            ; preds = %LeafBlock.1, %if.then.40, %if.then.33, %if.then.26, %if.then.6, %if.then.3
  br label %do.body.55, !dbg !8386

do.body.55:                                       ; preds = %error
  %60 = bitcast %struct._object** %_py_xdecref_tmp56 to i8*, !dbg !8387
  call void @llvm.lifetime.start(i64 8, i8* %60) #2, !dbg !8387
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp56, metadata !1374, metadata !1979), !dbg !8389
  %61 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8390, !tbaa !1975
  store %struct._object* %61, %struct._object** %_py_xdecref_tmp56, align 8, !dbg !8389, !tbaa !1975
  %62 = load %struct._object*, %struct._object** %_py_xdecref_tmp56, align 8, !dbg !8391, !tbaa !1975
  %cmp57 = icmp ne %struct._object* %62, null, !dbg !8392
  br i1 %cmp57, label %if.then.58, label %if.end.71, !dbg !8393

if.then.58:                                       ; preds = %do.body.55
  br label %do.body.59, !dbg !8394

do.body.59:                                       ; preds = %if.then.58
  %63 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !8396
  call void @llvm.lifetime.start(i64 8, i8* %63) #2, !dbg !8396
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp60, metadata !1376, metadata !1979), !dbg !8398
  %64 = load %struct._object*, %struct._object** %_py_xdecref_tmp56, align 8, !dbg !8399, !tbaa !1975
  store %struct._object* %64, %struct._object** %_py_decref_tmp60, align 8, !dbg !8398, !tbaa !1975
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !8400, !tbaa !1975
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !8402
  %66 = load i64, i64* %ob_refcnt61, align 8, !dbg !8403, !tbaa !2003
  %dec62 = add i64 %66, -1, !dbg !8403
  store i64 %dec62, i64* %ob_refcnt61, align 8, !dbg !8403, !tbaa !2003
  %cmp63 = icmp ne i64 %dec62, 0, !dbg !8404
  br i1 %cmp63, label %if.then.64, label %if.else.65, !dbg !8405

if.then.64:                                       ; preds = %do.body.59
  br label %if.end.68, !dbg !8406

if.else.65:                                       ; preds = %do.body.59
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !8408, !tbaa !1975
  %ob_type66 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !8410
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type66, align 8, !dbg !8410, !tbaa !2039
  %tp_dealloc67 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !8411
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc67, align 8, !dbg !8411, !tbaa !2091
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !8412, !tbaa !1975
  call void %69(%struct._object* %70), !dbg !8413
  br label %if.end.68

if.end.68:                                        ; preds = %if.else.65, %if.then.64
  %71 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !8414
  call void @llvm.lifetime.end(i64 8, i8* %71) #2, !dbg !8414
  br label %do.cond.69, !dbg !8416

do.cond.69:                                       ; preds = %if.end.68
  br label %do.end.70, !dbg !8417

do.end.70:                                        ; preds = %do.cond.69
  br label %if.end.71, !dbg !8419

if.end.71:                                        ; preds = %do.end.70, %do.body.55
  %72 = bitcast %struct._object** %_py_xdecref_tmp56 to i8*, !dbg !8421
  call void @llvm.lifetime.end(i64 8, i8* %72) #2, !dbg !8421
  br label %do.cond.72, !dbg !8422

do.cond.72:                                       ; preds = %if.end.71
  br label %do.end.73, !dbg !8423

do.end.73:                                        ; preds = %do.cond.72
  br label %do.body.74, !dbg !8425

do.body.74:                                       ; preds = %do.end.73
  %73 = bitcast %struct._object** %_py_xdecref_tmp75 to i8*, !dbg !8426
  call void @llvm.lifetime.start(i64 8, i8* %73) #2, !dbg !8426
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp75, metadata !1379, metadata !1979), !dbg !8428
  %74 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self, align 8, !dbg !8429, !tbaa !1975
  %75 = bitcast %struct.PyOSErrorObject* %74 to %struct._object*, !dbg !8430
  store %struct._object* %75, %struct._object** %_py_xdecref_tmp75, align 8, !dbg !8428, !tbaa !1975
  %76 = load %struct._object*, %struct._object** %_py_xdecref_tmp75, align 8, !dbg !8431, !tbaa !1975
  %cmp76 = icmp ne %struct._object* %76, null, !dbg !8432
  br i1 %cmp76, label %if.then.77, label %if.end.90, !dbg !8433

if.then.77:                                       ; preds = %do.body.74
  br label %do.body.78, !dbg !8434

do.body.78:                                       ; preds = %if.then.77
  %77 = bitcast %struct._object** %_py_decref_tmp79 to i8*, !dbg !8436
  call void @llvm.lifetime.start(i64 8, i8* %77) #2, !dbg !8436
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp79, metadata !1381, metadata !1979), !dbg !8438
  %78 = load %struct._object*, %struct._object** %_py_xdecref_tmp75, align 8, !dbg !8439, !tbaa !1975
  store %struct._object* %78, %struct._object** %_py_decref_tmp79, align 8, !dbg !8438, !tbaa !1975
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp79, align 8, !dbg !8440, !tbaa !1975
  %ob_refcnt80 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 0, !dbg !8442
  %80 = load i64, i64* %ob_refcnt80, align 8, !dbg !8443, !tbaa !2003
  %dec81 = add i64 %80, -1, !dbg !8443
  store i64 %dec81, i64* %ob_refcnt80, align 8, !dbg !8443, !tbaa !2003
  %cmp82 = icmp ne i64 %dec81, 0, !dbg !8444
  br i1 %cmp82, label %if.then.83, label %if.else.84, !dbg !8445

if.then.83:                                       ; preds = %do.body.78
  br label %if.end.87, !dbg !8446

if.else.84:                                       ; preds = %do.body.78
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp79, align 8, !dbg !8448, !tbaa !1975
  %ob_type85 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 1, !dbg !8450
  %82 = load %struct._typeobject*, %struct._typeobject** %ob_type85, align 8, !dbg !8450, !tbaa !2039
  %tp_dealloc86 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %82, i32 0, i32 4, !dbg !8451
  %83 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc86, align 8, !dbg !8451, !tbaa !2091
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp79, align 8, !dbg !8452, !tbaa !1975
  call void %83(%struct._object* %84), !dbg !8453
  br label %if.end.87

if.end.87:                                        ; preds = %if.else.84, %if.then.83
  %85 = bitcast %struct._object** %_py_decref_tmp79 to i8*, !dbg !8454
  call void @llvm.lifetime.end(i64 8, i8* %85) #2, !dbg !8454
  br label %do.cond.88, !dbg !8456

do.cond.88:                                       ; preds = %if.end.87
  br label %do.end.89, !dbg !8457

do.end.89:                                        ; preds = %do.cond.88
  br label %if.end.90, !dbg !8459

if.end.90:                                        ; preds = %do.end.89, %do.body.74
  %86 = bitcast %struct._object** %_py_xdecref_tmp75 to i8*, !dbg !8461
  call void @llvm.lifetime.end(i64 8, i8* %86) #2, !dbg !8461
  br label %do.cond.91, !dbg !8462

do.cond.91:                                       ; preds = %if.end.90
  br label %do.end.92, !dbg !8463

do.end.92:                                        ; preds = %do.cond.91
  store %struct._object* null, %struct._object** %retval, !dbg !8465
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93, !dbg !8465

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.93

cleanup.93:                                       ; preds = %NewDefault, %do.end.92, %do.end.54
  %87 = bitcast %struct._object** %filename2 to i8*, !dbg !8466
  call void @llvm.lifetime.end(i64 8, i8* %87) #2, !dbg !8466
  %88 = bitcast %struct._object** %filename to i8*, !dbg !8466
  call void @llvm.lifetime.end(i64 8, i8* %88) #2, !dbg !8466
  %89 = bitcast %struct._object** %strerror to i8*, !dbg !8466
  call void @llvm.lifetime.end(i64 8, i8* %89) #2, !dbg !8466
  %90 = bitcast %struct._object** %myerrno to i8*, !dbg !8466
  call void @llvm.lifetime.end(i64 8, i8* %90) #2, !dbg !8466
  %91 = bitcast %struct.PyOSErrorObject** %self to i8*, !dbg !8466
  call void @llvm.lifetime.end(i64 8, i8* %91) #2, !dbg !8466
  %92 = load %struct._object*, %struct._object** %retval, !dbg !8466
  ret %struct._object* %92, !dbg !8466
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @OSError_reduce(%struct.PyOSErrorObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyOSErrorObject*, align 8
  %args = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyOSErrorObject* %self, %struct.PyOSErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %self.addr, metadata !1264, metadata !1979), !dbg !8467
  %0 = bitcast %struct._object** %args to i8*, !dbg !8468
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8468
  call void @llvm.dbg.declare(metadata %struct._object** %args, metadata !1265, metadata !1979), !dbg !8469
  %1 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8470, !tbaa !1975
  %args1 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %1, i32 0, i32 2, !dbg !8471
  %2 = load %struct._object*, %struct._object** %args1, align 8, !dbg !8471, !tbaa !8335
  store %struct._object* %2, %struct._object** %args, align 8, !dbg !8469, !tbaa !1975
  %3 = bitcast %struct._object** %res to i8*, !dbg !8472
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8472
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1266, metadata !1979), !dbg !8473
  store %struct._object* null, %struct._object** %res, align 8, !dbg !8473, !tbaa !1975
  %4 = bitcast %struct._object** %tmp to i8*, !dbg !8472
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !8472
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !1267, metadata !1979), !dbg !8474
  %5 = load %struct._object*, %struct._object** %args, align 8, !dbg !8475, !tbaa !1975
  %6 = bitcast %struct._object* %5 to %struct.PyVarObject*, !dbg !8476
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %6, i32 0, i32 1, !dbg !8477
  %7 = load i64, i64* %ob_size, align 8, !dbg !8477, !tbaa !2466
  %cmp = icmp eq i64 %7, 2, !dbg !8478
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !8479

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8480, !tbaa !1975
  %filename = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %8, i32 0, i32 9, !dbg !8482
  %9 = load %struct._object*, %struct._object** %filename, align 8, !dbg !8482, !tbaa !7764
  %tobool = icmp ne %struct._object* %9, null, !dbg !8483
  br i1 %tobool, label %if.then, label %if.else, !dbg !8484

if.then:                                          ; preds = %land.lhs.true
  %10 = bitcast i64* %size to i8*, !dbg !8485
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !8485
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1268, metadata !1979), !dbg !8486
  %11 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8487, !tbaa !1975
  %filename2 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %11, i32 0, i32 10, !dbg !8488
  %12 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !8488, !tbaa !7771
  %tobool3 = icmp ne %struct._object* %12, null, !dbg !8487
  %cond = select i1 %tobool3, i32 5, i32 3, !dbg !8487
  %conv = sext i32 %cond to i64, !dbg !8487
  store i64 %conv, i64* %size, align 8, !dbg !8486, !tbaa !2396
  %13 = load i64, i64* %size, align 8, !dbg !8489, !tbaa !2396
  %call = call %struct._object* @PyTuple_New(i64 %13), !dbg !8490
  store %struct._object* %call, %struct._object** %args, align 8, !dbg !8491, !tbaa !1975
  %14 = load %struct._object*, %struct._object** %args, align 8, !dbg !8492, !tbaa !1975
  %tobool4 = icmp ne %struct._object* %14, null, !dbg !8492
  br i1 %tobool4, label %if.end, label %if.then.5, !dbg !8494

if.then.5:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !8495
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8495

if.end:                                           ; preds = %if.then
  %15 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8496, !tbaa !1975
  %args6 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %15, i32 0, i32 2, !dbg !8497
  %16 = load %struct._object*, %struct._object** %args6, align 8, !dbg !8497, !tbaa !8335
  %17 = bitcast %struct._object* %16 to %struct.PyTupleObject*, !dbg !8498
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %17, i32 0, i32 1, !dbg !8499
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !8500
  %18 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !8500, !tbaa !1975
  store %struct._object* %18, %struct._object** %tmp, align 8, !dbg !8501, !tbaa !1975
  %19 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !8502, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !8503
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !8504, !tbaa !2003
  %inc = add i64 %20, 1, !dbg !8504
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8504, !tbaa !2003
  %21 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !8505, !tbaa !1975
  %22 = load %struct._object*, %struct._object** %args, align 8, !dbg !8506, !tbaa !1975
  %23 = bitcast %struct._object* %22 to %struct.PyTupleObject*, !dbg !8507
  %ob_item7 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %23, i32 0, i32 1, !dbg !8508
  %arrayidx8 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item7, i32 0, i64 0, !dbg !8509
  store %struct._object* %21, %struct._object** %arrayidx8, align 8, !dbg !8510, !tbaa !1975
  %24 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8511, !tbaa !1975
  %args9 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %24, i32 0, i32 2, !dbg !8512
  %25 = load %struct._object*, %struct._object** %args9, align 8, !dbg !8512, !tbaa !8335
  %26 = bitcast %struct._object* %25 to %struct.PyTupleObject*, !dbg !8513
  %ob_item10 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %26, i32 0, i32 1, !dbg !8514
  %arrayidx11 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item10, i32 0, i64 1, !dbg !8515
  %27 = load %struct._object*, %struct._object** %arrayidx11, align 8, !dbg !8515, !tbaa !1975
  store %struct._object* %27, %struct._object** %tmp, align 8, !dbg !8516, !tbaa !1975
  %28 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !8517, !tbaa !1975
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !8518
  %29 = load i64, i64* %ob_refcnt12, align 8, !dbg !8519, !tbaa !2003
  %inc13 = add i64 %29, 1, !dbg !8519
  store i64 %inc13, i64* %ob_refcnt12, align 8, !dbg !8519, !tbaa !2003
  %30 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !8520, !tbaa !1975
  %31 = load %struct._object*, %struct._object** %args, align 8, !dbg !8521, !tbaa !1975
  %32 = bitcast %struct._object* %31 to %struct.PyTupleObject*, !dbg !8522
  %ob_item14 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %32, i32 0, i32 1, !dbg !8523
  %arrayidx15 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item14, i32 0, i64 1, !dbg !8524
  store %struct._object* %30, %struct._object** %arrayidx15, align 8, !dbg !8525, !tbaa !1975
  %33 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8526, !tbaa !1975
  %filename16 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %33, i32 0, i32 9, !dbg !8527
  %34 = load %struct._object*, %struct._object** %filename16, align 8, !dbg !8527, !tbaa !7764
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !8528
  %35 = load i64, i64* %ob_refcnt17, align 8, !dbg !8529, !tbaa !2003
  %inc18 = add i64 %35, 1, !dbg !8529
  store i64 %inc18, i64* %ob_refcnt17, align 8, !dbg !8529, !tbaa !2003
  %36 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8530, !tbaa !1975
  %filename19 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %36, i32 0, i32 9, !dbg !8531
  %37 = load %struct._object*, %struct._object** %filename19, align 8, !dbg !8531, !tbaa !7764
  %38 = load %struct._object*, %struct._object** %args, align 8, !dbg !8532, !tbaa !1975
  %39 = bitcast %struct._object* %38 to %struct.PyTupleObject*, !dbg !8533
  %ob_item20 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %39, i32 0, i32 1, !dbg !8534
  %arrayidx21 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item20, i32 0, i64 2, !dbg !8535
  store %struct._object* %37, %struct._object** %arrayidx21, align 8, !dbg !8536, !tbaa !1975
  %40 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8537, !tbaa !1975
  %filename222 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %40, i32 0, i32 10, !dbg !8539
  %41 = load %struct._object*, %struct._object** %filename222, align 8, !dbg !8539, !tbaa !7771
  %tobool23 = icmp ne %struct._object* %41, null, !dbg !8537
  br i1 %tobool23, label %if.then.24, label %if.end.34, !dbg !8540

if.then.24:                                       ; preds = %if.end
  %42 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8541, !tbaa !2003
  %inc25 = add i64 %42, 1, !dbg !8541
  store i64 %inc25, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8541, !tbaa !2003
  %43 = load %struct._object*, %struct._object** %args, align 8, !dbg !8543, !tbaa !1975
  %44 = bitcast %struct._object* %43 to %struct.PyTupleObject*, !dbg !8544
  %ob_item26 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %44, i32 0, i32 1, !dbg !8545
  %arrayidx27 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item26, i32 0, i64 3, !dbg !8546
  store %struct._object* @_Py_NoneStruct, %struct._object** %arrayidx27, align 8, !dbg !8547, !tbaa !1975
  %45 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8548, !tbaa !1975
  %filename228 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %45, i32 0, i32 10, !dbg !8549
  %46 = load %struct._object*, %struct._object** %filename228, align 8, !dbg !8549, !tbaa !7771
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !8550
  %47 = load i64, i64* %ob_refcnt29, align 8, !dbg !8551, !tbaa !2003
  %inc30 = add i64 %47, 1, !dbg !8551
  store i64 %inc30, i64* %ob_refcnt29, align 8, !dbg !8551, !tbaa !2003
  %48 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8552, !tbaa !1975
  %filename231 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %48, i32 0, i32 10, !dbg !8553
  %49 = load %struct._object*, %struct._object** %filename231, align 8, !dbg !8553, !tbaa !7771
  %50 = load %struct._object*, %struct._object** %args, align 8, !dbg !8554, !tbaa !1975
  %51 = bitcast %struct._object* %50 to %struct.PyTupleObject*, !dbg !8555
  %ob_item32 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %51, i32 0, i32 1, !dbg !8556
  %arrayidx33 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item32, i32 0, i64 4, !dbg !8557
  store %struct._object* %49, %struct._object** %arrayidx33, align 8, !dbg !8558, !tbaa !1975
  br label %if.end.34, !dbg !8559

if.end.34:                                        ; preds = %if.then.24, %if.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !8560
  br label %cleanup, !dbg !8560

cleanup:                                          ; preds = %if.end.34, %if.then.5
  %52 = bitcast i64* %size to i8*, !dbg !8561
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !8561
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.37, !dbg !8562

if.else:                                          ; preds = %land.lhs.true, %entry
  %53 = load %struct._object*, %struct._object** %args, align 8, !dbg !8563, !tbaa !1975
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !8564
  %54 = load i64, i64* %ob_refcnt35, align 8, !dbg !8565, !tbaa !2003
  %inc36 = add i64 %54, 1, !dbg !8565
  store i64 %inc36, i64* %ob_refcnt35, align 8, !dbg !8565, !tbaa !2003
  br label %if.end.37

if.end.37:                                        ; preds = %if.else, %cleanup.cont
  %55 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8566, !tbaa !1975
  %dict = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %55, i32 0, i32 1, !dbg !8568
  %56 = load %struct._object*, %struct._object** %dict, align 8, !dbg !8568, !tbaa !8298
  %tobool38 = icmp ne %struct._object* %56, null, !dbg !8566
  br i1 %tobool38, label %if.then.39, label %if.else.42, !dbg !8569

if.then.39:                                       ; preds = %if.end.37
  %57 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8570, !tbaa !1975
  %58 = bitcast %struct.PyOSErrorObject* %57 to %struct._object*, !dbg !8571
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1, !dbg !8572
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8572, !tbaa !2039
  %60 = load %struct._object*, %struct._object** %args, align 8, !dbg !8573, !tbaa !1975
  %61 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8574, !tbaa !1975
  %dict40 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %61, i32 0, i32 1, !dbg !8575
  %62 = load %struct._object*, %struct._object** %dict40, align 8, !dbg !8575, !tbaa !8298
  %call41 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 3, %struct._typeobject* %59, %struct._object* %60, %struct._object* %62), !dbg !8576
  store %struct._object* %call41, %struct._object** %res, align 8, !dbg !8577, !tbaa !1975
  br label %if.end.45, !dbg !8578

if.else.42:                                       ; preds = %if.end.37
  %63 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8579, !tbaa !1975
  %64 = bitcast %struct.PyOSErrorObject* %63 to %struct._object*, !dbg !8580
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1, !dbg !8581
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !8581, !tbaa !2039
  %66 = load %struct._object*, %struct._object** %args, align 8, !dbg !8582, !tbaa !1975
  %call44 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._typeobject* %65, %struct._object* %66), !dbg !8583
  store %struct._object* %call44, %struct._object** %res, align 8, !dbg !8584, !tbaa !1975
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.39
  br label %do.body, !dbg !8585

do.body:                                          ; preds = %if.end.45
  %67 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8586
  call void @llvm.lifetime.start(i64 8, i8* %67) #2, !dbg !8586
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1271, metadata !1979), !dbg !8588
  %68 = load %struct._object*, %struct._object** %args, align 8, !dbg !8589, !tbaa !1975
  store %struct._object* %68, %struct._object** %_py_decref_tmp, align 8, !dbg !8588, !tbaa !1975
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8590, !tbaa !1975
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !8592
  %70 = load i64, i64* %ob_refcnt47, align 8, !dbg !8593, !tbaa !2003
  %dec = add i64 %70, -1, !dbg !8593
  store i64 %dec, i64* %ob_refcnt47, align 8, !dbg !8593, !tbaa !2003
  %cmp48 = icmp ne i64 %dec, 0, !dbg !8594
  br i1 %cmp48, label %if.then.50, label %if.else.51, !dbg !8595

if.then.50:                                       ; preds = %do.body
  br label %if.end.53, !dbg !8596

if.else.51:                                       ; preds = %do.body
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8598, !tbaa !1975
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !8600
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8, !dbg !8600, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4, !dbg !8601
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8601, !tbaa !2091
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8602, !tbaa !1975
  call void %73(%struct._object* %74), !dbg !8603
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.51, %if.then.50
  %75 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8604
  call void @llvm.lifetime.end(i64 8, i8* %75) #2, !dbg !8604
  br label %do.cond, !dbg !8606

do.cond:                                          ; preds = %if.end.53
  br label %do.end, !dbg !8607

do.end:                                           ; preds = %do.cond
  %76 = load %struct._object*, %struct._object** %res, align 8, !dbg !8609, !tbaa !1975
  store %struct._object* %76, %struct._object** %retval, !dbg !8610
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.54, !dbg !8610

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.54

cleanup.54:                                       ; preds = %NewDefault, %do.end
  %77 = bitcast %struct._object** %tmp to i8*, !dbg !8611
  call void @llvm.lifetime.end(i64 8, i8* %77) #2, !dbg !8611
  %78 = bitcast %struct._object** %res to i8*, !dbg !8611
  call void @llvm.lifetime.end(i64 8, i8* %78) #2, !dbg !8611
  %79 = bitcast %struct._object** %args to i8*, !dbg !8611
  call void @llvm.lifetime.end(i64 8, i8* %79) #2, !dbg !8611
  %80 = load %struct._object*, %struct._object** %retval, !dbg !8611
  ret %struct._object* %80, !dbg !8611
}

declare %struct._object* @PyTuple_New(i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @OSError_written_get(%struct.PyOSErrorObject* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyOSErrorObject*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.PyOSErrorObject* %self, %struct.PyOSErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %self.addr, metadata !1277, metadata !1979), !dbg !8612
  store i8* %context, i8** %context.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1278, metadata !1979), !dbg !8613
  %0 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8614, !tbaa !1975
  %written = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %0, i32 0, i32 11, !dbg !8616
  %1 = load i64, i64* %written, align 8, !dbg !8616, !tbaa !8314
  %cmp = icmp eq i64 %1, -1, !dbg !8617
  br i1 %cmp, label %if.then, label %if.end, !dbg !8618

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !8619, !tbaa !1975
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.131, i32 0, i32 0)), !dbg !8621
  store %struct._object* null, %struct._object** %retval, !dbg !8622
  br label %return, !dbg !8622

if.end:                                           ; preds = %entry
  %3 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8623, !tbaa !1975
  %written1 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %3, i32 0, i32 11, !dbg !8624
  %4 = load i64, i64* %written1, align 8, !dbg !8624, !tbaa !8314
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %4), !dbg !8625
  store %struct._object* %call, %struct._object** %retval, !dbg !8626
  br label %return, !dbg !8626

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct._object*, %struct._object** %retval, !dbg !8627
  ret %struct._object* %5, !dbg !8627
}

; Function Attrs: nounwind uwtable
define internal i32 @OSError_written_set(%struct.PyOSErrorObject* %self, %struct._object* %arg, i8* %context) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyOSErrorObject*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %context.addr = alloca i8*, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyOSErrorObject* %self, %struct.PyOSErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %self.addr, metadata !1283, metadata !1979), !dbg !8628
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !1284, metadata !1979), !dbg !8629
  store i8* %context, i8** %context.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1285, metadata !1979), !dbg !8630
  %0 = bitcast i64* %n to i8*, !dbg !8631
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8631
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1286, metadata !1979), !dbg !8632
  %1 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !8633, !tbaa !1975
  %2 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8634, !tbaa !1975
  %call = call i64 @PyNumber_AsSsize_t(%struct._object* %1, %struct._object* %2), !dbg !8635
  store i64 %call, i64* %n, align 8, !dbg !8636, !tbaa !2396
  %3 = load i64, i64* %n, align 8, !dbg !8637, !tbaa !2396
  %cmp = icmp eq i64 %3, -1, !dbg !8639
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8640

land.lhs.true:                                    ; preds = %entry
  %call1 = call %struct._object* @PyErr_Occurred(), !dbg !8641
  %tobool = icmp ne %struct._object* %call1, null, !dbg !8641
  br i1 %tobool, label %if.then, label %if.end, !dbg !8643

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, !dbg !8644
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8644

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i64, i64* %n, align 8, !dbg !8645, !tbaa !2396
  %5 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8646, !tbaa !1975
  %written = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %5, i32 0, i32 11, !dbg !8647
  store i64 %4, i64* %written, align 8, !dbg !8648, !tbaa !8314
  store i32 0, i32* %retval, !dbg !8649
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8649

cleanup:                                          ; preds = %if.end, %if.then
  %6 = bitcast i64* %n to i8*, !dbg !8650
  call void @llvm.lifetime.end(i64 8, i8* %6) #2, !dbg !8650
  %7 = load i32, i32* %retval, !dbg !8650
  ret i32 %7, !dbg !8650
}

declare %struct._object* @PyLong_FromSsize_t(i64) #3

declare i64 @PyNumber_AsSsize_t(%struct._object*, %struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

; Function Attrs: nounwind uwtable
define internal i32 @oserror_use_init(%struct._typeobject* %type) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca %struct._typeobject*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1307, metadata !1979), !dbg !8651
  %0 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8652, !tbaa !1975
  %tp_init = getelementptr inbounds %struct._typeobject, %struct._typeobject* %0, i32 0, i32 35, !dbg !8654
  %1 = load i32 (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)** %tp_init, align 8, !dbg !8654, !tbaa !5723
  %cmp = icmp ne i32 (%struct._object*, %struct._object*, %struct._object*)* %1, bitcast (i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), !dbg !8655
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8656

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8657, !tbaa !1975
  %tp_new = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 37, !dbg !8658
  %3 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** %tp_new, align 8, !dbg !8658, !tbaa !5728
  %cmp1 = icmp eq %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* %3, @OSError_new, !dbg !8659
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8660

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, !dbg !8661
  br label %return, !dbg !8661

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, !dbg !8663
  br label %return, !dbg !8663

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, !dbg !8664
  ret i32 %4, !dbg !8664
}

declare i32 @_PyArg_NoKeywords(i8*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @oserror_parse_args(%struct._object** %p_args, %struct._object** %myerrno, %struct._object** %strerror, %struct._object** %filename, %struct._object** %filename2) #0 {
entry:
  %retval = alloca i32, align 4
  %p_args.addr = alloca %struct._object**, align 8
  %myerrno.addr = alloca %struct._object**, align 8
  %strerror.addr = alloca %struct._object**, align 8
  %filename.addr = alloca %struct._object**, align 8
  %filename2.addr = alloca %struct._object**, align 8
  %nargs = alloca i64, align 8
  %args = alloca %struct._object*, align 8
  %_winerror = alloca %struct._object*, align 8
  %winerror = alloca %struct._object**, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object** %p_args, %struct._object*** %p_args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object*** %p_args.addr, metadata !1312, metadata !1979), !dbg !8665
  store %struct._object** %myerrno, %struct._object*** %myerrno.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object*** %myerrno.addr, metadata !1313, metadata !1979), !dbg !8666
  store %struct._object** %strerror, %struct._object*** %strerror.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object*** %strerror.addr, metadata !1314, metadata !1979), !dbg !8667
  store %struct._object** %filename, %struct._object*** %filename.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object*** %filename.addr, metadata !1315, metadata !1979), !dbg !8668
  store %struct._object** %filename2, %struct._object*** %filename2.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object*** %filename2.addr, metadata !1316, metadata !1979), !dbg !8669
  %0 = bitcast i64* %nargs to i8*, !dbg !8670
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8670
  call void @llvm.dbg.declare(metadata i64* %nargs, metadata !1317, metadata !1979), !dbg !8671
  %1 = bitcast %struct._object** %args to i8*, !dbg !8672
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8672
  call void @llvm.dbg.declare(metadata %struct._object** %args, metadata !1318, metadata !1979), !dbg !8673
  %2 = load %struct._object**, %struct._object*** %p_args.addr, align 8, !dbg !8674, !tbaa !1975
  %3 = load %struct._object*, %struct._object** %2, align 8, !dbg !8675, !tbaa !1975
  store %struct._object* %3, %struct._object** %args, align 8, !dbg !8673, !tbaa !1975
  %4 = bitcast %struct._object** %_winerror to i8*, !dbg !8676
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !8676
  call void @llvm.dbg.declare(metadata %struct._object** %_winerror, metadata !1319, metadata !1979), !dbg !8677
  store %struct._object* null, %struct._object** %_winerror, align 8, !dbg !8677, !tbaa !1975
  %5 = bitcast %struct._object*** %winerror to i8*, !dbg !8678
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !8678
  call void @llvm.dbg.declare(metadata %struct._object*** %winerror, metadata !1320, metadata !1979), !dbg !8679
  store %struct._object** %_winerror, %struct._object*** %winerror, align 8, !dbg !8679, !tbaa !1975
  %6 = load %struct._object*, %struct._object** %args, align 8, !dbg !8680, !tbaa !1975
  %7 = bitcast %struct._object* %6 to %struct.PyVarObject*, !dbg !8681
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1, !dbg !8682
  %8 = load i64, i64* %ob_size, align 8, !dbg !8682, !tbaa !2466
  store i64 %8, i64* %nargs, align 8, !dbg !8683, !tbaa !2396
  %9 = load i64, i64* %nargs, align 8, !dbg !8684, !tbaa !2396
  %cmp = icmp sge i64 %9, 2, !dbg !8686
  br i1 %cmp, label %land.lhs.true, label %if.end.3, !dbg !8687

land.lhs.true:                                    ; preds = %entry
  %10 = load i64, i64* %nargs, align 8, !dbg !8688, !tbaa !2396
  %cmp1 = icmp sle i64 %10, 5, !dbg !8690
  br i1 %cmp1, label %if.then, label %if.end.3, !dbg !8691

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct._object*, %struct._object** %args, align 8, !dbg !8692, !tbaa !1975
  %12 = load %struct._object**, %struct._object*** %myerrno.addr, align 8, !dbg !8695, !tbaa !1975
  %13 = load %struct._object**, %struct._object*** %strerror.addr, align 8, !dbg !8696, !tbaa !1975
  %14 = load %struct._object**, %struct._object*** %filename.addr, align 8, !dbg !8697, !tbaa !1975
  %15 = load %struct._object**, %struct._object*** %winerror, align 8, !dbg !8698, !tbaa !1975
  %16 = load %struct._object**, %struct._object*** %filename2.addr, align 8, !dbg !8699, !tbaa !1975
  %call = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i64 2, i64 5, %struct._object** %12, %struct._object** %13, %struct._object** %14, %struct._object** %15, %struct._object** %16), !dbg !8700
  %tobool = icmp ne i32 %call, 0, !dbg !8700
  br i1 %tobool, label %if.end, label %if.then.2, !dbg !8701

if.then.2:                                        ; preds = %if.then
  store i32 -1, i32* %retval, !dbg !8702
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8702

if.end:                                           ; preds = %if.then
  br label %if.end.3, !dbg !8703

if.end.3:                                         ; preds = %if.end, %land.lhs.true, %entry
  store i32 0, i32* %retval, !dbg !8704
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8704

cleanup:                                          ; preds = %if.end.3, %if.then.2
  %17 = bitcast %struct._object*** %winerror to i8*, !dbg !8705
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !8705
  %18 = bitcast %struct._object** %_winerror to i8*, !dbg !8705
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !8705
  %19 = bitcast %struct._object** %args to i8*, !dbg !8705
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !8705
  %20 = bitcast i64* %nargs to i8*, !dbg !8705
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !8705
  %21 = load i32, i32* %retval, !dbg !8705
  ret i32 %21, !dbg !8705
}

; Function Attrs: nounwind uwtable
define internal i32 @oserror_init(%struct.PyOSErrorObject* %self, %struct._object** %p_args, %struct._object* %myerrno, %struct._object* %strerror, %struct._object* %filename, %struct._object* %filename2) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyOSErrorObject*, align 8
  %p_args.addr = alloca %struct._object**, align 8
  %myerrno.addr = alloca %struct._object*, align 8
  %strerror.addr = alloca %struct._object*, align 8
  %filename.addr = alloca %struct._object*, align 8
  %filename2.addr = alloca %struct._object*, align 8
  %args = alloca %struct._object*, align 8
  %nargs = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %subslice = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  %_py_xincref_tmp48 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp63 = alloca %struct._object*, align 8
  store %struct.PyOSErrorObject* %self, %struct.PyOSErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %self.addr, metadata !1325, metadata !1979), !dbg !8706
  store %struct._object** %p_args, %struct._object*** %p_args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object*** %p_args.addr, metadata !1326, metadata !1979), !dbg !8707
  store %struct._object* %myerrno, %struct._object** %myerrno.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %myerrno.addr, metadata !1327, metadata !1979), !dbg !8708
  store %struct._object* %strerror, %struct._object** %strerror.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %strerror.addr, metadata !1328, metadata !1979), !dbg !8709
  store %struct._object* %filename, %struct._object** %filename.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %filename.addr, metadata !1329, metadata !1979), !dbg !8710
  store %struct._object* %filename2, %struct._object** %filename2.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %filename2.addr, metadata !1330, metadata !1979), !dbg !8711
  %0 = bitcast %struct._object** %args to i8*, !dbg !8712
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8712
  call void @llvm.dbg.declare(metadata %struct._object** %args, metadata !1331, metadata !1979), !dbg !8713
  %1 = load %struct._object**, %struct._object*** %p_args.addr, align 8, !dbg !8714, !tbaa !1975
  %2 = load %struct._object*, %struct._object** %1, align 8, !dbg !8715, !tbaa !1975
  store %struct._object* %2, %struct._object** %args, align 8, !dbg !8713, !tbaa !1975
  %3 = bitcast i64* %nargs to i8*, !dbg !8716
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8716
  call void @llvm.dbg.declare(metadata i64* %nargs, metadata !1332, metadata !1979), !dbg !8717
  %4 = load %struct._object*, %struct._object** %args, align 8, !dbg !8718, !tbaa !1975
  %5 = bitcast %struct._object* %4 to %struct.PyVarObject*, !dbg !8719
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %5, i32 0, i32 1, !dbg !8720
  %6 = load i64, i64* %ob_size, align 8, !dbg !8720, !tbaa !2466
  store i64 %6, i64* %nargs, align 8, !dbg !8717, !tbaa !2396
  %7 = load %struct._object*, %struct._object** %filename.addr, align 8, !dbg !8721, !tbaa !1975
  %tobool = icmp ne %struct._object* %7, null, !dbg !8721
  br i1 %tobool, label %land.lhs.true, label %if.end.37, !dbg !8722

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct._object*, %struct._object** %filename.addr, align 8, !dbg !8723, !tbaa !1975
  %cmp = icmp ne %struct._object* %8, @_Py_NoneStruct, !dbg !8725
  br i1 %cmp, label %if.then, label %if.end.37, !dbg !8726

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8727, !tbaa !1975
  %10 = bitcast %struct.PyOSErrorObject* %9 to %struct._object*, !dbg !8728
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !8729
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8729, !tbaa !2039
  %12 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !8730, !tbaa !1975
  %13 = bitcast %struct._object* %12 to %struct._typeobject*, !dbg !8731
  %cmp1 = icmp eq %struct._typeobject* %11, %13, !dbg !8732
  br i1 %cmp1, label %land.lhs.true.2, label %if.else, !dbg !8733

land.lhs.true.2:                                  ; preds = %if.then
  %14 = load %struct._object*, %struct._object** %filename.addr, align 8, !dbg !8734, !tbaa !1975
  %call = call i32 @PyNumber_Check(%struct._object* %14), !dbg !8735
  %tobool3 = icmp ne i32 %call, 0, !dbg !8735
  br i1 %tobool3, label %if.then.4, label %if.else, !dbg !8736

if.then.4:                                        ; preds = %land.lhs.true.2
  %15 = load %struct._object*, %struct._object** %filename.addr, align 8, !dbg !8737, !tbaa !1975
  %16 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8739, !tbaa !1975
  %call5 = call i64 @PyNumber_AsSsize_t(%struct._object* %15, %struct._object* %16), !dbg !8740
  %17 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8741, !tbaa !1975
  %written = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %17, i32 0, i32 11, !dbg !8742
  store i64 %call5, i64* %written, align 8, !dbg !8743, !tbaa !8314
  %18 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8744, !tbaa !1975
  %written6 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %18, i32 0, i32 11, !dbg !8746
  %19 = load i64, i64* %written6, align 8, !dbg !8746, !tbaa !8314
  %cmp7 = icmp eq i64 %19, -1, !dbg !8747
  br i1 %cmp7, label %land.lhs.true.8, label %if.end, !dbg !8748

land.lhs.true.8:                                  ; preds = %if.then.4
  %call9 = call %struct._object* @PyErr_Occurred(), !dbg !8749
  %tobool10 = icmp ne %struct._object* %call9, null, !dbg !8749
  br i1 %tobool10, label %if.then.11, label %if.end, !dbg !8751

if.then.11:                                       ; preds = %land.lhs.true.8
  store i32 -1, i32* %retval, !dbg !8752
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.78, !dbg !8752

if.end:                                           ; preds = %land.lhs.true.8, %if.then.4
  br label %if.end.36, !dbg !8753

if.else:                                          ; preds = %land.lhs.true.2, %if.then
  %20 = load %struct._object*, %struct._object** %filename.addr, align 8, !dbg !8754, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !8755
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !8756, !tbaa !2003
  %inc = add i64 %21, 1, !dbg !8756
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8756, !tbaa !2003
  %22 = load %struct._object*, %struct._object** %filename.addr, align 8, !dbg !8757, !tbaa !1975
  %23 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8758, !tbaa !1975
  %filename12 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %23, i32 0, i32 9, !dbg !8759
  store %struct._object* %22, %struct._object** %filename12, align 8, !dbg !8760, !tbaa !7764
  %24 = load %struct._object*, %struct._object** %filename2.addr, align 8, !dbg !8761, !tbaa !1975
  %tobool13 = icmp ne %struct._object* %24, null, !dbg !8761
  br i1 %tobool13, label %land.lhs.true.14, label %if.end.20, !dbg !8763

land.lhs.true.14:                                 ; preds = %if.else
  %25 = load %struct._object*, %struct._object** %filename2.addr, align 8, !dbg !8764, !tbaa !1975
  %cmp15 = icmp ne %struct._object* %25, @_Py_NoneStruct, !dbg !8766
  br i1 %cmp15, label %if.then.16, label %if.end.20, !dbg !8767

if.then.16:                                       ; preds = %land.lhs.true.14
  %26 = load %struct._object*, %struct._object** %filename2.addr, align 8, !dbg !8768, !tbaa !1975
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !8770
  %27 = load i64, i64* %ob_refcnt17, align 8, !dbg !8771, !tbaa !2003
  %inc18 = add i64 %27, 1, !dbg !8771
  store i64 %inc18, i64* %ob_refcnt17, align 8, !dbg !8771, !tbaa !2003
  %28 = load %struct._object*, %struct._object** %filename2.addr, align 8, !dbg !8772, !tbaa !1975
  %29 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8773, !tbaa !1975
  %filename219 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %29, i32 0, i32 10, !dbg !8774
  store %struct._object* %28, %struct._object** %filename219, align 8, !dbg !8775, !tbaa !7771
  br label %if.end.20, !dbg !8776

if.end.20:                                        ; preds = %if.then.16, %land.lhs.true.14, %if.else
  %30 = load i64, i64* %nargs, align 8, !dbg !8777, !tbaa !2396
  %cmp21 = icmp sge i64 %30, 2, !dbg !8778
  br i1 %cmp21, label %land.lhs.true.22, label %if.end.35, !dbg !8779

land.lhs.true.22:                                 ; preds = %if.end.20
  %31 = load i64, i64* %nargs, align 8, !dbg !8780, !tbaa !2396
  %cmp23 = icmp sle i64 %31, 5, !dbg !8782
  br i1 %cmp23, label %if.then.24, label %if.end.35, !dbg !8783

if.then.24:                                       ; preds = %land.lhs.true.22
  %32 = bitcast %struct._object** %subslice to i8*, !dbg !8784
  call void @llvm.lifetime.start(i64 8, i8* %32) #2, !dbg !8784
  call void @llvm.dbg.declare(metadata %struct._object** %subslice, metadata !1333, metadata !1979), !dbg !8785
  %33 = load %struct._object*, %struct._object** %args, align 8, !dbg !8786, !tbaa !1975
  %call25 = call %struct._object* @PyTuple_GetSlice(%struct._object* %33, i64 0, i64 2), !dbg !8787
  store %struct._object* %call25, %struct._object** %subslice, align 8, !dbg !8785, !tbaa !1975
  %34 = load %struct._object*, %struct._object** %subslice, align 8, !dbg !8788, !tbaa !1975
  %tobool26 = icmp ne %struct._object* %34, null, !dbg !8788
  br i1 %tobool26, label %if.end.28, label %if.then.27, !dbg !8790

if.then.27:                                       ; preds = %if.then.24
  store i32 -1, i32* %retval, !dbg !8791
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8791

if.end.28:                                        ; preds = %if.then.24
  br label %do.body, !dbg !8792

do.body:                                          ; preds = %if.end.28
  %35 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8793
  call void @llvm.lifetime.start(i64 8, i8* %35) #2, !dbg !8793
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1340, metadata !1979), !dbg !8795
  %36 = load %struct._object*, %struct._object** %args, align 8, !dbg !8796, !tbaa !1975
  store %struct._object* %36, %struct._object** %_py_decref_tmp, align 8, !dbg !8795, !tbaa !1975
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8797, !tbaa !1975
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !8799
  %38 = load i64, i64* %ob_refcnt29, align 8, !dbg !8800, !tbaa !2003
  %dec = add i64 %38, -1, !dbg !8800
  store i64 %dec, i64* %ob_refcnt29, align 8, !dbg !8800, !tbaa !2003
  %cmp30 = icmp ne i64 %dec, 0, !dbg !8801
  br i1 %cmp30, label %if.then.31, label %if.else.32, !dbg !8802

if.then.31:                                       ; preds = %do.body
  br label %if.end.34, !dbg !8803

if.else.32:                                       ; preds = %do.body
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8805, !tbaa !1975
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !8807
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8, !dbg !8807, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !8808
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8808, !tbaa !2091
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8809, !tbaa !1975
  call void %41(%struct._object* %42), !dbg !8810
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.32, %if.then.31
  %43 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8811
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !8811
  br label %do.cond, !dbg !8813

do.cond:                                          ; preds = %if.end.34
  br label %do.end, !dbg !8814

do.end:                                           ; preds = %do.cond
  %44 = load %struct._object*, %struct._object** %subslice, align 8, !dbg !8816, !tbaa !1975
  store %struct._object* %44, %struct._object** %args, align 8, !dbg !8817, !tbaa !1975
  %45 = load %struct._object**, %struct._object*** %p_args.addr, align 8, !dbg !8818, !tbaa !1975
  store %struct._object* %44, %struct._object** %45, align 8, !dbg !8819, !tbaa !1975
  store i32 0, i32* %cleanup.dest.slot, !dbg !8820
  br label %cleanup, !dbg !8820

cleanup:                                          ; preds = %do.end, %if.then.27
  %46 = bitcast %struct._object** %subslice to i8*, !dbg !8821
  call void @llvm.lifetime.end(i64 8, i8* %46) #2, !dbg !8821
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.35, !dbg !8822

if.end.35:                                        ; preds = %cleanup.cont, %land.lhs.true.22, %if.end.20
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %if.end
  br label %if.end.37, !dbg !8823

if.end.37:                                        ; preds = %if.end.36, %land.lhs.true, %entry
  br label %do.body.38, !dbg !8824

do.body.38:                                       ; preds = %if.end.37
  %47 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !8825
  call void @llvm.lifetime.start(i64 8, i8* %47) #2, !dbg !8825
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !1342, metadata !1979), !dbg !8827
  %48 = load %struct._object*, %struct._object** %myerrno.addr, align 8, !dbg !8828, !tbaa !1975
  store %struct._object* %48, %struct._object** %_py_xincref_tmp, align 8, !dbg !8827, !tbaa !1975
  %49 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !8829, !tbaa !1975
  %cmp39 = icmp ne %struct._object* %49, null, !dbg !8831
  br i1 %cmp39, label %if.then.40, label %if.end.43, !dbg !8832

if.then.40:                                       ; preds = %do.body.38
  %50 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !8833, !tbaa !1975
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !8835
  %51 = load i64, i64* %ob_refcnt41, align 8, !dbg !8836, !tbaa !2003
  %inc42 = add i64 %51, 1, !dbg !8836
  store i64 %inc42, i64* %ob_refcnt41, align 8, !dbg !8836, !tbaa !2003
  br label %if.end.43, !dbg !8837

if.end.43:                                        ; preds = %if.then.40, %do.body.38
  %52 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !8838
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !8838
  br label %do.cond.44, !dbg !8841

do.cond.44:                                       ; preds = %if.end.43
  br label %do.end.45, !dbg !8842

do.end.45:                                        ; preds = %do.cond.44
  %53 = load %struct._object*, %struct._object** %myerrno.addr, align 8, !dbg !8844, !tbaa !1975
  %54 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8845, !tbaa !1975
  %myerrno46 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %54, i32 0, i32 7, !dbg !8846
  store %struct._object* %53, %struct._object** %myerrno46, align 8, !dbg !8847, !tbaa !7776
  br label %do.body.47, !dbg !8848

do.body.47:                                       ; preds = %do.end.45
  %55 = bitcast %struct._object** %_py_xincref_tmp48 to i8*, !dbg !8849
  call void @llvm.lifetime.start(i64 8, i8* %55) #2, !dbg !8849
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp48, metadata !1344, metadata !1979), !dbg !8851
  %56 = load %struct._object*, %struct._object** %strerror.addr, align 8, !dbg !8852, !tbaa !1975
  store %struct._object* %56, %struct._object** %_py_xincref_tmp48, align 8, !dbg !8851, !tbaa !1975
  %57 = load %struct._object*, %struct._object** %_py_xincref_tmp48, align 8, !dbg !8853, !tbaa !1975
  %cmp49 = icmp ne %struct._object* %57, null, !dbg !8855
  br i1 %cmp49, label %if.then.50, label %if.end.53, !dbg !8856

if.then.50:                                       ; preds = %do.body.47
  %58 = load %struct._object*, %struct._object** %_py_xincref_tmp48, align 8, !dbg !8857, !tbaa !1975
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 0, !dbg !8859
  %59 = load i64, i64* %ob_refcnt51, align 8, !dbg !8860, !tbaa !2003
  %inc52 = add i64 %59, 1, !dbg !8860
  store i64 %inc52, i64* %ob_refcnt51, align 8, !dbg !8860, !tbaa !2003
  br label %if.end.53, !dbg !8861

if.end.53:                                        ; preds = %if.then.50, %do.body.47
  %60 = bitcast %struct._object** %_py_xincref_tmp48 to i8*, !dbg !8862
  call void @llvm.lifetime.end(i64 8, i8* %60) #2, !dbg !8862
  br label %do.cond.54, !dbg !8863

do.cond.54:                                       ; preds = %if.end.53
  br label %do.end.55, !dbg !8864

do.end.55:                                        ; preds = %do.cond.54
  %61 = load %struct._object*, %struct._object** %strerror.addr, align 8, !dbg !8866, !tbaa !1975
  %62 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8867, !tbaa !1975
  %strerror56 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %62, i32 0, i32 8, !dbg !8868
  store %struct._object* %61, %struct._object** %strerror56, align 8, !dbg !8869, !tbaa !7785
  br label %do.body.57, !dbg !8870

do.body.57:                                       ; preds = %do.end.55
  %63 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8871
  call void @llvm.lifetime.start(i64 8, i8* %63) #2, !dbg !8871
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1346, metadata !1979), !dbg !8873
  %64 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8874, !tbaa !1975
  %args58 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %64, i32 0, i32 2, !dbg !8875
  %65 = load %struct._object*, %struct._object** %args58, align 8, !dbg !8875, !tbaa !8335
  store %struct._object* %65, %struct._object** %_py_tmp, align 8, !dbg !8873, !tbaa !1975
  %66 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !8876, !tbaa !1975
  %cmp59 = icmp ne %struct._object* %66, null, !dbg !8877
  br i1 %cmp59, label %if.then.60, label %if.end.74, !dbg !8878

if.then.60:                                       ; preds = %do.body.57
  %67 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8879, !tbaa !1975
  %args61 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %67, i32 0, i32 2, !dbg !8881
  store %struct._object* null, %struct._object** %args61, align 8, !dbg !8882, !tbaa !8335
  br label %do.body.62, !dbg !8883

do.body.62:                                       ; preds = %if.then.60
  %68 = bitcast %struct._object** %_py_decref_tmp63 to i8*, !dbg !8884
  call void @llvm.lifetime.start(i64 8, i8* %68) #2, !dbg !8884
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp63, metadata !1348, metadata !1979), !dbg !8886
  %69 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !8887, !tbaa !1975
  store %struct._object* %69, %struct._object** %_py_decref_tmp63, align 8, !dbg !8886, !tbaa !1975
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !8888, !tbaa !1975
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 0, !dbg !8890
  %71 = load i64, i64* %ob_refcnt64, align 8, !dbg !8891, !tbaa !2003
  %dec65 = add i64 %71, -1, !dbg !8891
  store i64 %dec65, i64* %ob_refcnt64, align 8, !dbg !8891, !tbaa !2003
  %cmp66 = icmp ne i64 %dec65, 0, !dbg !8892
  br i1 %cmp66, label %if.then.67, label %if.else.68, !dbg !8893

if.then.67:                                       ; preds = %do.body.62
  br label %if.end.71, !dbg !8894

if.else.68:                                       ; preds = %do.body.62
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !8896, !tbaa !1975
  %ob_type69 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 1, !dbg !8898
  %73 = load %struct._typeobject*, %struct._typeobject** %ob_type69, align 8, !dbg !8898, !tbaa !2039
  %tp_dealloc70 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %73, i32 0, i32 4, !dbg !8899
  %74 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc70, align 8, !dbg !8899, !tbaa !2091
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !8900, !tbaa !1975
  call void %74(%struct._object* %75), !dbg !8901
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.68, %if.then.67
  %76 = bitcast %struct._object** %_py_decref_tmp63 to i8*, !dbg !8902
  call void @llvm.lifetime.end(i64 8, i8* %76) #2, !dbg !8902
  br label %do.cond.72, !dbg !8904

do.cond.72:                                       ; preds = %if.end.71
  br label %do.end.73, !dbg !8905

do.end.73:                                        ; preds = %do.cond.72
  br label %if.end.74, !dbg !8907

if.end.74:                                        ; preds = %do.end.73, %do.body.57
  %77 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8909
  call void @llvm.lifetime.end(i64 8, i8* %77) #2, !dbg !8909
  br label %do.cond.75, !dbg !8911

do.cond.75:                                       ; preds = %if.end.74
  br label %do.end.76, !dbg !8912

do.end.76:                                        ; preds = %do.cond.75
  %78 = load %struct._object*, %struct._object** %args, align 8, !dbg !8914, !tbaa !1975
  %79 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %self.addr, align 8, !dbg !8915, !tbaa !1975
  %args77 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %79, i32 0, i32 2, !dbg !8916
  store %struct._object* %78, %struct._object** %args77, align 8, !dbg !8917, !tbaa !8335
  store %struct._object* null, %struct._object** %args, align 8, !dbg !8918, !tbaa !1975
  %80 = load %struct._object**, %struct._object*** %p_args.addr, align 8, !dbg !8919, !tbaa !1975
  store %struct._object* null, %struct._object** %80, align 8, !dbg !8920, !tbaa !1975
  store i32 0, i32* %retval, !dbg !8921
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.78, !dbg !8921

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.78

cleanup.78:                                       ; preds = %NewDefault, %do.end.76, %if.then.11
  %81 = bitcast i64* %nargs to i8*, !dbg !8922
  call void @llvm.lifetime.end(i64 8, i8* %81) #2, !dbg !8922
  %82 = bitcast %struct._object** %args to i8*, !dbg !8922
  call void @llvm.lifetime.end(i64 8, i8* %82) #2, !dbg !8922
  %83 = load i32, i32* %retval, !dbg !8922
  ret i32 %83, !dbg !8922
}

declare i32 @PyNumber_Check(%struct._object*) #3

declare %struct._object* @PyTuple_GetSlice(%struct._object*, i64, i64) #3

declare %struct._object* @PyDict_GetItem(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @SyntaxError_dealloc(%struct.PySyntaxErrorObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PySyntaxErrorObject*, align 8
  %g = alloca %union._gc_head*, align 8
  store %struct.PySyntaxErrorObject* %self, %struct.PySyntaxErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PySyntaxErrorObject** %self.addr, metadata !1405, metadata !1979), !dbg !8923
  br label %do.body, !dbg !8924

do.body:                                          ; preds = %entry
  %0 = bitcast %union._gc_head** %g to i8*, !dbg !8925
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8925
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !1406, metadata !1979), !dbg !8927
  %1 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !8928, !tbaa !1975
  %2 = bitcast %struct.PySyntaxErrorObject* %1 to %union._gc_head*, !dbg !8929
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %2, i64 -1, !dbg !8930
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !8927, !tbaa !1975
  br label %do.body.1, !dbg !8931

do.body.1:                                        ; preds = %do.body
  %3 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !8932, !tbaa !1975
  %gc = bitcast %union._gc_head* %3 to %struct.anon.0*, !dbg !8935
  %gc_refs = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc, i32 0, i32 2, !dbg !8936
  %4 = load i64, i64* %gc_refs, align 8, !dbg !8936, !tbaa !5967
  %and = and i64 %4, 1, !dbg !8937
  %or = or i64 %and, -4, !dbg !8938
  %5 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !8939, !tbaa !1975
  %gc2 = bitcast %union._gc_head* %5 to %struct.anon.0*, !dbg !8940
  %gc_refs3 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc2, i32 0, i32 2, !dbg !8941
  store i64 %or, i64* %gc_refs3, align 8, !dbg !8942, !tbaa !5967
  br label %do.cond, !dbg !8943

do.cond:                                          ; preds = %do.body.1
  br label %do.end, !dbg !8944

do.end:                                           ; preds = %do.cond
  %6 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !8946, !tbaa !1975
  %gc4 = bitcast %union._gc_head* %6 to %struct.anon.0*, !dbg !8948
  %gc_next = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc4, i32 0, i32 0, !dbg !8949
  %7 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !8949, !tbaa !5982
  %8 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !8950, !tbaa !1975
  %gc5 = bitcast %union._gc_head* %8 to %struct.anon.0*, !dbg !8951
  %gc_prev = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc5, i32 0, i32 1, !dbg !8952
  %9 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !8952, !tbaa !5986
  %gc6 = bitcast %union._gc_head* %9 to %struct.anon.0*, !dbg !8953
  %gc_next7 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc6, i32 0, i32 0, !dbg !8954
  store %union._gc_head* %7, %union._gc_head** %gc_next7, align 8, !dbg !8955, !tbaa !5982
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !8956, !tbaa !1975
  %gc8 = bitcast %union._gc_head* %10 to %struct.anon.0*, !dbg !8957
  %gc_prev9 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc8, i32 0, i32 1, !dbg !8958
  %11 = load %union._gc_head*, %union._gc_head** %gc_prev9, align 8, !dbg !8958, !tbaa !5986
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !8959, !tbaa !1975
  %gc10 = bitcast %union._gc_head* %12 to %struct.anon.0*, !dbg !8960
  %gc_next11 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc10, i32 0, i32 0, !dbg !8961
  %13 = load %union._gc_head*, %union._gc_head** %gc_next11, align 8, !dbg !8961, !tbaa !5982
  %gc12 = bitcast %union._gc_head* %13 to %struct.anon.0*, !dbg !8962
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc12, i32 0, i32 1, !dbg !8963
  store %union._gc_head* %11, %union._gc_head** %gc_prev13, align 8, !dbg !8964, !tbaa !5986
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !8965, !tbaa !1975
  %gc14 = bitcast %union._gc_head* %14 to %struct.anon.0*, !dbg !8966
  %gc_next15 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc14, i32 0, i32 0, !dbg !8967
  store %union._gc_head* null, %union._gc_head** %gc_next15, align 8, !dbg !8968, !tbaa !5982
  %15 = bitcast %union._gc_head** %g to i8*, !dbg !8969
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !8969
  br label %do.end.17, !dbg !8970

do.end.17:                                        ; preds = %do.end
  %16 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !8971, !tbaa !1975
  %call = call i32 @SyntaxError_clear(%struct.PySyntaxErrorObject* %16), !dbg !8972
  %17 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !8973, !tbaa !1975
  %18 = bitcast %struct.PySyntaxErrorObject* %17 to %struct._object*, !dbg !8974
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !8975
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8975, !tbaa !2039
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 38, !dbg !8976
  %20 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !8976, !tbaa !5662
  %21 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !8977, !tbaa !1975
  %22 = bitcast %struct.PySyntaxErrorObject* %21 to %struct._object*, !dbg !8978
  %23 = bitcast %struct._object* %22 to i8*, !dbg !8978
  call void %20(i8* %23), !dbg !8979
  ret void, !dbg !8980
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @SyntaxError_str(%struct.PySyntaxErrorObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PySyntaxErrorObject*, align 8
  %have_lineno = alloca i32, align 4
  %filename = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %overflow = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PySyntaxErrorObject* %self, %struct.PySyntaxErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PySyntaxErrorObject** %self.addr, metadata !1412, metadata !1979), !dbg !8981
  %0 = bitcast i32* %have_lineno to i8*, !dbg !8982
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !8982
  call void @llvm.dbg.declare(metadata i32* %have_lineno, metadata !1413, metadata !1979), !dbg !8983
  store i32 0, i32* %have_lineno, align 4, !dbg !8983, !tbaa !5355
  %1 = bitcast %struct._object** %filename to i8*, !dbg !8984
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8984
  call void @llvm.dbg.declare(metadata %struct._object** %filename, metadata !1414, metadata !1979), !dbg !8985
  %2 = bitcast %struct._object** %result to i8*, !dbg !8986
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8986
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1415, metadata !1979), !dbg !8987
  %3 = bitcast i32* %overflow to i8*, !dbg !8988
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !8988
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !1416, metadata !1979), !dbg !8989
  %4 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !8990, !tbaa !1975
  %filename1 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %4, i32 0, i32 8, !dbg !8992
  %5 = load %struct._object*, %struct._object** %filename1, align 8, !dbg !8992, !tbaa !8993
  %tobool = icmp ne %struct._object* %5, null, !dbg !8990
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8995

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !8996, !tbaa !1975
  %filename2 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %6, i32 0, i32 8, !dbg !8998
  %7 = load %struct._object*, %struct._object** %filename2, align 8, !dbg !8998, !tbaa !8993
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !8999
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8999, !tbaa !2039
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 19, !dbg !9000
  %9 = load i64, i64* %tp_flags, align 8, !dbg !9000, !tbaa !2308
  %and = and i64 %9, 268435456, !dbg !9001
  %cmp = icmp ne i64 %and, 0, !dbg !9002
  br i1 %cmp, label %if.then, label %if.else, !dbg !9003

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9004, !tbaa !1975
  %filename3 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %10, i32 0, i32 8, !dbg !9006
  %11 = load %struct._object*, %struct._object** %filename3, align 8, !dbg !9006, !tbaa !8993
  %call = call %struct._object* @my_basename(%struct._object* %11), !dbg !9007
  store %struct._object* %call, %struct._object** %filename, align 8, !dbg !9008, !tbaa !1975
  %12 = load %struct._object*, %struct._object** %filename, align 8, !dbg !9009, !tbaa !1975
  %cmp4 = icmp eq %struct._object* %12, null, !dbg !9011
  br i1 %cmp4, label %if.then.5, label %if.end, !dbg !9012

if.then.5:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !9013
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9013

if.end:                                           ; preds = %if.then
  br label %if.end.6, !dbg !9014

if.else:                                          ; preds = %land.lhs.true, %entry
  store %struct._object* null, %struct._object** %filename, align 8, !dbg !9015, !tbaa !1975
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.end
  %13 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9017, !tbaa !1975
  %lineno = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %13, i32 0, i32 9, !dbg !9018
  %14 = load %struct._object*, %struct._object** %lineno, align 8, !dbg !9018, !tbaa !9019
  %cmp7 = icmp ne %struct._object* %14, null, !dbg !9020
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !9021

land.rhs:                                         ; preds = %if.end.6
  %15 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9022, !tbaa !1975
  %lineno8 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %15, i32 0, i32 9, !dbg !9024
  %16 = load %struct._object*, %struct._object** %lineno8, align 8, !dbg !9024, !tbaa !9019
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !9025
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !9025, !tbaa !2039
  %cmp10 = icmp eq %struct._typeobject* %17, @PyLong_Type, !dbg !9026
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.6
  %18 = phi i1 [ false, %if.end.6 ], [ %cmp10, %land.rhs ]
  %land.ext = zext i1 %18 to i32, !dbg !9027
  store i32 %land.ext, i32* %have_lineno, align 4, !dbg !9029, !tbaa !5355
  %19 = load %struct._object*, %struct._object** %filename, align 8, !dbg !9030, !tbaa !1975
  %tobool11 = icmp ne %struct._object* %19, null, !dbg !9030
  br i1 %tobool11, label %if.end.18, label %land.lhs.true.12, !dbg !9032

land.lhs.true.12:                                 ; preds = %land.end
  %20 = load i32, i32* %have_lineno, align 4, !dbg !9033, !tbaa !5355
  %tobool13 = icmp ne i32 %20, 0, !dbg !9033
  br i1 %tobool13, label %if.end.18, label %if.then.14, !dbg !9035

if.then.14:                                       ; preds = %land.lhs.true.12
  %21 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9036, !tbaa !1975
  %msg = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %21, i32 0, i32 7, !dbg !9037
  %22 = load %struct._object*, %struct._object** %msg, align 8, !dbg !9037, !tbaa !9038
  %tobool15 = icmp ne %struct._object* %22, null, !dbg !9036
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !9036

cond.true:                                        ; preds = %if.then.14
  %23 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9039, !tbaa !1975
  %msg16 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %23, i32 0, i32 7, !dbg !9040
  %24 = load %struct._object*, %struct._object** %msg16, align 8, !dbg !9040, !tbaa !9038
  br label %cond.end, !dbg !9036

cond.false:                                       ; preds = %if.then.14
  br label %cond.end, !dbg !9041

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %24, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !9036
  %call17 = call %struct._object* @PyObject_Str(%struct._object* %cond), !dbg !9043
  store %struct._object* %call17, %struct._object** %retval, !dbg !9046
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9046

if.end.18:                                        ; preds = %land.lhs.true.12, %land.end
  %25 = load %struct._object*, %struct._object** %filename, align 8, !dbg !9047, !tbaa !1975
  %tobool19 = icmp ne %struct._object* %25, null, !dbg !9047
  br i1 %tobool19, label %land.lhs.true.20, label %if.else.33, !dbg !9049

land.lhs.true.20:                                 ; preds = %if.end.18
  %26 = load i32, i32* %have_lineno, align 4, !dbg !9050, !tbaa !5355
  %tobool21 = icmp ne i32 %26, 0, !dbg !9050
  br i1 %tobool21, label %if.then.22, label %if.else.33, !dbg !9052

if.then.22:                                       ; preds = %land.lhs.true.20
  %27 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9053, !tbaa !1975
  %msg23 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %27, i32 0, i32 7, !dbg !9054
  %28 = load %struct._object*, %struct._object** %msg23, align 8, !dbg !9054, !tbaa !9038
  %tobool24 = icmp ne %struct._object* %28, null, !dbg !9053
  br i1 %tobool24, label %cond.true.25, label %cond.false.27, !dbg !9053

cond.true.25:                                     ; preds = %if.then.22
  %29 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9055, !tbaa !1975
  %msg26 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %29, i32 0, i32 7, !dbg !9056
  %30 = load %struct._object*, %struct._object** %msg26, align 8, !dbg !9056, !tbaa !9038
  br label %cond.end.28, !dbg !9053

cond.false.27:                                    ; preds = %if.then.22
  br label %cond.end.28, !dbg !9057

cond.end.28:                                      ; preds = %cond.false.27, %cond.true.25
  %cond29 = phi %struct._object* [ %30, %cond.true.25 ], [ @_Py_NoneStruct, %cond.false.27 ], !dbg !9053
  %31 = load %struct._object*, %struct._object** %filename, align 8, !dbg !9059, !tbaa !1975
  %32 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9060, !tbaa !1975
  %lineno30 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %32, i32 0, i32 9, !dbg !9061
  %33 = load %struct._object*, %struct._object** %lineno30, align 8, !dbg !9061, !tbaa !9019
  %call31 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %33, i32* %overflow), !dbg !9062
  %call32 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.154, i32 0, i32 0), %struct._object* %cond29, %struct._object* %31, i64 %call31), !dbg !9063
  store %struct._object* %call32, %struct._object** %result, align 8, !dbg !9064, !tbaa !1975
  br label %if.end.56, !dbg !9065

if.else.33:                                       ; preds = %land.lhs.true.20, %if.end.18
  %34 = load %struct._object*, %struct._object** %filename, align 8, !dbg !9066, !tbaa !1975
  %tobool34 = icmp ne %struct._object* %34, null, !dbg !9066
  br i1 %tobool34, label %if.then.35, label %if.else.44, !dbg !9068

if.then.35:                                       ; preds = %if.else.33
  %35 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9069, !tbaa !1975
  %msg36 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %35, i32 0, i32 7, !dbg !9070
  %36 = load %struct._object*, %struct._object** %msg36, align 8, !dbg !9070, !tbaa !9038
  %tobool37 = icmp ne %struct._object* %36, null, !dbg !9069
  br i1 %tobool37, label %cond.true.38, label %cond.false.40, !dbg !9069

cond.true.38:                                     ; preds = %if.then.35
  %37 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9071, !tbaa !1975
  %msg39 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %37, i32 0, i32 7, !dbg !9073
  %38 = load %struct._object*, %struct._object** %msg39, align 8, !dbg !9073, !tbaa !9038
  br label %cond.end.41, !dbg !9069

cond.false.40:                                    ; preds = %if.then.35
  br label %cond.end.41, !dbg !9074

cond.end.41:                                      ; preds = %cond.false.40, %cond.true.38
  %cond42 = phi %struct._object* [ %38, %cond.true.38 ], [ @_Py_NoneStruct, %cond.false.40 ], !dbg !9069
  %39 = load %struct._object*, %struct._object** %filename, align 8, !dbg !9076, !tbaa !1975
  %call43 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.155, i32 0, i32 0), %struct._object* %cond42, %struct._object* %39), !dbg !9077
  store %struct._object* %call43, %struct._object** %result, align 8, !dbg !9078, !tbaa !1975
  br label %if.end.55, !dbg !9079

if.else.44:                                       ; preds = %if.else.33
  %40 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9080, !tbaa !1975
  %msg45 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %40, i32 0, i32 7, !dbg !9081
  %41 = load %struct._object*, %struct._object** %msg45, align 8, !dbg !9081, !tbaa !9038
  %tobool46 = icmp ne %struct._object* %41, null, !dbg !9080
  br i1 %tobool46, label %cond.true.47, label %cond.false.49, !dbg !9080

cond.true.47:                                     ; preds = %if.else.44
  %42 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9082, !tbaa !1975
  %msg48 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %42, i32 0, i32 7, !dbg !9083
  %43 = load %struct._object*, %struct._object** %msg48, align 8, !dbg !9083, !tbaa !9038
  br label %cond.end.50, !dbg !9080

cond.false.49:                                    ; preds = %if.else.44
  br label %cond.end.50, !dbg !9084

cond.end.50:                                      ; preds = %cond.false.49, %cond.true.47
  %cond51 = phi %struct._object* [ %43, %cond.true.47 ], [ @_Py_NoneStruct, %cond.false.49 ], !dbg !9080
  %44 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9085, !tbaa !1975
  %lineno52 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %44, i32 0, i32 9, !dbg !9086
  %45 = load %struct._object*, %struct._object** %lineno52, align 8, !dbg !9086, !tbaa !9019
  %call53 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %45, i32* %overflow), !dbg !9087
  %call54 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.156, i32 0, i32 0), %struct._object* %cond51, i64 %call53), !dbg !9088
  store %struct._object* %call54, %struct._object** %result, align 8, !dbg !9089, !tbaa !1975
  br label %if.end.55

if.end.55:                                        ; preds = %cond.end.50, %cond.end.41
  br label %if.end.56

if.end.56:                                        ; preds = %if.end.55, %cond.end.28
  br label %do.body, !dbg !9090

do.body:                                          ; preds = %if.end.56
  %46 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9091
  call void @llvm.lifetime.start(i64 8, i8* %46) #2, !dbg !9091
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1417, metadata !1979), !dbg !9093
  %47 = load %struct._object*, %struct._object** %filename, align 8, !dbg !9094, !tbaa !1975
  store %struct._object* %47, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9093, !tbaa !1975
  %48 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9095, !tbaa !1975
  %cmp57 = icmp ne %struct._object* %48, null, !dbg !9096
  br i1 %cmp57, label %if.then.58, label %if.end.65, !dbg !9097

if.then.58:                                       ; preds = %do.body
  br label %do.body.59, !dbg !9098

do.body.59:                                       ; preds = %if.then.58
  %49 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9100
  call void @llvm.lifetime.start(i64 8, i8* %49) #2, !dbg !9100
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1419, metadata !1979), !dbg !9102
  %50 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9103, !tbaa !1975
  store %struct._object* %50, %struct._object** %_py_decref_tmp, align 8, !dbg !9102, !tbaa !1975
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9104, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !9106
  %52 = load i64, i64* %ob_refcnt, align 8, !dbg !9107, !tbaa !2003
  %dec = add i64 %52, -1, !dbg !9107
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9107, !tbaa !2003
  %cmp60 = icmp ne i64 %dec, 0, !dbg !9108
  br i1 %cmp60, label %if.then.61, label %if.else.62, !dbg !9109

if.then.61:                                       ; preds = %do.body.59
  br label %if.end.64, !dbg !9110

if.else.62:                                       ; preds = %do.body.59
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9112, !tbaa !1975
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 1, !dbg !9114
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !9114, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i32 0, i32 4, !dbg !9115
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9115, !tbaa !2091
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9116, !tbaa !1975
  call void %55(%struct._object* %56), !dbg !9117
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.62, %if.then.61
  %57 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9118
  call void @llvm.lifetime.end(i64 8, i8* %57) #2, !dbg !9118
  br label %do.cond, !dbg !9120

do.cond:                                          ; preds = %if.end.64
  br label %do.end, !dbg !9121

do.end:                                           ; preds = %do.cond
  br label %if.end.65, !dbg !9123

if.end.65:                                        ; preds = %do.end, %do.body
  %58 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9125
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !9125
  br label %do.cond.66, !dbg !9128

do.cond.66:                                       ; preds = %if.end.65
  br label %do.end.67, !dbg !9129

do.end.67:                                        ; preds = %do.cond.66
  %59 = load %struct._object*, %struct._object** %result, align 8, !dbg !9131, !tbaa !1975
  store %struct._object* %59, %struct._object** %retval, !dbg !9132
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9132

cleanup:                                          ; preds = %do.end.67, %cond.end, %if.then.5
  %60 = bitcast i32* %overflow to i8*, !dbg !9133
  call void @llvm.lifetime.end(i64 4, i8* %60) #2, !dbg !9133
  %61 = bitcast %struct._object** %result to i8*, !dbg !9133
  call void @llvm.lifetime.end(i64 8, i8* %61) #2, !dbg !9133
  %62 = bitcast %struct._object** %filename to i8*, !dbg !9133
  call void @llvm.lifetime.end(i64 8, i8* %62) #2, !dbg !9133
  %63 = bitcast i32* %have_lineno to i8*, !dbg !9133
  call void @llvm.lifetime.end(i64 4, i8* %63) #2, !dbg !9133
  %64 = load %struct._object*, %struct._object** %retval, !dbg !9133
  ret %struct._object* %64, !dbg !9133
}

; Function Attrs: nounwind uwtable
define internal i32 @SyntaxError_traverse(%struct.PySyntaxErrorObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PySyntaxErrorObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  %vret36 = alloca i32, align 4
  %vret50 = alloca i32, align 4
  %vret64 = alloca i32, align 4
  store %struct.PySyntaxErrorObject* %self, %struct.PySyntaxErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PySyntaxErrorObject** %self.addr, metadata !1434, metadata !1979), !dbg !9134
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1435, metadata !1979), !dbg !9135
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1436, metadata !1979), !dbg !9136
  br label %do.body, !dbg !9137

do.body:                                          ; preds = %entry
  %0 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9138, !tbaa !1975
  %msg = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %0, i32 0, i32 7, !dbg !9140
  %1 = load %struct._object*, %struct._object** %msg, align 8, !dbg !9140, !tbaa !9038
  %tobool = icmp ne %struct._object* %1, null, !dbg !9141
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !9142

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !9143
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !9143
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1437, metadata !1979), !dbg !9145
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !9146, !tbaa !1975
  %4 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9147, !tbaa !1975
  %msg1 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %4, i32 0, i32 7, !dbg !9148
  %5 = load %struct._object*, %struct._object** %msg1, align 8, !dbg !9148, !tbaa !9038
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !9149, !tbaa !1975
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !9146
  store i32 %call, i32* %vret, align 4, !dbg !9145, !tbaa !5355
  %7 = load i32, i32* %vret, align 4, !dbg !9150, !tbaa !5355
  %tobool2 = icmp ne i32 %7, 0, !dbg !9150
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !9152

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !9153, !tbaa !5355
  store i32 %8, i32* %retval, !dbg !9155
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9155

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !9156
  br label %cleanup, !dbg !9156

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !9158
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !9158
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !9161

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !9162

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !9165

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9166, !tbaa !1975
  %filename = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %10, i32 0, i32 8, !dbg !9168
  %11 = load %struct._object*, %struct._object** %filename, align 8, !dbg !9168, !tbaa !8993
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !9169
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !9170

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !9171
  call void @llvm.lifetime.start(i64 4, i8* %12) #2, !dbg !9171
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1441, metadata !1979), !dbg !9173
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !9174, !tbaa !1975
  %14 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9175, !tbaa !1975
  %filename9 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %14, i32 0, i32 8, !dbg !9176
  %15 = load %struct._object*, %struct._object** %filename9, align 8, !dbg !9176, !tbaa !8993
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !9177, !tbaa !1975
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !9174
  store i32 %call10, i32* %vret8, align 4, !dbg !9173, !tbaa !5355
  %17 = load i32, i32* %vret8, align 4, !dbg !9178, !tbaa !5355
  %tobool11 = icmp ne i32 %17, 0, !dbg !9178
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !9180

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !9181, !tbaa !5355
  store i32 %18, i32* %retval, !dbg !9183
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !9183

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !9184
  br label %cleanup.14, !dbg !9184

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !9186
  call void @llvm.lifetime.end(i64 4, i8* %19) #2, !dbg !9186
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !9189

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !9190

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !9193

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9194, !tbaa !1975
  %lineno = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %20, i32 0, i32 9, !dbg !9196
  %21 = load %struct._object*, %struct._object** %lineno, align 8, !dbg !9196, !tbaa !9019
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !9197
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !9198

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !9199
  call void @llvm.lifetime.start(i64 4, i8* %22) #2, !dbg !9199
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !1445, metadata !1979), !dbg !9201
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !9202, !tbaa !1975
  %24 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9203, !tbaa !1975
  %lineno23 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %24, i32 0, i32 9, !dbg !9204
  %25 = load %struct._object*, %struct._object** %lineno23, align 8, !dbg !9204, !tbaa !9019
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !9205, !tbaa !1975
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !9202
  store i32 %call24, i32* %vret22, align 4, !dbg !9201, !tbaa !5355
  %27 = load i32, i32* %vret22, align 4, !dbg !9206, !tbaa !5355
  %tobool25 = icmp ne i32 %27, 0, !dbg !9206
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !9208

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !9209, !tbaa !5355
  store i32 %28, i32* %retval, !dbg !9211
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !9211

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !9212
  br label %cleanup.28, !dbg !9212

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !9214
  call void @llvm.lifetime.end(i64 4, i8* %29) #2, !dbg !9214
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.5

LeafBlock.5:                                      ; preds = %cleanup.28
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest.29, 1
  br i1 %SwitchLeaf6, label %return, label %NewDefault.4

NewDefault.4:                                     ; preds = %LeafBlock.5
  br label %cleanup.cont.30

cleanup.cont.30:                                  ; preds = %NewDefault.4
  br label %if.end.31, !dbg !9217

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !9218

do.end.32:                                        ; preds = %if.end.31
  br label %do.body.33, !dbg !9221

do.body.33:                                       ; preds = %do.end.32
  %30 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9222, !tbaa !1975
  %offset = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %30, i32 0, i32 10, !dbg !9224
  %31 = load %struct._object*, %struct._object** %offset, align 8, !dbg !9224, !tbaa !9225
  %tobool34 = icmp ne %struct._object* %31, null, !dbg !9226
  br i1 %tobool34, label %if.then.35, label %if.end.45, !dbg !9227

if.then.35:                                       ; preds = %do.body.33
  %32 = bitcast i32* %vret36 to i8*, !dbg !9228
  call void @llvm.lifetime.start(i64 4, i8* %32) #2, !dbg !9228
  call void @llvm.dbg.declare(metadata i32* %vret36, metadata !1449, metadata !1979), !dbg !9230
  %33 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !9231, !tbaa !1975
  %34 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9232, !tbaa !1975
  %offset37 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %34, i32 0, i32 10, !dbg !9233
  %35 = load %struct._object*, %struct._object** %offset37, align 8, !dbg !9233, !tbaa !9225
  %36 = load i8*, i8** %arg.addr, align 8, !dbg !9234, !tbaa !1975
  %call38 = call i32 %33(%struct._object* %35, i8* %36), !dbg !9231
  store i32 %call38, i32* %vret36, align 4, !dbg !9230, !tbaa !5355
  %37 = load i32, i32* %vret36, align 4, !dbg !9235, !tbaa !5355
  %tobool39 = icmp ne i32 %37, 0, !dbg !9235
  br i1 %tobool39, label %if.then.40, label %if.end.41, !dbg !9237

if.then.40:                                       ; preds = %if.then.35
  %38 = load i32, i32* %vret36, align 4, !dbg !9238, !tbaa !5355
  store i32 %38, i32* %retval, !dbg !9240
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.42, !dbg !9240

if.end.41:                                        ; preds = %if.then.35
  store i32 0, i32* %cleanup.dest.slot, !dbg !9241
  br label %cleanup.42, !dbg !9241

cleanup.42:                                       ; preds = %if.end.41, %if.then.40
  %39 = bitcast i32* %vret36 to i8*, !dbg !9243
  call void @llvm.lifetime.end(i64 4, i8* %39) #2, !dbg !9243
  %cleanup.dest.43 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.8

LeafBlock.8:                                      ; preds = %cleanup.42
  %SwitchLeaf9 = icmp eq i32 %cleanup.dest.43, 1
  br i1 %SwitchLeaf9, label %return, label %NewDefault.7

NewDefault.7:                                     ; preds = %LeafBlock.8
  br label %cleanup.cont.44

cleanup.cont.44:                                  ; preds = %NewDefault.7
  br label %if.end.45, !dbg !9246

if.end.45:                                        ; preds = %cleanup.cont.44, %do.body.33
  br label %do.end.46, !dbg !9247

do.end.46:                                        ; preds = %if.end.45
  br label %do.body.47, !dbg !9250

do.body.47:                                       ; preds = %do.end.46
  %40 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9251, !tbaa !1975
  %text = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %40, i32 0, i32 11, !dbg !9253
  %41 = load %struct._object*, %struct._object** %text, align 8, !dbg !9253, !tbaa !9254
  %tobool48 = icmp ne %struct._object* %41, null, !dbg !9255
  br i1 %tobool48, label %if.then.49, label %if.end.59, !dbg !9256

if.then.49:                                       ; preds = %do.body.47
  %42 = bitcast i32* %vret50 to i8*, !dbg !9257
  call void @llvm.lifetime.start(i64 4, i8* %42) #2, !dbg !9257
  call void @llvm.dbg.declare(metadata i32* %vret50, metadata !1453, metadata !1979), !dbg !9259
  %43 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !9260, !tbaa !1975
  %44 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9261, !tbaa !1975
  %text51 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %44, i32 0, i32 11, !dbg !9262
  %45 = load %struct._object*, %struct._object** %text51, align 8, !dbg !9262, !tbaa !9254
  %46 = load i8*, i8** %arg.addr, align 8, !dbg !9263, !tbaa !1975
  %call52 = call i32 %43(%struct._object* %45, i8* %46), !dbg !9260
  store i32 %call52, i32* %vret50, align 4, !dbg !9259, !tbaa !5355
  %47 = load i32, i32* %vret50, align 4, !dbg !9264, !tbaa !5355
  %tobool53 = icmp ne i32 %47, 0, !dbg !9264
  br i1 %tobool53, label %if.then.54, label %if.end.55, !dbg !9266

if.then.54:                                       ; preds = %if.then.49
  %48 = load i32, i32* %vret50, align 4, !dbg !9267, !tbaa !5355
  store i32 %48, i32* %retval, !dbg !9269
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !9269

if.end.55:                                        ; preds = %if.then.49
  store i32 0, i32* %cleanup.dest.slot, !dbg !9270
  br label %cleanup.56, !dbg !9270

cleanup.56:                                       ; preds = %if.end.55, %if.then.54
  %49 = bitcast i32* %vret50 to i8*, !dbg !9272
  call void @llvm.lifetime.end(i64 4, i8* %49) #2, !dbg !9272
  %cleanup.dest.57 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.11

LeafBlock.11:                                     ; preds = %cleanup.56
  %SwitchLeaf12 = icmp eq i32 %cleanup.dest.57, 1
  br i1 %SwitchLeaf12, label %return, label %NewDefault.10

NewDefault.10:                                    ; preds = %LeafBlock.11
  br label %cleanup.cont.58

cleanup.cont.58:                                  ; preds = %NewDefault.10
  br label %if.end.59, !dbg !9275

if.end.59:                                        ; preds = %cleanup.cont.58, %do.body.47
  br label %do.end.60, !dbg !9276

do.end.60:                                        ; preds = %if.end.59
  br label %do.body.61, !dbg !9279

do.body.61:                                       ; preds = %do.end.60
  %50 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9280, !tbaa !1975
  %print_file_and_line = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %50, i32 0, i32 12, !dbg !9282
  %51 = load %struct._object*, %struct._object** %print_file_and_line, align 8, !dbg !9282, !tbaa !9283
  %tobool62 = icmp ne %struct._object* %51, null, !dbg !9284
  br i1 %tobool62, label %if.then.63, label %if.end.73, !dbg !9285

if.then.63:                                       ; preds = %do.body.61
  %52 = bitcast i32* %vret64 to i8*, !dbg !9286
  call void @llvm.lifetime.start(i64 4, i8* %52) #2, !dbg !9286
  call void @llvm.dbg.declare(metadata i32* %vret64, metadata !1457, metadata !1979), !dbg !9288
  %53 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !9289, !tbaa !1975
  %54 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9290, !tbaa !1975
  %print_file_and_line65 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %54, i32 0, i32 12, !dbg !9291
  %55 = load %struct._object*, %struct._object** %print_file_and_line65, align 8, !dbg !9291, !tbaa !9283
  %56 = load i8*, i8** %arg.addr, align 8, !dbg !9292, !tbaa !1975
  %call66 = call i32 %53(%struct._object* %55, i8* %56), !dbg !9289
  store i32 %call66, i32* %vret64, align 4, !dbg !9288, !tbaa !5355
  %57 = load i32, i32* %vret64, align 4, !dbg !9293, !tbaa !5355
  %tobool67 = icmp ne i32 %57, 0, !dbg !9293
  br i1 %tobool67, label %if.then.68, label %if.end.69, !dbg !9295

if.then.68:                                       ; preds = %if.then.63
  %58 = load i32, i32* %vret64, align 4, !dbg !9296, !tbaa !5355
  store i32 %58, i32* %retval, !dbg !9298
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.70, !dbg !9298

if.end.69:                                        ; preds = %if.then.63
  store i32 0, i32* %cleanup.dest.slot, !dbg !9299
  br label %cleanup.70, !dbg !9299

cleanup.70:                                       ; preds = %if.end.69, %if.then.68
  %59 = bitcast i32* %vret64 to i8*, !dbg !9301
  call void @llvm.lifetime.end(i64 4, i8* %59) #2, !dbg !9301
  %cleanup.dest.71 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.14

LeafBlock.14:                                     ; preds = %cleanup.70
  %SwitchLeaf15 = icmp eq i32 %cleanup.dest.71, 1
  br i1 %SwitchLeaf15, label %return, label %NewDefault.13

NewDefault.13:                                    ; preds = %LeafBlock.14
  br label %cleanup.cont.72

cleanup.cont.72:                                  ; preds = %NewDefault.13
  br label %if.end.73, !dbg !9304

if.end.73:                                        ; preds = %cleanup.cont.72, %do.body.61
  br label %do.end.74, !dbg !9305

do.end.74:                                        ; preds = %if.end.73
  %60 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9308, !tbaa !1975
  %61 = bitcast %struct.PySyntaxErrorObject* %60 to %struct.PyBaseExceptionObject*, !dbg !9309
  %62 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !9310, !tbaa !1975
  %63 = load i8*, i8** %arg.addr, align 8, !dbg !9311, !tbaa !1975
  %call75 = call i32 @BaseException_traverse(%struct.PyBaseExceptionObject* %61, i32 (%struct._object*, i8*)* %62, i8* %63), !dbg !9312
  store i32 %call75, i32* %retval, !dbg !9313
  br label %return, !dbg !9313

return:                                           ; preds = %LeafBlock.14, %LeafBlock.11, %LeafBlock.8, %LeafBlock.5, %LeafBlock.2, %LeafBlock, %do.end.74
  %64 = load i32, i32* %retval, !dbg !9314
  ret i32 %64, !dbg !9314
}

; Function Attrs: nounwind uwtable
define internal i32 @SyntaxError_clear(%struct.PySyntaxErrorObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PySyntaxErrorObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  %_py_tmp69 = alloca %struct._object*, align 8
  %_py_decref_tmp74 = alloca %struct._object*, align 8
  %_py_tmp89 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  store %struct.PySyntaxErrorObject* %self, %struct.PySyntaxErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PySyntaxErrorObject** %self.addr, metadata !1465, metadata !1979), !dbg !9315
  br label %do.body, !dbg !9316

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9317
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9317
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1466, metadata !1979), !dbg !9319
  %1 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9320, !tbaa !1975
  %msg = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %1, i32 0, i32 7, !dbg !9321
  %2 = load %struct._object*, %struct._object** %msg, align 8, !dbg !9321, !tbaa !9038
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !9319, !tbaa !1975
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9322, !tbaa !1975
  %cmp = icmp ne %struct._object* %3, null, !dbg !9323
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !9324

if.then:                                          ; preds = %do.body
  %4 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9325, !tbaa !1975
  %msg1 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %4, i32 0, i32 7, !dbg !9327
  store %struct._object* null, %struct._object** %msg1, align 8, !dbg !9328, !tbaa !9038
  br label %do.body.2, !dbg !9329

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9330
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !9330
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1468, metadata !1979), !dbg !9332
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9333, !tbaa !1975
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !9332, !tbaa !1975
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9334, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !9336
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !9337, !tbaa !2003
  %dec = add i64 %8, -1, !dbg !9337
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9337, !tbaa !2003
  %cmp3 = icmp ne i64 %dec, 0, !dbg !9338
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !9339

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !9340

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9342, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !9344
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9344, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !9345
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9345, !tbaa !2091
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9346, !tbaa !1975
  call void %11(%struct._object* %12), !dbg !9347
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9348
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !9348
  br label %do.cond, !dbg !9350

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !9351

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !9353

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9355
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !9355
  br label %do.end.7, !dbg !9358

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !9359

do.body.8:                                        ; preds = %do.end.7
  %15 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !9360
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !9360
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !1472, metadata !1979), !dbg !9362
  %16 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9363, !tbaa !1975
  %filename = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %16, i32 0, i32 8, !dbg !9364
  %17 = load %struct._object*, %struct._object** %filename, align 8, !dbg !9364, !tbaa !8993
  store %struct._object* %17, %struct._object** %_py_tmp9, align 8, !dbg !9362, !tbaa !1975
  %18 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !9365, !tbaa !1975
  %cmp10 = icmp ne %struct._object* %18, null, !dbg !9366
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !9367

if.then.11:                                       ; preds = %do.body.8
  %19 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9368, !tbaa !1975
  %filename12 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %19, i32 0, i32 8, !dbg !9370
  store %struct._object* null, %struct._object** %filename12, align 8, !dbg !9371, !tbaa !8993
  br label %do.body.13, !dbg !9372

do.body.13:                                       ; preds = %if.then.11
  %20 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !9373
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !9373
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !1474, metadata !1979), !dbg !9375
  %21 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !9376, !tbaa !1975
  store %struct._object* %21, %struct._object** %_py_decref_tmp14, align 8, !dbg !9375, !tbaa !1975
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !9377, !tbaa !1975
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !9379
  %23 = load i64, i64* %ob_refcnt15, align 8, !dbg !9380, !tbaa !2003
  %dec16 = add i64 %23, -1, !dbg !9380
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !9380, !tbaa !2003
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !9381
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !9382

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !9383

if.else.19:                                       ; preds = %do.body.13
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !9385, !tbaa !1975
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !9387
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !9387, !tbaa !2039
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !9388
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !9388, !tbaa !2091
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !9389, !tbaa !1975
  call void %26(%struct._object* %27), !dbg !9390
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %28 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !9391
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !9391
  br label %do.cond.23, !dbg !9393

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !9394

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !9396

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %29 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !9398
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !9398
  br label %do.end.27, !dbg !9399

do.end.27:                                        ; preds = %if.end.25
  br label %do.body.28, !dbg !9400

do.body.28:                                       ; preds = %do.end.27
  %30 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !9401
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !9401
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !1478, metadata !1979), !dbg !9403
  %31 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9404, !tbaa !1975
  %lineno = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %31, i32 0, i32 9, !dbg !9405
  %32 = load %struct._object*, %struct._object** %lineno, align 8, !dbg !9405, !tbaa !9019
  store %struct._object* %32, %struct._object** %_py_tmp29, align 8, !dbg !9403, !tbaa !1975
  %33 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !9406, !tbaa !1975
  %cmp30 = icmp ne %struct._object* %33, null, !dbg !9407
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !9408

if.then.31:                                       ; preds = %do.body.28
  %34 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9409, !tbaa !1975
  %lineno32 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %34, i32 0, i32 9, !dbg !9411
  store %struct._object* null, %struct._object** %lineno32, align 8, !dbg !9412, !tbaa !9019
  br label %do.body.33, !dbg !9413

do.body.33:                                       ; preds = %if.then.31
  %35 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !9414
  call void @llvm.lifetime.start(i64 8, i8* %35) #2, !dbg !9414
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !1480, metadata !1979), !dbg !9416
  %36 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !9417, !tbaa !1975
  store %struct._object* %36, %struct._object** %_py_decref_tmp34, align 8, !dbg !9416, !tbaa !1975
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !9418, !tbaa !1975
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !9420
  %38 = load i64, i64* %ob_refcnt35, align 8, !dbg !9421, !tbaa !2003
  %dec36 = add i64 %38, -1, !dbg !9421
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !9421, !tbaa !2003
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !9422
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !9423

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !9424

if.else.39:                                       ; preds = %do.body.33
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !9426, !tbaa !1975
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !9428
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !9428, !tbaa !2039
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !9429
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !9429, !tbaa !2091
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !9430, !tbaa !1975
  call void %41(%struct._object* %42), !dbg !9431
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %43 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !9432
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !9432
  br label %do.cond.43, !dbg !9434

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !9435

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !9437

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %44 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !9439
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !9439
  br label %do.end.47, !dbg !9440

do.end.47:                                        ; preds = %if.end.45
  br label %do.body.48, !dbg !9441

do.body.48:                                       ; preds = %do.end.47
  %45 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !9442
  call void @llvm.lifetime.start(i64 8, i8* %45) #2, !dbg !9442
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp49, metadata !1484, metadata !1979), !dbg !9444
  %46 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9445, !tbaa !1975
  %offset = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %46, i32 0, i32 10, !dbg !9446
  %47 = load %struct._object*, %struct._object** %offset, align 8, !dbg !9446, !tbaa !9225
  store %struct._object* %47, %struct._object** %_py_tmp49, align 8, !dbg !9444, !tbaa !1975
  %48 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !9447, !tbaa !1975
  %cmp50 = icmp ne %struct._object* %48, null, !dbg !9448
  br i1 %cmp50, label %if.then.51, label %if.end.65, !dbg !9449

if.then.51:                                       ; preds = %do.body.48
  %49 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9450, !tbaa !1975
  %offset52 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %49, i32 0, i32 10, !dbg !9452
  store %struct._object* null, %struct._object** %offset52, align 8, !dbg !9453, !tbaa !9225
  br label %do.body.53, !dbg !9454

do.body.53:                                       ; preds = %if.then.51
  %50 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !9455
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !9455
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp54, metadata !1486, metadata !1979), !dbg !9457
  %51 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !9458, !tbaa !1975
  store %struct._object* %51, %struct._object** %_py_decref_tmp54, align 8, !dbg !9457, !tbaa !1975
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !9459, !tbaa !1975
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !9461
  %53 = load i64, i64* %ob_refcnt55, align 8, !dbg !9462, !tbaa !2003
  %dec56 = add i64 %53, -1, !dbg !9462
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !9462, !tbaa !2003
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !9463
  br i1 %cmp57, label %if.then.58, label %if.else.59, !dbg !9464

if.then.58:                                       ; preds = %do.body.53
  br label %if.end.62, !dbg !9465

if.else.59:                                       ; preds = %do.body.53
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !9467, !tbaa !1975
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !9469
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !9469, !tbaa !2039
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !9470
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !9470, !tbaa !2091
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !9471, !tbaa !1975
  call void %56(%struct._object* %57), !dbg !9472
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  %58 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !9473
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !9473
  br label %do.cond.63, !dbg !9475

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !9476

do.end.64:                                        ; preds = %do.cond.63
  br label %if.end.65, !dbg !9478

if.end.65:                                        ; preds = %do.end.64, %do.body.48
  %59 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !9480
  call void @llvm.lifetime.end(i64 8, i8* %59) #2, !dbg !9480
  br label %do.end.67, !dbg !9481

do.end.67:                                        ; preds = %if.end.65
  br label %do.body.68, !dbg !9482

do.body.68:                                       ; preds = %do.end.67
  %60 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !9483
  call void @llvm.lifetime.start(i64 8, i8* %60) #2, !dbg !9483
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp69, metadata !1490, metadata !1979), !dbg !9485
  %61 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9486, !tbaa !1975
  %text = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %61, i32 0, i32 11, !dbg !9487
  %62 = load %struct._object*, %struct._object** %text, align 8, !dbg !9487, !tbaa !9254
  store %struct._object* %62, %struct._object** %_py_tmp69, align 8, !dbg !9485, !tbaa !1975
  %63 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !9488, !tbaa !1975
  %cmp70 = icmp ne %struct._object* %63, null, !dbg !9489
  br i1 %cmp70, label %if.then.71, label %if.end.85, !dbg !9490

if.then.71:                                       ; preds = %do.body.68
  %64 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9491, !tbaa !1975
  %text72 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %64, i32 0, i32 11, !dbg !9493
  store %struct._object* null, %struct._object** %text72, align 8, !dbg !9494, !tbaa !9254
  br label %do.body.73, !dbg !9495

do.body.73:                                       ; preds = %if.then.71
  %65 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !9496
  call void @llvm.lifetime.start(i64 8, i8* %65) #2, !dbg !9496
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp74, metadata !1492, metadata !1979), !dbg !9498
  %66 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !9499, !tbaa !1975
  store %struct._object* %66, %struct._object** %_py_decref_tmp74, align 8, !dbg !9498, !tbaa !1975
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !9500, !tbaa !1975
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 0, !dbg !9502
  %68 = load i64, i64* %ob_refcnt75, align 8, !dbg !9503, !tbaa !2003
  %dec76 = add i64 %68, -1, !dbg !9503
  store i64 %dec76, i64* %ob_refcnt75, align 8, !dbg !9503, !tbaa !2003
  %cmp77 = icmp ne i64 %dec76, 0, !dbg !9504
  br i1 %cmp77, label %if.then.78, label %if.else.79, !dbg !9505

if.then.78:                                       ; preds = %do.body.73
  br label %if.end.82, !dbg !9506

if.else.79:                                       ; preds = %do.body.73
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !9508, !tbaa !1975
  %ob_type80 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 1, !dbg !9510
  %70 = load %struct._typeobject*, %struct._typeobject** %ob_type80, align 8, !dbg !9510, !tbaa !2039
  %tp_dealloc81 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %70, i32 0, i32 4, !dbg !9511
  %71 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc81, align 8, !dbg !9511, !tbaa !2091
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !9512, !tbaa !1975
  call void %71(%struct._object* %72), !dbg !9513
  br label %if.end.82

if.end.82:                                        ; preds = %if.else.79, %if.then.78
  %73 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !9514
  call void @llvm.lifetime.end(i64 8, i8* %73) #2, !dbg !9514
  br label %do.cond.83, !dbg !9516

do.cond.83:                                       ; preds = %if.end.82
  br label %do.end.84, !dbg !9517

do.end.84:                                        ; preds = %do.cond.83
  br label %if.end.85, !dbg !9519

if.end.85:                                        ; preds = %do.end.84, %do.body.68
  %74 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !9521
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !9521
  br label %do.end.87, !dbg !9522

do.end.87:                                        ; preds = %if.end.85
  br label %do.body.88, !dbg !9523

do.body.88:                                       ; preds = %do.end.87
  %75 = bitcast %struct._object** %_py_tmp89 to i8*, !dbg !9524
  call void @llvm.lifetime.start(i64 8, i8* %75) #2, !dbg !9524
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp89, metadata !1496, metadata !1979), !dbg !9526
  %76 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9527, !tbaa !1975
  %print_file_and_line = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %76, i32 0, i32 12, !dbg !9528
  %77 = load %struct._object*, %struct._object** %print_file_and_line, align 8, !dbg !9528, !tbaa !9283
  store %struct._object* %77, %struct._object** %_py_tmp89, align 8, !dbg !9526, !tbaa !1975
  %78 = load %struct._object*, %struct._object** %_py_tmp89, align 8, !dbg !9529, !tbaa !1975
  %cmp90 = icmp ne %struct._object* %78, null, !dbg !9530
  br i1 %cmp90, label %if.then.91, label %if.end.105, !dbg !9531

if.then.91:                                       ; preds = %do.body.88
  %79 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9532, !tbaa !1975
  %print_file_and_line92 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %79, i32 0, i32 12, !dbg !9534
  store %struct._object* null, %struct._object** %print_file_and_line92, align 8, !dbg !9535, !tbaa !9283
  br label %do.body.93, !dbg !9536

do.body.93:                                       ; preds = %if.then.91
  %80 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !9537
  call void @llvm.lifetime.start(i64 8, i8* %80) #2, !dbg !9537
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !1498, metadata !1979), !dbg !9539
  %81 = load %struct._object*, %struct._object** %_py_tmp89, align 8, !dbg !9540, !tbaa !1975
  store %struct._object* %81, %struct._object** %_py_decref_tmp94, align 8, !dbg !9539, !tbaa !1975
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !9541, !tbaa !1975
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0, !dbg !9543
  %83 = load i64, i64* %ob_refcnt95, align 8, !dbg !9544, !tbaa !2003
  %dec96 = add i64 %83, -1, !dbg !9544
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !9544, !tbaa !2003
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !9545
  br i1 %cmp97, label %if.then.98, label %if.else.99, !dbg !9546

if.then.98:                                       ; preds = %do.body.93
  br label %if.end.102, !dbg !9547

if.else.99:                                       ; preds = %do.body.93
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !9549, !tbaa !1975
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1, !dbg !9551
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8, !dbg !9551, !tbaa !2039
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 4, !dbg !9552
  %86 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8, !dbg !9552, !tbaa !2091
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !9553, !tbaa !1975
  call void %86(%struct._object* %87), !dbg !9554
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.99, %if.then.98
  %88 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !9555
  call void @llvm.lifetime.end(i64 8, i8* %88) #2, !dbg !9555
  br label %do.cond.103, !dbg !9557

do.cond.103:                                      ; preds = %if.end.102
  br label %do.end.104, !dbg !9558

do.end.104:                                       ; preds = %do.cond.103
  br label %if.end.105, !dbg !9560

if.end.105:                                       ; preds = %do.end.104, %do.body.88
  %89 = bitcast %struct._object** %_py_tmp89 to i8*, !dbg !9562
  call void @llvm.lifetime.end(i64 8, i8* %89) #2, !dbg !9562
  br label %do.end.107, !dbg !9563

do.end.107:                                       ; preds = %if.end.105
  %90 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9564, !tbaa !1975
  %91 = bitcast %struct.PySyntaxErrorObject* %90 to %struct.PyBaseExceptionObject*, !dbg !9565
  %call = call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %91), !dbg !9566
  ret i32 %call, !dbg !9567
}

; Function Attrs: nounwind uwtable
define internal i32 @SyntaxError_init(%struct.PySyntaxErrorObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PySyntaxErrorObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %info = alloca %struct._object*, align 8
  %lenargs = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp28 = alloca %struct._object*, align 8
  %_py_tmp41 = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  %_py_tmp67 = alloca %struct._object*, align 8
  %_py_decref_tmp72 = alloca %struct._object*, align 8
  %_py_tmp93 = alloca %struct._object*, align 8
  %_py_decref_tmp98 = alloca %struct._object*, align 8
  %_py_tmp119 = alloca %struct._object*, align 8
  %_py_decref_tmp124 = alloca %struct._object*, align 8
  %_py_decref_tmp145 = alloca %struct._object*, align 8
  store %struct.PySyntaxErrorObject* %self, %struct.PySyntaxErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PySyntaxErrorObject** %self.addr, metadata !1506, metadata !1979), !dbg !9568
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1507, metadata !1979), !dbg !9569
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1508, metadata !1979), !dbg !9570
  %0 = bitcast %struct._object** %info to i8*, !dbg !9571
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9571
  call void @llvm.dbg.declare(metadata %struct._object** %info, metadata !1509, metadata !1979), !dbg !9572
  store %struct._object* null, %struct._object** %info, align 8, !dbg !9572, !tbaa !1975
  %1 = bitcast i64* %lenargs to i8*, !dbg !9573
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9573
  call void @llvm.dbg.declare(metadata i64* %lenargs, metadata !1510, metadata !1979), !dbg !9574
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9575, !tbaa !1975
  %3 = bitcast %struct._object* %2 to %struct.PyVarObject*, !dbg !9576
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %3, i32 0, i32 1, !dbg !9577
  %4 = load i64, i64* %ob_size, align 8, !dbg !9577, !tbaa !2466
  store i64 %4, i64* %lenargs, align 8, !dbg !9574, !tbaa !2396
  %5 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9578, !tbaa !1975
  %6 = bitcast %struct.PySyntaxErrorObject* %5 to %struct.PyBaseExceptionObject*, !dbg !9580
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9581, !tbaa !1975
  %8 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !9582, !tbaa !1975
  %call = call i32 @BaseException_init(%struct.PyBaseExceptionObject* %6, %struct._object* %7, %struct._object* %8), !dbg !9583
  %cmp = icmp eq i32 %call, -1, !dbg !9584
  br i1 %cmp, label %if.then, label %if.end, !dbg !9585

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !9586
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9586

if.end:                                           ; preds = %entry
  %9 = load i64, i64* %lenargs, align 8, !dbg !9587, !tbaa !2396
  %cmp1 = icmp sge i64 %9, 1, !dbg !9588
  br i1 %cmp1, label %if.then.2, label %if.end.16, !dbg !9589

if.then.2:                                        ; preds = %if.end
  br label %do.body, !dbg !9590

do.body:                                          ; preds = %if.then.2
  %10 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9591
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !9591
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1511, metadata !1979), !dbg !9593
  %11 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9594, !tbaa !1975
  %msg = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %11, i32 0, i32 7, !dbg !9595
  %12 = load %struct._object*, %struct._object** %msg, align 8, !dbg !9595, !tbaa !9038
  store %struct._object* %12, %struct._object** %_py_tmp, align 8, !dbg !9593, !tbaa !1975
  %13 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9596, !tbaa !1975
  %cmp3 = icmp ne %struct._object* %13, null, !dbg !9597
  br i1 %cmp3, label %if.then.4, label %if.end.10, !dbg !9598

if.then.4:                                        ; preds = %do.body
  %14 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9599, !tbaa !1975
  %msg5 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %14, i32 0, i32 7, !dbg !9601
  store %struct._object* null, %struct._object** %msg5, align 8, !dbg !9602, !tbaa !9038
  br label %do.body.6, !dbg !9603

do.body.6:                                        ; preds = %if.then.4
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9604
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !9604
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1515, metadata !1979), !dbg !9606
  %16 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9607, !tbaa !1975
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !9606, !tbaa !1975
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9608, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !9610
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !9611, !tbaa !2003
  %dec = add i64 %18, -1, !dbg !9611
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9611, !tbaa !2003
  %cmp7 = icmp ne i64 %dec, 0, !dbg !9612
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !9613

if.then.8:                                        ; preds = %do.body.6
  br label %if.end.9, !dbg !9614

if.else:                                          ; preds = %do.body.6
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9616, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !9618
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9618, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !9619
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9619, !tbaa !2091
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9620, !tbaa !1975
  call void %21(%struct._object* %22), !dbg !9621
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9622
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !9622
  br label %do.cond, !dbg !9624

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !9625

do.end:                                           ; preds = %do.cond
  br label %if.end.10, !dbg !9627

if.end.10:                                        ; preds = %do.end, %do.body
  %24 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9629
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !9629
  br label %do.cond.11, !dbg !9632

do.cond.11:                                       ; preds = %if.end.10
  br label %do.end.12, !dbg !9633

do.end.12:                                        ; preds = %do.cond.11
  %25 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9635, !tbaa !1975
  %26 = bitcast %struct._object* %25 to %struct.PyTupleObject*, !dbg !9636
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %26, i32 0, i32 1, !dbg !9637
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !9638
  %27 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !9638, !tbaa !1975
  %28 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9639, !tbaa !1975
  %msg13 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %28, i32 0, i32 7, !dbg !9640
  store %struct._object* %27, %struct._object** %msg13, align 8, !dbg !9641, !tbaa !9038
  %29 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9642, !tbaa !1975
  %msg14 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %29, i32 0, i32 7, !dbg !9643
  %30 = load %struct._object*, %struct._object** %msg14, align 8, !dbg !9643, !tbaa !9038
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !9644
  %31 = load i64, i64* %ob_refcnt15, align 8, !dbg !9645, !tbaa !2003
  %inc = add i64 %31, 1, !dbg !9645
  store i64 %inc, i64* %ob_refcnt15, align 8, !dbg !9645, !tbaa !2003
  br label %if.end.16, !dbg !9646

if.end.16:                                        ; preds = %do.end.12, %if.end
  %32 = load i64, i64* %lenargs, align 8, !dbg !9647, !tbaa !2396
  %cmp17 = icmp eq i64 %32, 2, !dbg !9648
  br i1 %cmp17, label %if.then.18, label %if.end.156, !dbg !9649

if.then.18:                                       ; preds = %if.end.16
  %33 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9650, !tbaa !1975
  %34 = bitcast %struct._object* %33 to %struct.PyTupleObject*, !dbg !9651
  %ob_item19 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %34, i32 0, i32 1, !dbg !9652
  %arrayidx20 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item19, i32 0, i64 1, !dbg !9653
  %35 = load %struct._object*, %struct._object** %arrayidx20, align 8, !dbg !9653, !tbaa !1975
  store %struct._object* %35, %struct._object** %info, align 8, !dbg !9654, !tbaa !1975
  %36 = load %struct._object*, %struct._object** %info, align 8, !dbg !9655, !tbaa !1975
  %call21 = call %struct._object* @PySequence_Tuple(%struct._object* %36), !dbg !9656
  store %struct._object* %call21, %struct._object** %info, align 8, !dbg !9657, !tbaa !1975
  %37 = load %struct._object*, %struct._object** %info, align 8, !dbg !9658, !tbaa !1975
  %tobool = icmp ne %struct._object* %37, null, !dbg !9658
  br i1 %tobool, label %if.end.23, label %if.then.22, !dbg !9660

if.then.22:                                       ; preds = %if.then.18
  store i32 -1, i32* %retval, !dbg !9661
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9661

if.end.23:                                        ; preds = %if.then.18
  %38 = load %struct._object*, %struct._object** %info, align 8, !dbg !9662, !tbaa !1975
  %39 = bitcast %struct._object* %38 to %struct.PyVarObject*, !dbg !9663
  %ob_size24 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %39, i32 0, i32 1, !dbg !9664
  %40 = load i64, i64* %ob_size24, align 8, !dbg !9664, !tbaa !2466
  %cmp25 = icmp ne i64 %40, 4, !dbg !9665
  br i1 %cmp25, label %if.then.26, label %if.end.39, !dbg !9666

if.then.26:                                       ; preds = %if.end.23
  %41 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !9667, !tbaa !1975
  call void @PyErr_SetString(%struct._object* %41, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.166, i32 0, i32 0)), !dbg !9668
  br label %do.body.27, !dbg !9669

do.body.27:                                       ; preds = %if.then.26
  %42 = bitcast %struct._object** %_py_decref_tmp28 to i8*, !dbg !9670
  call void @llvm.lifetime.start(i64 8, i8* %42) #2, !dbg !9670
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp28, metadata !1519, metadata !1979), !dbg !9672
  %43 = load %struct._object*, %struct._object** %info, align 8, !dbg !9673, !tbaa !1975
  store %struct._object* %43, %struct._object** %_py_decref_tmp28, align 8, !dbg !9672, !tbaa !1975
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !9674, !tbaa !1975
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !9676
  %45 = load i64, i64* %ob_refcnt29, align 8, !dbg !9677, !tbaa !2003
  %dec30 = add i64 %45, -1, !dbg !9677
  store i64 %dec30, i64* %ob_refcnt29, align 8, !dbg !9677, !tbaa !2003
  %cmp31 = icmp ne i64 %dec30, 0, !dbg !9678
  br i1 %cmp31, label %if.then.32, label %if.else.33, !dbg !9679

if.then.32:                                       ; preds = %do.body.27
  br label %if.end.36, !dbg !9680

if.else.33:                                       ; preds = %do.body.27
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !9682, !tbaa !1975
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !9684
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !9684, !tbaa !2039
  %tp_dealloc35 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i32 0, i32 4, !dbg !9685
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc35, align 8, !dbg !9685, !tbaa !2091
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !9686, !tbaa !1975
  call void %48(%struct._object* %49), !dbg !9687
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.33, %if.then.32
  %50 = bitcast %struct._object** %_py_decref_tmp28 to i8*, !dbg !9688
  call void @llvm.lifetime.end(i64 8, i8* %50) #2, !dbg !9688
  br label %do.cond.37, !dbg !9690

do.cond.37:                                       ; preds = %if.end.36
  br label %do.end.38, !dbg !9691

do.end.38:                                        ; preds = %do.cond.37
  store i32 -1, i32* %retval, !dbg !9693
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9693

if.end.39:                                        ; preds = %if.end.23
  br label %do.body.40, !dbg !9694

do.body.40:                                       ; preds = %if.end.39
  %51 = bitcast %struct._object** %_py_tmp41 to i8*, !dbg !9695
  call void @llvm.lifetime.start(i64 8, i8* %51) #2, !dbg !9695
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp41, metadata !1525, metadata !1979), !dbg !9697
  %52 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9698, !tbaa !1975
  %filename = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %52, i32 0, i32 8, !dbg !9699
  %53 = load %struct._object*, %struct._object** %filename, align 8, !dbg !9699, !tbaa !8993
  store %struct._object* %53, %struct._object** %_py_tmp41, align 8, !dbg !9697, !tbaa !1975
  %54 = load %struct._object*, %struct._object** %_py_tmp41, align 8, !dbg !9700, !tbaa !1975
  %cmp42 = icmp ne %struct._object* %54, null, !dbg !9701
  br i1 %cmp42, label %if.then.43, label %if.end.57, !dbg !9702

if.then.43:                                       ; preds = %do.body.40
  %55 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9703, !tbaa !1975
  %filename44 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %55, i32 0, i32 8, !dbg !9705
  store %struct._object* null, %struct._object** %filename44, align 8, !dbg !9706, !tbaa !8993
  br label %do.body.45, !dbg !9707

do.body.45:                                       ; preds = %if.then.43
  %56 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !9708
  call void @llvm.lifetime.start(i64 8, i8* %56) #2, !dbg !9708
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp46, metadata !1527, metadata !1979), !dbg !9710
  %57 = load %struct._object*, %struct._object** %_py_tmp41, align 8, !dbg !9711, !tbaa !1975
  store %struct._object* %57, %struct._object** %_py_decref_tmp46, align 8, !dbg !9710, !tbaa !1975
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !9712, !tbaa !1975
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 0, !dbg !9714
  %59 = load i64, i64* %ob_refcnt47, align 8, !dbg !9715, !tbaa !2003
  %dec48 = add i64 %59, -1, !dbg !9715
  store i64 %dec48, i64* %ob_refcnt47, align 8, !dbg !9715, !tbaa !2003
  %cmp49 = icmp ne i64 %dec48, 0, !dbg !9716
  br i1 %cmp49, label %if.then.50, label %if.else.51, !dbg !9717

if.then.50:                                       ; preds = %do.body.45
  br label %if.end.54, !dbg !9718

if.else.51:                                       ; preds = %do.body.45
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !9720, !tbaa !1975
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 1, !dbg !9722
  %61 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8, !dbg !9722, !tbaa !2039
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 4, !dbg !9723
  %62 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8, !dbg !9723, !tbaa !2091
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !9724, !tbaa !1975
  call void %62(%struct._object* %63), !dbg !9725
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.51, %if.then.50
  %64 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !9726
  call void @llvm.lifetime.end(i64 8, i8* %64) #2, !dbg !9726
  br label %do.cond.55, !dbg !9728

do.cond.55:                                       ; preds = %if.end.54
  br label %do.end.56, !dbg !9729

do.end.56:                                        ; preds = %do.cond.55
  br label %if.end.57, !dbg !9731

if.end.57:                                        ; preds = %do.end.56, %do.body.40
  %65 = bitcast %struct._object** %_py_tmp41 to i8*, !dbg !9733
  call void @llvm.lifetime.end(i64 8, i8* %65) #2, !dbg !9733
  br label %do.cond.58, !dbg !9736

do.cond.58:                                       ; preds = %if.end.57
  br label %do.end.59, !dbg !9737

do.end.59:                                        ; preds = %do.cond.58
  %66 = load %struct._object*, %struct._object** %info, align 8, !dbg !9739, !tbaa !1975
  %67 = bitcast %struct._object* %66 to %struct.PyTupleObject*, !dbg !9740
  %ob_item60 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %67, i32 0, i32 1, !dbg !9741
  %arrayidx61 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item60, i32 0, i64 0, !dbg !9742
  %68 = load %struct._object*, %struct._object** %arrayidx61, align 8, !dbg !9742, !tbaa !1975
  %69 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9743, !tbaa !1975
  %filename62 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %69, i32 0, i32 8, !dbg !9744
  store %struct._object* %68, %struct._object** %filename62, align 8, !dbg !9745, !tbaa !8993
  %70 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9746, !tbaa !1975
  %filename63 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %70, i32 0, i32 8, !dbg !9747
  %71 = load %struct._object*, %struct._object** %filename63, align 8, !dbg !9747, !tbaa !8993
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0, !dbg !9748
  %72 = load i64, i64* %ob_refcnt64, align 8, !dbg !9749, !tbaa !2003
  %inc65 = add i64 %72, 1, !dbg !9749
  store i64 %inc65, i64* %ob_refcnt64, align 8, !dbg !9749, !tbaa !2003
  br label %do.body.66, !dbg !9750

do.body.66:                                       ; preds = %do.end.59
  %73 = bitcast %struct._object** %_py_tmp67 to i8*, !dbg !9751
  call void @llvm.lifetime.start(i64 8, i8* %73) #2, !dbg !9751
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp67, metadata !1531, metadata !1979), !dbg !9753
  %74 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9754, !tbaa !1975
  %lineno = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %74, i32 0, i32 9, !dbg !9755
  %75 = load %struct._object*, %struct._object** %lineno, align 8, !dbg !9755, !tbaa !9019
  store %struct._object* %75, %struct._object** %_py_tmp67, align 8, !dbg !9753, !tbaa !1975
  %76 = load %struct._object*, %struct._object** %_py_tmp67, align 8, !dbg !9756, !tbaa !1975
  %cmp68 = icmp ne %struct._object* %76, null, !dbg !9757
  br i1 %cmp68, label %if.then.69, label %if.end.83, !dbg !9758

if.then.69:                                       ; preds = %do.body.66
  %77 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9759, !tbaa !1975
  %lineno70 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %77, i32 0, i32 9, !dbg !9761
  store %struct._object* null, %struct._object** %lineno70, align 8, !dbg !9762, !tbaa !9019
  br label %do.body.71, !dbg !9763

do.body.71:                                       ; preds = %if.then.69
  %78 = bitcast %struct._object** %_py_decref_tmp72 to i8*, !dbg !9764
  call void @llvm.lifetime.start(i64 8, i8* %78) #2, !dbg !9764
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp72, metadata !1533, metadata !1979), !dbg !9766
  %79 = load %struct._object*, %struct._object** %_py_tmp67, align 8, !dbg !9767, !tbaa !1975
  store %struct._object* %79, %struct._object** %_py_decref_tmp72, align 8, !dbg !9766, !tbaa !1975
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !9768, !tbaa !1975
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0, !dbg !9770
  %81 = load i64, i64* %ob_refcnt73, align 8, !dbg !9771, !tbaa !2003
  %dec74 = add i64 %81, -1, !dbg !9771
  store i64 %dec74, i64* %ob_refcnt73, align 8, !dbg !9771, !tbaa !2003
  %cmp75 = icmp ne i64 %dec74, 0, !dbg !9772
  br i1 %cmp75, label %if.then.76, label %if.else.77, !dbg !9773

if.then.76:                                       ; preds = %do.body.71
  br label %if.end.80, !dbg !9774

if.else.77:                                       ; preds = %do.body.71
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !9776, !tbaa !1975
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1, !dbg !9778
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8, !dbg !9778, !tbaa !2039
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4, !dbg !9779
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8, !dbg !9779, !tbaa !2091
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !9780, !tbaa !1975
  call void %84(%struct._object* %85), !dbg !9781
  br label %if.end.80

if.end.80:                                        ; preds = %if.else.77, %if.then.76
  %86 = bitcast %struct._object** %_py_decref_tmp72 to i8*, !dbg !9782
  call void @llvm.lifetime.end(i64 8, i8* %86) #2, !dbg !9782
  br label %do.cond.81, !dbg !9784

do.cond.81:                                       ; preds = %if.end.80
  br label %do.end.82, !dbg !9785

do.end.82:                                        ; preds = %do.cond.81
  br label %if.end.83, !dbg !9787

if.end.83:                                        ; preds = %do.end.82, %do.body.66
  %87 = bitcast %struct._object** %_py_tmp67 to i8*, !dbg !9789
  call void @llvm.lifetime.end(i64 8, i8* %87) #2, !dbg !9789
  br label %do.cond.84, !dbg !9790

do.cond.84:                                       ; preds = %if.end.83
  br label %do.end.85, !dbg !9791

do.end.85:                                        ; preds = %do.cond.84
  %88 = load %struct._object*, %struct._object** %info, align 8, !dbg !9793, !tbaa !1975
  %89 = bitcast %struct._object* %88 to %struct.PyTupleObject*, !dbg !9794
  %ob_item86 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %89, i32 0, i32 1, !dbg !9795
  %arrayidx87 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item86, i32 0, i64 1, !dbg !9796
  %90 = load %struct._object*, %struct._object** %arrayidx87, align 8, !dbg !9796, !tbaa !1975
  %91 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9797, !tbaa !1975
  %lineno88 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %91, i32 0, i32 9, !dbg !9798
  store %struct._object* %90, %struct._object** %lineno88, align 8, !dbg !9799, !tbaa !9019
  %92 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9800, !tbaa !1975
  %lineno89 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %92, i32 0, i32 9, !dbg !9801
  %93 = load %struct._object*, %struct._object** %lineno89, align 8, !dbg !9801, !tbaa !9019
  %ob_refcnt90 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0, !dbg !9802
  %94 = load i64, i64* %ob_refcnt90, align 8, !dbg !9803, !tbaa !2003
  %inc91 = add i64 %94, 1, !dbg !9803
  store i64 %inc91, i64* %ob_refcnt90, align 8, !dbg !9803, !tbaa !2003
  br label %do.body.92, !dbg !9804

do.body.92:                                       ; preds = %do.end.85
  %95 = bitcast %struct._object** %_py_tmp93 to i8*, !dbg !9805
  call void @llvm.lifetime.start(i64 8, i8* %95) #2, !dbg !9805
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp93, metadata !1537, metadata !1979), !dbg !9807
  %96 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9808, !tbaa !1975
  %offset = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %96, i32 0, i32 10, !dbg !9809
  %97 = load %struct._object*, %struct._object** %offset, align 8, !dbg !9809, !tbaa !9225
  store %struct._object* %97, %struct._object** %_py_tmp93, align 8, !dbg !9807, !tbaa !1975
  %98 = load %struct._object*, %struct._object** %_py_tmp93, align 8, !dbg !9810, !tbaa !1975
  %cmp94 = icmp ne %struct._object* %98, null, !dbg !9811
  br i1 %cmp94, label %if.then.95, label %if.end.109, !dbg !9812

if.then.95:                                       ; preds = %do.body.92
  %99 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9813, !tbaa !1975
  %offset96 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %99, i32 0, i32 10, !dbg !9815
  store %struct._object* null, %struct._object** %offset96, align 8, !dbg !9816, !tbaa !9225
  br label %do.body.97, !dbg !9817

do.body.97:                                       ; preds = %if.then.95
  %100 = bitcast %struct._object** %_py_decref_tmp98 to i8*, !dbg !9818
  call void @llvm.lifetime.start(i64 8, i8* %100) #2, !dbg !9818
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp98, metadata !1539, metadata !1979), !dbg !9820
  %101 = load %struct._object*, %struct._object** %_py_tmp93, align 8, !dbg !9821, !tbaa !1975
  store %struct._object* %101, %struct._object** %_py_decref_tmp98, align 8, !dbg !9820, !tbaa !1975
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !9822, !tbaa !1975
  %ob_refcnt99 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 0, !dbg !9824
  %103 = load i64, i64* %ob_refcnt99, align 8, !dbg !9825, !tbaa !2003
  %dec100 = add i64 %103, -1, !dbg !9825
  store i64 %dec100, i64* %ob_refcnt99, align 8, !dbg !9825, !tbaa !2003
  %cmp101 = icmp ne i64 %dec100, 0, !dbg !9826
  br i1 %cmp101, label %if.then.102, label %if.else.103, !dbg !9827

if.then.102:                                      ; preds = %do.body.97
  br label %if.end.106, !dbg !9828

if.else.103:                                      ; preds = %do.body.97
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !9830, !tbaa !1975
  %ob_type104 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 1, !dbg !9832
  %105 = load %struct._typeobject*, %struct._typeobject** %ob_type104, align 8, !dbg !9832, !tbaa !2039
  %tp_dealloc105 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 4, !dbg !9833
  %106 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc105, align 8, !dbg !9833, !tbaa !2091
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !9834, !tbaa !1975
  call void %106(%struct._object* %107), !dbg !9835
  br label %if.end.106

if.end.106:                                       ; preds = %if.else.103, %if.then.102
  %108 = bitcast %struct._object** %_py_decref_tmp98 to i8*, !dbg !9836
  call void @llvm.lifetime.end(i64 8, i8* %108) #2, !dbg !9836
  br label %do.cond.107, !dbg !9838

do.cond.107:                                      ; preds = %if.end.106
  br label %do.end.108, !dbg !9839

do.end.108:                                       ; preds = %do.cond.107
  br label %if.end.109, !dbg !9841

if.end.109:                                       ; preds = %do.end.108, %do.body.92
  %109 = bitcast %struct._object** %_py_tmp93 to i8*, !dbg !9843
  call void @llvm.lifetime.end(i64 8, i8* %109) #2, !dbg !9843
  br label %do.cond.110, !dbg !9844

do.cond.110:                                      ; preds = %if.end.109
  br label %do.end.111, !dbg !9845

do.end.111:                                       ; preds = %do.cond.110
  %110 = load %struct._object*, %struct._object** %info, align 8, !dbg !9847, !tbaa !1975
  %111 = bitcast %struct._object* %110 to %struct.PyTupleObject*, !dbg !9848
  %ob_item112 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %111, i32 0, i32 1, !dbg !9849
  %arrayidx113 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item112, i32 0, i64 2, !dbg !9850
  %112 = load %struct._object*, %struct._object** %arrayidx113, align 8, !dbg !9850, !tbaa !1975
  %113 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9851, !tbaa !1975
  %offset114 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %113, i32 0, i32 10, !dbg !9852
  store %struct._object* %112, %struct._object** %offset114, align 8, !dbg !9853, !tbaa !9225
  %114 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9854, !tbaa !1975
  %offset115 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %114, i32 0, i32 10, !dbg !9855
  %115 = load %struct._object*, %struct._object** %offset115, align 8, !dbg !9855, !tbaa !9225
  %ob_refcnt116 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 0, !dbg !9856
  %116 = load i64, i64* %ob_refcnt116, align 8, !dbg !9857, !tbaa !2003
  %inc117 = add i64 %116, 1, !dbg !9857
  store i64 %inc117, i64* %ob_refcnt116, align 8, !dbg !9857, !tbaa !2003
  br label %do.body.118, !dbg !9858

do.body.118:                                      ; preds = %do.end.111
  %117 = bitcast %struct._object** %_py_tmp119 to i8*, !dbg !9859
  call void @llvm.lifetime.start(i64 8, i8* %117) #2, !dbg !9859
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp119, metadata !1543, metadata !1979), !dbg !9861
  %118 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9862, !tbaa !1975
  %text = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %118, i32 0, i32 11, !dbg !9863
  %119 = load %struct._object*, %struct._object** %text, align 8, !dbg !9863, !tbaa !9254
  store %struct._object* %119, %struct._object** %_py_tmp119, align 8, !dbg !9861, !tbaa !1975
  %120 = load %struct._object*, %struct._object** %_py_tmp119, align 8, !dbg !9864, !tbaa !1975
  %cmp120 = icmp ne %struct._object* %120, null, !dbg !9865
  br i1 %cmp120, label %if.then.121, label %if.end.135, !dbg !9866

if.then.121:                                      ; preds = %do.body.118
  %121 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9867, !tbaa !1975
  %text122 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %121, i32 0, i32 11, !dbg !9869
  store %struct._object* null, %struct._object** %text122, align 8, !dbg !9870, !tbaa !9254
  br label %do.body.123, !dbg !9871

do.body.123:                                      ; preds = %if.then.121
  %122 = bitcast %struct._object** %_py_decref_tmp124 to i8*, !dbg !9872
  call void @llvm.lifetime.start(i64 8, i8* %122) #2, !dbg !9872
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp124, metadata !1545, metadata !1979), !dbg !9874
  %123 = load %struct._object*, %struct._object** %_py_tmp119, align 8, !dbg !9875, !tbaa !1975
  store %struct._object* %123, %struct._object** %_py_decref_tmp124, align 8, !dbg !9874, !tbaa !1975
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp124, align 8, !dbg !9876, !tbaa !1975
  %ob_refcnt125 = getelementptr inbounds %struct._object, %struct._object* %124, i32 0, i32 0, !dbg !9878
  %125 = load i64, i64* %ob_refcnt125, align 8, !dbg !9879, !tbaa !2003
  %dec126 = add i64 %125, -1, !dbg !9879
  store i64 %dec126, i64* %ob_refcnt125, align 8, !dbg !9879, !tbaa !2003
  %cmp127 = icmp ne i64 %dec126, 0, !dbg !9880
  br i1 %cmp127, label %if.then.128, label %if.else.129, !dbg !9881

if.then.128:                                      ; preds = %do.body.123
  br label %if.end.132, !dbg !9882

if.else.129:                                      ; preds = %do.body.123
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp124, align 8, !dbg !9884, !tbaa !1975
  %ob_type130 = getelementptr inbounds %struct._object, %struct._object* %126, i32 0, i32 1, !dbg !9886
  %127 = load %struct._typeobject*, %struct._typeobject** %ob_type130, align 8, !dbg !9886, !tbaa !2039
  %tp_dealloc131 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %127, i32 0, i32 4, !dbg !9887
  %128 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc131, align 8, !dbg !9887, !tbaa !2091
  %129 = load %struct._object*, %struct._object** %_py_decref_tmp124, align 8, !dbg !9888, !tbaa !1975
  call void %128(%struct._object* %129), !dbg !9889
  br label %if.end.132

if.end.132:                                       ; preds = %if.else.129, %if.then.128
  %130 = bitcast %struct._object** %_py_decref_tmp124 to i8*, !dbg !9890
  call void @llvm.lifetime.end(i64 8, i8* %130) #2, !dbg !9890
  br label %do.cond.133, !dbg !9892

do.cond.133:                                      ; preds = %if.end.132
  br label %do.end.134, !dbg !9893

do.end.134:                                       ; preds = %do.cond.133
  br label %if.end.135, !dbg !9895

if.end.135:                                       ; preds = %do.end.134, %do.body.118
  %131 = bitcast %struct._object** %_py_tmp119 to i8*, !dbg !9897
  call void @llvm.lifetime.end(i64 8, i8* %131) #2, !dbg !9897
  br label %do.cond.136, !dbg !9898

do.cond.136:                                      ; preds = %if.end.135
  br label %do.end.137, !dbg !9899

do.end.137:                                       ; preds = %do.cond.136
  %132 = load %struct._object*, %struct._object** %info, align 8, !dbg !9901, !tbaa !1975
  %133 = bitcast %struct._object* %132 to %struct.PyTupleObject*, !dbg !9902
  %ob_item138 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %133, i32 0, i32 1, !dbg !9903
  %arrayidx139 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item138, i32 0, i64 3, !dbg !9904
  %134 = load %struct._object*, %struct._object** %arrayidx139, align 8, !dbg !9904, !tbaa !1975
  %135 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9905, !tbaa !1975
  %text140 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %135, i32 0, i32 11, !dbg !9906
  store %struct._object* %134, %struct._object** %text140, align 8, !dbg !9907, !tbaa !9254
  %136 = load %struct.PySyntaxErrorObject*, %struct.PySyntaxErrorObject** %self.addr, align 8, !dbg !9908, !tbaa !1975
  %text141 = getelementptr inbounds %struct.PySyntaxErrorObject, %struct.PySyntaxErrorObject* %136, i32 0, i32 11, !dbg !9909
  %137 = load %struct._object*, %struct._object** %text141, align 8, !dbg !9909, !tbaa !9254
  %ob_refcnt142 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 0, !dbg !9910
  %138 = load i64, i64* %ob_refcnt142, align 8, !dbg !9911, !tbaa !2003
  %inc143 = add i64 %138, 1, !dbg !9911
  store i64 %inc143, i64* %ob_refcnt142, align 8, !dbg !9911, !tbaa !2003
  br label %do.body.144, !dbg !9912

do.body.144:                                      ; preds = %do.end.137
  %139 = bitcast %struct._object** %_py_decref_tmp145 to i8*, !dbg !9913
  call void @llvm.lifetime.start(i64 8, i8* %139) #2, !dbg !9913
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp145, metadata !1549, metadata !1979), !dbg !9915
  %140 = load %struct._object*, %struct._object** %info, align 8, !dbg !9916, !tbaa !1975
  store %struct._object* %140, %struct._object** %_py_decref_tmp145, align 8, !dbg !9915, !tbaa !1975
  %141 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8, !dbg !9917, !tbaa !1975
  %ob_refcnt146 = getelementptr inbounds %struct._object, %struct._object* %141, i32 0, i32 0, !dbg !9919
  %142 = load i64, i64* %ob_refcnt146, align 8, !dbg !9920, !tbaa !2003
  %dec147 = add i64 %142, -1, !dbg !9920
  store i64 %dec147, i64* %ob_refcnt146, align 8, !dbg !9920, !tbaa !2003
  %cmp148 = icmp ne i64 %dec147, 0, !dbg !9921
  br i1 %cmp148, label %if.then.149, label %if.else.150, !dbg !9922

if.then.149:                                      ; preds = %do.body.144
  br label %if.end.153, !dbg !9923

if.else.150:                                      ; preds = %do.body.144
  %143 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8, !dbg !9925, !tbaa !1975
  %ob_type151 = getelementptr inbounds %struct._object, %struct._object* %143, i32 0, i32 1, !dbg !9927
  %144 = load %struct._typeobject*, %struct._typeobject** %ob_type151, align 8, !dbg !9927, !tbaa !2039
  %tp_dealloc152 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %144, i32 0, i32 4, !dbg !9928
  %145 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc152, align 8, !dbg !9928, !tbaa !2091
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8, !dbg !9929, !tbaa !1975
  call void %145(%struct._object* %146), !dbg !9930
  br label %if.end.153

if.end.153:                                       ; preds = %if.else.150, %if.then.149
  %147 = bitcast %struct._object** %_py_decref_tmp145 to i8*, !dbg !9931
  call void @llvm.lifetime.end(i64 8, i8* %147) #2, !dbg !9931
  br label %do.cond.154, !dbg !9933

do.cond.154:                                      ; preds = %if.end.153
  br label %do.end.155, !dbg !9934

do.end.155:                                       ; preds = %do.cond.154
  br label %if.end.156, !dbg !9936

if.end.156:                                       ; preds = %do.end.155, %if.end.16
  store i32 0, i32* %retval, !dbg !9937
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9937

cleanup:                                          ; preds = %if.end.156, %do.end.38, %if.then.22, %if.then
  %148 = bitcast i64* %lenargs to i8*, !dbg !9938
  call void @llvm.lifetime.end(i64 8, i8* %148) #2, !dbg !9938
  %149 = bitcast %struct._object** %info to i8*, !dbg !9938
  call void @llvm.lifetime.end(i64 8, i8* %149) #2, !dbg !9938
  %150 = load i32, i32* %retval, !dbg !9938
  ret i32 %150, !dbg !9938
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @my_basename(%struct._object* %name) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %name.addr = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %size = alloca i64, align 8
  %offset = alloca i64, align 8
  %kind = alloca i32, align 4
  %data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %name, %struct._object** %name.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %name.addr, metadata !1424, metadata !1979), !dbg !9939
  %0 = bitcast i64* %i to i8*, !dbg !9940
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9940
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1425, metadata !1979), !dbg !9941
  %1 = bitcast i64* %size to i8*, !dbg !9940
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9940
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1426, metadata !1979), !dbg !9942
  %2 = bitcast i64* %offset to i8*, !dbg !9940
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !9940
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !1427, metadata !1979), !dbg !9943
  %3 = bitcast i32* %kind to i8*, !dbg !9944
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !9944
  call void @llvm.dbg.declare(metadata i32* %kind, metadata !1428, metadata !1979), !dbg !9945
  %4 = bitcast i8** %data to i8*, !dbg !9946
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !9946
  call void @llvm.dbg.declare(metadata i8** %data, metadata !1429, metadata !1979), !dbg !9947
  %5 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !9948, !tbaa !1975
  %6 = bitcast %struct._object* %5 to %struct.PyASCIIObject*, !dbg !9950
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %6, i32 0, i32 3, !dbg !9951
  %7 = bitcast %struct.anon* %state to i32*, !dbg !9952
  %bf.load = load i32, i32* %7, align 4, !dbg !9952
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !9952
  %bf.clear = and i32 %bf.lshr, 1, !dbg !9952
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !9953
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9953

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !9954

cond.false:                                       ; preds = %entry
  %8 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !9956, !tbaa !1975
  %call = call i32 @_PyUnicode_Ready(%struct._object* %8), !dbg !9958
  br label %cond.end, !dbg !9953

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call, %cond.false ], !dbg !9953
  %tobool1 = icmp ne i32 %cond, 0, !dbg !9959
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9962

if.then:                                          ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval, !dbg !9963
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9963

if.end:                                           ; preds = %cond.end
  %9 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !9964, !tbaa !1975
  %10 = bitcast %struct._object* %9 to %struct.PyASCIIObject*, !dbg !9965
  %state2 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %10, i32 0, i32 3, !dbg !9966
  %11 = bitcast %struct.anon* %state2 to i32*, !dbg !9967
  %bf.load3 = load i32, i32* %11, align 4, !dbg !9967
  %bf.lshr4 = lshr i32 %bf.load3, 2, !dbg !9967
  %bf.clear5 = and i32 %bf.lshr4, 7, !dbg !9967
  store i32 %bf.clear5, i32* %kind, align 4, !dbg !9968, !tbaa !5355
  %12 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !9969, !tbaa !1975
  %13 = bitcast %struct._object* %12 to %struct.PyASCIIObject*, !dbg !9970
  %state6 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %13, i32 0, i32 3, !dbg !9971
  %14 = bitcast %struct.anon* %state6 to i32*, !dbg !9972
  %bf.load7 = load i32, i32* %14, align 4, !dbg !9972
  %bf.lshr8 = lshr i32 %bf.load7, 5, !dbg !9972
  %bf.clear9 = and i32 %bf.lshr8, 1, !dbg !9972
  %tobool10 = icmp ne i32 %bf.clear9, 0, !dbg !9973
  br i1 %tobool10, label %cond.true.11, label %cond.false.22, !dbg !9973

cond.true.11:                                     ; preds = %if.end
  %15 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !9974, !tbaa !1975
  %16 = bitcast %struct._object* %15 to %struct.PyASCIIObject*, !dbg !9976
  %state12 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %16, i32 0, i32 3, !dbg !9977
  %17 = bitcast %struct.anon* %state12 to i32*, !dbg !9978
  %bf.load13 = load i32, i32* %17, align 4, !dbg !9978
  %bf.lshr14 = lshr i32 %bf.load13, 6, !dbg !9978
  %bf.clear15 = and i32 %bf.lshr14, 1, !dbg !9978
  %tobool16 = icmp ne i32 %bf.clear15, 0, !dbg !9979
  br i1 %tobool16, label %cond.true.17, label %cond.false.18, !dbg !9979

cond.true.17:                                     ; preds = %cond.true.11
  %18 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !9980, !tbaa !1975
  %19 = bitcast %struct._object* %18 to %struct.PyASCIIObject*, !dbg !9982
  %add.ptr = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %19, i64 1, !dbg !9983
  %20 = bitcast %struct.PyASCIIObject* %add.ptr to i8*, !dbg !9984
  br label %cond.end.20, !dbg !9979

cond.false.18:                                    ; preds = %cond.true.11
  %21 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !9985, !tbaa !1975
  %22 = bitcast %struct._object* %21 to %struct.PyCompactUnicodeObject*, !dbg !9987
  %add.ptr19 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %22, i64 1, !dbg !9988
  %23 = bitcast %struct.PyCompactUnicodeObject* %add.ptr19 to i8*, !dbg !9989
  br label %cond.end.20, !dbg !9979

cond.end.20:                                      ; preds = %cond.false.18, %cond.true.17
  %cond21 = phi i8* [ %20, %cond.true.17 ], [ %23, %cond.false.18 ], !dbg !9979
  br label %cond.end.24, !dbg !9990

cond.false.22:                                    ; preds = %if.end
  %24 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !9993, !tbaa !1975
  %25 = bitcast %struct._object* %24 to %struct.PyUnicodeObject*, !dbg !9995
  %data23 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %25, i32 0, i32 1, !dbg !9996
  %any = bitcast %union.anon* %data23 to i8**, !dbg !9997
  %26 = load i8*, i8** %any, align 8, !dbg !9997, !tbaa !1975
  br label %cond.end.24, !dbg !9973

cond.end.24:                                      ; preds = %cond.false.22, %cond.end.20
  %cond25 = phi i8* [ %cond21, %cond.end.20 ], [ %26, %cond.false.22 ], !dbg !9973
  store i8* %cond25, i8** %data, align 8, !dbg !9998, !tbaa !1975
  %27 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !10001, !tbaa !1975
  %28 = bitcast %struct._object* %27 to %struct.PyASCIIObject*, !dbg !10002
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %28, i32 0, i32 1, !dbg !10003
  %29 = load i64, i64* %length, align 8, !dbg !10003, !tbaa !2400
  store i64 %29, i64* %size, align 8, !dbg !10004, !tbaa !2396
  store i64 0, i64* %offset, align 8, !dbg !10005, !tbaa !2396
  store i64 0, i64* %i, align 8, !dbg !10006, !tbaa !2396
  br label %for.cond, !dbg !10008

for.cond:                                         ; preds = %for.inc, %cond.end.24
  %30 = load i64, i64* %i, align 8, !dbg !10009, !tbaa !2396
  %31 = load i64, i64* %size, align 8, !dbg !10013, !tbaa !2396
  %cmp = icmp slt i64 %30, %31, !dbg !10014
  br i1 %cmp, label %for.body, label %for.end, !dbg !10015

for.body:                                         ; preds = %for.cond
  %32 = load i32, i32* %kind, align 4, !dbg !10016, !tbaa !5355
  %cmp26 = icmp eq i32 %32, 1, !dbg !10019
  br i1 %cmp26, label %cond.true.27, label %cond.false.28, !dbg !10020

cond.true.27:                                     ; preds = %for.body
  %33 = load i64, i64* %i, align 8, !dbg !10021, !tbaa !2396
  %34 = load i8*, i8** %data, align 8, !dbg !10023, !tbaa !1975
  %arrayidx = getelementptr i8, i8* %34, i64 %33, !dbg !10024
  %35 = load i8, i8* %arrayidx, align 1, !dbg !10024, !tbaa !10025
  %conv = zext i8 %35 to i32, !dbg !10024
  br label %cond.end.38, !dbg !10020

cond.false.28:                                    ; preds = %for.body
  %36 = load i32, i32* %kind, align 4, !dbg !10026, !tbaa !5355
  %cmp29 = icmp eq i32 %36, 2, !dbg !10028
  br i1 %cmp29, label %cond.true.31, label %cond.false.34, !dbg !10029

cond.true.31:                                     ; preds = %cond.false.28
  %37 = load i64, i64* %i, align 8, !dbg !10030, !tbaa !2396
  %38 = load i8*, i8** %data, align 8, !dbg !10032, !tbaa !1975
  %39 = bitcast i8* %38 to i16*, !dbg !10033
  %arrayidx32 = getelementptr i16, i16* %39, i64 %37, !dbg !10034
  %40 = load i16, i16* %arrayidx32, align 2, !dbg !10034, !tbaa !10035
  %conv33 = zext i16 %40 to i32, !dbg !10034
  br label %cond.end.36, !dbg !10029

cond.false.34:                                    ; preds = %cond.false.28
  %41 = load i64, i64* %i, align 8, !dbg !10037, !tbaa !2396
  %42 = load i8*, i8** %data, align 8, !dbg !10039, !tbaa !1975
  %43 = bitcast i8* %42 to i32*, !dbg !10040
  %arrayidx35 = getelementptr i32, i32* %43, i64 %41, !dbg !10041
  %44 = load i32, i32* %arrayidx35, align 4, !dbg !10041, !tbaa !5355
  br label %cond.end.36, !dbg !10029

cond.end.36:                                      ; preds = %cond.false.34, %cond.true.31
  %cond37 = phi i32 [ %conv33, %cond.true.31 ], [ %44, %cond.false.34 ], !dbg !10029
  br label %cond.end.38, !dbg !10042

cond.end.38:                                      ; preds = %cond.end.36, %cond.true.27
  %cond39 = phi i32 [ %conv, %cond.true.27 ], [ %cond37, %cond.end.36 ], !dbg !10020
  %cmp40 = icmp eq i32 %cond39, 47, !dbg !10045
  br i1 %cmp40, label %if.then.42, label %if.end.43, !dbg !10048

if.then.42:                                       ; preds = %cond.end.38
  %45 = load i64, i64* %i, align 8, !dbg !10049, !tbaa !2396
  %add = add i64 %45, 1, !dbg !10050
  store i64 %add, i64* %offset, align 8, !dbg !10051, !tbaa !2396
  br label %if.end.43, !dbg !10052

if.end.43:                                        ; preds = %if.then.42, %cond.end.38
  br label %for.inc, !dbg !10053

for.inc:                                          ; preds = %if.end.43
  %46 = load i64, i64* %i, align 8, !dbg !10054, !tbaa !2396
  %inc = add i64 %46, 1, !dbg !10054
  store i64 %inc, i64* %i, align 8, !dbg !10054, !tbaa !2396
  br label %for.cond, !dbg !10055

for.end:                                          ; preds = %for.cond
  %47 = load i64, i64* %offset, align 8, !dbg !10056, !tbaa !2396
  %cmp44 = icmp ne i64 %47, 0, !dbg !10058
  br i1 %cmp44, label %if.then.46, label %if.else, !dbg !10059

if.then.46:                                       ; preds = %for.end
  %48 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !10060, !tbaa !1975
  %49 = load i64, i64* %offset, align 8, !dbg !10061, !tbaa !2396
  %50 = load i64, i64* %size, align 8, !dbg !10062, !tbaa !2396
  %call47 = call %struct._object* @PyUnicode_Substring(%struct._object* %48, i64 %49, i64 %50), !dbg !10063
  store %struct._object* %call47, %struct._object** %retval, !dbg !10064
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10064

if.else:                                          ; preds = %for.end
  %51 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !10065, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !10067
  %52 = load i64, i64* %ob_refcnt, align 8, !dbg !10068, !tbaa !2003
  %inc48 = add i64 %52, 1, !dbg !10068
  store i64 %inc48, i64* %ob_refcnt, align 8, !dbg !10068, !tbaa !2003
  %53 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !10069, !tbaa !1975
  store %struct._object* %53, %struct._object** %retval, !dbg !10070
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10070

cleanup:                                          ; preds = %if.else, %if.then.46, %if.then
  %54 = bitcast i8** %data to i8*, !dbg !10071
  call void @llvm.lifetime.end(i64 8, i8* %54) #2, !dbg !10071
  %55 = bitcast i32* %kind to i8*, !dbg !10071
  call void @llvm.lifetime.end(i64 4, i8* %55) #2, !dbg !10071
  %56 = bitcast i64* %offset to i8*, !dbg !10071
  call void @llvm.lifetime.end(i64 8, i8* %56) #2, !dbg !10071
  %57 = bitcast i64* %size to i8*, !dbg !10071
  call void @llvm.lifetime.end(i64 8, i8* %57) #2, !dbg !10071
  %58 = bitcast i64* %i to i8*, !dbg !10071
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !10071
  %59 = load %struct._object*, %struct._object** %retval, !dbg !10071
  ret %struct._object* %59, !dbg !10071
}

declare i64 @PyLong_AsLongAndOverflow(%struct._object*, i32*) #3

declare i32 @_PyUnicode_Ready(%struct._object*) #3

declare %struct._object* @PyUnicode_Substring(%struct._object*, i64, i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @KeyError_str(%struct.PyBaseExceptionObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !1553, metadata !1979), !dbg !10072
  %0 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !10073, !tbaa !1975
  %args = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %0, i32 0, i32 2, !dbg !10075
  %1 = load %struct._object*, %struct._object** %args, align 8, !dbg !10075, !tbaa !5453
  %2 = bitcast %struct._object* %1 to %struct.PyVarObject*, !dbg !10076
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %2, i32 0, i32 1, !dbg !10077
  %3 = load i64, i64* %ob_size, align 8, !dbg !10077, !tbaa !2466
  %cmp = icmp eq i64 %3, 1, !dbg !10078
  br i1 %cmp, label %if.then, label %if.end, !dbg !10079

if.then:                                          ; preds = %entry
  %4 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !10080, !tbaa !1975
  %args1 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %4, i32 0, i32 2, !dbg !10082
  %5 = load %struct._object*, %struct._object** %args1, align 8, !dbg !10082, !tbaa !5453
  %6 = bitcast %struct._object* %5 to %struct.PyTupleObject*, !dbg !10083
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %6, i32 0, i32 1, !dbg !10084
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !10085
  %7 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !10085, !tbaa !1975
  %call = call %struct._object* @PyObject_Repr(%struct._object* %7), !dbg !10086
  store %struct._object* %call, %struct._object** %retval, !dbg !10087
  br label %return, !dbg !10087

if.end:                                           ; preds = %entry
  %8 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !10088, !tbaa !1975
  %call2 = call %struct._object* @BaseException_str(%struct.PyBaseExceptionObject* %8), !dbg !10089
  store %struct._object* %call2, %struct._object** %retval, !dbg !10090
  br label %return, !dbg !10090

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct._object*, %struct._object** %retval, !dbg !10091
  ret %struct._object* %9, !dbg !10091
}

declare %struct._object* @PyObject_Repr(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @UnicodeError_dealloc(%struct.PyUnicodeErrorObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyUnicodeErrorObject*, align 8
  %g = alloca %union._gc_head*, align 8
  store %struct.PyUnicodeErrorObject* %self, %struct.PyUnicodeErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyUnicodeErrorObject** %self.addr, metadata !1581, metadata !1979), !dbg !10092
  br label %do.body, !dbg !10093

do.body:                                          ; preds = %entry
  %0 = bitcast %union._gc_head** %g to i8*, !dbg !10094
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10094
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !1582, metadata !1979), !dbg !10096
  %1 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10097, !tbaa !1975
  %2 = bitcast %struct.PyUnicodeErrorObject* %1 to %union._gc_head*, !dbg !10098
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %2, i64 -1, !dbg !10099
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !10096, !tbaa !1975
  br label %do.body.1, !dbg !10100

do.body.1:                                        ; preds = %do.body
  %3 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !10101, !tbaa !1975
  %gc = bitcast %union._gc_head* %3 to %struct.anon.0*, !dbg !10104
  %gc_refs = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc, i32 0, i32 2, !dbg !10105
  %4 = load i64, i64* %gc_refs, align 8, !dbg !10105, !tbaa !5967
  %and = and i64 %4, 1, !dbg !10106
  %or = or i64 %and, -4, !dbg !10107
  %5 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !10108, !tbaa !1975
  %gc2 = bitcast %union._gc_head* %5 to %struct.anon.0*, !dbg !10109
  %gc_refs3 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc2, i32 0, i32 2, !dbg !10110
  store i64 %or, i64* %gc_refs3, align 8, !dbg !10111, !tbaa !5967
  br label %do.cond, !dbg !10112

do.cond:                                          ; preds = %do.body.1
  br label %do.end, !dbg !10113

do.end:                                           ; preds = %do.cond
  %6 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !10115, !tbaa !1975
  %gc4 = bitcast %union._gc_head* %6 to %struct.anon.0*, !dbg !10117
  %gc_next = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc4, i32 0, i32 0, !dbg !10118
  %7 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !10118, !tbaa !5982
  %8 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !10119, !tbaa !1975
  %gc5 = bitcast %union._gc_head* %8 to %struct.anon.0*, !dbg !10120
  %gc_prev = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc5, i32 0, i32 1, !dbg !10121
  %9 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !10121, !tbaa !5986
  %gc6 = bitcast %union._gc_head* %9 to %struct.anon.0*, !dbg !10122
  %gc_next7 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc6, i32 0, i32 0, !dbg !10123
  store %union._gc_head* %7, %union._gc_head** %gc_next7, align 8, !dbg !10124, !tbaa !5982
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !10125, !tbaa !1975
  %gc8 = bitcast %union._gc_head* %10 to %struct.anon.0*, !dbg !10126
  %gc_prev9 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc8, i32 0, i32 1, !dbg !10127
  %11 = load %union._gc_head*, %union._gc_head** %gc_prev9, align 8, !dbg !10127, !tbaa !5986
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !10128, !tbaa !1975
  %gc10 = bitcast %union._gc_head* %12 to %struct.anon.0*, !dbg !10129
  %gc_next11 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc10, i32 0, i32 0, !dbg !10130
  %13 = load %union._gc_head*, %union._gc_head** %gc_next11, align 8, !dbg !10130, !tbaa !5982
  %gc12 = bitcast %union._gc_head* %13 to %struct.anon.0*, !dbg !10131
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc12, i32 0, i32 1, !dbg !10132
  store %union._gc_head* %11, %union._gc_head** %gc_prev13, align 8, !dbg !10133, !tbaa !5986
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !10134, !tbaa !1975
  %gc14 = bitcast %union._gc_head* %14 to %struct.anon.0*, !dbg !10135
  %gc_next15 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc14, i32 0, i32 0, !dbg !10136
  store %union._gc_head* null, %union._gc_head** %gc_next15, align 8, !dbg !10137, !tbaa !5982
  %15 = bitcast %union._gc_head** %g to i8*, !dbg !10138
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !10138
  br label %do.end.17, !dbg !10139

do.end.17:                                        ; preds = %do.end
  %16 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10140, !tbaa !1975
  %call = call i32 @UnicodeError_clear(%struct.PyUnicodeErrorObject* %16), !dbg !10141
  %17 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10142, !tbaa !1975
  %18 = bitcast %struct.PyUnicodeErrorObject* %17 to %struct._object*, !dbg !10143
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !10144
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10144, !tbaa !2039
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 38, !dbg !10145
  %20 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !10145, !tbaa !5662
  %21 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10146, !tbaa !1975
  %22 = bitcast %struct.PyUnicodeErrorObject* %21 to %struct._object*, !dbg !10147
  %23 = bitcast %struct._object* %22 to i8*, !dbg !10147
  call void %20(i8* %23), !dbg !10148
  ret void, !dbg !10149
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @UnicodeEncodeError_str(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %uself = alloca %struct.PyUnicodeErrorObject*, align 8
  %result = alloca %struct._object*, align 8
  %reason_str = alloca %struct._object*, align 8
  %encoding_str = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %badchar = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp41 = alloca %struct._object*, align 8
  %_py_decref_tmp45 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1586, metadata !1979), !dbg !10150
  %0 = bitcast %struct.PyUnicodeErrorObject** %uself to i8*, !dbg !10151
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10151
  call void @llvm.dbg.declare(metadata %struct.PyUnicodeErrorObject** %uself, metadata !1587, metadata !1979), !dbg !10152
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10153, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyUnicodeErrorObject*, !dbg !10154
  store %struct.PyUnicodeErrorObject* %2, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10152, !tbaa !1975
  %3 = bitcast %struct._object** %result to i8*, !dbg !10155
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !10155
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1588, metadata !1979), !dbg !10156
  store %struct._object* null, %struct._object** %result, align 8, !dbg !10156, !tbaa !1975
  %4 = bitcast %struct._object** %reason_str to i8*, !dbg !10157
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !10157
  call void @llvm.dbg.declare(metadata %struct._object** %reason_str, metadata !1589, metadata !1979), !dbg !10158
  store %struct._object* null, %struct._object** %reason_str, align 8, !dbg !10158, !tbaa !1975
  %5 = bitcast %struct._object** %encoding_str to i8*, !dbg !10159
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !10159
  call void @llvm.dbg.declare(metadata %struct._object** %encoding_str, metadata !1590, metadata !1979), !dbg !10160
  store %struct._object* null, %struct._object** %encoding_str, align 8, !dbg !10160, !tbaa !1975
  %6 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10161, !tbaa !1975
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %6, i32 0, i32 8, !dbg !10163
  %7 = load %struct._object*, %struct._object** %object, align 8, !dbg !10163, !tbaa !2333
  %tobool = icmp ne %struct._object* %7, null, !dbg !10161
  br i1 %tobool, label %if.end, label %if.then, !dbg !10164

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.84, i32 0, i32 0)), !dbg !10165
  store %struct._object* %call, %struct._object** %retval, !dbg !10166
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10166

if.end:                                           ; preds = %entry
  %8 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10167, !tbaa !1975
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %8, i32 0, i32 11, !dbg !10168
  %9 = load %struct._object*, %struct._object** %reason, align 8, !dbg !10168, !tbaa !2717
  %call1 = call %struct._object* @PyObject_Str(%struct._object* %9), !dbg !10169
  store %struct._object* %call1, %struct._object** %reason_str, align 8, !dbg !10170, !tbaa !1975
  %10 = load %struct._object*, %struct._object** %reason_str, align 8, !dbg !10171, !tbaa !1975
  %cmp = icmp eq %struct._object* %10, null, !dbg !10173
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !10174

if.then.2:                                        ; preds = %if.end
  br label %done, !dbg !10175

if.end.3:                                         ; preds = %if.end
  %11 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10176, !tbaa !1975
  %encoding = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %11, i32 0, i32 7, !dbg !10177
  %12 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !10177, !tbaa !2290
  %call4 = call %struct._object* @PyObject_Str(%struct._object* %12), !dbg !10178
  store %struct._object* %call4, %struct._object** %encoding_str, align 8, !dbg !10179, !tbaa !1975
  %13 = load %struct._object*, %struct._object** %encoding_str, align 8, !dbg !10180, !tbaa !1975
  %cmp5 = icmp eq %struct._object* %13, null, !dbg !10182
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !10183

if.then.6:                                        ; preds = %if.end.3
  br label %done, !dbg !10184

if.end.7:                                         ; preds = %if.end.3
  %14 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10185, !tbaa !1975
  %start = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %14, i32 0, i32 9, !dbg !10186
  %15 = load i64, i64* %start, align 8, !dbg !10186, !tbaa !2393
  %16 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10187, !tbaa !1975
  %object8 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %16, i32 0, i32 8, !dbg !10188
  %17 = load %struct._object*, %struct._object** %object8, align 8, !dbg !10188, !tbaa !2333
  %18 = bitcast %struct._object* %17 to %struct.PyASCIIObject*, !dbg !10189
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %18, i32 0, i32 1, !dbg !10190
  %19 = load i64, i64* %length, align 8, !dbg !10190, !tbaa !2400
  %cmp9 = icmp slt i64 %15, %19, !dbg !10191
  br i1 %cmp9, label %land.lhs.true, label %if.else.25, !dbg !10192

land.lhs.true:                                    ; preds = %if.end.7
  %20 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10193, !tbaa !1975
  %end = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %20, i32 0, i32 10, !dbg !10195
  %21 = load i64, i64* %end, align 8, !dbg !10195, !tbaa !2565
  %22 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10196, !tbaa !1975
  %start10 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %22, i32 0, i32 9, !dbg !10197
  %23 = load i64, i64* %start10, align 8, !dbg !10197, !tbaa !2393
  %add = add i64 %23, 1, !dbg !10198
  %cmp11 = icmp eq i64 %21, %add, !dbg !10199
  br i1 %cmp11, label %if.then.12, label %if.else.25, !dbg !10200

if.then.12:                                       ; preds = %land.lhs.true
  %24 = bitcast i32* %badchar to i8*, !dbg !10201
  call void @llvm.lifetime.start(i64 4, i8* %24) #2, !dbg !10201
  call void @llvm.dbg.declare(metadata i32* %badchar, metadata !1591, metadata !1979), !dbg !10202
  %25 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10203, !tbaa !1975
  %object13 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %25, i32 0, i32 8, !dbg !10204
  %26 = load %struct._object*, %struct._object** %object13, align 8, !dbg !10204, !tbaa !2333
  %27 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10205, !tbaa !1975
  %start14 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %27, i32 0, i32 9, !dbg !10206
  %28 = load i64, i64* %start14, align 8, !dbg !10206, !tbaa !2393
  %call15 = call i32 @PyUnicode_ReadChar(%struct._object* %26, i64 %28), !dbg !10207
  store i32 %call15, i32* %badchar, align 4, !dbg !10202, !tbaa !5355
  %29 = bitcast i8** %fmt to i8*, !dbg !10208
  call void @llvm.lifetime.start(i64 8, i8* %29) #2, !dbg !10208
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !1594, metadata !1979), !dbg !10209
  %30 = load i32, i32* %badchar, align 4, !dbg !10210, !tbaa !5355
  %cmp16 = icmp ule i32 %30, 255, !dbg !10212
  br i1 %cmp16, label %if.then.17, label %if.else, !dbg !10213

if.then.17:                                       ; preds = %if.then.12
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.178, i32 0, i32 0), i8** %fmt, align 8, !dbg !10214, !tbaa !1975
  br label %if.end.22, !dbg !10215

if.else:                                          ; preds = %if.then.12
  %31 = load i32, i32* %badchar, align 4, !dbg !10216, !tbaa !5355
  %cmp18 = icmp ule i32 %31, 65535, !dbg !10218
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !10219

if.then.19:                                       ; preds = %if.else
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.179, i32 0, i32 0), i8** %fmt, align 8, !dbg !10220, !tbaa !1975
  br label %if.end.21, !dbg !10221

if.else.20:                                       ; preds = %if.else
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.180, i32 0, i32 0), i8** %fmt, align 8, !dbg !10222, !tbaa !1975
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.20, %if.then.19
  br label %if.end.22

if.end.22:                                        ; preds = %if.end.21, %if.then.17
  %32 = load i8*, i8** %fmt, align 8, !dbg !10223, !tbaa !1975
  %33 = load %struct._object*, %struct._object** %encoding_str, align 8, !dbg !10224, !tbaa !1975
  %34 = load i32, i32* %badchar, align 4, !dbg !10225, !tbaa !5355
  %35 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10226, !tbaa !1975
  %start23 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %35, i32 0, i32 9, !dbg !10227
  %36 = load i64, i64* %start23, align 8, !dbg !10227, !tbaa !2393
  %37 = load %struct._object*, %struct._object** %reason_str, align 8, !dbg !10228, !tbaa !1975
  %call24 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* %32, %struct._object* %33, i32 %34, i64 %36, %struct._object* %37), !dbg !10229
  store %struct._object* %call24, %struct._object** %result, align 8, !dbg !10230, !tbaa !1975
  %38 = bitcast i8** %fmt to i8*, !dbg !10231
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !10231
  %39 = bitcast i32* %badchar to i8*, !dbg !10231
  call void @llvm.lifetime.end(i64 4, i8* %39) #2, !dbg !10231
  br label %if.end.29, !dbg !10232

if.else.25:                                       ; preds = %land.lhs.true, %if.end.7
  %40 = load %struct._object*, %struct._object** %encoding_str, align 8, !dbg !10233, !tbaa !1975
  %41 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10235, !tbaa !1975
  %start26 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %41, i32 0, i32 9, !dbg !10236
  %42 = load i64, i64* %start26, align 8, !dbg !10236, !tbaa !2393
  %43 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10237, !tbaa !1975
  %end27 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %43, i32 0, i32 10, !dbg !10238
  %44 = load i64, i64* %end27, align 8, !dbg !10238, !tbaa !2565
  %sub = sub i64 %44, 1, !dbg !10239
  %45 = load %struct._object*, %struct._object** %reason_str, align 8, !dbg !10240, !tbaa !1975
  %call28 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.181, i32 0, i32 0), %struct._object* %40, i64 %42, i64 %sub, %struct._object* %45), !dbg !10241
  store %struct._object* %call28, %struct._object** %result, align 8, !dbg !10242, !tbaa !1975
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.25, %if.end.22
  br label %done, !dbg !10243

done:                                             ; preds = %if.end.29, %if.then.6, %if.then.2
  br label %do.body, !dbg !10244

do.body:                                          ; preds = %done
  %46 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10245
  call void @llvm.lifetime.start(i64 8, i8* %46) #2, !dbg !10245
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1595, metadata !1979), !dbg !10247
  %47 = load %struct._object*, %struct._object** %reason_str, align 8, !dbg !10248, !tbaa !1975
  store %struct._object* %47, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10247, !tbaa !1975
  %48 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10249, !tbaa !1975
  %cmp30 = icmp ne %struct._object* %48, null, !dbg !10250
  br i1 %cmp30, label %if.then.31, label %if.end.37, !dbg !10251

if.then.31:                                       ; preds = %do.body
  br label %do.body.32, !dbg !10252

do.body.32:                                       ; preds = %if.then.31
  %49 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10254
  call void @llvm.lifetime.start(i64 8, i8* %49) #2, !dbg !10254
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1597, metadata !1979), !dbg !10256
  %50 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10257, !tbaa !1975
  store %struct._object* %50, %struct._object** %_py_decref_tmp, align 8, !dbg !10256, !tbaa !1975
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10258, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !10260
  %52 = load i64, i64* %ob_refcnt, align 8, !dbg !10261, !tbaa !2003
  %dec = add i64 %52, -1, !dbg !10261
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10261, !tbaa !2003
  %cmp33 = icmp ne i64 %dec, 0, !dbg !10262
  br i1 %cmp33, label %if.then.34, label %if.else.35, !dbg !10263

if.then.34:                                       ; preds = %do.body.32
  br label %if.end.36, !dbg !10264

if.else.35:                                       ; preds = %do.body.32
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10266, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 1, !dbg !10268
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10268, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i32 0, i32 4, !dbg !10269
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10269, !tbaa !2091
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10270, !tbaa !1975
  call void %55(%struct._object* %56), !dbg !10271
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.35, %if.then.34
  %57 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10272
  call void @llvm.lifetime.end(i64 8, i8* %57) #2, !dbg !10272
  br label %do.cond, !dbg !10274

do.cond:                                          ; preds = %if.end.36
  br label %do.end, !dbg !10275

do.end:                                           ; preds = %do.cond
  br label %if.end.37, !dbg !10277

if.end.37:                                        ; preds = %do.end, %do.body
  %58 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10279
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !10279
  br label %do.cond.38, !dbg !10282

do.cond.38:                                       ; preds = %if.end.37
  br label %do.end.39, !dbg !10283

do.end.39:                                        ; preds = %do.cond.38
  br label %do.body.40, !dbg !10285

do.body.40:                                       ; preds = %do.end.39
  %59 = bitcast %struct._object** %_py_xdecref_tmp41 to i8*, !dbg !10286
  call void @llvm.lifetime.start(i64 8, i8* %59) #2, !dbg !10286
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp41, metadata !1600, metadata !1979), !dbg !10288
  %60 = load %struct._object*, %struct._object** %encoding_str, align 8, !dbg !10289, !tbaa !1975
  store %struct._object* %60, %struct._object** %_py_xdecref_tmp41, align 8, !dbg !10288, !tbaa !1975
  %61 = load %struct._object*, %struct._object** %_py_xdecref_tmp41, align 8, !dbg !10290, !tbaa !1975
  %cmp42 = icmp ne %struct._object* %61, null, !dbg !10291
  br i1 %cmp42, label %if.then.43, label %if.end.56, !dbg !10292

if.then.43:                                       ; preds = %do.body.40
  br label %do.body.44, !dbg !10293

do.body.44:                                       ; preds = %if.then.43
  %62 = bitcast %struct._object** %_py_decref_tmp45 to i8*, !dbg !10295
  call void @llvm.lifetime.start(i64 8, i8* %62) #2, !dbg !10295
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp45, metadata !1602, metadata !1979), !dbg !10297
  %63 = load %struct._object*, %struct._object** %_py_xdecref_tmp41, align 8, !dbg !10298, !tbaa !1975
  store %struct._object* %63, %struct._object** %_py_decref_tmp45, align 8, !dbg !10297, !tbaa !1975
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !10299, !tbaa !1975
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 0, !dbg !10301
  %65 = load i64, i64* %ob_refcnt46, align 8, !dbg !10302, !tbaa !2003
  %dec47 = add i64 %65, -1, !dbg !10302
  store i64 %dec47, i64* %ob_refcnt46, align 8, !dbg !10302, !tbaa !2003
  %cmp48 = icmp ne i64 %dec47, 0, !dbg !10303
  br i1 %cmp48, label %if.then.49, label %if.else.50, !dbg !10304

if.then.49:                                       ; preds = %do.body.44
  br label %if.end.53, !dbg !10305

if.else.50:                                       ; preds = %do.body.44
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !10307, !tbaa !1975
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 1, !dbg !10309
  %67 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8, !dbg !10309, !tbaa !2039
  %tp_dealloc52 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %67, i32 0, i32 4, !dbg !10310
  %68 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc52, align 8, !dbg !10310, !tbaa !2091
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !10311, !tbaa !1975
  call void %68(%struct._object* %69), !dbg !10312
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.50, %if.then.49
  %70 = bitcast %struct._object** %_py_decref_tmp45 to i8*, !dbg !10313
  call void @llvm.lifetime.end(i64 8, i8* %70) #2, !dbg !10313
  br label %do.cond.54, !dbg !10315

do.cond.54:                                       ; preds = %if.end.53
  br label %do.end.55, !dbg !10316

do.end.55:                                        ; preds = %do.cond.54
  br label %if.end.56, !dbg !10318

if.end.56:                                        ; preds = %do.end.55, %do.body.40
  %71 = bitcast %struct._object** %_py_xdecref_tmp41 to i8*, !dbg !10320
  call void @llvm.lifetime.end(i64 8, i8* %71) #2, !dbg !10320
  br label %do.cond.57, !dbg !10321

do.cond.57:                                       ; preds = %if.end.56
  br label %do.end.58, !dbg !10322

do.end.58:                                        ; preds = %do.cond.57
  %72 = load %struct._object*, %struct._object** %result, align 8, !dbg !10324, !tbaa !1975
  store %struct._object* %72, %struct._object** %retval, !dbg !10325
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10325

cleanup:                                          ; preds = %do.end.58, %if.then
  %73 = bitcast %struct._object** %encoding_str to i8*, !dbg !10326
  call void @llvm.lifetime.end(i64 8, i8* %73) #2, !dbg !10326
  %74 = bitcast %struct._object** %reason_str to i8*, !dbg !10326
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !10326
  %75 = bitcast %struct._object** %result to i8*, !dbg !10326
  call void @llvm.lifetime.end(i64 8, i8* %75) #2, !dbg !10326
  %76 = bitcast %struct.PyUnicodeErrorObject** %uself to i8*, !dbg !10326
  call void @llvm.lifetime.end(i64 8, i8* %76) #2, !dbg !10326
  %77 = load %struct._object*, %struct._object** %retval, !dbg !10326
  ret %struct._object* %77, !dbg !10326
}

; Function Attrs: nounwind uwtable
define internal i32 @UnicodeError_traverse(%struct.PyUnicodeErrorObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyUnicodeErrorObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  store %struct.PyUnicodeErrorObject* %self, %struct.PyUnicodeErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyUnicodeErrorObject** %self.addr, metadata !1609, metadata !1979), !dbg !10327
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1610, metadata !1979), !dbg !10328
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1611, metadata !1979), !dbg !10329
  br label %do.body, !dbg !10330

do.body:                                          ; preds = %entry
  %0 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10331, !tbaa !1975
  %encoding = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %0, i32 0, i32 7, !dbg !10333
  %1 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !10333, !tbaa !2290
  %tobool = icmp ne %struct._object* %1, null, !dbg !10334
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !10335

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !10336
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !10336
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1612, metadata !1979), !dbg !10338
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !10339, !tbaa !1975
  %4 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10340, !tbaa !1975
  %encoding1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %4, i32 0, i32 7, !dbg !10341
  %5 = load %struct._object*, %struct._object** %encoding1, align 8, !dbg !10341, !tbaa !2290
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !10342, !tbaa !1975
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !10339
  store i32 %call, i32* %vret, align 4, !dbg !10338, !tbaa !5355
  %7 = load i32, i32* %vret, align 4, !dbg !10343, !tbaa !5355
  %tobool2 = icmp ne i32 %7, 0, !dbg !10343
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !10345

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !10346, !tbaa !5355
  store i32 %8, i32* %retval, !dbg !10348
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10348

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !10349
  br label %cleanup, !dbg !10349

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !10351
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !10351
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !10354

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !10355

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !10358

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10359, !tbaa !1975
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %10, i32 0, i32 8, !dbg !10361
  %11 = load %struct._object*, %struct._object** %object, align 8, !dbg !10361, !tbaa !2333
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !10362
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !10363

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !10364
  call void @llvm.lifetime.start(i64 4, i8* %12) #2, !dbg !10364
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1616, metadata !1979), !dbg !10366
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !10367, !tbaa !1975
  %14 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10368, !tbaa !1975
  %object9 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %14, i32 0, i32 8, !dbg !10369
  %15 = load %struct._object*, %struct._object** %object9, align 8, !dbg !10369, !tbaa !2333
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !10370, !tbaa !1975
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !10367
  store i32 %call10, i32* %vret8, align 4, !dbg !10366, !tbaa !5355
  %17 = load i32, i32* %vret8, align 4, !dbg !10371, !tbaa !5355
  %tobool11 = icmp ne i32 %17, 0, !dbg !10371
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !10373

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !10374, !tbaa !5355
  store i32 %18, i32* %retval, !dbg !10376
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !10376

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !10377
  br label %cleanup.14, !dbg !10377

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !10379
  call void @llvm.lifetime.end(i64 4, i8* %19) #2, !dbg !10379
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !10382

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !10383

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !10386

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10387, !tbaa !1975
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %20, i32 0, i32 11, !dbg !10389
  %21 = load %struct._object*, %struct._object** %reason, align 8, !dbg !10389, !tbaa !2717
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !10390
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !10391

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !10392
  call void @llvm.lifetime.start(i64 4, i8* %22) #2, !dbg !10392
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !1620, metadata !1979), !dbg !10394
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !10395, !tbaa !1975
  %24 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10396, !tbaa !1975
  %reason23 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %24, i32 0, i32 11, !dbg !10397
  %25 = load %struct._object*, %struct._object** %reason23, align 8, !dbg !10397, !tbaa !2717
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !10398, !tbaa !1975
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !10395
  store i32 %call24, i32* %vret22, align 4, !dbg !10394, !tbaa !5355
  %27 = load i32, i32* %vret22, align 4, !dbg !10399, !tbaa !5355
  %tobool25 = icmp ne i32 %27, 0, !dbg !10399
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !10401

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !10402, !tbaa !5355
  store i32 %28, i32* %retval, !dbg !10404
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !10404

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !10405
  br label %cleanup.28, !dbg !10405

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !10407
  call void @llvm.lifetime.end(i64 4, i8* %29) #2, !dbg !10407
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.5

LeafBlock.5:                                      ; preds = %cleanup.28
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest.29, 1
  br i1 %SwitchLeaf6, label %return, label %NewDefault.4

NewDefault.4:                                     ; preds = %LeafBlock.5
  br label %cleanup.cont.30

cleanup.cont.30:                                  ; preds = %NewDefault.4
  br label %if.end.31, !dbg !10410

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !10411

do.end.32:                                        ; preds = %if.end.31
  %30 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10414, !tbaa !1975
  %31 = bitcast %struct.PyUnicodeErrorObject* %30 to %struct.PyBaseExceptionObject*, !dbg !10415
  %32 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !10416, !tbaa !1975
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !10417, !tbaa !1975
  %call33 = call i32 @BaseException_traverse(%struct.PyBaseExceptionObject* %31, i32 (%struct._object*, i8*)* %32, i8* %33), !dbg !10418
  store i32 %call33, i32* %retval, !dbg !10419
  br label %return, !dbg !10419

return:                                           ; preds = %LeafBlock.5, %LeafBlock.2, %LeafBlock, %do.end.32
  %34 = load i32, i32* %retval, !dbg !10420
  ret i32 %34, !dbg !10420
}

; Function Attrs: nounwind uwtable
define internal i32 @UnicodeError_clear(%struct.PyUnicodeErrorObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyUnicodeErrorObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  store %struct.PyUnicodeErrorObject* %self, %struct.PyUnicodeErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyUnicodeErrorObject** %self.addr, metadata !1628, metadata !1979), !dbg !10421
  br label %do.body, !dbg !10422

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10423
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10423
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1629, metadata !1979), !dbg !10425
  %1 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10426, !tbaa !1975
  %encoding = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %1, i32 0, i32 7, !dbg !10427
  %2 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !10427, !tbaa !2290
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !10425, !tbaa !1975
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10428, !tbaa !1975
  %cmp = icmp ne %struct._object* %3, null, !dbg !10429
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !10430

if.then:                                          ; preds = %do.body
  %4 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10431, !tbaa !1975
  %encoding1 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %4, i32 0, i32 7, !dbg !10433
  store %struct._object* null, %struct._object** %encoding1, align 8, !dbg !10434, !tbaa !2290
  br label %do.body.2, !dbg !10435

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10436
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !10436
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1631, metadata !1979), !dbg !10438
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10439, !tbaa !1975
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !10438, !tbaa !1975
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10440, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !10442
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !10443, !tbaa !2003
  %dec = add i64 %8, -1, !dbg !10443
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10443, !tbaa !2003
  %cmp3 = icmp ne i64 %dec, 0, !dbg !10444
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !10445

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !10446

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10448, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !10450
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10450, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !10451
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10451, !tbaa !2091
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10452, !tbaa !1975
  call void %11(%struct._object* %12), !dbg !10453
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10454
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !10454
  br label %do.cond, !dbg !10456

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !10457

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !10459

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10461
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !10461
  br label %do.end.7, !dbg !10464

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !10465

do.body.8:                                        ; preds = %do.end.7
  %15 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !10466
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !10466
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !1635, metadata !1979), !dbg !10468
  %16 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10469, !tbaa !1975
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %16, i32 0, i32 8, !dbg !10470
  %17 = load %struct._object*, %struct._object** %object, align 8, !dbg !10470, !tbaa !2333
  store %struct._object* %17, %struct._object** %_py_tmp9, align 8, !dbg !10468, !tbaa !1975
  %18 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !10471, !tbaa !1975
  %cmp10 = icmp ne %struct._object* %18, null, !dbg !10472
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !10473

if.then.11:                                       ; preds = %do.body.8
  %19 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10474, !tbaa !1975
  %object12 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %19, i32 0, i32 8, !dbg !10476
  store %struct._object* null, %struct._object** %object12, align 8, !dbg !10477, !tbaa !2333
  br label %do.body.13, !dbg !10478

do.body.13:                                       ; preds = %if.then.11
  %20 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !10479
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !10479
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !1637, metadata !1979), !dbg !10481
  %21 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !10482, !tbaa !1975
  store %struct._object* %21, %struct._object** %_py_decref_tmp14, align 8, !dbg !10481, !tbaa !1975
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !10483, !tbaa !1975
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !10485
  %23 = load i64, i64* %ob_refcnt15, align 8, !dbg !10486, !tbaa !2003
  %dec16 = add i64 %23, -1, !dbg !10486
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !10486, !tbaa !2003
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !10487
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !10488

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !10489

if.else.19:                                       ; preds = %do.body.13
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !10491, !tbaa !1975
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !10493
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !10493, !tbaa !2039
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !10494
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !10494, !tbaa !2091
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !10495, !tbaa !1975
  call void %26(%struct._object* %27), !dbg !10496
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %28 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !10497
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !10497
  br label %do.cond.23, !dbg !10499

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !10500

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !10502

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %29 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !10504
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !10504
  br label %do.end.27, !dbg !10505

do.end.27:                                        ; preds = %if.end.25
  br label %do.body.28, !dbg !10506

do.body.28:                                       ; preds = %do.end.27
  %30 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !10507
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !10507
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !1641, metadata !1979), !dbg !10509
  %31 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10510, !tbaa !1975
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %31, i32 0, i32 11, !dbg !10511
  %32 = load %struct._object*, %struct._object** %reason, align 8, !dbg !10511, !tbaa !2717
  store %struct._object* %32, %struct._object** %_py_tmp29, align 8, !dbg !10509, !tbaa !1975
  %33 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !10512, !tbaa !1975
  %cmp30 = icmp ne %struct._object* %33, null, !dbg !10513
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !10514

if.then.31:                                       ; preds = %do.body.28
  %34 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10515, !tbaa !1975
  %reason32 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %34, i32 0, i32 11, !dbg !10517
  store %struct._object* null, %struct._object** %reason32, align 8, !dbg !10518, !tbaa !2717
  br label %do.body.33, !dbg !10519

do.body.33:                                       ; preds = %if.then.31
  %35 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !10520
  call void @llvm.lifetime.start(i64 8, i8* %35) #2, !dbg !10520
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !1643, metadata !1979), !dbg !10522
  %36 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !10523, !tbaa !1975
  store %struct._object* %36, %struct._object** %_py_decref_tmp34, align 8, !dbg !10522, !tbaa !1975
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !10524, !tbaa !1975
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !10526
  %38 = load i64, i64* %ob_refcnt35, align 8, !dbg !10527, !tbaa !2003
  %dec36 = add i64 %38, -1, !dbg !10527
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !10527, !tbaa !2003
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !10528
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !10529

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !10530

if.else.39:                                       ; preds = %do.body.33
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !10532, !tbaa !1975
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !10534
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !10534, !tbaa !2039
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !10535
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !10535, !tbaa !2091
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !10536, !tbaa !1975
  call void %41(%struct._object* %42), !dbg !10537
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %43 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !10538
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !10538
  br label %do.cond.43, !dbg !10540

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !10541

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !10543

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %44 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !10545
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !10545
  br label %do.end.47, !dbg !10546

do.end.47:                                        ; preds = %if.end.45
  %45 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !10547, !tbaa !1975
  %46 = bitcast %struct.PyUnicodeErrorObject* %45 to %struct.PyBaseExceptionObject*, !dbg !10548
  %call = call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %46), !dbg !10549
  ret i32 %call, !dbg !10550
}

; Function Attrs: nounwind uwtable
define internal i32 @UnicodeEncodeError_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %err = alloca %struct.PyUnicodeErrorObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp12 = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  %_py_tmp32 = alloca %struct._object*, align 8
  %_py_decref_tmp37 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1649, metadata !1979), !dbg !10551
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1650, metadata !1979), !dbg !10552
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1651, metadata !1979), !dbg !10553
  %0 = bitcast %struct.PyUnicodeErrorObject** %err to i8*, !dbg !10554
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10554
  call void @llvm.dbg.declare(metadata %struct.PyUnicodeErrorObject** %err, metadata !1652, metadata !1979), !dbg !10555
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10556, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyBaseExceptionObject*, !dbg !10558
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !10559, !tbaa !1975
  %4 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !10560, !tbaa !1975
  %call = call i32 @BaseException_init(%struct.PyBaseExceptionObject* %2, %struct._object* %3, %struct._object* %4), !dbg !10561
  %cmp = icmp eq i32 %call, -1, !dbg !10562
  br i1 %cmp, label %if.then, label %if.end, !dbg !10563

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !10564
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10564

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10565, !tbaa !1975
  %6 = bitcast %struct._object* %5 to %struct.PyUnicodeErrorObject*, !dbg !10566
  store %struct.PyUnicodeErrorObject* %6, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10567, !tbaa !1975
  br label %do.body, !dbg !10568

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10569
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !10569
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1653, metadata !1979), !dbg !10571
  %8 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10572, !tbaa !1975
  %encoding = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %8, i32 0, i32 7, !dbg !10573
  %9 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !10573, !tbaa !2290
  store %struct._object* %9, %struct._object** %_py_tmp, align 8, !dbg !10571, !tbaa !1975
  %10 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10574, !tbaa !1975
  %cmp1 = icmp ne %struct._object* %10, null, !dbg !10575
  br i1 %cmp1, label %if.then.2, label %if.end.8, !dbg !10576

if.then.2:                                        ; preds = %do.body
  %11 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10577, !tbaa !1975
  %encoding3 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %11, i32 0, i32 7, !dbg !10579
  store %struct._object* null, %struct._object** %encoding3, align 8, !dbg !10580, !tbaa !2290
  br label %do.body.4, !dbg !10581

do.body.4:                                        ; preds = %if.then.2
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10582
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !10582
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1655, metadata !1979), !dbg !10584
  %13 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10585, !tbaa !1975
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !10584, !tbaa !1975
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10586, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !10588
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !10589, !tbaa !2003
  %dec = add i64 %15, -1, !dbg !10589
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10589, !tbaa !2003
  %cmp5 = icmp ne i64 %dec, 0, !dbg !10590
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !10591

if.then.6:                                        ; preds = %do.body.4
  br label %if.end.7, !dbg !10592

if.else:                                          ; preds = %do.body.4
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10594, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !10596
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10596, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !10597
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10597, !tbaa !2091
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10598, !tbaa !1975
  call void %18(%struct._object* %19), !dbg !10599
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10600
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !10600
  br label %do.cond, !dbg !10602

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !10603

do.end:                                           ; preds = %do.cond
  br label %if.end.8, !dbg !10605

if.end.8:                                         ; preds = %do.end, %do.body
  %21 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10607
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !10607
  br label %do.cond.9, !dbg !10610

do.cond.9:                                        ; preds = %if.end.8
  br label %do.end.10, !dbg !10611

do.end.10:                                        ; preds = %do.cond.9
  br label %do.body.11, !dbg !10613

do.body.11:                                       ; preds = %do.end.10
  %22 = bitcast %struct._object** %_py_tmp12 to i8*, !dbg !10614
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !10614
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp12, metadata !1659, metadata !1979), !dbg !10616
  %23 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10617, !tbaa !1975
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %23, i32 0, i32 8, !dbg !10618
  %24 = load %struct._object*, %struct._object** %object, align 8, !dbg !10618, !tbaa !2333
  store %struct._object* %24, %struct._object** %_py_tmp12, align 8, !dbg !10616, !tbaa !1975
  %25 = load %struct._object*, %struct._object** %_py_tmp12, align 8, !dbg !10619, !tbaa !1975
  %cmp13 = icmp ne %struct._object* %25, null, !dbg !10620
  br i1 %cmp13, label %if.then.14, label %if.end.28, !dbg !10621

if.then.14:                                       ; preds = %do.body.11
  %26 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10622, !tbaa !1975
  %object15 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %26, i32 0, i32 8, !dbg !10624
  store %struct._object* null, %struct._object** %object15, align 8, !dbg !10625, !tbaa !2333
  br label %do.body.16, !dbg !10626

do.body.16:                                       ; preds = %if.then.14
  %27 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !10627
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !10627
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp17, metadata !1661, metadata !1979), !dbg !10629
  %28 = load %struct._object*, %struct._object** %_py_tmp12, align 8, !dbg !10630, !tbaa !1975
  store %struct._object* %28, %struct._object** %_py_decref_tmp17, align 8, !dbg !10629, !tbaa !1975
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !10631, !tbaa !1975
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !10633
  %30 = load i64, i64* %ob_refcnt18, align 8, !dbg !10634, !tbaa !2003
  %dec19 = add i64 %30, -1, !dbg !10634
  store i64 %dec19, i64* %ob_refcnt18, align 8, !dbg !10634, !tbaa !2003
  %cmp20 = icmp ne i64 %dec19, 0, !dbg !10635
  br i1 %cmp20, label %if.then.21, label %if.else.22, !dbg !10636

if.then.21:                                       ; preds = %do.body.16
  br label %if.end.25, !dbg !10637

if.else.22:                                       ; preds = %do.body.16
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !10639, !tbaa !1975
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !10641
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !10641, !tbaa !2039
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !10642
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8, !dbg !10642, !tbaa !2091
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !10643, !tbaa !1975
  call void %33(%struct._object* %34), !dbg !10644
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  %35 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !10645
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !10645
  br label %do.cond.26, !dbg !10647

do.cond.26:                                       ; preds = %if.end.25
  br label %do.end.27, !dbg !10648

do.end.27:                                        ; preds = %do.cond.26
  br label %if.end.28, !dbg !10650

if.end.28:                                        ; preds = %do.end.27, %do.body.11
  %36 = bitcast %struct._object** %_py_tmp12 to i8*, !dbg !10652
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !10652
  br label %do.cond.29, !dbg !10653

do.cond.29:                                       ; preds = %if.end.28
  br label %do.end.30, !dbg !10654

do.end.30:                                        ; preds = %do.cond.29
  br label %do.body.31, !dbg !10656

do.body.31:                                       ; preds = %do.end.30
  %37 = bitcast %struct._object** %_py_tmp32 to i8*, !dbg !10657
  call void @llvm.lifetime.start(i64 8, i8* %37) #2, !dbg !10657
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp32, metadata !1665, metadata !1979), !dbg !10659
  %38 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10660, !tbaa !1975
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %38, i32 0, i32 11, !dbg !10661
  %39 = load %struct._object*, %struct._object** %reason, align 8, !dbg !10661, !tbaa !2717
  store %struct._object* %39, %struct._object** %_py_tmp32, align 8, !dbg !10659, !tbaa !1975
  %40 = load %struct._object*, %struct._object** %_py_tmp32, align 8, !dbg !10662, !tbaa !1975
  %cmp33 = icmp ne %struct._object* %40, null, !dbg !10663
  br i1 %cmp33, label %if.then.34, label %if.end.48, !dbg !10664

if.then.34:                                       ; preds = %do.body.31
  %41 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10665, !tbaa !1975
  %reason35 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %41, i32 0, i32 11, !dbg !10667
  store %struct._object* null, %struct._object** %reason35, align 8, !dbg !10668, !tbaa !2717
  br label %do.body.36, !dbg !10669

do.body.36:                                       ; preds = %if.then.34
  %42 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !10670
  call void @llvm.lifetime.start(i64 8, i8* %42) #2, !dbg !10670
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp37, metadata !1667, metadata !1979), !dbg !10672
  %43 = load %struct._object*, %struct._object** %_py_tmp32, align 8, !dbg !10673, !tbaa !1975
  store %struct._object* %43, %struct._object** %_py_decref_tmp37, align 8, !dbg !10672, !tbaa !1975
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !10674, !tbaa !1975
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !10676
  %45 = load i64, i64* %ob_refcnt38, align 8, !dbg !10677, !tbaa !2003
  %dec39 = add i64 %45, -1, !dbg !10677
  store i64 %dec39, i64* %ob_refcnt38, align 8, !dbg !10677, !tbaa !2003
  %cmp40 = icmp ne i64 %dec39, 0, !dbg !10678
  br i1 %cmp40, label %if.then.41, label %if.else.42, !dbg !10679

if.then.41:                                       ; preds = %do.body.36
  br label %if.end.45, !dbg !10680

if.else.42:                                       ; preds = %do.body.36
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !10682, !tbaa !1975
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !10684
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !10684, !tbaa !2039
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i32 0, i32 4, !dbg !10685
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !10685, !tbaa !2091
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !10686, !tbaa !1975
  call void %48(%struct._object* %49), !dbg !10687
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  %50 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !10688
  call void @llvm.lifetime.end(i64 8, i8* %50) #2, !dbg !10688
  br label %do.cond.46, !dbg !10690

do.cond.46:                                       ; preds = %if.end.45
  br label %do.end.47, !dbg !10691

do.end.47:                                        ; preds = %do.cond.46
  br label %if.end.48, !dbg !10693

if.end.48:                                        ; preds = %do.end.47, %do.body.31
  %51 = bitcast %struct._object** %_py_tmp32 to i8*, !dbg !10695
  call void @llvm.lifetime.end(i64 8, i8* %51) #2, !dbg !10695
  br label %do.cond.49, !dbg !10696

do.cond.49:                                       ; preds = %if.end.48
  br label %do.end.50, !dbg !10697

do.end.50:                                        ; preds = %do.cond.49
  %52 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !10699, !tbaa !1975
  %53 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10701, !tbaa !1975
  %encoding51 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %53, i32 0, i32 7, !dbg !10702
  %54 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10703, !tbaa !1975
  %object52 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %54, i32 0, i32 8, !dbg !10704
  %55 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10705, !tbaa !1975
  %start = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %55, i32 0, i32 9, !dbg !10706
  %56 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10707, !tbaa !1975
  %end = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %56, i32 0, i32 10, !dbg !10708
  %57 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10709, !tbaa !1975
  %reason53 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %57, i32 0, i32 11, !dbg !10710
  %call54 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %52, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.189, i32 0, i32 0), %struct._typeobject* @PyUnicode_Type, %struct._object** %encoding51, %struct._typeobject* @PyUnicode_Type, %struct._object** %object52, i64* %start, i64* %end, %struct._typeobject* @PyUnicode_Type, %struct._object** %reason53), !dbg !10711
  %tobool = icmp ne i32 %call54, 0, !dbg !10711
  br i1 %tobool, label %if.end.59, label %if.then.55, !dbg !10712

if.then.55:                                       ; preds = %do.end.50
  %58 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10713, !tbaa !1975
  %reason56 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %58, i32 0, i32 11, !dbg !10715
  store %struct._object* null, %struct._object** %reason56, align 8, !dbg !10716, !tbaa !2717
  %59 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10717, !tbaa !1975
  %object57 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %59, i32 0, i32 8, !dbg !10718
  store %struct._object* null, %struct._object** %object57, align 8, !dbg !10719, !tbaa !2333
  %60 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10720, !tbaa !1975
  %encoding58 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %60, i32 0, i32 7, !dbg !10721
  store %struct._object* null, %struct._object** %encoding58, align 8, !dbg !10722, !tbaa !2290
  store i32 -1, i32* %retval, !dbg !10723
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10723

if.end.59:                                        ; preds = %do.end.50
  %61 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10724, !tbaa !1975
  %object60 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %61, i32 0, i32 8, !dbg !10726
  %62 = load %struct._object*, %struct._object** %object60, align 8, !dbg !10726, !tbaa !2333
  %63 = bitcast %struct._object* %62 to %struct.PyASCIIObject*, !dbg !10727
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %63, i32 0, i32 3, !dbg !10728
  %64 = bitcast %struct.anon* %state to i32*, !dbg !10729
  %bf.load = load i32, i32* %64, align 4, !dbg !10729
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !10729
  %bf.clear = and i32 %bf.lshr, 1, !dbg !10729
  %tobool61 = icmp ne i32 %bf.clear, 0, !dbg !10730
  br i1 %tobool61, label %cond.true, label %cond.false, !dbg !10730

cond.true:                                        ; preds = %if.end.59
  br label %cond.end, !dbg !10731

cond.false:                                       ; preds = %if.end.59
  %65 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10733, !tbaa !1975
  %object62 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %65, i32 0, i32 8, !dbg !10735
  %66 = load %struct._object*, %struct._object** %object62, align 8, !dbg !10735, !tbaa !2333
  %call63 = call i32 @_PyUnicode_Ready(%struct._object* %66), !dbg !10736
  br label %cond.end, !dbg !10730

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call63, %cond.false ], !dbg !10730
  %cmp64 = icmp slt i32 %cond, -1, !dbg !10737
  br i1 %cmp64, label %if.then.65, label %if.end.67, !dbg !10740

if.then.65:                                       ; preds = %cond.end
  %67 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10741, !tbaa !1975
  %encoding66 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %67, i32 0, i32 7, !dbg !10743
  store %struct._object* null, %struct._object** %encoding66, align 8, !dbg !10744, !tbaa !2290
  store i32 -1, i32* %retval, !dbg !10745
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10745

if.end.67:                                        ; preds = %cond.end
  %68 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10746, !tbaa !1975
  %encoding68 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %68, i32 0, i32 7, !dbg !10747
  %69 = load %struct._object*, %struct._object** %encoding68, align 8, !dbg !10747, !tbaa !2290
  %ob_refcnt69 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !10748
  %70 = load i64, i64* %ob_refcnt69, align 8, !dbg !10749, !tbaa !2003
  %inc = add i64 %70, 1, !dbg !10749
  store i64 %inc, i64* %ob_refcnt69, align 8, !dbg !10749, !tbaa !2003
  %71 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10750, !tbaa !1975
  %object70 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %71, i32 0, i32 8, !dbg !10751
  %72 = load %struct._object*, %struct._object** %object70, align 8, !dbg !10751, !tbaa !2333
  %ob_refcnt71 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 0, !dbg !10752
  %73 = load i64, i64* %ob_refcnt71, align 8, !dbg !10753, !tbaa !2003
  %inc72 = add i64 %73, 1, !dbg !10753
  store i64 %inc72, i64* %ob_refcnt71, align 8, !dbg !10753, !tbaa !2003
  %74 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %err, align 8, !dbg !10754, !tbaa !1975
  %reason73 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %74, i32 0, i32 11, !dbg !10755
  %75 = load %struct._object*, %struct._object** %reason73, align 8, !dbg !10755, !tbaa !2717
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 0, !dbg !10756
  %76 = load i64, i64* %ob_refcnt74, align 8, !dbg !10757, !tbaa !2003
  %inc75 = add i64 %76, 1, !dbg !10757
  store i64 %inc75, i64* %ob_refcnt74, align 8, !dbg !10757, !tbaa !2003
  store i32 0, i32* %retval, !dbg !10758
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10758

cleanup:                                          ; preds = %if.end.67, %if.then.65, %if.then.55, %if.then
  %77 = bitcast %struct.PyUnicodeErrorObject** %err to i8*, !dbg !10759
  call void @llvm.lifetime.end(i64 8, i8* %77) #2, !dbg !10759
  %78 = load i32, i32* %retval, !dbg !10759
  ret i32 %78, !dbg !10759
}

declare i32 @PyUnicode_ReadChar(%struct._object*, i64) #3

declare i32 @_PyArg_ParseTuple_SizeT(%struct._object*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @UnicodeDecodeError_str(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %uself = alloca %struct.PyUnicodeErrorObject*, align 8
  %result = alloca %struct._object*, align 8
  %reason_str = alloca %struct._object*, align 8
  %encoding_str = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %byte = alloca i32, align 4
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp34 = alloca %struct._object*, align 8
  %_py_decref_tmp39 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1673, metadata !1979), !dbg !10760
  %0 = bitcast %struct.PyUnicodeErrorObject** %uself to i8*, !dbg !10761
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10761
  call void @llvm.dbg.declare(metadata %struct.PyUnicodeErrorObject** %uself, metadata !1674, metadata !1979), !dbg !10762
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10763, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyUnicodeErrorObject*, !dbg !10764
  store %struct.PyUnicodeErrorObject* %2, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10762, !tbaa !1975
  %3 = bitcast %struct._object** %result to i8*, !dbg !10765
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !10765
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1675, metadata !1979), !dbg !10766
  store %struct._object* null, %struct._object** %result, align 8, !dbg !10766, !tbaa !1975
  %4 = bitcast %struct._object** %reason_str to i8*, !dbg !10767
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !10767
  call void @llvm.dbg.declare(metadata %struct._object** %reason_str, metadata !1676, metadata !1979), !dbg !10768
  store %struct._object* null, %struct._object** %reason_str, align 8, !dbg !10768, !tbaa !1975
  %5 = bitcast %struct._object** %encoding_str to i8*, !dbg !10769
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !10769
  call void @llvm.dbg.declare(metadata %struct._object** %encoding_str, metadata !1677, metadata !1979), !dbg !10770
  store %struct._object* null, %struct._object** %encoding_str, align 8, !dbg !10770, !tbaa !1975
  %6 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10771, !tbaa !1975
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %6, i32 0, i32 8, !dbg !10773
  %7 = load %struct._object*, %struct._object** %object, align 8, !dbg !10773, !tbaa !2333
  %tobool = icmp ne %struct._object* %7, null, !dbg !10771
  br i1 %tobool, label %if.end, label %if.then, !dbg !10774

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.84, i32 0, i32 0)), !dbg !10775
  store %struct._object* %call, %struct._object** %retval, !dbg !10776
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10776

if.end:                                           ; preds = %entry
  %8 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10777, !tbaa !1975
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %8, i32 0, i32 11, !dbg !10778
  %9 = load %struct._object*, %struct._object** %reason, align 8, !dbg !10778, !tbaa !2717
  %call1 = call %struct._object* @PyObject_Str(%struct._object* %9), !dbg !10779
  store %struct._object* %call1, %struct._object** %reason_str, align 8, !dbg !10780, !tbaa !1975
  %10 = load %struct._object*, %struct._object** %reason_str, align 8, !dbg !10781, !tbaa !1975
  %cmp = icmp eq %struct._object* %10, null, !dbg !10783
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !10784

if.then.2:                                        ; preds = %if.end
  br label %done, !dbg !10785

if.end.3:                                         ; preds = %if.end
  %11 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10786, !tbaa !1975
  %encoding = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %11, i32 0, i32 7, !dbg !10787
  %12 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !10787, !tbaa !2290
  %call4 = call %struct._object* @PyObject_Str(%struct._object* %12), !dbg !10788
  store %struct._object* %call4, %struct._object** %encoding_str, align 8, !dbg !10789, !tbaa !1975
  %13 = load %struct._object*, %struct._object** %encoding_str, align 8, !dbg !10790, !tbaa !1975
  %cmp5 = icmp eq %struct._object* %13, null, !dbg !10792
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !10793

if.then.6:                                        ; preds = %if.end.3
  br label %done, !dbg !10794

if.end.7:                                         ; preds = %if.end.3
  %14 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10795, !tbaa !1975
  %start = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %14, i32 0, i32 9, !dbg !10796
  %15 = load i64, i64* %start, align 8, !dbg !10796, !tbaa !2393
  %16 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10797, !tbaa !1975
  %object8 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %16, i32 0, i32 8, !dbg !10798
  %17 = load %struct._object*, %struct._object** %object8, align 8, !dbg !10798, !tbaa !2333
  %18 = bitcast %struct._object* %17 to %struct.PyVarObject*, !dbg !10799
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %18, i32 0, i32 1, !dbg !10800
  %19 = load i64, i64* %ob_size, align 8, !dbg !10800, !tbaa !2466
  %cmp9 = icmp slt i64 %15, %19, !dbg !10801
  br i1 %cmp9, label %land.lhs.true, label %if.else, !dbg !10802

land.lhs.true:                                    ; preds = %if.end.7
  %20 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10803, !tbaa !1975
  %end = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %20, i32 0, i32 10, !dbg !10805
  %21 = load i64, i64* %end, align 8, !dbg !10805, !tbaa !2565
  %22 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10806, !tbaa !1975
  %start10 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %22, i32 0, i32 9, !dbg !10807
  %23 = load i64, i64* %start10, align 8, !dbg !10807, !tbaa !2393
  %add = add i64 %23, 1, !dbg !10808
  %cmp11 = icmp eq i64 %21, %add, !dbg !10809
  br i1 %cmp11, label %if.then.12, label %if.else, !dbg !10810

if.then.12:                                       ; preds = %land.lhs.true
  %24 = bitcast i32* %byte to i8*, !dbg !10811
  call void @llvm.lifetime.start(i64 4, i8* %24) #2, !dbg !10811
  call void @llvm.dbg.declare(metadata i32* %byte, metadata !1678, metadata !1979), !dbg !10812
  %25 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10813, !tbaa !1975
  %start13 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %25, i32 0, i32 9, !dbg !10814
  %26 = load i64, i64* %start13, align 8, !dbg !10814, !tbaa !2393
  %27 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10815, !tbaa !1975
  %28 = bitcast %struct._object* %27 to %struct.PyUnicodeErrorObject*, !dbg !10816
  %object14 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %28, i32 0, i32 8, !dbg !10817
  %29 = load %struct._object*, %struct._object** %object14, align 8, !dbg !10817, !tbaa !2333
  %30 = bitcast %struct._object* %29 to %struct.PyBytesObject*, !dbg !10818
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %30, i32 0, i32 2, !dbg !10819
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !10820
  %arrayidx = getelementptr i8, i8* %arraydecay, i64 %26, !dbg !10821
  %31 = load i8, i8* %arrayidx, align 1, !dbg !10821, !tbaa !10025
  %conv = sext i8 %31 to i32, !dbg !10821
  %and = and i32 %conv, 255, !dbg !10822
  store i32 %and, i32* %byte, align 4, !dbg !10812, !tbaa !5355
  %32 = load %struct._object*, %struct._object** %encoding_str, align 8, !dbg !10823, !tbaa !1975
  %33 = load i32, i32* %byte, align 4, !dbg !10824, !tbaa !5355
  %34 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10825, !tbaa !1975
  %start15 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %34, i32 0, i32 9, !dbg !10826
  %35 = load i64, i64* %start15, align 8, !dbg !10826, !tbaa !2393
  %36 = load %struct._object*, %struct._object** %reason_str, align 8, !dbg !10827, !tbaa !1975
  %call16 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.191, i32 0, i32 0), %struct._object* %32, i32 %33, i64 %35, %struct._object* %36), !dbg !10828
  store %struct._object* %call16, %struct._object** %result, align 8, !dbg !10829, !tbaa !1975
  %37 = bitcast i32* %byte to i8*, !dbg !10830
  call void @llvm.lifetime.end(i64 4, i8* %37) #2, !dbg !10830
  br label %if.end.20, !dbg !10831

if.else:                                          ; preds = %land.lhs.true, %if.end.7
  %38 = load %struct._object*, %struct._object** %encoding_str, align 8, !dbg !10832, !tbaa !1975
  %39 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10834, !tbaa !1975
  %start17 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %39, i32 0, i32 9, !dbg !10835
  %40 = load i64, i64* %start17, align 8, !dbg !10835, !tbaa !2393
  %41 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !10836, !tbaa !1975
  %end18 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %41, i32 0, i32 10, !dbg !10837
  %42 = load i64, i64* %end18, align 8, !dbg !10837, !tbaa !2565
  %sub = sub i64 %42, 1, !dbg !10838
  %43 = load %struct._object*, %struct._object** %reason_str, align 8, !dbg !10839, !tbaa !1975
  %call19 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.192, i32 0, i32 0), %struct._object* %38, i64 %40, i64 %sub, %struct._object* %43), !dbg !10840
  store %struct._object* %call19, %struct._object** %result, align 8, !dbg !10841, !tbaa !1975
  br label %if.end.20

if.end.20:                                        ; preds = %if.else, %if.then.12
  br label %done, !dbg !10842

done:                                             ; preds = %if.end.20, %if.then.6, %if.then.2
  br label %do.body, !dbg !10843

do.body:                                          ; preds = %done
  %44 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10844
  call void @llvm.lifetime.start(i64 8, i8* %44) #2, !dbg !10844
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1681, metadata !1979), !dbg !10846
  %45 = load %struct._object*, %struct._object** %reason_str, align 8, !dbg !10847, !tbaa !1975
  store %struct._object* %45, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10846, !tbaa !1975
  %46 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10848, !tbaa !1975
  %cmp21 = icmp ne %struct._object* %46, null, !dbg !10849
  br i1 %cmp21, label %if.then.23, label %if.end.30, !dbg !10850

if.then.23:                                       ; preds = %do.body
  br label %do.body.24, !dbg !10851

do.body.24:                                       ; preds = %if.then.23
  %47 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10853
  call void @llvm.lifetime.start(i64 8, i8* %47) #2, !dbg !10853
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1683, metadata !1979), !dbg !10855
  %48 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10856, !tbaa !1975
  store %struct._object* %48, %struct._object** %_py_decref_tmp, align 8, !dbg !10855, !tbaa !1975
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10857, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0, !dbg !10859
  %50 = load i64, i64* %ob_refcnt, align 8, !dbg !10860, !tbaa !2003
  %dec = add i64 %50, -1, !dbg !10860
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10860, !tbaa !2003
  %cmp25 = icmp ne i64 %dec, 0, !dbg !10861
  br i1 %cmp25, label %if.then.27, label %if.else.28, !dbg !10862

if.then.27:                                       ; preds = %do.body.24
  br label %if.end.29, !dbg !10863

if.else.28:                                       ; preds = %do.body.24
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10865, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1, !dbg !10867
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10867, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4, !dbg !10868
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10868, !tbaa !2091
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10869, !tbaa !1975
  call void %53(%struct._object* %54), !dbg !10870
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.28, %if.then.27
  %55 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10871
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !10871
  br label %do.cond, !dbg !10873

do.cond:                                          ; preds = %if.end.29
  br label %do.end, !dbg !10874

do.end:                                           ; preds = %do.cond
  br label %if.end.30, !dbg !10876

if.end.30:                                        ; preds = %do.end, %do.body
  %56 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10878
  call void @llvm.lifetime.end(i64 8, i8* %56) #2, !dbg !10878
  br label %do.cond.31, !dbg !10881

do.cond.31:                                       ; preds = %if.end.30
  br label %do.end.32, !dbg !10882

do.end.32:                                        ; preds = %do.cond.31
  br label %do.body.33, !dbg !10884

do.body.33:                                       ; preds = %do.end.32
  %57 = bitcast %struct._object** %_py_xdecref_tmp34 to i8*, !dbg !10885
  call void @llvm.lifetime.start(i64 8, i8* %57) #2, !dbg !10885
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp34, metadata !1686, metadata !1979), !dbg !10887
  %58 = load %struct._object*, %struct._object** %encoding_str, align 8, !dbg !10888, !tbaa !1975
  store %struct._object* %58, %struct._object** %_py_xdecref_tmp34, align 8, !dbg !10887, !tbaa !1975
  %59 = load %struct._object*, %struct._object** %_py_xdecref_tmp34, align 8, !dbg !10889, !tbaa !1975
  %cmp35 = icmp ne %struct._object* %59, null, !dbg !10890
  br i1 %cmp35, label %if.then.37, label %if.end.51, !dbg !10891

if.then.37:                                       ; preds = %do.body.33
  br label %do.body.38, !dbg !10892

do.body.38:                                       ; preds = %if.then.37
  %60 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !10894
  call void @llvm.lifetime.start(i64 8, i8* %60) #2, !dbg !10894
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp39, metadata !1688, metadata !1979), !dbg !10896
  %61 = load %struct._object*, %struct._object** %_py_xdecref_tmp34, align 8, !dbg !10897, !tbaa !1975
  store %struct._object* %61, %struct._object** %_py_decref_tmp39, align 8, !dbg !10896, !tbaa !1975
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !10898, !tbaa !1975
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0, !dbg !10900
  %63 = load i64, i64* %ob_refcnt40, align 8, !dbg !10901, !tbaa !2003
  %dec41 = add i64 %63, -1, !dbg !10901
  store i64 %dec41, i64* %ob_refcnt40, align 8, !dbg !10901, !tbaa !2003
  %cmp42 = icmp ne i64 %dec41, 0, !dbg !10902
  br i1 %cmp42, label %if.then.44, label %if.else.45, !dbg !10903

if.then.44:                                       ; preds = %do.body.38
  br label %if.end.48, !dbg !10904

if.else.45:                                       ; preds = %do.body.38
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !10906, !tbaa !1975
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1, !dbg !10908
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !10908, !tbaa !2039
  %tp_dealloc47 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %65, i32 0, i32 4, !dbg !10909
  %66 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc47, align 8, !dbg !10909, !tbaa !2091
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !10910, !tbaa !1975
  call void %66(%struct._object* %67), !dbg !10911
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.45, %if.then.44
  %68 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !10912
  call void @llvm.lifetime.end(i64 8, i8* %68) #2, !dbg !10912
  br label %do.cond.49, !dbg !10914

do.cond.49:                                       ; preds = %if.end.48
  br label %do.end.50, !dbg !10915

do.end.50:                                        ; preds = %do.cond.49
  br label %if.end.51, !dbg !10917

if.end.51:                                        ; preds = %do.end.50, %do.body.33
  %69 = bitcast %struct._object** %_py_xdecref_tmp34 to i8*, !dbg !10919
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !10919
  br label %do.cond.52, !dbg !10920

do.cond.52:                                       ; preds = %if.end.51
  br label %do.end.53, !dbg !10921

do.end.53:                                        ; preds = %do.cond.52
  %70 = load %struct._object*, %struct._object** %result, align 8, !dbg !10923, !tbaa !1975
  store %struct._object* %70, %struct._object** %retval, !dbg !10924
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10924

cleanup:                                          ; preds = %do.end.53, %if.then
  %71 = bitcast %struct._object** %encoding_str to i8*, !dbg !10925
  call void @llvm.lifetime.end(i64 8, i8* %71) #2, !dbg !10925
  %72 = bitcast %struct._object** %reason_str to i8*, !dbg !10925
  call void @llvm.lifetime.end(i64 8, i8* %72) #2, !dbg !10925
  %73 = bitcast %struct._object** %result to i8*, !dbg !10925
  call void @llvm.lifetime.end(i64 8, i8* %73) #2, !dbg !10925
  %74 = bitcast %struct.PyUnicodeErrorObject** %uself to i8*, !dbg !10925
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !10925
  %75 = load %struct._object*, %struct._object** %retval, !dbg !10925
  ret %struct._object* %75, !dbg !10925
}

; Function Attrs: nounwind uwtable
define internal i32 @UnicodeDecodeError_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %ude = alloca %struct.PyUnicodeErrorObject*, align 8
  %data = alloca i8*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp12 = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  %_py_tmp32 = alloca %struct._object*, align 8
  %_py_decref_tmp37 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1693, metadata !1979), !dbg !10926
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1694, metadata !1979), !dbg !10927
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1695, metadata !1979), !dbg !10928
  %0 = bitcast %struct.PyUnicodeErrorObject** %ude to i8*, !dbg !10929
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10929
  call void @llvm.dbg.declare(metadata %struct.PyUnicodeErrorObject** %ude, metadata !1696, metadata !1979), !dbg !10930
  %1 = bitcast i8** %data to i8*, !dbg !10931
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !10931
  call void @llvm.dbg.declare(metadata i8** %data, metadata !1697, metadata !1979), !dbg !10932
  %2 = bitcast i64* %size to i8*, !dbg !10933
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !10933
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1698, metadata !1979), !dbg !10934
  %3 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10935, !tbaa !1975
  %4 = bitcast %struct._object* %3 to %struct.PyBaseExceptionObject*, !dbg !10937
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !10938, !tbaa !1975
  %6 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !10939, !tbaa !1975
  %call = call i32 @BaseException_init(%struct.PyBaseExceptionObject* %4, %struct._object* %5, %struct._object* %6), !dbg !10940
  %cmp = icmp eq i32 %call, -1, !dbg !10941
  br i1 %cmp, label %if.then, label %if.end, !dbg !10942

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !10943
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10943

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10944, !tbaa !1975
  %8 = bitcast %struct._object* %7 to %struct.PyUnicodeErrorObject*, !dbg !10945
  store %struct.PyUnicodeErrorObject* %8, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !10946, !tbaa !1975
  br label %do.body, !dbg !10947

do.body:                                          ; preds = %if.end
  %9 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10948
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !10948
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1699, metadata !1979), !dbg !10950
  %10 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !10951, !tbaa !1975
  %encoding = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %10, i32 0, i32 7, !dbg !10952
  %11 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !10952, !tbaa !2290
  store %struct._object* %11, %struct._object** %_py_tmp, align 8, !dbg !10950, !tbaa !1975
  %12 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10953, !tbaa !1975
  %cmp1 = icmp ne %struct._object* %12, null, !dbg !10954
  br i1 %cmp1, label %if.then.2, label %if.end.8, !dbg !10955

if.then.2:                                        ; preds = %do.body
  %13 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !10956, !tbaa !1975
  %encoding3 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %13, i32 0, i32 7, !dbg !10958
  store %struct._object* null, %struct._object** %encoding3, align 8, !dbg !10959, !tbaa !2290
  br label %do.body.4, !dbg !10960

do.body.4:                                        ; preds = %if.then.2
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10961
  call void @llvm.lifetime.start(i64 8, i8* %14) #2, !dbg !10961
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1701, metadata !1979), !dbg !10963
  %15 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10964, !tbaa !1975
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !10963, !tbaa !1975
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10965, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !10967
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !10968, !tbaa !2003
  %dec = add i64 %17, -1, !dbg !10968
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10968, !tbaa !2003
  %cmp5 = icmp ne i64 %dec, 0, !dbg !10969
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !10970

if.then.6:                                        ; preds = %do.body.4
  br label %if.end.7, !dbg !10971

if.else:                                          ; preds = %do.body.4
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10973, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !10975
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10975, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !10976
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10976, !tbaa !2091
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10977, !tbaa !1975
  call void %20(%struct._object* %21), !dbg !10978
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10979
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !10979
  br label %do.cond, !dbg !10981

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !10982

do.end:                                           ; preds = %do.cond
  br label %if.end.8, !dbg !10984

if.end.8:                                         ; preds = %do.end, %do.body
  %23 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10986
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !10986
  br label %do.cond.9, !dbg !10989

do.cond.9:                                        ; preds = %if.end.8
  br label %do.end.10, !dbg !10990

do.end.10:                                        ; preds = %do.cond.9
  br label %do.body.11, !dbg !10992

do.body.11:                                       ; preds = %do.end.10
  %24 = bitcast %struct._object** %_py_tmp12 to i8*, !dbg !10993
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !10993
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp12, metadata !1705, metadata !1979), !dbg !10995
  %25 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !10996, !tbaa !1975
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %25, i32 0, i32 8, !dbg !10997
  %26 = load %struct._object*, %struct._object** %object, align 8, !dbg !10997, !tbaa !2333
  store %struct._object* %26, %struct._object** %_py_tmp12, align 8, !dbg !10995, !tbaa !1975
  %27 = load %struct._object*, %struct._object** %_py_tmp12, align 8, !dbg !10998, !tbaa !1975
  %cmp13 = icmp ne %struct._object* %27, null, !dbg !10999
  br i1 %cmp13, label %if.then.14, label %if.end.28, !dbg !11000

if.then.14:                                       ; preds = %do.body.11
  %28 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11001, !tbaa !1975
  %object15 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %28, i32 0, i32 8, !dbg !11003
  store %struct._object* null, %struct._object** %object15, align 8, !dbg !11004, !tbaa !2333
  br label %do.body.16, !dbg !11005

do.body.16:                                       ; preds = %if.then.14
  %29 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !11006
  call void @llvm.lifetime.start(i64 8, i8* %29) #2, !dbg !11006
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp17, metadata !1707, metadata !1979), !dbg !11008
  %30 = load %struct._object*, %struct._object** %_py_tmp12, align 8, !dbg !11009, !tbaa !1975
  store %struct._object* %30, %struct._object** %_py_decref_tmp17, align 8, !dbg !11008, !tbaa !1975
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !11010, !tbaa !1975
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !11012
  %32 = load i64, i64* %ob_refcnt18, align 8, !dbg !11013, !tbaa !2003
  %dec19 = add i64 %32, -1, !dbg !11013
  store i64 %dec19, i64* %ob_refcnt18, align 8, !dbg !11013, !tbaa !2003
  %cmp20 = icmp ne i64 %dec19, 0, !dbg !11014
  br i1 %cmp20, label %if.then.21, label %if.else.22, !dbg !11015

if.then.21:                                       ; preds = %do.body.16
  br label %if.end.25, !dbg !11016

if.else.22:                                       ; preds = %do.body.16
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !11018, !tbaa !1975
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !11020
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !11020, !tbaa !2039
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !11021
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8, !dbg !11021, !tbaa !2091
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !11022, !tbaa !1975
  call void %35(%struct._object* %36), !dbg !11023
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  %37 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !11024
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !11024
  br label %do.cond.26, !dbg !11026

do.cond.26:                                       ; preds = %if.end.25
  br label %do.end.27, !dbg !11027

do.end.27:                                        ; preds = %do.cond.26
  br label %if.end.28, !dbg !11029

if.end.28:                                        ; preds = %do.end.27, %do.body.11
  %38 = bitcast %struct._object** %_py_tmp12 to i8*, !dbg !11031
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !11031
  br label %do.cond.29, !dbg !11032

do.cond.29:                                       ; preds = %if.end.28
  br label %do.end.30, !dbg !11033

do.end.30:                                        ; preds = %do.cond.29
  br label %do.body.31, !dbg !11035

do.body.31:                                       ; preds = %do.end.30
  %39 = bitcast %struct._object** %_py_tmp32 to i8*, !dbg !11036
  call void @llvm.lifetime.start(i64 8, i8* %39) #2, !dbg !11036
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp32, metadata !1711, metadata !1979), !dbg !11038
  %40 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11039, !tbaa !1975
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %40, i32 0, i32 11, !dbg !11040
  %41 = load %struct._object*, %struct._object** %reason, align 8, !dbg !11040, !tbaa !2717
  store %struct._object* %41, %struct._object** %_py_tmp32, align 8, !dbg !11038, !tbaa !1975
  %42 = load %struct._object*, %struct._object** %_py_tmp32, align 8, !dbg !11041, !tbaa !1975
  %cmp33 = icmp ne %struct._object* %42, null, !dbg !11042
  br i1 %cmp33, label %if.then.34, label %if.end.48, !dbg !11043

if.then.34:                                       ; preds = %do.body.31
  %43 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11044, !tbaa !1975
  %reason35 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %43, i32 0, i32 11, !dbg !11046
  store %struct._object* null, %struct._object** %reason35, align 8, !dbg !11047, !tbaa !2717
  br label %do.body.36, !dbg !11048

do.body.36:                                       ; preds = %if.then.34
  %44 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !11049
  call void @llvm.lifetime.start(i64 8, i8* %44) #2, !dbg !11049
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp37, metadata !1713, metadata !1979), !dbg !11051
  %45 = load %struct._object*, %struct._object** %_py_tmp32, align 8, !dbg !11052, !tbaa !1975
  store %struct._object* %45, %struct._object** %_py_decref_tmp37, align 8, !dbg !11051, !tbaa !1975
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !11053, !tbaa !1975
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !11055
  %47 = load i64, i64* %ob_refcnt38, align 8, !dbg !11056, !tbaa !2003
  %dec39 = add i64 %47, -1, !dbg !11056
  store i64 %dec39, i64* %ob_refcnt38, align 8, !dbg !11056, !tbaa !2003
  %cmp40 = icmp ne i64 %dec39, 0, !dbg !11057
  br i1 %cmp40, label %if.then.41, label %if.else.42, !dbg !11058

if.then.41:                                       ; preds = %do.body.36
  br label %if.end.45, !dbg !11059

if.else.42:                                       ; preds = %do.body.36
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !11061, !tbaa !1975
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !11063
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !11063, !tbaa !2039
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !11064
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !11064, !tbaa !2091
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !11065, !tbaa !1975
  call void %50(%struct._object* %51), !dbg !11066
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  %52 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !11067
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !11067
  br label %do.cond.46, !dbg !11069

do.cond.46:                                       ; preds = %if.end.45
  br label %do.end.47, !dbg !11070

do.end.47:                                        ; preds = %do.cond.46
  br label %if.end.48, !dbg !11072

if.end.48:                                        ; preds = %do.end.47, %do.body.31
  %53 = bitcast %struct._object** %_py_tmp32 to i8*, !dbg !11074
  call void @llvm.lifetime.end(i64 8, i8* %53) #2, !dbg !11074
  br label %do.cond.49, !dbg !11075

do.cond.49:                                       ; preds = %if.end.48
  br label %do.end.50, !dbg !11076

do.end.50:                                        ; preds = %do.cond.49
  %54 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !11078, !tbaa !1975
  %55 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11080, !tbaa !1975
  %encoding51 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %55, i32 0, i32 7, !dbg !11081
  %56 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11082, !tbaa !1975
  %object52 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %56, i32 0, i32 8, !dbg !11083
  %57 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11084, !tbaa !1975
  %start = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %57, i32 0, i32 9, !dbg !11085
  %58 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11086, !tbaa !1975
  %end = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %58, i32 0, i32 10, !dbg !11087
  %59 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11088, !tbaa !1975
  %reason53 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %59, i32 0, i32 11, !dbg !11089
  %call54 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %54, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.193, i32 0, i32 0), %struct._typeobject* @PyUnicode_Type, %struct._object** %encoding51, %struct._object** %object52, i64* %start, i64* %end, %struct._typeobject* @PyUnicode_Type, %struct._object** %reason53), !dbg !11090
  %tobool = icmp ne i32 %call54, 0, !dbg !11090
  br i1 %tobool, label %if.end.59, label %if.then.55, !dbg !11091

if.then.55:                                       ; preds = %do.end.50
  %60 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11092, !tbaa !1975
  %reason56 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %60, i32 0, i32 11, !dbg !11094
  store %struct._object* null, %struct._object** %reason56, align 8, !dbg !11095, !tbaa !2717
  %61 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11096, !tbaa !1975
  %object57 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %61, i32 0, i32 8, !dbg !11097
  store %struct._object* null, %struct._object** %object57, align 8, !dbg !11098, !tbaa !2333
  %62 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11099, !tbaa !1975
  %encoding58 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %62, i32 0, i32 7, !dbg !11100
  store %struct._object* null, %struct._object** %encoding58, align 8, !dbg !11101, !tbaa !2290
  store i32 -1, i32* %retval, !dbg !11102
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11102

if.end.59:                                        ; preds = %do.end.50
  %63 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11103, !tbaa !1975
  %object60 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %63, i32 0, i32 8, !dbg !11105
  %64 = load %struct._object*, %struct._object** %object60, align 8, !dbg !11105, !tbaa !2333
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1, !dbg !11106
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !11106, !tbaa !2039
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %65, i32 0, i32 19, !dbg !11107
  %66 = load i64, i64* %tp_flags, align 8, !dbg !11107, !tbaa !2308
  %and = and i64 %66, 134217728, !dbg !11108
  %cmp62 = icmp ne i64 %and, 0, !dbg !11109
  br i1 %cmp62, label %if.else.74, label %if.then.63, !dbg !11110

if.then.63:                                       ; preds = %if.end.59
  %67 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11111, !tbaa !1975
  %object64 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %67, i32 0, i32 8, !dbg !11114
  %68 = load %struct._object*, %struct._object** %object64, align 8, !dbg !11114, !tbaa !2333
  %call65 = call i32 @PyObject_AsReadBuffer(%struct._object* %68, i8** %data, i64* %size), !dbg !11115
  %tobool66 = icmp ne i32 %call65, 0, !dbg !11115
  br i1 %tobool66, label %if.then.67, label %if.end.71, !dbg !11116

if.then.67:                                       ; preds = %if.then.63
  %69 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11117, !tbaa !1975
  %reason68 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %69, i32 0, i32 11, !dbg !11119
  store %struct._object* null, %struct._object** %reason68, align 8, !dbg !11120, !tbaa !2717
  %70 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11121, !tbaa !1975
  %object69 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %70, i32 0, i32 8, !dbg !11122
  store %struct._object* null, %struct._object** %object69, align 8, !dbg !11123, !tbaa !2333
  %71 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11124, !tbaa !1975
  %encoding70 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %71, i32 0, i32 7, !dbg !11125
  store %struct._object* null, %struct._object** %encoding70, align 8, !dbg !11126, !tbaa !2290
  store i32 -1, i32* %retval, !dbg !11127
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11127

if.end.71:                                        ; preds = %if.then.63
  %72 = load i8*, i8** %data, align 8, !dbg !11128, !tbaa !1975
  %73 = load i64, i64* %size, align 8, !dbg !11129, !tbaa !2396
  %call72 = call %struct._object* @PyBytes_FromStringAndSize(i8* %72, i64 %73), !dbg !11130
  %74 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11131, !tbaa !1975
  %object73 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %74, i32 0, i32 8, !dbg !11132
  store %struct._object* %call72, %struct._object** %object73, align 8, !dbg !11133, !tbaa !2333
  br label %if.end.77, !dbg !11134

if.else.74:                                       ; preds = %if.end.59
  %75 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11135, !tbaa !1975
  %object75 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %75, i32 0, i32 8, !dbg !11137
  %76 = load %struct._object*, %struct._object** %object75, align 8, !dbg !11137, !tbaa !2333
  %ob_refcnt76 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0, !dbg !11138
  %77 = load i64, i64* %ob_refcnt76, align 8, !dbg !11139, !tbaa !2003
  %inc = add i64 %77, 1, !dbg !11139
  store i64 %inc, i64* %ob_refcnt76, align 8, !dbg !11139, !tbaa !2003
  br label %if.end.77

if.end.77:                                        ; preds = %if.else.74, %if.end.71
  %78 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11140, !tbaa !1975
  %encoding78 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %78, i32 0, i32 7, !dbg !11141
  %79 = load %struct._object*, %struct._object** %encoding78, align 8, !dbg !11141, !tbaa !2290
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 0, !dbg !11142
  %80 = load i64, i64* %ob_refcnt79, align 8, !dbg !11143, !tbaa !2003
  %inc80 = add i64 %80, 1, !dbg !11143
  store i64 %inc80, i64* %ob_refcnt79, align 8, !dbg !11143, !tbaa !2003
  %81 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %ude, align 8, !dbg !11144, !tbaa !1975
  %reason81 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %81, i32 0, i32 11, !dbg !11145
  %82 = load %struct._object*, %struct._object** %reason81, align 8, !dbg !11145, !tbaa !2717
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0, !dbg !11146
  %83 = load i64, i64* %ob_refcnt82, align 8, !dbg !11147, !tbaa !2003
  %inc83 = add i64 %83, 1, !dbg !11147
  store i64 %inc83, i64* %ob_refcnt82, align 8, !dbg !11147, !tbaa !2003
  store i32 0, i32* %retval, !dbg !11148
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11148

cleanup:                                          ; preds = %if.end.77, %if.then.67, %if.then.55, %if.then
  %84 = bitcast i64* %size to i8*, !dbg !11149
  call void @llvm.lifetime.end(i64 8, i8* %84) #2, !dbg !11149
  %85 = bitcast i8** %data to i8*, !dbg !11149
  call void @llvm.lifetime.end(i64 8, i8* %85) #2, !dbg !11149
  %86 = bitcast %struct.PyUnicodeErrorObject** %ude to i8*, !dbg !11149
  call void @llvm.lifetime.end(i64 8, i8* %86) #2, !dbg !11149
  %87 = load i32, i32* %retval, !dbg !11149
  ret i32 %87, !dbg !11149
}

declare i32 @PyObject_AsReadBuffer(%struct._object*, i8**, i64*) #3

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @UnicodeTranslateError_str(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %uself = alloca %struct.PyUnicodeErrorObject*, align 8
  %result = alloca %struct._object*, align 8
  %reason_str = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %badchar = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1719, metadata !1979), !dbg !11150
  %0 = bitcast %struct.PyUnicodeErrorObject** %uself to i8*, !dbg !11151
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11151
  call void @llvm.dbg.declare(metadata %struct.PyUnicodeErrorObject** %uself, metadata !1720, metadata !1979), !dbg !11152
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !11153, !tbaa !1975
  %2 = bitcast %struct._object* %1 to %struct.PyUnicodeErrorObject*, !dbg !11154
  store %struct.PyUnicodeErrorObject* %2, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !11152, !tbaa !1975
  %3 = bitcast %struct._object** %result to i8*, !dbg !11155
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !11155
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1721, metadata !1979), !dbg !11156
  store %struct._object* null, %struct._object** %result, align 8, !dbg !11156, !tbaa !1975
  %4 = bitcast %struct._object** %reason_str to i8*, !dbg !11157
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !11157
  call void @llvm.dbg.declare(metadata %struct._object** %reason_str, metadata !1722, metadata !1979), !dbg !11158
  store %struct._object* null, %struct._object** %reason_str, align 8, !dbg !11158, !tbaa !1975
  %5 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !11159, !tbaa !1975
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %5, i32 0, i32 8, !dbg !11161
  %6 = load %struct._object*, %struct._object** %object, align 8, !dbg !11161, !tbaa !2333
  %tobool = icmp ne %struct._object* %6, null, !dbg !11159
  br i1 %tobool, label %if.end, label %if.then, !dbg !11162

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.84, i32 0, i32 0)), !dbg !11163
  store %struct._object* %call, %struct._object** %retval, !dbg !11164
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11164

if.end:                                           ; preds = %entry
  %7 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !11165, !tbaa !1975
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %7, i32 0, i32 11, !dbg !11166
  %8 = load %struct._object*, %struct._object** %reason, align 8, !dbg !11166, !tbaa !2717
  %call1 = call %struct._object* @PyObject_Str(%struct._object* %8), !dbg !11167
  store %struct._object* %call1, %struct._object** %reason_str, align 8, !dbg !11168, !tbaa !1975
  %9 = load %struct._object*, %struct._object** %reason_str, align 8, !dbg !11169, !tbaa !1975
  %cmp = icmp eq %struct._object* %9, null, !dbg !11171
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !11172

if.then.2:                                        ; preds = %if.end
  br label %done, !dbg !11173

if.end.3:                                         ; preds = %if.end
  %10 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !11174, !tbaa !1975
  %start = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %10, i32 0, i32 9, !dbg !11175
  %11 = load i64, i64* %start, align 8, !dbg !11175, !tbaa !2393
  %12 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !11176, !tbaa !1975
  %object4 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %12, i32 0, i32 8, !dbg !11177
  %13 = load %struct._object*, %struct._object** %object4, align 8, !dbg !11177, !tbaa !2333
  %14 = bitcast %struct._object* %13 to %struct.PyASCIIObject*, !dbg !11178
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %14, i32 0, i32 1, !dbg !11179
  %15 = load i64, i64* %length, align 8, !dbg !11179, !tbaa !2400
  %cmp5 = icmp slt i64 %11, %15, !dbg !11180
  br i1 %cmp5, label %land.lhs.true, label %if.else.21, !dbg !11181

land.lhs.true:                                    ; preds = %if.end.3
  %16 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !11182, !tbaa !1975
  %end = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %16, i32 0, i32 10, !dbg !11184
  %17 = load i64, i64* %end, align 8, !dbg !11184, !tbaa !2565
  %18 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !11185, !tbaa !1975
  %start6 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %18, i32 0, i32 9, !dbg !11186
  %19 = load i64, i64* %start6, align 8, !dbg !11186, !tbaa !2393
  %add = add i64 %19, 1, !dbg !11187
  %cmp7 = icmp eq i64 %17, %add, !dbg !11188
  br i1 %cmp7, label %if.then.8, label %if.else.21, !dbg !11189

if.then.8:                                        ; preds = %land.lhs.true
  %20 = bitcast i32* %badchar to i8*, !dbg !11190
  call void @llvm.lifetime.start(i64 4, i8* %20) #2, !dbg !11190
  call void @llvm.dbg.declare(metadata i32* %badchar, metadata !1723, metadata !1979), !dbg !11191
  %21 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !11192, !tbaa !1975
  %object9 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %21, i32 0, i32 8, !dbg !11193
  %22 = load %struct._object*, %struct._object** %object9, align 8, !dbg !11193, !tbaa !2333
  %23 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !11194, !tbaa !1975
  %start10 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %23, i32 0, i32 9, !dbg !11195
  %24 = load i64, i64* %start10, align 8, !dbg !11195, !tbaa !2393
  %call11 = call i32 @PyUnicode_ReadChar(%struct._object* %22, i64 %24), !dbg !11196
  store i32 %call11, i32* %badchar, align 4, !dbg !11191, !tbaa !5355
  %25 = bitcast i8** %fmt to i8*, !dbg !11197
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !11197
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !1726, metadata !1979), !dbg !11198
  %26 = load i32, i32* %badchar, align 4, !dbg !11199, !tbaa !5355
  %cmp12 = icmp ule i32 %26, 255, !dbg !11201
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !11202

if.then.13:                                       ; preds = %if.then.8
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.195, i32 0, i32 0), i8** %fmt, align 8, !dbg !11203, !tbaa !1975
  br label %if.end.18, !dbg !11204

if.else:                                          ; preds = %if.then.8
  %27 = load i32, i32* %badchar, align 4, !dbg !11205, !tbaa !5355
  %cmp14 = icmp ule i32 %27, 65535, !dbg !11207
  br i1 %cmp14, label %if.then.15, label %if.else.16, !dbg !11208

if.then.15:                                       ; preds = %if.else
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.196, i32 0, i32 0), i8** %fmt, align 8, !dbg !11209, !tbaa !1975
  br label %if.end.17, !dbg !11210

if.else.16:                                       ; preds = %if.else
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.197, i32 0, i32 0), i8** %fmt, align 8, !dbg !11211, !tbaa !1975
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.16, %if.then.15
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.then.13
  %28 = load i8*, i8** %fmt, align 8, !dbg !11212, !tbaa !1975
  %29 = load i32, i32* %badchar, align 4, !dbg !11213, !tbaa !5355
  %30 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !11214, !tbaa !1975
  %start19 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %30, i32 0, i32 9, !dbg !11215
  %31 = load i64, i64* %start19, align 8, !dbg !11215, !tbaa !2393
  %32 = load %struct._object*, %struct._object** %reason_str, align 8, !dbg !11216, !tbaa !1975
  %call20 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* %28, i32 %29, i64 %31, %struct._object* %32), !dbg !11217
  store %struct._object* %call20, %struct._object** %result, align 8, !dbg !11218, !tbaa !1975
  %33 = bitcast i8** %fmt to i8*, !dbg !11219
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !11219
  %34 = bitcast i32* %badchar to i8*, !dbg !11219
  call void @llvm.lifetime.end(i64 4, i8* %34) #2, !dbg !11219
  br label %if.end.25, !dbg !11220

if.else.21:                                       ; preds = %land.lhs.true, %if.end.3
  %35 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !11221, !tbaa !1975
  %start22 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %35, i32 0, i32 9, !dbg !11223
  %36 = load i64, i64* %start22, align 8, !dbg !11223, !tbaa !2393
  %37 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %uself, align 8, !dbg !11224, !tbaa !1975
  %end23 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %37, i32 0, i32 10, !dbg !11225
  %38 = load i64, i64* %end23, align 8, !dbg !11225, !tbaa !2565
  %sub = sub i64 %38, 1, !dbg !11226
  %39 = load %struct._object*, %struct._object** %reason_str, align 8, !dbg !11227, !tbaa !1975
  %call24 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.198, i32 0, i32 0), i64 %36, i64 %sub, %struct._object* %39), !dbg !11228
  store %struct._object* %call24, %struct._object** %result, align 8, !dbg !11229, !tbaa !1975
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.21, %if.end.18
  br label %done, !dbg !11230

done:                                             ; preds = %if.end.25, %if.then.2
  br label %do.body, !dbg !11231

do.body:                                          ; preds = %done
  %40 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !11232
  call void @llvm.lifetime.start(i64 8, i8* %40) #2, !dbg !11232
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1727, metadata !1979), !dbg !11234
  %41 = load %struct._object*, %struct._object** %reason_str, align 8, !dbg !11235, !tbaa !1975
  store %struct._object* %41, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11234, !tbaa !1975
  %42 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11236, !tbaa !1975
  %cmp26 = icmp ne %struct._object* %42, null, !dbg !11237
  br i1 %cmp26, label %if.then.27, label %if.end.33, !dbg !11238

if.then.27:                                       ; preds = %do.body
  br label %do.body.28, !dbg !11239

do.body.28:                                       ; preds = %if.then.27
  %43 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11241
  call void @llvm.lifetime.start(i64 8, i8* %43) #2, !dbg !11241
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1729, metadata !1979), !dbg !11243
  %44 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11244, !tbaa !1975
  store %struct._object* %44, %struct._object** %_py_decref_tmp, align 8, !dbg !11243, !tbaa !1975
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11245, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0, !dbg !11247
  %46 = load i64, i64* %ob_refcnt, align 8, !dbg !11248, !tbaa !2003
  %dec = add i64 %46, -1, !dbg !11248
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11248, !tbaa !2003
  %cmp29 = icmp ne i64 %dec, 0, !dbg !11249
  br i1 %cmp29, label %if.then.30, label %if.else.31, !dbg !11250

if.then.30:                                       ; preds = %do.body.28
  br label %if.end.32, !dbg !11251

if.else.31:                                       ; preds = %do.body.28
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11253, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1, !dbg !11255
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11255, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4, !dbg !11256
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11256, !tbaa !2091
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11257, !tbaa !1975
  call void %49(%struct._object* %50), !dbg !11258
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.31, %if.then.30
  %51 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11259
  call void @llvm.lifetime.end(i64 8, i8* %51) #2, !dbg !11259
  br label %do.cond, !dbg !11261

do.cond:                                          ; preds = %if.end.32
  br label %do.end, !dbg !11262

do.end:                                           ; preds = %do.cond
  br label %if.end.33, !dbg !11264

if.end.33:                                        ; preds = %do.end, %do.body
  %52 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !11266
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !11266
  br label %do.cond.34, !dbg !11269

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !11270

do.end.35:                                        ; preds = %do.cond.34
  %53 = load %struct._object*, %struct._object** %result, align 8, !dbg !11272, !tbaa !1975
  store %struct._object* %53, %struct._object** %retval, !dbg !11273
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11273

cleanup:                                          ; preds = %do.end.35, %if.then
  %54 = bitcast %struct._object** %reason_str to i8*, !dbg !11274
  call void @llvm.lifetime.end(i64 8, i8* %54) #2, !dbg !11274
  %55 = bitcast %struct._object** %result to i8*, !dbg !11274
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !11274
  %56 = bitcast %struct.PyUnicodeErrorObject** %uself to i8*, !dbg !11274
  call void @llvm.lifetime.end(i64 8, i8* %56) #2, !dbg !11274
  %57 = load %struct._object*, %struct._object** %retval, !dbg !11274
  ret %struct._object* %57, !dbg !11274
}

; Function Attrs: nounwind uwtable
define internal i32 @UnicodeTranslateError_init(%struct.PyUnicodeErrorObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyUnicodeErrorObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp12 = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  store %struct.PyUnicodeErrorObject* %self, %struct.PyUnicodeErrorObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyUnicodeErrorObject** %self.addr, metadata !1736, metadata !1979), !dbg !11275
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1737, metadata !1979), !dbg !11276
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1738, metadata !1979), !dbg !11277
  %0 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11278, !tbaa !1975
  %1 = bitcast %struct.PyUnicodeErrorObject* %0 to %struct.PyBaseExceptionObject*, !dbg !11280
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !11281, !tbaa !1975
  %3 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !11282, !tbaa !1975
  %call = call i32 @BaseException_init(%struct.PyBaseExceptionObject* %1, %struct._object* %2, %struct._object* %3), !dbg !11283
  %cmp = icmp eq i32 %call, -1, !dbg !11284
  br i1 %cmp, label %if.then, label %if.end, !dbg !11285

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !11286
  br label %return, !dbg !11286

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !11287

do.body:                                          ; preds = %if.end
  %4 = bitcast %struct._object** %_py_tmp to i8*, !dbg !11288
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !11288
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1739, metadata !1979), !dbg !11290
  %5 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11291, !tbaa !1975
  %object = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %5, i32 0, i32 8, !dbg !11292
  %6 = load %struct._object*, %struct._object** %object, align 8, !dbg !11292, !tbaa !2333
  store %struct._object* %6, %struct._object** %_py_tmp, align 8, !dbg !11290, !tbaa !1975
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !11293, !tbaa !1975
  %cmp1 = icmp ne %struct._object* %7, null, !dbg !11294
  br i1 %cmp1, label %if.then.2, label %if.end.8, !dbg !11295

if.then.2:                                        ; preds = %do.body
  %8 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11296, !tbaa !1975
  %object3 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %8, i32 0, i32 8, !dbg !11298
  store %struct._object* null, %struct._object** %object3, align 8, !dbg !11299, !tbaa !2333
  br label %do.body.4, !dbg !11300

do.body.4:                                        ; preds = %if.then.2
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11301
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !11301
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1741, metadata !1979), !dbg !11303
  %10 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !11304, !tbaa !1975
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !11303, !tbaa !1975
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11305, !tbaa !1975
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !11307
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !11308, !tbaa !2003
  %dec = add i64 %12, -1, !dbg !11308
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11308, !tbaa !2003
  %cmp5 = icmp ne i64 %dec, 0, !dbg !11309
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !11310

if.then.6:                                        ; preds = %do.body.4
  br label %if.end.7, !dbg !11311

if.else:                                          ; preds = %do.body.4
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11313, !tbaa !1975
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !11315
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11315, !tbaa !2039
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !11316
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11316, !tbaa !2091
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11317, !tbaa !1975
  call void %15(%struct._object* %16), !dbg !11318
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11319
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !11319
  br label %do.cond, !dbg !11321

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !11322

do.end:                                           ; preds = %do.cond
  br label %if.end.8, !dbg !11324

if.end.8:                                         ; preds = %do.end, %do.body
  %18 = bitcast %struct._object** %_py_tmp to i8*, !dbg !11326
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !11326
  br label %do.end.10, !dbg !11329

do.end.10:                                        ; preds = %if.end.8
  br label %do.body.11, !dbg !11330

do.body.11:                                       ; preds = %do.end.10
  %19 = bitcast %struct._object** %_py_tmp12 to i8*, !dbg !11331
  call void @llvm.lifetime.start(i64 8, i8* %19) #2, !dbg !11331
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp12, metadata !1745, metadata !1979), !dbg !11333
  %20 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11334, !tbaa !1975
  %reason = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %20, i32 0, i32 11, !dbg !11335
  %21 = load %struct._object*, %struct._object** %reason, align 8, !dbg !11335, !tbaa !2717
  store %struct._object* %21, %struct._object** %_py_tmp12, align 8, !dbg !11333, !tbaa !1975
  %22 = load %struct._object*, %struct._object** %_py_tmp12, align 8, !dbg !11336, !tbaa !1975
  %cmp13 = icmp ne %struct._object* %22, null, !dbg !11337
  br i1 %cmp13, label %if.then.14, label %if.end.28, !dbg !11338

if.then.14:                                       ; preds = %do.body.11
  %23 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11339, !tbaa !1975
  %reason15 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %23, i32 0, i32 11, !dbg !11341
  store %struct._object* null, %struct._object** %reason15, align 8, !dbg !11342, !tbaa !2717
  br label %do.body.16, !dbg !11343

do.body.16:                                       ; preds = %if.then.14
  %24 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !11344
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !11344
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp17, metadata !1747, metadata !1979), !dbg !11346
  %25 = load %struct._object*, %struct._object** %_py_tmp12, align 8, !dbg !11347, !tbaa !1975
  store %struct._object* %25, %struct._object** %_py_decref_tmp17, align 8, !dbg !11346, !tbaa !1975
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !11348, !tbaa !1975
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !11350
  %27 = load i64, i64* %ob_refcnt18, align 8, !dbg !11351, !tbaa !2003
  %dec19 = add i64 %27, -1, !dbg !11351
  store i64 %dec19, i64* %ob_refcnt18, align 8, !dbg !11351, !tbaa !2003
  %cmp20 = icmp ne i64 %dec19, 0, !dbg !11352
  br i1 %cmp20, label %if.then.21, label %if.else.22, !dbg !11353

if.then.21:                                       ; preds = %do.body.16
  br label %if.end.25, !dbg !11354

if.else.22:                                       ; preds = %do.body.16
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !11356, !tbaa !1975
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !11358
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !11358, !tbaa !2039
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !11359
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8, !dbg !11359, !tbaa !2091
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !11360, !tbaa !1975
  call void %30(%struct._object* %31), !dbg !11361
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  %32 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !11362
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !11362
  br label %do.cond.26, !dbg !11364

do.cond.26:                                       ; preds = %if.end.25
  br label %do.end.27, !dbg !11365

do.end.27:                                        ; preds = %do.cond.26
  br label %if.end.28, !dbg !11367

if.end.28:                                        ; preds = %do.end.27, %do.body.11
  %33 = bitcast %struct._object** %_py_tmp12 to i8*, !dbg !11369
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !11369
  br label %do.end.30, !dbg !11370

do.end.30:                                        ; preds = %if.end.28
  %34 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !11371, !tbaa !1975
  %35 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11373, !tbaa !1975
  %object31 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %35, i32 0, i32 8, !dbg !11374
  %36 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11375, !tbaa !1975
  %start = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %36, i32 0, i32 9, !dbg !11376
  %37 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11377, !tbaa !1975
  %end = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %37, i32 0, i32 10, !dbg !11378
  %38 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11379, !tbaa !1975
  %reason32 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %38, i32 0, i32 11, !dbg !11380
  %call33 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.199, i32 0, i32 0), %struct._typeobject* @PyUnicode_Type, %struct._object** %object31, i64* %start, i64* %end, %struct._typeobject* @PyUnicode_Type, %struct._object** %reason32), !dbg !11381
  %tobool = icmp ne i32 %call33, 0, !dbg !11381
  br i1 %tobool, label %if.end.37, label %if.then.34, !dbg !11382

if.then.34:                                       ; preds = %do.end.30
  %39 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11383, !tbaa !1975
  %reason35 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %39, i32 0, i32 11, !dbg !11385
  store %struct._object* null, %struct._object** %reason35, align 8, !dbg !11386, !tbaa !2717
  %40 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11387, !tbaa !1975
  %object36 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %40, i32 0, i32 8, !dbg !11388
  store %struct._object* null, %struct._object** %object36, align 8, !dbg !11389, !tbaa !2333
  store i32 -1, i32* %retval, !dbg !11390
  br label %return, !dbg !11390

if.end.37:                                        ; preds = %do.end.30
  %41 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11391, !tbaa !1975
  %object38 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %41, i32 0, i32 8, !dbg !11392
  %42 = load %struct._object*, %struct._object** %object38, align 8, !dbg !11392, !tbaa !2333
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !11393
  %43 = load i64, i64* %ob_refcnt39, align 8, !dbg !11394, !tbaa !2003
  %inc = add i64 %43, 1, !dbg !11394
  store i64 %inc, i64* %ob_refcnt39, align 8, !dbg !11394, !tbaa !2003
  %44 = load %struct.PyUnicodeErrorObject*, %struct.PyUnicodeErrorObject** %self.addr, align 8, !dbg !11395, !tbaa !1975
  %reason40 = getelementptr inbounds %struct.PyUnicodeErrorObject, %struct.PyUnicodeErrorObject* %44, i32 0, i32 11, !dbg !11396
  %45 = load %struct._object*, %struct._object** %reason40, align 8, !dbg !11396, !tbaa !2717
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0, !dbg !11397
  %46 = load i64, i64* %ob_refcnt41, align 8, !dbg !11398, !tbaa !2003
  %inc42 = add i64 %46, 1, !dbg !11398
  store i64 %inc42, i64* %ob_refcnt41, align 8, !dbg !11398, !tbaa !2003
  store i32 0, i32* %retval, !dbg !11399
  br label %return, !dbg !11399

return:                                           ; preds = %if.end.37, %if.then.34, %if.then
  %47 = load i32, i32* %retval, !dbg !11400
  ret i32 %47, !dbg !11400
}

; Function Attrs: nounwind uwtable
define internal void @MemoryError_dealloc(%struct.PyBaseExceptionObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyBaseExceptionObject*, align 8
  %g = alloca %union._gc_head*, align 8
  store %struct.PyBaseExceptionObject* %self, %struct.PyBaseExceptionObject** %self.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self.addr, metadata !1753, metadata !1979), !dbg !11401
  br label %do.body, !dbg !11402

do.body:                                          ; preds = %entry
  %0 = bitcast %union._gc_head** %g to i8*, !dbg !11403
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11403
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !1754, metadata !1979), !dbg !11405
  %1 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !11406, !tbaa !1975
  %2 = bitcast %struct.PyBaseExceptionObject* %1 to %union._gc_head*, !dbg !11407
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %2, i64 -1, !dbg !11408
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !11405, !tbaa !1975
  br label %do.body.1, !dbg !11409

do.body.1:                                        ; preds = %do.body
  %3 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11410, !tbaa !1975
  %gc = bitcast %union._gc_head* %3 to %struct.anon.0*, !dbg !11413
  %gc_refs = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc, i32 0, i32 2, !dbg !11414
  %4 = load i64, i64* %gc_refs, align 8, !dbg !11414, !tbaa !5967
  %and = and i64 %4, 1, !dbg !11415
  %or = or i64 %and, -4, !dbg !11416
  %5 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11417, !tbaa !1975
  %gc2 = bitcast %union._gc_head* %5 to %struct.anon.0*, !dbg !11418
  %gc_refs3 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc2, i32 0, i32 2, !dbg !11419
  store i64 %or, i64* %gc_refs3, align 8, !dbg !11420, !tbaa !5967
  br label %do.cond, !dbg !11421

do.cond:                                          ; preds = %do.body.1
  br label %do.end, !dbg !11422

do.end:                                           ; preds = %do.cond
  %6 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11424, !tbaa !1975
  %gc4 = bitcast %union._gc_head* %6 to %struct.anon.0*, !dbg !11426
  %gc_next = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc4, i32 0, i32 0, !dbg !11427
  %7 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !11427, !tbaa !5982
  %8 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11428, !tbaa !1975
  %gc5 = bitcast %union._gc_head* %8 to %struct.anon.0*, !dbg !11429
  %gc_prev = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc5, i32 0, i32 1, !dbg !11430
  %9 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !11430, !tbaa !5986
  %gc6 = bitcast %union._gc_head* %9 to %struct.anon.0*, !dbg !11431
  %gc_next7 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc6, i32 0, i32 0, !dbg !11432
  store %union._gc_head* %7, %union._gc_head** %gc_next7, align 8, !dbg !11433, !tbaa !5982
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11434, !tbaa !1975
  %gc8 = bitcast %union._gc_head* %10 to %struct.anon.0*, !dbg !11435
  %gc_prev9 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc8, i32 0, i32 1, !dbg !11436
  %11 = load %union._gc_head*, %union._gc_head** %gc_prev9, align 8, !dbg !11436, !tbaa !5986
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11437, !tbaa !1975
  %gc10 = bitcast %union._gc_head* %12 to %struct.anon.0*, !dbg !11438
  %gc_next11 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc10, i32 0, i32 0, !dbg !11439
  %13 = load %union._gc_head*, %union._gc_head** %gc_next11, align 8, !dbg !11439, !tbaa !5982
  %gc12 = bitcast %union._gc_head* %13 to %struct.anon.0*, !dbg !11440
  %gc_prev13 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc12, i32 0, i32 1, !dbg !11441
  store %union._gc_head* %11, %union._gc_head** %gc_prev13, align 8, !dbg !11442, !tbaa !5986
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11443, !tbaa !1975
  %gc14 = bitcast %union._gc_head* %14 to %struct.anon.0*, !dbg !11444
  %gc_next15 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc14, i32 0, i32 0, !dbg !11445
  store %union._gc_head* null, %union._gc_head** %gc_next15, align 8, !dbg !11446, !tbaa !5982
  %15 = bitcast %union._gc_head** %g to i8*, !dbg !11447
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !11447
  br label %do.end.17, !dbg !11448

do.end.17:                                        ; preds = %do.end
  %16 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !11449, !tbaa !1975
  %call = call i32 @BaseException_clear(%struct.PyBaseExceptionObject* %16), !dbg !11450
  %17 = load i32, i32* @memerrors_numfree, align 4, !dbg !11451, !tbaa !5355
  %cmp = icmp sge i32 %17, 16, !dbg !11453
  br i1 %cmp, label %if.then, label %if.else, !dbg !11454

if.then:                                          ; preds = %do.end.17
  %18 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !11455, !tbaa !1975
  %19 = bitcast %struct.PyBaseExceptionObject* %18 to %struct._object*, !dbg !11456
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !11457
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11457, !tbaa !2039
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 38, !dbg !11458
  %21 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !11458, !tbaa !5662
  %22 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !11459, !tbaa !1975
  %23 = bitcast %struct.PyBaseExceptionObject* %22 to %struct._object*, !dbg !11460
  %24 = bitcast %struct._object* %23 to i8*, !dbg !11460
  call void %21(i8* %24), !dbg !11461
  br label %if.end, !dbg !11461

if.else:                                          ; preds = %do.end.17
  %25 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !11462, !tbaa !1975
  %26 = bitcast %struct.PyBaseExceptionObject* %25 to %struct._object*, !dbg !11464
  %27 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !11465, !tbaa !1975
  %dict = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %27, i32 0, i32 1, !dbg !11466
  store %struct._object* %26, %struct._object** %dict, align 8, !dbg !11467, !tbaa !5432
  %28 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self.addr, align 8, !dbg !11468, !tbaa !1975
  store %struct.PyBaseExceptionObject* %28, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !11469, !tbaa !1975
  %29 = load i32, i32* @memerrors_numfree, align 4, !dbg !11470, !tbaa !5355
  %inc = add i32 %29, 1, !dbg !11470
  store i32 %inc, i32* @memerrors_numfree, align 4, !dbg !11470, !tbaa !5355
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11471
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @MemoryError_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %self = alloca %struct.PyBaseExceptionObject*, align 8
  %cleanup.dest.slot = alloca i32
  %g = alloca %union._gc_head*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1758, metadata !1979), !dbg !11472
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1759, metadata !1979), !dbg !11473
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1975
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1760, metadata !1979), !dbg !11474
  %0 = bitcast %struct.PyBaseExceptionObject** %self to i8*, !dbg !11475
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11475
  call void @llvm.dbg.declare(metadata %struct.PyBaseExceptionObject** %self, metadata !1761, metadata !1979), !dbg !11476
  %1 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !11477, !tbaa !1975
  %2 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !11479, !tbaa !1975
  %3 = bitcast %struct._object* %2 to %struct._typeobject*, !dbg !11480
  %cmp = icmp ne %struct._typeobject* %1, %3, !dbg !11481
  br i1 %cmp, label %if.then, label %if.end, !dbg !11482

if.then:                                          ; preds = %entry
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !11483, !tbaa !1975
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !11484, !tbaa !1975
  %6 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !11485, !tbaa !1975
  %call = call %struct._object* @BaseException_new(%struct._typeobject* %4, %struct._object* %5, %struct._object* %6), !dbg !11486
  store %struct._object* %call, %struct._object** %retval, !dbg !11487
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11487

if.end:                                           ; preds = %entry
  %7 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !11488, !tbaa !1975
  %cmp1 = icmp eq %struct.PyBaseExceptionObject* %7, null, !dbg !11490
  br i1 %cmp1, label %if.then.2, label %if.end.4, !dbg !11491

if.then.2:                                        ; preds = %if.end
  %8 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !11492, !tbaa !1975
  %9 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !11493, !tbaa !1975
  %10 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !11494, !tbaa !1975
  %call3 = call %struct._object* @BaseException_new(%struct._typeobject* %8, %struct._object* %9, %struct._object* %10), !dbg !11495
  store %struct._object* %call3, %struct._object** %retval, !dbg !11496
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11496

if.end.4:                                         ; preds = %if.end
  %11 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !11497, !tbaa !1975
  store %struct.PyBaseExceptionObject* %11, %struct.PyBaseExceptionObject** %self, align 8, !dbg !11498, !tbaa !1975
  %call5 = call %struct._object* @PyTuple_New(i64 0), !dbg !11499
  %12 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !11500, !tbaa !1975
  %args6 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %12, i32 0, i32 2, !dbg !11501
  store %struct._object* %call5, %struct._object** %args6, align 8, !dbg !11502, !tbaa !5453
  %13 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !11503, !tbaa !1975
  %args7 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %13, i32 0, i32 2, !dbg !11505
  %14 = load %struct._object*, %struct._object** %args7, align 8, !dbg !11505, !tbaa !5453
  %cmp8 = icmp eq %struct._object* %14, null, !dbg !11506
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !11507

if.then.9:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !11508
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11508

if.end.10:                                        ; preds = %if.end.4
  %15 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !11509, !tbaa !1975
  %dict = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %15, i32 0, i32 1, !dbg !11510
  %16 = load %struct._object*, %struct._object** %dict, align 8, !dbg !11510, !tbaa !5432
  %17 = bitcast %struct._object* %16 to %struct.PyBaseExceptionObject*, !dbg !11511
  store %struct.PyBaseExceptionObject* %17, %struct.PyBaseExceptionObject** @memerrors_freelist, align 8, !dbg !11512, !tbaa !1975
  %18 = load i32, i32* @memerrors_numfree, align 4, !dbg !11513, !tbaa !5355
  %dec = add i32 %18, -1, !dbg !11513
  store i32 %dec, i32* @memerrors_numfree, align 4, !dbg !11513, !tbaa !5355
  %19 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !11514, !tbaa !1975
  %dict11 = getelementptr inbounds %struct.PyBaseExceptionObject, %struct.PyBaseExceptionObject* %19, i32 0, i32 1, !dbg !11515
  store %struct._object* null, %struct._object** %dict11, align 8, !dbg !11516, !tbaa !5432
  %20 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !11517, !tbaa !1975
  %21 = bitcast %struct.PyBaseExceptionObject* %20 to %struct._object*, !dbg !11518
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !11519
  store i64 1, i64* %ob_refcnt, align 8, !dbg !11520, !tbaa !2003
  br label %do.body, !dbg !11521

do.body:                                          ; preds = %if.end.10
  %22 = bitcast %union._gc_head** %g to i8*, !dbg !11522
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !11522
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !1762, metadata !1979), !dbg !11524
  %23 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !11525, !tbaa !1975
  %24 = bitcast %struct.PyBaseExceptionObject* %23 to %union._gc_head*, !dbg !11526
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %24, i64 -1, !dbg !11527
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !11524, !tbaa !1975
  %25 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11528, !tbaa !1975
  %gc = bitcast %union._gc_head* %25 to %struct.anon.0*, !dbg !11530
  %gc_refs = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc, i32 0, i32 2, !dbg !11531
  %26 = load i64, i64* %gc_refs, align 8, !dbg !11531, !tbaa !5967
  %shr = ashr i64 %26, 1, !dbg !11532
  %cmp12 = icmp ne i64 %shr, -2, !dbg !11533
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !11534

if.then.13:                                       ; preds = %do.body
  call void @Py_FatalError(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.208, i32 0, i32 0)) #6, !dbg !11535
  unreachable, !dbg !11535

if.end.14:                                        ; preds = %do.body
  br label %do.body.15, !dbg !11537

do.body.15:                                       ; preds = %if.end.14
  %27 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11539, !tbaa !1975
  %gc16 = bitcast %union._gc_head* %27 to %struct.anon.0*, !dbg !11542
  %gc_refs17 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc16, i32 0, i32 2, !dbg !11543
  %28 = load i64, i64* %gc_refs17, align 8, !dbg !11543, !tbaa !5967
  %and = and i64 %28, 1, !dbg !11544
  %or = or i64 %and, -6, !dbg !11545
  %29 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11546, !tbaa !1975
  %gc18 = bitcast %union._gc_head* %29 to %struct.anon.0*, !dbg !11547
  %gc_refs19 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc18, i32 0, i32 2, !dbg !11548
  store i64 %or, i64* %gc_refs19, align 8, !dbg !11549, !tbaa !5967
  br label %do.cond, !dbg !11550

do.cond:                                          ; preds = %do.body.15
  br label %do.end, !dbg !11551

do.end:                                           ; preds = %do.cond
  %30 = load %union._gc_head*, %union._gc_head** @_PyGC_generation0, align 8, !dbg !11553, !tbaa !1975
  %31 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11555, !tbaa !1975
  %gc20 = bitcast %union._gc_head* %31 to %struct.anon.0*, !dbg !11556
  %gc_next = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc20, i32 0, i32 0, !dbg !11557
  store %union._gc_head* %30, %union._gc_head** %gc_next, align 8, !dbg !11558, !tbaa !5982
  %32 = load %union._gc_head*, %union._gc_head** @_PyGC_generation0, align 8, !dbg !11559, !tbaa !1975
  %gc21 = bitcast %union._gc_head* %32 to %struct.anon.0*, !dbg !11560
  %gc_prev = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc21, i32 0, i32 1, !dbg !11561
  %33 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !11561, !tbaa !5986
  %34 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11562, !tbaa !1975
  %gc22 = bitcast %union._gc_head* %34 to %struct.anon.0*, !dbg !11563
  %gc_prev23 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc22, i32 0, i32 1, !dbg !11564
  store %union._gc_head* %33, %union._gc_head** %gc_prev23, align 8, !dbg !11565, !tbaa !5986
  %35 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11566, !tbaa !1975
  %36 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11567, !tbaa !1975
  %gc24 = bitcast %union._gc_head* %36 to %struct.anon.0*, !dbg !11568
  %gc_prev25 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc24, i32 0, i32 1, !dbg !11569
  %37 = load %union._gc_head*, %union._gc_head** %gc_prev25, align 8, !dbg !11569, !tbaa !5986
  %gc26 = bitcast %union._gc_head* %37 to %struct.anon.0*, !dbg !11570
  %gc_next27 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc26, i32 0, i32 0, !dbg !11571
  store %union._gc_head* %35, %union._gc_head** %gc_next27, align 8, !dbg !11572, !tbaa !5982
  %38 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !11573, !tbaa !1975
  %39 = load %union._gc_head*, %union._gc_head** @_PyGC_generation0, align 8, !dbg !11574, !tbaa !1975
  %gc28 = bitcast %union._gc_head* %39 to %struct.anon.0*, !dbg !11575
  %gc_prev29 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc28, i32 0, i32 1, !dbg !11576
  store %union._gc_head* %38, %union._gc_head** %gc_prev29, align 8, !dbg !11577, !tbaa !5986
  %40 = bitcast %union._gc_head** %g to i8*, !dbg !11578
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !11578
  br label %do.cond.30, !dbg !11579

do.cond.30:                                       ; preds = %do.end
  br label %do.end.31, !dbg !11580

do.end.31:                                        ; preds = %do.cond.30
  %41 = load %struct.PyBaseExceptionObject*, %struct.PyBaseExceptionObject** %self, align 8, !dbg !11582, !tbaa !1975
  %42 = bitcast %struct.PyBaseExceptionObject* %41 to %struct._object*, !dbg !11583
  store %struct._object* %42, %struct._object** %retval, !dbg !11584
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11584

cleanup:                                          ; preds = %do.end.31, %if.then.9, %if.then.2, %if.then
  %43 = bitcast %struct.PyBaseExceptionObject** %self to i8*, !dbg !11585
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !11585
  %44 = load %struct._object*, %struct._object** %retval, !dbg !11585
  ret %struct._object* %44, !dbg !11585
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn }
attributes #7 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1972, !1973}
!llvm.ident = !{!1974}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !10, subprograms: !488, globals: !1803)
!1 = !DIFile(filename: "exceptions.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PyUnicode_Kind", file: !4, line: 451, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "Include/unicodeobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!5 = !{!6, !7, !8, !9}
!6 = !DIEnumerator(name: "PyUnicode_WCHAR_KIND", value: 0)
!7 = !DIEnumerator(name: "PyUnicode_1BYTE_KIND", value: 1)
!8 = !DIEnumerator(name: "PyUnicode_2BYTE_KIND", value: 2)
!9 = !DIEnumerator(name: "PyUnicode_4BYTE_KIND", value: 4)
!10 = !{!11, !50, !102, !369, !385, !403, !404, !337, !406, !414, !107, !40, !344, !428, !444, !452, !470, !471, !473, !475, !56, !477, !485}
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBaseExceptionObject", file: !13, line: 18, baseType: !14)
!13 = !DIFile(filename: "Include/pyerrors.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!14 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 16, size: 512, align: 64, elements: !15)
!15 = !{!16, !363, !364, !365, !366, !367, !368}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !14, file: !13, line: 17, baseType: !17, size: 128, align: 64)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !18, line: 109, baseType: !19)
!18 = !DIFile(filename: "Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !18, line: 105, size: 128, align: 64, elements: !20)
!20 = !{!21, !29}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !19, file: !18, line: 107, baseType: !22, size: 64, align: 64)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !23, line: 177, baseType: !24)
!23 = !DIFile(filename: "Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !25, line: 102, baseType: !26)
!25 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !27, line: 181, baseType: !28)
!27 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!28 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !19, file: !18, line: 108, baseType: !30, size: 64, align: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !18, line: 334, size: 3200, align: 64, elements: !32)
!32 = !{!33, !39, !43, !44, !45, !51, !115, !120, !125, !126, !131, !183, !214, !226, !232, !233, !234, !236, !238, !269, !270, !271, !280, !281, !286, !287, !289, !291, !301, !311, !329, !330, !331, !333, !335, !336, !338, !343, !348, !353, !354, !355, !356, !357, !358, !359, !360, !362}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !31, file: !18, line: 335, baseType: !34, size: 192, align: 64)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !18, line: 114, baseType: !35)
!35 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 111, size: 192, align: 64, elements: !36)
!36 = !{!37, !38}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !35, file: !18, line: 112, baseType: !17, size: 128, align: 64)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !35, file: !18, line: 113, baseType: !22, size: 64, align: 64, offset: 128)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !31, file: !18, line: 336, baseType: !40, size: 64, align: 64, offset: 192)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64, align: 64)
!41 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !42)
!42 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !31, file: !18, line: 337, baseType: !22, size: 64, align: 64, offset: 256)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !31, file: !18, line: 337, baseType: !22, size: 64, align: 64, offset: 320)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !31, file: !18, line: 341, baseType: !46, size: 64, align: 64, offset: 384)
!46 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !18, line: 308, baseType: !47)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64, align: 64)
!48 = !DISubroutineType(types: !49)
!49 = !{null, !50}
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !31, file: !18, line: 342, baseType: !52, size: 64, align: 64, offset: 448)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !18, line: 314, baseType: !53)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64, align: 64)
!54 = !DISubroutineType(types: !55)
!55 = !{!56, !50, !57, !56}
!56 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64, align: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !25, line: 48, baseType: !59)
!59 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !60, line: 246, size: 1728, align: 64, elements: !61)
!60 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!61 = !{!62, !63, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !83, !84, !85, !86, !88, !90, !92, !96, !99, !101, !103, !104, !105, !106, !110, !111}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !59, file: !60, line: 247, baseType: !56, size: 32, align: 32)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !59, file: !60, line: 252, baseType: !64, size: 64, align: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !59, file: !60, line: 253, baseType: !64, size: 64, align: 64, offset: 128)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !59, file: !60, line: 254, baseType: !64, size: 64, align: 64, offset: 192)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !59, file: !60, line: 255, baseType: !64, size: 64, align: 64, offset: 256)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !59, file: !60, line: 256, baseType: !64, size: 64, align: 64, offset: 320)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !59, file: !60, line: 257, baseType: !64, size: 64, align: 64, offset: 384)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !59, file: !60, line: 258, baseType: !64, size: 64, align: 64, offset: 448)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !59, file: !60, line: 259, baseType: !64, size: 64, align: 64, offset: 512)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !59, file: !60, line: 261, baseType: !64, size: 64, align: 64, offset: 576)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !59, file: !60, line: 262, baseType: !64, size: 64, align: 64, offset: 640)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !59, file: !60, line: 263, baseType: !64, size: 64, align: 64, offset: 704)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !59, file: !60, line: 265, baseType: !76, size: 64, align: 64, offset: 768)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64, align: 64)
!77 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !60, line: 161, size: 192, align: 64, elements: !78)
!78 = !{!79, !80, !82}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !77, file: !60, line: 162, baseType: !76, size: 64, align: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !77, file: !60, line: 163, baseType: !81, size: 64, align: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !77, file: !60, line: 167, baseType: !56, size: 32, align: 32, offset: 128)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !59, file: !60, line: 267, baseType: !81, size: 64, align: 64, offset: 832)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !59, file: !60, line: 269, baseType: !56, size: 32, align: 32, offset: 896)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !59, file: !60, line: 273, baseType: !56, size: 32, align: 32, offset: 928)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !59, file: !60, line: 275, baseType: !87, size: 64, align: 64, offset: 960)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !27, line: 140, baseType: !28)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !59, file: !60, line: 279, baseType: !89, size: 16, align: 16, offset: 1024)
!89 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !59, file: !60, line: 280, baseType: !91, size: 8, align: 8, offset: 1040)
!91 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !59, file: !60, line: 281, baseType: !93, size: 8, align: 8, offset: 1048)
!93 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 8, align: 8, elements: !94)
!94 = !{!95}
!95 = !DISubrange(count: 1)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !59, file: !60, line: 285, baseType: !97, size: 64, align: 64, offset: 1088)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64, align: 64)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !60, line: 155, baseType: null)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !59, file: !60, line: 294, baseType: !100, size: 64, align: 64, offset: 1152)
!100 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !27, line: 141, baseType: !28)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !59, file: !60, line: 303, baseType: !102, size: 64, align: 64, offset: 1216)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !59, file: !60, line: 304, baseType: !102, size: 64, align: 64, offset: 1280)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !59, file: !60, line: 305, baseType: !102, size: 64, align: 64, offset: 1344)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !59, file: !60, line: 306, baseType: !102, size: 64, align: 64, offset: 1408)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !59, file: !60, line: 307, baseType: !107, size: 64, align: 64, offset: 1472)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !108, line: 62, baseType: !109)
!108 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!109 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !59, file: !60, line: 309, baseType: !56, size: 32, align: 32, offset: 1536)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !59, file: !60, line: 311, baseType: !112, size: 160, align: 8, offset: 1568)
!112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 160, align: 8, elements: !113)
!113 = !{!114}
!114 = !DISubrange(count: 20)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !31, file: !18, line: 343, baseType: !116, size: 64, align: 64, offset: 512)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !18, line: 316, baseType: !117)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64, align: 64)
!118 = !DISubroutineType(types: !119)
!119 = !{!50, !50, !64}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !31, file: !18, line: 344, baseType: !121, size: 64, align: 64, offset: 576)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !18, line: 318, baseType: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64)
!123 = !DISubroutineType(types: !124)
!124 = !{!56, !50, !64, !50}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !31, file: !18, line: 345, baseType: !102, size: 64, align: 64, offset: 640)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !31, file: !18, line: 346, baseType: !127, size: 64, align: 64, offset: 704)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !18, line: 320, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64, align: 64)
!129 = !DISubroutineType(types: !130)
!130 = !{!50, !50}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !31, file: !18, line: 350, baseType: !132, size: 64, align: 64, offset: 768)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64, align: 64)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !18, line: 278, baseType: !134)
!134 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 236, size: 2176, align: 64, elements: !135)
!135 = !{!136, !141, !142, !143, !144, !145, !150, !152, !153, !154, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !134, file: !18, line: 241, baseType: !137, size: 64, align: 64)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !18, line: 166, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64, align: 64)
!139 = !DISubroutineType(types: !140)
!140 = !{!50, !50, !50}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !134, file: !18, line: 242, baseType: !137, size: 64, align: 64, offset: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !134, file: !18, line: 243, baseType: !137, size: 64, align: 64, offset: 128)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !134, file: !18, line: 244, baseType: !137, size: 64, align: 64, offset: 192)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !134, file: !18, line: 245, baseType: !137, size: 64, align: 64, offset: 256)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !134, file: !18, line: 246, baseType: !146, size: 64, align: 64, offset: 320)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !18, line: 167, baseType: !147)
!147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64, align: 64)
!148 = !DISubroutineType(types: !149)
!149 = !{!50, !50, !50, !50}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !134, file: !18, line: 247, baseType: !151, size: 64, align: 64, offset: 384)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !18, line: 165, baseType: !128)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !134, file: !18, line: 248, baseType: !151, size: 64, align: 64, offset: 448)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !134, file: !18, line: 249, baseType: !151, size: 64, align: 64, offset: 512)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !134, file: !18, line: 250, baseType: !155, size: 64, align: 64, offset: 576)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !18, line: 168, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64, align: 64)
!157 = !DISubroutineType(types: !158)
!158 = !{!56, !50}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !134, file: !18, line: 251, baseType: !151, size: 64, align: 64, offset: 640)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !134, file: !18, line: 252, baseType: !137, size: 64, align: 64, offset: 704)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !134, file: !18, line: 253, baseType: !137, size: 64, align: 64, offset: 768)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !134, file: !18, line: 254, baseType: !137, size: 64, align: 64, offset: 832)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !134, file: !18, line: 255, baseType: !137, size: 64, align: 64, offset: 896)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !134, file: !18, line: 256, baseType: !137, size: 64, align: 64, offset: 960)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !134, file: !18, line: 257, baseType: !151, size: 64, align: 64, offset: 1024)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !134, file: !18, line: 258, baseType: !102, size: 64, align: 64, offset: 1088)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !134, file: !18, line: 259, baseType: !151, size: 64, align: 64, offset: 1152)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !134, file: !18, line: 261, baseType: !137, size: 64, align: 64, offset: 1216)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !134, file: !18, line: 262, baseType: !137, size: 64, align: 64, offset: 1280)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !134, file: !18, line: 263, baseType: !137, size: 64, align: 64, offset: 1344)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !134, file: !18, line: 264, baseType: !137, size: 64, align: 64, offset: 1408)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !134, file: !18, line: 265, baseType: !146, size: 64, align: 64, offset: 1472)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !134, file: !18, line: 266, baseType: !137, size: 64, align: 64, offset: 1536)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !134, file: !18, line: 267, baseType: !137, size: 64, align: 64, offset: 1600)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !134, file: !18, line: 268, baseType: !137, size: 64, align: 64, offset: 1664)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !134, file: !18, line: 269, baseType: !137, size: 64, align: 64, offset: 1728)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !134, file: !18, line: 270, baseType: !137, size: 64, align: 64, offset: 1792)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !134, file: !18, line: 272, baseType: !137, size: 64, align: 64, offset: 1856)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !134, file: !18, line: 273, baseType: !137, size: 64, align: 64, offset: 1920)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !134, file: !18, line: 274, baseType: !137, size: 64, align: 64, offset: 1984)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !134, file: !18, line: 275, baseType: !137, size: 64, align: 64, offset: 2048)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !134, file: !18, line: 277, baseType: !151, size: 64, align: 64, offset: 2112)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !31, file: !18, line: 351, baseType: !184, size: 64, align: 64, offset: 832)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !18, line: 292, baseType: !186)
!186 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 280, size: 640, align: 64, elements: !187)
!187 = !{!188, !193, !194, !199, !200, !201, !206, !207, !212, !213}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !186, file: !18, line: 281, baseType: !189, size: 64, align: 64)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !18, line: 169, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!22, !50}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !186, file: !18, line: 282, baseType: !137, size: 64, align: 64, offset: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !186, file: !18, line: 283, baseType: !195, size: 64, align: 64, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !18, line: 170, baseType: !196)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64, align: 64)
!197 = !DISubroutineType(types: !198)
!198 = !{!50, !50, !22}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !186, file: !18, line: 284, baseType: !195, size: 64, align: 64, offset: 192)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !186, file: !18, line: 285, baseType: !102, size: 64, align: 64, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !186, file: !18, line: 286, baseType: !202, size: 64, align: 64, offset: 320)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !18, line: 172, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64, align: 64)
!204 = !DISubroutineType(types: !205)
!205 = !{!56, !50, !22, !50}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !186, file: !18, line: 287, baseType: !102, size: 64, align: 64, offset: 384)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !186, file: !18, line: 288, baseType: !208, size: 64, align: 64, offset: 448)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !18, line: 231, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!210 = !DISubroutineType(types: !211)
!211 = !{!56, !50, !50}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !186, file: !18, line: 290, baseType: !137, size: 64, align: 64, offset: 512)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !186, file: !18, line: 291, baseType: !195, size: 64, align: 64, offset: 576)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !31, file: !18, line: 352, baseType: !215, size: 64, align: 64, offset: 896)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64, align: 64)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !18, line: 298, baseType: !217)
!217 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 294, size: 192, align: 64, elements: !218)
!218 = !{!219, !220, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !217, file: !18, line: 295, baseType: !189, size: 64, align: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !217, file: !18, line: 296, baseType: !137, size: 64, align: 64, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !217, file: !18, line: 297, baseType: !222, size: 64, align: 64, offset: 128)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !18, line: 174, baseType: !223)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64, align: 64)
!224 = !DISubroutineType(types: !225)
!225 = !{!56, !50, !50, !50}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !31, file: !18, line: 356, baseType: !227, size: 64, align: 64, offset: 960)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !18, line: 321, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64, align: 64)
!229 = !DISubroutineType(types: !230)
!230 = !{!231, !50}
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !23, line: 186, baseType: !22)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !31, file: !18, line: 357, baseType: !146, size: 64, align: 64, offset: 1024)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !31, file: !18, line: 358, baseType: !127, size: 64, align: 64, offset: 1088)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !31, file: !18, line: 359, baseType: !235, size: 64, align: 64, offset: 1152)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !18, line: 317, baseType: !138)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !31, file: !18, line: 360, baseType: !237, size: 64, align: 64, offset: 1216)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !18, line: 319, baseType: !223)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !31, file: !18, line: 363, baseType: !239, size: 64, align: 64, offset: 1280)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !18, line: 304, baseType: !241)
!241 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 301, size: 128, align: 64, elements: !242)
!242 = !{!243, !264}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !241, file: !18, line: 302, baseType: !244, size: 64, align: 64)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !18, line: 193, baseType: !245)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64, align: 64)
!246 = !DISubroutineType(types: !247)
!247 = !{!56, !50, !248, !56}
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64, align: 64)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !18, line: 191, baseType: !250)
!250 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !18, line: 178, size: 640, align: 64, elements: !251)
!251 = !{!252, !253, !254, !255, !256, !257, !258, !259, !261, !262, !263}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !250, file: !18, line: 179, baseType: !102, size: 64, align: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !250, file: !18, line: 180, baseType: !50, size: 64, align: 64, offset: 64)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !250, file: !18, line: 181, baseType: !22, size: 64, align: 64, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !250, file: !18, line: 182, baseType: !22, size: 64, align: 64, offset: 192)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !250, file: !18, line: 184, baseType: !56, size: 32, align: 32, offset: 256)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !250, file: !18, line: 185, baseType: !56, size: 32, align: 32, offset: 288)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !250, file: !18, line: 186, baseType: !64, size: 64, align: 64, offset: 320)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !250, file: !18, line: 187, baseType: !260, size: 64, align: 64, offset: 384)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !250, file: !18, line: 188, baseType: !260, size: 64, align: 64, offset: 448)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !250, file: !18, line: 189, baseType: !260, size: 64, align: 64, offset: 512)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !250, file: !18, line: 190, baseType: !102, size: 64, align: 64, offset: 576)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !241, file: !18, line: 303, baseType: !265, size: 64, align: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !18, line: 194, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64, align: 64)
!267 = !DISubroutineType(types: !268)
!268 = !{null, !50, !248}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !31, file: !18, line: 366, baseType: !109, size: 64, align: 64, offset: 1344)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !31, file: !18, line: 368, baseType: !40, size: 64, align: 64, offset: 1408)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !31, file: !18, line: 372, baseType: !272, size: 64, align: 64, offset: 1472)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !18, line: 233, baseType: !273)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64, align: 64)
!274 = !DISubroutineType(types: !275)
!275 = !{!56, !50, !276, !102}
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !18, line: 232, baseType: !277)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!278 = !DISubroutineType(types: !279)
!279 = !{!56, !50, !102}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !31, file: !18, line: 375, baseType: !155, size: 64, align: 64, offset: 1536)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !31, file: !18, line: 379, baseType: !282, size: 64, align: 64, offset: 1600)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !18, line: 322, baseType: !283)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64, align: 64)
!284 = !DISubroutineType(types: !285)
!285 = !{!50, !50, !50, !56}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !31, file: !18, line: 382, baseType: !22, size: 64, align: 64, offset: 1664)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !31, file: !18, line: 385, baseType: !288, size: 64, align: 64, offset: 1728)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !18, line: 323, baseType: !128)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !31, file: !18, line: 386, baseType: !290, size: 64, align: 64, offset: 1792)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !18, line: 324, baseType: !128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !31, file: !18, line: 389, baseType: !292, size: 64, align: 64, offset: 1856)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !294, line: 40, size: 256, align: 64, elements: !295)
!294 = !DIFile(filename: "Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!295 = !{!296, !297, !299, !300}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !293, file: !294, line: 41, baseType: !40, size: 64, align: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !293, file: !294, line: 42, baseType: !298, size: 64, align: 64, offset: 64)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !294, line: 18, baseType: !138)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !293, file: !294, line: 43, baseType: !56, size: 32, align: 32, offset: 128)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !293, file: !294, line: 45, baseType: !40, size: 64, align: 64, offset: 192)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !31, file: !18, line: 390, baseType: !302, size: 64, align: 64, offset: 1920)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64, align: 64)
!303 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !304, line: 18, size: 320, align: 64, elements: !305)
!304 = !DIFile(filename: "Include/structmember.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!305 = !{!306, !307, !308, !309, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !303, file: !304, line: 19, baseType: !64, size: 64, align: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !303, file: !304, line: 20, baseType: !56, size: 32, align: 32, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !303, file: !304, line: 21, baseType: !22, size: 64, align: 64, offset: 128)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !303, file: !304, line: 22, baseType: !56, size: 32, align: 32, offset: 192)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !303, file: !304, line: 23, baseType: !64, size: 64, align: 64, offset: 256)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !31, file: !18, line: 391, baseType: !312, size: 64, align: 64, offset: 1984)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64, align: 64)
!313 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !314, line: 11, size: 320, align: 64, elements: !315)
!314 = !DIFile(filename: "Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!315 = !{!316, !317, !322, !327, !328}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !313, file: !314, line: 12, baseType: !64, size: 64, align: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !313, file: !314, line: 13, baseType: !318, size: 64, align: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !314, line: 8, baseType: !319)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64, align: 64)
!320 = !DISubroutineType(types: !321)
!321 = !{!50, !50, !102}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !313, file: !314, line: 14, baseType: !323, size: 64, align: 64, offset: 128)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !314, line: 9, baseType: !324)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64, align: 64)
!325 = !DISubroutineType(types: !326)
!326 = !{!56, !50, !50, !102}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !313, file: !314, line: 15, baseType: !64, size: 64, align: 64, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !313, file: !314, line: 16, baseType: !102, size: 64, align: 64, offset: 256)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !31, file: !18, line: 392, baseType: !30, size: 64, align: 64, offset: 2048)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !31, file: !18, line: 393, baseType: !50, size: 64, align: 64, offset: 2112)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !31, file: !18, line: 394, baseType: !332, size: 64, align: 64, offset: 2176)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !18, line: 325, baseType: !147)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !31, file: !18, line: 395, baseType: !334, size: 64, align: 64, offset: 2240)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !18, line: 326, baseType: !223)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !31, file: !18, line: 396, baseType: !22, size: 64, align: 64, offset: 2304)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !31, file: !18, line: 397, baseType: !337, size: 64, align: 64, offset: 2368)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !18, line: 327, baseType: !223)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !31, file: !18, line: 398, baseType: !339, size: 64, align: 64, offset: 2432)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !18, line: 329, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64, align: 64)
!341 = !DISubroutineType(types: !342)
!342 = !{!50, !30, !22}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !31, file: !18, line: 399, baseType: !344, size: 64, align: 64, offset: 2496)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !18, line: 328, baseType: !345)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64, align: 64)
!346 = !DISubroutineType(types: !347)
!347 = !{!50, !30, !50, !50}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !31, file: !18, line: 400, baseType: !349, size: 64, align: 64, offset: 2560)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !18, line: 307, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64, align: 64)
!351 = !DISubroutineType(types: !352)
!352 = !{null, !102}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !31, file: !18, line: 401, baseType: !155, size: 64, align: 64, offset: 2624)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !31, file: !18, line: 402, baseType: !50, size: 64, align: 64, offset: 2688)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !31, file: !18, line: 403, baseType: !50, size: 64, align: 64, offset: 2752)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !31, file: !18, line: 404, baseType: !50, size: 64, align: 64, offset: 2816)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !31, file: !18, line: 405, baseType: !50, size: 64, align: 64, offset: 2880)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !31, file: !18, line: 406, baseType: !50, size: 64, align: 64, offset: 2944)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !31, file: !18, line: 407, baseType: !46, size: 64, align: 64, offset: 3008)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !31, file: !18, line: 410, baseType: !361, size: 32, align: 32, offset: 3072)
!361 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !31, file: !18, line: 412, baseType: !46, size: 64, align: 64, offset: 3136)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !14, file: !13, line: 17, baseType: !50, size: 64, align: 64, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !14, file: !13, line: 17, baseType: !50, size: 64, align: 64, offset: 192)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !14, file: !13, line: 17, baseType: !50, size: 64, align: 64, offset: 256)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !14, file: !13, line: 17, baseType: !50, size: 64, align: 64, offset: 320)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !14, file: !13, line: 17, baseType: !50, size: 64, align: 64, offset: 384)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !14, file: !13, line: 17, baseType: !42, size: 8, align: 8, offset: 448)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64, align: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyUnicodeErrorObject", file: !13, line: 44, baseType: !371)
!371 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 37, size: 832, align: 64, elements: !372)
!372 = !{!373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !371, file: !13, line: 38, baseType: !17, size: 128, align: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !371, file: !13, line: 38, baseType: !50, size: 64, align: 64, offset: 128)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !371, file: !13, line: 38, baseType: !50, size: 64, align: 64, offset: 192)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !371, file: !13, line: 38, baseType: !50, size: 64, align: 64, offset: 256)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !371, file: !13, line: 38, baseType: !50, size: 64, align: 64, offset: 320)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !371, file: !13, line: 38, baseType: !50, size: 64, align: 64, offset: 384)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !371, file: !13, line: 38, baseType: !42, size: 8, align: 8, offset: 448)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !371, file: !13, line: 39, baseType: !50, size: 64, align: 64, offset: 512)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !371, file: !13, line: 40, baseType: !50, size: 64, align: 64, offset: 576)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !371, file: !13, line: 41, baseType: !22, size: 64, align: 64, offset: 640)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !371, file: !13, line: 42, baseType: !22, size: 64, align: 64, offset: 704)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !371, file: !13, line: 43, baseType: !50, size: 64, align: 64, offset: 768)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64, align: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyASCIIObject", file: !4, line: 351, baseType: !387)
!387 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 217, size: 384, align: 64, elements: !388)
!388 = !{!389, !390, !391, !392, !400}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !387, file: !4, line: 291, baseType: !17, size: 128, align: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !387, file: !4, line: 292, baseType: !22, size: 64, align: 64, offset: 128)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !387, file: !4, line: 293, baseType: !231, size: 64, align: 64, offset: 192)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !387, file: !4, line: 349, baseType: !393, size: 32, align: 32, offset: 256)
!393 = !DICompositeType(tag: DW_TAG_structure_type, scope: !387, file: !4, line: 294, size: 32, align: 32, elements: !394)
!394 = !{!395, !396, !397, !398, !399}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "interned", scope: !393, file: !4, line: 303, baseType: !361, size: 2, align: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !393, file: !4, line: 331, baseType: !361, size: 3, align: 32, offset: 2)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !393, file: !4, line: 336, baseType: !361, size: 1, align: 32, offset: 5)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !393, file: !4, line: 340, baseType: !361, size: 1, align: 32, offset: 6)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !393, file: !4, line: 345, baseType: !361, size: 1, align: 32, offset: 7)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "wstr", scope: !387, file: !4, line: 350, baseType: !401, size: 64, align: 64, offset: 320)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64, align: 64)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !108, line: 90, baseType: !56)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64, align: 64)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64, align: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !18, line: 422, baseType: !31)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64, align: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !408, line: 33, baseType: !409)
!408 = !DIFile(filename: "Include/tupleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!409 = !DICompositeType(tag: DW_TAG_structure_type, file: !408, line: 25, size: 256, align: 64, elements: !410)
!410 = !{!411, !412}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !409, file: !408, line: 26, baseType: !34, size: 192, align: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !409, file: !408, line: 27, baseType: !413, size: 64, align: 64, offset: 192)
!413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 64, align: 64, elements: !94)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64, align: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGC_Head", file: !416, line: 253, baseType: !417)
!416 = !DIFile(filename: "Include/objimpl.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!417 = !DICompositeType(tag: DW_TAG_union_type, name: "_gc_head", file: !416, line: 246, size: 192, align: 64, elements: !418)
!418 = !{!419, !426}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !417, file: !416, line: 251, baseType: !420, size: 192, align: 64)
!420 = !DICompositeType(tag: DW_TAG_structure_type, scope: !417, file: !416, line: 247, size: 192, align: 64, elements: !421)
!421 = !{!422, !424, !425}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "gc_next", scope: !420, file: !416, line: 248, baseType: !423, size: 64, align: 64)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64, align: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "gc_prev", scope: !420, file: !416, line: 249, baseType: !423, size: 64, align: 64, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "gc_refs", scope: !420, file: !416, line: 250, baseType: !22, size: 64, align: 64, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !417, file: !416, line: 252, baseType: !427, size: 64, align: 64)
!427 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64, align: 64)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyOSErrorObject", file: !13, line: 61, baseType: !430)
!430 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 51, size: 832, align: 64, elements: !431)
!431 = !{!432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !430, file: !13, line: 52, baseType: !17, size: 128, align: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !430, file: !13, line: 52, baseType: !50, size: 64, align: 64, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !430, file: !13, line: 52, baseType: !50, size: 64, align: 64, offset: 192)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !430, file: !13, line: 52, baseType: !50, size: 64, align: 64, offset: 256)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !430, file: !13, line: 52, baseType: !50, size: 64, align: 64, offset: 320)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !430, file: !13, line: 52, baseType: !50, size: 64, align: 64, offset: 384)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !430, file: !13, line: 52, baseType: !42, size: 8, align: 8, offset: 448)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "myerrno", scope: !430, file: !13, line: 53, baseType: !50, size: 64, align: 64, offset: 512)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "strerror", scope: !430, file: !13, line: 54, baseType: !50, size: 64, align: 64, offset: 576)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !430, file: !13, line: 55, baseType: !50, size: 64, align: 64, offset: 640)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "filename2", scope: !430, file: !13, line: 56, baseType: !50, size: 64, align: 64, offset: 704)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !430, file: !13, line: 60, baseType: !22, size: 64, align: 64, offset: 768)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64, align: 64)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCompactUnicodeObject", file: !4, line: 363, baseType: !446)
!446 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 356, size: 576, align: 64, elements: !447)
!447 = !{!448, !449, !450, !451}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !446, file: !4, line: 357, baseType: !386, size: 384, align: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_length", scope: !446, file: !4, line: 358, baseType: !22, size: 64, align: 64, offset: 384)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !446, file: !4, line: 360, baseType: !64, size: 64, align: 64, offset: 448)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "wstr_length", scope: !446, file: !4, line: 361, baseType: !22, size: 64, align: 64, offset: 512)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64, align: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyUnicodeObject", file: !4, line: 376, baseType: !454)
!454 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 368, size: 640, align: 64, elements: !455)
!455 = !{!456, !457}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !454, file: !4, line: 369, baseType: !445, size: 576, align: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !454, file: !4, line: 375, baseType: !458, size: 64, align: 64, offset: 576)
!458 = !DICompositeType(tag: DW_TAG_union_type, scope: !454, file: !4, line: 370, size: 64, align: 64, elements: !459)
!459 = !{!460, !461, !465, !468}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "any", scope: !458, file: !4, line: 371, baseType: !102, size: 64, align: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "latin1", scope: !458, file: !4, line: 372, baseType: !462, size: 64, align: 64)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64, align: 64)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS1", file: !4, line: 134, baseType: !464)
!464 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "ucs2", scope: !458, file: !4, line: 373, baseType: !466, size: 64, align: 64)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64, align: 64)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS2", file: !4, line: 129, baseType: !89)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "ucs4", scope: !458, file: !4, line: 374, baseType: !469, size: 64, align: 64)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64, align: 64)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS4", file: !4, line: 121, baseType: !361)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64, align: 64)
!472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64, align: 64)
!474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !467)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64, align: 64)
!476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !470)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64, align: 64)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !479, line: 41, baseType: !480)
!479 = !DIFile(filename: "Include/bytesobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!480 = !DICompositeType(tag: DW_TAG_structure_type, file: !479, line: 31, size: 320, align: 64, elements: !481)
!481 = !{!482, !483, !484}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !480, file: !479, line: 32, baseType: !34, size: 192, align: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !480, file: !479, line: 33, baseType: !231, size: 64, align: 64, offset: 192)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !480, file: !479, line: 34, baseType: !93, size: 8, align: 8, offset: 256)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64, align: 64)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64, align: 64)
!487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!488 = !{!489, !496, !500, !506, !518, !524, !534, !537, !540, !543, !546, !549, !559, !567, !571, !577, !581, !585, !593, !601, !605, !609, !613, !617, !620, !623, !626, !632, !636, !640, !653, !663, !672, !680, !781, !797, !844, !857, !864, !871, !874, !901, !936, !939, !946, !950, !953, !964, !967, !971, !975, !979, !983, !1002, !1013, !1024, !1039, !1058, !1069, !1080, !1094, !1115, !1120, !1139, !1162, !1198, !1205, !1210, !1233, !1262, !1273, !1279, !1287, !1303, !1308, !1321, !1352, !1384, !1408, !1422, !1430, !1461, !1502, !1551, !1554, !1560, !1564, !1577, !1584, !1605, !1624, !1647, !1671, !1691, !1717, !1732, !1751, !1756, !1764, !1776, !1786, !1799}
!489 = !DISubprogram(name: "PyException_GetTraceback", scope: !490, file: !490, line: 312, type: !129, isLocal: false, isDefinition: true, scopeLine: 312, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyException_GetTraceback, variables: !491)
!490 = !DIFile(filename: "Objects/exceptions.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!491 = !{!492, !493, !494}
!492 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !489, file: !490, line: 312, type: !50)
!493 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base_self", scope: !489, file: !490, line: 313, type: !11)
!494 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !495, file: !490, line: 314, type: !50)
!495 = distinct !DILexicalBlock(scope: !489, file: !490, line: 314, column: 8)
!496 = !DISubprogram(name: "PyException_SetTraceback", scope: !490, file: !490, line: 320, type: !210, isLocal: false, isDefinition: true, scopeLine: 320, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*)* @PyException_SetTraceback, variables: !497)
!497 = !{!498, !499}
!498 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !496, file: !490, line: 320, type: !50)
!499 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tb", arg: 2, scope: !496, file: !490, line: 320, type: !50)
!500 = !DISubprogram(name: "PyException_GetCause", scope: !490, file: !490, line: 325, type: !129, isLocal: false, isDefinition: true, scopeLine: 325, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyException_GetCause, variables: !501)
!501 = !{!502, !503, !504}
!502 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !500, file: !490, line: 325, type: !50)
!503 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cause", scope: !500, file: !490, line: 326, type: !50)
!504 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !505, file: !490, line: 327, type: !50)
!505 = distinct !DILexicalBlock(scope: !500, file: !490, line: 327, column: 8)
!506 = !DISubprogram(name: "PyException_SetCause", scope: !490, file: !490, line: 333, type: !507, isLocal: false, isDefinition: true, scopeLine: 333, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*, %struct._object*)* @PyException_SetCause, variables: !509)
!507 = !DISubroutineType(types: !508)
!508 = !{null, !50, !50}
!509 = !{!510, !511, !512, !513, !515}
!510 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !506, file: !490, line: 333, type: !50)
!511 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cause", arg: 2, scope: !506, file: !490, line: 333, type: !50)
!512 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_cause", scope: !506, file: !490, line: 334, type: !50)
!513 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !514, file: !490, line: 337, type: !50)
!514 = distinct !DILexicalBlock(scope: !506, file: !490, line: 337, column: 8)
!515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !516, file: !490, line: 337, type: !50)
!516 = distinct !DILexicalBlock(scope: !517, file: !490, line: 337, column: 101)
!517 = distinct !DILexicalBlock(scope: !514, file: !490, line: 337, column: 67)
!518 = !DISubprogram(name: "PyException_GetContext", scope: !490, file: !490, line: 341, type: !129, isLocal: false, isDefinition: true, scopeLine: 341, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyException_GetContext, variables: !519)
!519 = !{!520, !521, !522}
!520 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !518, file: !490, line: 341, type: !50)
!521 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "context", scope: !518, file: !490, line: 342, type: !50)
!522 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !523, file: !490, line: 343, type: !50)
!523 = distinct !DILexicalBlock(scope: !518, file: !490, line: 343, column: 8)
!524 = !DISubprogram(name: "PyException_SetContext", scope: !490, file: !490, line: 349, type: !507, isLocal: false, isDefinition: true, scopeLine: 349, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*, %struct._object*)* @PyException_SetContext, variables: !525)
!525 = !{!526, !527, !528, !529, !531}
!526 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !524, file: !490, line: 349, type: !50)
!527 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !524, file: !490, line: 349, type: !50)
!528 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_context", scope: !524, file: !490, line: 350, type: !50)
!529 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !530, file: !490, line: 352, type: !50)
!530 = distinct !DILexicalBlock(scope: !524, file: !490, line: 352, column: 8)
!531 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !532, file: !490, line: 352, type: !50)
!532 = distinct !DILexicalBlock(scope: !533, file: !490, line: 352, column: 103)
!533 = distinct !DILexicalBlock(scope: !530, file: !490, line: 352, column: 69)
!534 = !DISubprogram(name: "PyUnicodeEncodeError_GetEncoding", scope: !490, file: !490, line: 1542, type: !129, isLocal: false, isDefinition: true, scopeLine: 1543, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeEncodeError_GetEncoding, variables: !535)
!535 = !{!536}
!536 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !534, file: !490, line: 1542, type: !50)
!537 = !DISubprogram(name: "PyUnicodeDecodeError_GetEncoding", scope: !490, file: !490, line: 1548, type: !129, isLocal: false, isDefinition: true, scopeLine: 1549, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeDecodeError_GetEncoding, variables: !538)
!538 = !{!539}
!539 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !537, file: !490, line: 1548, type: !50)
!540 = !DISubprogram(name: "PyUnicodeEncodeError_GetObject", scope: !490, file: !490, line: 1554, type: !129, isLocal: false, isDefinition: true, scopeLine: 1555, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeEncodeError_GetObject, variables: !541)
!541 = !{!542}
!542 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !540, file: !490, line: 1554, type: !50)
!543 = !DISubprogram(name: "PyUnicodeDecodeError_GetObject", scope: !490, file: !490, line: 1560, type: !129, isLocal: false, isDefinition: true, scopeLine: 1561, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeDecodeError_GetObject, variables: !544)
!544 = !{!545}
!545 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !543, file: !490, line: 1560, type: !50)
!546 = !DISubprogram(name: "PyUnicodeTranslateError_GetObject", scope: !490, file: !490, line: 1566, type: !129, isLocal: false, isDefinition: true, scopeLine: 1567, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeTranslateError_GetObject, variables: !547)
!547 = !{!548}
!548 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !546, file: !490, line: 1566, type: !50)
!549 = !DISubprogram(name: "PyUnicodeEncodeError_GetStart", scope: !490, file: !490, line: 1572, type: !550, isLocal: false, isDefinition: true, scopeLine: 1573, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64*)* @PyUnicodeEncodeError_GetStart, variables: !552)
!550 = !DISubroutineType(types: !551)
!551 = !{!56, !50, !260}
!552 = !{!553, !554, !555, !556, !557}
!553 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !549, file: !490, line: 1572, type: !50)
!554 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !549, file: !490, line: 1572, type: !260)
!555 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !549, file: !490, line: 1574, type: !22)
!556 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !549, file: !490, line: 1575, type: !50)
!557 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !558, file: !490, line: 1585, type: !50)
!558 = distinct !DILexicalBlock(scope: !549, file: !490, line: 1585, column: 8)
!559 = !DISubprogram(name: "PyUnicodeDecodeError_GetStart", scope: !490, file: !490, line: 1591, type: !550, isLocal: false, isDefinition: true, scopeLine: 1592, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64*)* @PyUnicodeDecodeError_GetStart, variables: !560)
!560 = !{!561, !562, !563, !564, !565}
!561 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !559, file: !490, line: 1591, type: !50)
!562 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !559, file: !490, line: 1591, type: !260)
!563 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !559, file: !490, line: 1593, type: !22)
!564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !559, file: !490, line: 1594, type: !50)
!565 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !566, file: !490, line: 1603, type: !50)
!566 = distinct !DILexicalBlock(scope: !559, file: !490, line: 1603, column: 8)
!567 = !DISubprogram(name: "PyUnicodeTranslateError_GetStart", scope: !490, file: !490, line: 1609, type: !550, isLocal: false, isDefinition: true, scopeLine: 1610, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64*)* @PyUnicodeTranslateError_GetStart, variables: !568)
!568 = !{!569, !570}
!569 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !567, file: !490, line: 1609, type: !50)
!570 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !567, file: !490, line: 1609, type: !260)
!571 = !DISubprogram(name: "PyUnicodeEncodeError_SetStart", scope: !490, file: !490, line: 1616, type: !572, isLocal: false, isDefinition: true, scopeLine: 1617, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @PyUnicodeEncodeError_SetStart, variables: !574)
!572 = !DISubroutineType(types: !573)
!573 = !{!56, !50, !22}
!574 = !{!575, !576}
!575 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !571, file: !490, line: 1616, type: !50)
!576 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !571, file: !490, line: 1616, type: !22)
!577 = !DISubprogram(name: "PyUnicodeDecodeError_SetStart", scope: !490, file: !490, line: 1624, type: !572, isLocal: false, isDefinition: true, scopeLine: 1625, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @PyUnicodeDecodeError_SetStart, variables: !578)
!578 = !{!579, !580}
!579 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !577, file: !490, line: 1624, type: !50)
!580 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !577, file: !490, line: 1624, type: !22)
!581 = !DISubprogram(name: "PyUnicodeTranslateError_SetStart", scope: !490, file: !490, line: 1632, type: !572, isLocal: false, isDefinition: true, scopeLine: 1633, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @PyUnicodeTranslateError_SetStart, variables: !582)
!582 = !{!583, !584}
!583 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !581, file: !490, line: 1632, type: !50)
!584 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !581, file: !490, line: 1632, type: !22)
!585 = !DISubprogram(name: "PyUnicodeEncodeError_GetEnd", scope: !490, file: !490, line: 1640, type: !550, isLocal: false, isDefinition: true, scopeLine: 1641, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64*)* @PyUnicodeEncodeError_GetEnd, variables: !586)
!586 = !{!587, !588, !589, !590, !591}
!587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !585, file: !490, line: 1640, type: !50)
!588 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !585, file: !490, line: 1640, type: !260)
!589 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !585, file: !490, line: 1642, type: !22)
!590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !585, file: !490, line: 1643, type: !50)
!591 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !592, file: !490, line: 1653, type: !50)
!592 = distinct !DILexicalBlock(scope: !585, file: !490, line: 1653, column: 8)
!593 = !DISubprogram(name: "PyUnicodeDecodeError_GetEnd", scope: !490, file: !490, line: 1659, type: !550, isLocal: false, isDefinition: true, scopeLine: 1660, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64*)* @PyUnicodeDecodeError_GetEnd, variables: !594)
!594 = !{!595, !596, !597, !598, !599}
!595 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !593, file: !490, line: 1659, type: !50)
!596 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !593, file: !490, line: 1659, type: !260)
!597 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !593, file: !490, line: 1661, type: !22)
!598 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !593, file: !490, line: 1662, type: !50)
!599 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !600, file: !490, line: 1671, type: !50)
!600 = distinct !DILexicalBlock(scope: !593, file: !490, line: 1671, column: 8)
!601 = !DISubprogram(name: "PyUnicodeTranslateError_GetEnd", scope: !490, file: !490, line: 1677, type: !550, isLocal: false, isDefinition: true, scopeLine: 1678, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64*)* @PyUnicodeTranslateError_GetEnd, variables: !602)
!602 = !{!603, !604}
!603 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !601, file: !490, line: 1677, type: !50)
!604 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !601, file: !490, line: 1677, type: !260)
!605 = !DISubprogram(name: "PyUnicodeEncodeError_SetEnd", scope: !490, file: !490, line: 1684, type: !572, isLocal: false, isDefinition: true, scopeLine: 1685, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @PyUnicodeEncodeError_SetEnd, variables: !606)
!606 = !{!607, !608}
!607 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !605, file: !490, line: 1684, type: !50)
!608 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !605, file: !490, line: 1684, type: !22)
!609 = !DISubprogram(name: "PyUnicodeDecodeError_SetEnd", scope: !490, file: !490, line: 1692, type: !572, isLocal: false, isDefinition: true, scopeLine: 1693, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @PyUnicodeDecodeError_SetEnd, variables: !610)
!610 = !{!611, !612}
!611 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !609, file: !490, line: 1692, type: !50)
!612 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !609, file: !490, line: 1692, type: !22)
!613 = !DISubprogram(name: "PyUnicodeTranslateError_SetEnd", scope: !490, file: !490, line: 1700, type: !572, isLocal: false, isDefinition: true, scopeLine: 1701, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @PyUnicodeTranslateError_SetEnd, variables: !614)
!614 = !{!615, !616}
!615 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !613, file: !490, line: 1700, type: !50)
!616 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !613, file: !490, line: 1700, type: !22)
!617 = !DISubprogram(name: "PyUnicodeEncodeError_GetReason", scope: !490, file: !490, line: 1707, type: !129, isLocal: false, isDefinition: true, scopeLine: 1708, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeEncodeError_GetReason, variables: !618)
!618 = !{!619}
!619 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !617, file: !490, line: 1707, type: !50)
!620 = !DISubprogram(name: "PyUnicodeDecodeError_GetReason", scope: !490, file: !490, line: 1714, type: !129, isLocal: false, isDefinition: true, scopeLine: 1715, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeDecodeError_GetReason, variables: !621)
!621 = !{!622}
!622 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !620, file: !490, line: 1714, type: !50)
!623 = !DISubprogram(name: "PyUnicodeTranslateError_GetReason", scope: !490, file: !490, line: 1721, type: !129, isLocal: false, isDefinition: true, scopeLine: 1722, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @PyUnicodeTranslateError_GetReason, variables: !624)
!624 = !{!625}
!625 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !623, file: !490, line: 1721, type: !50)
!626 = !DISubprogram(name: "PyUnicodeEncodeError_SetReason", scope: !490, file: !490, line: 1728, type: !627, isLocal: false, isDefinition: true, scopeLine: 1729, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @PyUnicodeEncodeError_SetReason, variables: !629)
!627 = !DISubroutineType(types: !628)
!628 = !{!56, !50, !40}
!629 = !{!630, !631}
!630 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !626, file: !490, line: 1728, type: !50)
!631 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 2, scope: !626, file: !490, line: 1728, type: !40)
!632 = !DISubprogram(name: "PyUnicodeDecodeError_SetReason", scope: !490, file: !490, line: 1736, type: !627, isLocal: false, isDefinition: true, scopeLine: 1737, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @PyUnicodeDecodeError_SetReason, variables: !633)
!633 = !{!634, !635}
!634 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !632, file: !490, line: 1736, type: !50)
!635 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 2, scope: !632, file: !490, line: 1736, type: !40)
!636 = !DISubprogram(name: "PyUnicodeTranslateError_SetReason", scope: !490, file: !490, line: 1744, type: !627, isLocal: false, isDefinition: true, scopeLine: 1745, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @PyUnicodeTranslateError_SetReason, variables: !637)
!637 = !{!638, !639}
!638 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 1, scope: !636, file: !490, line: 1744, type: !50)
!639 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 2, scope: !636, file: !490, line: 1744, type: !40)
!640 = !DISubprogram(name: "PyUnicodeEncodeError_Create", scope: !490, file: !490, line: 1898, type: !641, isLocal: false, isDefinition: true, scopeLine: 1901, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, i32*, i64, i64, i64, i8*)* @PyUnicodeEncodeError_Create, variables: !646)
!641 = !DISubroutineType(types: !642)
!642 = !{!50, !40, !643, !22, !22, !22, !40}
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64, align: 64)
!644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !645)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UNICODE", file: !4, line: 93, baseType: !402)
!646 = !{!647, !648, !649, !650, !651, !652}
!647 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encoding", arg: 1, scope: !640, file: !490, line: 1899, type: !40)
!648 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 2, scope: !640, file: !490, line: 1899, type: !643)
!649 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "length", arg: 3, scope: !640, file: !490, line: 1899, type: !22)
!650 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 4, scope: !640, file: !490, line: 1900, type: !22)
!651 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 5, scope: !640, file: !490, line: 1900, type: !22)
!652 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 6, scope: !640, file: !490, line: 1900, type: !40)
!653 = !DISubprogram(name: "PyUnicodeDecodeError_Create", scope: !490, file: !490, line: 2014, type: !654, isLocal: false, isDefinition: true, scopeLine: 2017, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, i8*, i64, i64, i64, i8*)* @PyUnicodeDecodeError_Create, variables: !656)
!654 = !DISubroutineType(types: !655)
!655 = !{!50, !40, !40, !22, !22, !22, !40}
!656 = !{!657, !658, !659, !660, !661, !662}
!657 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "encoding", arg: 1, scope: !653, file: !490, line: 2015, type: !40)
!658 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 2, scope: !653, file: !490, line: 2015, type: !40)
!659 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "length", arg: 3, scope: !653, file: !490, line: 2015, type: !22)
!660 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 4, scope: !653, file: !490, line: 2016, type: !22)
!661 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 5, scope: !653, file: !490, line: 2016, type: !22)
!662 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 6, scope: !653, file: !490, line: 2016, type: !40)
!663 = !DISubprogram(name: "PyUnicodeTranslateError_Create", scope: !490, file: !490, line: 2114, type: !664, isLocal: false, isDefinition: true, scopeLine: 2117, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32*, i64, i64, i64, i8*)* @PyUnicodeTranslateError_Create, variables: !666)
!664 = !DISubroutineType(types: !665)
!665 = !{!50, !643, !22, !22, !22, !40}
!666 = !{!667, !668, !669, !670, !671}
!667 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 1, scope: !663, file: !490, line: 2115, type: !643)
!668 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "length", arg: 2, scope: !663, file: !490, line: 2115, type: !22)
!669 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 3, scope: !663, file: !490, line: 2116, type: !22)
!670 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 4, scope: !663, file: !490, line: 2116, type: !22)
!671 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 5, scope: !663, file: !490, line: 2116, type: !40)
!672 = !DISubprogram(name: "_PyUnicodeTranslateError_Create", scope: !490, file: !490, line: 2123, type: !673, isLocal: false, isDefinition: true, scopeLine: 2126, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i64, i64, i8*)* @_PyUnicodeTranslateError_Create, variables: !675)
!673 = !DISubroutineType(types: !674)
!674 = !{!50, !50, !22, !22, !40}
!675 = !{!676, !677, !678, !679}
!676 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 1, scope: !672, file: !490, line: 2124, type: !50)
!677 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !672, file: !490, line: 2125, type: !22)
!678 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !672, file: !490, line: 2125, type: !22)
!679 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reason", arg: 4, scope: !672, file: !490, line: 2125, type: !40)
!680 = !DISubprogram(name: "_PyExc_Init", scope: !490, file: !490, line: 2450, type: !48, isLocal: false, isDefinition: true, scopeLine: 2451, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*)* @_PyExc_Init, variables: !681)
!681 = !{!682, !683, !684, !686, !689, !691, !694, !696, !698, !700, !702, !704, !706, !708, !710, !712, !714, !716, !718, !720, !722, !724, !726, !728, !730, !732, !734, !736, !738, !740, !742, !744, !746, !748, !750, !752, !754, !756, !758, !760, !762, !764, !766, !768, !770, !775, !776, !777, !779}
!682 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bltinmod", arg: 1, scope: !680, file: !490, line: 2450, type: !50)
!683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bdict", scope: !680, file: !490, line: 2452, type: !50)
!684 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !685, file: !490, line: 2533, type: !50)
!685 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2533, column: 55)
!686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !687, file: !490, line: 2533, type: !50)
!687 = distinct !DILexicalBlock(scope: !688, file: !490, line: 2533, column: 161)
!688 = distinct !DILexicalBlock(scope: !685, file: !490, line: 2533, column: 127)
!689 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !690, file: !490, line: 2534, type: !50)
!690 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2534, column: 55)
!691 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !692, file: !490, line: 2534, type: !50)
!692 = distinct !DILexicalBlock(scope: !693, file: !490, line: 2534, column: 152)
!693 = distinct !DILexicalBlock(scope: !690, file: !490, line: 2534, column: 118)
!694 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !695, file: !490, line: 2587, type: !50)
!695 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2587, column: 5)
!696 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !697, file: !490, line: 2587, type: !50)
!697 = distinct !DILexicalBlock(scope: !695, file: !490, line: 2587, column: 177)
!698 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !699, file: !490, line: 2588, type: !50)
!699 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2588, column: 5)
!700 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !701, file: !490, line: 2588, type: !50)
!701 = distinct !DILexicalBlock(scope: !699, file: !490, line: 2588, column: 178)
!702 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !703, file: !490, line: 2589, type: !50)
!703 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2589, column: 5)
!704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !705, file: !490, line: 2589, type: !50)
!705 = distinct !DILexicalBlock(scope: !703, file: !490, line: 2589, column: 178)
!706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !707, file: !490, line: 2590, type: !50)
!707 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2590, column: 5)
!708 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !709, file: !490, line: 2590, type: !50)
!709 = distinct !DILexicalBlock(scope: !707, file: !490, line: 2590, column: 177)
!710 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !711, file: !490, line: 2592, type: !50)
!711 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2592, column: 5)
!712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !713, file: !490, line: 2592, type: !50)
!713 = distinct !DILexicalBlock(scope: !711, file: !490, line: 2592, column: 177)
!714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !715, file: !490, line: 2593, type: !50)
!715 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2593, column: 5)
!716 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !717, file: !490, line: 2593, type: !50)
!717 = distinct !DILexicalBlock(scope: !715, file: !490, line: 2593, column: 178)
!718 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !719, file: !490, line: 2595, type: !50)
!719 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2595, column: 5)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !721, file: !490, line: 2595, type: !50)
!721 = distinct !DILexicalBlock(scope: !719, file: !490, line: 2595, column: 179)
!722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !723, file: !490, line: 2597, type: !50)
!723 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2597, column: 5)
!724 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !725, file: !490, line: 2597, type: !50)
!725 = distinct !DILexicalBlock(scope: !723, file: !490, line: 2597, column: 185)
!726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !727, file: !490, line: 2599, type: !50)
!727 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2599, column: 5)
!728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !729, file: !490, line: 2599, type: !50)
!729 = distinct !DILexicalBlock(scope: !727, file: !490, line: 2599, column: 185)
!730 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !731, file: !490, line: 2601, type: !50)
!731 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2601, column: 5)
!732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !733, file: !490, line: 2601, type: !50)
!733 = distinct !DILexicalBlock(scope: !731, file: !490, line: 2601, column: 183)
!734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !735, file: !490, line: 2603, type: !50)
!735 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2603, column: 5)
!736 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !737, file: !490, line: 2603, type: !50)
!737 = distinct !DILexicalBlock(scope: !735, file: !490, line: 2603, column: 177)
!738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !739, file: !490, line: 2605, type: !50)
!739 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2605, column: 5)
!740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !741, file: !490, line: 2605, type: !50)
!741 = distinct !DILexicalBlock(scope: !739, file: !490, line: 2605, column: 178)
!742 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !743, file: !490, line: 2607, type: !50)
!743 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2607, column: 5)
!744 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !745, file: !490, line: 2607, type: !50)
!745 = distinct !DILexicalBlock(scope: !743, file: !490, line: 2607, column: 179)
!746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !747, file: !490, line: 2609, type: !50)
!747 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2609, column: 5)
!748 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !749, file: !490, line: 2609, type: !50)
!749 = distinct !DILexicalBlock(scope: !747, file: !490, line: 2609, column: 180)
!750 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !751, file: !490, line: 2611, type: !50)
!751 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2611, column: 5)
!752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !753, file: !490, line: 2611, type: !50)
!753 = distinct !DILexicalBlock(scope: !751, file: !490, line: 2611, column: 177)
!754 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !755, file: !490, line: 2613, type: !50)
!755 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2613, column: 5)
!756 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !757, file: !490, line: 2613, type: !50)
!757 = distinct !DILexicalBlock(scope: !755, file: !490, line: 2613, column: 177)
!758 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !759, file: !490, line: 2614, type: !50)
!759 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2614, column: 5)
!760 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !761, file: !490, line: 2614, type: !50)
!761 = distinct !DILexicalBlock(scope: !759, file: !490, line: 2614, column: 176)
!762 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !763, file: !490, line: 2616, type: !50)
!763 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2616, column: 5)
!764 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !765, file: !490, line: 2616, type: !50)
!765 = distinct !DILexicalBlock(scope: !763, file: !490, line: 2616, column: 179)
!766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_code", scope: !767, file: !490, line: 2618, type: !50)
!767 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2618, column: 5)
!768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !769, file: !490, line: 2618, type: !50)
!769 = distinct !DILexicalBlock(scope: !767, file: !490, line: 2618, column: 175)
!770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err_inst", scope: !771, file: !490, line: 2628, type: !11)
!771 = distinct !DILexicalBlock(scope: !772, file: !490, line: 2627, column: 14)
!772 = distinct !DILexicalBlock(scope: !773, file: !490, line: 2624, column: 13)
!773 = distinct !DILexicalBlock(scope: !774, file: !490, line: 2622, column: 36)
!774 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2622, column: 9)
!775 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args_tuple", scope: !771, file: !490, line: 2630, type: !50)
!776 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exc_message", scope: !771, file: !490, line: 2631, type: !50)
!777 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !778, file: !490, line: 2640, type: !50)
!778 = distinct !DILexicalBlock(scope: !771, file: !490, line: 2640, column: 16)
!779 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !780, file: !490, line: 2643, type: !50)
!780 = distinct !DILexicalBlock(scope: !771, file: !490, line: 2643, column: 16)
!781 = !DISubprogram(name: "_PyExc_Fini", scope: !490, file: !490, line: 2649, type: !782, isLocal: false, isDefinition: true, scopeLine: 2650, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @_PyExc_Fini, variables: !784)
!782 = !DISubroutineType(types: !783)
!783 = !{null}
!784 = !{!785, !787, !791, !793}
!785 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !786, file: !490, line: 2651, type: !50)
!786 = distinct !DILexicalBlock(scope: !781, file: !490, line: 2651, column: 8)
!787 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !788, file: !490, line: 2651, type: !50)
!788 = distinct !DILexicalBlock(scope: !789, file: !490, line: 2651, column: 143)
!789 = distinct !DILexicalBlock(scope: !790, file: !490, line: 2651, column: 97)
!790 = distinct !DILexicalBlock(scope: !786, file: !490, line: 2651, column: 74)
!791 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !792, file: !490, line: 2653, type: !50)
!792 = distinct !DILexicalBlock(scope: !781, file: !490, line: 2653, column: 8)
!793 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !794, file: !490, line: 2653, type: !50)
!794 = distinct !DILexicalBlock(scope: !795, file: !490, line: 2653, column: 111)
!795 = distinct !DILexicalBlock(scope: !796, file: !490, line: 2653, column: 81)
!796 = distinct !DILexicalBlock(scope: !792, file: !490, line: 2653, column: 58)
!797 = !DISubprogram(name: "_PyErr_TrySetFromCause", scope: !490, file: !490, line: 2685, type: !798, isLocal: false, isDefinition: true, scopeLine: 2686, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, ...)* @_PyErr_TrySetFromCause, variables: !800)
!798 = !DISubroutineType(types: !799)
!799 = !{!50, !40, null}
!800 = !{!801, !802, !803, !804, !805, !806, !807, !809, !810, !811, !812, !813, !814, !815, !816, !829, !830, !834, !838, !840, !842}
!801 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "format", arg: 1, scope: !797, file: !490, line: 2685, type: !40)
!802 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "msg_prefix", scope: !797, file: !490, line: 2687, type: !50)
!803 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exc", scope: !797, file: !490, line: 2688, type: !50)
!804 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !797, file: !490, line: 2688, type: !50)
!805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tb", scope: !797, file: !490, line: 2688, type: !50)
!806 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "caught_type", scope: !797, file: !490, line: 2689, type: !404)
!807 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dictptr", scope: !797, file: !490, line: 2690, type: !808)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64, align: 64)
!809 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "instance_args", scope: !797, file: !490, line: 2691, type: !50)
!810 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num_args", scope: !797, file: !490, line: 2692, type: !22)
!811 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "caught_type_size", scope: !797, file: !490, line: 2692, type: !22)
!812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base_exc_size", scope: !797, file: !490, line: 2692, type: !22)
!813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_exc", scope: !797, file: !490, line: 2693, type: !50)
!814 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_val", scope: !797, file: !490, line: 2693, type: !50)
!815 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_tb", scope: !797, file: !490, line: 2693, type: !50)
!816 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vargs", scope: !797, file: !490, line: 2694, type: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !25, line: 79, baseType: !818)
!818 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !819, line: 50, baseType: !820)
!819 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stdarg.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1, line: 2694, baseType: !821)
!821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !822, size: 192, align: 64, elements: !94)
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "__va_list_tag", file: !1, line: 2694, baseType: !823)
!823 = !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, line: 2694, size: 192, align: 64, elements: !824)
!824 = !{!825, !826, !827, !828}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !823, file: !1, line: 2694, baseType: !361, size: 32, align: 32)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !823, file: !1, line: 2694, baseType: !361, size: 32, align: 32, offset: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !823, file: !1, line: 2694, baseType: !102, size: 64, align: 64, offset: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !823, file: !1, line: 2694, baseType: !102, size: 64, align: 64, offset: 128)
!829 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "same_basic_size", scope: !797, file: !490, line: 2695, type: !56)
!830 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !831, file: !490, line: 2760, type: !50)
!831 = distinct !DILexicalBlock(scope: !832, file: !490, line: 2760, column: 12)
!832 = distinct !DILexicalBlock(scope: !833, file: !490, line: 2758, column: 27)
!833 = distinct !DILexicalBlock(scope: !797, file: !490, line: 2758, column: 9)
!834 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !835, file: !490, line: 2771, type: !50)
!835 = distinct !DILexicalBlock(scope: !836, file: !490, line: 2771, column: 12)
!836 = distinct !DILexicalBlock(scope: !837, file: !490, line: 2770, column: 35)
!837 = distinct !DILexicalBlock(scope: !797, file: !490, line: 2770, column: 9)
!838 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !839, file: !490, line: 2772, type: !50)
!839 = distinct !DILexicalBlock(scope: !836, file: !490, line: 2772, column: 12)
!840 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !841, file: !490, line: 2778, type: !50)
!841 = distinct !DILexicalBlock(scope: !797, file: !490, line: 2778, column: 8)
!842 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !843, file: !490, line: 2779, type: !50)
!843 = distinct !DILexicalBlock(scope: !797, file: !490, line: 2779, column: 8)
!844 = !DISubprogram(name: "BaseException_set_tb", scope: !490, file: !490, line: 226, type: !845, isLocal: true, isDefinition: true, scopeLine: 227, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyBaseExceptionObject*, %struct._object*)* @BaseException_set_tb, variables: !847)
!845 = !DISubroutineType(types: !846)
!846 = !{!56, !11, !50}
!847 = !{!848, !849, !850, !852, !854}
!848 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !844, file: !490, line: 226, type: !11)
!849 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tb", arg: 2, scope: !844, file: !490, line: 226, type: !50)
!850 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !851, file: !490, line: 238, type: !50)
!851 = distinct !DILexicalBlock(scope: !844, file: !490, line: 238, column: 8)
!852 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !853, file: !490, line: 239, type: !50)
!853 = distinct !DILexicalBlock(scope: !844, file: !490, line: 239, column: 8)
!854 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !855, file: !490, line: 239, type: !50)
!855 = distinct !DILexicalBlock(scope: !856, file: !490, line: 239, column: 107)
!856 = distinct !DILexicalBlock(scope: !853, file: !490, line: 239, column: 73)
!857 = !DISubprogram(name: "BaseException_dealloc", scope: !490, file: !490, line: 87, type: !858, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyBaseExceptionObject*)* @BaseException_dealloc, variables: !860)
!858 = !DISubroutineType(types: !859)
!859 = !{null, !11}
!860 = !{!861, !862}
!861 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !857, file: !490, line: 87, type: !11)
!862 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !863, file: !490, line: 89, type: !414)
!863 = distinct !DILexicalBlock(scope: !857, file: !490, line: 89, column: 8)
!864 = !DISubprogram(name: "BaseException_repr", scope: !490, file: !490, line: 119, type: !865, isLocal: true, isDefinition: true, scopeLine: 120, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_repr, variables: !867)
!865 = !DISubroutineType(types: !866)
!866 = !{!50, !11}
!867 = !{!868, !869, !870}
!868 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !864, file: !490, line: 119, type: !11)
!869 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !864, file: !490, line: 121, type: !40)
!870 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dot", scope: !864, file: !490, line: 122, type: !40)
!871 = !DISubprogram(name: "BaseException_str", scope: !490, file: !490, line: 106, type: !865, isLocal: true, isDefinition: true, scopeLine: 107, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_str, variables: !872)
!872 = !{!873}
!873 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !871, file: !490, line: 106, type: !11)
!874 = !DISubprogram(name: "BaseException_traverse", scope: !490, file: !490, line: 95, type: !875, isLocal: true, isDefinition: true, scopeLine: 96, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyBaseExceptionObject*, i32 (%struct._object*, i8*)*, i8*)* @BaseException_traverse, variables: !877)
!875 = !DISubroutineType(types: !876)
!876 = !{!56, !11, !276, !102}
!877 = !{!878, !879, !880, !881, !885, !889, !893, !897}
!878 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !874, file: !490, line: 95, type: !11)
!879 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !874, file: !490, line: 95, type: !276)
!880 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !874, file: !490, line: 95, type: !102)
!881 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !882, file: !490, line: 97, type: !56)
!882 = distinct !DILexicalBlock(scope: !883, file: !490, line: 97, column: 26)
!883 = distinct !DILexicalBlock(scope: !884, file: !490, line: 97, column: 14)
!884 = distinct !DILexicalBlock(scope: !874, file: !490, line: 97, column: 8)
!885 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !886, file: !490, line: 98, type: !56)
!886 = distinct !DILexicalBlock(scope: !887, file: !490, line: 98, column: 26)
!887 = distinct !DILexicalBlock(scope: !888, file: !490, line: 98, column: 14)
!888 = distinct !DILexicalBlock(scope: !874, file: !490, line: 98, column: 8)
!889 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !890, file: !490, line: 99, type: !56)
!890 = distinct !DILexicalBlock(scope: !891, file: !490, line: 99, column: 31)
!891 = distinct !DILexicalBlock(scope: !892, file: !490, line: 99, column: 14)
!892 = distinct !DILexicalBlock(scope: !874, file: !490, line: 99, column: 8)
!893 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !894, file: !490, line: 100, type: !56)
!894 = distinct !DILexicalBlock(scope: !895, file: !490, line: 100, column: 27)
!895 = distinct !DILexicalBlock(scope: !896, file: !490, line: 100, column: 14)
!896 = distinct !DILexicalBlock(scope: !874, file: !490, line: 100, column: 8)
!897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !898, file: !490, line: 101, type: !56)
!898 = distinct !DILexicalBlock(scope: !899, file: !490, line: 101, column: 29)
!899 = distinct !DILexicalBlock(scope: !900, file: !490, line: 101, column: 14)
!900 = distinct !DILexicalBlock(scope: !874, file: !490, line: 101, column: 8)
!901 = !DISubprogram(name: "BaseException_clear", scope: !490, file: !490, line: 76, type: !902, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyBaseExceptionObject*)* @BaseException_clear, variables: !904)
!902 = !DISubroutineType(types: !903)
!903 = !{!56, !11}
!904 = !{!905, !906, !908, !912, !914, !918, !920, !924, !926, !930, !932}
!905 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !901, file: !490, line: 76, type: !11)
!906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !907, file: !490, line: 78, type: !50)
!907 = distinct !DILexicalBlock(scope: !901, file: !490, line: 78, column: 8)
!908 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !909, file: !490, line: 78, type: !50)
!909 = distinct !DILexicalBlock(scope: !910, file: !490, line: 78, column: 115)
!910 = distinct !DILexicalBlock(scope: !911, file: !490, line: 78, column: 83)
!911 = distinct !DILexicalBlock(scope: !907, file: !490, line: 78, column: 60)
!912 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !913, file: !490, line: 79, type: !50)
!913 = distinct !DILexicalBlock(scope: !901, file: !490, line: 79, column: 8)
!914 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !915, file: !490, line: 79, type: !50)
!915 = distinct !DILexicalBlock(scope: !916, file: !490, line: 79, column: 115)
!916 = distinct !DILexicalBlock(scope: !917, file: !490, line: 79, column: 83)
!917 = distinct !DILexicalBlock(scope: !913, file: !490, line: 79, column: 60)
!918 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !919, file: !490, line: 80, type: !50)
!919 = distinct !DILexicalBlock(scope: !901, file: !490, line: 80, column: 8)
!920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !921, file: !490, line: 80, type: !50)
!921 = distinct !DILexicalBlock(scope: !922, file: !490, line: 80, column: 125)
!922 = distinct !DILexicalBlock(scope: !923, file: !490, line: 80, column: 88)
!923 = distinct !DILexicalBlock(scope: !919, file: !490, line: 80, column: 65)
!924 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !925, file: !490, line: 81, type: !50)
!925 = distinct !DILexicalBlock(scope: !901, file: !490, line: 81, column: 8)
!926 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !927, file: !490, line: 81, type: !50)
!927 = distinct !DILexicalBlock(scope: !928, file: !490, line: 81, column: 117)
!928 = distinct !DILexicalBlock(scope: !929, file: !490, line: 81, column: 84)
!929 = distinct !DILexicalBlock(scope: !925, file: !490, line: 81, column: 61)
!930 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !931, file: !490, line: 82, type: !50)
!931 = distinct !DILexicalBlock(scope: !901, file: !490, line: 82, column: 8)
!932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !933, file: !490, line: 82, type: !50)
!933 = distinct !DILexicalBlock(scope: !934, file: !490, line: 82, column: 121)
!934 = distinct !DILexicalBlock(scope: !935, file: !490, line: 82, column: 86)
!935 = distinct !DILexicalBlock(scope: !931, file: !490, line: 82, column: 63)
!936 = !DISubprogram(name: "BaseException_reduce", scope: !490, file: !490, line: 133, type: !865, isLocal: true, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_reduce, variables: !937)
!937 = !{!938}
!938 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !936, file: !490, line: 133, type: !11)
!939 = !DISubprogram(name: "BaseException_setstate", scope: !490, file: !490, line: 147, type: !139, isLocal: true, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @BaseException_setstate, variables: !940)
!940 = !{!941, !942, !943, !944, !945}
!941 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !939, file: !490, line: 147, type: !50)
!942 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !939, file: !490, line: 147, type: !50)
!943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d_key", scope: !939, file: !490, line: 149, type: !50)
!944 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d_value", scope: !939, file: !490, line: 149, type: !50)
!945 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !939, file: !490, line: 150, type: !22)
!946 = !DISubprogram(name: "BaseException_with_traceback", scope: !490, file: !490, line: 166, type: !139, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @BaseException_with_traceback, variables: !947)
!947 = !{!948, !949}
!948 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !946, file: !490, line: 166, type: !50)
!949 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tb", arg: 2, scope: !946, file: !490, line: 166, type: !50)
!950 = !DISubprogram(name: "BaseException_get_args", scope: !490, file: !490, line: 188, type: !865, isLocal: true, isDefinition: true, scopeLine: 189, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_get_args, variables: !951)
!951 = !{!952}
!952 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !950, file: !490, line: 188, type: !11)
!953 = !DISubprogram(name: "BaseException_set_args", scope: !490, file: !490, line: 199, type: !845, isLocal: true, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyBaseExceptionObject*, %struct._object*)* @BaseException_set_args, variables: !954)
!954 = !{!955, !956, !957, !958, !960}
!955 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !953, file: !490, line: 199, type: !11)
!956 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 2, scope: !953, file: !490, line: 199, type: !50)
!957 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !953, file: !490, line: 201, type: !50)
!958 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !959, file: !490, line: 209, type: !50)
!959 = distinct !DILexicalBlock(scope: !953, file: !490, line: 209, column: 8)
!960 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !961, file: !490, line: 209, type: !50)
!961 = distinct !DILexicalBlock(scope: !962, file: !490, line: 209, column: 115)
!962 = distinct !DILexicalBlock(scope: !963, file: !490, line: 209, column: 83)
!963 = distinct !DILexicalBlock(scope: !959, file: !490, line: 209, column: 60)
!964 = !DISubprogram(name: "BaseException_get_tb", scope: !490, file: !490, line: 215, type: !865, isLocal: true, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyBaseExceptionObject*)* @BaseException_get_tb, variables: !965)
!965 = !{!966}
!966 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !964, file: !490, line: 215, type: !11)
!967 = !DISubprogram(name: "BaseException_get_context", scope: !490, file: !490, line: 245, type: !129, isLocal: true, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @BaseException_get_context, variables: !968)
!968 = !{!969, !970}
!969 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !967, file: !490, line: 245, type: !50)
!970 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !967, file: !490, line: 246, type: !50)
!971 = !DISubprogram(name: "BaseException_set_context", scope: !490, file: !490, line: 253, type: !210, isLocal: true, isDefinition: true, scopeLine: 253, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*)* @BaseException_set_context, variables: !972)
!972 = !{!973, !974}
!973 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !971, file: !490, line: 253, type: !50)
!974 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !971, file: !490, line: 253, type: !50)
!975 = !DISubprogram(name: "BaseException_get_cause", scope: !490, file: !490, line: 272, type: !129, isLocal: true, isDefinition: true, scopeLine: 272, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @BaseException_get_cause, variables: !976)
!976 = !{!977, !978}
!977 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !975, file: !490, line: 272, type: !50)
!978 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !975, file: !490, line: 273, type: !50)
!979 = !DISubprogram(name: "BaseException_set_cause", scope: !490, file: !490, line: 280, type: !210, isLocal: true, isDefinition: true, scopeLine: 280, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*)* @BaseException_set_cause, variables: !980)
!980 = !{!981, !982}
!981 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !979, file: !490, line: 280, type: !50)
!982 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !979, file: !490, line: 280, type: !50)
!983 = !DISubprogram(name: "StopIteration_dealloc", scope: !490, file: !490, line: 511, type: !984, isLocal: true, isDefinition: true, scopeLine: 512, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyStopIterationObject*)* @StopIteration_dealloc, variables: !998)
!984 = !DISubroutineType(types: !985)
!985 = !{null, !986}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64, align: 64)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyStopIterationObject", file: !13, line: 66, baseType: !988)
!988 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 63, size: 576, align: 64, elements: !989)
!989 = !{!990, !991, !992, !993, !994, !995, !996, !997}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !988, file: !13, line: 64, baseType: !17, size: 128, align: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !988, file: !13, line: 64, baseType: !50, size: 64, align: 64, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !988, file: !13, line: 64, baseType: !50, size: 64, align: 64, offset: 192)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !988, file: !13, line: 64, baseType: !50, size: 64, align: 64, offset: 256)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !988, file: !13, line: 64, baseType: !50, size: 64, align: 64, offset: 320)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !988, file: !13, line: 64, baseType: !50, size: 64, align: 64, offset: 384)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !988, file: !13, line: 64, baseType: !42, size: 8, align: 8, offset: 448)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !988, file: !13, line: 65, baseType: !50, size: 64, align: 64, offset: 512)
!998 = !{!999, !1000}
!999 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !983, file: !490, line: 511, type: !986)
!1000 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1001, file: !490, line: 513, type: !414)
!1001 = distinct !DILexicalBlock(scope: !983, file: !490, line: 513, column: 8)
!1002 = !DISubprogram(name: "StopIteration_traverse", scope: !490, file: !490, line: 519, type: !1003, isLocal: true, isDefinition: true, scopeLine: 520, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyStopIterationObject*, i32 (%struct._object*, i8*)*, i8*)* @StopIteration_traverse, variables: !1005)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!56, !986, !276, !102}
!1005 = !{!1006, !1007, !1008, !1009}
!1006 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1002, file: !490, line: 519, type: !986)
!1007 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1002, file: !490, line: 519, type: !276)
!1008 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1002, file: !490, line: 519, type: !102)
!1009 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1010, file: !490, line: 521, type: !56)
!1010 = distinct !DILexicalBlock(scope: !1011, file: !490, line: 521, column: 27)
!1011 = distinct !DILexicalBlock(scope: !1012, file: !490, line: 521, column: 14)
!1012 = distinct !DILexicalBlock(scope: !1002, file: !490, line: 521, column: 8)
!1013 = !DISubprogram(name: "StopIteration_clear", scope: !490, file: !490, line: 504, type: !1014, isLocal: true, isDefinition: true, scopeLine: 505, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyStopIterationObject*)* @StopIteration_clear, variables: !1016)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!56, !986}
!1016 = !{!1017, !1018, !1020}
!1017 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1013, file: !490, line: 504, type: !986)
!1018 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1019, file: !490, line: 506, type: !50)
!1019 = distinct !DILexicalBlock(scope: !1013, file: !490, line: 506, column: 8)
!1020 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1021, file: !490, line: 506, type: !50)
!1021 = distinct !DILexicalBlock(scope: !1022, file: !490, line: 506, column: 117)
!1022 = distinct !DILexicalBlock(scope: !1023, file: !490, line: 506, column: 84)
!1023 = distinct !DILexicalBlock(scope: !1019, file: !490, line: 506, column: 61)
!1024 = !DISubprogram(name: "StopIteration_init", scope: !490, file: !490, line: 486, type: !1025, isLocal: true, isDefinition: true, scopeLine: 487, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyStopIterationObject*, %struct._object*, %struct._object*)* @StopIteration_init, variables: !1027)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!56, !986, !50, !50}
!1027 = !{!1028, !1029, !1030, !1031, !1032, !1033, !1035}
!1028 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1024, file: !490, line: 486, type: !986)
!1029 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1024, file: !490, line: 486, type: !50)
!1030 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1024, file: !490, line: 486, type: !50)
!1031 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1024, file: !490, line: 488, type: !22)
!1032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1024, file: !490, line: 489, type: !50)
!1033 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1034, file: !490, line: 493, type: !50)
!1034 = distinct !DILexicalBlock(scope: !1024, file: !490, line: 493, column: 8)
!1035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1036, file: !490, line: 493, type: !50)
!1036 = distinct !DILexicalBlock(scope: !1037, file: !490, line: 493, column: 117)
!1037 = distinct !DILexicalBlock(scope: !1038, file: !490, line: 493, column: 84)
!1038 = distinct !DILexicalBlock(scope: !1034, file: !490, line: 493, column: 61)
!1039 = !DISubprogram(name: "SystemExit_dealloc", scope: !490, file: !490, line: 576, type: !1040, isLocal: true, isDefinition: true, scopeLine: 577, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PySystemExitObject*)* @SystemExit_dealloc, variables: !1054)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{null, !1042}
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySystemExitObject", file: !13, line: 49, baseType: !1044)
!1044 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 46, size: 576, align: 64, elements: !1045)
!1045 = !{!1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1044, file: !13, line: 47, baseType: !17, size: 128, align: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !1044, file: !13, line: 47, baseType: !50, size: 64, align: 64, offset: 128)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1044, file: !13, line: 47, baseType: !50, size: 64, align: 64, offset: 192)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !1044, file: !13, line: 47, baseType: !50, size: 64, align: 64, offset: 256)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1044, file: !13, line: 47, baseType: !50, size: 64, align: 64, offset: 320)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !1044, file: !13, line: 47, baseType: !50, size: 64, align: 64, offset: 384)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !1044, file: !13, line: 47, baseType: !42, size: 8, align: 8, offset: 448)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1044, file: !13, line: 48, baseType: !50, size: 64, align: 64, offset: 512)
!1054 = !{!1055, !1056}
!1055 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1039, file: !490, line: 576, type: !1042)
!1056 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1057, file: !490, line: 578, type: !414)
!1057 = distinct !DILexicalBlock(scope: !1039, file: !490, line: 578, column: 8)
!1058 = !DISubprogram(name: "SystemExit_traverse", scope: !490, file: !490, line: 584, type: !1059, isLocal: true, isDefinition: true, scopeLine: 585, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySystemExitObject*, i32 (%struct._object*, i8*)*, i8*)* @SystemExit_traverse, variables: !1061)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!56, !1042, !276, !102}
!1061 = !{!1062, !1063, !1064, !1065}
!1062 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1058, file: !490, line: 584, type: !1042)
!1063 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1058, file: !490, line: 584, type: !276)
!1064 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1058, file: !490, line: 584, type: !102)
!1065 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1066, file: !490, line: 586, type: !56)
!1066 = distinct !DILexicalBlock(scope: !1067, file: !490, line: 586, column: 26)
!1067 = distinct !DILexicalBlock(scope: !1068, file: !490, line: 586, column: 14)
!1068 = distinct !DILexicalBlock(scope: !1058, file: !490, line: 586, column: 8)
!1069 = !DISubprogram(name: "SystemExit_clear", scope: !490, file: !490, line: 569, type: !1070, isLocal: true, isDefinition: true, scopeLine: 570, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySystemExitObject*)* @SystemExit_clear, variables: !1072)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!56, !1042}
!1072 = !{!1073, !1074, !1076}
!1073 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1069, file: !490, line: 569, type: !1042)
!1074 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1075, file: !490, line: 571, type: !50)
!1075 = distinct !DILexicalBlock(scope: !1069, file: !490, line: 571, column: 8)
!1076 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1077, file: !490, line: 571, type: !50)
!1077 = distinct !DILexicalBlock(scope: !1078, file: !490, line: 571, column: 115)
!1078 = distinct !DILexicalBlock(scope: !1079, file: !490, line: 571, column: 83)
!1079 = distinct !DILexicalBlock(scope: !1075, file: !490, line: 571, column: 60)
!1080 = !DISubprogram(name: "SystemExit_init", scope: !490, file: !490, line: 550, type: !1081, isLocal: true, isDefinition: true, scopeLine: 551, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySystemExitObject*, %struct._object*, %struct._object*)* @SystemExit_init, variables: !1083)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!56, !1042, !50, !50}
!1083 = !{!1084, !1085, !1086, !1087, !1088, !1090}
!1084 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1080, file: !490, line: 550, type: !1042)
!1085 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1080, file: !490, line: 550, type: !50)
!1086 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1080, file: !490, line: 550, type: !50)
!1087 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1080, file: !490, line: 552, type: !22)
!1088 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1089, file: !490, line: 559, type: !50)
!1089 = distinct !DILexicalBlock(scope: !1080, file: !490, line: 559, column: 8)
!1090 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1091, file: !490, line: 559, type: !50)
!1091 = distinct !DILexicalBlock(scope: !1092, file: !490, line: 559, column: 115)
!1092 = distinct !DILexicalBlock(scope: !1093, file: !490, line: 559, column: 83)
!1093 = distinct !DILexicalBlock(scope: !1089, file: !490, line: 559, column: 60)
!1094 = !DISubprogram(name: "ImportError_dealloc", scope: !490, file: !490, line: 660, type: !1095, isLocal: true, isDefinition: true, scopeLine: 661, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyImportErrorObject*)* @ImportError_dealloc, variables: !1111)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{null, !1097}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64, align: 64)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyImportErrorObject", file: !13, line: 35, baseType: !1099)
!1099 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 30, size: 704, align: 64, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1099, file: !13, line: 31, baseType: !17, size: 128, align: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !1099, file: !13, line: 31, baseType: !50, size: 64, align: 64, offset: 128)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1099, file: !13, line: 31, baseType: !50, size: 64, align: 64, offset: 192)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !1099, file: !13, line: 31, baseType: !50, size: 64, align: 64, offset: 256)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1099, file: !13, line: 31, baseType: !50, size: 64, align: 64, offset: 320)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !1099, file: !13, line: 31, baseType: !50, size: 64, align: 64, offset: 384)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !1099, file: !13, line: 31, baseType: !42, size: 8, align: 8, offset: 448)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !1099, file: !13, line: 32, baseType: !50, size: 64, align: 64, offset: 512)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1099, file: !13, line: 33, baseType: !50, size: 64, align: 64, offset: 576)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1099, file: !13, line: 34, baseType: !50, size: 64, align: 64, offset: 640)
!1111 = !{!1112, !1113}
!1112 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1094, file: !490, line: 660, type: !1097)
!1113 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1114, file: !490, line: 662, type: !414)
!1114 = distinct !DILexicalBlock(scope: !1094, file: !490, line: 662, column: 8)
!1115 = !DISubprogram(name: "ImportError_str", scope: !490, file: !490, line: 677, type: !1116, isLocal: true, isDefinition: true, scopeLine: 678, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyImportErrorObject*)* @ImportError_str, variables: !1118)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!50, !1097}
!1118 = !{!1119}
!1119 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1115, file: !490, line: 677, type: !1097)
!1120 = !DISubprogram(name: "ImportError_traverse", scope: !490, file: !490, line: 668, type: !1121, isLocal: true, isDefinition: true, scopeLine: 669, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyImportErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @ImportError_traverse, variables: !1123)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!56, !1097, !276, !102}
!1123 = !{!1124, !1125, !1126, !1127, !1131, !1135}
!1124 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1120, file: !490, line: 668, type: !1097)
!1125 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1120, file: !490, line: 668, type: !276)
!1126 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1120, file: !490, line: 668, type: !102)
!1127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1128, file: !490, line: 670, type: !56)
!1128 = distinct !DILexicalBlock(scope: !1129, file: !490, line: 670, column: 25)
!1129 = distinct !DILexicalBlock(scope: !1130, file: !490, line: 670, column: 14)
!1130 = distinct !DILexicalBlock(scope: !1120, file: !490, line: 670, column: 8)
!1131 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1132, file: !490, line: 671, type: !56)
!1132 = distinct !DILexicalBlock(scope: !1133, file: !490, line: 671, column: 26)
!1133 = distinct !DILexicalBlock(scope: !1134, file: !490, line: 671, column: 14)
!1134 = distinct !DILexicalBlock(scope: !1120, file: !490, line: 671, column: 8)
!1135 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1136, file: !490, line: 672, type: !56)
!1136 = distinct !DILexicalBlock(scope: !1137, file: !490, line: 672, column: 26)
!1137 = distinct !DILexicalBlock(scope: !1138, file: !490, line: 672, column: 14)
!1138 = distinct !DILexicalBlock(scope: !1120, file: !490, line: 672, column: 8)
!1139 = !DISubprogram(name: "ImportError_clear", scope: !490, file: !490, line: 651, type: !1140, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyImportErrorObject*)* @ImportError_clear, variables: !1142)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!56, !1097}
!1142 = !{!1143, !1144, !1146, !1150, !1152, !1156, !1158}
!1143 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1139, file: !490, line: 651, type: !1097)
!1144 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1145, file: !490, line: 653, type: !50)
!1145 = distinct !DILexicalBlock(scope: !1139, file: !490, line: 653, column: 8)
!1146 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1147, file: !490, line: 653, type: !50)
!1147 = distinct !DILexicalBlock(scope: !1148, file: !490, line: 653, column: 113)
!1148 = distinct !DILexicalBlock(scope: !1149, file: !490, line: 653, column: 82)
!1149 = distinct !DILexicalBlock(scope: !1145, file: !490, line: 653, column: 59)
!1150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1151, file: !490, line: 654, type: !50)
!1151 = distinct !DILexicalBlock(scope: !1139, file: !490, line: 654, column: 8)
!1152 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1153, file: !490, line: 654, type: !50)
!1153 = distinct !DILexicalBlock(scope: !1154, file: !490, line: 654, column: 115)
!1154 = distinct !DILexicalBlock(scope: !1155, file: !490, line: 654, column: 83)
!1155 = distinct !DILexicalBlock(scope: !1151, file: !490, line: 654, column: 60)
!1156 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1157, file: !490, line: 655, type: !50)
!1157 = distinct !DILexicalBlock(scope: !1139, file: !490, line: 655, column: 8)
!1158 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1159, file: !490, line: 655, type: !50)
!1159 = distinct !DILexicalBlock(scope: !1160, file: !490, line: 655, column: 115)
!1160 = distinct !DILexicalBlock(scope: !1161, file: !490, line: 655, column: 83)
!1161 = distinct !DILexicalBlock(scope: !1157, file: !490, line: 655, column: 60)
!1162 = !DISubprogram(name: "ImportError_init", scope: !490, file: !490, line: 612, type: !1163, isLocal: true, isDefinition: true, scopeLine: 613, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyImportErrorObject*, %struct._object*, %struct._object*)* @ImportError_init, variables: !1165)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!56, !1097, !50, !50}
!1165 = !{!1166, !1167, !1168, !1169, !1170, !1171, !1172, !1179, !1183, !1188, !1192, !1194}
!1166 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1162, file: !490, line: 612, type: !1097)
!1167 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1162, file: !490, line: 612, type: !50)
!1168 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1162, file: !490, line: 612, type: !50)
!1169 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "msg", scope: !1162, file: !490, line: 614, type: !50)
!1170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1162, file: !490, line: 615, type: !50)
!1171 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !1162, file: !490, line: 616, type: !50)
!1172 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1173, file: !490, line: 632, type: !50)
!1173 = distinct !DILexicalBlock(scope: !1174, file: !490, line: 632, column: 69)
!1174 = distinct !DILexicalBlock(scope: !1175, file: !490, line: 632, column: 64)
!1175 = distinct !DILexicalBlock(scope: !1176, file: !490, line: 632, column: 58)
!1176 = distinct !DILexicalBlock(scope: !1177, file: !490, line: 632, column: 9)
!1177 = distinct !DILexicalBlock(scope: !1178, file: !490, line: 631, column: 15)
!1178 = distinct !DILexicalBlock(scope: !1162, file: !490, line: 631, column: 9)
!1179 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1180, file: !490, line: 632, type: !50)
!1180 = distinct !DILexicalBlock(scope: !1181, file: !490, line: 632, column: 176)
!1181 = distinct !DILexicalBlock(scope: !1182, file: !490, line: 632, column: 144)
!1182 = distinct !DILexicalBlock(scope: !1173, file: !490, line: 632, column: 121)
!1183 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1184, file: !490, line: 633, type: !50)
!1184 = distinct !DILexicalBlock(scope: !1185, file: !490, line: 633, column: 69)
!1185 = distinct !DILexicalBlock(scope: !1186, file: !490, line: 633, column: 64)
!1186 = distinct !DILexicalBlock(scope: !1187, file: !490, line: 633, column: 58)
!1187 = distinct !DILexicalBlock(scope: !1177, file: !490, line: 633, column: 9)
!1188 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1189, file: !490, line: 633, type: !50)
!1189 = distinct !DILexicalBlock(scope: !1190, file: !490, line: 633, column: 176)
!1190 = distinct !DILexicalBlock(scope: !1191, file: !490, line: 633, column: 144)
!1191 = distinct !DILexicalBlock(scope: !1184, file: !490, line: 633, column: 121)
!1192 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1193, file: !490, line: 643, type: !50)
!1193 = distinct !DILexicalBlock(scope: !1162, file: !490, line: 643, column: 8)
!1194 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1195, file: !490, line: 643, type: !50)
!1195 = distinct !DILexicalBlock(scope: !1196, file: !490, line: 643, column: 113)
!1196 = distinct !DILexicalBlock(scope: !1197, file: !490, line: 643, column: 82)
!1197 = distinct !DILexicalBlock(scope: !1193, file: !490, line: 643, column: 59)
!1198 = !DISubprogram(name: "OSError_dealloc", scope: !490, file: !490, line: 1008, type: !1199, isLocal: true, isDefinition: true, scopeLine: 1009, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyOSErrorObject*)* @OSError_dealloc, variables: !1201)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{null, !428}
!1201 = !{!1202, !1203}
!1202 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1198, file: !490, line: 1008, type: !428)
!1203 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1204, file: !490, line: 1010, type: !414)
!1204 = distinct !DILexicalBlock(scope: !1198, file: !490, line: 1010, column: 8)
!1205 = !DISubprogram(name: "OSError_str", scope: !490, file: !490, line: 1030, type: !1206, isLocal: true, isDefinition: true, scopeLine: 1031, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyOSErrorObject*)* @OSError_str, variables: !1208)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!50, !428}
!1208 = !{!1209}
!1209 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1205, file: !490, line: 1030, type: !428)
!1210 = !DISubprogram(name: "OSError_traverse", scope: !490, file: !490, line: 1016, type: !1211, isLocal: true, isDefinition: true, scopeLine: 1018, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyOSErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @OSError_traverse, variables: !1213)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!56, !428, !276, !102}
!1213 = !{!1214, !1215, !1216, !1217, !1221, !1225, !1229}
!1214 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1210, file: !490, line: 1016, type: !428)
!1215 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1210, file: !490, line: 1016, type: !276)
!1216 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1210, file: !490, line: 1017, type: !102)
!1217 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1218, file: !490, line: 1019, type: !56)
!1218 = distinct !DILexicalBlock(scope: !1219, file: !490, line: 1019, column: 29)
!1219 = distinct !DILexicalBlock(scope: !1220, file: !490, line: 1019, column: 14)
!1220 = distinct !DILexicalBlock(scope: !1210, file: !490, line: 1019, column: 8)
!1221 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1222, file: !490, line: 1020, type: !56)
!1222 = distinct !DILexicalBlock(scope: !1223, file: !490, line: 1020, column: 30)
!1223 = distinct !DILexicalBlock(scope: !1224, file: !490, line: 1020, column: 14)
!1224 = distinct !DILexicalBlock(scope: !1210, file: !490, line: 1020, column: 8)
!1225 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1226, file: !490, line: 1021, type: !56)
!1226 = distinct !DILexicalBlock(scope: !1227, file: !490, line: 1021, column: 30)
!1227 = distinct !DILexicalBlock(scope: !1228, file: !490, line: 1021, column: 14)
!1228 = distinct !DILexicalBlock(scope: !1210, file: !490, line: 1021, column: 8)
!1229 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1230, file: !490, line: 1022, type: !56)
!1230 = distinct !DILexicalBlock(scope: !1231, file: !490, line: 1022, column: 31)
!1231 = distinct !DILexicalBlock(scope: !1232, file: !490, line: 1022, column: 14)
!1232 = distinct !DILexicalBlock(scope: !1210, file: !490, line: 1022, column: 8)
!1233 = !DISubprogram(name: "OSError_clear", scope: !490, file: !490, line: 995, type: !1234, isLocal: true, isDefinition: true, scopeLine: 996, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyOSErrorObject*)* @OSError_clear, variables: !1236)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!56, !428}
!1236 = !{!1237, !1238, !1240, !1244, !1246, !1250, !1252, !1256, !1258}
!1237 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1233, file: !490, line: 995, type: !428)
!1238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1239, file: !490, line: 997, type: !50)
!1239 = distinct !DILexicalBlock(scope: !1233, file: !490, line: 997, column: 8)
!1240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1241, file: !490, line: 997, type: !50)
!1241 = distinct !DILexicalBlock(scope: !1242, file: !490, line: 997, column: 121)
!1242 = distinct !DILexicalBlock(scope: !1243, file: !490, line: 997, column: 86)
!1243 = distinct !DILexicalBlock(scope: !1239, file: !490, line: 997, column: 63)
!1244 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1245, file: !490, line: 998, type: !50)
!1245 = distinct !DILexicalBlock(scope: !1233, file: !490, line: 998, column: 8)
!1246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1247, file: !490, line: 998, type: !50)
!1247 = distinct !DILexicalBlock(scope: !1248, file: !490, line: 998, column: 123)
!1248 = distinct !DILexicalBlock(scope: !1249, file: !490, line: 998, column: 87)
!1249 = distinct !DILexicalBlock(scope: !1245, file: !490, line: 998, column: 64)
!1250 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1251, file: !490, line: 999, type: !50)
!1251 = distinct !DILexicalBlock(scope: !1233, file: !490, line: 999, column: 8)
!1252 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1253, file: !490, line: 999, type: !50)
!1253 = distinct !DILexicalBlock(scope: !1254, file: !490, line: 999, column: 123)
!1254 = distinct !DILexicalBlock(scope: !1255, file: !490, line: 999, column: 87)
!1255 = distinct !DILexicalBlock(scope: !1251, file: !490, line: 999, column: 64)
!1256 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1257, file: !490, line: 1000, type: !50)
!1257 = distinct !DILexicalBlock(scope: !1233, file: !490, line: 1000, column: 8)
!1258 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1259, file: !490, line: 1000, type: !50)
!1259 = distinct !DILexicalBlock(scope: !1260, file: !490, line: 1000, column: 125)
!1260 = distinct !DILexicalBlock(scope: !1261, file: !490, line: 1000, column: 88)
!1261 = distinct !DILexicalBlock(scope: !1257, file: !490, line: 1000, column: 65)
!1262 = !DISubprogram(name: "OSError_reduce", scope: !490, file: !490, line: 1076, type: !1206, isLocal: true, isDefinition: true, scopeLine: 1077, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyOSErrorObject*)* @OSError_reduce, variables: !1263)
!1263 = !{!1264, !1265, !1266, !1267, !1268, !1271}
!1264 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1262, file: !490, line: 1076, type: !428)
!1265 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1262, file: !490, line: 1078, type: !50)
!1266 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1262, file: !490, line: 1079, type: !50)
!1267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1262, file: !490, line: 1079, type: !50)
!1268 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1269, file: !490, line: 1084, type: !22)
!1269 = distinct !DILexicalBlock(scope: !1270, file: !490, line: 1083, column: 67)
!1270 = distinct !DILexicalBlock(scope: !1262, file: !490, line: 1083, column: 9)
!1271 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1272, file: !490, line: 1120, type: !50)
!1272 = distinct !DILexicalBlock(scope: !1262, file: !490, line: 1120, column: 8)
!1273 = !DISubprogram(name: "OSError_written_get", scope: !490, file: !490, line: 1125, type: !1274, isLocal: true, isDefinition: true, scopeLine: 1126, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyOSErrorObject*, i8*)* @OSError_written_get, variables: !1276)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!50, !428, !102}
!1276 = !{!1277, !1278}
!1277 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1273, file: !490, line: 1125, type: !428)
!1278 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1273, file: !490, line: 1125, type: !102)
!1279 = !DISubprogram(name: "OSError_written_set", scope: !490, file: !490, line: 1135, type: !1280, isLocal: true, isDefinition: true, scopeLine: 1136, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyOSErrorObject*, %struct._object*, i8*)* @OSError_written_set, variables: !1282)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!56, !428, !50, !102}
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1279, file: !490, line: 1135, type: !428)
!1284 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1279, file: !490, line: 1135, type: !50)
!1285 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 3, scope: !1279, file: !490, line: 1135, type: !102)
!1286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1279, file: !490, line: 1137, type: !22)
!1287 = !DISubprogram(name: "OSError_init", scope: !490, file: !490, line: 957, type: !1288, isLocal: true, isDefinition: true, scopeLine: 958, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyOSErrorObject*, %struct._object*, %struct._object*)* @OSError_init, variables: !1290)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!56, !428, !50, !50}
!1290 = !{!1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1300}
!1291 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1287, file: !490, line: 957, type: !428)
!1292 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1287, file: !490, line: 957, type: !50)
!1293 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1287, file: !490, line: 957, type: !50)
!1294 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "myerrno", scope: !1287, file: !490, line: 959, type: !50)
!1295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "strerror", scope: !1287, file: !490, line: 959, type: !50)
!1296 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "filename", scope: !1287, file: !490, line: 960, type: !50)
!1297 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "filename2", scope: !1287, file: !490, line: 960, type: !50)
!1298 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1299, file: !490, line: 990, type: !50)
!1299 = distinct !DILexicalBlock(scope: !1287, file: !490, line: 990, column: 8)
!1300 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1301, file: !490, line: 990, type: !50)
!1301 = distinct !DILexicalBlock(scope: !1302, file: !490, line: 990, column: 96)
!1302 = distinct !DILexicalBlock(scope: !1299, file: !490, line: 990, column: 62)
!1303 = !DISubprogram(name: "oserror_use_init", scope: !490, file: !490, line: 868, type: !1304, isLocal: true, isDefinition: true, scopeLine: 869, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._typeobject*)* @oserror_use_init, variables: !1306)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!56, !404}
!1306 = !{!1307}
!1307 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1303, file: !490, line: 868, type: !404)
!1308 = !DISubprogram(name: "oserror_parse_args", scope: !490, file: !490, line: 735, type: !1309, isLocal: true, isDefinition: true, scopeLine: 742, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object**, %struct._object**, %struct._object**, %struct._object**, %struct._object**)* @oserror_parse_args, variables: !1311)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!56, !808, !808, !808, !808, !808}
!1311 = !{!1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320}
!1312 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p_args", arg: 1, scope: !1308, file: !490, line: 735, type: !808)
!1313 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myerrno", arg: 2, scope: !1308, file: !490, line: 736, type: !808)
!1314 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strerror", arg: 3, scope: !1308, file: !490, line: 736, type: !808)
!1315 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 4, scope: !1308, file: !490, line: 737, type: !808)
!1316 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename2", arg: 5, scope: !1308, file: !490, line: 737, type: !808)
!1317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nargs", scope: !1308, file: !490, line: 743, type: !22)
!1318 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1308, file: !490, line: 744, type: !50)
!1319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_winerror", scope: !1308, file: !490, line: 750, type: !50)
!1320 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "winerror", scope: !1308, file: !490, line: 751, type: !808)
!1321 = !DISubprogram(name: "oserror_init", scope: !490, file: !490, line: 800, type: !1322, isLocal: true, isDefinition: true, scopeLine: 807, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyOSErrorObject*, %struct._object**, %struct._object*, %struct._object*, %struct._object*, %struct._object*)* @oserror_init, variables: !1324)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!56, !428, !808, !50, !50, !50, !50}
!1324 = !{!1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1340, !1342, !1344, !1346, !1348}
!1325 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1321, file: !490, line: 800, type: !428)
!1326 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p_args", arg: 2, scope: !1321, file: !490, line: 800, type: !808)
!1327 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myerrno", arg: 3, scope: !1321, file: !490, line: 801, type: !50)
!1328 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strerror", arg: 4, scope: !1321, file: !490, line: 801, type: !50)
!1329 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 5, scope: !1321, file: !490, line: 802, type: !50)
!1330 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename2", arg: 6, scope: !1321, file: !490, line: 802, type: !50)
!1331 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1321, file: !490, line: 808, type: !50)
!1332 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nargs", scope: !1321, file: !490, line: 809, type: !22)
!1333 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "subslice", scope: !1334, file: !490, line: 834, type: !50)
!1334 = distinct !DILexicalBlock(scope: !1335, file: !490, line: 831, column: 43)
!1335 = distinct !DILexicalBlock(scope: !1336, file: !490, line: 831, column: 17)
!1336 = distinct !DILexicalBlock(scope: !1337, file: !490, line: 822, column: 14)
!1337 = distinct !DILexicalBlock(scope: !1338, file: !490, line: 813, column: 13)
!1338 = distinct !DILexicalBlock(scope: !1339, file: !490, line: 812, column: 52)
!1339 = distinct !DILexicalBlock(scope: !1321, file: !490, line: 812, column: 9)
!1340 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1341, file: !490, line: 838, type: !50)
!1341 = distinct !DILexicalBlock(scope: !1334, file: !490, line: 838, column: 20)
!1342 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !1343, file: !490, line: 843, type: !50)
!1343 = distinct !DILexicalBlock(scope: !1321, file: !490, line: 843, column: 8)
!1344 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !1345, file: !490, line: 846, type: !50)
!1345 = distinct !DILexicalBlock(scope: !1321, file: !490, line: 846, column: 8)
!1346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1347, file: !490, line: 855, type: !50)
!1347 = distinct !DILexicalBlock(scope: !1321, file: !490, line: 855, column: 8)
!1348 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1349, file: !490, line: 855, type: !50)
!1349 = distinct !DILexicalBlock(scope: !1350, file: !490, line: 855, column: 115)
!1350 = distinct !DILexicalBlock(scope: !1351, file: !490, line: 855, column: 83)
!1351 = distinct !DILexicalBlock(scope: !1347, file: !490, line: 855, column: 60)
!1352 = !DISubprogram(name: "OSError_new", scope: !490, file: !490, line: 889, type: !1353, isLocal: true, isDefinition: true, scopeLine: 890, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @OSError_new, variables: !1355)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!50, !404, !50, !50}
!1355 = !{!1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1369, !1371, !1374, !1376, !1379, !1381}
!1356 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1352, file: !490, line: 889, type: !404)
!1357 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1352, file: !490, line: 889, type: !50)
!1358 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1352, file: !490, line: 889, type: !50)
!1359 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1352, file: !490, line: 891, type: !428)
!1360 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "myerrno", scope: !1352, file: !490, line: 892, type: !50)
!1361 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "strerror", scope: !1352, file: !490, line: 892, type: !50)
!1362 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "filename", scope: !1352, file: !490, line: 893, type: !50)
!1363 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "filename2", scope: !1352, file: !490, line: 893, type: !50)
!1364 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newtype", scope: !1365, file: !490, line: 914, type: !50)
!1365 = distinct !DILexicalBlock(scope: !1366, file: !490, line: 913, column: 61)
!1366 = distinct !DILexicalBlock(scope: !1367, file: !490, line: 912, column: 13)
!1367 = distinct !DILexicalBlock(scope: !1368, file: !490, line: 900, column: 34)
!1368 = distinct !DILexicalBlock(scope: !1352, file: !490, line: 900, column: 9)
!1369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1370, file: !490, line: 947, type: !50)
!1370 = distinct !DILexicalBlock(scope: !1352, file: !490, line: 947, column: 8)
!1371 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1372, file: !490, line: 947, type: !50)
!1372 = distinct !DILexicalBlock(scope: !1373, file: !490, line: 947, column: 96)
!1373 = distinct !DILexicalBlock(scope: !1370, file: !490, line: 947, column: 62)
!1374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1375, file: !490, line: 951, type: !50)
!1375 = distinct !DILexicalBlock(scope: !1352, file: !490, line: 951, column: 8)
!1376 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1377, file: !490, line: 951, type: !50)
!1377 = distinct !DILexicalBlock(scope: !1378, file: !490, line: 951, column: 96)
!1378 = distinct !DILexicalBlock(scope: !1375, file: !490, line: 951, column: 62)
!1379 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1380, file: !490, line: 952, type: !50)
!1380 = distinct !DILexicalBlock(scope: !1352, file: !490, line: 952, column: 8)
!1381 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1382, file: !490, line: 952, type: !50)
!1382 = distinct !DILexicalBlock(scope: !1383, file: !490, line: 952, column: 96)
!1383 = distinct !DILexicalBlock(scope: !1380, file: !490, line: 952, column: 62)
!1384 = !DISubprogram(name: "SyntaxError_dealloc", scope: !490, file: !490, line: 1318, type: !1385, isLocal: true, isDefinition: true, scopeLine: 1319, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PySyntaxErrorObject*)* @SyntaxError_dealloc, variables: !1404)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{null, !1387}
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64, align: 64)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySyntaxErrorObject", file: !13, line: 28, baseType: !1389)
!1389 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 20, size: 896, align: 64, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1389, file: !13, line: 21, baseType: !17, size: 128, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !1389, file: !13, line: 21, baseType: !50, size: 64, align: 64, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1389, file: !13, line: 21, baseType: !50, size: 64, align: 64, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !1389, file: !13, line: 21, baseType: !50, size: 64, align: 64, offset: 256)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1389, file: !13, line: 21, baseType: !50, size: 64, align: 64, offset: 320)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !1389, file: !13, line: 21, baseType: !50, size: 64, align: 64, offset: 384)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !1389, file: !13, line: 21, baseType: !42, size: 8, align: 8, offset: 448)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !1389, file: !13, line: 22, baseType: !50, size: 64, align: 64, offset: 512)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1389, file: !13, line: 23, baseType: !50, size: 64, align: 64, offset: 576)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "lineno", scope: !1389, file: !13, line: 24, baseType: !50, size: 64, align: 64, offset: 640)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1389, file: !13, line: 25, baseType: !50, size: 64, align: 64, offset: 704)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1389, file: !13, line: 26, baseType: !50, size: 64, align: 64, offset: 768)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "print_file_and_line", scope: !1389, file: !13, line: 27, baseType: !50, size: 64, align: 64, offset: 832)
!1404 = !{!1405, !1406}
!1405 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1384, file: !490, line: 1318, type: !1387)
!1406 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1407, file: !490, line: 1320, type: !414)
!1407 = distinct !DILexicalBlock(scope: !1384, file: !490, line: 1320, column: 8)
!1408 = !DISubprogram(name: "SyntaxError_str", scope: !490, file: !490, line: 1367, type: !1409, isLocal: true, isDefinition: true, scopeLine: 1368, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PySyntaxErrorObject*)* @SyntaxError_str, variables: !1411)
!1409 = !DISubroutineType(types: !1410)
!1410 = !{!50, !1387}
!1411 = !{!1412, !1413, !1414, !1415, !1416, !1417, !1419}
!1412 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1408, file: !490, line: 1367, type: !1387)
!1413 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "have_lineno", scope: !1408, file: !490, line: 1369, type: !56)
!1414 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "filename", scope: !1408, file: !490, line: 1370, type: !50)
!1415 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1408, file: !490, line: 1371, type: !50)
!1416 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "overflow", scope: !1408, file: !490, line: 1375, type: !56)
!1417 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1418, file: !490, line: 1405, type: !50)
!1418 = distinct !DILexicalBlock(scope: !1408, file: !490, line: 1405, column: 8)
!1419 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1420, file: !490, line: 1405, type: !50)
!1420 = distinct !DILexicalBlock(scope: !1421, file: !490, line: 1405, column: 100)
!1421 = distinct !DILexicalBlock(scope: !1418, file: !490, line: 1405, column: 66)
!1422 = !DISubprogram(name: "my_basename", scope: !490, file: !490, line: 1341, type: !129, isLocal: true, isDefinition: true, scopeLine: 1342, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @my_basename, variables: !1423)
!1423 = !{!1424, !1425, !1426, !1427, !1428, !1429}
!1424 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 1, scope: !1422, file: !490, line: 1341, type: !50)
!1425 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1422, file: !490, line: 1343, type: !22)
!1426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1422, file: !490, line: 1343, type: !22)
!1427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !1422, file: !490, line: 1343, type: !22)
!1428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !1422, file: !490, line: 1344, type: !56)
!1429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1422, file: !490, line: 1345, type: !102)
!1430 = !DISubprogram(name: "SyntaxError_traverse", scope: !490, file: !490, line: 1326, type: !1431, isLocal: true, isDefinition: true, scopeLine: 1327, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySyntaxErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @SyntaxError_traverse, variables: !1433)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!56, !1387, !276, !102}
!1433 = !{!1434, !1435, !1436, !1437, !1441, !1445, !1449, !1453, !1457}
!1434 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1430, file: !490, line: 1326, type: !1387)
!1435 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1430, file: !490, line: 1326, type: !276)
!1436 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1430, file: !490, line: 1326, type: !102)
!1437 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1438, file: !490, line: 1328, type: !56)
!1438 = distinct !DILexicalBlock(scope: !1439, file: !490, line: 1328, column: 25)
!1439 = distinct !DILexicalBlock(scope: !1440, file: !490, line: 1328, column: 14)
!1440 = distinct !DILexicalBlock(scope: !1430, file: !490, line: 1328, column: 8)
!1441 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1442, file: !490, line: 1329, type: !56)
!1442 = distinct !DILexicalBlock(scope: !1443, file: !490, line: 1329, column: 30)
!1443 = distinct !DILexicalBlock(scope: !1444, file: !490, line: 1329, column: 14)
!1444 = distinct !DILexicalBlock(scope: !1430, file: !490, line: 1329, column: 8)
!1445 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1446, file: !490, line: 1330, type: !56)
!1446 = distinct !DILexicalBlock(scope: !1447, file: !490, line: 1330, column: 28)
!1447 = distinct !DILexicalBlock(scope: !1448, file: !490, line: 1330, column: 14)
!1448 = distinct !DILexicalBlock(scope: !1430, file: !490, line: 1330, column: 8)
!1449 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1450, file: !490, line: 1331, type: !56)
!1450 = distinct !DILexicalBlock(scope: !1451, file: !490, line: 1331, column: 28)
!1451 = distinct !DILexicalBlock(scope: !1452, file: !490, line: 1331, column: 14)
!1452 = distinct !DILexicalBlock(scope: !1430, file: !490, line: 1331, column: 8)
!1453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1454, file: !490, line: 1332, type: !56)
!1454 = distinct !DILexicalBlock(scope: !1455, file: !490, line: 1332, column: 26)
!1455 = distinct !DILexicalBlock(scope: !1456, file: !490, line: 1332, column: 14)
!1456 = distinct !DILexicalBlock(scope: !1430, file: !490, line: 1332, column: 8)
!1457 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1458, file: !490, line: 1333, type: !56)
!1458 = distinct !DILexicalBlock(scope: !1459, file: !490, line: 1333, column: 41)
!1459 = distinct !DILexicalBlock(scope: !1460, file: !490, line: 1333, column: 14)
!1460 = distinct !DILexicalBlock(scope: !1430, file: !490, line: 1333, column: 8)
!1461 = !DISubprogram(name: "SyntaxError_clear", scope: !490, file: !490, line: 1306, type: !1462, isLocal: true, isDefinition: true, scopeLine: 1307, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySyntaxErrorObject*)* @SyntaxError_clear, variables: !1464)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!56, !1387}
!1464 = !{!1465, !1466, !1468, !1472, !1474, !1478, !1480, !1484, !1486, !1490, !1492, !1496, !1498}
!1465 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1461, file: !490, line: 1306, type: !1387)
!1466 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1467, file: !490, line: 1308, type: !50)
!1467 = distinct !DILexicalBlock(scope: !1461, file: !490, line: 1308, column: 8)
!1468 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1469, file: !490, line: 1308, type: !50)
!1469 = distinct !DILexicalBlock(scope: !1470, file: !490, line: 1308, column: 113)
!1470 = distinct !DILexicalBlock(scope: !1471, file: !490, line: 1308, column: 82)
!1471 = distinct !DILexicalBlock(scope: !1467, file: !490, line: 1308, column: 59)
!1472 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1473, file: !490, line: 1309, type: !50)
!1473 = distinct !DILexicalBlock(scope: !1461, file: !490, line: 1309, column: 8)
!1474 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1475, file: !490, line: 1309, type: !50)
!1475 = distinct !DILexicalBlock(scope: !1476, file: !490, line: 1309, column: 123)
!1476 = distinct !DILexicalBlock(scope: !1477, file: !490, line: 1309, column: 87)
!1477 = distinct !DILexicalBlock(scope: !1473, file: !490, line: 1309, column: 64)
!1478 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1479, file: !490, line: 1310, type: !50)
!1479 = distinct !DILexicalBlock(scope: !1461, file: !490, line: 1310, column: 8)
!1480 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1481, file: !490, line: 1310, type: !50)
!1481 = distinct !DILexicalBlock(scope: !1482, file: !490, line: 1310, column: 119)
!1482 = distinct !DILexicalBlock(scope: !1483, file: !490, line: 1310, column: 85)
!1483 = distinct !DILexicalBlock(scope: !1479, file: !490, line: 1310, column: 62)
!1484 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1485, file: !490, line: 1311, type: !50)
!1485 = distinct !DILexicalBlock(scope: !1461, file: !490, line: 1311, column: 8)
!1486 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1487, file: !490, line: 1311, type: !50)
!1487 = distinct !DILexicalBlock(scope: !1488, file: !490, line: 1311, column: 119)
!1488 = distinct !DILexicalBlock(scope: !1489, file: !490, line: 1311, column: 85)
!1489 = distinct !DILexicalBlock(scope: !1485, file: !490, line: 1311, column: 62)
!1490 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1491, file: !490, line: 1312, type: !50)
!1491 = distinct !DILexicalBlock(scope: !1461, file: !490, line: 1312, column: 8)
!1492 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1493, file: !490, line: 1312, type: !50)
!1493 = distinct !DILexicalBlock(scope: !1494, file: !490, line: 1312, column: 115)
!1494 = distinct !DILexicalBlock(scope: !1495, file: !490, line: 1312, column: 83)
!1495 = distinct !DILexicalBlock(scope: !1491, file: !490, line: 1312, column: 60)
!1496 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1497, file: !490, line: 1313, type: !50)
!1497 = distinct !DILexicalBlock(scope: !1461, file: !490, line: 1313, column: 8)
!1498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1499, file: !490, line: 1313, type: !50)
!1499 = distinct !DILexicalBlock(scope: !1500, file: !490, line: 1313, column: 145)
!1500 = distinct !DILexicalBlock(scope: !1501, file: !490, line: 1313, column: 98)
!1501 = distinct !DILexicalBlock(scope: !1497, file: !490, line: 1313, column: 75)
!1502 = !DISubprogram(name: "SyntaxError_init", scope: !490, file: !490, line: 1258, type: !1503, isLocal: true, isDefinition: true, scopeLine: 1259, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PySyntaxErrorObject*, %struct._object*, %struct._object*)* @SyntaxError_init, variables: !1505)
!1503 = !DISubroutineType(types: !1504)
!1504 = !{!56, !1387, !50, !50}
!1505 = !{!1506, !1507, !1508, !1509, !1510, !1511, !1515, !1519, !1525, !1527, !1531, !1533, !1537, !1539, !1543, !1545, !1549}
!1506 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1502, file: !490, line: 1258, type: !1387)
!1507 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1502, file: !490, line: 1258, type: !50)
!1508 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1502, file: !490, line: 1258, type: !50)
!1509 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "info", scope: !1502, file: !490, line: 1260, type: !50)
!1510 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lenargs", scope: !1502, file: !490, line: 1261, type: !22)
!1511 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1512, file: !490, line: 1267, type: !50)
!1512 = distinct !DILexicalBlock(scope: !1513, file: !490, line: 1267, column: 12)
!1513 = distinct !DILexicalBlock(scope: !1514, file: !490, line: 1266, column: 23)
!1514 = distinct !DILexicalBlock(scope: !1502, file: !490, line: 1266, column: 9)
!1515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1516, file: !490, line: 1267, type: !50)
!1516 = distinct !DILexicalBlock(scope: !1517, file: !490, line: 1267, column: 117)
!1517 = distinct !DILexicalBlock(scope: !1518, file: !490, line: 1267, column: 86)
!1518 = distinct !DILexicalBlock(scope: !1512, file: !490, line: 1267, column: 63)
!1519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1520, file: !490, line: 1280, type: !50)
!1520 = distinct !DILexicalBlock(scope: !1521, file: !490, line: 1280, column: 16)
!1521 = distinct !DILexicalBlock(scope: !1522, file: !490, line: 1277, column: 53)
!1522 = distinct !DILexicalBlock(scope: !1523, file: !490, line: 1277, column: 13)
!1523 = distinct !DILexicalBlock(scope: !1524, file: !490, line: 1271, column: 23)
!1524 = distinct !DILexicalBlock(scope: !1502, file: !490, line: 1271, column: 9)
!1525 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1526, file: !490, line: 1284, type: !50)
!1526 = distinct !DILexicalBlock(scope: !1523, file: !490, line: 1284, column: 12)
!1527 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1528, file: !490, line: 1284, type: !50)
!1528 = distinct !DILexicalBlock(scope: !1529, file: !490, line: 1284, column: 127)
!1529 = distinct !DILexicalBlock(scope: !1530, file: !490, line: 1284, column: 91)
!1530 = distinct !DILexicalBlock(scope: !1526, file: !490, line: 1284, column: 68)
!1531 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1532, file: !490, line: 1288, type: !50)
!1532 = distinct !DILexicalBlock(scope: !1523, file: !490, line: 1288, column: 12)
!1533 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1534, file: !490, line: 1288, type: !50)
!1534 = distinct !DILexicalBlock(scope: !1535, file: !490, line: 1288, column: 123)
!1535 = distinct !DILexicalBlock(scope: !1536, file: !490, line: 1288, column: 89)
!1536 = distinct !DILexicalBlock(scope: !1532, file: !490, line: 1288, column: 66)
!1537 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1538, file: !490, line: 1292, type: !50)
!1538 = distinct !DILexicalBlock(scope: !1523, file: !490, line: 1292, column: 12)
!1539 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1540, file: !490, line: 1292, type: !50)
!1540 = distinct !DILexicalBlock(scope: !1541, file: !490, line: 1292, column: 123)
!1541 = distinct !DILexicalBlock(scope: !1542, file: !490, line: 1292, column: 89)
!1542 = distinct !DILexicalBlock(scope: !1538, file: !490, line: 1292, column: 66)
!1543 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1544, file: !490, line: 1296, type: !50)
!1544 = distinct !DILexicalBlock(scope: !1523, file: !490, line: 1296, column: 12)
!1545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1546, file: !490, line: 1296, type: !50)
!1546 = distinct !DILexicalBlock(scope: !1547, file: !490, line: 1296, column: 119)
!1547 = distinct !DILexicalBlock(scope: !1548, file: !490, line: 1296, column: 87)
!1548 = distinct !DILexicalBlock(scope: !1544, file: !490, line: 1296, column: 64)
!1549 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1550, file: !490, line: 1300, type: !50)
!1550 = distinct !DILexicalBlock(scope: !1523, file: !490, line: 1300, column: 12)
!1551 = !DISubprogram(name: "KeyError_str", scope: !490, file: !490, line: 1463, type: !865, isLocal: true, isDefinition: true, scopeLine: 1464, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyBaseExceptionObject*)* @KeyError_str, variables: !1552)
!1552 = !{!1553}
!1553 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1551, file: !490, line: 1463, type: !11)
!1554 = !DISubprogram(name: "get_unicode", scope: !490, file: !490, line: 1514, type: !1555, isLocal: true, isDefinition: true, scopeLine: 1515, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i8*)* @get_unicode, variables: !1557)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!50, !50, !40}
!1557 = !{!1558, !1559}
!1558 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attr", arg: 1, scope: !1554, file: !490, line: 1514, type: !50)
!1559 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 2, scope: !1554, file: !490, line: 1514, type: !40)
!1560 = !DISubprogram(name: "get_string", scope: !490, file: !490, line: 1498, type: !1555, isLocal: true, isDefinition: true, scopeLine: 1499, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i8*)* @get_string, variables: !1561)
!1561 = !{!1562, !1563}
!1562 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attr", arg: 1, scope: !1560, file: !490, line: 1498, type: !50)
!1563 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 2, scope: !1560, file: !490, line: 1498, type: !40)
!1564 = !DISubprogram(name: "set_unicodefromstring", scope: !490, file: !490, line: 1531, type: !1565, isLocal: true, isDefinition: true, scopeLine: 1532, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object**, i8*)* @set_unicodefromstring, variables: !1567)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!56, !808, !40}
!1567 = !{!1568, !1569, !1570, !1571, !1573}
!1568 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attr", arg: 1, scope: !1564, file: !490, line: 1531, type: !808)
!1569 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !1564, file: !490, line: 1531, type: !40)
!1570 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !1564, file: !490, line: 1533, type: !50)
!1571 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1572, file: !490, line: 1536, type: !50)
!1572 = distinct !DILexicalBlock(scope: !1564, file: !490, line: 1536, column: 8)
!1573 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1574, file: !490, line: 1536, type: !50)
!1574 = distinct !DILexicalBlock(scope: !1575, file: !490, line: 1536, column: 105)
!1575 = distinct !DILexicalBlock(scope: !1576, file: !490, line: 1536, column: 78)
!1576 = distinct !DILexicalBlock(scope: !1572, file: !490, line: 1536, column: 55)
!1577 = !DISubprogram(name: "UnicodeError_dealloc", scope: !490, file: !490, line: 1761, type: !1578, isLocal: true, isDefinition: true, scopeLine: 1762, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyUnicodeErrorObject*)* @UnicodeError_dealloc, variables: !1580)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{null, !369}
!1580 = !{!1581, !1582}
!1581 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1577, file: !490, line: 1761, type: !369)
!1582 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1583, file: !490, line: 1763, type: !414)
!1583 = distinct !DILexicalBlock(scope: !1577, file: !490, line: 1763, column: 8)
!1584 = !DISubprogram(name: "UnicodeEncodeError_str", scope: !490, file: !490, line: 1833, type: !129, isLocal: true, isDefinition: true, scopeLine: 1834, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @UnicodeEncodeError_str, variables: !1585)
!1585 = !{!1586, !1587, !1588, !1589, !1590, !1591, !1594, !1595, !1597, !1600, !1602}
!1586 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1584, file: !490, line: 1833, type: !50)
!1587 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uself", scope: !1584, file: !490, line: 1835, type: !369)
!1588 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1584, file: !490, line: 1836, type: !50)
!1589 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reason_str", scope: !1584, file: !490, line: 1837, type: !50)
!1590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "encoding_str", scope: !1584, file: !490, line: 1838, type: !50)
!1591 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "badchar", scope: !1592, file: !490, line: 1854, type: !470)
!1592 = distinct !DILexicalBlock(scope: !1593, file: !490, line: 1853, column: 130)
!1593 = distinct !DILexicalBlock(scope: !1584, file: !490, line: 1853, column: 9)
!1594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !1592, file: !490, line: 1855, type: !40)
!1595 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1596, file: !490, line: 1878, type: !50)
!1596 = distinct !DILexicalBlock(scope: !1584, file: !490, line: 1878, column: 8)
!1597 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1598, file: !490, line: 1878, type: !50)
!1598 = distinct !DILexicalBlock(scope: !1599, file: !490, line: 1878, column: 102)
!1599 = distinct !DILexicalBlock(scope: !1596, file: !490, line: 1878, column: 68)
!1600 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1601, file: !490, line: 1879, type: !50)
!1601 = distinct !DILexicalBlock(scope: !1584, file: !490, line: 1879, column: 8)
!1602 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1603, file: !490, line: 1879, type: !50)
!1603 = distinct !DILexicalBlock(scope: !1604, file: !490, line: 1879, column: 104)
!1604 = distinct !DILexicalBlock(scope: !1601, file: !490, line: 1879, column: 70)
!1605 = !DISubprogram(name: "UnicodeError_traverse", scope: !490, file: !490, line: 1769, type: !1606, isLocal: true, isDefinition: true, scopeLine: 1770, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyUnicodeErrorObject*, i32 (%struct._object*, i8*)*, i8*)* @UnicodeError_traverse, variables: !1608)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!56, !369, !276, !102}
!1608 = !{!1609, !1610, !1611, !1612, !1616, !1620}
!1609 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1605, file: !490, line: 1769, type: !369)
!1610 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1605, file: !490, line: 1769, type: !276)
!1611 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1605, file: !490, line: 1769, type: !102)
!1612 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1613, file: !490, line: 1771, type: !56)
!1613 = distinct !DILexicalBlock(scope: !1614, file: !490, line: 1771, column: 30)
!1614 = distinct !DILexicalBlock(scope: !1615, file: !490, line: 1771, column: 14)
!1615 = distinct !DILexicalBlock(scope: !1605, file: !490, line: 1771, column: 8)
!1616 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1617, file: !490, line: 1772, type: !56)
!1617 = distinct !DILexicalBlock(scope: !1618, file: !490, line: 1772, column: 28)
!1618 = distinct !DILexicalBlock(scope: !1619, file: !490, line: 1772, column: 14)
!1619 = distinct !DILexicalBlock(scope: !1605, file: !490, line: 1772, column: 8)
!1620 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1621, file: !490, line: 1773, type: !56)
!1621 = distinct !DILexicalBlock(scope: !1622, file: !490, line: 1773, column: 28)
!1622 = distinct !DILexicalBlock(scope: !1623, file: !490, line: 1773, column: 14)
!1623 = distinct !DILexicalBlock(scope: !1605, file: !490, line: 1773, column: 8)
!1624 = !DISubprogram(name: "UnicodeError_clear", scope: !490, file: !490, line: 1752, type: !1625, isLocal: true, isDefinition: true, scopeLine: 1753, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyUnicodeErrorObject*)* @UnicodeError_clear, variables: !1627)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!56, !369}
!1627 = !{!1628, !1629, !1631, !1635, !1637, !1641, !1643}
!1628 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1624, file: !490, line: 1752, type: !369)
!1629 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1630, file: !490, line: 1754, type: !50)
!1630 = distinct !DILexicalBlock(scope: !1624, file: !490, line: 1754, column: 8)
!1631 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1632, file: !490, line: 1754, type: !50)
!1632 = distinct !DILexicalBlock(scope: !1633, file: !490, line: 1754, column: 123)
!1633 = distinct !DILexicalBlock(scope: !1634, file: !490, line: 1754, column: 87)
!1634 = distinct !DILexicalBlock(scope: !1630, file: !490, line: 1754, column: 64)
!1635 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1636, file: !490, line: 1755, type: !50)
!1636 = distinct !DILexicalBlock(scope: !1624, file: !490, line: 1755, column: 8)
!1637 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1638, file: !490, line: 1755, type: !50)
!1638 = distinct !DILexicalBlock(scope: !1639, file: !490, line: 1755, column: 119)
!1639 = distinct !DILexicalBlock(scope: !1640, file: !490, line: 1755, column: 85)
!1640 = distinct !DILexicalBlock(scope: !1636, file: !490, line: 1755, column: 62)
!1641 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1642, file: !490, line: 1756, type: !50)
!1642 = distinct !DILexicalBlock(scope: !1624, file: !490, line: 1756, column: 8)
!1643 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1644, file: !490, line: 1756, type: !50)
!1644 = distinct !DILexicalBlock(scope: !1645, file: !490, line: 1756, column: 119)
!1645 = distinct !DILexicalBlock(scope: !1646, file: !490, line: 1756, column: 85)
!1646 = distinct !DILexicalBlock(scope: !1642, file: !490, line: 1756, column: 62)
!1647 = !DISubprogram(name: "UnicodeEncodeError_init", scope: !490, file: !490, line: 1797, type: !224, isLocal: true, isDefinition: true, scopeLine: 1798, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @UnicodeEncodeError_init, variables: !1648)
!1648 = !{!1649, !1650, !1651, !1652, !1653, !1655, !1659, !1661, !1665, !1667}
!1649 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1647, file: !490, line: 1797, type: !50)
!1650 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1647, file: !490, line: 1797, type: !50)
!1651 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1647, file: !490, line: 1797, type: !50)
!1652 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !1647, file: !490, line: 1799, type: !369)
!1653 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1654, file: !490, line: 1806, type: !50)
!1654 = distinct !DILexicalBlock(scope: !1647, file: !490, line: 1806, column: 8)
!1655 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1656, file: !490, line: 1806, type: !50)
!1656 = distinct !DILexicalBlock(scope: !1657, file: !490, line: 1806, column: 121)
!1657 = distinct !DILexicalBlock(scope: !1658, file: !490, line: 1806, column: 86)
!1658 = distinct !DILexicalBlock(scope: !1654, file: !490, line: 1806, column: 63)
!1659 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1660, file: !490, line: 1807, type: !50)
!1660 = distinct !DILexicalBlock(scope: !1647, file: !490, line: 1807, column: 8)
!1661 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1662, file: !490, line: 1807, type: !50)
!1662 = distinct !DILexicalBlock(scope: !1663, file: !490, line: 1807, column: 117)
!1663 = distinct !DILexicalBlock(scope: !1664, file: !490, line: 1807, column: 84)
!1664 = distinct !DILexicalBlock(scope: !1660, file: !490, line: 1807, column: 61)
!1665 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1666, file: !490, line: 1808, type: !50)
!1666 = distinct !DILexicalBlock(scope: !1647, file: !490, line: 1808, column: 8)
!1667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1668, file: !490, line: 1808, type: !50)
!1668 = distinct !DILexicalBlock(scope: !1669, file: !490, line: 1808, column: 117)
!1669 = distinct !DILexicalBlock(scope: !1670, file: !490, line: 1808, column: 84)
!1670 = distinct !DILexicalBlock(scope: !1666, file: !490, line: 1808, column: 61)
!1671 = !DISubprogram(name: "UnicodeDecodeError_str", scope: !490, file: !490, line: 1955, type: !129, isLocal: true, isDefinition: true, scopeLine: 1956, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @UnicodeDecodeError_str, variables: !1672)
!1672 = !{!1673, !1674, !1675, !1676, !1677, !1678, !1681, !1683, !1686, !1688}
!1673 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1671, file: !490, line: 1955, type: !50)
!1674 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uself", scope: !1671, file: !490, line: 1957, type: !369)
!1675 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1671, file: !490, line: 1958, type: !50)
!1676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reason_str", scope: !1671, file: !490, line: 1959, type: !50)
!1677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "encoding_str", scope: !1671, file: !490, line: 1960, type: !50)
!1678 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "byte", scope: !1679, file: !490, line: 1976, type: !56)
!1679 = distinct !DILexicalBlock(scope: !1680, file: !490, line: 1975, column: 115)
!1680 = distinct !DILexicalBlock(scope: !1671, file: !490, line: 1975, column: 9)
!1681 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1682, file: !490, line: 1994, type: !50)
!1682 = distinct !DILexicalBlock(scope: !1671, file: !490, line: 1994, column: 8)
!1683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1684, file: !490, line: 1994, type: !50)
!1684 = distinct !DILexicalBlock(scope: !1685, file: !490, line: 1994, column: 102)
!1685 = distinct !DILexicalBlock(scope: !1682, file: !490, line: 1994, column: 68)
!1686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1687, file: !490, line: 1995, type: !50)
!1687 = distinct !DILexicalBlock(scope: !1671, file: !490, line: 1995, column: 8)
!1688 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1689, file: !490, line: 1995, type: !50)
!1689 = distinct !DILexicalBlock(scope: !1690, file: !490, line: 1995, column: 104)
!1690 = distinct !DILexicalBlock(scope: !1687, file: !490, line: 1995, column: 70)
!1691 = !DISubprogram(name: "UnicodeDecodeError_init", scope: !490, file: !490, line: 1912, type: !224, isLocal: true, isDefinition: true, scopeLine: 1913, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @UnicodeDecodeError_init, variables: !1692)
!1692 = !{!1693, !1694, !1695, !1696, !1697, !1698, !1699, !1701, !1705, !1707, !1711, !1713}
!1693 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1691, file: !490, line: 1912, type: !50)
!1694 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1691, file: !490, line: 1912, type: !50)
!1695 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1691, file: !490, line: 1912, type: !50)
!1696 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ude", scope: !1691, file: !490, line: 1914, type: !369)
!1697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1691, file: !490, line: 1915, type: !40)
!1698 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1691, file: !490, line: 1916, type: !22)
!1699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1700, file: !490, line: 1923, type: !50)
!1700 = distinct !DILexicalBlock(scope: !1691, file: !490, line: 1923, column: 8)
!1701 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1702, file: !490, line: 1923, type: !50)
!1702 = distinct !DILexicalBlock(scope: !1703, file: !490, line: 1923, column: 121)
!1703 = distinct !DILexicalBlock(scope: !1704, file: !490, line: 1923, column: 86)
!1704 = distinct !DILexicalBlock(scope: !1700, file: !490, line: 1923, column: 63)
!1705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1706, file: !490, line: 1924, type: !50)
!1706 = distinct !DILexicalBlock(scope: !1691, file: !490, line: 1924, column: 8)
!1707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1708, file: !490, line: 1924, type: !50)
!1708 = distinct !DILexicalBlock(scope: !1709, file: !490, line: 1924, column: 117)
!1709 = distinct !DILexicalBlock(scope: !1710, file: !490, line: 1924, column: 84)
!1710 = distinct !DILexicalBlock(scope: !1706, file: !490, line: 1924, column: 61)
!1711 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1712, file: !490, line: 1925, type: !50)
!1712 = distinct !DILexicalBlock(scope: !1691, file: !490, line: 1925, column: 8)
!1713 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1714, file: !490, line: 1925, type: !50)
!1714 = distinct !DILexicalBlock(scope: !1715, file: !490, line: 1925, column: 117)
!1715 = distinct !DILexicalBlock(scope: !1716, file: !490, line: 1925, column: 84)
!1716 = distinct !DILexicalBlock(scope: !1712, file: !490, line: 1925, column: 61)
!1717 = !DISubprogram(name: "UnicodeTranslateError_str", scope: !490, file: !490, line: 2054, type: !129, isLocal: true, isDefinition: true, scopeLine: 2055, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @UnicodeTranslateError_str, variables: !1718)
!1718 = !{!1719, !1720, !1721, !1722, !1723, !1726, !1727, !1729}
!1719 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1717, file: !490, line: 2054, type: !50)
!1720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uself", scope: !1717, file: !490, line: 2056, type: !369)
!1721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1717, file: !490, line: 2057, type: !50)
!1722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reason_str", scope: !1717, file: !490, line: 2058, type: !50)
!1723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "badchar", scope: !1724, file: !490, line: 2071, type: !470)
!1724 = distinct !DILexicalBlock(scope: !1725, file: !490, line: 2070, column: 130)
!1725 = distinct !DILexicalBlock(scope: !1717, file: !490, line: 2070, column: 9)
!1726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !1724, file: !490, line: 2072, type: !40)
!1727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1728, file: !490, line: 2094, type: !50)
!1728 = distinct !DILexicalBlock(scope: !1717, file: !490, line: 2094, column: 8)
!1729 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1730, file: !490, line: 2094, type: !50)
!1730 = distinct !DILexicalBlock(scope: !1731, file: !490, line: 2094, column: 102)
!1731 = distinct !DILexicalBlock(scope: !1728, file: !490, line: 2094, column: 68)
!1732 = !DISubprogram(name: "UnicodeTranslateError_init", scope: !490, file: !490, line: 2028, type: !1733, isLocal: true, isDefinition: true, scopeLine: 2030, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyUnicodeErrorObject*, %struct._object*, %struct._object*)* @UnicodeTranslateError_init, variables: !1735)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!56, !369, !50, !50}
!1735 = !{!1736, !1737, !1738, !1739, !1741, !1745, !1747}
!1736 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1732, file: !490, line: 2028, type: !369)
!1737 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1732, file: !490, line: 2028, type: !50)
!1738 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1732, file: !490, line: 2029, type: !50)
!1739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1740, file: !490, line: 2034, type: !50)
!1740 = distinct !DILexicalBlock(scope: !1732, file: !490, line: 2034, column: 8)
!1741 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1742, file: !490, line: 2034, type: !50)
!1742 = distinct !DILexicalBlock(scope: !1743, file: !490, line: 2034, column: 119)
!1743 = distinct !DILexicalBlock(scope: !1744, file: !490, line: 2034, column: 85)
!1744 = distinct !DILexicalBlock(scope: !1740, file: !490, line: 2034, column: 62)
!1745 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1746, file: !490, line: 2035, type: !50)
!1746 = distinct !DILexicalBlock(scope: !1732, file: !490, line: 2035, column: 8)
!1747 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1748, file: !490, line: 2035, type: !50)
!1748 = distinct !DILexicalBlock(scope: !1749, file: !490, line: 2035, column: 119)
!1749 = distinct !DILexicalBlock(scope: !1750, file: !490, line: 2035, column: 85)
!1750 = distinct !DILexicalBlock(scope: !1746, file: !490, line: 2035, column: 62)
!1751 = !DISubprogram(name: "MemoryError_dealloc", scope: !490, file: !490, line: 2215, type: !858, isLocal: true, isDefinition: true, scopeLine: 2216, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyBaseExceptionObject*)* @MemoryError_dealloc, variables: !1752)
!1752 = !{!1753, !1754}
!1753 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1751, file: !490, line: 2215, type: !11)
!1754 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1755, file: !490, line: 2217, type: !414)
!1755 = distinct !DILexicalBlock(scope: !1751, file: !490, line: 2217, column: 8)
!1756 = !DISubprogram(name: "MemoryError_new", scope: !490, file: !490, line: 2192, type: !1353, isLocal: true, isDefinition: true, scopeLine: 2193, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @MemoryError_new, variables: !1757)
!1757 = !{!1758, !1759, !1760, !1761, !1762}
!1758 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1756, file: !490, line: 2192, type: !404)
!1759 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1756, file: !490, line: 2192, type: !50)
!1760 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1756, file: !490, line: 2192, type: !50)
!1761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1756, file: !490, line: 2194, type: !11)
!1762 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1763, file: !490, line: 2210, type: !414)
!1763 = distinct !DILexicalBlock(scope: !1756, file: !490, line: 2210, column: 8)
!1764 = !DISubprogram(name: "preallocate_memerrors", scope: !490, file: !490, line: 2229, type: !782, isLocal: true, isDefinition: true, scopeLine: 2230, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @preallocate_memerrors, variables: !1765)
!1765 = !{!1766, !1767, !1771}
!1766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1764, file: !490, line: 2233, type: !56)
!1767 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !1764, file: !490, line: 2234, type: !1768)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 1024, align: 64, elements: !1769)
!1769 = !{!1770}
!1770 = !DISubrange(count: 16)
!1771 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1772, file: !490, line: 2242, type: !50)
!1772 = distinct !DILexicalBlock(scope: !1773, file: !490, line: 2242, column: 12)
!1773 = distinct !DILexicalBlock(scope: !1774, file: !490, line: 2241, column: 30)
!1774 = distinct !DILexicalBlock(scope: !1775, file: !490, line: 2241, column: 5)
!1775 = distinct !DILexicalBlock(scope: !1764, file: !490, line: 2241, column: 5)
!1776 = !DISubprogram(name: "BaseException_new", scope: !490, file: !490, line: 32, type: !1353, isLocal: true, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @BaseException_new, variables: !1777)
!1777 = !{!1778, !1779, !1780, !1781, !1782}
!1778 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1776, file: !490, line: 32, type: !404)
!1779 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1776, file: !490, line: 32, type: !50)
!1780 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1776, file: !490, line: 32, type: !50)
!1781 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1776, file: !490, line: 34, type: !11)
!1782 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1783, file: !490, line: 52, type: !50)
!1783 = distinct !DILexicalBlock(scope: !1784, file: !490, line: 52, column: 12)
!1784 = distinct !DILexicalBlock(scope: !1785, file: !490, line: 51, column: 22)
!1785 = distinct !DILexicalBlock(scope: !1776, file: !490, line: 51, column: 9)
!1786 = !DISubprogram(name: "BaseException_init", scope: !490, file: !490, line: 60, type: !1787, isLocal: true, isDefinition: true, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyBaseExceptionObject*, %struct._object*, %struct._object*)* @BaseException_init, variables: !1789)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!56, !11, !50, !50}
!1789 = !{!1790, !1791, !1792, !1793, !1794, !1796}
!1790 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1786, file: !490, line: 60, type: !11)
!1791 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1786, file: !490, line: 60, type: !50)
!1792 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1786, file: !490, line: 60, type: !50)
!1793 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1786, file: !490, line: 62, type: !50)
!1794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1795, file: !490, line: 70, type: !50)
!1795 = distinct !DILexicalBlock(scope: !1786, file: !490, line: 70, column: 8)
!1796 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1797, file: !490, line: 70, type: !50)
!1797 = distinct !DILexicalBlock(scope: !1798, file: !490, line: 70, column: 95)
!1798 = distinct !DILexicalBlock(scope: !1795, file: !490, line: 70, column: 61)
!1799 = !DISubprogram(name: "free_preallocated_memerrors", scope: !490, file: !490, line: 2247, type: !782, isLocal: true, isDefinition: true, scopeLine: 2248, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @free_preallocated_memerrors, variables: !1800)
!1800 = !{!1801}
!1801 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1802, file: !490, line: 2250, type: !50)
!1802 = distinct !DILexicalBlock(scope: !1799, file: !490, line: 2249, column: 46)
!1803 = !{!1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1874, !1878, !1882, !1887, !1888, !1889, !1890, !1893, !1894, !1895, !1896, !1897, !1898, !1900, !1902, !1903, !1905, !1909, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971}
!1804 = !DIGlobalVariable(name: "PyExc_EnvironmentError", scope: !0, file: !490, line: 14, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_EnvironmentError)
!1805 = !DIGlobalVariable(name: "PyExc_IOError", scope: !0, file: !490, line: 15, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_IOError)
!1806 = !DIGlobalVariable(name: "PyExc_BaseException", scope: !0, file: !490, line: 407, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_BaseException)
!1807 = !DIGlobalVariable(name: "PyExc_Exception", scope: !0, file: !490, line: 464, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_Exception)
!1808 = !DIGlobalVariable(name: "PyExc_TypeError", scope: !0, file: !490, line: 471, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_TypeError)
!1809 = !DIGlobalVariable(name: "PyExc_StopIteration", scope: !0, file: !490, line: 525, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_StopIteration)
!1810 = !DIGlobalVariable(name: "PyExc_GeneratorExit", scope: !0, file: !490, line: 541, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_GeneratorExit)
!1811 = !DIGlobalVariable(name: "PyExc_SystemExit", scope: !0, file: !490, line: 596, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_SystemExit)
!1812 = !DIGlobalVariable(name: "PyExc_KeyboardInterrupt", scope: !0, file: !490, line: 603, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_KeyboardInterrupt)
!1813 = !DIGlobalVariable(name: "PyExc_ImportError", scope: !0, file: !490, line: 702, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ImportError)
!1814 = !DIGlobalVariable(name: "PyExc_OSError", scope: !0, file: !490, line: 1173, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_OSError)
!1815 = !DIGlobalVariable(name: "PyExc_BlockingIOError", scope: !0, file: !490, line: 1183, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_BlockingIOError)
!1816 = !DIGlobalVariable(name: "PyExc_ConnectionError", scope: !0, file: !490, line: 1185, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ConnectionError)
!1817 = !DIGlobalVariable(name: "PyExc_ChildProcessError", scope: !0, file: !490, line: 1187, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ChildProcessError)
!1818 = !DIGlobalVariable(name: "PyExc_BrokenPipeError", scope: !0, file: !490, line: 1189, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_BrokenPipeError)
!1819 = !DIGlobalVariable(name: "PyExc_ConnectionAbortedError", scope: !0, file: !490, line: 1191, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ConnectionAbortedError)
!1820 = !DIGlobalVariable(name: "PyExc_ConnectionRefusedError", scope: !0, file: !490, line: 1193, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ConnectionRefusedError)
!1821 = !DIGlobalVariable(name: "PyExc_ConnectionResetError", scope: !0, file: !490, line: 1195, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ConnectionResetError)
!1822 = !DIGlobalVariable(name: "PyExc_FileExistsError", scope: !0, file: !490, line: 1197, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_FileExistsError)
!1823 = !DIGlobalVariable(name: "PyExc_FileNotFoundError", scope: !0, file: !490, line: 1199, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_FileNotFoundError)
!1824 = !DIGlobalVariable(name: "PyExc_IsADirectoryError", scope: !0, file: !490, line: 1201, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_IsADirectoryError)
!1825 = !DIGlobalVariable(name: "PyExc_NotADirectoryError", scope: !0, file: !490, line: 1203, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_NotADirectoryError)
!1826 = !DIGlobalVariable(name: "PyExc_InterruptedError", scope: !0, file: !490, line: 1205, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_InterruptedError)
!1827 = !DIGlobalVariable(name: "PyExc_PermissionError", scope: !0, file: !490, line: 1207, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_PermissionError)
!1828 = !DIGlobalVariable(name: "PyExc_ProcessLookupError", scope: !0, file: !490, line: 1209, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ProcessLookupError)
!1829 = !DIGlobalVariable(name: "PyExc_TimeoutError", scope: !0, file: !490, line: 1211, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_TimeoutError)
!1830 = !DIGlobalVariable(name: "PyExc_EOFError", scope: !0, file: !490, line: 1217, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_EOFError)
!1831 = !DIGlobalVariable(name: "PyExc_RuntimeError", scope: !0, file: !490, line: 1224, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_RuntimeError)
!1832 = !DIGlobalVariable(name: "PyExc_NotImplementedError", scope: !0, file: !490, line: 1231, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_NotImplementedError)
!1833 = !DIGlobalVariable(name: "PyExc_NameError", scope: !0, file: !490, line: 1237, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_NameError)
!1834 = !DIGlobalVariable(name: "PyExc_UnboundLocalError", scope: !0, file: !490, line: 1243, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UnboundLocalError)
!1835 = !DIGlobalVariable(name: "PyExc_AttributeError", scope: !0, file: !490, line: 1249, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_AttributeError)
!1836 = !DIGlobalVariable(name: "PyExc_SyntaxError", scope: !0, file: !490, line: 1426, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_SyntaxError)
!1837 = !DIGlobalVariable(name: "PyExc_IndentationError", scope: !0, file: !490, line: 1434, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_IndentationError)
!1838 = !DIGlobalVariable(name: "PyExc_TabError", scope: !0, file: !490, line: 1441, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_TabError)
!1839 = !DIGlobalVariable(name: "PyExc_LookupError", scope: !0, file: !490, line: 1448, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_LookupError)
!1840 = !DIGlobalVariable(name: "PyExc_IndexError", scope: !0, file: !490, line: 1455, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_IndexError)
!1841 = !DIGlobalVariable(name: "PyExc_KeyError", scope: !0, file: !490, line: 1480, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_KeyError)
!1842 = !DIGlobalVariable(name: "PyExc_ValueError", scope: !0, file: !490, line: 1487, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ValueError)
!1843 = !DIGlobalVariable(name: "PyExc_UnicodeError", scope: !0, file: !490, line: 1494, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UnicodeError)
!1844 = !DIGlobalVariable(name: "PyExc_UnicodeEncodeError", scope: !0, file: !490, line: 1895, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UnicodeEncodeError)
!1845 = !DIGlobalVariable(name: "PyExc_UnicodeDecodeError", scope: !0, file: !490, line: 2011, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UnicodeDecodeError)
!1846 = !DIGlobalVariable(name: "PyExc_UnicodeTranslateError", scope: !0, file: !490, line: 2110, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UnicodeTranslateError)
!1847 = !DIGlobalVariable(name: "PyExc_AssertionError", scope: !0, file: !490, line: 2134, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_AssertionError)
!1848 = !DIGlobalVariable(name: "PyExc_ArithmeticError", scope: !0, file: !490, line: 2141, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ArithmeticError)
!1849 = !DIGlobalVariable(name: "PyExc_FloatingPointError", scope: !0, file: !490, line: 2148, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_FloatingPointError)
!1850 = !DIGlobalVariable(name: "PyExc_OverflowError", scope: !0, file: !490, line: 2155, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_OverflowError)
!1851 = !DIGlobalVariable(name: "PyExc_ZeroDivisionError", scope: !0, file: !490, line: 2162, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ZeroDivisionError)
!1852 = !DIGlobalVariable(name: "PyExc_SystemError", scope: !0, file: !490, line: 2169, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_SystemError)
!1853 = !DIGlobalVariable(name: "PyExc_ReferenceError", scope: !0, file: !490, line: 2179, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ReferenceError)
!1854 = !DIGlobalVariable(name: "PyExc_MemoryError", scope: !0, file: !490, line: 2269, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_MemoryError)
!1855 = !DIGlobalVariable(name: "PyExc_BufferError", scope: !0, file: !490, line: 2275, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_BufferError)
!1856 = !DIGlobalVariable(name: "PyExc_Warning", scope: !0, file: !490, line: 2283, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_Warning)
!1857 = !DIGlobalVariable(name: "PyExc_UserWarning", scope: !0, file: !490, line: 2290, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UserWarning)
!1858 = !DIGlobalVariable(name: "PyExc_DeprecationWarning", scope: !0, file: !490, line: 2297, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_DeprecationWarning)
!1859 = !DIGlobalVariable(name: "PyExc_PendingDeprecationWarning", scope: !0, file: !490, line: 2304, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_PendingDeprecationWarning)
!1860 = !DIGlobalVariable(name: "PyExc_SyntaxWarning", scope: !0, file: !490, line: 2312, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_SyntaxWarning)
!1861 = !DIGlobalVariable(name: "PyExc_RuntimeWarning", scope: !0, file: !490, line: 2319, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_RuntimeWarning)
!1862 = !DIGlobalVariable(name: "PyExc_FutureWarning", scope: !0, file: !490, line: 2326, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_FutureWarning)
!1863 = !DIGlobalVariable(name: "PyExc_ImportWarning", scope: !0, file: !490, line: 2334, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ImportWarning)
!1864 = !DIGlobalVariable(name: "PyExc_UnicodeWarning", scope: !0, file: !490, line: 2341, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_UnicodeWarning)
!1865 = !DIGlobalVariable(name: "PyExc_BytesWarning", scope: !0, file: !490, line: 2349, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_BytesWarning)
!1866 = !DIGlobalVariable(name: "PyExc_ResourceWarning", scope: !0, file: !490, line: 2357, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ResourceWarning)
!1867 = !DIGlobalVariable(name: "PyExc_RecursionErrorInst", scope: !0, file: !490, line: 2366, type: !50, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_RecursionErrorInst)
!1868 = !DIGlobalVariable(name: "_PyExc_BaseException", scope: !0, file: !490, line: 363, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_BaseException)
!1869 = !DIGlobalVariable(name: "BaseException_methods", scope: !0, file: !490, line: 179, type: !1870, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @BaseException_methods)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1871, size: 1024, align: 64, elements: !1872)
!1871 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !294, line: 47, baseType: !293)
!1872 = !{!1873}
!1873 = !DISubrange(count: 4)
!1874 = !DIGlobalVariable(name: "with_traceback_doc", scope: !0, file: !490, line: 174, type: !1875, isLocal: true, isDefinition: true, variable: [82 x i8]* @with_traceback_doc)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 656, align: 8, elements: !1876)
!1876 = !{!1877}
!1877 = !DISubrange(count: 82)
!1878 = !DIGlobalVariable(name: "BaseException_members", scope: !0, file: !490, line: 356, type: !1879, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMemberDef]* @BaseException_members)
!1879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 640, align: 64, elements: !1880)
!1880 = !{!1881}
!1881 = !DISubrange(count: 2)
!1882 = !DIGlobalVariable(name: "BaseException_getset", scope: !0, file: !490, line: 299, type: !1883, isLocal: true, isDefinition: true, variable: [6 x %struct.PyGetSetDef]* @BaseException_getset)
!1883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1884, size: 1920, align: 64, elements: !1885)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !314, line: 17, baseType: !313)
!1885 = !{!1886}
!1886 = !DISubrange(count: 6)
!1887 = !DIGlobalVariable(name: "_PyExc_Exception", scope: !0, file: !490, line: 464, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_Exception)
!1888 = !DIGlobalVariable(name: "_PyExc_TypeError", scope: !0, file: !490, line: 471, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_TypeError)
!1889 = !DIGlobalVariable(name: "_PyExc_StopIteration", scope: !0, file: !490, line: 525, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_StopIteration)
!1890 = !DIGlobalVariable(name: "StopIteration_members", scope: !0, file: !490, line: 479, type: !1891, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMemberDef]* @StopIteration_members)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 640, align: 64, elements: !1880)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemberDef", file: !304, line: 24, baseType: !303)
!1893 = !DIGlobalVariable(name: "_PyExc_GeneratorExit", scope: !0, file: !490, line: 541, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_GeneratorExit)
!1894 = !DIGlobalVariable(name: "_PyExc_SystemExit", scope: !0, file: !490, line: 596, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_SystemExit)
!1895 = !DIGlobalVariable(name: "SystemExit_members", scope: !0, file: !490, line: 590, type: !1891, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMemberDef]* @SystemExit_members)
!1896 = !DIGlobalVariable(name: "_PyExc_KeyboardInterrupt", scope: !0, file: !490, line: 603, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_KeyboardInterrupt)
!1897 = !DIGlobalVariable(name: "_PyExc_ImportError", scope: !0, file: !490, line: 702, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ImportError)
!1898 = !DIGlobalVariable(name: "ImportError_methods", scope: !0, file: !490, line: 698, type: !1899, isLocal: true, isDefinition: true, variable: [1 x %struct.PyMethodDef]* @ImportError_methods)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1871, size: 256, align: 64, elements: !94)
!1900 = !DIGlobalVariable(name: "ImportError_members", scope: !0, file: !490, line: 688, type: !1901, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMemberDef]* @ImportError_members)
!1901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 1280, align: 64, elements: !1872)
!1902 = !DIGlobalVariable(name: "_PyExc_OSError", scope: !0, file: !490, line: 1173, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_OSError)
!1903 = !DIGlobalVariable(name: "OSError_methods", scope: !0, file: !490, line: 1161, type: !1904, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @OSError_methods)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1871, size: 512, align: 64, elements: !1880)
!1905 = !DIGlobalVariable(name: "OSError_members", scope: !0, file: !490, line: 1145, type: !1906, isLocal: true, isDefinition: true, variable: [5 x %struct.PyMemberDef]* @OSError_members)
!1906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 1600, align: 64, elements: !1907)
!1907 = !{!1908}
!1908 = !DISubrange(count: 5)
!1909 = !DIGlobalVariable(name: "OSError_getset", scope: !0, file: !490, line: 1166, type: !1910, isLocal: true, isDefinition: true, variable: [2 x %struct.PyGetSetDef]* @OSError_getset)
!1910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1884, size: 640, align: 64, elements: !1880)
!1911 = !DIGlobalVariable(name: "_PyExc_BlockingIOError", scope: !0, file: !490, line: 1183, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_BlockingIOError)
!1912 = !DIGlobalVariable(name: "_PyExc_ConnectionError", scope: !0, file: !490, line: 1185, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ConnectionError)
!1913 = !DIGlobalVariable(name: "_PyExc_ChildProcessError", scope: !0, file: !490, line: 1187, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ChildProcessError)
!1914 = !DIGlobalVariable(name: "_PyExc_BrokenPipeError", scope: !0, file: !490, line: 1189, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_BrokenPipeError)
!1915 = !DIGlobalVariable(name: "_PyExc_ConnectionAbortedError", scope: !0, file: !490, line: 1191, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ConnectionAbortedError)
!1916 = !DIGlobalVariable(name: "_PyExc_ConnectionRefusedError", scope: !0, file: !490, line: 1193, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ConnectionRefusedError)
!1917 = !DIGlobalVariable(name: "_PyExc_ConnectionResetError", scope: !0, file: !490, line: 1195, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ConnectionResetError)
!1918 = !DIGlobalVariable(name: "_PyExc_FileExistsError", scope: !0, file: !490, line: 1197, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_FileExistsError)
!1919 = !DIGlobalVariable(name: "_PyExc_FileNotFoundError", scope: !0, file: !490, line: 1199, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_FileNotFoundError)
!1920 = !DIGlobalVariable(name: "_PyExc_IsADirectoryError", scope: !0, file: !490, line: 1201, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_IsADirectoryError)
!1921 = !DIGlobalVariable(name: "_PyExc_NotADirectoryError", scope: !0, file: !490, line: 1203, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_NotADirectoryError)
!1922 = !DIGlobalVariable(name: "_PyExc_InterruptedError", scope: !0, file: !490, line: 1205, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_InterruptedError)
!1923 = !DIGlobalVariable(name: "_PyExc_PermissionError", scope: !0, file: !490, line: 1207, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_PermissionError)
!1924 = !DIGlobalVariable(name: "_PyExc_ProcessLookupError", scope: !0, file: !490, line: 1209, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ProcessLookupError)
!1925 = !DIGlobalVariable(name: "_PyExc_TimeoutError", scope: !0, file: !490, line: 1211, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_TimeoutError)
!1926 = !DIGlobalVariable(name: "_PyExc_EOFError", scope: !0, file: !490, line: 1217, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_EOFError)
!1927 = !DIGlobalVariable(name: "_PyExc_RuntimeError", scope: !0, file: !490, line: 1224, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_RuntimeError)
!1928 = !DIGlobalVariable(name: "_PyExc_NotImplementedError", scope: !0, file: !490, line: 1231, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_NotImplementedError)
!1929 = !DIGlobalVariable(name: "_PyExc_NameError", scope: !0, file: !490, line: 1237, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_NameError)
!1930 = !DIGlobalVariable(name: "_PyExc_UnboundLocalError", scope: !0, file: !490, line: 1243, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UnboundLocalError)
!1931 = !DIGlobalVariable(name: "_PyExc_AttributeError", scope: !0, file: !490, line: 1249, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_AttributeError)
!1932 = !DIGlobalVariable(name: "_PyExc_SyntaxError", scope: !0, file: !490, line: 1426, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_SyntaxError)
!1933 = !DIGlobalVariable(name: "SyntaxError_members", scope: !0, file: !490, line: 1409, type: !1934, isLocal: true, isDefinition: true, variable: [7 x %struct.PyMemberDef]* @SyntaxError_members)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 2240, align: 64, elements: !1935)
!1935 = !{!1936}
!1936 = !DISubrange(count: 7)
!1937 = !DIGlobalVariable(name: "_PyExc_IndentationError", scope: !0, file: !490, line: 1434, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_IndentationError)
!1938 = !DIGlobalVariable(name: "_PyExc_TabError", scope: !0, file: !490, line: 1441, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_TabError)
!1939 = !DIGlobalVariable(name: "_PyExc_LookupError", scope: !0, file: !490, line: 1448, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_LookupError)
!1940 = !DIGlobalVariable(name: "_PyExc_IndexError", scope: !0, file: !490, line: 1455, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_IndexError)
!1941 = !DIGlobalVariable(name: "_PyExc_KeyError", scope: !0, file: !490, line: 1480, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_KeyError)
!1942 = !DIGlobalVariable(name: "_PyExc_ValueError", scope: !0, file: !490, line: 1487, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ValueError)
!1943 = !DIGlobalVariable(name: "_PyExc_UnicodeError", scope: !0, file: !490, line: 1494, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UnicodeError)
!1944 = !DIGlobalVariable(name: "_PyExc_UnicodeEncodeError", scope: !0, file: !490, line: 1883, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UnicodeEncodeError)
!1945 = !DIGlobalVariable(name: "UnicodeError_members", scope: !0, file: !490, line: 1777, type: !1946, isLocal: true, isDefinition: true, variable: [6 x %struct.PyMemberDef]* @UnicodeError_members)
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 1920, align: 64, elements: !1885)
!1947 = !DIGlobalVariable(name: "_PyExc_UnicodeDecodeError", scope: !0, file: !490, line: 1999, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UnicodeDecodeError)
!1948 = !DIGlobalVariable(name: "_PyExc_UnicodeTranslateError", scope: !0, file: !490, line: 2098, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UnicodeTranslateError)
!1949 = !DIGlobalVariable(name: "_PyExc_AssertionError", scope: !0, file: !490, line: 2134, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_AssertionError)
!1950 = !DIGlobalVariable(name: "_PyExc_ArithmeticError", scope: !0, file: !490, line: 2141, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ArithmeticError)
!1951 = !DIGlobalVariable(name: "_PyExc_FloatingPointError", scope: !0, file: !490, line: 2148, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_FloatingPointError)
!1952 = !DIGlobalVariable(name: "_PyExc_OverflowError", scope: !0, file: !490, line: 2155, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_OverflowError)
!1953 = !DIGlobalVariable(name: "_PyExc_ZeroDivisionError", scope: !0, file: !490, line: 2162, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ZeroDivisionError)
!1954 = !DIGlobalVariable(name: "_PyExc_SystemError", scope: !0, file: !490, line: 2169, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_SystemError)
!1955 = !DIGlobalVariable(name: "_PyExc_ReferenceError", scope: !0, file: !490, line: 2179, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ReferenceError)
!1956 = !DIGlobalVariable(name: "_PyExc_MemoryError", scope: !0, file: !490, line: 2257, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_MemoryError)
!1957 = !DIGlobalVariable(name: "memerrors_numfree", scope: !0, file: !490, line: 2189, type: !56, isLocal: true, isDefinition: true, variable: i32* @memerrors_numfree)
!1958 = !DIGlobalVariable(name: "memerrors_freelist", scope: !0, file: !490, line: 2188, type: !11, isLocal: true, isDefinition: true, variable: %struct.PyBaseExceptionObject** @memerrors_freelist)
!1959 = !DIGlobalVariable(name: "_PyExc_BufferError", scope: !0, file: !490, line: 2275, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_BufferError)
!1960 = !DIGlobalVariable(name: "_PyExc_Warning", scope: !0, file: !490, line: 2283, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_Warning)
!1961 = !DIGlobalVariable(name: "_PyExc_UserWarning", scope: !0, file: !490, line: 2290, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UserWarning)
!1962 = !DIGlobalVariable(name: "_PyExc_DeprecationWarning", scope: !0, file: !490, line: 2297, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_DeprecationWarning)
!1963 = !DIGlobalVariable(name: "_PyExc_PendingDeprecationWarning", scope: !0, file: !490, line: 2304, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_PendingDeprecationWarning)
!1964 = !DIGlobalVariable(name: "_PyExc_SyntaxWarning", scope: !0, file: !490, line: 2312, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_SyntaxWarning)
!1965 = !DIGlobalVariable(name: "_PyExc_RuntimeWarning", scope: !0, file: !490, line: 2319, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_RuntimeWarning)
!1966 = !DIGlobalVariable(name: "_PyExc_FutureWarning", scope: !0, file: !490, line: 2326, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_FutureWarning)
!1967 = !DIGlobalVariable(name: "_PyExc_ImportWarning", scope: !0, file: !490, line: 2334, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ImportWarning)
!1968 = !DIGlobalVariable(name: "_PyExc_UnicodeWarning", scope: !0, file: !490, line: 2341, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_UnicodeWarning)
!1969 = !DIGlobalVariable(name: "_PyExc_BytesWarning", scope: !0, file: !490, line: 2349, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_BytesWarning)
!1970 = !DIGlobalVariable(name: "_PyExc_ResourceWarning", scope: !0, file: !490, line: 2357, type: !405, isLocal: true, isDefinition: true, variable: %struct._typeobject* @_PyExc_ResourceWarning)
!1971 = !DIGlobalVariable(name: "errnomap", scope: !0, file: !490, line: 21, type: !50, isLocal: true, isDefinition: true, variable: %struct._object** @errnomap)
!1972 = !{i32 2, !"Dwarf Version", i32 4}
!1973 = !{i32 2, !"Debug Info Version", i32 3}
!1974 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!1975 = !{!1976, !1976, i64 0}
!1976 = !{!"any pointer", !1977, i64 0}
!1977 = !{!"omnipotent char", !1978, i64 0}
!1978 = !{!"Simple C/C++ TBAA"}
!1979 = !DIExpression()
!1980 = !DILocation(line: 312, column: 36, scope: !489)
!1981 = !DILocation(line: 313, column: 5, scope: !489)
!1982 = !DILocation(line: 313, column: 28, scope: !489)
!1983 = !DILocation(line: 313, column: 65, scope: !489)
!1984 = !DILocation(line: 313, column: 40, scope: !489)
!1985 = !DILocation(line: 314, column: 5, scope: !489)
!1986 = !DILocation(line: 314, column: 10, scope: !1987)
!1987 = !DILexicalBlockFile(scope: !495, file: !490, discriminator: 1)
!1988 = !DILocation(line: 314, column: 20, scope: !495)
!1989 = !DILocation(line: 314, column: 51, scope: !495)
!1990 = !DILocation(line: 314, column: 62, scope: !495)
!1991 = !{!1992, !1976, i64 32}
!1992 = !{!"", !1993, i64 0, !1976, i64 16, !1976, i64 24, !1976, i64 32, !1976, i64 40, !1976, i64 48, !1977, i64 56}
!1993 = !{!"_object", !1994, i64 0, !1976, i64 8}
!1994 = !{!"long", !1977, i64 0}
!1995 = !DILocation(line: 314, column: 78, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !495, file: !490, line: 314, column: 78)
!1997 = !DILocation(line: 314, column: 94, scope: !1996)
!1998 = !DILocation(line: 314, column: 78, scope: !495)
!1999 = !DILocation(line: 314, column: 125, scope: !2000)
!2000 = !DILexicalBlockFile(scope: !1996, file: !490, discriminator: 2)
!2001 = !DILocation(line: 314, column: 144, scope: !1996)
!2002 = !DILocation(line: 314, column: 153, scope: !1996)
!2003 = !{!1993, !1994, i64 0}
!2004 = !DILocation(line: 314, column: 109, scope: !1996)
!2005 = !DILocation(line: 314, column: 158, scope: !2006)
!2006 = !DILexicalBlockFile(scope: !2007, file: !490, discriminator: 4)
!2007 = !DILexicalBlockFile(scope: !489, file: !490, discriminator: 3)
!2008 = !DILocation(line: 314, column: 158, scope: !495)
!2009 = !DILocation(line: 314, column: 158, scope: !2010)
!2010 = !DILexicalBlockFile(scope: !495, file: !490, discriminator: 5)
!2011 = !DILocation(line: 315, column: 12, scope: !489)
!2012 = !DILocation(line: 315, column: 23, scope: !489)
!2013 = !DILocation(line: 316, column: 1, scope: !489)
!2014 = !DILocation(line: 315, column: 5, scope: !489)
!2015 = !DILocation(line: 320, column: 36, scope: !496)
!2016 = !DILocation(line: 320, column: 52, scope: !496)
!2017 = !DILocation(line: 321, column: 58, scope: !496)
!2018 = !DILocation(line: 321, column: 33, scope: !496)
!2019 = !DILocation(line: 321, column: 64, scope: !496)
!2020 = !DILocation(line: 321, column: 12, scope: !496)
!2021 = !DILocation(line: 321, column: 5, scope: !496)
!2022 = !DILocation(line: 226, column: 45, scope: !844)
!2023 = !DILocation(line: 226, column: 61, scope: !844)
!2024 = !DILocation(line: 228, column: 9, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !844, file: !490, line: 228, column: 9)
!2026 = !DILocation(line: 228, column: 12, scope: !2025)
!2027 = !DILocation(line: 228, column: 9, scope: !844)
!2028 = !DILocation(line: 229, column: 25, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !2025, file: !490, line: 228, column: 27)
!2030 = !DILocation(line: 229, column: 9, scope: !2029)
!2031 = !DILocation(line: 230, column: 9, scope: !2029)
!2032 = !DILocation(line: 232, column: 16, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !2025, file: !490, line: 232, column: 14)
!2034 = !DILocation(line: 232, column: 19, scope: !2033)
!2035 = !DILocation(line: 232, column: 40, scope: !2033)
!2036 = !DILocation(line: 232, column: 58, scope: !2037)
!2037 = !DILexicalBlockFile(scope: !2033, file: !490, discriminator: 1)
!2038 = !DILocation(line: 232, column: 64, scope: !2033)
!2039 = !{!1993, !1976, i64 8}
!2040 = !DILocation(line: 232, column: 73, scope: !2033)
!2041 = !DILocation(line: 232, column: 14, scope: !2025)
!2042 = !DILocation(line: 233, column: 25, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !2033, file: !490, line: 232, column: 97)
!2044 = !DILocation(line: 233, column: 9, scope: !2043)
!2045 = !DILocation(line: 235, column: 9, scope: !2043)
!2046 = !DILocation(line: 238, column: 5, scope: !844)
!2047 = !DILocation(line: 238, column: 10, scope: !2048)
!2048 = !DILexicalBlockFile(scope: !851, file: !490, discriminator: 1)
!2049 = !DILocation(line: 238, column: 20, scope: !851)
!2050 = !DILocation(line: 238, column: 51, scope: !851)
!2051 = !DILocation(line: 238, column: 60, scope: !2052)
!2052 = distinct !DILexicalBlock(scope: !851, file: !490, line: 238, column: 60)
!2053 = !DILocation(line: 238, column: 76, scope: !2052)
!2054 = !DILocation(line: 238, column: 60, scope: !851)
!2055 = !DILocation(line: 238, column: 107, scope: !2056)
!2056 = !DILexicalBlockFile(scope: !2052, file: !490, discriminator: 2)
!2057 = !DILocation(line: 238, column: 126, scope: !2052)
!2058 = !DILocation(line: 238, column: 135, scope: !2052)
!2059 = !DILocation(line: 238, column: 91, scope: !2052)
!2060 = !DILocation(line: 238, column: 140, scope: !2061)
!2061 = !DILexicalBlockFile(scope: !2062, file: !490, discriminator: 4)
!2062 = !DILexicalBlockFile(scope: !844, file: !490, discriminator: 3)
!2063 = !DILocation(line: 238, column: 140, scope: !851)
!2064 = !DILocation(line: 239, column: 5, scope: !844)
!2065 = !DILocation(line: 239, column: 10, scope: !2066)
!2066 = !DILexicalBlockFile(scope: !853, file: !490, discriminator: 1)
!2067 = !DILocation(line: 239, column: 20, scope: !853)
!2068 = !DILocation(line: 239, column: 51, scope: !853)
!2069 = !DILocation(line: 239, column: 57, scope: !853)
!2070 = !DILocation(line: 239, column: 73, scope: !856)
!2071 = !DILocation(line: 239, column: 89, scope: !856)
!2072 = !DILocation(line: 239, column: 73, scope: !853)
!2073 = !DILocation(line: 239, column: 104, scope: !2074)
!2074 = !DILexicalBlockFile(scope: !856, file: !490, discriminator: 2)
!2075 = !DILocation(line: 239, column: 109, scope: !2076)
!2076 = !DILexicalBlockFile(scope: !855, file: !490, discriminator: 4)
!2077 = !DILocation(line: 239, column: 119, scope: !855)
!2078 = !DILocation(line: 239, column: 149, scope: !855)
!2079 = !DILocation(line: 239, column: 175, scope: !2080)
!2080 = distinct !DILexicalBlock(scope: !855, file: !490, line: 239, column: 172)
!2081 = !DILocation(line: 239, column: 192, scope: !2080)
!2082 = !DILocation(line: 239, column: 172, scope: !2080)
!2083 = !DILocation(line: 239, column: 202, scope: !2080)
!2084 = !DILocation(line: 239, column: 172, scope: !855)
!2085 = !DILocation(line: 239, column: 172, scope: !2086)
!2086 = !DILexicalBlockFile(scope: !855, file: !490, discriminator: 5)
!2087 = !DILocation(line: 239, column: 233, scope: !2088)
!2088 = !DILexicalBlockFile(scope: !2080, file: !490, discriminator: 6)
!2089 = !DILocation(line: 239, column: 251, scope: !2080)
!2090 = !DILocation(line: 239, column: 261, scope: !2080)
!2091 = !{!2092, !1976, i64 48}
!2092 = !{!"_typeobject", !2093, i64 0, !1976, i64 24, !1994, i64 32, !1994, i64 40, !1976, i64 48, !1976, i64 56, !1976, i64 64, !1976, i64 72, !1976, i64 80, !1976, i64 88, !1976, i64 96, !1976, i64 104, !1976, i64 112, !1976, i64 120, !1976, i64 128, !1976, i64 136, !1976, i64 144, !1976, i64 152, !1976, i64 160, !1994, i64 168, !1976, i64 176, !1976, i64 184, !1976, i64 192, !1976, i64 200, !1994, i64 208, !1976, i64 216, !1976, i64 224, !1976, i64 232, !1976, i64 240, !1976, i64 248, !1976, i64 256, !1976, i64 264, !1976, i64 272, !1976, i64 280, !1994, i64 288, !1976, i64 296, !1976, i64 304, !1976, i64 312, !1976, i64 320, !1976, i64 328, !1976, i64 336, !1976, i64 344, !1976, i64 352, !1976, i64 360, !1976, i64 368, !1976, i64 376, !2094, i64 384, !1976, i64 392}
!2093 = !{!"", !1993, i64 0, !1994, i64 16}
!2094 = !{!"int", !1977, i64 0}
!2095 = !DILocation(line: 239, column: 286, scope: !2080)
!2096 = !DILocation(line: 239, column: 217, scope: !2080)
!2097 = !DILocation(line: 239, column: 305, scope: !2098)
!2098 = !DILexicalBlockFile(scope: !856, file: !490, discriminator: 7)
!2099 = !DILocation(line: 239, column: 305, scope: !855)
!2100 = !DILocation(line: 239, column: 305, scope: !2101)
!2101 = !DILexicalBlockFile(scope: !855, file: !490, discriminator: 8)
!2102 = !DILocation(line: 239, column: 305, scope: !2103)
!2103 = !DILexicalBlockFile(scope: !855, file: !490, discriminator: 9)
!2104 = !DILocation(line: 239, column: 318, scope: !2105)
!2105 = !DILexicalBlockFile(scope: !2062, file: !490, discriminator: 10)
!2106 = !DILocation(line: 239, column: 318, scope: !853)
!2107 = !DILocation(line: 240, column: 23, scope: !844)
!2108 = !DILocation(line: 240, column: 5, scope: !844)
!2109 = !DILocation(line: 240, column: 11, scope: !844)
!2110 = !DILocation(line: 240, column: 21, scope: !844)
!2111 = !DILocation(line: 241, column: 5, scope: !844)
!2112 = !DILocation(line: 242, column: 1, scope: !844)
!2113 = !DILocation(line: 325, column: 32, scope: !500)
!2114 = !DILocation(line: 326, column: 5, scope: !500)
!2115 = !DILocation(line: 326, column: 15, scope: !500)
!2116 = !DILocation(line: 326, column: 49, scope: !500)
!2117 = !DILocation(line: 326, column: 24, scope: !500)
!2118 = !DILocation(line: 326, column: 56, scope: !500)
!2119 = !{!1992, !1976, i64 48}
!2120 = !DILocation(line: 327, column: 5, scope: !500)
!2121 = !DILocation(line: 327, column: 10, scope: !2122)
!2122 = !DILexicalBlockFile(scope: !505, file: !490, discriminator: 1)
!2123 = !DILocation(line: 327, column: 20, scope: !505)
!2124 = !DILocation(line: 327, column: 51, scope: !505)
!2125 = !DILocation(line: 327, column: 63, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !505, file: !490, line: 327, column: 63)
!2127 = !DILocation(line: 327, column: 79, scope: !2126)
!2128 = !DILocation(line: 327, column: 63, scope: !505)
!2129 = !DILocation(line: 327, column: 110, scope: !2130)
!2130 = !DILexicalBlockFile(scope: !2126, file: !490, discriminator: 2)
!2131 = !DILocation(line: 327, column: 129, scope: !2126)
!2132 = !DILocation(line: 327, column: 138, scope: !2126)
!2133 = !DILocation(line: 327, column: 94, scope: !2126)
!2134 = !DILocation(line: 327, column: 143, scope: !2135)
!2135 = !DILexicalBlockFile(scope: !2136, file: !490, discriminator: 4)
!2136 = !DILexicalBlockFile(scope: !500, file: !490, discriminator: 3)
!2137 = !DILocation(line: 327, column: 143, scope: !505)
!2138 = !DILocation(line: 327, column: 143, scope: !2139)
!2139 = !DILexicalBlockFile(scope: !505, file: !490, discriminator: 5)
!2140 = !DILocation(line: 328, column: 12, scope: !500)
!2141 = !DILocation(line: 329, column: 1, scope: !500)
!2142 = !DILocation(line: 328, column: 5, scope: !500)
!2143 = !DILocation(line: 333, column: 32, scope: !506)
!2144 = !DILocation(line: 333, column: 48, scope: !506)
!2145 = !DILocation(line: 334, column: 5, scope: !506)
!2146 = !DILocation(line: 334, column: 15, scope: !506)
!2147 = !DILocation(line: 334, column: 53, scope: !506)
!2148 = !DILocation(line: 334, column: 28, scope: !506)
!2149 = !DILocation(line: 334, column: 60, scope: !506)
!2150 = !DILocation(line: 335, column: 46, scope: !506)
!2151 = !DILocation(line: 335, column: 31, scope: !506)
!2152 = !DILocation(line: 335, column: 6, scope: !506)
!2153 = !DILocation(line: 335, column: 38, scope: !506)
!2154 = !DILocation(line: 335, column: 44, scope: !506)
!2155 = !DILocation(line: 336, column: 31, scope: !506)
!2156 = !DILocation(line: 336, column: 6, scope: !506)
!2157 = !DILocation(line: 336, column: 38, scope: !506)
!2158 = !DILocation(line: 336, column: 55, scope: !506)
!2159 = !{!1992, !1977, i64 56}
!2160 = !DILocation(line: 337, column: 5, scope: !506)
!2161 = !DILocation(line: 337, column: 10, scope: !2162)
!2162 = !DILexicalBlockFile(scope: !514, file: !490, discriminator: 1)
!2163 = !DILocation(line: 337, column: 20, scope: !514)
!2164 = !DILocation(line: 337, column: 51, scope: !514)
!2165 = !DILocation(line: 337, column: 67, scope: !517)
!2166 = !DILocation(line: 337, column: 83, scope: !517)
!2167 = !DILocation(line: 337, column: 67, scope: !514)
!2168 = !DILocation(line: 337, column: 98, scope: !2169)
!2169 = !DILexicalBlockFile(scope: !517, file: !490, discriminator: 2)
!2170 = !DILocation(line: 337, column: 103, scope: !2171)
!2171 = !DILexicalBlockFile(scope: !516, file: !490, discriminator: 4)
!2172 = !DILocation(line: 337, column: 113, scope: !516)
!2173 = !DILocation(line: 337, column: 143, scope: !516)
!2174 = !DILocation(line: 337, column: 169, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !516, file: !490, line: 337, column: 166)
!2176 = !DILocation(line: 337, column: 186, scope: !2175)
!2177 = !DILocation(line: 337, column: 166, scope: !2175)
!2178 = !DILocation(line: 337, column: 196, scope: !2175)
!2179 = !DILocation(line: 337, column: 166, scope: !516)
!2180 = !DILocation(line: 337, column: 166, scope: !2181)
!2181 = !DILexicalBlockFile(scope: !516, file: !490, discriminator: 5)
!2182 = !DILocation(line: 337, column: 227, scope: !2183)
!2183 = !DILexicalBlockFile(scope: !2175, file: !490, discriminator: 6)
!2184 = !DILocation(line: 337, column: 245, scope: !2175)
!2185 = !DILocation(line: 337, column: 255, scope: !2175)
!2186 = !DILocation(line: 337, column: 280, scope: !2175)
!2187 = !DILocation(line: 337, column: 211, scope: !2175)
!2188 = !DILocation(line: 337, column: 299, scope: !2189)
!2189 = !DILexicalBlockFile(scope: !517, file: !490, discriminator: 7)
!2190 = !DILocation(line: 337, column: 299, scope: !516)
!2191 = !DILocation(line: 337, column: 299, scope: !2192)
!2192 = !DILexicalBlockFile(scope: !516, file: !490, discriminator: 8)
!2193 = !DILocation(line: 337, column: 299, scope: !2194)
!2194 = !DILexicalBlockFile(scope: !516, file: !490, discriminator: 9)
!2195 = !DILocation(line: 337, column: 312, scope: !2196)
!2196 = !DILexicalBlockFile(scope: !2197, file: !490, discriminator: 10)
!2197 = !DILexicalBlockFile(scope: !506, file: !490, discriminator: 3)
!2198 = !DILocation(line: 337, column: 312, scope: !514)
!2199 = !DILocation(line: 337, column: 312, scope: !2200)
!2200 = !DILexicalBlockFile(scope: !514, file: !490, discriminator: 11)
!2201 = !DILocation(line: 338, column: 1, scope: !506)
!2202 = !DILocation(line: 341, column: 34, scope: !518)
!2203 = !DILocation(line: 342, column: 5, scope: !518)
!2204 = !DILocation(line: 342, column: 15, scope: !518)
!2205 = !DILocation(line: 342, column: 51, scope: !518)
!2206 = !DILocation(line: 342, column: 26, scope: !518)
!2207 = !DILocation(line: 342, column: 58, scope: !518)
!2208 = !{!1992, !1976, i64 40}
!2209 = !DILocation(line: 343, column: 5, scope: !518)
!2210 = !DILocation(line: 343, column: 10, scope: !2211)
!2211 = !DILexicalBlockFile(scope: !523, file: !490, discriminator: 1)
!2212 = !DILocation(line: 343, column: 20, scope: !523)
!2213 = !DILocation(line: 343, column: 51, scope: !523)
!2214 = !DILocation(line: 343, column: 65, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !523, file: !490, line: 343, column: 65)
!2216 = !DILocation(line: 343, column: 81, scope: !2215)
!2217 = !DILocation(line: 343, column: 65, scope: !523)
!2218 = !DILocation(line: 343, column: 112, scope: !2219)
!2219 = !DILexicalBlockFile(scope: !2215, file: !490, discriminator: 2)
!2220 = !DILocation(line: 343, column: 131, scope: !2215)
!2221 = !DILocation(line: 343, column: 140, scope: !2215)
!2222 = !DILocation(line: 343, column: 96, scope: !2215)
!2223 = !DILocation(line: 343, column: 145, scope: !2224)
!2224 = !DILexicalBlockFile(scope: !2225, file: !490, discriminator: 4)
!2225 = !DILexicalBlockFile(scope: !518, file: !490, discriminator: 3)
!2226 = !DILocation(line: 343, column: 145, scope: !523)
!2227 = !DILocation(line: 343, column: 145, scope: !2228)
!2228 = !DILexicalBlockFile(scope: !523, file: !490, discriminator: 5)
!2229 = !DILocation(line: 344, column: 12, scope: !518)
!2230 = !DILocation(line: 345, column: 1, scope: !518)
!2231 = !DILocation(line: 344, column: 5, scope: !518)
!2232 = !DILocation(line: 349, column: 34, scope: !524)
!2233 = !DILocation(line: 349, column: 50, scope: !524)
!2234 = !DILocation(line: 350, column: 5, scope: !524)
!2235 = !DILocation(line: 350, column: 15, scope: !524)
!2236 = !DILocation(line: 350, column: 55, scope: !524)
!2237 = !DILocation(line: 350, column: 30, scope: !524)
!2238 = !DILocation(line: 350, column: 62, scope: !524)
!2239 = !DILocation(line: 351, column: 48, scope: !524)
!2240 = !DILocation(line: 351, column: 31, scope: !524)
!2241 = !DILocation(line: 351, column: 6, scope: !524)
!2242 = !DILocation(line: 351, column: 38, scope: !524)
!2243 = !DILocation(line: 351, column: 46, scope: !524)
!2244 = !DILocation(line: 352, column: 5, scope: !524)
!2245 = !DILocation(line: 352, column: 10, scope: !2246)
!2246 = !DILexicalBlockFile(scope: !530, file: !490, discriminator: 1)
!2247 = !DILocation(line: 352, column: 20, scope: !530)
!2248 = !DILocation(line: 352, column: 51, scope: !530)
!2249 = !DILocation(line: 352, column: 69, scope: !533)
!2250 = !DILocation(line: 352, column: 85, scope: !533)
!2251 = !DILocation(line: 352, column: 69, scope: !530)
!2252 = !DILocation(line: 352, column: 100, scope: !2253)
!2253 = !DILexicalBlockFile(scope: !533, file: !490, discriminator: 2)
!2254 = !DILocation(line: 352, column: 105, scope: !2255)
!2255 = !DILexicalBlockFile(scope: !532, file: !490, discriminator: 4)
!2256 = !DILocation(line: 352, column: 115, scope: !532)
!2257 = !DILocation(line: 352, column: 145, scope: !532)
!2258 = !DILocation(line: 352, column: 171, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !532, file: !490, line: 352, column: 168)
!2260 = !DILocation(line: 352, column: 188, scope: !2259)
!2261 = !DILocation(line: 352, column: 168, scope: !2259)
!2262 = !DILocation(line: 352, column: 198, scope: !2259)
!2263 = !DILocation(line: 352, column: 168, scope: !532)
!2264 = !DILocation(line: 352, column: 168, scope: !2265)
!2265 = !DILexicalBlockFile(scope: !532, file: !490, discriminator: 5)
!2266 = !DILocation(line: 352, column: 229, scope: !2267)
!2267 = !DILexicalBlockFile(scope: !2259, file: !490, discriminator: 6)
!2268 = !DILocation(line: 352, column: 247, scope: !2259)
!2269 = !DILocation(line: 352, column: 257, scope: !2259)
!2270 = !DILocation(line: 352, column: 282, scope: !2259)
!2271 = !DILocation(line: 352, column: 213, scope: !2259)
!2272 = !DILocation(line: 352, column: 301, scope: !2273)
!2273 = !DILexicalBlockFile(scope: !533, file: !490, discriminator: 7)
!2274 = !DILocation(line: 352, column: 301, scope: !532)
!2275 = !DILocation(line: 352, column: 301, scope: !2276)
!2276 = !DILexicalBlockFile(scope: !532, file: !490, discriminator: 8)
!2277 = !DILocation(line: 352, column: 301, scope: !2278)
!2278 = !DILexicalBlockFile(scope: !532, file: !490, discriminator: 9)
!2279 = !DILocation(line: 352, column: 314, scope: !2280)
!2280 = !DILexicalBlockFile(scope: !2281, file: !490, discriminator: 10)
!2281 = !DILexicalBlockFile(scope: !524, file: !490, discriminator: 3)
!2282 = !DILocation(line: 352, column: 314, scope: !530)
!2283 = !DILocation(line: 352, column: 314, scope: !2284)
!2284 = !DILexicalBlockFile(scope: !530, file: !490, discriminator: 11)
!2285 = !DILocation(line: 353, column: 1, scope: !524)
!2286 = !DILocation(line: 1542, column: 44, scope: !534)
!2287 = !DILocation(line: 1544, column: 49, scope: !534)
!2288 = !DILocation(line: 1544, column: 25, scope: !534)
!2289 = !DILocation(line: 1544, column: 55, scope: !534)
!2290 = !{!2291, !1976, i64 64}
!2291 = !{!"", !1993, i64 0, !1976, i64 16, !1976, i64 24, !1976, i64 32, !1976, i64 40, !1976, i64 48, !1977, i64 56, !1976, i64 64, !1976, i64 72, !1994, i64 80, !1994, i64 88, !1976, i64 96}
!2292 = !DILocation(line: 1544, column: 12, scope: !534)
!2293 = !DILocation(line: 1544, column: 5, scope: !534)
!2294 = !DILocation(line: 1514, column: 23, scope: !1554)
!2295 = !DILocation(line: 1514, column: 41, scope: !1554)
!2296 = !DILocation(line: 1516, column: 10, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !1554, file: !490, line: 1516, column: 9)
!2298 = !DILocation(line: 1516, column: 9, scope: !1554)
!2299 = !DILocation(line: 1517, column: 22, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2297, file: !490, line: 1516, column: 16)
!2301 = !DILocation(line: 1517, column: 67, scope: !2300)
!2302 = !DILocation(line: 1517, column: 9, scope: !2300)
!2303 = !DILocation(line: 1518, column: 9, scope: !2300)
!2304 = !DILocation(line: 1521, column: 27, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !1554, file: !490, line: 1521, column: 9)
!2306 = !DILocation(line: 1521, column: 35, scope: !2305)
!2307 = !DILocation(line: 1521, column: 46, scope: !2305)
!2308 = !{!2092, !1994, i64 168}
!2309 = !DILocation(line: 1521, column: 55, scope: !2305)
!2310 = !DILocation(line: 1521, column: 72, scope: !2305)
!2311 = !DILocation(line: 1521, column: 9, scope: !1554)
!2312 = !DILocation(line: 1522, column: 22, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2305, file: !490, line: 1521, column: 79)
!2314 = !DILocation(line: 1523, column: 58, scope: !2313)
!2315 = !DILocation(line: 1522, column: 9, scope: !2313)
!2316 = !DILocation(line: 1524, column: 9, scope: !2313)
!2317 = !DILocation(line: 1526, column: 21, scope: !1554)
!2318 = !DILocation(line: 1526, column: 29, scope: !1554)
!2319 = !DILocation(line: 1526, column: 38, scope: !1554)
!2320 = !DILocation(line: 1527, column: 12, scope: !1554)
!2321 = !DILocation(line: 1527, column: 5, scope: !1554)
!2322 = !DILocation(line: 1528, column: 1, scope: !1554)
!2323 = !DILocation(line: 1548, column: 44, scope: !537)
!2324 = !DILocation(line: 1550, column: 49, scope: !537)
!2325 = !DILocation(line: 1550, column: 25, scope: !537)
!2326 = !DILocation(line: 1550, column: 55, scope: !537)
!2327 = !DILocation(line: 1550, column: 12, scope: !537)
!2328 = !DILocation(line: 1550, column: 5, scope: !537)
!2329 = !DILocation(line: 1554, column: 42, scope: !540)
!2330 = !DILocation(line: 1556, column: 49, scope: !540)
!2331 = !DILocation(line: 1556, column: 25, scope: !540)
!2332 = !DILocation(line: 1556, column: 55, scope: !540)
!2333 = !{!2291, !1976, i64 72}
!2334 = !DILocation(line: 1556, column: 12, scope: !540)
!2335 = !DILocation(line: 1556, column: 5, scope: !540)
!2336 = !DILocation(line: 1560, column: 42, scope: !543)
!2337 = !DILocation(line: 1562, column: 48, scope: !543)
!2338 = !DILocation(line: 1562, column: 24, scope: !543)
!2339 = !DILocation(line: 1562, column: 54, scope: !543)
!2340 = !DILocation(line: 1562, column: 12, scope: !543)
!2341 = !DILocation(line: 1562, column: 5, scope: !543)
!2342 = !DILocation(line: 1498, column: 22, scope: !1560)
!2343 = !DILocation(line: 1498, column: 40, scope: !1560)
!2344 = !DILocation(line: 1500, column: 10, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !1560, file: !490, line: 1500, column: 9)
!2346 = !DILocation(line: 1500, column: 9, scope: !1560)
!2347 = !DILocation(line: 1501, column: 22, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2345, file: !490, line: 1500, column: 16)
!2349 = !DILocation(line: 1501, column: 67, scope: !2348)
!2350 = !DILocation(line: 1501, column: 9, scope: !2348)
!2351 = !DILocation(line: 1502, column: 9, scope: !2348)
!2352 = !DILocation(line: 1505, column: 27, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !1560, file: !490, line: 1505, column: 9)
!2354 = !DILocation(line: 1505, column: 35, scope: !2353)
!2355 = !DILocation(line: 1505, column: 46, scope: !2353)
!2356 = !DILocation(line: 1505, column: 55, scope: !2353)
!2357 = !DILocation(line: 1505, column: 72, scope: !2353)
!2358 = !DILocation(line: 1505, column: 9, scope: !1560)
!2359 = !DILocation(line: 1506, column: 22, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2353, file: !490, line: 1505, column: 79)
!2361 = !DILocation(line: 1506, column: 73, scope: !2360)
!2362 = !DILocation(line: 1506, column: 9, scope: !2360)
!2363 = !DILocation(line: 1507, column: 9, scope: !2360)
!2364 = !DILocation(line: 1509, column: 21, scope: !1560)
!2365 = !DILocation(line: 1509, column: 29, scope: !1560)
!2366 = !DILocation(line: 1509, column: 38, scope: !1560)
!2367 = !DILocation(line: 1510, column: 12, scope: !1560)
!2368 = !DILocation(line: 1510, column: 5, scope: !1560)
!2369 = !DILocation(line: 1511, column: 1, scope: !1560)
!2370 = !DILocation(line: 1566, column: 45, scope: !546)
!2371 = !DILocation(line: 1568, column: 49, scope: !546)
!2372 = !DILocation(line: 1568, column: 25, scope: !546)
!2373 = !DILocation(line: 1568, column: 55, scope: !546)
!2374 = !DILocation(line: 1568, column: 12, scope: !546)
!2375 = !DILocation(line: 1568, column: 5, scope: !546)
!2376 = !DILocation(line: 1572, column: 41, scope: !549)
!2377 = !DILocation(line: 1572, column: 58, scope: !549)
!2378 = !DILocation(line: 1574, column: 5, scope: !549)
!2379 = !DILocation(line: 1574, column: 16, scope: !549)
!2380 = !DILocation(line: 1575, column: 5, scope: !549)
!2381 = !DILocation(line: 1575, column: 15, scope: !549)
!2382 = !DILocation(line: 1575, column: 58, scope: !549)
!2383 = !DILocation(line: 1575, column: 34, scope: !549)
!2384 = !DILocation(line: 1575, column: 64, scope: !549)
!2385 = !DILocation(line: 1575, column: 21, scope: !549)
!2386 = !DILocation(line: 1577, column: 10, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !549, file: !490, line: 1577, column: 9)
!2388 = !DILocation(line: 1577, column: 9, scope: !549)
!2389 = !DILocation(line: 1578, column: 9, scope: !2387)
!2390 = !DILocation(line: 1579, column: 39, scope: !549)
!2391 = !DILocation(line: 1579, column: 15, scope: !549)
!2392 = !DILocation(line: 1579, column: 45, scope: !549)
!2393 = !{!2291, !1994, i64 80}
!2394 = !DILocation(line: 1579, column: 6, scope: !549)
!2395 = !DILocation(line: 1579, column: 12, scope: !549)
!2396 = !{!1994, !1994, i64 0}
!2397 = !DILocation(line: 1580, column: 60, scope: !549)
!2398 = !DILocation(line: 1580, column: 42, scope: !549)
!2399 = !DILocation(line: 1580, column: 67, scope: !549)
!2400 = !{!2401, !1994, i64 16}
!2401 = !{!"", !1993, i64 0, !1994, i64 16, !1994, i64 24, !2402, i64 32, !1976, i64 40}
!2402 = !{!"", !2094, i64 0, !2094, i64 0, !2094, i64 0, !2094, i64 0, !2094, i64 0, !2094, i64 1}
!2403 = !DILocation(line: 1580, column: 10, scope: !549)
!2404 = !DILocation(line: 1581, column: 10, scope: !2405)
!2405 = distinct !DILexicalBlock(scope: !549, file: !490, line: 1581, column: 9)
!2406 = !DILocation(line: 1581, column: 9, scope: !2405)
!2407 = !DILocation(line: 1581, column: 15, scope: !2405)
!2408 = !DILocation(line: 1581, column: 9, scope: !549)
!2409 = !DILocation(line: 1582, column: 10, scope: !2405)
!2410 = !DILocation(line: 1582, column: 16, scope: !2405)
!2411 = !DILocation(line: 1582, column: 9, scope: !2405)
!2412 = !DILocation(line: 1583, column: 10, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !549, file: !490, line: 1583, column: 9)
!2414 = !DILocation(line: 1583, column: 9, scope: !2413)
!2415 = !DILocation(line: 1583, column: 17, scope: !2413)
!2416 = !DILocation(line: 1583, column: 15, scope: !2413)
!2417 = !DILocation(line: 1583, column: 9, scope: !549)
!2418 = !DILocation(line: 1584, column: 18, scope: !2413)
!2419 = !DILocation(line: 1584, column: 22, scope: !2413)
!2420 = !DILocation(line: 1584, column: 10, scope: !2413)
!2421 = !DILocation(line: 1584, column: 16, scope: !2413)
!2422 = !DILocation(line: 1584, column: 9, scope: !2413)
!2423 = !DILocation(line: 1585, column: 5, scope: !549)
!2424 = !DILocation(line: 1585, column: 10, scope: !2425)
!2425 = !DILexicalBlockFile(scope: !558, file: !490, discriminator: 1)
!2426 = !DILocation(line: 1585, column: 20, scope: !558)
!2427 = !DILocation(line: 1585, column: 50, scope: !558)
!2428 = !DILocation(line: 1585, column: 64, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !558, file: !490, line: 1585, column: 61)
!2430 = !DILocation(line: 1585, column: 81, scope: !2429)
!2431 = !DILocation(line: 1585, column: 61, scope: !2429)
!2432 = !DILocation(line: 1585, column: 91, scope: !2429)
!2433 = !DILocation(line: 1585, column: 61, scope: !558)
!2434 = !DILocation(line: 1585, column: 61, scope: !2435)
!2435 = !DILexicalBlockFile(scope: !558, file: !490, discriminator: 2)
!2436 = !DILocation(line: 1585, column: 122, scope: !2437)
!2437 = !DILexicalBlockFile(scope: !2429, file: !490, discriminator: 3)
!2438 = !DILocation(line: 1585, column: 140, scope: !2429)
!2439 = !DILocation(line: 1585, column: 150, scope: !2429)
!2440 = !DILocation(line: 1585, column: 175, scope: !2429)
!2441 = !DILocation(line: 1585, column: 106, scope: !2429)
!2442 = !DILocation(line: 1585, column: 194, scope: !2443)
!2443 = !DILexicalBlockFile(scope: !549, file: !490, discriminator: 4)
!2444 = !DILocation(line: 1585, column: 194, scope: !558)
!2445 = !DILocation(line: 1585, column: 194, scope: !2446)
!2446 = !DILexicalBlockFile(scope: !558, file: !490, discriminator: 5)
!2447 = !DILocation(line: 1586, column: 5, scope: !549)
!2448 = !DILocation(line: 1587, column: 1, scope: !549)
!2449 = !DILocation(line: 1591, column: 41, scope: !559)
!2450 = !DILocation(line: 1591, column: 58, scope: !559)
!2451 = !DILocation(line: 1593, column: 5, scope: !559)
!2452 = !DILocation(line: 1593, column: 16, scope: !559)
!2453 = !DILocation(line: 1594, column: 5, scope: !559)
!2454 = !DILocation(line: 1594, column: 15, scope: !559)
!2455 = !DILocation(line: 1594, column: 57, scope: !559)
!2456 = !DILocation(line: 1594, column: 33, scope: !559)
!2457 = !DILocation(line: 1594, column: 63, scope: !559)
!2458 = !DILocation(line: 1594, column: 21, scope: !559)
!2459 = !DILocation(line: 1595, column: 10, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !559, file: !490, line: 1595, column: 9)
!2461 = !DILocation(line: 1595, column: 9, scope: !559)
!2462 = !DILocation(line: 1596, column: 9, scope: !2460)
!2463 = !DILocation(line: 1597, column: 43, scope: !559)
!2464 = !DILocation(line: 1597, column: 28, scope: !559)
!2465 = !DILocation(line: 1597, column: 50, scope: !559)
!2466 = !{!2093, !1994, i64 16}
!2467 = !DILocation(line: 1597, column: 10, scope: !559)
!2468 = !DILocation(line: 1598, column: 39, scope: !559)
!2469 = !DILocation(line: 1598, column: 15, scope: !559)
!2470 = !DILocation(line: 1598, column: 45, scope: !559)
!2471 = !DILocation(line: 1598, column: 6, scope: !559)
!2472 = !DILocation(line: 1598, column: 12, scope: !559)
!2473 = !DILocation(line: 1599, column: 10, scope: !2474)
!2474 = distinct !DILexicalBlock(scope: !559, file: !490, line: 1599, column: 9)
!2475 = !DILocation(line: 1599, column: 9, scope: !2474)
!2476 = !DILocation(line: 1599, column: 15, scope: !2474)
!2477 = !DILocation(line: 1599, column: 9, scope: !559)
!2478 = !DILocation(line: 1600, column: 10, scope: !2474)
!2479 = !DILocation(line: 1600, column: 16, scope: !2474)
!2480 = !DILocation(line: 1600, column: 9, scope: !2474)
!2481 = !DILocation(line: 1601, column: 10, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !559, file: !490, line: 1601, column: 9)
!2483 = !DILocation(line: 1601, column: 9, scope: !2482)
!2484 = !DILocation(line: 1601, column: 17, scope: !2482)
!2485 = !DILocation(line: 1601, column: 15, scope: !2482)
!2486 = !DILocation(line: 1601, column: 9, scope: !559)
!2487 = !DILocation(line: 1602, column: 18, scope: !2482)
!2488 = !DILocation(line: 1602, column: 22, scope: !2482)
!2489 = !DILocation(line: 1602, column: 10, scope: !2482)
!2490 = !DILocation(line: 1602, column: 16, scope: !2482)
!2491 = !DILocation(line: 1602, column: 9, scope: !2482)
!2492 = !DILocation(line: 1603, column: 5, scope: !559)
!2493 = !DILocation(line: 1603, column: 10, scope: !2494)
!2494 = !DILexicalBlockFile(scope: !566, file: !490, discriminator: 1)
!2495 = !DILocation(line: 1603, column: 20, scope: !566)
!2496 = !DILocation(line: 1603, column: 50, scope: !566)
!2497 = !DILocation(line: 1603, column: 64, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !566, file: !490, line: 1603, column: 61)
!2499 = !DILocation(line: 1603, column: 81, scope: !2498)
!2500 = !DILocation(line: 1603, column: 61, scope: !2498)
!2501 = !DILocation(line: 1603, column: 91, scope: !2498)
!2502 = !DILocation(line: 1603, column: 61, scope: !566)
!2503 = !DILocation(line: 1603, column: 61, scope: !2504)
!2504 = !DILexicalBlockFile(scope: !566, file: !490, discriminator: 2)
!2505 = !DILocation(line: 1603, column: 122, scope: !2506)
!2506 = !DILexicalBlockFile(scope: !2498, file: !490, discriminator: 3)
!2507 = !DILocation(line: 1603, column: 140, scope: !2498)
!2508 = !DILocation(line: 1603, column: 150, scope: !2498)
!2509 = !DILocation(line: 1603, column: 175, scope: !2498)
!2510 = !DILocation(line: 1603, column: 106, scope: !2498)
!2511 = !DILocation(line: 1603, column: 194, scope: !2512)
!2512 = !DILexicalBlockFile(scope: !559, file: !490, discriminator: 4)
!2513 = !DILocation(line: 1603, column: 194, scope: !566)
!2514 = !DILocation(line: 1603, column: 194, scope: !2515)
!2515 = !DILexicalBlockFile(scope: !566, file: !490, discriminator: 5)
!2516 = !DILocation(line: 1604, column: 5, scope: !559)
!2517 = !DILocation(line: 1605, column: 1, scope: !559)
!2518 = !DILocation(line: 1609, column: 44, scope: !567)
!2519 = !DILocation(line: 1609, column: 61, scope: !567)
!2520 = !DILocation(line: 1611, column: 42, scope: !567)
!2521 = !DILocation(line: 1611, column: 47, scope: !567)
!2522 = !DILocation(line: 1611, column: 12, scope: !567)
!2523 = !DILocation(line: 1611, column: 5, scope: !567)
!2524 = !DILocation(line: 1616, column: 41, scope: !571)
!2525 = !DILocation(line: 1616, column: 57, scope: !571)
!2526 = !DILocation(line: 1618, column: 44, scope: !571)
!2527 = !DILocation(line: 1618, column: 30, scope: !571)
!2528 = !DILocation(line: 1618, column: 6, scope: !571)
!2529 = !DILocation(line: 1618, column: 36, scope: !571)
!2530 = !DILocation(line: 1618, column: 42, scope: !571)
!2531 = !DILocation(line: 1619, column: 5, scope: !571)
!2532 = !DILocation(line: 1624, column: 41, scope: !577)
!2533 = !DILocation(line: 1624, column: 57, scope: !577)
!2534 = !DILocation(line: 1626, column: 44, scope: !577)
!2535 = !DILocation(line: 1626, column: 30, scope: !577)
!2536 = !DILocation(line: 1626, column: 6, scope: !577)
!2537 = !DILocation(line: 1626, column: 36, scope: !577)
!2538 = !DILocation(line: 1626, column: 42, scope: !577)
!2539 = !DILocation(line: 1627, column: 5, scope: !577)
!2540 = !DILocation(line: 1632, column: 44, scope: !581)
!2541 = !DILocation(line: 1632, column: 60, scope: !581)
!2542 = !DILocation(line: 1634, column: 44, scope: !581)
!2543 = !DILocation(line: 1634, column: 30, scope: !581)
!2544 = !DILocation(line: 1634, column: 6, scope: !581)
!2545 = !DILocation(line: 1634, column: 36, scope: !581)
!2546 = !DILocation(line: 1634, column: 42, scope: !581)
!2547 = !DILocation(line: 1635, column: 5, scope: !581)
!2548 = !DILocation(line: 1640, column: 39, scope: !585)
!2549 = !DILocation(line: 1640, column: 56, scope: !585)
!2550 = !DILocation(line: 1642, column: 5, scope: !585)
!2551 = !DILocation(line: 1642, column: 16, scope: !585)
!2552 = !DILocation(line: 1643, column: 5, scope: !585)
!2553 = !DILocation(line: 1643, column: 15, scope: !585)
!2554 = !DILocation(line: 1643, column: 58, scope: !585)
!2555 = !DILocation(line: 1643, column: 34, scope: !585)
!2556 = !DILocation(line: 1643, column: 64, scope: !585)
!2557 = !DILocation(line: 1643, column: 21, scope: !585)
!2558 = !DILocation(line: 1645, column: 10, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !585, file: !490, line: 1645, column: 9)
!2560 = !DILocation(line: 1645, column: 9, scope: !585)
!2561 = !DILocation(line: 1646, column: 9, scope: !2559)
!2562 = !DILocation(line: 1647, column: 37, scope: !585)
!2563 = !DILocation(line: 1647, column: 13, scope: !585)
!2564 = !DILocation(line: 1647, column: 43, scope: !585)
!2565 = !{!2291, !1994, i64 88}
!2566 = !DILocation(line: 1647, column: 6, scope: !585)
!2567 = !DILocation(line: 1647, column: 10, scope: !585)
!2568 = !DILocation(line: 1648, column: 60, scope: !585)
!2569 = !DILocation(line: 1648, column: 42, scope: !585)
!2570 = !DILocation(line: 1648, column: 67, scope: !585)
!2571 = !DILocation(line: 1648, column: 10, scope: !585)
!2572 = !DILocation(line: 1649, column: 10, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !585, file: !490, line: 1649, column: 9)
!2574 = !DILocation(line: 1649, column: 9, scope: !2573)
!2575 = !DILocation(line: 1649, column: 13, scope: !2573)
!2576 = !DILocation(line: 1649, column: 9, scope: !585)
!2577 = !DILocation(line: 1650, column: 10, scope: !2573)
!2578 = !DILocation(line: 1650, column: 14, scope: !2573)
!2579 = !DILocation(line: 1650, column: 9, scope: !2573)
!2580 = !DILocation(line: 1651, column: 10, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !585, file: !490, line: 1651, column: 9)
!2582 = !DILocation(line: 1651, column: 9, scope: !2581)
!2583 = !DILocation(line: 1651, column: 14, scope: !2581)
!2584 = !DILocation(line: 1651, column: 13, scope: !2581)
!2585 = !DILocation(line: 1651, column: 9, scope: !585)
!2586 = !DILocation(line: 1652, column: 16, scope: !2581)
!2587 = !DILocation(line: 1652, column: 10, scope: !2581)
!2588 = !DILocation(line: 1652, column: 14, scope: !2581)
!2589 = !DILocation(line: 1652, column: 9, scope: !2581)
!2590 = !DILocation(line: 1653, column: 5, scope: !585)
!2591 = !DILocation(line: 1653, column: 10, scope: !2592)
!2592 = !DILexicalBlockFile(scope: !592, file: !490, discriminator: 1)
!2593 = !DILocation(line: 1653, column: 20, scope: !592)
!2594 = !DILocation(line: 1653, column: 50, scope: !592)
!2595 = !DILocation(line: 1653, column: 64, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !592, file: !490, line: 1653, column: 61)
!2597 = !DILocation(line: 1653, column: 81, scope: !2596)
!2598 = !DILocation(line: 1653, column: 61, scope: !2596)
!2599 = !DILocation(line: 1653, column: 91, scope: !2596)
!2600 = !DILocation(line: 1653, column: 61, scope: !592)
!2601 = !DILocation(line: 1653, column: 61, scope: !2602)
!2602 = !DILexicalBlockFile(scope: !592, file: !490, discriminator: 2)
!2603 = !DILocation(line: 1653, column: 122, scope: !2604)
!2604 = !DILexicalBlockFile(scope: !2596, file: !490, discriminator: 3)
!2605 = !DILocation(line: 1653, column: 140, scope: !2596)
!2606 = !DILocation(line: 1653, column: 150, scope: !2596)
!2607 = !DILocation(line: 1653, column: 175, scope: !2596)
!2608 = !DILocation(line: 1653, column: 106, scope: !2596)
!2609 = !DILocation(line: 1653, column: 194, scope: !2610)
!2610 = !DILexicalBlockFile(scope: !585, file: !490, discriminator: 4)
!2611 = !DILocation(line: 1653, column: 194, scope: !592)
!2612 = !DILocation(line: 1653, column: 194, scope: !2613)
!2613 = !DILexicalBlockFile(scope: !592, file: !490, discriminator: 5)
!2614 = !DILocation(line: 1654, column: 5, scope: !585)
!2615 = !DILocation(line: 1655, column: 1, scope: !585)
!2616 = !DILocation(line: 1659, column: 39, scope: !593)
!2617 = !DILocation(line: 1659, column: 56, scope: !593)
!2618 = !DILocation(line: 1661, column: 5, scope: !593)
!2619 = !DILocation(line: 1661, column: 16, scope: !593)
!2620 = !DILocation(line: 1662, column: 5, scope: !593)
!2621 = !DILocation(line: 1662, column: 15, scope: !593)
!2622 = !DILocation(line: 1662, column: 57, scope: !593)
!2623 = !DILocation(line: 1662, column: 33, scope: !593)
!2624 = !DILocation(line: 1662, column: 63, scope: !593)
!2625 = !DILocation(line: 1662, column: 21, scope: !593)
!2626 = !DILocation(line: 1663, column: 10, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !593, file: !490, line: 1663, column: 9)
!2628 = !DILocation(line: 1663, column: 9, scope: !593)
!2629 = !DILocation(line: 1664, column: 9, scope: !2627)
!2630 = !DILocation(line: 1665, column: 43, scope: !593)
!2631 = !DILocation(line: 1665, column: 28, scope: !593)
!2632 = !DILocation(line: 1665, column: 50, scope: !593)
!2633 = !DILocation(line: 1665, column: 10, scope: !593)
!2634 = !DILocation(line: 1666, column: 37, scope: !593)
!2635 = !DILocation(line: 1666, column: 13, scope: !593)
!2636 = !DILocation(line: 1666, column: 43, scope: !593)
!2637 = !DILocation(line: 1666, column: 6, scope: !593)
!2638 = !DILocation(line: 1666, column: 10, scope: !593)
!2639 = !DILocation(line: 1667, column: 10, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !593, file: !490, line: 1667, column: 9)
!2641 = !DILocation(line: 1667, column: 9, scope: !2640)
!2642 = !DILocation(line: 1667, column: 13, scope: !2640)
!2643 = !DILocation(line: 1667, column: 9, scope: !593)
!2644 = !DILocation(line: 1668, column: 10, scope: !2640)
!2645 = !DILocation(line: 1668, column: 14, scope: !2640)
!2646 = !DILocation(line: 1668, column: 9, scope: !2640)
!2647 = !DILocation(line: 1669, column: 10, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !593, file: !490, line: 1669, column: 9)
!2649 = !DILocation(line: 1669, column: 9, scope: !2648)
!2650 = !DILocation(line: 1669, column: 14, scope: !2648)
!2651 = !DILocation(line: 1669, column: 13, scope: !2648)
!2652 = !DILocation(line: 1669, column: 9, scope: !593)
!2653 = !DILocation(line: 1670, column: 16, scope: !2648)
!2654 = !DILocation(line: 1670, column: 10, scope: !2648)
!2655 = !DILocation(line: 1670, column: 14, scope: !2648)
!2656 = !DILocation(line: 1670, column: 9, scope: !2648)
!2657 = !DILocation(line: 1671, column: 5, scope: !593)
!2658 = !DILocation(line: 1671, column: 10, scope: !2659)
!2659 = !DILexicalBlockFile(scope: !600, file: !490, discriminator: 1)
!2660 = !DILocation(line: 1671, column: 20, scope: !600)
!2661 = !DILocation(line: 1671, column: 50, scope: !600)
!2662 = !DILocation(line: 1671, column: 64, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !600, file: !490, line: 1671, column: 61)
!2664 = !DILocation(line: 1671, column: 81, scope: !2663)
!2665 = !DILocation(line: 1671, column: 61, scope: !2663)
!2666 = !DILocation(line: 1671, column: 91, scope: !2663)
!2667 = !DILocation(line: 1671, column: 61, scope: !600)
!2668 = !DILocation(line: 1671, column: 61, scope: !2669)
!2669 = !DILexicalBlockFile(scope: !600, file: !490, discriminator: 2)
!2670 = !DILocation(line: 1671, column: 122, scope: !2671)
!2671 = !DILexicalBlockFile(scope: !2663, file: !490, discriminator: 3)
!2672 = !DILocation(line: 1671, column: 140, scope: !2663)
!2673 = !DILocation(line: 1671, column: 150, scope: !2663)
!2674 = !DILocation(line: 1671, column: 175, scope: !2663)
!2675 = !DILocation(line: 1671, column: 106, scope: !2663)
!2676 = !DILocation(line: 1671, column: 194, scope: !2677)
!2677 = !DILexicalBlockFile(scope: !593, file: !490, discriminator: 4)
!2678 = !DILocation(line: 1671, column: 194, scope: !600)
!2679 = !DILocation(line: 1671, column: 194, scope: !2680)
!2680 = !DILexicalBlockFile(scope: !600, file: !490, discriminator: 5)
!2681 = !DILocation(line: 1672, column: 5, scope: !593)
!2682 = !DILocation(line: 1673, column: 1, scope: !593)
!2683 = !DILocation(line: 1677, column: 42, scope: !601)
!2684 = !DILocation(line: 1677, column: 59, scope: !601)
!2685 = !DILocation(line: 1679, column: 40, scope: !601)
!2686 = !DILocation(line: 1679, column: 45, scope: !601)
!2687 = !DILocation(line: 1679, column: 12, scope: !601)
!2688 = !DILocation(line: 1679, column: 5, scope: !601)
!2689 = !DILocation(line: 1684, column: 39, scope: !605)
!2690 = !DILocation(line: 1684, column: 55, scope: !605)
!2691 = !DILocation(line: 1686, column: 42, scope: !605)
!2692 = !DILocation(line: 1686, column: 30, scope: !605)
!2693 = !DILocation(line: 1686, column: 6, scope: !605)
!2694 = !DILocation(line: 1686, column: 36, scope: !605)
!2695 = !DILocation(line: 1686, column: 40, scope: !605)
!2696 = !DILocation(line: 1687, column: 5, scope: !605)
!2697 = !DILocation(line: 1692, column: 39, scope: !609)
!2698 = !DILocation(line: 1692, column: 55, scope: !609)
!2699 = !DILocation(line: 1694, column: 42, scope: !609)
!2700 = !DILocation(line: 1694, column: 30, scope: !609)
!2701 = !DILocation(line: 1694, column: 6, scope: !609)
!2702 = !DILocation(line: 1694, column: 36, scope: !609)
!2703 = !DILocation(line: 1694, column: 40, scope: !609)
!2704 = !DILocation(line: 1695, column: 5, scope: !609)
!2705 = !DILocation(line: 1700, column: 42, scope: !613)
!2706 = !DILocation(line: 1700, column: 58, scope: !613)
!2707 = !DILocation(line: 1702, column: 42, scope: !613)
!2708 = !DILocation(line: 1702, column: 30, scope: !613)
!2709 = !DILocation(line: 1702, column: 6, scope: !613)
!2710 = !DILocation(line: 1702, column: 36, scope: !613)
!2711 = !DILocation(line: 1702, column: 40, scope: !613)
!2712 = !DILocation(line: 1703, column: 5, scope: !613)
!2713 = !DILocation(line: 1707, column: 42, scope: !617)
!2714 = !DILocation(line: 1709, column: 49, scope: !617)
!2715 = !DILocation(line: 1709, column: 25, scope: !617)
!2716 = !DILocation(line: 1709, column: 55, scope: !617)
!2717 = !{!2291, !1976, i64 96}
!2718 = !DILocation(line: 1709, column: 12, scope: !617)
!2719 = !DILocation(line: 1709, column: 5, scope: !617)
!2720 = !DILocation(line: 1714, column: 42, scope: !620)
!2721 = !DILocation(line: 1716, column: 49, scope: !620)
!2722 = !DILocation(line: 1716, column: 25, scope: !620)
!2723 = !DILocation(line: 1716, column: 55, scope: !620)
!2724 = !DILocation(line: 1716, column: 12, scope: !620)
!2725 = !DILocation(line: 1716, column: 5, scope: !620)
!2726 = !DILocation(line: 1721, column: 45, scope: !623)
!2727 = !DILocation(line: 1723, column: 49, scope: !623)
!2728 = !DILocation(line: 1723, column: 25, scope: !623)
!2729 = !DILocation(line: 1723, column: 55, scope: !623)
!2730 = !DILocation(line: 1723, column: 12, scope: !623)
!2731 = !DILocation(line: 1723, column: 5, scope: !623)
!2732 = !DILocation(line: 1728, column: 42, scope: !626)
!2733 = !DILocation(line: 1728, column: 59, scope: !626)
!2734 = !DILocation(line: 1730, column: 60, scope: !626)
!2735 = !DILocation(line: 1730, column: 36, scope: !626)
!2736 = !DILocation(line: 1730, column: 66, scope: !626)
!2737 = !DILocation(line: 1731, column: 34, scope: !626)
!2738 = !DILocation(line: 1730, column: 12, scope: !626)
!2739 = !DILocation(line: 1730, column: 5, scope: !626)
!2740 = !DILocation(line: 1531, column: 34, scope: !1564)
!2741 = !DILocation(line: 1531, column: 52, scope: !1564)
!2742 = !DILocation(line: 1533, column: 5, scope: !1564)
!2743 = !DILocation(line: 1533, column: 15, scope: !1564)
!2744 = !DILocation(line: 1533, column: 42, scope: !1564)
!2745 = !DILocation(line: 1533, column: 21, scope: !1564)
!2746 = !DILocation(line: 1534, column: 10, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !1564, file: !490, line: 1534, column: 9)
!2748 = !DILocation(line: 1534, column: 9, scope: !1564)
!2749 = !DILocation(line: 1535, column: 9, scope: !2747)
!2750 = !DILocation(line: 1536, column: 5, scope: !1564)
!2751 = !DILocation(line: 1536, column: 10, scope: !2752)
!2752 = !DILexicalBlockFile(scope: !1572, file: !490, discriminator: 1)
!2753 = !DILocation(line: 1536, column: 20, scope: !1572)
!2754 = !DILocation(line: 1536, column: 44, scope: !1572)
!2755 = !DILocation(line: 1536, column: 43, scope: !1572)
!2756 = !DILocation(line: 1536, column: 55, scope: !1576)
!2757 = !DILocation(line: 1536, column: 63, scope: !1576)
!2758 = !DILocation(line: 1536, column: 55, scope: !1572)
!2759 = !DILocation(line: 1536, column: 82, scope: !2760)
!2760 = !DILexicalBlockFile(scope: !1575, file: !490, discriminator: 2)
!2761 = !DILocation(line: 1536, column: 88, scope: !1575)
!2762 = !DILocation(line: 1536, column: 102, scope: !1575)
!2763 = !DILocation(line: 1536, column: 107, scope: !2764)
!2764 = !DILexicalBlockFile(scope: !1574, file: !490, discriminator: 4)
!2765 = !DILocation(line: 1536, column: 117, scope: !1574)
!2766 = !DILocation(line: 1536, column: 147, scope: !1574)
!2767 = !DILocation(line: 1536, column: 165, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !1574, file: !490, line: 1536, column: 162)
!2769 = !DILocation(line: 1536, column: 182, scope: !2768)
!2770 = !DILocation(line: 1536, column: 162, scope: !2768)
!2771 = !DILocation(line: 1536, column: 192, scope: !2768)
!2772 = !DILocation(line: 1536, column: 162, scope: !1574)
!2773 = !DILocation(line: 1536, column: 162, scope: !2774)
!2774 = !DILexicalBlockFile(scope: !1574, file: !490, discriminator: 5)
!2775 = !DILocation(line: 1536, column: 223, scope: !2776)
!2776 = !DILexicalBlockFile(scope: !2768, file: !490, discriminator: 6)
!2777 = !DILocation(line: 1536, column: 241, scope: !2768)
!2778 = !DILocation(line: 1536, column: 251, scope: !2768)
!2779 = !DILocation(line: 1536, column: 276, scope: !2768)
!2780 = !DILocation(line: 1536, column: 207, scope: !2768)
!2781 = !DILocation(line: 1536, column: 295, scope: !2782)
!2782 = !DILexicalBlockFile(scope: !1575, file: !490, discriminator: 7)
!2783 = !DILocation(line: 1536, column: 295, scope: !1574)
!2784 = !DILocation(line: 1536, column: 295, scope: !2785)
!2785 = !DILexicalBlockFile(scope: !1574, file: !490, discriminator: 8)
!2786 = !DILocation(line: 1536, column: 308, scope: !2787)
!2787 = !DILexicalBlockFile(scope: !1575, file: !490, discriminator: 9)
!2788 = !DILocation(line: 1536, column: 310, scope: !2789)
!2789 = !DILexicalBlockFile(scope: !2790, file: !490, discriminator: 10)
!2790 = !DILexicalBlockFile(scope: !1564, file: !490, discriminator: 3)
!2791 = !DILocation(line: 1536, column: 310, scope: !1572)
!2792 = !DILocation(line: 1536, column: 310, scope: !2793)
!2793 = !DILexicalBlockFile(scope: !1572, file: !490, discriminator: 11)
!2794 = !DILocation(line: 1537, column: 13, scope: !1564)
!2795 = !DILocation(line: 1537, column: 6, scope: !1564)
!2796 = !DILocation(line: 1537, column: 11, scope: !1564)
!2797 = !DILocation(line: 1538, column: 5, scope: !1564)
!2798 = !DILocation(line: 1539, column: 1, scope: !1564)
!2799 = !DILocation(line: 1736, column: 42, scope: !632)
!2800 = !DILocation(line: 1736, column: 59, scope: !632)
!2801 = !DILocation(line: 1738, column: 60, scope: !632)
!2802 = !DILocation(line: 1738, column: 36, scope: !632)
!2803 = !DILocation(line: 1738, column: 66, scope: !632)
!2804 = !DILocation(line: 1739, column: 34, scope: !632)
!2805 = !DILocation(line: 1738, column: 12, scope: !632)
!2806 = !DILocation(line: 1738, column: 5, scope: !632)
!2807 = !DILocation(line: 1744, column: 45, scope: !636)
!2808 = !DILocation(line: 1744, column: 62, scope: !636)
!2809 = !DILocation(line: 1746, column: 60, scope: !636)
!2810 = !DILocation(line: 1746, column: 36, scope: !636)
!2811 = !DILocation(line: 1746, column: 66, scope: !636)
!2812 = !DILocation(line: 1747, column: 34, scope: !636)
!2813 = !DILocation(line: 1746, column: 12, scope: !636)
!2814 = !DILocation(line: 1746, column: 5, scope: !636)
!2815 = !DILocation(line: 1899, column: 17, scope: !640)
!2816 = !DILocation(line: 1899, column: 45, scope: !640)
!2817 = !DILocation(line: 1899, column: 64, scope: !640)
!2818 = !DILocation(line: 1900, column: 16, scope: !640)
!2819 = !DILocation(line: 1900, column: 34, scope: !640)
!2820 = !DILocation(line: 1900, column: 51, scope: !640)
!2821 = !DILocation(line: 1902, column: 41, scope: !640)
!2822 = !DILocation(line: 1903, column: 34, scope: !640)
!2823 = !DILocation(line: 1903, column: 44, scope: !640)
!2824 = !DILocation(line: 1903, column: 52, scope: !640)
!2825 = !DILocation(line: 1903, column: 60, scope: !640)
!2826 = !DILocation(line: 1903, column: 67, scope: !640)
!2827 = !DILocation(line: 1903, column: 72, scope: !640)
!2828 = !DILocation(line: 1902, column: 12, scope: !640)
!2829 = !DILocation(line: 1902, column: 5, scope: !640)
!2830 = !DILocation(line: 2015, column: 17, scope: !653)
!2831 = !DILocation(line: 2015, column: 39, scope: !653)
!2832 = !DILocation(line: 2015, column: 58, scope: !653)
!2833 = !DILocation(line: 2016, column: 16, scope: !653)
!2834 = !DILocation(line: 2016, column: 34, scope: !653)
!2835 = !DILocation(line: 2016, column: 51, scope: !653)
!2836 = !DILocation(line: 2018, column: 41, scope: !653)
!2837 = !DILocation(line: 2019, column: 34, scope: !653)
!2838 = !DILocation(line: 2019, column: 44, scope: !653)
!2839 = !DILocation(line: 2019, column: 52, scope: !653)
!2840 = !DILocation(line: 2019, column: 60, scope: !653)
!2841 = !DILocation(line: 2019, column: 67, scope: !653)
!2842 = !DILocation(line: 2019, column: 72, scope: !653)
!2843 = !DILocation(line: 2018, column: 12, scope: !653)
!2844 = !DILocation(line: 2018, column: 5, scope: !653)
!2845 = !DILocation(line: 2115, column: 23, scope: !663)
!2846 = !DILocation(line: 2115, column: 42, scope: !663)
!2847 = !DILocation(line: 2116, column: 16, scope: !663)
!2848 = !DILocation(line: 2116, column: 34, scope: !663)
!2849 = !DILocation(line: 2116, column: 51, scope: !663)
!2850 = !DILocation(line: 2118, column: 41, scope: !663)
!2851 = !DILocation(line: 2119, column: 34, scope: !663)
!2852 = !DILocation(line: 2119, column: 42, scope: !663)
!2853 = !DILocation(line: 2119, column: 50, scope: !663)
!2854 = !DILocation(line: 2119, column: 57, scope: !663)
!2855 = !DILocation(line: 2119, column: 62, scope: !663)
!2856 = !DILocation(line: 2118, column: 12, scope: !663)
!2857 = !DILocation(line: 2118, column: 5, scope: !663)
!2858 = !DILocation(line: 2124, column: 15, scope: !672)
!2859 = !DILocation(line: 2125, column: 16, scope: !672)
!2860 = !DILocation(line: 2125, column: 34, scope: !672)
!2861 = !DILocation(line: 2125, column: 51, scope: !672)
!2862 = !DILocation(line: 2127, column: 41, scope: !672)
!2863 = !DILocation(line: 2128, column: 34, scope: !672)
!2864 = !DILocation(line: 2128, column: 42, scope: !672)
!2865 = !DILocation(line: 2128, column: 49, scope: !672)
!2866 = !DILocation(line: 2128, column: 54, scope: !672)
!2867 = !DILocation(line: 2127, column: 12, scope: !672)
!2868 = !DILocation(line: 2127, column: 5, scope: !672)
!2869 = !DILocation(line: 2450, column: 23, scope: !680)
!2870 = !DILocation(line: 2452, column: 5, scope: !680)
!2871 = !DILocation(line: 2452, column: 15, scope: !680)
!2872 = !DILocation(line: 2454, column: 32, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2454, column: 9)
!2874 = !DILocation(line: 2454, column: 41, scope: !2873)
!2875 = !DILocation(line: 2454, column: 9, scope: !680)
!2876 = !DILocation(line: 2454, column: 63, scope: !2877)
!2877 = !DILexicalBlockFile(scope: !2878, file: !490, discriminator: 1)
!2878 = distinct !DILexicalBlock(scope: !2879, file: !490, line: 2454, column: 63)
!2879 = distinct !DILexicalBlock(scope: !2873, file: !490, line: 2454, column: 57)
!2880 = !DILocation(line: 2454, column: 99, scope: !2878)
!2881 = !DILocation(line: 2454, column: 63, scope: !2879)
!2882 = !DILocation(line: 2454, column: 104, scope: !2883)
!2883 = !DILexicalBlockFile(scope: !2878, file: !490, discriminator: 2)
!2884 = !DILocation(line: 2454, column: 170, scope: !2885)
!2885 = !DILexicalBlockFile(scope: !2879, file: !490, discriminator: 3)
!2886 = !DILocation(line: 2454, column: 193, scope: !2879)
!2887 = !DILocation(line: 2454, column: 202, scope: !2879)
!2888 = !DILocation(line: 2454, column: 207, scope: !2879)
!2889 = !DILocation(line: 2455, column: 28, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2455, column: 9)
!2891 = !DILocation(line: 2455, column: 37, scope: !2890)
!2892 = !DILocation(line: 2455, column: 9, scope: !680)
!2893 = !DILocation(line: 2455, column: 59, scope: !2894)
!2894 = !DILexicalBlockFile(scope: !2895, file: !490, discriminator: 1)
!2895 = distinct !DILexicalBlock(scope: !2896, file: !490, line: 2455, column: 59)
!2896 = distinct !DILexicalBlock(scope: !2890, file: !490, line: 2455, column: 53)
!2897 = !DILocation(line: 2455, column: 91, scope: !2895)
!2898 = !DILocation(line: 2455, column: 59, scope: !2896)
!2899 = !DILocation(line: 2455, column: 96, scope: !2900)
!2900 = !DILexicalBlockFile(scope: !2895, file: !490, discriminator: 2)
!2901 = !DILocation(line: 2455, column: 162, scope: !2902)
!2902 = !DILexicalBlockFile(scope: !2896, file: !490, discriminator: 3)
!2903 = !DILocation(line: 2455, column: 181, scope: !2896)
!2904 = !DILocation(line: 2455, column: 190, scope: !2896)
!2905 = !DILocation(line: 2455, column: 195, scope: !2896)
!2906 = !DILocation(line: 2456, column: 28, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2456, column: 9)
!2908 = !DILocation(line: 2456, column: 37, scope: !2907)
!2909 = !DILocation(line: 2456, column: 9, scope: !680)
!2910 = !DILocation(line: 2456, column: 59, scope: !2911)
!2911 = !DILexicalBlockFile(scope: !2912, file: !490, discriminator: 1)
!2912 = distinct !DILexicalBlock(scope: !2913, file: !490, line: 2456, column: 59)
!2913 = distinct !DILexicalBlock(scope: !2907, file: !490, line: 2456, column: 53)
!2914 = !DILocation(line: 2456, column: 91, scope: !2912)
!2915 = !DILocation(line: 2456, column: 59, scope: !2913)
!2916 = !DILocation(line: 2456, column: 96, scope: !2917)
!2917 = !DILexicalBlockFile(scope: !2912, file: !490, discriminator: 2)
!2918 = !DILocation(line: 2456, column: 162, scope: !2919)
!2919 = !DILexicalBlockFile(scope: !2913, file: !490, discriminator: 3)
!2920 = !DILocation(line: 2456, column: 181, scope: !2913)
!2921 = !DILocation(line: 2456, column: 190, scope: !2913)
!2922 = !DILocation(line: 2456, column: 195, scope: !2913)
!2923 = !DILocation(line: 2457, column: 32, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2457, column: 9)
!2925 = !DILocation(line: 2457, column: 41, scope: !2924)
!2926 = !DILocation(line: 2457, column: 9, scope: !680)
!2927 = !DILocation(line: 2457, column: 63, scope: !2928)
!2928 = !DILexicalBlockFile(scope: !2929, file: !490, discriminator: 1)
!2929 = distinct !DILexicalBlock(scope: !2930, file: !490, line: 2457, column: 63)
!2930 = distinct !DILexicalBlock(scope: !2924, file: !490, line: 2457, column: 57)
!2931 = !DILocation(line: 2457, column: 99, scope: !2929)
!2932 = !DILocation(line: 2457, column: 63, scope: !2930)
!2933 = !DILocation(line: 2457, column: 104, scope: !2934)
!2934 = !DILexicalBlockFile(scope: !2929, file: !490, discriminator: 2)
!2935 = !DILocation(line: 2457, column: 170, scope: !2936)
!2936 = !DILexicalBlockFile(scope: !2930, file: !490, discriminator: 3)
!2937 = !DILocation(line: 2457, column: 193, scope: !2930)
!2938 = !DILocation(line: 2457, column: 202, scope: !2930)
!2939 = !DILocation(line: 2457, column: 207, scope: !2930)
!2940 = !DILocation(line: 2458, column: 32, scope: !2941)
!2941 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2458, column: 9)
!2942 = !DILocation(line: 2458, column: 41, scope: !2941)
!2943 = !DILocation(line: 2458, column: 9, scope: !680)
!2944 = !DILocation(line: 2458, column: 63, scope: !2945)
!2945 = !DILexicalBlockFile(scope: !2946, file: !490, discriminator: 1)
!2946 = distinct !DILexicalBlock(scope: !2947, file: !490, line: 2458, column: 63)
!2947 = distinct !DILexicalBlock(scope: !2941, file: !490, line: 2458, column: 57)
!2948 = !DILocation(line: 2458, column: 99, scope: !2946)
!2949 = !DILocation(line: 2458, column: 63, scope: !2947)
!2950 = !DILocation(line: 2458, column: 104, scope: !2951)
!2951 = !DILexicalBlockFile(scope: !2946, file: !490, discriminator: 2)
!2952 = !DILocation(line: 2458, column: 170, scope: !2953)
!2953 = !DILexicalBlockFile(scope: !2947, file: !490, discriminator: 3)
!2954 = !DILocation(line: 2458, column: 193, scope: !2947)
!2955 = !DILocation(line: 2458, column: 202, scope: !2947)
!2956 = !DILocation(line: 2458, column: 207, scope: !2947)
!2957 = !DILocation(line: 2459, column: 29, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2459, column: 9)
!2959 = !DILocation(line: 2459, column: 38, scope: !2958)
!2960 = !DILocation(line: 2459, column: 9, scope: !680)
!2961 = !DILocation(line: 2459, column: 60, scope: !2962)
!2962 = !DILexicalBlockFile(scope: !2963, file: !490, discriminator: 1)
!2963 = distinct !DILexicalBlock(scope: !2964, file: !490, line: 2459, column: 60)
!2964 = distinct !DILexicalBlock(scope: !2958, file: !490, line: 2459, column: 54)
!2965 = !DILocation(line: 2459, column: 93, scope: !2963)
!2966 = !DILocation(line: 2459, column: 60, scope: !2964)
!2967 = !DILocation(line: 2459, column: 98, scope: !2968)
!2968 = !DILexicalBlockFile(scope: !2963, file: !490, discriminator: 2)
!2969 = !DILocation(line: 2459, column: 164, scope: !2970)
!2970 = !DILexicalBlockFile(scope: !2964, file: !490, discriminator: 3)
!2971 = !DILocation(line: 2459, column: 184, scope: !2964)
!2972 = !DILocation(line: 2459, column: 193, scope: !2964)
!2973 = !DILocation(line: 2459, column: 198, scope: !2964)
!2974 = !DILocation(line: 2460, column: 36, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2460, column: 9)
!2976 = !DILocation(line: 2460, column: 45, scope: !2975)
!2977 = !DILocation(line: 2460, column: 9, scope: !680)
!2978 = !DILocation(line: 2460, column: 67, scope: !2979)
!2979 = !DILexicalBlockFile(scope: !2980, file: !490, discriminator: 1)
!2980 = distinct !DILexicalBlock(scope: !2981, file: !490, line: 2460, column: 67)
!2981 = distinct !DILexicalBlock(scope: !2975, file: !490, line: 2460, column: 61)
!2982 = !DILocation(line: 2460, column: 107, scope: !2980)
!2983 = !DILocation(line: 2460, column: 67, scope: !2981)
!2984 = !DILocation(line: 2460, column: 112, scope: !2985)
!2985 = !DILexicalBlockFile(scope: !2980, file: !490, discriminator: 2)
!2986 = !DILocation(line: 2460, column: 178, scope: !2987)
!2987 = !DILexicalBlockFile(scope: !2981, file: !490, discriminator: 3)
!2988 = !DILocation(line: 2460, column: 205, scope: !2981)
!2989 = !DILocation(line: 2460, column: 214, scope: !2981)
!2990 = !DILocation(line: 2460, column: 219, scope: !2981)
!2991 = !DILocation(line: 2461, column: 30, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2461, column: 9)
!2993 = !DILocation(line: 2461, column: 39, scope: !2992)
!2994 = !DILocation(line: 2461, column: 9, scope: !680)
!2995 = !DILocation(line: 2461, column: 61, scope: !2996)
!2996 = !DILexicalBlockFile(scope: !2997, file: !490, discriminator: 1)
!2997 = distinct !DILexicalBlock(scope: !2998, file: !490, line: 2461, column: 61)
!2998 = distinct !DILexicalBlock(scope: !2992, file: !490, line: 2461, column: 55)
!2999 = !DILocation(line: 2461, column: 95, scope: !2997)
!3000 = !DILocation(line: 2461, column: 61, scope: !2998)
!3001 = !DILocation(line: 2461, column: 100, scope: !3002)
!3002 = !DILexicalBlockFile(scope: !2997, file: !490, discriminator: 2)
!3003 = !DILocation(line: 2461, column: 166, scope: !3004)
!3004 = !DILexicalBlockFile(scope: !2998, file: !490, discriminator: 3)
!3005 = !DILocation(line: 2461, column: 187, scope: !2998)
!3006 = !DILocation(line: 2461, column: 196, scope: !2998)
!3007 = !DILocation(line: 2461, column: 201, scope: !2998)
!3008 = !DILocation(line: 2462, column: 26, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2462, column: 9)
!3010 = !DILocation(line: 2462, column: 35, scope: !3009)
!3011 = !DILocation(line: 2462, column: 9, scope: !680)
!3012 = !DILocation(line: 2462, column: 57, scope: !3013)
!3013 = !DILexicalBlockFile(scope: !3014, file: !490, discriminator: 1)
!3014 = distinct !DILexicalBlock(scope: !3015, file: !490, line: 2462, column: 57)
!3015 = distinct !DILexicalBlock(scope: !3009, file: !490, line: 2462, column: 51)
!3016 = !DILocation(line: 2462, column: 87, scope: !3014)
!3017 = !DILocation(line: 2462, column: 57, scope: !3015)
!3018 = !DILocation(line: 2462, column: 92, scope: !3019)
!3019 = !DILexicalBlockFile(scope: !3014, file: !490, discriminator: 2)
!3020 = !DILocation(line: 2462, column: 158, scope: !3021)
!3021 = !DILexicalBlockFile(scope: !3015, file: !490, discriminator: 3)
!3022 = !DILocation(line: 2462, column: 175, scope: !3015)
!3023 = !DILocation(line: 2462, column: 184, scope: !3015)
!3024 = !DILocation(line: 2462, column: 189, scope: !3015)
!3025 = !DILocation(line: 2463, column: 27, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2463, column: 9)
!3027 = !DILocation(line: 2463, column: 36, scope: !3026)
!3028 = !DILocation(line: 2463, column: 9, scope: !680)
!3029 = !DILocation(line: 2463, column: 58, scope: !3030)
!3030 = !DILexicalBlockFile(scope: !3031, file: !490, discriminator: 1)
!3031 = distinct !DILexicalBlock(scope: !3032, file: !490, line: 2463, column: 58)
!3032 = distinct !DILexicalBlock(scope: !3026, file: !490, line: 2463, column: 52)
!3033 = !DILocation(line: 2463, column: 89, scope: !3031)
!3034 = !DILocation(line: 2463, column: 58, scope: !3032)
!3035 = !DILocation(line: 2463, column: 94, scope: !3036)
!3036 = !DILexicalBlockFile(scope: !3031, file: !490, discriminator: 2)
!3037 = !DILocation(line: 2463, column: 160, scope: !3038)
!3038 = !DILexicalBlockFile(scope: !3032, file: !490, discriminator: 3)
!3039 = !DILocation(line: 2463, column: 178, scope: !3032)
!3040 = !DILocation(line: 2463, column: 187, scope: !3032)
!3041 = !DILocation(line: 2463, column: 192, scope: !3032)
!3042 = !DILocation(line: 2464, column: 31, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2464, column: 9)
!3044 = !DILocation(line: 2464, column: 40, scope: !3043)
!3045 = !DILocation(line: 2464, column: 9, scope: !680)
!3046 = !DILocation(line: 2464, column: 62, scope: !3047)
!3047 = !DILexicalBlockFile(scope: !3048, file: !490, discriminator: 1)
!3048 = distinct !DILexicalBlock(scope: !3049, file: !490, line: 2464, column: 62)
!3049 = distinct !DILexicalBlock(scope: !3043, file: !490, line: 2464, column: 56)
!3050 = !DILocation(line: 2464, column: 97, scope: !3048)
!3051 = !DILocation(line: 2464, column: 62, scope: !3049)
!3052 = !DILocation(line: 2464, column: 102, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !3048, file: !490, discriminator: 2)
!3054 = !DILocation(line: 2464, column: 168, scope: !3055)
!3055 = !DILexicalBlockFile(scope: !3049, file: !490, discriminator: 3)
!3056 = !DILocation(line: 2464, column: 190, scope: !3049)
!3057 = !DILocation(line: 2464, column: 199, scope: !3049)
!3058 = !DILocation(line: 2464, column: 204, scope: !3049)
!3059 = !DILocation(line: 2465, column: 38, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2465, column: 9)
!3061 = !DILocation(line: 2465, column: 47, scope: !3060)
!3062 = !DILocation(line: 2465, column: 9, scope: !680)
!3063 = !DILocation(line: 2465, column: 69, scope: !3064)
!3064 = !DILexicalBlockFile(scope: !3065, file: !490, discriminator: 1)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !490, line: 2465, column: 69)
!3066 = distinct !DILexicalBlock(scope: !3060, file: !490, line: 2465, column: 63)
!3067 = !DILocation(line: 2465, column: 111, scope: !3065)
!3068 = !DILocation(line: 2465, column: 69, scope: !3066)
!3069 = !DILocation(line: 2465, column: 116, scope: !3070)
!3070 = !DILexicalBlockFile(scope: !3065, file: !490, discriminator: 2)
!3071 = !DILocation(line: 2465, column: 182, scope: !3072)
!3072 = !DILexicalBlockFile(scope: !3066, file: !490, discriminator: 3)
!3073 = !DILocation(line: 2465, column: 211, scope: !3066)
!3074 = !DILocation(line: 2465, column: 220, scope: !3066)
!3075 = !DILocation(line: 2465, column: 225, scope: !3066)
!3076 = !DILocation(line: 2466, column: 28, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2466, column: 9)
!3078 = !DILocation(line: 2466, column: 37, scope: !3077)
!3079 = !DILocation(line: 2466, column: 9, scope: !680)
!3080 = !DILocation(line: 2466, column: 59, scope: !3081)
!3081 = !DILexicalBlockFile(scope: !3082, file: !490, discriminator: 1)
!3082 = distinct !DILexicalBlock(scope: !3083, file: !490, line: 2466, column: 59)
!3083 = distinct !DILexicalBlock(scope: !3077, file: !490, line: 2466, column: 53)
!3084 = !DILocation(line: 2466, column: 91, scope: !3082)
!3085 = !DILocation(line: 2466, column: 59, scope: !3083)
!3086 = !DILocation(line: 2466, column: 96, scope: !3087)
!3087 = !DILexicalBlockFile(scope: !3082, file: !490, discriminator: 2)
!3088 = !DILocation(line: 2466, column: 162, scope: !3089)
!3089 = !DILexicalBlockFile(scope: !3083, file: !490, discriminator: 3)
!3090 = !DILocation(line: 2466, column: 181, scope: !3083)
!3091 = !DILocation(line: 2466, column: 190, scope: !3083)
!3092 = !DILocation(line: 2466, column: 195, scope: !3083)
!3093 = !DILocation(line: 2467, column: 36, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2467, column: 9)
!3095 = !DILocation(line: 2467, column: 45, scope: !3094)
!3096 = !DILocation(line: 2467, column: 9, scope: !680)
!3097 = !DILocation(line: 2467, column: 67, scope: !3098)
!3098 = !DILexicalBlockFile(scope: !3099, file: !490, discriminator: 1)
!3099 = distinct !DILexicalBlock(scope: !3100, file: !490, line: 2467, column: 67)
!3100 = distinct !DILexicalBlock(scope: !3094, file: !490, line: 2467, column: 61)
!3101 = !DILocation(line: 2467, column: 107, scope: !3099)
!3102 = !DILocation(line: 2467, column: 67, scope: !3100)
!3103 = !DILocation(line: 2467, column: 112, scope: !3104)
!3104 = !DILexicalBlockFile(scope: !3099, file: !490, discriminator: 2)
!3105 = !DILocation(line: 2467, column: 178, scope: !3106)
!3106 = !DILexicalBlockFile(scope: !3100, file: !490, discriminator: 3)
!3107 = !DILocation(line: 2467, column: 205, scope: !3100)
!3108 = !DILocation(line: 2467, column: 214, scope: !3100)
!3109 = !DILocation(line: 2467, column: 219, scope: !3100)
!3110 = !DILocation(line: 2468, column: 33, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2468, column: 9)
!3112 = !DILocation(line: 2468, column: 42, scope: !3111)
!3113 = !DILocation(line: 2468, column: 9, scope: !680)
!3114 = !DILocation(line: 2468, column: 64, scope: !3115)
!3115 = !DILexicalBlockFile(scope: !3116, file: !490, discriminator: 1)
!3116 = distinct !DILexicalBlock(scope: !3117, file: !490, line: 2468, column: 64)
!3117 = distinct !DILexicalBlock(scope: !3111, file: !490, line: 2468, column: 58)
!3118 = !DILocation(line: 2468, column: 101, scope: !3116)
!3119 = !DILocation(line: 2468, column: 64, scope: !3117)
!3120 = !DILocation(line: 2468, column: 106, scope: !3121)
!3121 = !DILexicalBlockFile(scope: !3116, file: !490, discriminator: 2)
!3122 = !DILocation(line: 2468, column: 172, scope: !3123)
!3123 = !DILexicalBlockFile(scope: !3117, file: !490, discriminator: 3)
!3124 = !DILocation(line: 2468, column: 196, scope: !3117)
!3125 = !DILocation(line: 2468, column: 205, scope: !3117)
!3126 = !DILocation(line: 2468, column: 210, scope: !3117)
!3127 = !DILocation(line: 2469, column: 30, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2469, column: 9)
!3129 = !DILocation(line: 2469, column: 39, scope: !3128)
!3130 = !DILocation(line: 2469, column: 9, scope: !680)
!3131 = !DILocation(line: 2469, column: 61, scope: !3132)
!3132 = !DILexicalBlockFile(scope: !3133, file: !490, discriminator: 1)
!3133 = distinct !DILexicalBlock(scope: !3134, file: !490, line: 2469, column: 61)
!3134 = distinct !DILexicalBlock(scope: !3128, file: !490, line: 2469, column: 55)
!3135 = !DILocation(line: 2469, column: 95, scope: !3133)
!3136 = !DILocation(line: 2469, column: 61, scope: !3134)
!3137 = !DILocation(line: 2469, column: 100, scope: !3138)
!3138 = !DILexicalBlockFile(scope: !3133, file: !490, discriminator: 2)
!3139 = !DILocation(line: 2469, column: 166, scope: !3140)
!3140 = !DILexicalBlockFile(scope: !3134, file: !490, discriminator: 3)
!3141 = !DILocation(line: 2469, column: 187, scope: !3134)
!3142 = !DILocation(line: 2469, column: 196, scope: !3134)
!3143 = !DILocation(line: 2469, column: 201, scope: !3134)
!3144 = !DILocation(line: 2470, column: 35, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2470, column: 9)
!3146 = !DILocation(line: 2470, column: 44, scope: !3145)
!3147 = !DILocation(line: 2470, column: 9, scope: !680)
!3148 = !DILocation(line: 2470, column: 66, scope: !3149)
!3149 = !DILexicalBlockFile(scope: !3150, file: !490, discriminator: 1)
!3150 = distinct !DILexicalBlock(scope: !3151, file: !490, line: 2470, column: 66)
!3151 = distinct !DILexicalBlock(scope: !3145, file: !490, line: 2470, column: 60)
!3152 = !DILocation(line: 2470, column: 105, scope: !3150)
!3153 = !DILocation(line: 2470, column: 66, scope: !3151)
!3154 = !DILocation(line: 2470, column: 110, scope: !3155)
!3155 = !DILexicalBlockFile(scope: !3150, file: !490, discriminator: 2)
!3156 = !DILocation(line: 2470, column: 176, scope: !3157)
!3157 = !DILexicalBlockFile(scope: !3151, file: !490, discriminator: 3)
!3158 = !DILocation(line: 2470, column: 202, scope: !3151)
!3159 = !DILocation(line: 2470, column: 211, scope: !3151)
!3160 = !DILocation(line: 2470, column: 216, scope: !3151)
!3161 = !DILocation(line: 2471, column: 27, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2471, column: 9)
!3163 = !DILocation(line: 2471, column: 36, scope: !3162)
!3164 = !DILocation(line: 2471, column: 9, scope: !680)
!3165 = !DILocation(line: 2471, column: 58, scope: !3166)
!3166 = !DILexicalBlockFile(scope: !3167, file: !490, discriminator: 1)
!3167 = distinct !DILexicalBlock(scope: !3168, file: !490, line: 2471, column: 58)
!3168 = distinct !DILexicalBlock(scope: !3162, file: !490, line: 2471, column: 52)
!3169 = !DILocation(line: 2471, column: 89, scope: !3167)
!3170 = !DILocation(line: 2471, column: 58, scope: !3168)
!3171 = !DILocation(line: 2471, column: 94, scope: !3172)
!3172 = !DILexicalBlockFile(scope: !3167, file: !490, discriminator: 2)
!3173 = !DILocation(line: 2471, column: 160, scope: !3174)
!3174 = !DILexicalBlockFile(scope: !3168, file: !490, discriminator: 3)
!3175 = !DILocation(line: 2471, column: 178, scope: !3168)
!3176 = !DILocation(line: 2471, column: 187, scope: !3168)
!3177 = !DILocation(line: 2471, column: 192, scope: !3168)
!3178 = !DILocation(line: 2472, column: 30, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2472, column: 9)
!3180 = !DILocation(line: 2472, column: 39, scope: !3179)
!3181 = !DILocation(line: 2472, column: 9, scope: !680)
!3182 = !DILocation(line: 2472, column: 61, scope: !3183)
!3183 = !DILexicalBlockFile(scope: !3184, file: !490, discriminator: 1)
!3184 = distinct !DILexicalBlock(scope: !3185, file: !490, line: 2472, column: 61)
!3185 = distinct !DILexicalBlock(scope: !3179, file: !490, line: 2472, column: 55)
!3186 = !DILocation(line: 2472, column: 95, scope: !3184)
!3187 = !DILocation(line: 2472, column: 61, scope: !3185)
!3188 = !DILocation(line: 2472, column: 100, scope: !3189)
!3189 = !DILexicalBlockFile(scope: !3184, file: !490, discriminator: 2)
!3190 = !DILocation(line: 2472, column: 166, scope: !3191)
!3191 = !DILexicalBlockFile(scope: !3185, file: !490, discriminator: 3)
!3192 = !DILocation(line: 2472, column: 187, scope: !3185)
!3193 = !DILocation(line: 2472, column: 196, scope: !3185)
!3194 = !DILocation(line: 2472, column: 201, scope: !3185)
!3195 = !DILocation(line: 2473, column: 29, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2473, column: 9)
!3197 = !DILocation(line: 2473, column: 38, scope: !3196)
!3198 = !DILocation(line: 2473, column: 9, scope: !680)
!3199 = !DILocation(line: 2473, column: 60, scope: !3200)
!3200 = !DILexicalBlockFile(scope: !3201, file: !490, discriminator: 1)
!3201 = distinct !DILexicalBlock(scope: !3202, file: !490, line: 2473, column: 60)
!3202 = distinct !DILexicalBlock(scope: !3196, file: !490, line: 2473, column: 54)
!3203 = !DILocation(line: 2473, column: 93, scope: !3201)
!3204 = !DILocation(line: 2473, column: 60, scope: !3202)
!3205 = !DILocation(line: 2473, column: 98, scope: !3206)
!3206 = !DILexicalBlockFile(scope: !3201, file: !490, discriminator: 2)
!3207 = !DILocation(line: 2473, column: 164, scope: !3208)
!3208 = !DILexicalBlockFile(scope: !3202, file: !490, discriminator: 3)
!3209 = !DILocation(line: 2473, column: 184, scope: !3202)
!3210 = !DILocation(line: 2473, column: 193, scope: !3202)
!3211 = !DILocation(line: 2473, column: 198, scope: !3202)
!3212 = !DILocation(line: 2474, column: 27, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2474, column: 9)
!3214 = !DILocation(line: 2474, column: 36, scope: !3213)
!3215 = !DILocation(line: 2474, column: 9, scope: !680)
!3216 = !DILocation(line: 2474, column: 58, scope: !3217)
!3217 = !DILexicalBlockFile(scope: !3218, file: !490, discriminator: 1)
!3218 = distinct !DILexicalBlock(scope: !3219, file: !490, line: 2474, column: 58)
!3219 = distinct !DILexicalBlock(scope: !3213, file: !490, line: 2474, column: 52)
!3220 = !DILocation(line: 2474, column: 89, scope: !3218)
!3221 = !DILocation(line: 2474, column: 58, scope: !3219)
!3222 = !DILocation(line: 2474, column: 94, scope: !3223)
!3223 = !DILexicalBlockFile(scope: !3218, file: !490, discriminator: 2)
!3224 = !DILocation(line: 2474, column: 160, scope: !3225)
!3225 = !DILexicalBlockFile(scope: !3219, file: !490, discriminator: 3)
!3226 = !DILocation(line: 2474, column: 178, scope: !3219)
!3227 = !DILocation(line: 2474, column: 187, scope: !3219)
!3228 = !DILocation(line: 2474, column: 192, scope: !3219)
!3229 = !DILocation(line: 2475, column: 29, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2475, column: 9)
!3231 = !DILocation(line: 2475, column: 38, scope: !3230)
!3232 = !DILocation(line: 2475, column: 9, scope: !680)
!3233 = !DILocation(line: 2475, column: 60, scope: !3234)
!3234 = !DILexicalBlockFile(scope: !3235, file: !490, discriminator: 1)
!3235 = distinct !DILexicalBlock(scope: !3236, file: !490, line: 2475, column: 60)
!3236 = distinct !DILexicalBlock(scope: !3230, file: !490, line: 2475, column: 54)
!3237 = !DILocation(line: 2475, column: 93, scope: !3235)
!3238 = !DILocation(line: 2475, column: 60, scope: !3236)
!3239 = !DILocation(line: 2475, column: 98, scope: !3240)
!3240 = !DILexicalBlockFile(scope: !3235, file: !490, discriminator: 2)
!3241 = !DILocation(line: 2475, column: 164, scope: !3242)
!3242 = !DILexicalBlockFile(scope: !3236, file: !490, discriminator: 3)
!3243 = !DILocation(line: 2475, column: 184, scope: !3236)
!3244 = !DILocation(line: 2475, column: 193, scope: !3236)
!3245 = !DILocation(line: 2475, column: 198, scope: !3236)
!3246 = !DILocation(line: 2476, column: 31, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2476, column: 9)
!3248 = !DILocation(line: 2476, column: 40, scope: !3247)
!3249 = !DILocation(line: 2476, column: 9, scope: !680)
!3250 = !DILocation(line: 2476, column: 62, scope: !3251)
!3251 = !DILexicalBlockFile(scope: !3252, file: !490, discriminator: 1)
!3252 = distinct !DILexicalBlock(scope: !3253, file: !490, line: 2476, column: 62)
!3253 = distinct !DILexicalBlock(scope: !3247, file: !490, line: 2476, column: 56)
!3254 = !DILocation(line: 2476, column: 97, scope: !3252)
!3255 = !DILocation(line: 2476, column: 62, scope: !3253)
!3256 = !DILocation(line: 2476, column: 102, scope: !3257)
!3257 = !DILexicalBlockFile(scope: !3252, file: !490, discriminator: 2)
!3258 = !DILocation(line: 2476, column: 168, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3253, file: !490, discriminator: 3)
!3260 = !DILocation(line: 2476, column: 190, scope: !3253)
!3261 = !DILocation(line: 2476, column: 199, scope: !3253)
!3262 = !DILocation(line: 2476, column: 204, scope: !3253)
!3263 = !DILocation(line: 2477, column: 37, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2477, column: 9)
!3265 = !DILocation(line: 2477, column: 46, scope: !3264)
!3266 = !DILocation(line: 2477, column: 9, scope: !680)
!3267 = !DILocation(line: 2477, column: 68, scope: !3268)
!3268 = !DILexicalBlockFile(scope: !3269, file: !490, discriminator: 1)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !490, line: 2477, column: 68)
!3270 = distinct !DILexicalBlock(scope: !3264, file: !490, line: 2477, column: 62)
!3271 = !DILocation(line: 2477, column: 109, scope: !3269)
!3272 = !DILocation(line: 2477, column: 68, scope: !3270)
!3273 = !DILocation(line: 2477, column: 114, scope: !3274)
!3274 = !DILexicalBlockFile(scope: !3269, file: !490, discriminator: 2)
!3275 = !DILocation(line: 2477, column: 180, scope: !3276)
!3276 = !DILexicalBlockFile(scope: !3270, file: !490, discriminator: 3)
!3277 = !DILocation(line: 2477, column: 208, scope: !3270)
!3278 = !DILocation(line: 2477, column: 217, scope: !3270)
!3279 = !DILocation(line: 2477, column: 222, scope: !3270)
!3280 = !DILocation(line: 2478, column: 37, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2478, column: 9)
!3282 = !DILocation(line: 2478, column: 46, scope: !3281)
!3283 = !DILocation(line: 2478, column: 9, scope: !680)
!3284 = !DILocation(line: 2478, column: 68, scope: !3285)
!3285 = !DILexicalBlockFile(scope: !3286, file: !490, discriminator: 1)
!3286 = distinct !DILexicalBlock(scope: !3287, file: !490, line: 2478, column: 68)
!3287 = distinct !DILexicalBlock(scope: !3281, file: !490, line: 2478, column: 62)
!3288 = !DILocation(line: 2478, column: 109, scope: !3286)
!3289 = !DILocation(line: 2478, column: 68, scope: !3287)
!3290 = !DILocation(line: 2478, column: 114, scope: !3291)
!3291 = !DILexicalBlockFile(scope: !3286, file: !490, discriminator: 2)
!3292 = !DILocation(line: 2478, column: 180, scope: !3293)
!3293 = !DILexicalBlockFile(scope: !3287, file: !490, discriminator: 3)
!3294 = !DILocation(line: 2478, column: 208, scope: !3287)
!3295 = !DILocation(line: 2478, column: 217, scope: !3287)
!3296 = !DILocation(line: 2478, column: 222, scope: !3287)
!3297 = !DILocation(line: 2479, column: 40, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2479, column: 9)
!3299 = !DILocation(line: 2479, column: 49, scope: !3298)
!3300 = !DILocation(line: 2479, column: 9, scope: !680)
!3301 = !DILocation(line: 2479, column: 71, scope: !3302)
!3302 = !DILexicalBlockFile(scope: !3303, file: !490, discriminator: 1)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !490, line: 2479, column: 71)
!3304 = distinct !DILexicalBlock(scope: !3298, file: !490, line: 2479, column: 65)
!3305 = !DILocation(line: 2479, column: 115, scope: !3303)
!3306 = !DILocation(line: 2479, column: 71, scope: !3304)
!3307 = !DILocation(line: 2479, column: 120, scope: !3308)
!3308 = !DILexicalBlockFile(scope: !3303, file: !490, discriminator: 2)
!3309 = !DILocation(line: 2479, column: 186, scope: !3310)
!3310 = !DILexicalBlockFile(scope: !3304, file: !490, discriminator: 3)
!3311 = !DILocation(line: 2479, column: 217, scope: !3304)
!3312 = !DILocation(line: 2479, column: 226, scope: !3304)
!3313 = !DILocation(line: 2479, column: 231, scope: !3304)
!3314 = !DILocation(line: 2480, column: 33, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2480, column: 9)
!3316 = !DILocation(line: 2480, column: 42, scope: !3315)
!3317 = !DILocation(line: 2480, column: 9, scope: !680)
!3318 = !DILocation(line: 2480, column: 64, scope: !3319)
!3319 = !DILexicalBlockFile(scope: !3320, file: !490, discriminator: 1)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !490, line: 2480, column: 64)
!3321 = distinct !DILexicalBlock(scope: !3315, file: !490, line: 2480, column: 58)
!3322 = !DILocation(line: 2480, column: 101, scope: !3320)
!3323 = !DILocation(line: 2480, column: 64, scope: !3321)
!3324 = !DILocation(line: 2480, column: 106, scope: !3325)
!3325 = !DILexicalBlockFile(scope: !3320, file: !490, discriminator: 2)
!3326 = !DILocation(line: 2480, column: 172, scope: !3327)
!3327 = !DILexicalBlockFile(scope: !3321, file: !490, discriminator: 3)
!3328 = !DILocation(line: 2480, column: 196, scope: !3321)
!3329 = !DILocation(line: 2480, column: 205, scope: !3321)
!3330 = !DILocation(line: 2480, column: 210, scope: !3321)
!3331 = !DILocation(line: 2481, column: 34, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2481, column: 9)
!3333 = !DILocation(line: 2481, column: 43, scope: !3332)
!3334 = !DILocation(line: 2481, column: 9, scope: !680)
!3335 = !DILocation(line: 2481, column: 65, scope: !3336)
!3336 = !DILexicalBlockFile(scope: !3337, file: !490, discriminator: 1)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !490, line: 2481, column: 65)
!3338 = distinct !DILexicalBlock(scope: !3332, file: !490, line: 2481, column: 59)
!3339 = !DILocation(line: 2481, column: 103, scope: !3337)
!3340 = !DILocation(line: 2481, column: 65, scope: !3338)
!3341 = !DILocation(line: 2481, column: 108, scope: !3342)
!3342 = !DILexicalBlockFile(scope: !3337, file: !490, discriminator: 2)
!3343 = !DILocation(line: 2481, column: 174, scope: !3344)
!3344 = !DILexicalBlockFile(scope: !3338, file: !490, discriminator: 3)
!3345 = !DILocation(line: 2481, column: 199, scope: !3338)
!3346 = !DILocation(line: 2481, column: 208, scope: !3338)
!3347 = !DILocation(line: 2481, column: 213, scope: !3338)
!3348 = !DILocation(line: 2482, column: 37, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2482, column: 9)
!3350 = !DILocation(line: 2482, column: 46, scope: !3349)
!3351 = !DILocation(line: 2482, column: 9, scope: !680)
!3352 = !DILocation(line: 2482, column: 68, scope: !3353)
!3353 = !DILexicalBlockFile(scope: !3354, file: !490, discriminator: 1)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !490, line: 2482, column: 68)
!3355 = distinct !DILexicalBlock(scope: !3349, file: !490, line: 2482, column: 62)
!3356 = !DILocation(line: 2482, column: 109, scope: !3354)
!3357 = !DILocation(line: 2482, column: 68, scope: !3355)
!3358 = !DILocation(line: 2482, column: 114, scope: !3359)
!3359 = !DILexicalBlockFile(scope: !3354, file: !490, discriminator: 2)
!3360 = !DILocation(line: 2482, column: 180, scope: !3361)
!3361 = !DILexicalBlockFile(scope: !3355, file: !490, discriminator: 3)
!3362 = !DILocation(line: 2482, column: 208, scope: !3355)
!3363 = !DILocation(line: 2482, column: 217, scope: !3355)
!3364 = !DILocation(line: 2482, column: 222, scope: !3355)
!3365 = !DILocation(line: 2483, column: 32, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2483, column: 9)
!3367 = !DILocation(line: 2483, column: 41, scope: !3366)
!3368 = !DILocation(line: 2483, column: 9, scope: !680)
!3369 = !DILocation(line: 2483, column: 63, scope: !3370)
!3370 = !DILexicalBlockFile(scope: !3371, file: !490, discriminator: 1)
!3371 = distinct !DILexicalBlock(scope: !3372, file: !490, line: 2483, column: 63)
!3372 = distinct !DILexicalBlock(scope: !3366, file: !490, line: 2483, column: 57)
!3373 = !DILocation(line: 2483, column: 99, scope: !3371)
!3374 = !DILocation(line: 2483, column: 63, scope: !3372)
!3375 = !DILocation(line: 2483, column: 104, scope: !3376)
!3376 = !DILexicalBlockFile(scope: !3371, file: !490, discriminator: 2)
!3377 = !DILocation(line: 2483, column: 170, scope: !3378)
!3378 = !DILexicalBlockFile(scope: !3372, file: !490, discriminator: 3)
!3379 = !DILocation(line: 2483, column: 193, scope: !3372)
!3380 = !DILocation(line: 2483, column: 202, scope: !3372)
!3381 = !DILocation(line: 2483, column: 207, scope: !3372)
!3382 = !DILocation(line: 2484, column: 36, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2484, column: 9)
!3384 = !DILocation(line: 2484, column: 45, scope: !3383)
!3385 = !DILocation(line: 2484, column: 9, scope: !680)
!3386 = !DILocation(line: 2484, column: 67, scope: !3387)
!3387 = !DILexicalBlockFile(scope: !3388, file: !490, discriminator: 1)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !490, line: 2484, column: 67)
!3389 = distinct !DILexicalBlock(scope: !3383, file: !490, line: 2484, column: 61)
!3390 = !DILocation(line: 2484, column: 107, scope: !3388)
!3391 = !DILocation(line: 2484, column: 67, scope: !3389)
!3392 = !DILocation(line: 2484, column: 112, scope: !3393)
!3393 = !DILexicalBlockFile(scope: !3388, file: !490, discriminator: 2)
!3394 = !DILocation(line: 2484, column: 178, scope: !3395)
!3395 = !DILexicalBlockFile(scope: !3389, file: !490, discriminator: 3)
!3396 = !DILocation(line: 2484, column: 205, scope: !3389)
!3397 = !DILocation(line: 2484, column: 214, scope: !3389)
!3398 = !DILocation(line: 2484, column: 219, scope: !3389)
!3399 = !DILocation(line: 2485, column: 30, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2485, column: 9)
!3401 = !DILocation(line: 2485, column: 39, scope: !3400)
!3402 = !DILocation(line: 2485, column: 9, scope: !680)
!3403 = !DILocation(line: 2485, column: 61, scope: !3404)
!3404 = !DILexicalBlockFile(scope: !3405, file: !490, discriminator: 1)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !490, line: 2485, column: 61)
!3406 = distinct !DILexicalBlock(scope: !3400, file: !490, line: 2485, column: 55)
!3407 = !DILocation(line: 2485, column: 95, scope: !3405)
!3408 = !DILocation(line: 2485, column: 61, scope: !3406)
!3409 = !DILocation(line: 2485, column: 100, scope: !3410)
!3410 = !DILexicalBlockFile(scope: !3405, file: !490, discriminator: 2)
!3411 = !DILocation(line: 2485, column: 166, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !3406, file: !490, discriminator: 3)
!3413 = !DILocation(line: 2485, column: 187, scope: !3406)
!3414 = !DILocation(line: 2485, column: 196, scope: !3406)
!3415 = !DILocation(line: 2485, column: 201, scope: !3406)
!3416 = !DILocation(line: 2486, column: 33, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2486, column: 9)
!3418 = !DILocation(line: 2486, column: 42, scope: !3417)
!3419 = !DILocation(line: 2486, column: 9, scope: !680)
!3420 = !DILocation(line: 2486, column: 64, scope: !3421)
!3421 = !DILexicalBlockFile(scope: !3422, file: !490, discriminator: 1)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !490, line: 2486, column: 64)
!3423 = distinct !DILexicalBlock(scope: !3417, file: !490, line: 2486, column: 58)
!3424 = !DILocation(line: 2486, column: 101, scope: !3422)
!3425 = !DILocation(line: 2486, column: 64, scope: !3423)
!3426 = !DILocation(line: 2486, column: 106, scope: !3427)
!3427 = !DILexicalBlockFile(scope: !3422, file: !490, discriminator: 2)
!3428 = !DILocation(line: 2486, column: 172, scope: !3429)
!3429 = !DILexicalBlockFile(scope: !3423, file: !490, discriminator: 3)
!3430 = !DILocation(line: 2486, column: 196, scope: !3423)
!3431 = !DILocation(line: 2486, column: 205, scope: !3423)
!3432 = !DILocation(line: 2486, column: 210, scope: !3423)
!3433 = !DILocation(line: 2487, column: 30, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2487, column: 9)
!3435 = !DILocation(line: 2487, column: 39, scope: !3434)
!3436 = !DILocation(line: 2487, column: 9, scope: !680)
!3437 = !DILocation(line: 2487, column: 61, scope: !3438)
!3438 = !DILexicalBlockFile(scope: !3439, file: !490, discriminator: 1)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !490, line: 2487, column: 61)
!3440 = distinct !DILexicalBlock(scope: !3434, file: !490, line: 2487, column: 55)
!3441 = !DILocation(line: 2487, column: 95, scope: !3439)
!3442 = !DILocation(line: 2487, column: 61, scope: !3440)
!3443 = !DILocation(line: 2487, column: 100, scope: !3444)
!3444 = !DILexicalBlockFile(scope: !3439, file: !490, discriminator: 2)
!3445 = !DILocation(line: 2487, column: 166, scope: !3446)
!3446 = !DILexicalBlockFile(scope: !3440, file: !490, discriminator: 3)
!3447 = !DILocation(line: 2487, column: 187, scope: !3440)
!3448 = !DILocation(line: 2487, column: 196, scope: !3440)
!3449 = !DILocation(line: 2487, column: 201, scope: !3440)
!3450 = !DILocation(line: 2488, column: 30, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2488, column: 9)
!3452 = !DILocation(line: 2488, column: 39, scope: !3451)
!3453 = !DILocation(line: 2488, column: 9, scope: !680)
!3454 = !DILocation(line: 2488, column: 61, scope: !3455)
!3455 = !DILexicalBlockFile(scope: !3456, file: !490, discriminator: 1)
!3456 = distinct !DILexicalBlock(scope: !3457, file: !490, line: 2488, column: 61)
!3457 = distinct !DILexicalBlock(scope: !3451, file: !490, line: 2488, column: 55)
!3458 = !DILocation(line: 2488, column: 95, scope: !3456)
!3459 = !DILocation(line: 2488, column: 61, scope: !3457)
!3460 = !DILocation(line: 2488, column: 100, scope: !3461)
!3461 = !DILexicalBlockFile(scope: !3456, file: !490, discriminator: 2)
!3462 = !DILocation(line: 2488, column: 166, scope: !3463)
!3463 = !DILexicalBlockFile(scope: !3457, file: !490, discriminator: 3)
!3464 = !DILocation(line: 2488, column: 187, scope: !3457)
!3465 = !DILocation(line: 2488, column: 196, scope: !3457)
!3466 = !DILocation(line: 2488, column: 201, scope: !3457)
!3467 = !DILocation(line: 2489, column: 30, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2489, column: 9)
!3469 = !DILocation(line: 2489, column: 39, scope: !3468)
!3470 = !DILocation(line: 2489, column: 9, scope: !680)
!3471 = !DILocation(line: 2489, column: 61, scope: !3472)
!3472 = !DILexicalBlockFile(scope: !3473, file: !490, discriminator: 1)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !490, line: 2489, column: 61)
!3474 = distinct !DILexicalBlock(scope: !3468, file: !490, line: 2489, column: 55)
!3475 = !DILocation(line: 2489, column: 95, scope: !3473)
!3476 = !DILocation(line: 2489, column: 61, scope: !3474)
!3477 = !DILocation(line: 2489, column: 100, scope: !3478)
!3478 = !DILexicalBlockFile(scope: !3473, file: !490, discriminator: 2)
!3479 = !DILocation(line: 2489, column: 166, scope: !3480)
!3480 = !DILexicalBlockFile(scope: !3474, file: !490, discriminator: 3)
!3481 = !DILocation(line: 2489, column: 187, scope: !3474)
!3482 = !DILocation(line: 2489, column: 196, scope: !3474)
!3483 = !DILocation(line: 2489, column: 201, scope: !3474)
!3484 = !DILocation(line: 2490, column: 26, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2490, column: 9)
!3486 = !DILocation(line: 2490, column: 35, scope: !3485)
!3487 = !DILocation(line: 2490, column: 9, scope: !680)
!3488 = !DILocation(line: 2490, column: 57, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !3490, file: !490, discriminator: 1)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !490, line: 2490, column: 57)
!3491 = distinct !DILexicalBlock(scope: !3485, file: !490, line: 2490, column: 51)
!3492 = !DILocation(line: 2490, column: 87, scope: !3490)
!3493 = !DILocation(line: 2490, column: 57, scope: !3491)
!3494 = !DILocation(line: 2490, column: 92, scope: !3495)
!3495 = !DILexicalBlockFile(scope: !3490, file: !490, discriminator: 2)
!3496 = !DILocation(line: 2490, column: 158, scope: !3497)
!3497 = !DILexicalBlockFile(scope: !3491, file: !490, discriminator: 3)
!3498 = !DILocation(line: 2490, column: 175, scope: !3491)
!3499 = !DILocation(line: 2490, column: 184, scope: !3491)
!3500 = !DILocation(line: 2490, column: 189, scope: !3491)
!3501 = !DILocation(line: 2491, column: 30, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2491, column: 9)
!3503 = !DILocation(line: 2491, column: 39, scope: !3502)
!3504 = !DILocation(line: 2491, column: 9, scope: !680)
!3505 = !DILocation(line: 2491, column: 61, scope: !3506)
!3506 = !DILexicalBlockFile(scope: !3507, file: !490, discriminator: 1)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !490, line: 2491, column: 61)
!3508 = distinct !DILexicalBlock(scope: !3502, file: !490, line: 2491, column: 55)
!3509 = !DILocation(line: 2491, column: 95, scope: !3507)
!3510 = !DILocation(line: 2491, column: 61, scope: !3508)
!3511 = !DILocation(line: 2491, column: 100, scope: !3512)
!3512 = !DILexicalBlockFile(scope: !3507, file: !490, discriminator: 2)
!3513 = !DILocation(line: 2491, column: 166, scope: !3514)
!3514 = !DILexicalBlockFile(scope: !3508, file: !490, discriminator: 3)
!3515 = !DILocation(line: 2491, column: 187, scope: !3508)
!3516 = !DILocation(line: 2491, column: 196, scope: !3508)
!3517 = !DILocation(line: 2491, column: 201, scope: !3508)
!3518 = !DILocation(line: 2492, column: 37, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2492, column: 9)
!3520 = !DILocation(line: 2492, column: 46, scope: !3519)
!3521 = !DILocation(line: 2492, column: 9, scope: !680)
!3522 = !DILocation(line: 2492, column: 68, scope: !3523)
!3523 = !DILexicalBlockFile(scope: !3524, file: !490, discriminator: 1)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !490, line: 2492, column: 68)
!3525 = distinct !DILexicalBlock(scope: !3519, file: !490, line: 2492, column: 62)
!3526 = !DILocation(line: 2492, column: 109, scope: !3524)
!3527 = !DILocation(line: 2492, column: 68, scope: !3525)
!3528 = !DILocation(line: 2492, column: 114, scope: !3529)
!3529 = !DILexicalBlockFile(scope: !3524, file: !490, discriminator: 2)
!3530 = !DILocation(line: 2492, column: 180, scope: !3531)
!3531 = !DILexicalBlockFile(scope: !3525, file: !490, discriminator: 3)
!3532 = !DILocation(line: 2492, column: 208, scope: !3525)
!3533 = !DILocation(line: 2492, column: 217, scope: !3525)
!3534 = !DILocation(line: 2492, column: 222, scope: !3525)
!3535 = !DILocation(line: 2493, column: 44, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2493, column: 9)
!3537 = !DILocation(line: 2493, column: 53, scope: !3536)
!3538 = !DILocation(line: 2493, column: 9, scope: !680)
!3539 = !DILocation(line: 2493, column: 75, scope: !3540)
!3540 = !DILexicalBlockFile(scope: !3541, file: !490, discriminator: 1)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !490, line: 2493, column: 75)
!3542 = distinct !DILexicalBlock(scope: !3536, file: !490, line: 2493, column: 69)
!3543 = !DILocation(line: 2493, column: 123, scope: !3541)
!3544 = !DILocation(line: 2493, column: 75, scope: !3542)
!3545 = !DILocation(line: 2493, column: 128, scope: !3546)
!3546 = !DILexicalBlockFile(scope: !3541, file: !490, discriminator: 2)
!3547 = !DILocation(line: 2493, column: 194, scope: !3548)
!3548 = !DILexicalBlockFile(scope: !3542, file: !490, discriminator: 3)
!3549 = !DILocation(line: 2493, column: 229, scope: !3542)
!3550 = !DILocation(line: 2493, column: 238, scope: !3542)
!3551 = !DILocation(line: 2493, column: 243, scope: !3542)
!3552 = !DILocation(line: 2494, column: 32, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2494, column: 9)
!3554 = !DILocation(line: 2494, column: 41, scope: !3553)
!3555 = !DILocation(line: 2494, column: 9, scope: !680)
!3556 = !DILocation(line: 2494, column: 63, scope: !3557)
!3557 = !DILexicalBlockFile(scope: !3558, file: !490, discriminator: 1)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !490, line: 2494, column: 63)
!3559 = distinct !DILexicalBlock(scope: !3553, file: !490, line: 2494, column: 57)
!3560 = !DILocation(line: 2494, column: 99, scope: !3558)
!3561 = !DILocation(line: 2494, column: 63, scope: !3559)
!3562 = !DILocation(line: 2494, column: 104, scope: !3563)
!3563 = !DILexicalBlockFile(scope: !3558, file: !490, discriminator: 2)
!3564 = !DILocation(line: 2494, column: 170, scope: !3565)
!3565 = !DILexicalBlockFile(scope: !3559, file: !490, discriminator: 3)
!3566 = !DILocation(line: 2494, column: 193, scope: !3559)
!3567 = !DILocation(line: 2494, column: 202, scope: !3559)
!3568 = !DILocation(line: 2494, column: 207, scope: !3559)
!3569 = !DILocation(line: 2495, column: 33, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2495, column: 9)
!3571 = !DILocation(line: 2495, column: 42, scope: !3570)
!3572 = !DILocation(line: 2495, column: 9, scope: !680)
!3573 = !DILocation(line: 2495, column: 64, scope: !3574)
!3574 = !DILexicalBlockFile(scope: !3575, file: !490, discriminator: 1)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !490, line: 2495, column: 64)
!3576 = distinct !DILexicalBlock(scope: !3570, file: !490, line: 2495, column: 58)
!3577 = !DILocation(line: 2495, column: 101, scope: !3575)
!3578 = !DILocation(line: 2495, column: 64, scope: !3576)
!3579 = !DILocation(line: 2495, column: 106, scope: !3580)
!3580 = !DILexicalBlockFile(scope: !3575, file: !490, discriminator: 2)
!3581 = !DILocation(line: 2495, column: 172, scope: !3582)
!3582 = !DILexicalBlockFile(scope: !3576, file: !490, discriminator: 3)
!3583 = !DILocation(line: 2495, column: 196, scope: !3576)
!3584 = !DILocation(line: 2495, column: 205, scope: !3576)
!3585 = !DILocation(line: 2495, column: 210, scope: !3576)
!3586 = !DILocation(line: 2496, column: 32, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2496, column: 9)
!3588 = !DILocation(line: 2496, column: 41, scope: !3587)
!3589 = !DILocation(line: 2496, column: 9, scope: !680)
!3590 = !DILocation(line: 2496, column: 63, scope: !3591)
!3591 = !DILexicalBlockFile(scope: !3592, file: !490, discriminator: 1)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !490, line: 2496, column: 63)
!3593 = distinct !DILexicalBlock(scope: !3587, file: !490, line: 2496, column: 57)
!3594 = !DILocation(line: 2496, column: 99, scope: !3592)
!3595 = !DILocation(line: 2496, column: 63, scope: !3593)
!3596 = !DILocation(line: 2496, column: 104, scope: !3597)
!3597 = !DILexicalBlockFile(scope: !3592, file: !490, discriminator: 2)
!3598 = !DILocation(line: 2496, column: 170, scope: !3599)
!3599 = !DILexicalBlockFile(scope: !3593, file: !490, discriminator: 3)
!3600 = !DILocation(line: 2496, column: 193, scope: !3593)
!3601 = !DILocation(line: 2496, column: 202, scope: !3593)
!3602 = !DILocation(line: 2496, column: 207, scope: !3593)
!3603 = !DILocation(line: 2497, column: 32, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2497, column: 9)
!3605 = !DILocation(line: 2497, column: 41, scope: !3604)
!3606 = !DILocation(line: 2497, column: 9, scope: !680)
!3607 = !DILocation(line: 2497, column: 63, scope: !3608)
!3608 = !DILexicalBlockFile(scope: !3609, file: !490, discriminator: 1)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !490, line: 2497, column: 63)
!3610 = distinct !DILexicalBlock(scope: !3604, file: !490, line: 2497, column: 57)
!3611 = !DILocation(line: 2497, column: 99, scope: !3609)
!3612 = !DILocation(line: 2497, column: 63, scope: !3610)
!3613 = !DILocation(line: 2497, column: 104, scope: !3614)
!3614 = !DILexicalBlockFile(scope: !3609, file: !490, discriminator: 2)
!3615 = !DILocation(line: 2497, column: 170, scope: !3616)
!3616 = !DILexicalBlockFile(scope: !3610, file: !490, discriminator: 3)
!3617 = !DILocation(line: 2497, column: 193, scope: !3610)
!3618 = !DILocation(line: 2497, column: 202, scope: !3610)
!3619 = !DILocation(line: 2497, column: 207, scope: !3610)
!3620 = !DILocation(line: 2498, column: 33, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2498, column: 9)
!3622 = !DILocation(line: 2498, column: 42, scope: !3621)
!3623 = !DILocation(line: 2498, column: 9, scope: !680)
!3624 = !DILocation(line: 2498, column: 64, scope: !3625)
!3625 = !DILexicalBlockFile(scope: !3626, file: !490, discriminator: 1)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !490, line: 2498, column: 64)
!3627 = distinct !DILexicalBlock(scope: !3621, file: !490, line: 2498, column: 58)
!3628 = !DILocation(line: 2498, column: 101, scope: !3626)
!3629 = !DILocation(line: 2498, column: 64, scope: !3627)
!3630 = !DILocation(line: 2498, column: 106, scope: !3631)
!3631 = !DILexicalBlockFile(scope: !3626, file: !490, discriminator: 2)
!3632 = !DILocation(line: 2498, column: 172, scope: !3633)
!3633 = !DILexicalBlockFile(scope: !3627, file: !490, discriminator: 3)
!3634 = !DILocation(line: 2498, column: 196, scope: !3627)
!3635 = !DILocation(line: 2498, column: 205, scope: !3627)
!3636 = !DILocation(line: 2498, column: 210, scope: !3627)
!3637 = !DILocation(line: 2499, column: 31, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2499, column: 9)
!3639 = !DILocation(line: 2499, column: 40, scope: !3638)
!3640 = !DILocation(line: 2499, column: 9, scope: !680)
!3641 = !DILocation(line: 2499, column: 62, scope: !3642)
!3642 = !DILexicalBlockFile(scope: !3643, file: !490, discriminator: 1)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !490, line: 2499, column: 62)
!3644 = distinct !DILexicalBlock(scope: !3638, file: !490, line: 2499, column: 56)
!3645 = !DILocation(line: 2499, column: 97, scope: !3643)
!3646 = !DILocation(line: 2499, column: 62, scope: !3644)
!3647 = !DILocation(line: 2499, column: 102, scope: !3648)
!3648 = !DILexicalBlockFile(scope: !3643, file: !490, discriminator: 2)
!3649 = !DILocation(line: 2499, column: 168, scope: !3650)
!3650 = !DILexicalBlockFile(scope: !3644, file: !490, discriminator: 3)
!3651 = !DILocation(line: 2499, column: 190, scope: !3644)
!3652 = !DILocation(line: 2499, column: 199, scope: !3644)
!3653 = !DILocation(line: 2499, column: 204, scope: !3644)
!3654 = !DILocation(line: 2500, column: 34, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2500, column: 9)
!3656 = !DILocation(line: 2500, column: 43, scope: !3655)
!3657 = !DILocation(line: 2500, column: 9, scope: !680)
!3658 = !DILocation(line: 2500, column: 65, scope: !3659)
!3659 = !DILexicalBlockFile(scope: !3660, file: !490, discriminator: 1)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !490, line: 2500, column: 65)
!3661 = distinct !DILexicalBlock(scope: !3655, file: !490, line: 2500, column: 59)
!3662 = !DILocation(line: 2500, column: 103, scope: !3660)
!3663 = !DILocation(line: 2500, column: 65, scope: !3661)
!3664 = !DILocation(line: 2500, column: 108, scope: !3665)
!3665 = !DILexicalBlockFile(scope: !3660, file: !490, discriminator: 2)
!3666 = !DILocation(line: 2500, column: 174, scope: !3667)
!3667 = !DILexicalBlockFile(scope: !3661, file: !490, discriminator: 3)
!3668 = !DILocation(line: 2500, column: 199, scope: !3661)
!3669 = !DILocation(line: 2500, column: 208, scope: !3661)
!3670 = !DILocation(line: 2500, column: 213, scope: !3661)
!3671 = !DILocation(line: 2503, column: 34, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2503, column: 9)
!3673 = !DILocation(line: 2503, column: 43, scope: !3672)
!3674 = !DILocation(line: 2503, column: 9, scope: !680)
!3675 = !DILocation(line: 2503, column: 65, scope: !3676)
!3676 = !DILexicalBlockFile(scope: !3677, file: !490, discriminator: 1)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !490, line: 2503, column: 65)
!3678 = distinct !DILexicalBlock(scope: !3672, file: !490, line: 2503, column: 59)
!3679 = !DILocation(line: 2503, column: 103, scope: !3677)
!3680 = !DILocation(line: 2503, column: 65, scope: !3678)
!3681 = !DILocation(line: 2503, column: 108, scope: !3682)
!3682 = !DILexicalBlockFile(scope: !3677, file: !490, discriminator: 2)
!3683 = !DILocation(line: 2503, column: 174, scope: !3684)
!3684 = !DILexicalBlockFile(scope: !3678, file: !490, discriminator: 3)
!3685 = !DILocation(line: 2503, column: 199, scope: !3678)
!3686 = !DILocation(line: 2503, column: 208, scope: !3678)
!3687 = !DILocation(line: 2503, column: 213, scope: !3678)
!3688 = !DILocation(line: 2505, column: 34, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2505, column: 9)
!3690 = !DILocation(line: 2505, column: 43, scope: !3689)
!3691 = !DILocation(line: 2505, column: 9, scope: !680)
!3692 = !DILocation(line: 2505, column: 65, scope: !3693)
!3693 = !DILexicalBlockFile(scope: !3694, file: !490, discriminator: 1)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !490, line: 2505, column: 65)
!3695 = distinct !DILexicalBlock(scope: !3689, file: !490, line: 2505, column: 59)
!3696 = !DILocation(line: 2505, column: 103, scope: !3694)
!3697 = !DILocation(line: 2505, column: 65, scope: !3695)
!3698 = !DILocation(line: 2505, column: 108, scope: !3699)
!3699 = !DILexicalBlockFile(scope: !3694, file: !490, discriminator: 2)
!3700 = !DILocation(line: 2505, column: 174, scope: !3701)
!3701 = !DILexicalBlockFile(scope: !3695, file: !490, discriminator: 3)
!3702 = !DILocation(line: 2505, column: 199, scope: !3695)
!3703 = !DILocation(line: 2505, column: 208, scope: !3695)
!3704 = !DILocation(line: 2505, column: 213, scope: !3695)
!3705 = !DILocation(line: 2506, column: 34, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2506, column: 9)
!3707 = !DILocation(line: 2506, column: 43, scope: !3706)
!3708 = !DILocation(line: 2506, column: 9, scope: !680)
!3709 = !DILocation(line: 2506, column: 65, scope: !3710)
!3710 = !DILexicalBlockFile(scope: !3711, file: !490, discriminator: 1)
!3711 = distinct !DILexicalBlock(scope: !3712, file: !490, line: 2506, column: 65)
!3712 = distinct !DILexicalBlock(scope: !3706, file: !490, line: 2506, column: 59)
!3713 = !DILocation(line: 2506, column: 103, scope: !3711)
!3714 = !DILocation(line: 2506, column: 65, scope: !3712)
!3715 = !DILocation(line: 2506, column: 108, scope: !3716)
!3716 = !DILexicalBlockFile(scope: !3711, file: !490, discriminator: 2)
!3717 = !DILocation(line: 2506, column: 174, scope: !3718)
!3718 = !DILexicalBlockFile(scope: !3712, file: !490, discriminator: 3)
!3719 = !DILocation(line: 2506, column: 199, scope: !3712)
!3720 = !DILocation(line: 2506, column: 208, scope: !3712)
!3721 = !DILocation(line: 2506, column: 213, scope: !3712)
!3722 = !DILocation(line: 2507, column: 36, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2507, column: 9)
!3724 = !DILocation(line: 2507, column: 45, scope: !3723)
!3725 = !DILocation(line: 2507, column: 9, scope: !680)
!3726 = !DILocation(line: 2507, column: 67, scope: !3727)
!3727 = !DILexicalBlockFile(scope: !3728, file: !490, discriminator: 1)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !490, line: 2507, column: 67)
!3729 = distinct !DILexicalBlock(scope: !3723, file: !490, line: 2507, column: 61)
!3730 = !DILocation(line: 2507, column: 107, scope: !3728)
!3731 = !DILocation(line: 2507, column: 67, scope: !3729)
!3732 = !DILocation(line: 2507, column: 112, scope: !3733)
!3733 = !DILexicalBlockFile(scope: !3728, file: !490, discriminator: 2)
!3734 = !DILocation(line: 2507, column: 178, scope: !3735)
!3735 = !DILexicalBlockFile(scope: !3729, file: !490, discriminator: 3)
!3736 = !DILocation(line: 2507, column: 205, scope: !3729)
!3737 = !DILocation(line: 2507, column: 214, scope: !3729)
!3738 = !DILocation(line: 2507, column: 219, scope: !3729)
!3739 = !DILocation(line: 2508, column: 41, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2508, column: 9)
!3741 = !DILocation(line: 2508, column: 50, scope: !3740)
!3742 = !DILocation(line: 2508, column: 9, scope: !680)
!3743 = !DILocation(line: 2508, column: 72, scope: !3744)
!3744 = !DILexicalBlockFile(scope: !3745, file: !490, discriminator: 1)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !490, line: 2508, column: 72)
!3746 = distinct !DILexicalBlock(scope: !3740, file: !490, line: 2508, column: 66)
!3747 = !DILocation(line: 2508, column: 117, scope: !3745)
!3748 = !DILocation(line: 2508, column: 72, scope: !3746)
!3749 = !DILocation(line: 2508, column: 122, scope: !3750)
!3750 = !DILexicalBlockFile(scope: !3745, file: !490, discriminator: 2)
!3751 = !DILocation(line: 2508, column: 188, scope: !3752)
!3752 = !DILexicalBlockFile(scope: !3746, file: !490, discriminator: 3)
!3753 = !DILocation(line: 2508, column: 220, scope: !3746)
!3754 = !DILocation(line: 2508, column: 229, scope: !3746)
!3755 = !DILocation(line: 2508, column: 234, scope: !3746)
!3756 = !DILocation(line: 2509, column: 41, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2509, column: 9)
!3758 = !DILocation(line: 2509, column: 50, scope: !3757)
!3759 = !DILocation(line: 2509, column: 9, scope: !680)
!3760 = !DILocation(line: 2509, column: 72, scope: !3761)
!3761 = !DILexicalBlockFile(scope: !3762, file: !490, discriminator: 1)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !490, line: 2509, column: 72)
!3763 = distinct !DILexicalBlock(scope: !3757, file: !490, line: 2509, column: 66)
!3764 = !DILocation(line: 2509, column: 117, scope: !3762)
!3765 = !DILocation(line: 2509, column: 72, scope: !3763)
!3766 = !DILocation(line: 2509, column: 122, scope: !3767)
!3767 = !DILexicalBlockFile(scope: !3762, file: !490, discriminator: 2)
!3768 = !DILocation(line: 2509, column: 188, scope: !3769)
!3769 = !DILexicalBlockFile(scope: !3763, file: !490, discriminator: 3)
!3770 = !DILocation(line: 2509, column: 220, scope: !3763)
!3771 = !DILocation(line: 2509, column: 229, scope: !3763)
!3772 = !DILocation(line: 2509, column: 234, scope: !3763)
!3773 = !DILocation(line: 2510, column: 39, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2510, column: 9)
!3775 = !DILocation(line: 2510, column: 48, scope: !3774)
!3776 = !DILocation(line: 2510, column: 9, scope: !680)
!3777 = !DILocation(line: 2510, column: 70, scope: !3778)
!3778 = !DILexicalBlockFile(scope: !3779, file: !490, discriminator: 1)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !490, line: 2510, column: 70)
!3780 = distinct !DILexicalBlock(scope: !3774, file: !490, line: 2510, column: 64)
!3781 = !DILocation(line: 2510, column: 113, scope: !3779)
!3782 = !DILocation(line: 2510, column: 70, scope: !3780)
!3783 = !DILocation(line: 2510, column: 118, scope: !3784)
!3784 = !DILexicalBlockFile(scope: !3779, file: !490, discriminator: 2)
!3785 = !DILocation(line: 2510, column: 184, scope: !3786)
!3786 = !DILexicalBlockFile(scope: !3780, file: !490, discriminator: 3)
!3787 = !DILocation(line: 2510, column: 214, scope: !3780)
!3788 = !DILocation(line: 2510, column: 223, scope: !3780)
!3789 = !DILocation(line: 2510, column: 228, scope: !3780)
!3790 = !DILocation(line: 2511, column: 34, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2511, column: 9)
!3792 = !DILocation(line: 2511, column: 43, scope: !3791)
!3793 = !DILocation(line: 2511, column: 9, scope: !680)
!3794 = !DILocation(line: 2511, column: 65, scope: !3795)
!3795 = !DILexicalBlockFile(scope: !3796, file: !490, discriminator: 1)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !490, line: 2511, column: 65)
!3797 = distinct !DILexicalBlock(scope: !3791, file: !490, line: 2511, column: 59)
!3798 = !DILocation(line: 2511, column: 103, scope: !3796)
!3799 = !DILocation(line: 2511, column: 65, scope: !3797)
!3800 = !DILocation(line: 2511, column: 108, scope: !3801)
!3801 = !DILexicalBlockFile(scope: !3796, file: !490, discriminator: 2)
!3802 = !DILocation(line: 2511, column: 174, scope: !3803)
!3803 = !DILexicalBlockFile(scope: !3797, file: !490, discriminator: 3)
!3804 = !DILocation(line: 2511, column: 199, scope: !3797)
!3805 = !DILocation(line: 2511, column: 208, scope: !3797)
!3806 = !DILocation(line: 2511, column: 213, scope: !3797)
!3807 = !DILocation(line: 2512, column: 36, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2512, column: 9)
!3809 = !DILocation(line: 2512, column: 45, scope: !3808)
!3810 = !DILocation(line: 2512, column: 9, scope: !680)
!3811 = !DILocation(line: 2512, column: 67, scope: !3812)
!3812 = !DILexicalBlockFile(scope: !3813, file: !490, discriminator: 1)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !490, line: 2512, column: 67)
!3814 = distinct !DILexicalBlock(scope: !3808, file: !490, line: 2512, column: 61)
!3815 = !DILocation(line: 2512, column: 107, scope: !3813)
!3816 = !DILocation(line: 2512, column: 67, scope: !3814)
!3817 = !DILocation(line: 2512, column: 112, scope: !3818)
!3818 = !DILexicalBlockFile(scope: !3813, file: !490, discriminator: 2)
!3819 = !DILocation(line: 2512, column: 178, scope: !3820)
!3820 = !DILexicalBlockFile(scope: !3814, file: !490, discriminator: 3)
!3821 = !DILocation(line: 2512, column: 205, scope: !3814)
!3822 = !DILocation(line: 2512, column: 214, scope: !3814)
!3823 = !DILocation(line: 2512, column: 219, scope: !3814)
!3824 = !DILocation(line: 2513, column: 36, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2513, column: 9)
!3826 = !DILocation(line: 2513, column: 45, scope: !3825)
!3827 = !DILocation(line: 2513, column: 9, scope: !680)
!3828 = !DILocation(line: 2513, column: 67, scope: !3829)
!3829 = !DILexicalBlockFile(scope: !3830, file: !490, discriminator: 1)
!3830 = distinct !DILexicalBlock(scope: !3831, file: !490, line: 2513, column: 67)
!3831 = distinct !DILexicalBlock(scope: !3825, file: !490, line: 2513, column: 61)
!3832 = !DILocation(line: 2513, column: 107, scope: !3830)
!3833 = !DILocation(line: 2513, column: 67, scope: !3831)
!3834 = !DILocation(line: 2513, column: 112, scope: !3835)
!3835 = !DILexicalBlockFile(scope: !3830, file: !490, discriminator: 2)
!3836 = !DILocation(line: 2513, column: 178, scope: !3837)
!3837 = !DILexicalBlockFile(scope: !3831, file: !490, discriminator: 3)
!3838 = !DILocation(line: 2513, column: 205, scope: !3831)
!3839 = !DILocation(line: 2513, column: 214, scope: !3831)
!3840 = !DILocation(line: 2513, column: 219, scope: !3831)
!3841 = !DILocation(line: 2514, column: 37, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2514, column: 9)
!3843 = !DILocation(line: 2514, column: 46, scope: !3842)
!3844 = !DILocation(line: 2514, column: 9, scope: !680)
!3845 = !DILocation(line: 2514, column: 68, scope: !3846)
!3846 = !DILexicalBlockFile(scope: !3847, file: !490, discriminator: 1)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !490, line: 2514, column: 68)
!3848 = distinct !DILexicalBlock(scope: !3842, file: !490, line: 2514, column: 62)
!3849 = !DILocation(line: 2514, column: 109, scope: !3847)
!3850 = !DILocation(line: 2514, column: 68, scope: !3848)
!3851 = !DILocation(line: 2514, column: 114, scope: !3852)
!3852 = !DILexicalBlockFile(scope: !3847, file: !490, discriminator: 2)
!3853 = !DILocation(line: 2514, column: 180, scope: !3854)
!3854 = !DILexicalBlockFile(scope: !3848, file: !490, discriminator: 3)
!3855 = !DILocation(line: 2514, column: 208, scope: !3848)
!3856 = !DILocation(line: 2514, column: 217, scope: !3848)
!3857 = !DILocation(line: 2514, column: 222, scope: !3848)
!3858 = !DILocation(line: 2515, column: 35, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2515, column: 9)
!3860 = !DILocation(line: 2515, column: 44, scope: !3859)
!3861 = !DILocation(line: 2515, column: 9, scope: !680)
!3862 = !DILocation(line: 2515, column: 66, scope: !3863)
!3863 = !DILexicalBlockFile(scope: !3864, file: !490, discriminator: 1)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !490, line: 2515, column: 66)
!3865 = distinct !DILexicalBlock(scope: !3859, file: !490, line: 2515, column: 60)
!3866 = !DILocation(line: 2515, column: 105, scope: !3864)
!3867 = !DILocation(line: 2515, column: 66, scope: !3865)
!3868 = !DILocation(line: 2515, column: 110, scope: !3869)
!3869 = !DILexicalBlockFile(scope: !3864, file: !490, discriminator: 2)
!3870 = !DILocation(line: 2515, column: 176, scope: !3871)
!3871 = !DILexicalBlockFile(scope: !3865, file: !490, discriminator: 3)
!3872 = !DILocation(line: 2515, column: 202, scope: !3865)
!3873 = !DILocation(line: 2515, column: 211, scope: !3865)
!3874 = !DILocation(line: 2515, column: 216, scope: !3865)
!3875 = !DILocation(line: 2516, column: 34, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2516, column: 9)
!3877 = !DILocation(line: 2516, column: 43, scope: !3876)
!3878 = !DILocation(line: 2516, column: 9, scope: !680)
!3879 = !DILocation(line: 2516, column: 65, scope: !3880)
!3880 = !DILexicalBlockFile(scope: !3881, file: !490, discriminator: 1)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !490, line: 2516, column: 65)
!3882 = distinct !DILexicalBlock(scope: !3876, file: !490, line: 2516, column: 59)
!3883 = !DILocation(line: 2516, column: 103, scope: !3881)
!3884 = !DILocation(line: 2516, column: 65, scope: !3882)
!3885 = !DILocation(line: 2516, column: 108, scope: !3886)
!3886 = !DILexicalBlockFile(scope: !3881, file: !490, discriminator: 2)
!3887 = !DILocation(line: 2516, column: 174, scope: !3888)
!3888 = !DILexicalBlockFile(scope: !3882, file: !490, discriminator: 3)
!3889 = !DILocation(line: 2516, column: 199, scope: !3882)
!3890 = !DILocation(line: 2516, column: 208, scope: !3882)
!3891 = !DILocation(line: 2516, column: 213, scope: !3882)
!3892 = !DILocation(line: 2517, column: 37, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2517, column: 9)
!3894 = !DILocation(line: 2517, column: 46, scope: !3893)
!3895 = !DILocation(line: 2517, column: 9, scope: !680)
!3896 = !DILocation(line: 2517, column: 68, scope: !3897)
!3897 = !DILexicalBlockFile(scope: !3898, file: !490, discriminator: 1)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !490, line: 2517, column: 68)
!3899 = distinct !DILexicalBlock(scope: !3893, file: !490, line: 2517, column: 62)
!3900 = !DILocation(line: 2517, column: 109, scope: !3898)
!3901 = !DILocation(line: 2517, column: 68, scope: !3899)
!3902 = !DILocation(line: 2517, column: 114, scope: !3903)
!3903 = !DILexicalBlockFile(scope: !3898, file: !490, discriminator: 2)
!3904 = !DILocation(line: 2517, column: 180, scope: !3905)
!3905 = !DILexicalBlockFile(scope: !3899, file: !490, discriminator: 3)
!3906 = !DILocation(line: 2517, column: 208, scope: !3899)
!3907 = !DILocation(line: 2517, column: 217, scope: !3899)
!3908 = !DILocation(line: 2517, column: 222, scope: !3899)
!3909 = !DILocation(line: 2518, column: 31, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2518, column: 9)
!3911 = !DILocation(line: 2518, column: 40, scope: !3910)
!3912 = !DILocation(line: 2518, column: 9, scope: !680)
!3913 = !DILocation(line: 2518, column: 62, scope: !3914)
!3914 = !DILexicalBlockFile(scope: !3915, file: !490, discriminator: 1)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !490, line: 2518, column: 62)
!3916 = distinct !DILexicalBlock(scope: !3910, file: !490, line: 2518, column: 56)
!3917 = !DILocation(line: 2518, column: 97, scope: !3915)
!3918 = !DILocation(line: 2518, column: 62, scope: !3916)
!3919 = !DILocation(line: 2518, column: 102, scope: !3920)
!3920 = !DILexicalBlockFile(scope: !3915, file: !490, discriminator: 2)
!3921 = !DILocation(line: 2518, column: 168, scope: !3922)
!3922 = !DILexicalBlockFile(scope: !3916, file: !490, discriminator: 3)
!3923 = !DILocation(line: 2518, column: 190, scope: !3916)
!3924 = !DILocation(line: 2518, column: 199, scope: !3916)
!3925 = !DILocation(line: 2518, column: 204, scope: !3916)
!3926 = !DILocation(line: 2520, column: 30, scope: !680)
!3927 = !DILocation(line: 2520, column: 13, scope: !680)
!3928 = !DILocation(line: 2520, column: 11, scope: !680)
!3929 = !DILocation(line: 2521, column: 9, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2521, column: 9)
!3931 = !DILocation(line: 2521, column: 15, scope: !3930)
!3932 = !DILocation(line: 2521, column: 9, scope: !680)
!3933 = !DILocation(line: 2522, column: 9, scope: !3930)
!3934 = !DILocation(line: 2524, column: 30, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2524, column: 9)
!3936 = !DILocation(line: 2524, column: 54, scope: !3935)
!3937 = !DILocation(line: 2524, column: 9, scope: !3935)
!3938 = !DILocation(line: 2524, column: 9, scope: !680)
!3939 = !DILocation(line: 2524, column: 76, scope: !3940)
!3940 = !DILexicalBlockFile(scope: !3935, file: !490, discriminator: 1)
!3941 = !DILocation(line: 2525, column: 30, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2525, column: 9)
!3943 = !DILocation(line: 2525, column: 50, scope: !3942)
!3944 = !DILocation(line: 2525, column: 9, scope: !3942)
!3945 = !DILocation(line: 2525, column: 9, scope: !680)
!3946 = !DILocation(line: 2525, column: 68, scope: !3947)
!3947 = !DILexicalBlockFile(scope: !3942, file: !490, discriminator: 1)
!3948 = !DILocation(line: 2526, column: 30, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2526, column: 9)
!3950 = !DILocation(line: 2526, column: 50, scope: !3949)
!3951 = !DILocation(line: 2526, column: 9, scope: !3949)
!3952 = !DILocation(line: 2526, column: 9, scope: !680)
!3953 = !DILocation(line: 2526, column: 68, scope: !3954)
!3954 = !DILexicalBlockFile(scope: !3949, file: !490, discriminator: 1)
!3955 = !DILocation(line: 2527, column: 30, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2527, column: 9)
!3957 = !DILocation(line: 2527, column: 54, scope: !3956)
!3958 = !DILocation(line: 2527, column: 9, scope: !3956)
!3959 = !DILocation(line: 2527, column: 9, scope: !680)
!3960 = !DILocation(line: 2527, column: 76, scope: !3961)
!3961 = !DILexicalBlockFile(scope: !3956, file: !490, discriminator: 1)
!3962 = !DILocation(line: 2528, column: 30, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2528, column: 9)
!3964 = !DILocation(line: 2528, column: 54, scope: !3963)
!3965 = !DILocation(line: 2528, column: 9, scope: !3963)
!3966 = !DILocation(line: 2528, column: 9, scope: !680)
!3967 = !DILocation(line: 2528, column: 76, scope: !3968)
!3968 = !DILexicalBlockFile(scope: !3963, file: !490, discriminator: 1)
!3969 = !DILocation(line: 2529, column: 30, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2529, column: 9)
!3971 = !DILocation(line: 2529, column: 51, scope: !3970)
!3972 = !DILocation(line: 2529, column: 9, scope: !3970)
!3973 = !DILocation(line: 2529, column: 9, scope: !680)
!3974 = !DILocation(line: 2529, column: 70, scope: !3975)
!3975 = !DILexicalBlockFile(scope: !3970, file: !490, discriminator: 1)
!3976 = !DILocation(line: 2530, column: 30, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2530, column: 9)
!3978 = !DILocation(line: 2530, column: 58, scope: !3977)
!3979 = !DILocation(line: 2530, column: 9, scope: !3977)
!3980 = !DILocation(line: 2530, column: 9, scope: !680)
!3981 = !DILocation(line: 2530, column: 84, scope: !3982)
!3982 = !DILexicalBlockFile(scope: !3977, file: !490, discriminator: 1)
!3983 = !DILocation(line: 2531, column: 30, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2531, column: 9)
!3985 = !DILocation(line: 2531, column: 52, scope: !3984)
!3986 = !DILocation(line: 2531, column: 9, scope: !3984)
!3987 = !DILocation(line: 2531, column: 9, scope: !680)
!3988 = !DILocation(line: 2531, column: 72, scope: !3989)
!3989 = !DILexicalBlockFile(scope: !3984, file: !490, discriminator: 1)
!3990 = !DILocation(line: 2532, column: 30, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2532, column: 9)
!3992 = !DILocation(line: 2532, column: 48, scope: !3991)
!3993 = !DILocation(line: 2532, column: 9, scope: !3991)
!3994 = !DILocation(line: 2532, column: 9, scope: !680)
!3995 = !DILocation(line: 2532, column: 64, scope: !3996)
!3996 = !DILexicalBlockFile(scope: !3991, file: !490, discriminator: 1)
!3997 = !DILocation(line: 2533, column: 21, scope: !680)
!3998 = !DILocation(line: 2533, column: 38, scope: !680)
!3999 = !DILocation(line: 2533, column: 47, scope: !680)
!4000 = !DILocation(line: 2533, column: 52, scope: !680)
!4001 = !DILocation(line: 2533, column: 57, scope: !4002)
!4002 = !DILexicalBlockFile(scope: !685, file: !490, discriminator: 1)
!4003 = !DILocation(line: 2533, column: 67, scope: !685)
!4004 = !DILocation(line: 2533, column: 98, scope: !685)
!4005 = !DILocation(line: 2533, column: 127, scope: !688)
!4006 = !DILocation(line: 2533, column: 143, scope: !688)
!4007 = !DILocation(line: 2533, column: 127, scope: !685)
!4008 = !DILocation(line: 2533, column: 158, scope: !4009)
!4009 = !DILexicalBlockFile(scope: !688, file: !490, discriminator: 2)
!4010 = !DILocation(line: 2533, column: 163, scope: !4011)
!4011 = !DILexicalBlockFile(scope: !687, file: !490, discriminator: 4)
!4012 = !DILocation(line: 2533, column: 173, scope: !687)
!4013 = !DILocation(line: 2533, column: 203, scope: !687)
!4014 = !DILocation(line: 2533, column: 229, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !687, file: !490, line: 2533, column: 226)
!4016 = !DILocation(line: 2533, column: 246, scope: !4015)
!4017 = !DILocation(line: 2533, column: 226, scope: !4015)
!4018 = !DILocation(line: 2533, column: 256, scope: !4015)
!4019 = !DILocation(line: 2533, column: 226, scope: !687)
!4020 = !DILocation(line: 2533, column: 226, scope: !4021)
!4021 = !DILexicalBlockFile(scope: !687, file: !490, discriminator: 5)
!4022 = !DILocation(line: 2533, column: 287, scope: !4023)
!4023 = !DILexicalBlockFile(scope: !4015, file: !490, discriminator: 6)
!4024 = !DILocation(line: 2533, column: 305, scope: !4015)
!4025 = !DILocation(line: 2533, column: 315, scope: !4015)
!4026 = !DILocation(line: 2533, column: 340, scope: !4015)
!4027 = !DILocation(line: 2533, column: 271, scope: !4015)
!4028 = !DILocation(line: 2533, column: 359, scope: !4029)
!4029 = !DILexicalBlockFile(scope: !688, file: !490, discriminator: 7)
!4030 = !DILocation(line: 2533, column: 359, scope: !687)
!4031 = !DILocation(line: 2533, column: 359, scope: !4032)
!4032 = !DILexicalBlockFile(scope: !687, file: !490, discriminator: 8)
!4033 = !DILocation(line: 2533, column: 359, scope: !4034)
!4034 = !DILexicalBlockFile(scope: !687, file: !490, discriminator: 9)
!4035 = !DILocation(line: 2533, column: 372, scope: !4036)
!4036 = !DILexicalBlockFile(scope: !4037, file: !490, discriminator: 10)
!4037 = !DILexicalBlockFile(scope: !680, file: !490, discriminator: 3)
!4038 = !DILocation(line: 2533, column: 372, scope: !685)
!4039 = !DILocation(line: 2533, column: 372, scope: !4040)
!4040 = !DILexicalBlockFile(scope: !685, file: !490, discriminator: 11)
!4041 = !DILocation(line: 2533, column: 410, scope: !4042)
!4042 = !DILexicalBlockFile(scope: !680, file: !490, discriminator: 12)
!4043 = !DILocation(line: 2533, column: 408, scope: !680)
!4044 = !DILocation(line: 2533, column: 450, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2533, column: 429)
!4046 = !DILocation(line: 2533, column: 477, scope: !4045)
!4047 = !DILocation(line: 2533, column: 429, scope: !4045)
!4048 = !DILocation(line: 2533, column: 429, scope: !680)
!4049 = !DILocation(line: 2533, column: 502, scope: !4050)
!4050 = !DILexicalBlockFile(scope: !4045, file: !490, discriminator: 13)
!4051 = !DILocation(line: 2534, column: 21, scope: !680)
!4052 = !DILocation(line: 2534, column: 38, scope: !680)
!4053 = !DILocation(line: 2534, column: 47, scope: !680)
!4054 = !DILocation(line: 2534, column: 52, scope: !680)
!4055 = !DILocation(line: 2534, column: 57, scope: !4056)
!4056 = !DILexicalBlockFile(scope: !690, file: !490, discriminator: 1)
!4057 = !DILocation(line: 2534, column: 67, scope: !690)
!4058 = !DILocation(line: 2534, column: 98, scope: !690)
!4059 = !DILocation(line: 2534, column: 118, scope: !693)
!4060 = !DILocation(line: 2534, column: 134, scope: !693)
!4061 = !DILocation(line: 2534, column: 118, scope: !690)
!4062 = !DILocation(line: 2534, column: 149, scope: !4063)
!4063 = !DILexicalBlockFile(scope: !693, file: !490, discriminator: 2)
!4064 = !DILocation(line: 2534, column: 154, scope: !4065)
!4065 = !DILexicalBlockFile(scope: !692, file: !490, discriminator: 4)
!4066 = !DILocation(line: 2534, column: 164, scope: !692)
!4067 = !DILocation(line: 2534, column: 194, scope: !692)
!4068 = !DILocation(line: 2534, column: 220, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !692, file: !490, line: 2534, column: 217)
!4070 = !DILocation(line: 2534, column: 237, scope: !4069)
!4071 = !DILocation(line: 2534, column: 217, scope: !4069)
!4072 = !DILocation(line: 2534, column: 247, scope: !4069)
!4073 = !DILocation(line: 2534, column: 217, scope: !692)
!4074 = !DILocation(line: 2534, column: 217, scope: !4075)
!4075 = !DILexicalBlockFile(scope: !692, file: !490, discriminator: 5)
!4076 = !DILocation(line: 2534, column: 278, scope: !4077)
!4077 = !DILexicalBlockFile(scope: !4069, file: !490, discriminator: 6)
!4078 = !DILocation(line: 2534, column: 296, scope: !4069)
!4079 = !DILocation(line: 2534, column: 306, scope: !4069)
!4080 = !DILocation(line: 2534, column: 331, scope: !4069)
!4081 = !DILocation(line: 2534, column: 262, scope: !4069)
!4082 = !DILocation(line: 2534, column: 350, scope: !4083)
!4083 = !DILexicalBlockFile(scope: !693, file: !490, discriminator: 7)
!4084 = !DILocation(line: 2534, column: 350, scope: !692)
!4085 = !DILocation(line: 2534, column: 350, scope: !4086)
!4086 = !DILexicalBlockFile(scope: !692, file: !490, discriminator: 8)
!4087 = !DILocation(line: 2534, column: 350, scope: !4088)
!4088 = !DILexicalBlockFile(scope: !692, file: !490, discriminator: 9)
!4089 = !DILocation(line: 2534, column: 363, scope: !4036)
!4090 = !DILocation(line: 2534, column: 363, scope: !690)
!4091 = !DILocation(line: 2534, column: 363, scope: !4092)
!4092 = !DILexicalBlockFile(scope: !690, file: !490, discriminator: 11)
!4093 = !DILocation(line: 2534, column: 392, scope: !4042)
!4094 = !DILocation(line: 2534, column: 390, scope: !680)
!4095 = !DILocation(line: 2534, column: 432, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2534, column: 411)
!4097 = !DILocation(line: 2534, column: 450, scope: !4096)
!4098 = !DILocation(line: 2534, column: 411, scope: !4096)
!4099 = !DILocation(line: 2534, column: 411, scope: !680)
!4100 = !DILocation(line: 2534, column: 466, scope: !4101)
!4101 = !DILexicalBlockFile(scope: !4096, file: !490, discriminator: 13)
!4102 = !DILocation(line: 2538, column: 30, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2538, column: 9)
!4104 = !DILocation(line: 2538, column: 49, scope: !4103)
!4105 = !DILocation(line: 2538, column: 9, scope: !4103)
!4106 = !DILocation(line: 2538, column: 9, scope: !680)
!4107 = !DILocation(line: 2538, column: 66, scope: !4108)
!4108 = !DILexicalBlockFile(scope: !4103, file: !490, discriminator: 1)
!4109 = !DILocation(line: 2539, column: 30, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2539, column: 9)
!4111 = !DILocation(line: 2539, column: 53, scope: !4110)
!4112 = !DILocation(line: 2539, column: 9, scope: !4110)
!4113 = !DILocation(line: 2539, column: 9, scope: !680)
!4114 = !DILocation(line: 2539, column: 74, scope: !4115)
!4115 = !DILexicalBlockFile(scope: !4110, file: !490, discriminator: 1)
!4116 = !DILocation(line: 2540, column: 30, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2540, column: 9)
!4118 = !DILocation(line: 2540, column: 60, scope: !4117)
!4119 = !DILocation(line: 2540, column: 9, scope: !4117)
!4120 = !DILocation(line: 2540, column: 9, scope: !680)
!4121 = !DILocation(line: 2540, column: 88, scope: !4122)
!4122 = !DILexicalBlockFile(scope: !4117, file: !490, discriminator: 1)
!4123 = !DILocation(line: 2541, column: 30, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2541, column: 9)
!4125 = !DILocation(line: 2541, column: 50, scope: !4124)
!4126 = !DILocation(line: 2541, column: 9, scope: !4124)
!4127 = !DILocation(line: 2541, column: 9, scope: !680)
!4128 = !DILocation(line: 2541, column: 68, scope: !4129)
!4129 = !DILexicalBlockFile(scope: !4124, file: !490, discriminator: 1)
!4130 = !DILocation(line: 2542, column: 30, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2542, column: 9)
!4132 = !DILocation(line: 2542, column: 58, scope: !4131)
!4133 = !DILocation(line: 2542, column: 9, scope: !4131)
!4134 = !DILocation(line: 2542, column: 9, scope: !680)
!4135 = !DILocation(line: 2542, column: 84, scope: !4136)
!4136 = !DILexicalBlockFile(scope: !4131, file: !490, discriminator: 1)
!4137 = !DILocation(line: 2543, column: 30, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2543, column: 9)
!4139 = !DILocation(line: 2543, column: 55, scope: !4138)
!4140 = !DILocation(line: 2543, column: 9, scope: !4138)
!4141 = !DILocation(line: 2543, column: 9, scope: !680)
!4142 = !DILocation(line: 2543, column: 78, scope: !4143)
!4143 = !DILexicalBlockFile(scope: !4138, file: !490, discriminator: 1)
!4144 = !DILocation(line: 2544, column: 30, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2544, column: 9)
!4146 = !DILocation(line: 2544, column: 52, scope: !4145)
!4147 = !DILocation(line: 2544, column: 9, scope: !4145)
!4148 = !DILocation(line: 2544, column: 9, scope: !680)
!4149 = !DILocation(line: 2544, column: 72, scope: !4150)
!4150 = !DILexicalBlockFile(scope: !4145, file: !490, discriminator: 1)
!4151 = !DILocation(line: 2545, column: 30, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2545, column: 9)
!4153 = !DILocation(line: 2545, column: 57, scope: !4152)
!4154 = !DILocation(line: 2545, column: 9, scope: !4152)
!4155 = !DILocation(line: 2545, column: 9, scope: !680)
!4156 = !DILocation(line: 2545, column: 82, scope: !4157)
!4157 = !DILexicalBlockFile(scope: !4152, file: !490, discriminator: 1)
!4158 = !DILocation(line: 2546, column: 30, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2546, column: 9)
!4160 = !DILocation(line: 2546, column: 49, scope: !4159)
!4161 = !DILocation(line: 2546, column: 9, scope: !4159)
!4162 = !DILocation(line: 2546, column: 9, scope: !680)
!4163 = !DILocation(line: 2546, column: 66, scope: !4164)
!4164 = !DILexicalBlockFile(scope: !4159, file: !490, discriminator: 1)
!4165 = !DILocation(line: 2547, column: 30, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2547, column: 9)
!4167 = !DILocation(line: 2547, column: 52, scope: !4166)
!4168 = !DILocation(line: 2547, column: 9, scope: !4166)
!4169 = !DILocation(line: 2547, column: 9, scope: !680)
!4170 = !DILocation(line: 2547, column: 72, scope: !4171)
!4171 = !DILexicalBlockFile(scope: !4166, file: !490, discriminator: 1)
!4172 = !DILocation(line: 2548, column: 30, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2548, column: 9)
!4174 = !DILocation(line: 2548, column: 51, scope: !4173)
!4175 = !DILocation(line: 2548, column: 9, scope: !4173)
!4176 = !DILocation(line: 2548, column: 9, scope: !680)
!4177 = !DILocation(line: 2548, column: 70, scope: !4178)
!4178 = !DILexicalBlockFile(scope: !4173, file: !490, discriminator: 1)
!4179 = !DILocation(line: 2549, column: 30, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2549, column: 9)
!4181 = !DILocation(line: 2549, column: 49, scope: !4180)
!4182 = !DILocation(line: 2549, column: 9, scope: !4180)
!4183 = !DILocation(line: 2549, column: 9, scope: !680)
!4184 = !DILocation(line: 2549, column: 66, scope: !4185)
!4185 = !DILexicalBlockFile(scope: !4180, file: !490, discriminator: 1)
!4186 = !DILocation(line: 2550, column: 30, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2550, column: 9)
!4188 = !DILocation(line: 2550, column: 51, scope: !4187)
!4189 = !DILocation(line: 2550, column: 9, scope: !4187)
!4190 = !DILocation(line: 2550, column: 9, scope: !680)
!4191 = !DILocation(line: 2550, column: 70, scope: !4192)
!4192 = !DILexicalBlockFile(scope: !4187, file: !490, discriminator: 1)
!4193 = !DILocation(line: 2551, column: 30, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2551, column: 9)
!4195 = !DILocation(line: 2551, column: 53, scope: !4194)
!4196 = !DILocation(line: 2551, column: 9, scope: !4194)
!4197 = !DILocation(line: 2551, column: 9, scope: !680)
!4198 = !DILocation(line: 2551, column: 74, scope: !4199)
!4199 = !DILexicalBlockFile(scope: !4194, file: !490, discriminator: 1)
!4200 = !DILocation(line: 2552, column: 30, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2552, column: 9)
!4202 = !DILocation(line: 2552, column: 59, scope: !4201)
!4203 = !DILocation(line: 2552, column: 9, scope: !4201)
!4204 = !DILocation(line: 2552, column: 9, scope: !680)
!4205 = !DILocation(line: 2552, column: 86, scope: !4206)
!4206 = !DILexicalBlockFile(scope: !4201, file: !490, discriminator: 1)
!4207 = !DILocation(line: 2553, column: 30, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2553, column: 9)
!4209 = !DILocation(line: 2553, column: 59, scope: !4208)
!4210 = !DILocation(line: 2553, column: 9, scope: !4208)
!4211 = !DILocation(line: 2553, column: 9, scope: !680)
!4212 = !DILocation(line: 2553, column: 86, scope: !4213)
!4213 = !DILexicalBlockFile(scope: !4208, file: !490, discriminator: 1)
!4214 = !DILocation(line: 2554, column: 30, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2554, column: 9)
!4216 = !DILocation(line: 2554, column: 62, scope: !4215)
!4217 = !DILocation(line: 2554, column: 9, scope: !4215)
!4218 = !DILocation(line: 2554, column: 9, scope: !680)
!4219 = !DILocation(line: 2554, column: 92, scope: !4220)
!4220 = !DILexicalBlockFile(scope: !4215, file: !490, discriminator: 1)
!4221 = !DILocation(line: 2555, column: 30, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2555, column: 9)
!4223 = !DILocation(line: 2555, column: 55, scope: !4222)
!4224 = !DILocation(line: 2555, column: 9, scope: !4222)
!4225 = !DILocation(line: 2555, column: 9, scope: !680)
!4226 = !DILocation(line: 2555, column: 78, scope: !4227)
!4227 = !DILexicalBlockFile(scope: !4222, file: !490, discriminator: 1)
!4228 = !DILocation(line: 2556, column: 30, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2556, column: 9)
!4230 = !DILocation(line: 2556, column: 56, scope: !4229)
!4231 = !DILocation(line: 2556, column: 9, scope: !4229)
!4232 = !DILocation(line: 2556, column: 9, scope: !680)
!4233 = !DILocation(line: 2556, column: 80, scope: !4234)
!4234 = !DILexicalBlockFile(scope: !4229, file: !490, discriminator: 1)
!4235 = !DILocation(line: 2557, column: 30, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2557, column: 9)
!4237 = !DILocation(line: 2557, column: 59, scope: !4236)
!4238 = !DILocation(line: 2557, column: 9, scope: !4236)
!4239 = !DILocation(line: 2557, column: 9, scope: !680)
!4240 = !DILocation(line: 2557, column: 86, scope: !4241)
!4241 = !DILexicalBlockFile(scope: !4236, file: !490, discriminator: 1)
!4242 = !DILocation(line: 2558, column: 30, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2558, column: 9)
!4244 = !DILocation(line: 2558, column: 54, scope: !4243)
!4245 = !DILocation(line: 2558, column: 9, scope: !4243)
!4246 = !DILocation(line: 2558, column: 9, scope: !680)
!4247 = !DILocation(line: 2558, column: 76, scope: !4248)
!4248 = !DILexicalBlockFile(scope: !4243, file: !490, discriminator: 1)
!4249 = !DILocation(line: 2559, column: 30, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2559, column: 9)
!4251 = !DILocation(line: 2559, column: 58, scope: !4250)
!4252 = !DILocation(line: 2559, column: 9, scope: !4250)
!4253 = !DILocation(line: 2559, column: 9, scope: !680)
!4254 = !DILocation(line: 2559, column: 84, scope: !4255)
!4255 = !DILexicalBlockFile(scope: !4250, file: !490, discriminator: 1)
!4256 = !DILocation(line: 2560, column: 30, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2560, column: 9)
!4258 = !DILocation(line: 2560, column: 52, scope: !4257)
!4259 = !DILocation(line: 2560, column: 9, scope: !4257)
!4260 = !DILocation(line: 2560, column: 9, scope: !680)
!4261 = !DILocation(line: 2560, column: 72, scope: !4262)
!4262 = !DILexicalBlockFile(scope: !4257, file: !490, discriminator: 1)
!4263 = !DILocation(line: 2561, column: 30, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2561, column: 9)
!4265 = !DILocation(line: 2561, column: 55, scope: !4264)
!4266 = !DILocation(line: 2561, column: 9, scope: !4264)
!4267 = !DILocation(line: 2561, column: 9, scope: !680)
!4268 = !DILocation(line: 2561, column: 78, scope: !4269)
!4269 = !DILexicalBlockFile(scope: !4264, file: !490, discriminator: 1)
!4270 = !DILocation(line: 2562, column: 30, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2562, column: 9)
!4272 = !DILocation(line: 2562, column: 52, scope: !4271)
!4273 = !DILocation(line: 2562, column: 9, scope: !4271)
!4274 = !DILocation(line: 2562, column: 9, scope: !680)
!4275 = !DILocation(line: 2562, column: 72, scope: !4276)
!4276 = !DILexicalBlockFile(scope: !4271, file: !490, discriminator: 1)
!4277 = !DILocation(line: 2563, column: 30, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2563, column: 9)
!4279 = !DILocation(line: 2563, column: 52, scope: !4278)
!4280 = !DILocation(line: 2563, column: 9, scope: !4278)
!4281 = !DILocation(line: 2563, column: 9, scope: !680)
!4282 = !DILocation(line: 2563, column: 72, scope: !4283)
!4283 = !DILexicalBlockFile(scope: !4278, file: !490, discriminator: 1)
!4284 = !DILocation(line: 2564, column: 30, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2564, column: 9)
!4286 = !DILocation(line: 2564, column: 52, scope: !4285)
!4287 = !DILocation(line: 2564, column: 9, scope: !4285)
!4288 = !DILocation(line: 2564, column: 9, scope: !680)
!4289 = !DILocation(line: 2564, column: 72, scope: !4290)
!4290 = !DILexicalBlockFile(scope: !4285, file: !490, discriminator: 1)
!4291 = !DILocation(line: 2565, column: 30, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2565, column: 9)
!4293 = !DILocation(line: 2565, column: 48, scope: !4292)
!4294 = !DILocation(line: 2565, column: 9, scope: !4292)
!4295 = !DILocation(line: 2565, column: 9, scope: !680)
!4296 = !DILocation(line: 2565, column: 64, scope: !4297)
!4297 = !DILexicalBlockFile(scope: !4292, file: !490, discriminator: 1)
!4298 = !DILocation(line: 2566, column: 30, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2566, column: 9)
!4300 = !DILocation(line: 2566, column: 52, scope: !4299)
!4301 = !DILocation(line: 2566, column: 9, scope: !4299)
!4302 = !DILocation(line: 2566, column: 9, scope: !680)
!4303 = !DILocation(line: 2566, column: 72, scope: !4304)
!4304 = !DILexicalBlockFile(scope: !4299, file: !490, discriminator: 1)
!4305 = !DILocation(line: 2567, column: 30, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2567, column: 9)
!4307 = !DILocation(line: 2567, column: 59, scope: !4306)
!4308 = !DILocation(line: 2567, column: 9, scope: !4306)
!4309 = !DILocation(line: 2567, column: 9, scope: !680)
!4310 = !DILocation(line: 2567, column: 86, scope: !4311)
!4311 = !DILexicalBlockFile(scope: !4306, file: !490, discriminator: 1)
!4312 = !DILocation(line: 2568, column: 30, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2568, column: 9)
!4314 = !DILocation(line: 2568, column: 66, scope: !4313)
!4315 = !DILocation(line: 2568, column: 9, scope: !4313)
!4316 = !DILocation(line: 2568, column: 9, scope: !680)
!4317 = !DILocation(line: 2568, column: 100, scope: !4318)
!4318 = !DILexicalBlockFile(scope: !4313, file: !490, discriminator: 1)
!4319 = !DILocation(line: 2569, column: 30, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2569, column: 9)
!4321 = !DILocation(line: 2569, column: 54, scope: !4320)
!4322 = !DILocation(line: 2569, column: 9, scope: !4320)
!4323 = !DILocation(line: 2569, column: 9, scope: !680)
!4324 = !DILocation(line: 2569, column: 76, scope: !4325)
!4325 = !DILexicalBlockFile(scope: !4320, file: !490, discriminator: 1)
!4326 = !DILocation(line: 2570, column: 30, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2570, column: 9)
!4328 = !DILocation(line: 2570, column: 55, scope: !4327)
!4329 = !DILocation(line: 2570, column: 9, scope: !4327)
!4330 = !DILocation(line: 2570, column: 9, scope: !680)
!4331 = !DILocation(line: 2570, column: 78, scope: !4332)
!4332 = !DILexicalBlockFile(scope: !4327, file: !490, discriminator: 1)
!4333 = !DILocation(line: 2571, column: 30, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2571, column: 9)
!4335 = !DILocation(line: 2571, column: 54, scope: !4334)
!4336 = !DILocation(line: 2571, column: 9, scope: !4334)
!4337 = !DILocation(line: 2571, column: 9, scope: !680)
!4338 = !DILocation(line: 2571, column: 76, scope: !4339)
!4339 = !DILexicalBlockFile(scope: !4334, file: !490, discriminator: 1)
!4340 = !DILocation(line: 2572, column: 30, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2572, column: 9)
!4342 = !DILocation(line: 2572, column: 54, scope: !4341)
!4343 = !DILocation(line: 2572, column: 9, scope: !4341)
!4344 = !DILocation(line: 2572, column: 9, scope: !680)
!4345 = !DILocation(line: 2572, column: 76, scope: !4346)
!4346 = !DILexicalBlockFile(scope: !4341, file: !490, discriminator: 1)
!4347 = !DILocation(line: 2573, column: 30, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2573, column: 9)
!4349 = !DILocation(line: 2573, column: 55, scope: !4348)
!4350 = !DILocation(line: 2573, column: 9, scope: !4348)
!4351 = !DILocation(line: 2573, column: 9, scope: !680)
!4352 = !DILocation(line: 2573, column: 78, scope: !4353)
!4353 = !DILexicalBlockFile(scope: !4348, file: !490, discriminator: 1)
!4354 = !DILocation(line: 2574, column: 30, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2574, column: 9)
!4356 = !DILocation(line: 2574, column: 53, scope: !4355)
!4357 = !DILocation(line: 2574, column: 9, scope: !4355)
!4358 = !DILocation(line: 2574, column: 9, scope: !680)
!4359 = !DILocation(line: 2574, column: 74, scope: !4360)
!4360 = !DILexicalBlockFile(scope: !4355, file: !490, discriminator: 1)
!4361 = !DILocation(line: 2575, column: 30, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2575, column: 9)
!4363 = !DILocation(line: 2575, column: 56, scope: !4362)
!4364 = !DILocation(line: 2575, column: 9, scope: !4362)
!4365 = !DILocation(line: 2575, column: 9, scope: !680)
!4366 = !DILocation(line: 2575, column: 80, scope: !4367)
!4367 = !DILexicalBlockFile(scope: !4362, file: !490, discriminator: 1)
!4368 = !DILocation(line: 2577, column: 10, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2577, column: 9)
!4370 = !DILocation(line: 2577, column: 9, scope: !680)
!4371 = !DILocation(line: 2578, column: 20, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4369, file: !490, line: 2577, column: 20)
!4373 = !DILocation(line: 2578, column: 18, scope: !4372)
!4374 = !DILocation(line: 2579, column: 14, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4372, file: !490, line: 2579, column: 13)
!4376 = !DILocation(line: 2579, column: 13, scope: !4372)
!4377 = !DILocation(line: 2580, column: 13, scope: !4375)
!4378 = !DILocation(line: 2581, column: 5, scope: !4372)
!4379 = !DILocation(line: 2584, column: 30, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2584, column: 9)
!4381 = !DILocation(line: 2584, column: 56, scope: !4380)
!4382 = !DILocation(line: 2584, column: 9, scope: !4380)
!4383 = !DILocation(line: 2584, column: 9, scope: !680)
!4384 = !DILocation(line: 2584, column: 80, scope: !4385)
!4385 = !DILexicalBlockFile(scope: !4380, file: !490, discriminator: 1)
!4386 = !DILocation(line: 2586, column: 30, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2586, column: 9)
!4388 = !DILocation(line: 2586, column: 56, scope: !4387)
!4389 = !DILocation(line: 2586, column: 9, scope: !4387)
!4390 = !DILocation(line: 2586, column: 9, scope: !680)
!4391 = !DILocation(line: 2586, column: 80, scope: !4392)
!4392 = !DILexicalBlockFile(scope: !4387, file: !490, discriminator: 1)
!4393 = !DILocation(line: 2587, column: 7, scope: !695)
!4394 = !DILocation(line: 2587, column: 17, scope: !695)
!4395 = !DILocation(line: 2587, column: 25, scope: !695)
!4396 = !DILocation(line: 2587, column: 65, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !695, file: !490, line: 2587, column: 64)
!4398 = !DILocation(line: 2587, column: 71, scope: !4397)
!4399 = !DILocation(line: 2587, column: 89, scope: !4400)
!4400 = !DILexicalBlockFile(scope: !4397, file: !490, discriminator: 1)
!4401 = !DILocation(line: 2587, column: 99, scope: !4397)
!4402 = !DILocation(line: 2587, column: 106, scope: !4397)
!4403 = !DILocation(line: 2587, column: 74, scope: !4397)
!4404 = !DILocation(line: 2587, column: 64, scope: !695)
!4405 = !DILocation(line: 2587, column: 130, scope: !4406)
!4406 = !DILexicalBlockFile(scope: !4407, file: !490, discriminator: 3)
!4407 = !DILexicalBlockFile(scope: !4397, file: !490, discriminator: 2)
!4408 = !DILocation(line: 2587, column: 174, scope: !4409)
!4409 = !DILexicalBlockFile(scope: !695, file: !490, discriminator: 4)
!4410 = !DILocation(line: 2587, column: 179, scope: !4411)
!4411 = !DILexicalBlockFile(scope: !697, file: !490, discriminator: 5)
!4412 = !DILocation(line: 2587, column: 189, scope: !697)
!4413 = !DILocation(line: 2587, column: 219, scope: !697)
!4414 = !DILocation(line: 2587, column: 235, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !697, file: !490, line: 2587, column: 232)
!4416 = !DILocation(line: 2587, column: 252, scope: !4415)
!4417 = !DILocation(line: 2587, column: 232, scope: !4415)
!4418 = !DILocation(line: 2587, column: 262, scope: !4415)
!4419 = !DILocation(line: 2587, column: 232, scope: !697)
!4420 = !DILocation(line: 2587, column: 232, scope: !4421)
!4421 = !DILexicalBlockFile(scope: !697, file: !490, discriminator: 6)
!4422 = !DILocation(line: 2587, column: 293, scope: !4423)
!4423 = !DILexicalBlockFile(scope: !4415, file: !490, discriminator: 7)
!4424 = !DILocation(line: 2587, column: 311, scope: !4415)
!4425 = !DILocation(line: 2587, column: 321, scope: !4415)
!4426 = !DILocation(line: 2587, column: 346, scope: !4415)
!4427 = !DILocation(line: 2587, column: 277, scope: !4415)
!4428 = !DILocation(line: 2587, column: 365, scope: !4429)
!4429 = !DILexicalBlockFile(scope: !695, file: !490, discriminator: 8)
!4430 = !DILocation(line: 2587, column: 365, scope: !697)
!4431 = !DILocation(line: 2587, column: 365, scope: !4432)
!4432 = !DILexicalBlockFile(scope: !697, file: !490, discriminator: 9)
!4433 = !DILocation(line: 2587, column: 378, scope: !4434)
!4434 = !DILexicalBlockFile(scope: !680, file: !490, discriminator: 10)
!4435 = !DILocation(line: 2588, column: 7, scope: !699)
!4436 = !DILocation(line: 2588, column: 17, scope: !699)
!4437 = !DILocation(line: 2588, column: 25, scope: !699)
!4438 = !DILocation(line: 2588, column: 66, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !699, file: !490, line: 2588, column: 65)
!4440 = !DILocation(line: 2588, column: 72, scope: !4439)
!4441 = !DILocation(line: 2588, column: 90, scope: !4442)
!4442 = !DILexicalBlockFile(scope: !4439, file: !490, discriminator: 1)
!4443 = !DILocation(line: 2588, column: 100, scope: !4439)
!4444 = !DILocation(line: 2588, column: 107, scope: !4439)
!4445 = !DILocation(line: 2588, column: 75, scope: !4439)
!4446 = !DILocation(line: 2588, column: 65, scope: !699)
!4447 = !DILocation(line: 2588, column: 131, scope: !4448)
!4448 = !DILexicalBlockFile(scope: !4449, file: !490, discriminator: 3)
!4449 = !DILexicalBlockFile(scope: !4439, file: !490, discriminator: 2)
!4450 = !DILocation(line: 2588, column: 175, scope: !4451)
!4451 = !DILexicalBlockFile(scope: !699, file: !490, discriminator: 4)
!4452 = !DILocation(line: 2588, column: 180, scope: !4453)
!4453 = !DILexicalBlockFile(scope: !701, file: !490, discriminator: 5)
!4454 = !DILocation(line: 2588, column: 190, scope: !701)
!4455 = !DILocation(line: 2588, column: 220, scope: !701)
!4456 = !DILocation(line: 2588, column: 236, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !701, file: !490, line: 2588, column: 233)
!4458 = !DILocation(line: 2588, column: 253, scope: !4457)
!4459 = !DILocation(line: 2588, column: 233, scope: !4457)
!4460 = !DILocation(line: 2588, column: 263, scope: !4457)
!4461 = !DILocation(line: 2588, column: 233, scope: !701)
!4462 = !DILocation(line: 2588, column: 233, scope: !4463)
!4463 = !DILexicalBlockFile(scope: !701, file: !490, discriminator: 6)
!4464 = !DILocation(line: 2588, column: 294, scope: !4465)
!4465 = !DILexicalBlockFile(scope: !4457, file: !490, discriminator: 7)
!4466 = !DILocation(line: 2588, column: 312, scope: !4457)
!4467 = !DILocation(line: 2588, column: 322, scope: !4457)
!4468 = !DILocation(line: 2588, column: 347, scope: !4457)
!4469 = !DILocation(line: 2588, column: 278, scope: !4457)
!4470 = !DILocation(line: 2588, column: 366, scope: !4471)
!4471 = !DILexicalBlockFile(scope: !699, file: !490, discriminator: 8)
!4472 = !DILocation(line: 2588, column: 366, scope: !701)
!4473 = !DILocation(line: 2588, column: 366, scope: !4474)
!4474 = !DILexicalBlockFile(scope: !701, file: !490, discriminator: 9)
!4475 = !DILocation(line: 2588, column: 379, scope: !4434)
!4476 = !DILocation(line: 2589, column: 7, scope: !703)
!4477 = !DILocation(line: 2589, column: 17, scope: !703)
!4478 = !DILocation(line: 2589, column: 25, scope: !703)
!4479 = !DILocation(line: 2589, column: 66, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !703, file: !490, line: 2589, column: 65)
!4481 = !DILocation(line: 2589, column: 72, scope: !4480)
!4482 = !DILocation(line: 2589, column: 90, scope: !4483)
!4483 = !DILexicalBlockFile(scope: !4480, file: !490, discriminator: 1)
!4484 = !DILocation(line: 2589, column: 100, scope: !4480)
!4485 = !DILocation(line: 2589, column: 107, scope: !4480)
!4486 = !DILocation(line: 2589, column: 75, scope: !4480)
!4487 = !DILocation(line: 2589, column: 65, scope: !703)
!4488 = !DILocation(line: 2589, column: 131, scope: !4489)
!4489 = !DILexicalBlockFile(scope: !4490, file: !490, discriminator: 3)
!4490 = !DILexicalBlockFile(scope: !4480, file: !490, discriminator: 2)
!4491 = !DILocation(line: 2589, column: 175, scope: !4492)
!4492 = !DILexicalBlockFile(scope: !703, file: !490, discriminator: 4)
!4493 = !DILocation(line: 2589, column: 180, scope: !4494)
!4494 = !DILexicalBlockFile(scope: !705, file: !490, discriminator: 5)
!4495 = !DILocation(line: 2589, column: 190, scope: !705)
!4496 = !DILocation(line: 2589, column: 220, scope: !705)
!4497 = !DILocation(line: 2589, column: 236, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !705, file: !490, line: 2589, column: 233)
!4499 = !DILocation(line: 2589, column: 253, scope: !4498)
!4500 = !DILocation(line: 2589, column: 233, scope: !4498)
!4501 = !DILocation(line: 2589, column: 263, scope: !4498)
!4502 = !DILocation(line: 2589, column: 233, scope: !705)
!4503 = !DILocation(line: 2589, column: 233, scope: !4504)
!4504 = !DILexicalBlockFile(scope: !705, file: !490, discriminator: 6)
!4505 = !DILocation(line: 2589, column: 294, scope: !4506)
!4506 = !DILexicalBlockFile(scope: !4498, file: !490, discriminator: 7)
!4507 = !DILocation(line: 2589, column: 312, scope: !4498)
!4508 = !DILocation(line: 2589, column: 322, scope: !4498)
!4509 = !DILocation(line: 2589, column: 347, scope: !4498)
!4510 = !DILocation(line: 2589, column: 278, scope: !4498)
!4511 = !DILocation(line: 2589, column: 366, scope: !4512)
!4512 = !DILexicalBlockFile(scope: !703, file: !490, discriminator: 8)
!4513 = !DILocation(line: 2589, column: 366, scope: !705)
!4514 = !DILocation(line: 2589, column: 366, scope: !4515)
!4515 = !DILexicalBlockFile(scope: !705, file: !490, discriminator: 9)
!4516 = !DILocation(line: 2589, column: 379, scope: !4434)
!4517 = !DILocation(line: 2590, column: 7, scope: !707)
!4518 = !DILocation(line: 2590, column: 17, scope: !707)
!4519 = !DILocation(line: 2590, column: 25, scope: !707)
!4520 = !DILocation(line: 2590, column: 65, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !707, file: !490, line: 2590, column: 64)
!4522 = !DILocation(line: 2590, column: 71, scope: !4521)
!4523 = !DILocation(line: 2590, column: 89, scope: !4524)
!4524 = !DILexicalBlockFile(scope: !4521, file: !490, discriminator: 1)
!4525 = !DILocation(line: 2590, column: 99, scope: !4521)
!4526 = !DILocation(line: 2590, column: 106, scope: !4521)
!4527 = !DILocation(line: 2590, column: 74, scope: !4521)
!4528 = !DILocation(line: 2590, column: 64, scope: !707)
!4529 = !DILocation(line: 2590, column: 130, scope: !4530)
!4530 = !DILexicalBlockFile(scope: !4531, file: !490, discriminator: 3)
!4531 = !DILexicalBlockFile(scope: !4521, file: !490, discriminator: 2)
!4532 = !DILocation(line: 2590, column: 174, scope: !4533)
!4533 = !DILexicalBlockFile(scope: !707, file: !490, discriminator: 4)
!4534 = !DILocation(line: 2590, column: 179, scope: !4535)
!4535 = !DILexicalBlockFile(scope: !709, file: !490, discriminator: 5)
!4536 = !DILocation(line: 2590, column: 189, scope: !709)
!4537 = !DILocation(line: 2590, column: 219, scope: !709)
!4538 = !DILocation(line: 2590, column: 235, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !709, file: !490, line: 2590, column: 232)
!4540 = !DILocation(line: 2590, column: 252, scope: !4539)
!4541 = !DILocation(line: 2590, column: 232, scope: !4539)
!4542 = !DILocation(line: 2590, column: 262, scope: !4539)
!4543 = !DILocation(line: 2590, column: 232, scope: !709)
!4544 = !DILocation(line: 2590, column: 232, scope: !4545)
!4545 = !DILexicalBlockFile(scope: !709, file: !490, discriminator: 6)
!4546 = !DILocation(line: 2590, column: 293, scope: !4547)
!4547 = !DILexicalBlockFile(scope: !4539, file: !490, discriminator: 7)
!4548 = !DILocation(line: 2590, column: 311, scope: !4539)
!4549 = !DILocation(line: 2590, column: 321, scope: !4539)
!4550 = !DILocation(line: 2590, column: 346, scope: !4539)
!4551 = !DILocation(line: 2590, column: 277, scope: !4539)
!4552 = !DILocation(line: 2590, column: 365, scope: !4553)
!4553 = !DILexicalBlockFile(scope: !707, file: !490, discriminator: 8)
!4554 = !DILocation(line: 2590, column: 365, scope: !709)
!4555 = !DILocation(line: 2590, column: 365, scope: !4556)
!4556 = !DILexicalBlockFile(scope: !709, file: !490, discriminator: 9)
!4557 = !DILocation(line: 2590, column: 378, scope: !4434)
!4558 = !DILocation(line: 2591, column: 30, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2591, column: 9)
!4560 = !DILocation(line: 2591, column: 56, scope: !4559)
!4561 = !DILocation(line: 2591, column: 9, scope: !4559)
!4562 = !DILocation(line: 2591, column: 9, scope: !680)
!4563 = !DILocation(line: 2591, column: 80, scope: !4564)
!4564 = !DILexicalBlockFile(scope: !4559, file: !490, discriminator: 1)
!4565 = !DILocation(line: 2592, column: 7, scope: !711)
!4566 = !DILocation(line: 2592, column: 17, scope: !711)
!4567 = !DILocation(line: 2592, column: 25, scope: !711)
!4568 = !DILocation(line: 2592, column: 65, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !711, file: !490, line: 2592, column: 64)
!4570 = !DILocation(line: 2592, column: 71, scope: !4569)
!4571 = !DILocation(line: 2592, column: 89, scope: !4572)
!4572 = !DILexicalBlockFile(scope: !4569, file: !490, discriminator: 1)
!4573 = !DILocation(line: 2592, column: 99, scope: !4569)
!4574 = !DILocation(line: 2592, column: 106, scope: !4569)
!4575 = !DILocation(line: 2592, column: 74, scope: !4569)
!4576 = !DILocation(line: 2592, column: 64, scope: !711)
!4577 = !DILocation(line: 2592, column: 130, scope: !4578)
!4578 = !DILexicalBlockFile(scope: !4579, file: !490, discriminator: 3)
!4579 = !DILexicalBlockFile(scope: !4569, file: !490, discriminator: 2)
!4580 = !DILocation(line: 2592, column: 174, scope: !4581)
!4581 = !DILexicalBlockFile(scope: !711, file: !490, discriminator: 4)
!4582 = !DILocation(line: 2592, column: 179, scope: !4583)
!4583 = !DILexicalBlockFile(scope: !713, file: !490, discriminator: 5)
!4584 = !DILocation(line: 2592, column: 189, scope: !713)
!4585 = !DILocation(line: 2592, column: 219, scope: !713)
!4586 = !DILocation(line: 2592, column: 235, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !713, file: !490, line: 2592, column: 232)
!4588 = !DILocation(line: 2592, column: 252, scope: !4587)
!4589 = !DILocation(line: 2592, column: 232, scope: !4587)
!4590 = !DILocation(line: 2592, column: 262, scope: !4587)
!4591 = !DILocation(line: 2592, column: 232, scope: !713)
!4592 = !DILocation(line: 2592, column: 232, scope: !4593)
!4593 = !DILexicalBlockFile(scope: !713, file: !490, discriminator: 6)
!4594 = !DILocation(line: 2592, column: 293, scope: !4595)
!4595 = !DILexicalBlockFile(scope: !4587, file: !490, discriminator: 7)
!4596 = !DILocation(line: 2592, column: 311, scope: !4587)
!4597 = !DILocation(line: 2592, column: 321, scope: !4587)
!4598 = !DILocation(line: 2592, column: 346, scope: !4587)
!4599 = !DILocation(line: 2592, column: 277, scope: !4587)
!4600 = !DILocation(line: 2592, column: 365, scope: !4601)
!4601 = !DILexicalBlockFile(scope: !711, file: !490, discriminator: 8)
!4602 = !DILocation(line: 2592, column: 365, scope: !713)
!4603 = !DILocation(line: 2592, column: 365, scope: !4604)
!4604 = !DILexicalBlockFile(scope: !713, file: !490, discriminator: 9)
!4605 = !DILocation(line: 2592, column: 378, scope: !4434)
!4606 = !DILocation(line: 2593, column: 7, scope: !715)
!4607 = !DILocation(line: 2593, column: 17, scope: !715)
!4608 = !DILocation(line: 2593, column: 25, scope: !715)
!4609 = !DILocation(line: 2593, column: 66, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !715, file: !490, line: 2593, column: 65)
!4611 = !DILocation(line: 2593, column: 72, scope: !4610)
!4612 = !DILocation(line: 2593, column: 90, scope: !4613)
!4613 = !DILexicalBlockFile(scope: !4610, file: !490, discriminator: 1)
!4614 = !DILocation(line: 2593, column: 100, scope: !4610)
!4615 = !DILocation(line: 2593, column: 107, scope: !4610)
!4616 = !DILocation(line: 2593, column: 75, scope: !4610)
!4617 = !DILocation(line: 2593, column: 65, scope: !715)
!4618 = !DILocation(line: 2593, column: 131, scope: !4619)
!4619 = !DILexicalBlockFile(scope: !4620, file: !490, discriminator: 3)
!4620 = !DILexicalBlockFile(scope: !4610, file: !490, discriminator: 2)
!4621 = !DILocation(line: 2593, column: 175, scope: !4622)
!4622 = !DILexicalBlockFile(scope: !715, file: !490, discriminator: 4)
!4623 = !DILocation(line: 2593, column: 180, scope: !4624)
!4624 = !DILexicalBlockFile(scope: !717, file: !490, discriminator: 5)
!4625 = !DILocation(line: 2593, column: 190, scope: !717)
!4626 = !DILocation(line: 2593, column: 220, scope: !717)
!4627 = !DILocation(line: 2593, column: 236, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !717, file: !490, line: 2593, column: 233)
!4629 = !DILocation(line: 2593, column: 253, scope: !4628)
!4630 = !DILocation(line: 2593, column: 233, scope: !4628)
!4631 = !DILocation(line: 2593, column: 263, scope: !4628)
!4632 = !DILocation(line: 2593, column: 233, scope: !717)
!4633 = !DILocation(line: 2593, column: 233, scope: !4634)
!4634 = !DILexicalBlockFile(scope: !717, file: !490, discriminator: 6)
!4635 = !DILocation(line: 2593, column: 294, scope: !4636)
!4636 = !DILexicalBlockFile(scope: !4628, file: !490, discriminator: 7)
!4637 = !DILocation(line: 2593, column: 312, scope: !4628)
!4638 = !DILocation(line: 2593, column: 322, scope: !4628)
!4639 = !DILocation(line: 2593, column: 347, scope: !4628)
!4640 = !DILocation(line: 2593, column: 278, scope: !4628)
!4641 = !DILocation(line: 2593, column: 366, scope: !4642)
!4642 = !DILexicalBlockFile(scope: !715, file: !490, discriminator: 8)
!4643 = !DILocation(line: 2593, column: 366, scope: !717)
!4644 = !DILocation(line: 2593, column: 366, scope: !4645)
!4645 = !DILexicalBlockFile(scope: !717, file: !490, discriminator: 9)
!4646 = !DILocation(line: 2593, column: 379, scope: !4434)
!4647 = !DILocation(line: 2594, column: 30, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2594, column: 9)
!4649 = !DILocation(line: 2594, column: 58, scope: !4648)
!4650 = !DILocation(line: 2594, column: 9, scope: !4648)
!4651 = !DILocation(line: 2594, column: 9, scope: !680)
!4652 = !DILocation(line: 2594, column: 84, scope: !4653)
!4653 = !DILexicalBlockFile(scope: !4648, file: !490, discriminator: 1)
!4654 = !DILocation(line: 2595, column: 7, scope: !719)
!4655 = !DILocation(line: 2595, column: 17, scope: !719)
!4656 = !DILocation(line: 2595, column: 25, scope: !719)
!4657 = !DILocation(line: 2595, column: 65, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !719, file: !490, line: 2595, column: 64)
!4659 = !DILocation(line: 2595, column: 71, scope: !4658)
!4660 = !DILocation(line: 2595, column: 89, scope: !4661)
!4661 = !DILexicalBlockFile(scope: !4658, file: !490, discriminator: 1)
!4662 = !DILocation(line: 2595, column: 99, scope: !4658)
!4663 = !DILocation(line: 2595, column: 106, scope: !4658)
!4664 = !DILocation(line: 2595, column: 74, scope: !4658)
!4665 = !DILocation(line: 2595, column: 64, scope: !719)
!4666 = !DILocation(line: 2595, column: 132, scope: !4667)
!4667 = !DILexicalBlockFile(scope: !4668, file: !490, discriminator: 3)
!4668 = !DILexicalBlockFile(scope: !4658, file: !490, discriminator: 2)
!4669 = !DILocation(line: 2595, column: 176, scope: !4670)
!4670 = !DILexicalBlockFile(scope: !719, file: !490, discriminator: 4)
!4671 = !DILocation(line: 2595, column: 181, scope: !4672)
!4672 = !DILexicalBlockFile(scope: !721, file: !490, discriminator: 5)
!4673 = !DILocation(line: 2595, column: 191, scope: !721)
!4674 = !DILocation(line: 2595, column: 221, scope: !721)
!4675 = !DILocation(line: 2595, column: 237, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !721, file: !490, line: 2595, column: 234)
!4677 = !DILocation(line: 2595, column: 254, scope: !4676)
!4678 = !DILocation(line: 2595, column: 234, scope: !4676)
!4679 = !DILocation(line: 2595, column: 264, scope: !4676)
!4680 = !DILocation(line: 2595, column: 234, scope: !721)
!4681 = !DILocation(line: 2595, column: 234, scope: !4682)
!4682 = !DILexicalBlockFile(scope: !721, file: !490, discriminator: 6)
!4683 = !DILocation(line: 2595, column: 295, scope: !4684)
!4684 = !DILexicalBlockFile(scope: !4676, file: !490, discriminator: 7)
!4685 = !DILocation(line: 2595, column: 313, scope: !4676)
!4686 = !DILocation(line: 2595, column: 323, scope: !4676)
!4687 = !DILocation(line: 2595, column: 348, scope: !4676)
!4688 = !DILocation(line: 2595, column: 279, scope: !4676)
!4689 = !DILocation(line: 2595, column: 367, scope: !4690)
!4690 = !DILexicalBlockFile(scope: !719, file: !490, discriminator: 8)
!4691 = !DILocation(line: 2595, column: 367, scope: !721)
!4692 = !DILocation(line: 2595, column: 367, scope: !4693)
!4693 = !DILexicalBlockFile(scope: !721, file: !490, discriminator: 9)
!4694 = !DILocation(line: 2595, column: 380, scope: !4434)
!4695 = !DILocation(line: 2596, column: 30, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2596, column: 9)
!4697 = !DILocation(line: 2596, column: 63, scope: !4696)
!4698 = !DILocation(line: 2596, column: 9, scope: !4696)
!4699 = !DILocation(line: 2596, column: 9, scope: !680)
!4700 = !DILocation(line: 2596, column: 94, scope: !4701)
!4701 = !DILexicalBlockFile(scope: !4696, file: !490, discriminator: 1)
!4702 = !DILocation(line: 2597, column: 7, scope: !723)
!4703 = !DILocation(line: 2597, column: 17, scope: !723)
!4704 = !DILocation(line: 2597, column: 25, scope: !723)
!4705 = !DILocation(line: 2597, column: 66, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !723, file: !490, line: 2597, column: 65)
!4707 = !DILocation(line: 2597, column: 72, scope: !4706)
!4708 = !DILocation(line: 2597, column: 90, scope: !4709)
!4709 = !DILexicalBlockFile(scope: !4706, file: !490, discriminator: 1)
!4710 = !DILocation(line: 2597, column: 100, scope: !4706)
!4711 = !DILocation(line: 2597, column: 107, scope: !4706)
!4712 = !DILocation(line: 2597, column: 75, scope: !4706)
!4713 = !DILocation(line: 2597, column: 65, scope: !723)
!4714 = !DILocation(line: 2597, column: 138, scope: !4715)
!4715 = !DILexicalBlockFile(scope: !4716, file: !490, discriminator: 3)
!4716 = !DILexicalBlockFile(scope: !4706, file: !490, discriminator: 2)
!4717 = !DILocation(line: 2597, column: 182, scope: !4718)
!4718 = !DILexicalBlockFile(scope: !723, file: !490, discriminator: 4)
!4719 = !DILocation(line: 2597, column: 187, scope: !4720)
!4720 = !DILexicalBlockFile(scope: !725, file: !490, discriminator: 5)
!4721 = !DILocation(line: 2597, column: 197, scope: !725)
!4722 = !DILocation(line: 2597, column: 227, scope: !725)
!4723 = !DILocation(line: 2597, column: 243, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !725, file: !490, line: 2597, column: 240)
!4725 = !DILocation(line: 2597, column: 260, scope: !4724)
!4726 = !DILocation(line: 2597, column: 240, scope: !4724)
!4727 = !DILocation(line: 2597, column: 270, scope: !4724)
!4728 = !DILocation(line: 2597, column: 240, scope: !725)
!4729 = !DILocation(line: 2597, column: 240, scope: !4730)
!4730 = !DILexicalBlockFile(scope: !725, file: !490, discriminator: 6)
!4731 = !DILocation(line: 2597, column: 301, scope: !4732)
!4732 = !DILexicalBlockFile(scope: !4724, file: !490, discriminator: 7)
!4733 = !DILocation(line: 2597, column: 319, scope: !4724)
!4734 = !DILocation(line: 2597, column: 329, scope: !4724)
!4735 = !DILocation(line: 2597, column: 354, scope: !4724)
!4736 = !DILocation(line: 2597, column: 285, scope: !4724)
!4737 = !DILocation(line: 2597, column: 373, scope: !4738)
!4738 = !DILexicalBlockFile(scope: !723, file: !490, discriminator: 8)
!4739 = !DILocation(line: 2597, column: 373, scope: !725)
!4740 = !DILocation(line: 2597, column: 373, scope: !4741)
!4741 = !DILexicalBlockFile(scope: !725, file: !490, discriminator: 9)
!4742 = !DILocation(line: 2597, column: 386, scope: !4434)
!4743 = !DILocation(line: 2598, column: 30, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2598, column: 9)
!4745 = !DILocation(line: 2598, column: 63, scope: !4744)
!4746 = !DILocation(line: 2598, column: 9, scope: !4744)
!4747 = !DILocation(line: 2598, column: 9, scope: !680)
!4748 = !DILocation(line: 2598, column: 94, scope: !4749)
!4749 = !DILexicalBlockFile(scope: !4744, file: !490, discriminator: 1)
!4750 = !DILocation(line: 2599, column: 7, scope: !727)
!4751 = !DILocation(line: 2599, column: 17, scope: !727)
!4752 = !DILocation(line: 2599, column: 25, scope: !727)
!4753 = !DILocation(line: 2599, column: 66, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !727, file: !490, line: 2599, column: 65)
!4755 = !DILocation(line: 2599, column: 72, scope: !4754)
!4756 = !DILocation(line: 2599, column: 90, scope: !4757)
!4757 = !DILexicalBlockFile(scope: !4754, file: !490, discriminator: 1)
!4758 = !DILocation(line: 2599, column: 100, scope: !4754)
!4759 = !DILocation(line: 2599, column: 107, scope: !4754)
!4760 = !DILocation(line: 2599, column: 75, scope: !4754)
!4761 = !DILocation(line: 2599, column: 65, scope: !727)
!4762 = !DILocation(line: 2599, column: 138, scope: !4763)
!4763 = !DILexicalBlockFile(scope: !4764, file: !490, discriminator: 3)
!4764 = !DILexicalBlockFile(scope: !4754, file: !490, discriminator: 2)
!4765 = !DILocation(line: 2599, column: 182, scope: !4766)
!4766 = !DILexicalBlockFile(scope: !727, file: !490, discriminator: 4)
!4767 = !DILocation(line: 2599, column: 187, scope: !4768)
!4768 = !DILexicalBlockFile(scope: !729, file: !490, discriminator: 5)
!4769 = !DILocation(line: 2599, column: 197, scope: !729)
!4770 = !DILocation(line: 2599, column: 227, scope: !729)
!4771 = !DILocation(line: 2599, column: 243, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !729, file: !490, line: 2599, column: 240)
!4773 = !DILocation(line: 2599, column: 260, scope: !4772)
!4774 = !DILocation(line: 2599, column: 240, scope: !4772)
!4775 = !DILocation(line: 2599, column: 270, scope: !4772)
!4776 = !DILocation(line: 2599, column: 240, scope: !729)
!4777 = !DILocation(line: 2599, column: 240, scope: !4778)
!4778 = !DILexicalBlockFile(scope: !729, file: !490, discriminator: 6)
!4779 = !DILocation(line: 2599, column: 301, scope: !4780)
!4780 = !DILexicalBlockFile(scope: !4772, file: !490, discriminator: 7)
!4781 = !DILocation(line: 2599, column: 319, scope: !4772)
!4782 = !DILocation(line: 2599, column: 329, scope: !4772)
!4783 = !DILocation(line: 2599, column: 354, scope: !4772)
!4784 = !DILocation(line: 2599, column: 285, scope: !4772)
!4785 = !DILocation(line: 2599, column: 373, scope: !4786)
!4786 = !DILexicalBlockFile(scope: !727, file: !490, discriminator: 8)
!4787 = !DILocation(line: 2599, column: 373, scope: !729)
!4788 = !DILocation(line: 2599, column: 373, scope: !4789)
!4789 = !DILexicalBlockFile(scope: !729, file: !490, discriminator: 9)
!4790 = !DILocation(line: 2599, column: 386, scope: !4434)
!4791 = !DILocation(line: 2600, column: 30, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2600, column: 9)
!4793 = !DILocation(line: 2600, column: 61, scope: !4792)
!4794 = !DILocation(line: 2600, column: 9, scope: !4792)
!4795 = !DILocation(line: 2600, column: 9, scope: !680)
!4796 = !DILocation(line: 2600, column: 90, scope: !4797)
!4797 = !DILexicalBlockFile(scope: !4792, file: !490, discriminator: 1)
!4798 = !DILocation(line: 2601, column: 7, scope: !731)
!4799 = !DILocation(line: 2601, column: 17, scope: !731)
!4800 = !DILocation(line: 2601, column: 25, scope: !731)
!4801 = !DILocation(line: 2601, column: 66, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !731, file: !490, line: 2601, column: 65)
!4803 = !DILocation(line: 2601, column: 72, scope: !4802)
!4804 = !DILocation(line: 2601, column: 90, scope: !4805)
!4805 = !DILexicalBlockFile(scope: !4802, file: !490, discriminator: 1)
!4806 = !DILocation(line: 2601, column: 100, scope: !4802)
!4807 = !DILocation(line: 2601, column: 107, scope: !4802)
!4808 = !DILocation(line: 2601, column: 75, scope: !4802)
!4809 = !DILocation(line: 2601, column: 65, scope: !731)
!4810 = !DILocation(line: 2601, column: 136, scope: !4811)
!4811 = !DILexicalBlockFile(scope: !4812, file: !490, discriminator: 3)
!4812 = !DILexicalBlockFile(scope: !4802, file: !490, discriminator: 2)
!4813 = !DILocation(line: 2601, column: 180, scope: !4814)
!4814 = !DILexicalBlockFile(scope: !731, file: !490, discriminator: 4)
!4815 = !DILocation(line: 2601, column: 185, scope: !4816)
!4816 = !DILexicalBlockFile(scope: !733, file: !490, discriminator: 5)
!4817 = !DILocation(line: 2601, column: 195, scope: !733)
!4818 = !DILocation(line: 2601, column: 225, scope: !733)
!4819 = !DILocation(line: 2601, column: 241, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !733, file: !490, line: 2601, column: 238)
!4821 = !DILocation(line: 2601, column: 258, scope: !4820)
!4822 = !DILocation(line: 2601, column: 238, scope: !4820)
!4823 = !DILocation(line: 2601, column: 268, scope: !4820)
!4824 = !DILocation(line: 2601, column: 238, scope: !733)
!4825 = !DILocation(line: 2601, column: 238, scope: !4826)
!4826 = !DILexicalBlockFile(scope: !733, file: !490, discriminator: 6)
!4827 = !DILocation(line: 2601, column: 299, scope: !4828)
!4828 = !DILexicalBlockFile(scope: !4820, file: !490, discriminator: 7)
!4829 = !DILocation(line: 2601, column: 317, scope: !4820)
!4830 = !DILocation(line: 2601, column: 327, scope: !4820)
!4831 = !DILocation(line: 2601, column: 352, scope: !4820)
!4832 = !DILocation(line: 2601, column: 283, scope: !4820)
!4833 = !DILocation(line: 2601, column: 371, scope: !4834)
!4834 = !DILexicalBlockFile(scope: !731, file: !490, discriminator: 8)
!4835 = !DILocation(line: 2601, column: 371, scope: !733)
!4836 = !DILocation(line: 2601, column: 371, scope: !4837)
!4837 = !DILexicalBlockFile(scope: !733, file: !490, discriminator: 9)
!4838 = !DILocation(line: 2601, column: 384, scope: !4434)
!4839 = !DILocation(line: 2602, column: 30, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2602, column: 9)
!4841 = !DILocation(line: 2602, column: 56, scope: !4840)
!4842 = !DILocation(line: 2602, column: 9, scope: !4840)
!4843 = !DILocation(line: 2602, column: 9, scope: !680)
!4844 = !DILocation(line: 2602, column: 80, scope: !4845)
!4845 = !DILexicalBlockFile(scope: !4840, file: !490, discriminator: 1)
!4846 = !DILocation(line: 2603, column: 7, scope: !735)
!4847 = !DILocation(line: 2603, column: 17, scope: !735)
!4848 = !DILocation(line: 2603, column: 25, scope: !735)
!4849 = !DILocation(line: 2603, column: 65, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !735, file: !490, line: 2603, column: 64)
!4851 = !DILocation(line: 2603, column: 71, scope: !4850)
!4852 = !DILocation(line: 2603, column: 89, scope: !4853)
!4853 = !DILexicalBlockFile(scope: !4850, file: !490, discriminator: 1)
!4854 = !DILocation(line: 2603, column: 99, scope: !4850)
!4855 = !DILocation(line: 2603, column: 106, scope: !4850)
!4856 = !DILocation(line: 2603, column: 74, scope: !4850)
!4857 = !DILocation(line: 2603, column: 64, scope: !735)
!4858 = !DILocation(line: 2603, column: 130, scope: !4859)
!4859 = !DILexicalBlockFile(scope: !4860, file: !490, discriminator: 3)
!4860 = !DILexicalBlockFile(scope: !4850, file: !490, discriminator: 2)
!4861 = !DILocation(line: 2603, column: 174, scope: !4862)
!4862 = !DILexicalBlockFile(scope: !735, file: !490, discriminator: 4)
!4863 = !DILocation(line: 2603, column: 179, scope: !4864)
!4864 = !DILexicalBlockFile(scope: !737, file: !490, discriminator: 5)
!4865 = !DILocation(line: 2603, column: 189, scope: !737)
!4866 = !DILocation(line: 2603, column: 219, scope: !737)
!4867 = !DILocation(line: 2603, column: 235, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !737, file: !490, line: 2603, column: 232)
!4869 = !DILocation(line: 2603, column: 252, scope: !4868)
!4870 = !DILocation(line: 2603, column: 232, scope: !4868)
!4871 = !DILocation(line: 2603, column: 262, scope: !4868)
!4872 = !DILocation(line: 2603, column: 232, scope: !737)
!4873 = !DILocation(line: 2603, column: 232, scope: !4874)
!4874 = !DILexicalBlockFile(scope: !737, file: !490, discriminator: 6)
!4875 = !DILocation(line: 2603, column: 293, scope: !4876)
!4876 = !DILexicalBlockFile(scope: !4868, file: !490, discriminator: 7)
!4877 = !DILocation(line: 2603, column: 311, scope: !4868)
!4878 = !DILocation(line: 2603, column: 321, scope: !4868)
!4879 = !DILocation(line: 2603, column: 346, scope: !4868)
!4880 = !DILocation(line: 2603, column: 277, scope: !4868)
!4881 = !DILocation(line: 2603, column: 365, scope: !4882)
!4882 = !DILexicalBlockFile(scope: !735, file: !490, discriminator: 8)
!4883 = !DILocation(line: 2603, column: 365, scope: !737)
!4884 = !DILocation(line: 2603, column: 365, scope: !4885)
!4885 = !DILexicalBlockFile(scope: !737, file: !490, discriminator: 9)
!4886 = !DILocation(line: 2603, column: 378, scope: !4434)
!4887 = !DILocation(line: 2604, column: 30, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2604, column: 9)
!4889 = !DILocation(line: 2604, column: 58, scope: !4888)
!4890 = !DILocation(line: 2604, column: 9, scope: !4888)
!4891 = !DILocation(line: 2604, column: 9, scope: !680)
!4892 = !DILocation(line: 2604, column: 84, scope: !4893)
!4893 = !DILexicalBlockFile(scope: !4888, file: !490, discriminator: 1)
!4894 = !DILocation(line: 2605, column: 7, scope: !739)
!4895 = !DILocation(line: 2605, column: 17, scope: !739)
!4896 = !DILocation(line: 2605, column: 25, scope: !739)
!4897 = !DILocation(line: 2605, column: 64, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !739, file: !490, line: 2605, column: 63)
!4899 = !DILocation(line: 2605, column: 70, scope: !4898)
!4900 = !DILocation(line: 2605, column: 88, scope: !4901)
!4901 = !DILexicalBlockFile(scope: !4898, file: !490, discriminator: 1)
!4902 = !DILocation(line: 2605, column: 98, scope: !4898)
!4903 = !DILocation(line: 2605, column: 105, scope: !4898)
!4904 = !DILocation(line: 2605, column: 73, scope: !4898)
!4905 = !DILocation(line: 2605, column: 63, scope: !739)
!4906 = !DILocation(line: 2605, column: 131, scope: !4907)
!4907 = !DILexicalBlockFile(scope: !4908, file: !490, discriminator: 3)
!4908 = !DILexicalBlockFile(scope: !4898, file: !490, discriminator: 2)
!4909 = !DILocation(line: 2605, column: 175, scope: !4910)
!4910 = !DILexicalBlockFile(scope: !739, file: !490, discriminator: 4)
!4911 = !DILocation(line: 2605, column: 180, scope: !4912)
!4912 = !DILexicalBlockFile(scope: !741, file: !490, discriminator: 5)
!4913 = !DILocation(line: 2605, column: 190, scope: !741)
!4914 = !DILocation(line: 2605, column: 220, scope: !741)
!4915 = !DILocation(line: 2605, column: 236, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !741, file: !490, line: 2605, column: 233)
!4917 = !DILocation(line: 2605, column: 253, scope: !4916)
!4918 = !DILocation(line: 2605, column: 233, scope: !4916)
!4919 = !DILocation(line: 2605, column: 263, scope: !4916)
!4920 = !DILocation(line: 2605, column: 233, scope: !741)
!4921 = !DILocation(line: 2605, column: 233, scope: !4922)
!4922 = !DILexicalBlockFile(scope: !741, file: !490, discriminator: 6)
!4923 = !DILocation(line: 2605, column: 294, scope: !4924)
!4924 = !DILexicalBlockFile(scope: !4916, file: !490, discriminator: 7)
!4925 = !DILocation(line: 2605, column: 312, scope: !4916)
!4926 = !DILocation(line: 2605, column: 322, scope: !4916)
!4927 = !DILocation(line: 2605, column: 347, scope: !4916)
!4928 = !DILocation(line: 2605, column: 278, scope: !4916)
!4929 = !DILocation(line: 2605, column: 366, scope: !4930)
!4930 = !DILexicalBlockFile(scope: !739, file: !490, discriminator: 8)
!4931 = !DILocation(line: 2605, column: 366, scope: !741)
!4932 = !DILocation(line: 2605, column: 366, scope: !4933)
!4933 = !DILexicalBlockFile(scope: !741, file: !490, discriminator: 9)
!4934 = !DILocation(line: 2605, column: 379, scope: !4434)
!4935 = !DILocation(line: 2606, column: 30, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2606, column: 9)
!4937 = !DILocation(line: 2606, column: 58, scope: !4936)
!4938 = !DILocation(line: 2606, column: 9, scope: !4936)
!4939 = !DILocation(line: 2606, column: 9, scope: !680)
!4940 = !DILocation(line: 2606, column: 84, scope: !4941)
!4941 = !DILexicalBlockFile(scope: !4936, file: !490, discriminator: 1)
!4942 = !DILocation(line: 2607, column: 7, scope: !743)
!4943 = !DILocation(line: 2607, column: 17, scope: !743)
!4944 = !DILocation(line: 2607, column: 25, scope: !743)
!4945 = !DILocation(line: 2607, column: 65, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !743, file: !490, line: 2607, column: 64)
!4947 = !DILocation(line: 2607, column: 71, scope: !4946)
!4948 = !DILocation(line: 2607, column: 89, scope: !4949)
!4949 = !DILexicalBlockFile(scope: !4946, file: !490, discriminator: 1)
!4950 = !DILocation(line: 2607, column: 99, scope: !4946)
!4951 = !DILocation(line: 2607, column: 106, scope: !4946)
!4952 = !DILocation(line: 2607, column: 74, scope: !4946)
!4953 = !DILocation(line: 2607, column: 64, scope: !743)
!4954 = !DILocation(line: 2607, column: 132, scope: !4955)
!4955 = !DILexicalBlockFile(scope: !4956, file: !490, discriminator: 3)
!4956 = !DILexicalBlockFile(scope: !4946, file: !490, discriminator: 2)
!4957 = !DILocation(line: 2607, column: 176, scope: !4958)
!4958 = !DILexicalBlockFile(scope: !743, file: !490, discriminator: 4)
!4959 = !DILocation(line: 2607, column: 181, scope: !4960)
!4960 = !DILexicalBlockFile(scope: !745, file: !490, discriminator: 5)
!4961 = !DILocation(line: 2607, column: 191, scope: !745)
!4962 = !DILocation(line: 2607, column: 221, scope: !745)
!4963 = !DILocation(line: 2607, column: 237, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !745, file: !490, line: 2607, column: 234)
!4965 = !DILocation(line: 2607, column: 254, scope: !4964)
!4966 = !DILocation(line: 2607, column: 234, scope: !4964)
!4967 = !DILocation(line: 2607, column: 264, scope: !4964)
!4968 = !DILocation(line: 2607, column: 234, scope: !745)
!4969 = !DILocation(line: 2607, column: 234, scope: !4970)
!4970 = !DILexicalBlockFile(scope: !745, file: !490, discriminator: 6)
!4971 = !DILocation(line: 2607, column: 295, scope: !4972)
!4972 = !DILexicalBlockFile(scope: !4964, file: !490, discriminator: 7)
!4973 = !DILocation(line: 2607, column: 313, scope: !4964)
!4974 = !DILocation(line: 2607, column: 323, scope: !4964)
!4975 = !DILocation(line: 2607, column: 348, scope: !4964)
!4976 = !DILocation(line: 2607, column: 279, scope: !4964)
!4977 = !DILocation(line: 2607, column: 367, scope: !4978)
!4978 = !DILexicalBlockFile(scope: !743, file: !490, discriminator: 8)
!4979 = !DILocation(line: 2607, column: 367, scope: !745)
!4980 = !DILocation(line: 2607, column: 367, scope: !4981)
!4981 = !DILexicalBlockFile(scope: !745, file: !490, discriminator: 9)
!4982 = !DILocation(line: 2607, column: 380, scope: !4434)
!4983 = !DILocation(line: 2608, column: 30, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2608, column: 9)
!4985 = !DILocation(line: 2608, column: 59, scope: !4984)
!4986 = !DILocation(line: 2608, column: 9, scope: !4984)
!4987 = !DILocation(line: 2608, column: 9, scope: !680)
!4988 = !DILocation(line: 2608, column: 86, scope: !4989)
!4989 = !DILexicalBlockFile(scope: !4984, file: !490, discriminator: 1)
!4990 = !DILocation(line: 2609, column: 7, scope: !747)
!4991 = !DILocation(line: 2609, column: 17, scope: !747)
!4992 = !DILocation(line: 2609, column: 25, scope: !747)
!4993 = !DILocation(line: 2609, column: 65, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !747, file: !490, line: 2609, column: 64)
!4995 = !DILocation(line: 2609, column: 71, scope: !4994)
!4996 = !DILocation(line: 2609, column: 89, scope: !4997)
!4997 = !DILexicalBlockFile(scope: !4994, file: !490, discriminator: 1)
!4998 = !DILocation(line: 2609, column: 99, scope: !4994)
!4999 = !DILocation(line: 2609, column: 106, scope: !4994)
!5000 = !DILocation(line: 2609, column: 74, scope: !4994)
!5001 = !DILocation(line: 2609, column: 64, scope: !747)
!5002 = !DILocation(line: 2609, column: 133, scope: !5003)
!5003 = !DILexicalBlockFile(scope: !5004, file: !490, discriminator: 3)
!5004 = !DILexicalBlockFile(scope: !4994, file: !490, discriminator: 2)
!5005 = !DILocation(line: 2609, column: 177, scope: !5006)
!5006 = !DILexicalBlockFile(scope: !747, file: !490, discriminator: 4)
!5007 = !DILocation(line: 2609, column: 182, scope: !5008)
!5008 = !DILexicalBlockFile(scope: !749, file: !490, discriminator: 5)
!5009 = !DILocation(line: 2609, column: 192, scope: !749)
!5010 = !DILocation(line: 2609, column: 222, scope: !749)
!5011 = !DILocation(line: 2609, column: 238, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !749, file: !490, line: 2609, column: 235)
!5013 = !DILocation(line: 2609, column: 255, scope: !5012)
!5014 = !DILocation(line: 2609, column: 235, scope: !5012)
!5015 = !DILocation(line: 2609, column: 265, scope: !5012)
!5016 = !DILocation(line: 2609, column: 235, scope: !749)
!5017 = !DILocation(line: 2609, column: 235, scope: !5018)
!5018 = !DILexicalBlockFile(scope: !749, file: !490, discriminator: 6)
!5019 = !DILocation(line: 2609, column: 296, scope: !5020)
!5020 = !DILexicalBlockFile(scope: !5012, file: !490, discriminator: 7)
!5021 = !DILocation(line: 2609, column: 314, scope: !5012)
!5022 = !DILocation(line: 2609, column: 324, scope: !5012)
!5023 = !DILocation(line: 2609, column: 349, scope: !5012)
!5024 = !DILocation(line: 2609, column: 280, scope: !5012)
!5025 = !DILocation(line: 2609, column: 368, scope: !5026)
!5026 = !DILexicalBlockFile(scope: !747, file: !490, discriminator: 8)
!5027 = !DILocation(line: 2609, column: 368, scope: !749)
!5028 = !DILocation(line: 2609, column: 368, scope: !5029)
!5029 = !DILexicalBlockFile(scope: !749, file: !490, discriminator: 9)
!5030 = !DILocation(line: 2609, column: 381, scope: !4434)
!5031 = !DILocation(line: 2610, column: 30, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2610, column: 9)
!5033 = !DILocation(line: 2610, column: 57, scope: !5032)
!5034 = !DILocation(line: 2610, column: 9, scope: !5032)
!5035 = !DILocation(line: 2610, column: 9, scope: !680)
!5036 = !DILocation(line: 2610, column: 82, scope: !5037)
!5037 = !DILexicalBlockFile(scope: !5032, file: !490, discriminator: 1)
!5038 = !DILocation(line: 2611, column: 7, scope: !751)
!5039 = !DILocation(line: 2611, column: 17, scope: !751)
!5040 = !DILocation(line: 2611, column: 25, scope: !751)
!5041 = !DILocation(line: 2611, column: 64, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !751, file: !490, line: 2611, column: 63)
!5043 = !DILocation(line: 2611, column: 70, scope: !5042)
!5044 = !DILocation(line: 2611, column: 88, scope: !5045)
!5045 = !DILexicalBlockFile(scope: !5042, file: !490, discriminator: 1)
!5046 = !DILocation(line: 2611, column: 98, scope: !5042)
!5047 = !DILocation(line: 2611, column: 105, scope: !5042)
!5048 = !DILocation(line: 2611, column: 73, scope: !5042)
!5049 = !DILocation(line: 2611, column: 63, scope: !751)
!5050 = !DILocation(line: 2611, column: 130, scope: !5051)
!5051 = !DILexicalBlockFile(scope: !5052, file: !490, discriminator: 3)
!5052 = !DILexicalBlockFile(scope: !5042, file: !490, discriminator: 2)
!5053 = !DILocation(line: 2611, column: 174, scope: !5054)
!5054 = !DILexicalBlockFile(scope: !751, file: !490, discriminator: 4)
!5055 = !DILocation(line: 2611, column: 179, scope: !5056)
!5056 = !DILexicalBlockFile(scope: !753, file: !490, discriminator: 5)
!5057 = !DILocation(line: 2611, column: 189, scope: !753)
!5058 = !DILocation(line: 2611, column: 219, scope: !753)
!5059 = !DILocation(line: 2611, column: 235, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !753, file: !490, line: 2611, column: 232)
!5061 = !DILocation(line: 2611, column: 252, scope: !5060)
!5062 = !DILocation(line: 2611, column: 232, scope: !5060)
!5063 = !DILocation(line: 2611, column: 262, scope: !5060)
!5064 = !DILocation(line: 2611, column: 232, scope: !753)
!5065 = !DILocation(line: 2611, column: 232, scope: !5066)
!5066 = !DILexicalBlockFile(scope: !753, file: !490, discriminator: 6)
!5067 = !DILocation(line: 2611, column: 293, scope: !5068)
!5068 = !DILexicalBlockFile(scope: !5060, file: !490, discriminator: 7)
!5069 = !DILocation(line: 2611, column: 311, scope: !5060)
!5070 = !DILocation(line: 2611, column: 321, scope: !5060)
!5071 = !DILocation(line: 2611, column: 346, scope: !5060)
!5072 = !DILocation(line: 2611, column: 277, scope: !5060)
!5073 = !DILocation(line: 2611, column: 365, scope: !5074)
!5074 = !DILexicalBlockFile(scope: !751, file: !490, discriminator: 8)
!5075 = !DILocation(line: 2611, column: 365, scope: !753)
!5076 = !DILocation(line: 2611, column: 365, scope: !5077)
!5077 = !DILexicalBlockFile(scope: !753, file: !490, discriminator: 9)
!5078 = !DILocation(line: 2611, column: 378, scope: !4434)
!5079 = !DILocation(line: 2612, column: 30, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2612, column: 9)
!5081 = !DILocation(line: 2612, column: 56, scope: !5080)
!5082 = !DILocation(line: 2612, column: 9, scope: !5080)
!5083 = !DILocation(line: 2612, column: 9, scope: !680)
!5084 = !DILocation(line: 2612, column: 80, scope: !5085)
!5085 = !DILexicalBlockFile(scope: !5080, file: !490, discriminator: 1)
!5086 = !DILocation(line: 2613, column: 7, scope: !755)
!5087 = !DILocation(line: 2613, column: 17, scope: !755)
!5088 = !DILocation(line: 2613, column: 25, scope: !755)
!5089 = !DILocation(line: 2613, column: 65, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !755, file: !490, line: 2613, column: 64)
!5091 = !DILocation(line: 2613, column: 71, scope: !5090)
!5092 = !DILocation(line: 2613, column: 89, scope: !5093)
!5093 = !DILexicalBlockFile(scope: !5090, file: !490, discriminator: 1)
!5094 = !DILocation(line: 2613, column: 99, scope: !5090)
!5095 = !DILocation(line: 2613, column: 106, scope: !5090)
!5096 = !DILocation(line: 2613, column: 74, scope: !5090)
!5097 = !DILocation(line: 2613, column: 64, scope: !755)
!5098 = !DILocation(line: 2613, column: 130, scope: !5099)
!5099 = !DILexicalBlockFile(scope: !5100, file: !490, discriminator: 3)
!5100 = !DILexicalBlockFile(scope: !5090, file: !490, discriminator: 2)
!5101 = !DILocation(line: 2613, column: 174, scope: !5102)
!5102 = !DILexicalBlockFile(scope: !755, file: !490, discriminator: 4)
!5103 = !DILocation(line: 2613, column: 179, scope: !5104)
!5104 = !DILexicalBlockFile(scope: !757, file: !490, discriminator: 5)
!5105 = !DILocation(line: 2613, column: 189, scope: !757)
!5106 = !DILocation(line: 2613, column: 219, scope: !757)
!5107 = !DILocation(line: 2613, column: 235, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !757, file: !490, line: 2613, column: 232)
!5109 = !DILocation(line: 2613, column: 252, scope: !5108)
!5110 = !DILocation(line: 2613, column: 232, scope: !5108)
!5111 = !DILocation(line: 2613, column: 262, scope: !5108)
!5112 = !DILocation(line: 2613, column: 232, scope: !757)
!5113 = !DILocation(line: 2613, column: 232, scope: !5114)
!5114 = !DILexicalBlockFile(scope: !757, file: !490, discriminator: 6)
!5115 = !DILocation(line: 2613, column: 293, scope: !5116)
!5116 = !DILexicalBlockFile(scope: !5108, file: !490, discriminator: 7)
!5117 = !DILocation(line: 2613, column: 311, scope: !5108)
!5118 = !DILocation(line: 2613, column: 321, scope: !5108)
!5119 = !DILocation(line: 2613, column: 346, scope: !5108)
!5120 = !DILocation(line: 2613, column: 277, scope: !5108)
!5121 = !DILocation(line: 2613, column: 365, scope: !5122)
!5122 = !DILexicalBlockFile(scope: !755, file: !490, discriminator: 8)
!5123 = !DILocation(line: 2613, column: 365, scope: !757)
!5124 = !DILocation(line: 2613, column: 365, scope: !5125)
!5125 = !DILexicalBlockFile(scope: !757, file: !490, discriminator: 9)
!5126 = !DILocation(line: 2613, column: 378, scope: !4434)
!5127 = !DILocation(line: 2614, column: 7, scope: !759)
!5128 = !DILocation(line: 2614, column: 17, scope: !759)
!5129 = !DILocation(line: 2614, column: 25, scope: !759)
!5130 = !DILocation(line: 2614, column: 64, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !759, file: !490, line: 2614, column: 63)
!5132 = !DILocation(line: 2614, column: 70, scope: !5131)
!5133 = !DILocation(line: 2614, column: 88, scope: !5134)
!5134 = !DILexicalBlockFile(scope: !5131, file: !490, discriminator: 1)
!5135 = !DILocation(line: 2614, column: 98, scope: !5131)
!5136 = !DILocation(line: 2614, column: 105, scope: !5131)
!5137 = !DILocation(line: 2614, column: 73, scope: !5131)
!5138 = !DILocation(line: 2614, column: 63, scope: !759)
!5139 = !DILocation(line: 2614, column: 129, scope: !5140)
!5140 = !DILexicalBlockFile(scope: !5141, file: !490, discriminator: 3)
!5141 = !DILexicalBlockFile(scope: !5131, file: !490, discriminator: 2)
!5142 = !DILocation(line: 2614, column: 173, scope: !5143)
!5143 = !DILexicalBlockFile(scope: !759, file: !490, discriminator: 4)
!5144 = !DILocation(line: 2614, column: 178, scope: !5145)
!5145 = !DILexicalBlockFile(scope: !761, file: !490, discriminator: 5)
!5146 = !DILocation(line: 2614, column: 188, scope: !761)
!5147 = !DILocation(line: 2614, column: 218, scope: !761)
!5148 = !DILocation(line: 2614, column: 234, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !761, file: !490, line: 2614, column: 231)
!5150 = !DILocation(line: 2614, column: 251, scope: !5149)
!5151 = !DILocation(line: 2614, column: 231, scope: !5149)
!5152 = !DILocation(line: 2614, column: 261, scope: !5149)
!5153 = !DILocation(line: 2614, column: 231, scope: !761)
!5154 = !DILocation(line: 2614, column: 231, scope: !5155)
!5155 = !DILexicalBlockFile(scope: !761, file: !490, discriminator: 6)
!5156 = !DILocation(line: 2614, column: 292, scope: !5157)
!5157 = !DILexicalBlockFile(scope: !5149, file: !490, discriminator: 7)
!5158 = !DILocation(line: 2614, column: 310, scope: !5149)
!5159 = !DILocation(line: 2614, column: 320, scope: !5149)
!5160 = !DILocation(line: 2614, column: 345, scope: !5149)
!5161 = !DILocation(line: 2614, column: 276, scope: !5149)
!5162 = !DILocation(line: 2614, column: 364, scope: !5163)
!5163 = !DILexicalBlockFile(scope: !759, file: !490, discriminator: 8)
!5164 = !DILocation(line: 2614, column: 364, scope: !761)
!5165 = !DILocation(line: 2614, column: 364, scope: !5166)
!5166 = !DILexicalBlockFile(scope: !761, file: !490, discriminator: 9)
!5167 = !DILocation(line: 2614, column: 377, scope: !4434)
!5168 = !DILocation(line: 2615, column: 30, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2615, column: 9)
!5170 = !DILocation(line: 2615, column: 59, scope: !5169)
!5171 = !DILocation(line: 2615, column: 9, scope: !5169)
!5172 = !DILocation(line: 2615, column: 9, scope: !680)
!5173 = !DILocation(line: 2615, column: 86, scope: !5174)
!5174 = !DILexicalBlockFile(scope: !5169, file: !490, discriminator: 1)
!5175 = !DILocation(line: 2616, column: 7, scope: !763)
!5176 = !DILocation(line: 2616, column: 17, scope: !763)
!5177 = !DILocation(line: 2616, column: 25, scope: !763)
!5178 = !DILocation(line: 2616, column: 64, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !763, file: !490, line: 2616, column: 63)
!5180 = !DILocation(line: 2616, column: 70, scope: !5179)
!5181 = !DILocation(line: 2616, column: 88, scope: !5182)
!5182 = !DILexicalBlockFile(scope: !5179, file: !490, discriminator: 1)
!5183 = !DILocation(line: 2616, column: 98, scope: !5179)
!5184 = !DILocation(line: 2616, column: 105, scope: !5179)
!5185 = !DILocation(line: 2616, column: 73, scope: !5179)
!5186 = !DILocation(line: 2616, column: 63, scope: !763)
!5187 = !DILocation(line: 2616, column: 132, scope: !5188)
!5188 = !DILexicalBlockFile(scope: !5189, file: !490, discriminator: 3)
!5189 = !DILexicalBlockFile(scope: !5179, file: !490, discriminator: 2)
!5190 = !DILocation(line: 2616, column: 176, scope: !5191)
!5191 = !DILexicalBlockFile(scope: !763, file: !490, discriminator: 4)
!5192 = !DILocation(line: 2616, column: 181, scope: !5193)
!5193 = !DILexicalBlockFile(scope: !765, file: !490, discriminator: 5)
!5194 = !DILocation(line: 2616, column: 191, scope: !765)
!5195 = !DILocation(line: 2616, column: 221, scope: !765)
!5196 = !DILocation(line: 2616, column: 237, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !765, file: !490, line: 2616, column: 234)
!5198 = !DILocation(line: 2616, column: 254, scope: !5197)
!5199 = !DILocation(line: 2616, column: 234, scope: !5197)
!5200 = !DILocation(line: 2616, column: 264, scope: !5197)
!5201 = !DILocation(line: 2616, column: 234, scope: !765)
!5202 = !DILocation(line: 2616, column: 234, scope: !5203)
!5203 = !DILexicalBlockFile(scope: !765, file: !490, discriminator: 6)
!5204 = !DILocation(line: 2616, column: 295, scope: !5205)
!5205 = !DILexicalBlockFile(scope: !5197, file: !490, discriminator: 7)
!5206 = !DILocation(line: 2616, column: 313, scope: !5197)
!5207 = !DILocation(line: 2616, column: 323, scope: !5197)
!5208 = !DILocation(line: 2616, column: 348, scope: !5197)
!5209 = !DILocation(line: 2616, column: 279, scope: !5197)
!5210 = !DILocation(line: 2616, column: 367, scope: !5211)
!5211 = !DILexicalBlockFile(scope: !763, file: !490, discriminator: 8)
!5212 = !DILocation(line: 2616, column: 367, scope: !765)
!5213 = !DILocation(line: 2616, column: 367, scope: !5214)
!5214 = !DILexicalBlockFile(scope: !765, file: !490, discriminator: 9)
!5215 = !DILocation(line: 2616, column: 380, scope: !4434)
!5216 = !DILocation(line: 2617, column: 30, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !680, file: !490, line: 2617, column: 9)
!5218 = !DILocation(line: 2617, column: 53, scope: !5217)
!5219 = !DILocation(line: 2617, column: 9, scope: !5217)
!5220 = !DILocation(line: 2617, column: 9, scope: !680)
!5221 = !DILocation(line: 2617, column: 74, scope: !5222)
!5222 = !DILexicalBlockFile(scope: !5217, file: !490, discriminator: 1)
!5223 = !DILocation(line: 2618, column: 7, scope: !767)
!5224 = !DILocation(line: 2618, column: 17, scope: !767)
!5225 = !DILocation(line: 2618, column: 25, scope: !767)
!5226 = !DILocation(line: 2618, column: 66, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !767, file: !490, line: 2618, column: 65)
!5228 = !DILocation(line: 2618, column: 72, scope: !5227)
!5229 = !DILocation(line: 2618, column: 90, scope: !5230)
!5230 = !DILexicalBlockFile(scope: !5227, file: !490, discriminator: 1)
!5231 = !DILocation(line: 2618, column: 100, scope: !5227)
!5232 = !DILocation(line: 2618, column: 107, scope: !5227)
!5233 = !DILocation(line: 2618, column: 75, scope: !5227)
!5234 = !DILocation(line: 2618, column: 65, scope: !767)
!5235 = !DILocation(line: 2618, column: 128, scope: !5236)
!5236 = !DILexicalBlockFile(scope: !5237, file: !490, discriminator: 3)
!5237 = !DILexicalBlockFile(scope: !5227, file: !490, discriminator: 2)
!5238 = !DILocation(line: 2618, column: 172, scope: !5239)
!5239 = !DILexicalBlockFile(scope: !767, file: !490, discriminator: 4)
!5240 = !DILocation(line: 2618, column: 177, scope: !5241)
!5241 = !DILexicalBlockFile(scope: !769, file: !490, discriminator: 5)
!5242 = !DILocation(line: 2618, column: 187, scope: !769)
!5243 = !DILocation(line: 2618, column: 217, scope: !769)
!5244 = !DILocation(line: 2618, column: 233, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !769, file: !490, line: 2618, column: 230)
!5246 = !DILocation(line: 2618, column: 250, scope: !5245)
!5247 = !DILocation(line: 2618, column: 230, scope: !5245)
!5248 = !DILocation(line: 2618, column: 260, scope: !5245)
!5249 = !DILocation(line: 2618, column: 230, scope: !769)
!5250 = !DILocation(line: 2618, column: 230, scope: !5251)
!5251 = !DILexicalBlockFile(scope: !769, file: !490, discriminator: 6)
!5252 = !DILocation(line: 2618, column: 291, scope: !5253)
!5253 = !DILexicalBlockFile(scope: !5245, file: !490, discriminator: 7)
!5254 = !DILocation(line: 2618, column: 309, scope: !5245)
!5255 = !DILocation(line: 2618, column: 319, scope: !5245)
!5256 = !DILocation(line: 2618, column: 344, scope: !5245)
!5257 = !DILocation(line: 2618, column: 275, scope: !5245)
!5258 = !DILocation(line: 2618, column: 363, scope: !5259)
!5259 = !DILexicalBlockFile(scope: !767, file: !490, discriminator: 8)
!5260 = !DILocation(line: 2618, column: 363, scope: !769)
!5261 = !DILocation(line: 2618, column: 363, scope: !5262)
!5262 = !DILexicalBlockFile(scope: !769, file: !490, discriminator: 9)
!5263 = !DILocation(line: 2618, column: 376, scope: !4434)
!5264 = !DILocation(line: 2620, column: 5, scope: !680)
!5265 = !DILocation(line: 2622, column: 10, scope: !774)
!5266 = !DILocation(line: 2622, column: 9, scope: !680)
!5267 = !DILocation(line: 2623, column: 36, scope: !773)
!5268 = !DILocation(line: 2623, column: 34, scope: !773)
!5269 = !DILocation(line: 2624, column: 14, scope: !772)
!5270 = !DILocation(line: 2624, column: 13, scope: !773)
!5271 = !DILocation(line: 2625, column: 13, scope: !772)
!5272 = !DILocation(line: 2628, column: 13, scope: !771)
!5273 = !DILocation(line: 2628, column: 36, scope: !771)
!5274 = !DILocation(line: 2629, column: 42, scope: !771)
!5275 = !DILocation(line: 2629, column: 17, scope: !771)
!5276 = !DILocation(line: 2630, column: 13, scope: !771)
!5277 = !DILocation(line: 2630, column: 23, scope: !771)
!5278 = !DILocation(line: 2631, column: 13, scope: !771)
!5279 = !DILocation(line: 2631, column: 23, scope: !771)
!5280 = !DILocation(line: 2632, column: 27, scope: !771)
!5281 = !DILocation(line: 2632, column: 25, scope: !771)
!5282 = !DILocation(line: 2633, column: 18, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !771, file: !490, line: 2633, column: 17)
!5284 = !DILocation(line: 2633, column: 17, scope: !771)
!5285 = !DILocation(line: 2634, column: 17, scope: !5283)
!5286 = !DILocation(line: 2636, column: 42, scope: !771)
!5287 = !DILocation(line: 2636, column: 26, scope: !771)
!5288 = !DILocation(line: 2636, column: 24, scope: !771)
!5289 = !DILocation(line: 2637, column: 18, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !771, file: !490, line: 2637, column: 17)
!5291 = !DILocation(line: 2637, column: 17, scope: !771)
!5292 = !DILocation(line: 2638, column: 17, scope: !5290)
!5293 = !DILocation(line: 2640, column: 13, scope: !771)
!5294 = !DILocation(line: 2640, column: 18, scope: !5295)
!5295 = !DILexicalBlockFile(scope: !778, file: !490, discriminator: 1)
!5296 = !DILocation(line: 2640, column: 28, scope: !778)
!5297 = !DILocation(line: 2640, column: 58, scope: !778)
!5298 = !DILocation(line: 2640, column: 80, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !778, file: !490, line: 2640, column: 77)
!5300 = !DILocation(line: 2640, column: 97, scope: !5299)
!5301 = !DILocation(line: 2640, column: 77, scope: !5299)
!5302 = !DILocation(line: 2640, column: 107, scope: !5299)
!5303 = !DILocation(line: 2640, column: 77, scope: !778)
!5304 = !DILocation(line: 2640, column: 77, scope: !5305)
!5305 = !DILexicalBlockFile(scope: !778, file: !490, discriminator: 2)
!5306 = !DILocation(line: 2640, column: 138, scope: !5307)
!5307 = !DILexicalBlockFile(scope: !5299, file: !490, discriminator: 3)
!5308 = !DILocation(line: 2640, column: 156, scope: !5299)
!5309 = !DILocation(line: 2640, column: 166, scope: !5299)
!5310 = !DILocation(line: 2640, column: 191, scope: !5299)
!5311 = !DILocation(line: 2640, column: 122, scope: !5299)
!5312 = !DILocation(line: 2640, column: 210, scope: !5313)
!5313 = !DILexicalBlockFile(scope: !771, file: !490, discriminator: 4)
!5314 = !DILocation(line: 2640, column: 210, scope: !778)
!5315 = !DILocation(line: 2640, column: 210, scope: !5316)
!5316 = !DILexicalBlockFile(scope: !778, file: !490, discriminator: 5)
!5317 = !DILocation(line: 2641, column: 36, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !771, file: !490, line: 2641, column: 17)
!5319 = !DILocation(line: 2641, column: 46, scope: !5318)
!5320 = !DILocation(line: 2641, column: 17, scope: !5318)
!5321 = !DILocation(line: 2641, column: 17, scope: !771)
!5322 = !DILocation(line: 2642, column: 17, scope: !5318)
!5323 = !DILocation(line: 2643, column: 13, scope: !771)
!5324 = !DILocation(line: 2643, column: 18, scope: !5325)
!5325 = !DILexicalBlockFile(scope: !780, file: !490, discriminator: 1)
!5326 = !DILocation(line: 2643, column: 28, scope: !780)
!5327 = !DILocation(line: 2643, column: 58, scope: !780)
!5328 = !DILocation(line: 2643, column: 79, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !780, file: !490, line: 2643, column: 76)
!5330 = !DILocation(line: 2643, column: 96, scope: !5329)
!5331 = !DILocation(line: 2643, column: 76, scope: !5329)
!5332 = !DILocation(line: 2643, column: 106, scope: !5329)
!5333 = !DILocation(line: 2643, column: 76, scope: !780)
!5334 = !DILocation(line: 2643, column: 76, scope: !5335)
!5335 = !DILexicalBlockFile(scope: !780, file: !490, discriminator: 2)
!5336 = !DILocation(line: 2643, column: 137, scope: !5337)
!5337 = !DILexicalBlockFile(scope: !5329, file: !490, discriminator: 3)
!5338 = !DILocation(line: 2643, column: 155, scope: !5329)
!5339 = !DILocation(line: 2643, column: 165, scope: !5329)
!5340 = !DILocation(line: 2643, column: 190, scope: !5329)
!5341 = !DILocation(line: 2643, column: 121, scope: !5329)
!5342 = !DILocation(line: 2643, column: 209, scope: !5313)
!5343 = !DILocation(line: 2643, column: 209, scope: !780)
!5344 = !DILocation(line: 2643, column: 209, scope: !5345)
!5345 = !DILexicalBlockFile(scope: !780, file: !490, discriminator: 5)
!5346 = !DILocation(line: 2644, column: 9, scope: !772)
!5347 = !DILocation(line: 2645, column: 5, scope: !773)
!5348 = !DILocation(line: 2646, column: 1, scope: !680)
!5349 = !DILocation(line: 2233, column: 5, scope: !1764)
!5350 = !DILocation(line: 2233, column: 9, scope: !1764)
!5351 = !DILocation(line: 2234, column: 5, scope: !1764)
!5352 = !DILocation(line: 2234, column: 15, scope: !1764)
!5353 = !DILocation(line: 2235, column: 12, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !1764, file: !490, line: 2235, column: 5)
!5355 = !{!2094, !2094, i64 0}
!5356 = !DILocation(line: 2235, column: 10, scope: !5354)
!5357 = !DILocation(line: 2235, column: 17, scope: !5358)
!5358 = !DILexicalBlockFile(scope: !5359, file: !490, discriminator: 2)
!5359 = !DILexicalBlockFile(scope: !5360, file: !490, discriminator: 1)
!5360 = distinct !DILexicalBlock(scope: !5354, file: !490, line: 2235, column: 5)
!5361 = !DILocation(line: 2235, column: 19, scope: !5360)
!5362 = !DILocation(line: 2235, column: 5, scope: !5354)
!5363 = !DILocation(line: 2236, column: 54, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5360, file: !490, line: 2235, column: 30)
!5365 = !DILocation(line: 2236, column: 37, scope: !5364)
!5366 = !DILocation(line: 2236, column: 21, scope: !5364)
!5367 = !DILocation(line: 2236, column: 16, scope: !5364)
!5368 = !DILocation(line: 2236, column: 9, scope: !5364)
!5369 = !DILocation(line: 2236, column: 19, scope: !5364)
!5370 = !DILocation(line: 2238, column: 21, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5364, file: !490, line: 2238, column: 13)
!5372 = !DILocation(line: 2238, column: 14, scope: !5371)
!5373 = !DILocation(line: 2238, column: 13, scope: !5364)
!5374 = !DILocation(line: 2239, column: 13, scope: !5371)
!5375 = !DILocation(line: 2240, column: 5, scope: !5364)
!5376 = !DILocation(line: 2235, column: 26, scope: !5360)
!5377 = !DILocation(line: 2235, column: 5, scope: !5360)
!5378 = !DILocation(line: 2241, column: 12, scope: !1775)
!5379 = !DILocation(line: 2241, column: 10, scope: !1775)
!5380 = !DILocation(line: 2241, column: 17, scope: !5381)
!5381 = !DILexicalBlockFile(scope: !5382, file: !490, discriminator: 2)
!5382 = !DILexicalBlockFile(scope: !1774, file: !490, discriminator: 1)
!5383 = !DILocation(line: 2241, column: 19, scope: !1774)
!5384 = !DILocation(line: 2241, column: 5, scope: !1775)
!5385 = !DILocation(line: 2242, column: 9, scope: !1773)
!5386 = !DILocation(line: 2242, column: 14, scope: !5387)
!5387 = !DILexicalBlockFile(scope: !1772, file: !490, discriminator: 1)
!5388 = !DILocation(line: 2242, column: 24, scope: !1772)
!5389 = !DILocation(line: 2242, column: 61, scope: !1772)
!5390 = !DILocation(line: 2242, column: 54, scope: !1772)
!5391 = !DILocation(line: 2242, column: 74, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !1772, file: !490, line: 2242, column: 71)
!5393 = !DILocation(line: 2242, column: 91, scope: !5392)
!5394 = !DILocation(line: 2242, column: 71, scope: !5392)
!5395 = !DILocation(line: 2242, column: 101, scope: !5392)
!5396 = !DILocation(line: 2242, column: 71, scope: !1772)
!5397 = !DILocation(line: 2242, column: 71, scope: !5398)
!5398 = !DILexicalBlockFile(scope: !1772, file: !490, discriminator: 2)
!5399 = !DILocation(line: 2242, column: 132, scope: !5400)
!5400 = !DILexicalBlockFile(scope: !5392, file: !490, discriminator: 3)
!5401 = !DILocation(line: 2242, column: 150, scope: !5392)
!5402 = !DILocation(line: 2242, column: 160, scope: !5392)
!5403 = !DILocation(line: 2242, column: 185, scope: !5392)
!5404 = !DILocation(line: 2242, column: 116, scope: !5392)
!5405 = !DILocation(line: 2242, column: 204, scope: !5406)
!5406 = !DILexicalBlockFile(scope: !1773, file: !490, discriminator: 4)
!5407 = !DILocation(line: 2242, column: 204, scope: !1772)
!5408 = !DILocation(line: 2242, column: 204, scope: !5409)
!5409 = !DILexicalBlockFile(scope: !1772, file: !490, discriminator: 5)
!5410 = !DILocation(line: 2243, column: 5, scope: !1773)
!5411 = !DILocation(line: 2241, column: 26, scope: !1774)
!5412 = !DILocation(line: 2241, column: 5, scope: !1774)
!5413 = !DILocation(line: 2244, column: 1, scope: !1764)
!5414 = !DILocation(line: 32, column: 33, scope: !1776)
!5415 = !DILocation(line: 32, column: 49, scope: !1776)
!5416 = !DILocation(line: 32, column: 65, scope: !1776)
!5417 = !DILocation(line: 34, column: 5, scope: !1776)
!5418 = !DILocation(line: 34, column: 28, scope: !1776)
!5419 = !DILocation(line: 36, column: 37, scope: !1776)
!5420 = !DILocation(line: 36, column: 43, scope: !1776)
!5421 = !{!2092, !1976, i64 304}
!5422 = !DILocation(line: 36, column: 52, scope: !1776)
!5423 = !DILocation(line: 36, column: 12, scope: !1776)
!5424 = !DILocation(line: 36, column: 10, scope: !1776)
!5425 = !DILocation(line: 37, column: 10, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !1776, file: !490, line: 37, column: 9)
!5427 = !DILocation(line: 37, column: 9, scope: !1776)
!5428 = !DILocation(line: 38, column: 9, scope: !5426)
!5429 = !DILocation(line: 40, column: 5, scope: !1776)
!5430 = !DILocation(line: 40, column: 11, scope: !1776)
!5431 = !DILocation(line: 40, column: 16, scope: !1776)
!5432 = !{!1992, !1976, i64 16}
!5433 = !DILocation(line: 41, column: 37, scope: !1776)
!5434 = !DILocation(line: 41, column: 43, scope: !1776)
!5435 = !DILocation(line: 41, column: 51, scope: !1776)
!5436 = !DILocation(line: 41, column: 23, scope: !1776)
!5437 = !DILocation(line: 41, column: 29, scope: !1776)
!5438 = !DILocation(line: 41, column: 35, scope: !1776)
!5439 = !DILocation(line: 41, column: 5, scope: !1776)
!5440 = !DILocation(line: 41, column: 11, scope: !1776)
!5441 = !DILocation(line: 41, column: 21, scope: !1776)
!5442 = !DILocation(line: 42, column: 5, scope: !1776)
!5443 = !DILocation(line: 42, column: 11, scope: !1776)
!5444 = !DILocation(line: 42, column: 28, scope: !1776)
!5445 = !DILocation(line: 44, column: 9, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !1776, file: !490, line: 44, column: 9)
!5447 = !DILocation(line: 44, column: 9, scope: !1776)
!5448 = !DILocation(line: 45, column: 22, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5446, file: !490, line: 44, column: 15)
!5450 = !DILocation(line: 45, column: 9, scope: !5449)
!5451 = !DILocation(line: 45, column: 15, scope: !5449)
!5452 = !DILocation(line: 45, column: 20, scope: !5449)
!5453 = !{!1992, !1976, i64 24}
!5454 = !DILocation(line: 46, column: 25, scope: !5449)
!5455 = !DILocation(line: 46, column: 33, scope: !5449)
!5456 = !DILocation(line: 46, column: 42, scope: !5449)
!5457 = !DILocation(line: 47, column: 28, scope: !5449)
!5458 = !DILocation(line: 47, column: 16, scope: !5449)
!5459 = !DILocation(line: 47, column: 9, scope: !5449)
!5460 = !DILocation(line: 50, column: 18, scope: !1776)
!5461 = !DILocation(line: 50, column: 5, scope: !1776)
!5462 = !DILocation(line: 50, column: 11, scope: !1776)
!5463 = !DILocation(line: 50, column: 16, scope: !1776)
!5464 = !DILocation(line: 51, column: 10, scope: !1785)
!5465 = !DILocation(line: 51, column: 16, scope: !1785)
!5466 = !DILocation(line: 51, column: 9, scope: !1776)
!5467 = !DILocation(line: 52, column: 9, scope: !1784)
!5468 = !DILocation(line: 52, column: 14, scope: !5469)
!5469 = !DILexicalBlockFile(scope: !1783, file: !490, discriminator: 1)
!5470 = !DILocation(line: 52, column: 24, scope: !1783)
!5471 = !DILocation(line: 52, column: 54, scope: !1783)
!5472 = !DILocation(line: 52, column: 41, scope: !1783)
!5473 = !DILocation(line: 52, column: 69, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !1783, file: !490, line: 52, column: 66)
!5475 = !DILocation(line: 52, column: 86, scope: !5474)
!5476 = !DILocation(line: 52, column: 66, scope: !5474)
!5477 = !DILocation(line: 52, column: 96, scope: !5474)
!5478 = !DILocation(line: 52, column: 66, scope: !1783)
!5479 = !DILocation(line: 52, column: 66, scope: !5480)
!5480 = !DILexicalBlockFile(scope: !1783, file: !490, discriminator: 2)
!5481 = !DILocation(line: 52, column: 127, scope: !5482)
!5482 = !DILexicalBlockFile(scope: !5474, file: !490, discriminator: 3)
!5483 = !DILocation(line: 52, column: 145, scope: !5474)
!5484 = !DILocation(line: 52, column: 155, scope: !5474)
!5485 = !DILocation(line: 52, column: 180, scope: !5474)
!5486 = !DILocation(line: 52, column: 111, scope: !5474)
!5487 = !DILocation(line: 52, column: 199, scope: !5488)
!5488 = !DILexicalBlockFile(scope: !1784, file: !490, discriminator: 4)
!5489 = !DILocation(line: 52, column: 199, scope: !1783)
!5490 = !DILocation(line: 52, column: 199, scope: !5491)
!5491 = !DILexicalBlockFile(scope: !1783, file: !490, discriminator: 5)
!5492 = !DILocation(line: 53, column: 9, scope: !1784)
!5493 = !DILocation(line: 56, column: 24, scope: !1776)
!5494 = !DILocation(line: 56, column: 12, scope: !1776)
!5495 = !DILocation(line: 56, column: 5, scope: !1776)
!5496 = !DILocation(line: 57, column: 1, scope: !1776)
!5497 = !DILocation(line: 60, column: 43, scope: !1786)
!5498 = !DILocation(line: 60, column: 59, scope: !1786)
!5499 = !DILocation(line: 60, column: 75, scope: !1786)
!5500 = !DILocation(line: 62, column: 5, scope: !1786)
!5501 = !DILocation(line: 62, column: 15, scope: !1786)
!5502 = !DILocation(line: 64, column: 42, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !1786, file: !490, line: 64, column: 9)
!5504 = !DILocation(line: 64, column: 30, scope: !5503)
!5505 = !DILocation(line: 64, column: 50, scope: !5503)
!5506 = !DILocation(line: 64, column: 60, scope: !5503)
!5507 = !{!2092, !1976, i64 24}
!5508 = !DILocation(line: 64, column: 69, scope: !5503)
!5509 = !DILocation(line: 64, column: 10, scope: !5503)
!5510 = !DILocation(line: 64, column: 9, scope: !1786)
!5511 = !DILocation(line: 65, column: 9, scope: !5503)
!5512 = !DILocation(line: 67, column: 11, scope: !1786)
!5513 = !DILocation(line: 67, column: 17, scope: !1786)
!5514 = !DILocation(line: 67, column: 9, scope: !1786)
!5515 = !DILocation(line: 68, column: 18, scope: !1786)
!5516 = !DILocation(line: 68, column: 5, scope: !1786)
!5517 = !DILocation(line: 68, column: 11, scope: !1786)
!5518 = !DILocation(line: 68, column: 16, scope: !1786)
!5519 = !DILocation(line: 69, column: 21, scope: !1786)
!5520 = !DILocation(line: 69, column: 27, scope: !1786)
!5521 = !DILocation(line: 69, column: 35, scope: !1786)
!5522 = !DILocation(line: 69, column: 44, scope: !1786)
!5523 = !DILocation(line: 70, column: 5, scope: !1786)
!5524 = !DILocation(line: 70, column: 10, scope: !5525)
!5525 = !DILexicalBlockFile(scope: !1795, file: !490, discriminator: 1)
!5526 = !DILocation(line: 70, column: 20, scope: !1795)
!5527 = !DILocation(line: 70, column: 51, scope: !1795)
!5528 = !DILocation(line: 70, column: 61, scope: !1798)
!5529 = !DILocation(line: 70, column: 77, scope: !1798)
!5530 = !DILocation(line: 70, column: 61, scope: !1795)
!5531 = !DILocation(line: 70, column: 92, scope: !5532)
!5532 = !DILexicalBlockFile(scope: !1798, file: !490, discriminator: 2)
!5533 = !DILocation(line: 70, column: 97, scope: !5534)
!5534 = !DILexicalBlockFile(scope: !1797, file: !490, discriminator: 4)
!5535 = !DILocation(line: 70, column: 107, scope: !1797)
!5536 = !DILocation(line: 70, column: 137, scope: !1797)
!5537 = !DILocation(line: 70, column: 163, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !1797, file: !490, line: 70, column: 160)
!5539 = !DILocation(line: 70, column: 180, scope: !5538)
!5540 = !DILocation(line: 70, column: 160, scope: !5538)
!5541 = !DILocation(line: 70, column: 190, scope: !5538)
!5542 = !DILocation(line: 70, column: 160, scope: !1797)
!5543 = !DILocation(line: 70, column: 160, scope: !5544)
!5544 = !DILexicalBlockFile(scope: !1797, file: !490, discriminator: 5)
!5545 = !DILocation(line: 70, column: 221, scope: !5546)
!5546 = !DILexicalBlockFile(scope: !5538, file: !490, discriminator: 6)
!5547 = !DILocation(line: 70, column: 239, scope: !5538)
!5548 = !DILocation(line: 70, column: 249, scope: !5538)
!5549 = !DILocation(line: 70, column: 274, scope: !5538)
!5550 = !DILocation(line: 70, column: 205, scope: !5538)
!5551 = !DILocation(line: 70, column: 293, scope: !5552)
!5552 = !DILexicalBlockFile(scope: !1798, file: !490, discriminator: 7)
!5553 = !DILocation(line: 70, column: 293, scope: !1797)
!5554 = !DILocation(line: 70, column: 293, scope: !5555)
!5555 = !DILexicalBlockFile(scope: !1797, file: !490, discriminator: 8)
!5556 = !DILocation(line: 70, column: 293, scope: !5557)
!5557 = !DILexicalBlockFile(scope: !1797, file: !490, discriminator: 9)
!5558 = !DILocation(line: 70, column: 306, scope: !5559)
!5559 = !DILexicalBlockFile(scope: !5560, file: !490, discriminator: 10)
!5560 = !DILexicalBlockFile(scope: !1786, file: !490, discriminator: 3)
!5561 = !DILocation(line: 70, column: 306, scope: !1795)
!5562 = !DILocation(line: 70, column: 306, scope: !5563)
!5563 = !DILexicalBlockFile(scope: !1795, file: !490, discriminator: 11)
!5564 = !DILocation(line: 72, column: 5, scope: !1786)
!5565 = !DILocation(line: 73, column: 1, scope: !1786)
!5566 = !DILocation(line: 2651, column: 5, scope: !781)
!5567 = !DILocation(line: 2651, column: 10, scope: !5568)
!5568 = !DILexicalBlockFile(scope: !786, file: !490, discriminator: 1)
!5569 = !DILocation(line: 2651, column: 20, scope: !786)
!5570 = !DILocation(line: 2651, column: 43, scope: !786)
!5571 = !DILocation(line: 2651, column: 74, scope: !790)
!5572 = !DILocation(line: 2651, column: 82, scope: !790)
!5573 = !DILocation(line: 2651, column: 74, scope: !786)
!5574 = !DILocation(line: 2651, column: 126, scope: !5575)
!5575 = !DILexicalBlockFile(scope: !789, file: !490, discriminator: 2)
!5576 = !DILocation(line: 2651, column: 140, scope: !789)
!5577 = !DILocation(line: 2651, column: 145, scope: !5578)
!5578 = !DILexicalBlockFile(scope: !788, file: !490, discriminator: 4)
!5579 = !DILocation(line: 2651, column: 155, scope: !788)
!5580 = !DILocation(line: 2651, column: 185, scope: !788)
!5581 = !DILocation(line: 2651, column: 203, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !788, file: !490, line: 2651, column: 200)
!5583 = !DILocation(line: 2651, column: 220, scope: !5582)
!5584 = !DILocation(line: 2651, column: 200, scope: !5582)
!5585 = !DILocation(line: 2651, column: 230, scope: !5582)
!5586 = !DILocation(line: 2651, column: 200, scope: !788)
!5587 = !DILocation(line: 2651, column: 200, scope: !5588)
!5588 = !DILexicalBlockFile(scope: !788, file: !490, discriminator: 5)
!5589 = !DILocation(line: 2651, column: 261, scope: !5590)
!5590 = !DILexicalBlockFile(scope: !5582, file: !490, discriminator: 6)
!5591 = !DILocation(line: 2651, column: 279, scope: !5582)
!5592 = !DILocation(line: 2651, column: 289, scope: !5582)
!5593 = !DILocation(line: 2651, column: 314, scope: !5582)
!5594 = !DILocation(line: 2651, column: 245, scope: !5582)
!5595 = !DILocation(line: 2651, column: 333, scope: !5596)
!5596 = !DILexicalBlockFile(scope: !789, file: !490, discriminator: 7)
!5597 = !DILocation(line: 2651, column: 333, scope: !788)
!5598 = !DILocation(line: 2651, column: 333, scope: !5599)
!5599 = !DILexicalBlockFile(scope: !788, file: !490, discriminator: 8)
!5600 = !DILocation(line: 2651, column: 346, scope: !5601)
!5601 = !DILexicalBlockFile(scope: !789, file: !490, discriminator: 9)
!5602 = !DILocation(line: 2651, column: 348, scope: !5603)
!5603 = !DILexicalBlockFile(scope: !5604, file: !490, discriminator: 10)
!5604 = !DILexicalBlockFile(scope: !781, file: !490, discriminator: 3)
!5605 = !DILocation(line: 2651, column: 348, scope: !786)
!5606 = !DILocation(line: 2652, column: 5, scope: !781)
!5607 = !DILocation(line: 2653, column: 5, scope: !781)
!5608 = !DILocation(line: 2653, column: 10, scope: !5609)
!5609 = !DILexicalBlockFile(scope: !792, file: !490, discriminator: 1)
!5610 = !DILocation(line: 2653, column: 20, scope: !792)
!5611 = !DILocation(line: 2653, column: 43, scope: !792)
!5612 = !DILocation(line: 2653, column: 58, scope: !796)
!5613 = !DILocation(line: 2653, column: 66, scope: !796)
!5614 = !DILocation(line: 2653, column: 58, scope: !792)
!5615 = !DILocation(line: 2653, column: 94, scope: !5616)
!5616 = !DILexicalBlockFile(scope: !795, file: !490, discriminator: 2)
!5617 = !DILocation(line: 2653, column: 108, scope: !795)
!5618 = !DILocation(line: 2653, column: 113, scope: !5619)
!5619 = !DILexicalBlockFile(scope: !794, file: !490, discriminator: 4)
!5620 = !DILocation(line: 2653, column: 123, scope: !794)
!5621 = !DILocation(line: 2653, column: 153, scope: !794)
!5622 = !DILocation(line: 2653, column: 171, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !794, file: !490, line: 2653, column: 168)
!5624 = !DILocation(line: 2653, column: 188, scope: !5623)
!5625 = !DILocation(line: 2653, column: 168, scope: !5623)
!5626 = !DILocation(line: 2653, column: 198, scope: !5623)
!5627 = !DILocation(line: 2653, column: 168, scope: !794)
!5628 = !DILocation(line: 2653, column: 168, scope: !5629)
!5629 = !DILexicalBlockFile(scope: !794, file: !490, discriminator: 5)
!5630 = !DILocation(line: 2653, column: 229, scope: !5631)
!5631 = !DILexicalBlockFile(scope: !5623, file: !490, discriminator: 6)
!5632 = !DILocation(line: 2653, column: 247, scope: !5623)
!5633 = !DILocation(line: 2653, column: 257, scope: !5623)
!5634 = !DILocation(line: 2653, column: 282, scope: !5623)
!5635 = !DILocation(line: 2653, column: 213, scope: !5623)
!5636 = !DILocation(line: 2653, column: 301, scope: !5637)
!5637 = !DILexicalBlockFile(scope: !795, file: !490, discriminator: 7)
!5638 = !DILocation(line: 2653, column: 301, scope: !794)
!5639 = !DILocation(line: 2653, column: 301, scope: !5640)
!5640 = !DILexicalBlockFile(scope: !794, file: !490, discriminator: 8)
!5641 = !DILocation(line: 2653, column: 314, scope: !5642)
!5642 = !DILexicalBlockFile(scope: !795, file: !490, discriminator: 9)
!5643 = !DILocation(line: 2653, column: 316, scope: !5603)
!5644 = !DILocation(line: 2653, column: 316, scope: !792)
!5645 = !DILocation(line: 2654, column: 1, scope: !781)
!5646 = !DILocation(line: 2249, column: 5, scope: !1799)
!5647 = !DILocation(line: 2249, column: 12, scope: !5648)
!5648 = !DILexicalBlockFile(scope: !5649, file: !490, discriminator: 2)
!5649 = !DILexicalBlockFile(scope: !1799, file: !490, discriminator: 1)
!5650 = !DILocation(line: 2249, column: 31, scope: !1799)
!5651 = !DILocation(line: 2250, column: 9, scope: !1802)
!5652 = !DILocation(line: 2250, column: 19, scope: !1802)
!5653 = !DILocation(line: 2250, column: 39, scope: !1802)
!5654 = !DILocation(line: 2250, column: 26, scope: !1802)
!5655 = !DILocation(line: 2251, column: 56, scope: !1802)
!5656 = !DILocation(line: 2251, column: 76, scope: !1802)
!5657 = !DILocation(line: 2251, column: 30, scope: !1802)
!5658 = !DILocation(line: 2251, column: 28, scope: !1802)
!5659 = !DILocation(line: 2252, column: 23, scope: !1802)
!5660 = !DILocation(line: 2252, column: 31, scope: !1802)
!5661 = !DILocation(line: 2252, column: 41, scope: !1802)
!5662 = !{!2092, !1976, i64 320}
!5663 = !DILocation(line: 2252, column: 61, scope: !1802)
!5664 = !DILocation(line: 2252, column: 49, scope: !1802)
!5665 = !DILocation(line: 2252, column: 9, scope: !1802)
!5666 = !DILocation(line: 2253, column: 5, scope: !1799)
!5667 = !DILocation(line: 2254, column: 1, scope: !1799)
!5668 = !DILocation(line: 2685, column: 36, scope: !797)
!5669 = !DILocation(line: 2687, column: 5, scope: !797)
!5670 = !DILocation(line: 2687, column: 15, scope: !797)
!5671 = !DILocation(line: 2688, column: 5, scope: !797)
!5672 = !DILocation(line: 2688, column: 15, scope: !797)
!5673 = !DILocation(line: 2688, column: 21, scope: !797)
!5674 = !DILocation(line: 2688, column: 27, scope: !797)
!5675 = !DILocation(line: 2689, column: 5, scope: !797)
!5676 = !DILocation(line: 2689, column: 19, scope: !797)
!5677 = !DILocation(line: 2690, column: 5, scope: !797)
!5678 = !DILocation(line: 2690, column: 16, scope: !797)
!5679 = !DILocation(line: 2691, column: 5, scope: !797)
!5680 = !DILocation(line: 2691, column: 15, scope: !797)
!5681 = !DILocation(line: 2692, column: 5, scope: !797)
!5682 = !DILocation(line: 2692, column: 16, scope: !797)
!5683 = !DILocation(line: 2692, column: 26, scope: !797)
!5684 = !DILocation(line: 2692, column: 44, scope: !797)
!5685 = !DILocation(line: 2693, column: 5, scope: !797)
!5686 = !DILocation(line: 2693, column: 15, scope: !797)
!5687 = !DILocation(line: 2693, column: 25, scope: !797)
!5688 = !DILocation(line: 2693, column: 35, scope: !797)
!5689 = !DILocation(line: 2694, column: 5, scope: !797)
!5690 = !DILocation(line: 2694, column: 13, scope: !797)
!5691 = !DILocation(line: 2695, column: 5, scope: !797)
!5692 = !DILocation(line: 2695, column: 9, scope: !797)
!5693 = !DILocation(line: 2697, column: 5, scope: !797)
!5694 = !DILocation(line: 2698, column: 35, scope: !797)
!5695 = !DILocation(line: 2698, column: 19, scope: !797)
!5696 = !DILocation(line: 2698, column: 17, scope: !797)
!5697 = !DILocation(line: 2702, column: 24, scope: !797)
!5698 = !DILocation(line: 2702, column: 37, scope: !797)
!5699 = !{!2092, !1994, i64 32}
!5700 = !DILocation(line: 2702, column: 22, scope: !797)
!5701 = !DILocation(line: 2703, column: 42, scope: !797)
!5702 = !DILocation(line: 2703, column: 19, scope: !797)
!5703 = !DILocation(line: 2705, column: 9, scope: !797)
!5704 = !DILocation(line: 2705, column: 29, scope: !797)
!5705 = !DILocation(line: 2705, column: 26, scope: !797)
!5706 = !DILocation(line: 2705, column: 43, scope: !797)
!5707 = !DILocation(line: 2706, column: 12, scope: !797)
!5708 = !DILocation(line: 2706, column: 26, scope: !797)
!5709 = !{!2092, !1994, i64 208}
!5710 = !DILocation(line: 2706, column: 44, scope: !797)
!5711 = !DILocation(line: 2706, column: 49, scope: !797)
!5712 = !DILocation(line: 2707, column: 14, scope: !797)
!5713 = !DILocation(line: 2707, column: 34, scope: !797)
!5714 = !DILocation(line: 2707, column: 48, scope: !797)
!5715 = !DILocation(line: 2707, column: 31, scope: !797)
!5716 = !DILocation(line: 2705, column: 43, scope: !5717)
!5717 = !DILexicalBlockFile(scope: !5718, file: !490, discriminator: 2)
!5718 = !DILexicalBlockFile(scope: !797, file: !490, discriminator: 1)
!5719 = !DILocation(line: 2704, column: 21, scope: !797)
!5720 = !DILocation(line: 2710, column: 9, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !797, file: !490, line: 2710, column: 9)
!5722 = !DILocation(line: 2710, column: 22, scope: !5721)
!5723 = !{!2092, !1976, i64 296}
!5724 = !DILocation(line: 2710, column: 30, scope: !5721)
!5725 = !DILocation(line: 2710, column: 62, scope: !5721)
!5726 = !DILocation(line: 2711, column: 9, scope: !5721)
!5727 = !DILocation(line: 2711, column: 22, scope: !5721)
!5728 = !{!2092, !1976, i64 312}
!5729 = !DILocation(line: 2711, column: 29, scope: !5721)
!5730 = !DILocation(line: 2711, column: 50, scope: !5721)
!5731 = !DILocation(line: 2712, column: 10, scope: !5721)
!5732 = !DILocation(line: 2712, column: 26, scope: !5721)
!5733 = !DILocation(line: 2713, column: 9, scope: !5721)
!5734 = !DILocation(line: 2713, column: 22, scope: !5721)
!5735 = !{!2092, !1994, i64 40}
!5736 = !DILocation(line: 2713, column: 58, scope: !5721)
!5737 = !DILocation(line: 2713, column: 34, scope: !5721)
!5738 = !DILocation(line: 2710, column: 9, scope: !797)
!5739 = !DILocation(line: 2718, column: 23, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5721, file: !490, line: 2713, column: 71)
!5741 = !DILocation(line: 2718, column: 28, scope: !5740)
!5742 = !DILocation(line: 2718, column: 33, scope: !5740)
!5743 = !DILocation(line: 2718, column: 9, scope: !5740)
!5744 = !DILocation(line: 2719, column: 9, scope: !5740)
!5745 = !DILocation(line: 2723, column: 5, scope: !797)
!5746 = !DILocation(line: 2724, column: 47, scope: !797)
!5747 = !DILocation(line: 2724, column: 22, scope: !797)
!5748 = !DILocation(line: 2724, column: 53, scope: !797)
!5749 = !DILocation(line: 2724, column: 19, scope: !797)
!5750 = !DILocation(line: 2725, column: 33, scope: !797)
!5751 = !DILocation(line: 2725, column: 18, scope: !797)
!5752 = !DILocation(line: 2725, column: 50, scope: !797)
!5753 = !DILocation(line: 2725, column: 14, scope: !797)
!5754 = !DILocation(line: 2726, column: 9, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !797, file: !490, line: 2726, column: 9)
!5756 = !DILocation(line: 2726, column: 18, scope: !5755)
!5757 = !DILocation(line: 2726, column: 22, scope: !5755)
!5758 = !DILocation(line: 2727, column: 10, scope: !5755)
!5759 = !DILocation(line: 2727, column: 19, scope: !5755)
!5760 = !DILocation(line: 2727, column: 24, scope: !5755)
!5761 = !DILocation(line: 2728, column: 46, scope: !5755)
!5762 = !DILocation(line: 2728, column: 28, scope: !5755)
!5763 = !DILocation(line: 2728, column: 63, scope: !5755)
!5764 = !DILocation(line: 2728, column: 27, scope: !5755)
!5765 = !DILocation(line: 2728, column: 78, scope: !5755)
!5766 = !DILocation(line: 2728, column: 87, scope: !5755)
!5767 = !DILocation(line: 2726, column: 9, scope: !797)
!5768 = !DILocation(line: 2731, column: 23, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5755, file: !490, line: 2728, column: 109)
!5770 = !DILocation(line: 2731, column: 28, scope: !5769)
!5771 = !DILocation(line: 2731, column: 33, scope: !5769)
!5772 = !DILocation(line: 2731, column: 9, scope: !5769)
!5773 = !DILocation(line: 2732, column: 9, scope: !5769)
!5774 = !DILocation(line: 2736, column: 36, scope: !797)
!5775 = !DILocation(line: 2736, column: 15, scope: !797)
!5776 = !DILocation(line: 2736, column: 13, scope: !797)
!5777 = !DILocation(line: 2737, column: 9, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !797, file: !490, line: 2737, column: 9)
!5779 = !DILocation(line: 2737, column: 17, scope: !5778)
!5780 = !DILocation(line: 2737, column: 31, scope: !5778)
!5781 = !DILocation(line: 2737, column: 35, scope: !5782)
!5782 = !DILexicalBlockFile(scope: !5778, file: !490, discriminator: 1)
!5783 = !DILocation(line: 2737, column: 34, scope: !5778)
!5784 = !DILocation(line: 2737, column: 43, scope: !5778)
!5785 = !DILocation(line: 2737, column: 57, scope: !5778)
!5786 = !DILocation(line: 2738, column: 24, scope: !5778)
!5787 = !DILocation(line: 2738, column: 23, scope: !5778)
!5788 = !DILocation(line: 2738, column: 9, scope: !5778)
!5789 = !DILocation(line: 2738, column: 33, scope: !5778)
!5790 = !DILocation(line: 2737, column: 9, scope: !797)
!5791 = !DILocation(line: 2744, column: 23, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5778, file: !490, line: 2738, column: 38)
!5793 = !DILocation(line: 2744, column: 28, scope: !5792)
!5794 = !DILocation(line: 2744, column: 33, scope: !5792)
!5795 = !DILocation(line: 2744, column: 9, scope: !5792)
!5796 = !DILocation(line: 2745, column: 9, scope: !5792)
!5797 = !DILocation(line: 2758, column: 9, scope: !833)
!5798 = !DILocation(line: 2758, column: 12, scope: !833)
!5799 = !DILocation(line: 2758, column: 9, scope: !797)
!5800 = !DILocation(line: 2759, column: 34, scope: !832)
!5801 = !DILocation(line: 2759, column: 39, scope: !832)
!5802 = !DILocation(line: 2759, column: 9, scope: !832)
!5803 = !DILocation(line: 2760, column: 9, scope: !832)
!5804 = !DILocation(line: 2760, column: 14, scope: !5805)
!5805 = !DILexicalBlockFile(scope: !831, file: !490, discriminator: 1)
!5806 = !DILocation(line: 2760, column: 24, scope: !831)
!5807 = !DILocation(line: 2760, column: 54, scope: !831)
!5808 = !DILocation(line: 2760, column: 67, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !831, file: !490, line: 2760, column: 64)
!5810 = !DILocation(line: 2760, column: 84, scope: !5809)
!5811 = !DILocation(line: 2760, column: 64, scope: !5809)
!5812 = !DILocation(line: 2760, column: 94, scope: !5809)
!5813 = !DILocation(line: 2760, column: 64, scope: !831)
!5814 = !DILocation(line: 2760, column: 64, scope: !5815)
!5815 = !DILexicalBlockFile(scope: !831, file: !490, discriminator: 2)
!5816 = !DILocation(line: 2760, column: 125, scope: !5817)
!5817 = !DILexicalBlockFile(scope: !5809, file: !490, discriminator: 3)
!5818 = !DILocation(line: 2760, column: 143, scope: !5809)
!5819 = !DILocation(line: 2760, column: 153, scope: !5809)
!5820 = !DILocation(line: 2760, column: 178, scope: !5809)
!5821 = !DILocation(line: 2760, column: 109, scope: !5809)
!5822 = !DILocation(line: 2760, column: 197, scope: !5823)
!5823 = !DILexicalBlockFile(scope: !832, file: !490, discriminator: 4)
!5824 = !DILocation(line: 2760, column: 197, scope: !831)
!5825 = !DILocation(line: 2760, column: 197, scope: !5826)
!5826 = !DILexicalBlockFile(scope: !831, file: !490, discriminator: 5)
!5827 = !DILocation(line: 2761, column: 5, scope: !832)
!5828 = !DILocation(line: 2764, column: 24, scope: !797)
!5829 = !DILocation(line: 2764, column: 5, scope: !797)
!5830 = !DILocation(line: 2768, column: 40, scope: !797)
!5831 = !DILocation(line: 2768, column: 48, scope: !797)
!5832 = !DILocation(line: 2768, column: 18, scope: !797)
!5833 = !DILocation(line: 2768, column: 16, scope: !797)
!5834 = !DILocation(line: 2769, column: 22, scope: !797)
!5835 = !DILocation(line: 2769, column: 5, scope: !797)
!5836 = !DILocation(line: 2770, column: 9, scope: !837)
!5837 = !DILocation(line: 2770, column: 20, scope: !837)
!5838 = !DILocation(line: 2770, column: 9, scope: !797)
!5839 = !DILocation(line: 2771, column: 9, scope: !836)
!5840 = !DILocation(line: 2771, column: 14, scope: !5841)
!5841 = !DILexicalBlockFile(scope: !835, file: !490, discriminator: 1)
!5842 = !DILocation(line: 2771, column: 24, scope: !835)
!5843 = !DILocation(line: 2771, column: 54, scope: !835)
!5844 = !DILocation(line: 2771, column: 68, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !835, file: !490, line: 2771, column: 65)
!5846 = !DILocation(line: 2771, column: 85, scope: !5845)
!5847 = !DILocation(line: 2771, column: 65, scope: !5845)
!5848 = !DILocation(line: 2771, column: 95, scope: !5845)
!5849 = !DILocation(line: 2771, column: 65, scope: !835)
!5850 = !DILocation(line: 2771, column: 65, scope: !5851)
!5851 = !DILexicalBlockFile(scope: !835, file: !490, discriminator: 2)
!5852 = !DILocation(line: 2771, column: 126, scope: !5853)
!5853 = !DILexicalBlockFile(scope: !5845, file: !490, discriminator: 3)
!5854 = !DILocation(line: 2771, column: 144, scope: !5845)
!5855 = !DILocation(line: 2771, column: 154, scope: !5845)
!5856 = !DILocation(line: 2771, column: 179, scope: !5845)
!5857 = !DILocation(line: 2771, column: 110, scope: !5845)
!5858 = !DILocation(line: 2771, column: 198, scope: !5859)
!5859 = !DILexicalBlockFile(scope: !836, file: !490, discriminator: 4)
!5860 = !DILocation(line: 2771, column: 198, scope: !835)
!5861 = !DILocation(line: 2771, column: 198, scope: !5862)
!5862 = !DILexicalBlockFile(scope: !835, file: !490, discriminator: 5)
!5863 = !DILocation(line: 2772, column: 9, scope: !836)
!5864 = !DILocation(line: 2772, column: 14, scope: !5865)
!5865 = !DILexicalBlockFile(scope: !839, file: !490, discriminator: 1)
!5866 = !DILocation(line: 2772, column: 24, scope: !839)
!5867 = !DILocation(line: 2772, column: 54, scope: !839)
!5868 = !DILocation(line: 2772, column: 68, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !839, file: !490, line: 2772, column: 65)
!5870 = !DILocation(line: 2772, column: 85, scope: !5869)
!5871 = !DILocation(line: 2772, column: 65, scope: !5869)
!5872 = !DILocation(line: 2772, column: 95, scope: !5869)
!5873 = !DILocation(line: 2772, column: 65, scope: !839)
!5874 = !DILocation(line: 2772, column: 65, scope: !5875)
!5875 = !DILexicalBlockFile(scope: !839, file: !490, discriminator: 2)
!5876 = !DILocation(line: 2772, column: 126, scope: !5877)
!5877 = !DILexicalBlockFile(scope: !5869, file: !490, discriminator: 3)
!5878 = !DILocation(line: 2772, column: 144, scope: !5869)
!5879 = !DILocation(line: 2772, column: 154, scope: !5869)
!5880 = !DILocation(line: 2772, column: 179, scope: !5869)
!5881 = !DILocation(line: 2772, column: 110, scope: !5869)
!5882 = !DILocation(line: 2772, column: 198, scope: !5859)
!5883 = !DILocation(line: 2772, column: 198, scope: !839)
!5884 = !DILocation(line: 2772, column: 198, scope: !5885)
!5885 = !DILexicalBlockFile(scope: !839, file: !490, discriminator: 5)
!5886 = !DILocation(line: 2773, column: 9, scope: !836)
!5887 = !DILocation(line: 2776, column: 18, scope: !797)
!5888 = !DILocation(line: 2777, column: 18, scope: !797)
!5889 = !DILocation(line: 2777, column: 44, scope: !797)
!5890 = !DILocation(line: 2777, column: 51, scope: !797)
!5891 = !DILocation(line: 2777, column: 61, scope: !797)
!5892 = !DILocation(line: 2777, column: 70, scope: !797)
!5893 = !DILocation(line: 2776, column: 5, scope: !797)
!5894 = !DILocation(line: 2778, column: 5, scope: !797)
!5895 = !DILocation(line: 2778, column: 10, scope: !5896)
!5896 = !DILexicalBlockFile(scope: !841, file: !490, discriminator: 1)
!5897 = !DILocation(line: 2778, column: 20, scope: !841)
!5898 = !DILocation(line: 2778, column: 50, scope: !841)
!5899 = !DILocation(line: 2778, column: 64, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !841, file: !490, line: 2778, column: 61)
!5901 = !DILocation(line: 2778, column: 81, scope: !5900)
!5902 = !DILocation(line: 2778, column: 61, scope: !5900)
!5903 = !DILocation(line: 2778, column: 91, scope: !5900)
!5904 = !DILocation(line: 2778, column: 61, scope: !841)
!5905 = !DILocation(line: 2778, column: 61, scope: !5906)
!5906 = !DILexicalBlockFile(scope: !841, file: !490, discriminator: 2)
!5907 = !DILocation(line: 2778, column: 122, scope: !5908)
!5908 = !DILexicalBlockFile(scope: !5900, file: !490, discriminator: 3)
!5909 = !DILocation(line: 2778, column: 140, scope: !5900)
!5910 = !DILocation(line: 2778, column: 150, scope: !5900)
!5911 = !DILocation(line: 2778, column: 175, scope: !5900)
!5912 = !DILocation(line: 2778, column: 106, scope: !5900)
!5913 = !DILocation(line: 2778, column: 194, scope: !5914)
!5914 = !DILexicalBlockFile(scope: !797, file: !490, discriminator: 4)
!5915 = !DILocation(line: 2778, column: 194, scope: !841)
!5916 = !DILocation(line: 2778, column: 194, scope: !5917)
!5917 = !DILexicalBlockFile(scope: !841, file: !490, discriminator: 5)
!5918 = !DILocation(line: 2779, column: 5, scope: !797)
!5919 = !DILocation(line: 2779, column: 10, scope: !5920)
!5920 = !DILexicalBlockFile(scope: !843, file: !490, discriminator: 1)
!5921 = !DILocation(line: 2779, column: 20, scope: !843)
!5922 = !DILocation(line: 2779, column: 50, scope: !843)
!5923 = !DILocation(line: 2779, column: 71, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !843, file: !490, line: 2779, column: 68)
!5925 = !DILocation(line: 2779, column: 88, scope: !5924)
!5926 = !DILocation(line: 2779, column: 68, scope: !5924)
!5927 = !DILocation(line: 2779, column: 98, scope: !5924)
!5928 = !DILocation(line: 2779, column: 68, scope: !843)
!5929 = !DILocation(line: 2779, column: 68, scope: !5930)
!5930 = !DILexicalBlockFile(scope: !843, file: !490, discriminator: 2)
!5931 = !DILocation(line: 2779, column: 129, scope: !5932)
!5932 = !DILexicalBlockFile(scope: !5924, file: !490, discriminator: 3)
!5933 = !DILocation(line: 2779, column: 147, scope: !5924)
!5934 = !DILocation(line: 2779, column: 157, scope: !5924)
!5935 = !DILocation(line: 2779, column: 182, scope: !5924)
!5936 = !DILocation(line: 2779, column: 113, scope: !5924)
!5937 = !DILocation(line: 2779, column: 201, scope: !5914)
!5938 = !DILocation(line: 2779, column: 201, scope: !843)
!5939 = !DILocation(line: 2779, column: 201, scope: !5940)
!5940 = !DILexicalBlockFile(scope: !843, file: !490, discriminator: 5)
!5941 = !DILocation(line: 2780, column: 5, scope: !797)
!5942 = !DILocation(line: 2781, column: 5, scope: !797)
!5943 = !DILocation(line: 2782, column: 26, scope: !797)
!5944 = !DILocation(line: 2782, column: 35, scope: !797)
!5945 = !DILocation(line: 2782, column: 5, scope: !797)
!5946 = !DILocation(line: 2783, column: 19, scope: !797)
!5947 = !DILocation(line: 2783, column: 28, scope: !797)
!5948 = !DILocation(line: 2783, column: 37, scope: !797)
!5949 = !DILocation(line: 2783, column: 5, scope: !797)
!5950 = !DILocation(line: 2784, column: 12, scope: !797)
!5951 = !DILocation(line: 2784, column: 5, scope: !797)
!5952 = !DILocation(line: 2785, column: 1, scope: !797)
!5953 = !DILocation(line: 87, column: 46, scope: !857)
!5954 = !DILocation(line: 89, column: 5, scope: !857)
!5955 = !DILocation(line: 89, column: 10, scope: !5956)
!5956 = !DILexicalBlockFile(scope: !863, file: !490, discriminator: 1)
!5957 = !DILocation(line: 89, column: 21, scope: !863)
!5958 = !DILocation(line: 89, column: 40, scope: !863)
!5959 = !DILocation(line: 89, column: 26, scope: !863)
!5960 = !DILocation(line: 89, column: 45, scope: !863)
!5961 = !DILocation(line: 89, column: 64, scope: !863)
!5962 = !DILocation(line: 89, column: 89, scope: !5963)
!5963 = !DILexicalBlockFile(scope: !5964, file: !490, discriminator: 2)
!5964 = distinct !DILexicalBlock(scope: !863, file: !490, line: 89, column: 67)
!5965 = !DILocation(line: 89, column: 93, scope: !5964)
!5966 = !DILocation(line: 89, column: 96, scope: !5964)
!5967 = !{!5968, !1994, i64 16}
!5968 = !{!"", !1976, i64 0, !1976, i64 8, !1994, i64 16}
!5969 = !DILocation(line: 89, column: 104, scope: !5964)
!5970 = !DILocation(line: 89, column: 131, scope: !5964)
!5971 = !DILocation(line: 89, column: 70, scope: !5964)
!5972 = !DILocation(line: 89, column: 74, scope: !5964)
!5973 = !DILocation(line: 89, column: 77, scope: !5964)
!5974 = !DILocation(line: 89, column: 85, scope: !5964)
!5975 = !DILocation(line: 89, column: 160, scope: !5964)
!5976 = !DILocation(line: 89, column: 160, scope: !5977)
!5977 = !DILexicalBlockFile(scope: !5964, file: !490, discriminator: 3)
!5978 = !DILocation(line: 89, column: 201, scope: !5979)
!5979 = !DILexicalBlockFile(scope: !863, file: !490, discriminator: 4)
!5980 = !DILocation(line: 89, column: 204, scope: !863)
!5981 = !DILocation(line: 89, column: 207, scope: !863)
!5982 = !{!5968, !1976, i64 0}
!5983 = !DILocation(line: 89, column: 173, scope: !863)
!5984 = !DILocation(line: 89, column: 176, scope: !863)
!5985 = !DILocation(line: 89, column: 179, scope: !863)
!5986 = !{!5968, !1976, i64 8}
!5987 = !DILocation(line: 89, column: 188, scope: !863)
!5988 = !DILocation(line: 89, column: 191, scope: !863)
!5989 = !DILocation(line: 89, column: 199, scope: !863)
!5990 = !DILocation(line: 89, column: 244, scope: !863)
!5991 = !DILocation(line: 89, column: 247, scope: !863)
!5992 = !DILocation(line: 89, column: 250, scope: !863)
!5993 = !DILocation(line: 89, column: 216, scope: !863)
!5994 = !DILocation(line: 89, column: 219, scope: !863)
!5995 = !DILocation(line: 89, column: 222, scope: !863)
!5996 = !DILocation(line: 89, column: 231, scope: !863)
!5997 = !DILocation(line: 89, column: 234, scope: !863)
!5998 = !DILocation(line: 89, column: 242, scope: !863)
!5999 = !DILocation(line: 89, column: 259, scope: !863)
!6000 = !DILocation(line: 89, column: 262, scope: !863)
!6001 = !DILocation(line: 89, column: 265, scope: !863)
!6002 = !DILocation(line: 89, column: 273, scope: !863)
!6003 = !DILocation(line: 89, column: 287, scope: !857)
!6004 = !DILocation(line: 89, column: 287, scope: !863)
!6005 = !DILocation(line: 90, column: 25, scope: !857)
!6006 = !DILocation(line: 90, column: 5, scope: !857)
!6007 = !DILocation(line: 91, column: 19, scope: !857)
!6008 = !DILocation(line: 91, column: 7, scope: !857)
!6009 = !DILocation(line: 91, column: 27, scope: !857)
!6010 = !DILocation(line: 91, column: 37, scope: !857)
!6011 = !DILocation(line: 91, column: 57, scope: !857)
!6012 = !DILocation(line: 91, column: 45, scope: !857)
!6013 = !DILocation(line: 91, column: 5, scope: !857)
!6014 = !DILocation(line: 92, column: 1, scope: !857)
!6015 = !DILocation(line: 119, column: 43, scope: !864)
!6016 = !DILocation(line: 121, column: 5, scope: !864)
!6017 = !DILocation(line: 121, column: 17, scope: !864)
!6018 = !DILocation(line: 122, column: 5, scope: !864)
!6019 = !DILocation(line: 122, column: 17, scope: !864)
!6020 = !DILocation(line: 124, column: 26, scope: !864)
!6021 = !DILocation(line: 124, column: 14, scope: !864)
!6022 = !DILocation(line: 124, column: 34, scope: !864)
!6023 = !DILocation(line: 124, column: 44, scope: !864)
!6024 = !DILocation(line: 124, column: 10, scope: !864)
!6025 = !DILocation(line: 125, column: 34, scope: !864)
!6026 = !DILocation(line: 125, column: 26, scope: !864)
!6027 = !DILocation(line: 125, column: 9, scope: !864)
!6028 = !DILocation(line: 126, column: 9, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !864, file: !490, line: 126, column: 9)
!6030 = !DILocation(line: 126, column: 13, scope: !6029)
!6031 = !DILocation(line: 126, column: 9, scope: !864)
!6032 = !DILocation(line: 126, column: 35, scope: !6033)
!6033 = !DILexicalBlockFile(scope: !6029, file: !490, discriminator: 1)
!6034 = !DILocation(line: 126, column: 38, scope: !6029)
!6035 = !DILocation(line: 126, column: 33, scope: !6029)
!6036 = !DILocation(line: 126, column: 28, scope: !6029)
!6037 = !DILocation(line: 128, column: 41, scope: !864)
!6038 = !DILocation(line: 128, column: 47, scope: !864)
!6039 = !DILocation(line: 128, column: 53, scope: !864)
!6040 = !DILocation(line: 128, column: 12, scope: !864)
!6041 = !DILocation(line: 129, column: 1, scope: !864)
!6042 = !DILocation(line: 128, column: 5, scope: !864)
!6043 = !DILocation(line: 106, column: 42, scope: !871)
!6044 = !DILocation(line: 108, column: 30, scope: !871)
!6045 = !DILocation(line: 108, column: 36, scope: !871)
!6046 = !DILocation(line: 108, column: 15, scope: !871)
!6047 = !DILocation(line: 108, column: 44, scope: !871)
!6048 = !DILocation(line: 110, column: 16, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !871, file: !490, line: 108, column: 54)
!6050 = !DILocation(line: 110, column: 9, scope: !6049)
!6051 = !DILocation(line: 112, column: 49, scope: !6049)
!6052 = !DILocation(line: 112, column: 55, scope: !6049)
!6053 = !DILocation(line: 112, column: 31, scope: !6049)
!6054 = !DILocation(line: 112, column: 63, scope: !6049)
!6055 = !DILocation(line: 112, column: 30, scope: !6049)
!6056 = !DILocation(line: 112, column: 16, scope: !6049)
!6057 = !DILocation(line: 112, column: 9, scope: !6049)
!6058 = !DILocation(line: 114, column: 29, scope: !6049)
!6059 = !DILocation(line: 114, column: 35, scope: !6049)
!6060 = !DILocation(line: 114, column: 16, scope: !6049)
!6061 = !DILocation(line: 114, column: 9, scope: !6049)
!6062 = !DILocation(line: 116, column: 1, scope: !871)
!6063 = !DILocation(line: 95, column: 47, scope: !874)
!6064 = !DILocation(line: 95, column: 63, scope: !874)
!6065 = !DILocation(line: 95, column: 76, scope: !874)
!6066 = !DILocation(line: 97, column: 5, scope: !874)
!6067 = !DILocation(line: 97, column: 14, scope: !6068)
!6068 = !DILexicalBlockFile(scope: !883, file: !490, discriminator: 1)
!6069 = !DILocation(line: 97, column: 20, scope: !883)
!6070 = !DILocation(line: 97, column: 14, scope: !883)
!6071 = !DILocation(line: 97, column: 14, scope: !884)
!6072 = !DILocation(line: 97, column: 28, scope: !6073)
!6073 = !DILexicalBlockFile(scope: !882, file: !490, discriminator: 2)
!6074 = !DILocation(line: 97, column: 32, scope: !882)
!6075 = !DILocation(line: 97, column: 39, scope: !882)
!6076 = !DILocation(line: 97, column: 58, scope: !882)
!6077 = !DILocation(line: 97, column: 64, scope: !882)
!6078 = !DILocation(line: 97, column: 71, scope: !882)
!6079 = !DILocation(line: 97, column: 81, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !882, file: !490, line: 97, column: 81)
!6081 = !DILocation(line: 97, column: 81, scope: !882)
!6082 = !DILocation(line: 97, column: 94, scope: !6083)
!6083 = !DILexicalBlockFile(scope: !6080, file: !490, discriminator: 4)
!6084 = !DILocation(line: 97, column: 87, scope: !6080)
!6085 = !DILocation(line: 97, column: 100, scope: !6086)
!6086 = !DILexicalBlockFile(scope: !883, file: !490, discriminator: 5)
!6087 = !DILocation(line: 97, column: 100, scope: !6088)
!6088 = !DILexicalBlockFile(scope: !6089, file: !490, discriminator: 7)
!6089 = !DILexicalBlockFile(scope: !883, file: !490, discriminator: 6)
!6090 = !DILocation(line: 97, column: 100, scope: !882)
!6091 = !DILocation(line: 97, column: 102, scope: !6092)
!6092 = !DILexicalBlockFile(scope: !6093, file: !490, discriminator: 8)
!6093 = !DILexicalBlockFile(scope: !884, file: !490, discriminator: 3)
!6094 = !DILocation(line: 98, column: 5, scope: !874)
!6095 = !DILocation(line: 98, column: 14, scope: !6096)
!6096 = !DILexicalBlockFile(scope: !887, file: !490, discriminator: 1)
!6097 = !DILocation(line: 98, column: 20, scope: !887)
!6098 = !DILocation(line: 98, column: 14, scope: !887)
!6099 = !DILocation(line: 98, column: 14, scope: !888)
!6100 = !DILocation(line: 98, column: 28, scope: !6101)
!6101 = !DILexicalBlockFile(scope: !886, file: !490, discriminator: 2)
!6102 = !DILocation(line: 98, column: 32, scope: !886)
!6103 = !DILocation(line: 98, column: 39, scope: !886)
!6104 = !DILocation(line: 98, column: 58, scope: !886)
!6105 = !DILocation(line: 98, column: 64, scope: !886)
!6106 = !DILocation(line: 98, column: 71, scope: !886)
!6107 = !DILocation(line: 98, column: 81, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !886, file: !490, line: 98, column: 81)
!6109 = !DILocation(line: 98, column: 81, scope: !886)
!6110 = !DILocation(line: 98, column: 94, scope: !6111)
!6111 = !DILexicalBlockFile(scope: !6108, file: !490, discriminator: 4)
!6112 = !DILocation(line: 98, column: 87, scope: !6108)
!6113 = !DILocation(line: 98, column: 100, scope: !6114)
!6114 = !DILexicalBlockFile(scope: !887, file: !490, discriminator: 5)
!6115 = !DILocation(line: 98, column: 100, scope: !6116)
!6116 = !DILexicalBlockFile(scope: !6117, file: !490, discriminator: 7)
!6117 = !DILexicalBlockFile(scope: !887, file: !490, discriminator: 6)
!6118 = !DILocation(line: 98, column: 100, scope: !886)
!6119 = !DILocation(line: 98, column: 102, scope: !6120)
!6120 = !DILexicalBlockFile(scope: !6121, file: !490, discriminator: 8)
!6121 = !DILexicalBlockFile(scope: !888, file: !490, discriminator: 3)
!6122 = !DILocation(line: 99, column: 5, scope: !874)
!6123 = !DILocation(line: 99, column: 14, scope: !6124)
!6124 = !DILexicalBlockFile(scope: !891, file: !490, discriminator: 1)
!6125 = !DILocation(line: 99, column: 20, scope: !891)
!6126 = !DILocation(line: 99, column: 14, scope: !891)
!6127 = !DILocation(line: 99, column: 14, scope: !892)
!6128 = !DILocation(line: 99, column: 33, scope: !6129)
!6129 = !DILexicalBlockFile(scope: !890, file: !490, discriminator: 2)
!6130 = !DILocation(line: 99, column: 37, scope: !890)
!6131 = !DILocation(line: 99, column: 44, scope: !890)
!6132 = !DILocation(line: 99, column: 63, scope: !890)
!6133 = !DILocation(line: 99, column: 69, scope: !890)
!6134 = !DILocation(line: 99, column: 81, scope: !890)
!6135 = !DILocation(line: 99, column: 91, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !890, file: !490, line: 99, column: 91)
!6137 = !DILocation(line: 99, column: 91, scope: !890)
!6138 = !DILocation(line: 99, column: 104, scope: !6139)
!6139 = !DILexicalBlockFile(scope: !6136, file: !490, discriminator: 4)
!6140 = !DILocation(line: 99, column: 97, scope: !6136)
!6141 = !DILocation(line: 99, column: 110, scope: !6142)
!6142 = !DILexicalBlockFile(scope: !891, file: !490, discriminator: 5)
!6143 = !DILocation(line: 99, column: 110, scope: !6144)
!6144 = !DILexicalBlockFile(scope: !6145, file: !490, discriminator: 7)
!6145 = !DILexicalBlockFile(scope: !891, file: !490, discriminator: 6)
!6146 = !DILocation(line: 99, column: 110, scope: !890)
!6147 = !DILocation(line: 99, column: 112, scope: !6148)
!6148 = !DILexicalBlockFile(scope: !6149, file: !490, discriminator: 8)
!6149 = !DILexicalBlockFile(scope: !892, file: !490, discriminator: 3)
!6150 = !DILocation(line: 100, column: 5, scope: !874)
!6151 = !DILocation(line: 100, column: 14, scope: !6152)
!6152 = !DILexicalBlockFile(scope: !895, file: !490, discriminator: 1)
!6153 = !DILocation(line: 100, column: 20, scope: !895)
!6154 = !DILocation(line: 100, column: 14, scope: !895)
!6155 = !DILocation(line: 100, column: 14, scope: !896)
!6156 = !DILocation(line: 100, column: 29, scope: !6157)
!6157 = !DILexicalBlockFile(scope: !894, file: !490, discriminator: 2)
!6158 = !DILocation(line: 100, column: 33, scope: !894)
!6159 = !DILocation(line: 100, column: 40, scope: !894)
!6160 = !DILocation(line: 100, column: 59, scope: !894)
!6161 = !DILocation(line: 100, column: 65, scope: !894)
!6162 = !DILocation(line: 100, column: 73, scope: !894)
!6163 = !DILocation(line: 100, column: 83, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !894, file: !490, line: 100, column: 83)
!6165 = !DILocation(line: 100, column: 83, scope: !894)
!6166 = !DILocation(line: 100, column: 96, scope: !6167)
!6167 = !DILexicalBlockFile(scope: !6164, file: !490, discriminator: 4)
!6168 = !DILocation(line: 100, column: 89, scope: !6164)
!6169 = !DILocation(line: 100, column: 102, scope: !6170)
!6170 = !DILexicalBlockFile(scope: !895, file: !490, discriminator: 5)
!6171 = !DILocation(line: 100, column: 102, scope: !6172)
!6172 = !DILexicalBlockFile(scope: !6173, file: !490, discriminator: 7)
!6173 = !DILexicalBlockFile(scope: !895, file: !490, discriminator: 6)
!6174 = !DILocation(line: 100, column: 102, scope: !894)
!6175 = !DILocation(line: 100, column: 104, scope: !6176)
!6176 = !DILexicalBlockFile(scope: !6177, file: !490, discriminator: 8)
!6177 = !DILexicalBlockFile(scope: !896, file: !490, discriminator: 3)
!6178 = !DILocation(line: 101, column: 5, scope: !874)
!6179 = !DILocation(line: 101, column: 14, scope: !6180)
!6180 = !DILexicalBlockFile(scope: !899, file: !490, discriminator: 1)
!6181 = !DILocation(line: 101, column: 20, scope: !899)
!6182 = !DILocation(line: 101, column: 14, scope: !899)
!6183 = !DILocation(line: 101, column: 14, scope: !900)
!6184 = !DILocation(line: 101, column: 31, scope: !6185)
!6185 = !DILexicalBlockFile(scope: !898, file: !490, discriminator: 2)
!6186 = !DILocation(line: 101, column: 35, scope: !898)
!6187 = !DILocation(line: 101, column: 42, scope: !898)
!6188 = !DILocation(line: 101, column: 61, scope: !898)
!6189 = !DILocation(line: 101, column: 67, scope: !898)
!6190 = !DILocation(line: 101, column: 77, scope: !898)
!6191 = !DILocation(line: 101, column: 87, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !898, file: !490, line: 101, column: 87)
!6193 = !DILocation(line: 101, column: 87, scope: !898)
!6194 = !DILocation(line: 101, column: 100, scope: !6195)
!6195 = !DILexicalBlockFile(scope: !6192, file: !490, discriminator: 4)
!6196 = !DILocation(line: 101, column: 93, scope: !6192)
!6197 = !DILocation(line: 101, column: 106, scope: !6198)
!6198 = !DILexicalBlockFile(scope: !899, file: !490, discriminator: 5)
!6199 = !DILocation(line: 101, column: 106, scope: !6200)
!6200 = !DILexicalBlockFile(scope: !6201, file: !490, discriminator: 7)
!6201 = !DILexicalBlockFile(scope: !899, file: !490, discriminator: 6)
!6202 = !DILocation(line: 101, column: 106, scope: !898)
!6203 = !DILocation(line: 101, column: 108, scope: !6204)
!6204 = !DILexicalBlockFile(scope: !6205, file: !490, discriminator: 8)
!6205 = !DILexicalBlockFile(scope: !900, file: !490, discriminator: 3)
!6206 = !DILocation(line: 102, column: 5, scope: !874)
!6207 = !DILocation(line: 103, column: 1, scope: !874)
!6208 = !DILocation(line: 76, column: 44, scope: !901)
!6209 = !DILocation(line: 78, column: 5, scope: !901)
!6210 = !DILocation(line: 78, column: 10, scope: !6211)
!6211 = !DILexicalBlockFile(scope: !907, file: !490, discriminator: 1)
!6212 = !DILocation(line: 78, column: 20, scope: !907)
!6213 = !DILocation(line: 78, column: 43, scope: !907)
!6214 = !DILocation(line: 78, column: 49, scope: !907)
!6215 = !DILocation(line: 78, column: 60, scope: !911)
!6216 = !DILocation(line: 78, column: 68, scope: !911)
!6217 = !DILocation(line: 78, column: 60, scope: !907)
!6218 = !DILocation(line: 78, column: 86, scope: !6219)
!6219 = !DILexicalBlockFile(scope: !910, file: !490, discriminator: 2)
!6220 = !DILocation(line: 78, column: 92, scope: !910)
!6221 = !DILocation(line: 78, column: 98, scope: !910)
!6222 = !DILocation(line: 78, column: 112, scope: !910)
!6223 = !DILocation(line: 78, column: 117, scope: !6224)
!6224 = !DILexicalBlockFile(scope: !909, file: !490, discriminator: 4)
!6225 = !DILocation(line: 78, column: 127, scope: !909)
!6226 = !DILocation(line: 78, column: 157, scope: !909)
!6227 = !DILocation(line: 78, column: 175, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !909, file: !490, line: 78, column: 172)
!6229 = !DILocation(line: 78, column: 192, scope: !6228)
!6230 = !DILocation(line: 78, column: 172, scope: !6228)
!6231 = !DILocation(line: 78, column: 202, scope: !6228)
!6232 = !DILocation(line: 78, column: 172, scope: !909)
!6233 = !DILocation(line: 78, column: 172, scope: !6234)
!6234 = !DILexicalBlockFile(scope: !909, file: !490, discriminator: 5)
!6235 = !DILocation(line: 78, column: 233, scope: !6236)
!6236 = !DILexicalBlockFile(scope: !6228, file: !490, discriminator: 6)
!6237 = !DILocation(line: 78, column: 251, scope: !6228)
!6238 = !DILocation(line: 78, column: 261, scope: !6228)
!6239 = !DILocation(line: 78, column: 286, scope: !6228)
!6240 = !DILocation(line: 78, column: 217, scope: !6228)
!6241 = !DILocation(line: 78, column: 305, scope: !6242)
!6242 = !DILexicalBlockFile(scope: !910, file: !490, discriminator: 7)
!6243 = !DILocation(line: 78, column: 305, scope: !909)
!6244 = !DILocation(line: 78, column: 305, scope: !6245)
!6245 = !DILexicalBlockFile(scope: !909, file: !490, discriminator: 8)
!6246 = !DILocation(line: 78, column: 318, scope: !6247)
!6247 = !DILexicalBlockFile(scope: !910, file: !490, discriminator: 9)
!6248 = !DILocation(line: 78, column: 320, scope: !6249)
!6249 = !DILexicalBlockFile(scope: !6250, file: !490, discriminator: 10)
!6250 = !DILexicalBlockFile(scope: !901, file: !490, discriminator: 3)
!6251 = !DILocation(line: 78, column: 320, scope: !907)
!6252 = !DILocation(line: 79, column: 5, scope: !901)
!6253 = !DILocation(line: 79, column: 10, scope: !6254)
!6254 = !DILexicalBlockFile(scope: !913, file: !490, discriminator: 1)
!6255 = !DILocation(line: 79, column: 20, scope: !913)
!6256 = !DILocation(line: 79, column: 43, scope: !913)
!6257 = !DILocation(line: 79, column: 49, scope: !913)
!6258 = !DILocation(line: 79, column: 60, scope: !917)
!6259 = !DILocation(line: 79, column: 68, scope: !917)
!6260 = !DILocation(line: 79, column: 60, scope: !913)
!6261 = !DILocation(line: 79, column: 86, scope: !6262)
!6262 = !DILexicalBlockFile(scope: !916, file: !490, discriminator: 2)
!6263 = !DILocation(line: 79, column: 92, scope: !916)
!6264 = !DILocation(line: 79, column: 98, scope: !916)
!6265 = !DILocation(line: 79, column: 112, scope: !916)
!6266 = !DILocation(line: 79, column: 117, scope: !6267)
!6267 = !DILexicalBlockFile(scope: !915, file: !490, discriminator: 4)
!6268 = !DILocation(line: 79, column: 127, scope: !915)
!6269 = !DILocation(line: 79, column: 157, scope: !915)
!6270 = !DILocation(line: 79, column: 175, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !915, file: !490, line: 79, column: 172)
!6272 = !DILocation(line: 79, column: 192, scope: !6271)
!6273 = !DILocation(line: 79, column: 172, scope: !6271)
!6274 = !DILocation(line: 79, column: 202, scope: !6271)
!6275 = !DILocation(line: 79, column: 172, scope: !915)
!6276 = !DILocation(line: 79, column: 172, scope: !6277)
!6277 = !DILexicalBlockFile(scope: !915, file: !490, discriminator: 5)
!6278 = !DILocation(line: 79, column: 233, scope: !6279)
!6279 = !DILexicalBlockFile(scope: !6271, file: !490, discriminator: 6)
!6280 = !DILocation(line: 79, column: 251, scope: !6271)
!6281 = !DILocation(line: 79, column: 261, scope: !6271)
!6282 = !DILocation(line: 79, column: 286, scope: !6271)
!6283 = !DILocation(line: 79, column: 217, scope: !6271)
!6284 = !DILocation(line: 79, column: 305, scope: !6285)
!6285 = !DILexicalBlockFile(scope: !916, file: !490, discriminator: 7)
!6286 = !DILocation(line: 79, column: 305, scope: !915)
!6287 = !DILocation(line: 79, column: 305, scope: !6288)
!6288 = !DILexicalBlockFile(scope: !915, file: !490, discriminator: 8)
!6289 = !DILocation(line: 79, column: 318, scope: !6290)
!6290 = !DILexicalBlockFile(scope: !916, file: !490, discriminator: 9)
!6291 = !DILocation(line: 79, column: 320, scope: !6249)
!6292 = !DILocation(line: 79, column: 320, scope: !913)
!6293 = !DILocation(line: 80, column: 5, scope: !901)
!6294 = !DILocation(line: 80, column: 10, scope: !6295)
!6295 = !DILexicalBlockFile(scope: !919, file: !490, discriminator: 1)
!6296 = !DILocation(line: 80, column: 20, scope: !919)
!6297 = !DILocation(line: 80, column: 43, scope: !919)
!6298 = !DILocation(line: 80, column: 49, scope: !919)
!6299 = !DILocation(line: 80, column: 65, scope: !923)
!6300 = !DILocation(line: 80, column: 73, scope: !923)
!6301 = !DILocation(line: 80, column: 65, scope: !919)
!6302 = !DILocation(line: 80, column: 91, scope: !6303)
!6303 = !DILexicalBlockFile(scope: !922, file: !490, discriminator: 2)
!6304 = !DILocation(line: 80, column: 97, scope: !922)
!6305 = !DILocation(line: 80, column: 108, scope: !922)
!6306 = !DILocation(line: 80, column: 122, scope: !922)
!6307 = !DILocation(line: 80, column: 127, scope: !6308)
!6308 = !DILexicalBlockFile(scope: !921, file: !490, discriminator: 4)
!6309 = !DILocation(line: 80, column: 137, scope: !921)
!6310 = !DILocation(line: 80, column: 167, scope: !921)
!6311 = !DILocation(line: 80, column: 185, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !921, file: !490, line: 80, column: 182)
!6313 = !DILocation(line: 80, column: 202, scope: !6312)
!6314 = !DILocation(line: 80, column: 182, scope: !6312)
!6315 = !DILocation(line: 80, column: 212, scope: !6312)
!6316 = !DILocation(line: 80, column: 182, scope: !921)
!6317 = !DILocation(line: 80, column: 182, scope: !6318)
!6318 = !DILexicalBlockFile(scope: !921, file: !490, discriminator: 5)
!6319 = !DILocation(line: 80, column: 243, scope: !6320)
!6320 = !DILexicalBlockFile(scope: !6312, file: !490, discriminator: 6)
!6321 = !DILocation(line: 80, column: 261, scope: !6312)
!6322 = !DILocation(line: 80, column: 271, scope: !6312)
!6323 = !DILocation(line: 80, column: 296, scope: !6312)
!6324 = !DILocation(line: 80, column: 227, scope: !6312)
!6325 = !DILocation(line: 80, column: 315, scope: !6326)
!6326 = !DILexicalBlockFile(scope: !922, file: !490, discriminator: 7)
!6327 = !DILocation(line: 80, column: 315, scope: !921)
!6328 = !DILocation(line: 80, column: 315, scope: !6329)
!6329 = !DILexicalBlockFile(scope: !921, file: !490, discriminator: 8)
!6330 = !DILocation(line: 80, column: 328, scope: !6331)
!6331 = !DILexicalBlockFile(scope: !922, file: !490, discriminator: 9)
!6332 = !DILocation(line: 80, column: 330, scope: !6249)
!6333 = !DILocation(line: 80, column: 330, scope: !919)
!6334 = !DILocation(line: 81, column: 5, scope: !901)
!6335 = !DILocation(line: 81, column: 10, scope: !6336)
!6336 = !DILexicalBlockFile(scope: !925, file: !490, discriminator: 1)
!6337 = !DILocation(line: 81, column: 20, scope: !925)
!6338 = !DILocation(line: 81, column: 43, scope: !925)
!6339 = !DILocation(line: 81, column: 49, scope: !925)
!6340 = !DILocation(line: 81, column: 61, scope: !929)
!6341 = !DILocation(line: 81, column: 69, scope: !929)
!6342 = !DILocation(line: 81, column: 61, scope: !925)
!6343 = !DILocation(line: 81, column: 87, scope: !6344)
!6344 = !DILexicalBlockFile(scope: !928, file: !490, discriminator: 2)
!6345 = !DILocation(line: 81, column: 93, scope: !928)
!6346 = !DILocation(line: 81, column: 100, scope: !928)
!6347 = !DILocation(line: 81, column: 114, scope: !928)
!6348 = !DILocation(line: 81, column: 119, scope: !6349)
!6349 = !DILexicalBlockFile(scope: !927, file: !490, discriminator: 4)
!6350 = !DILocation(line: 81, column: 129, scope: !927)
!6351 = !DILocation(line: 81, column: 159, scope: !927)
!6352 = !DILocation(line: 81, column: 177, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !927, file: !490, line: 81, column: 174)
!6354 = !DILocation(line: 81, column: 194, scope: !6353)
!6355 = !DILocation(line: 81, column: 174, scope: !6353)
!6356 = !DILocation(line: 81, column: 204, scope: !6353)
!6357 = !DILocation(line: 81, column: 174, scope: !927)
!6358 = !DILocation(line: 81, column: 174, scope: !6359)
!6359 = !DILexicalBlockFile(scope: !927, file: !490, discriminator: 5)
!6360 = !DILocation(line: 81, column: 235, scope: !6361)
!6361 = !DILexicalBlockFile(scope: !6353, file: !490, discriminator: 6)
!6362 = !DILocation(line: 81, column: 253, scope: !6353)
!6363 = !DILocation(line: 81, column: 263, scope: !6353)
!6364 = !DILocation(line: 81, column: 288, scope: !6353)
!6365 = !DILocation(line: 81, column: 219, scope: !6353)
!6366 = !DILocation(line: 81, column: 307, scope: !6367)
!6367 = !DILexicalBlockFile(scope: !928, file: !490, discriminator: 7)
!6368 = !DILocation(line: 81, column: 307, scope: !927)
!6369 = !DILocation(line: 81, column: 307, scope: !6370)
!6370 = !DILexicalBlockFile(scope: !927, file: !490, discriminator: 8)
!6371 = !DILocation(line: 81, column: 320, scope: !6372)
!6372 = !DILexicalBlockFile(scope: !928, file: !490, discriminator: 9)
!6373 = !DILocation(line: 81, column: 322, scope: !6249)
!6374 = !DILocation(line: 81, column: 322, scope: !925)
!6375 = !DILocation(line: 82, column: 5, scope: !901)
!6376 = !DILocation(line: 82, column: 10, scope: !6377)
!6377 = !DILexicalBlockFile(scope: !931, file: !490, discriminator: 1)
!6378 = !DILocation(line: 82, column: 20, scope: !931)
!6379 = !DILocation(line: 82, column: 43, scope: !931)
!6380 = !DILocation(line: 82, column: 49, scope: !931)
!6381 = !DILocation(line: 82, column: 63, scope: !935)
!6382 = !DILocation(line: 82, column: 71, scope: !935)
!6383 = !DILocation(line: 82, column: 63, scope: !931)
!6384 = !DILocation(line: 82, column: 89, scope: !6385)
!6385 = !DILexicalBlockFile(scope: !934, file: !490, discriminator: 2)
!6386 = !DILocation(line: 82, column: 95, scope: !934)
!6387 = !DILocation(line: 82, column: 104, scope: !934)
!6388 = !DILocation(line: 82, column: 118, scope: !934)
!6389 = !DILocation(line: 82, column: 123, scope: !6390)
!6390 = !DILexicalBlockFile(scope: !933, file: !490, discriminator: 4)
!6391 = !DILocation(line: 82, column: 133, scope: !933)
!6392 = !DILocation(line: 82, column: 163, scope: !933)
!6393 = !DILocation(line: 82, column: 181, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !933, file: !490, line: 82, column: 178)
!6395 = !DILocation(line: 82, column: 198, scope: !6394)
!6396 = !DILocation(line: 82, column: 178, scope: !6394)
!6397 = !DILocation(line: 82, column: 208, scope: !6394)
!6398 = !DILocation(line: 82, column: 178, scope: !933)
!6399 = !DILocation(line: 82, column: 178, scope: !6400)
!6400 = !DILexicalBlockFile(scope: !933, file: !490, discriminator: 5)
!6401 = !DILocation(line: 82, column: 239, scope: !6402)
!6402 = !DILexicalBlockFile(scope: !6394, file: !490, discriminator: 6)
!6403 = !DILocation(line: 82, column: 257, scope: !6394)
!6404 = !DILocation(line: 82, column: 267, scope: !6394)
!6405 = !DILocation(line: 82, column: 292, scope: !6394)
!6406 = !DILocation(line: 82, column: 223, scope: !6394)
!6407 = !DILocation(line: 82, column: 311, scope: !6408)
!6408 = !DILexicalBlockFile(scope: !934, file: !490, discriminator: 7)
!6409 = !DILocation(line: 82, column: 311, scope: !933)
!6410 = !DILocation(line: 82, column: 311, scope: !6411)
!6411 = !DILexicalBlockFile(scope: !933, file: !490, discriminator: 8)
!6412 = !DILocation(line: 82, column: 324, scope: !6413)
!6413 = !DILexicalBlockFile(scope: !934, file: !490, discriminator: 9)
!6414 = !DILocation(line: 82, column: 326, scope: !6249)
!6415 = !DILocation(line: 82, column: 326, scope: !931)
!6416 = !DILocation(line: 83, column: 5, scope: !901)
!6417 = !DILocation(line: 133, column: 45, scope: !936)
!6418 = !DILocation(line: 135, column: 9, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !936, file: !490, line: 135, column: 9)
!6420 = !DILocation(line: 135, column: 15, scope: !6419)
!6421 = !DILocation(line: 135, column: 20, scope: !6419)
!6422 = !DILocation(line: 135, column: 23, scope: !6423)
!6423 = !DILexicalBlockFile(scope: !6419, file: !490, discriminator: 1)
!6424 = !DILocation(line: 135, column: 29, scope: !6419)
!6425 = !DILocation(line: 135, column: 23, scope: !6419)
!6426 = !DILocation(line: 135, column: 9, scope: !936)
!6427 = !DILocation(line: 136, column: 46, scope: !6419)
!6428 = !DILocation(line: 136, column: 34, scope: !6419)
!6429 = !DILocation(line: 136, column: 54, scope: !6419)
!6430 = !DILocation(line: 136, column: 64, scope: !6419)
!6431 = !DILocation(line: 136, column: 70, scope: !6419)
!6432 = !DILocation(line: 136, column: 76, scope: !6419)
!6433 = !DILocation(line: 136, column: 82, scope: !6419)
!6434 = !DILocation(line: 136, column: 16, scope: !6419)
!6435 = !DILocation(line: 136, column: 9, scope: !6419)
!6436 = !DILocation(line: 138, column: 46, scope: !6419)
!6437 = !DILocation(line: 138, column: 34, scope: !6419)
!6438 = !DILocation(line: 138, column: 54, scope: !6419)
!6439 = !DILocation(line: 138, column: 64, scope: !6419)
!6440 = !DILocation(line: 138, column: 70, scope: !6419)
!6441 = !DILocation(line: 138, column: 16, scope: !6419)
!6442 = !DILocation(line: 138, column: 9, scope: !6419)
!6443 = !DILocation(line: 139, column: 1, scope: !936)
!6444 = !DILocation(line: 147, column: 34, scope: !939)
!6445 = !DILocation(line: 147, column: 50, scope: !939)
!6446 = !DILocation(line: 149, column: 5, scope: !939)
!6447 = !DILocation(line: 149, column: 15, scope: !939)
!6448 = !DILocation(line: 149, column: 23, scope: !939)
!6449 = !DILocation(line: 150, column: 5, scope: !939)
!6450 = !DILocation(line: 150, column: 16, scope: !939)
!6451 = !DILocation(line: 152, column: 9, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !939, file: !490, line: 152, column: 9)
!6453 = !DILocation(line: 152, column: 15, scope: !6452)
!6454 = !DILocation(line: 152, column: 9, scope: !939)
!6455 = !DILocation(line: 153, column: 31, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6457, file: !490, line: 153, column: 13)
!6457 = distinct !DILexicalBlock(scope: !6452, file: !490, line: 152, column: 37)
!6458 = !DILocation(line: 153, column: 40, scope: !6456)
!6459 = !DILocation(line: 153, column: 51, scope: !6456)
!6460 = !DILocation(line: 153, column: 60, scope: !6456)
!6461 = !DILocation(line: 153, column: 77, scope: !6456)
!6462 = !DILocation(line: 153, column: 13, scope: !6457)
!6463 = !DILocation(line: 154, column: 29, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6456, file: !490, line: 153, column: 84)
!6465 = !DILocation(line: 154, column: 13, scope: !6464)
!6466 = !DILocation(line: 155, column: 13, scope: !6464)
!6467 = !DILocation(line: 157, column: 9, scope: !6457)
!6468 = !DILocation(line: 157, column: 28, scope: !6469)
!6469 = !DILexicalBlockFile(scope: !6470, file: !490, discriminator: 2)
!6470 = !DILexicalBlockFile(scope: !6457, file: !490, discriminator: 1)
!6471 = !DILocation(line: 157, column: 16, scope: !6457)
!6472 = !DILocation(line: 158, column: 34, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6474, file: !490, line: 158, column: 17)
!6474 = distinct !DILexicalBlock(scope: !6457, file: !490, line: 157, column: 58)
!6475 = !DILocation(line: 158, column: 40, scope: !6473)
!6476 = !DILocation(line: 158, column: 47, scope: !6473)
!6477 = !DILocation(line: 158, column: 17, scope: !6473)
!6478 = !DILocation(line: 158, column: 56, scope: !6473)
!6479 = !DILocation(line: 158, column: 17, scope: !6474)
!6480 = !DILocation(line: 159, column: 17, scope: !6473)
!6481 = !DILocation(line: 161, column: 5, scope: !6457)
!6482 = !DILocation(line: 162, column: 58, scope: !939)
!6483 = !DILocation(line: 162, column: 5, scope: !939)
!6484 = !DILocation(line: 163, column: 1, scope: !939)
!6485 = !DILocation(line: 166, column: 40, scope: !946)
!6486 = !DILocation(line: 166, column: 56, scope: !946)
!6487 = !DILocation(line: 167, column: 34, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !946, file: !490, line: 167, column: 9)
!6489 = !DILocation(line: 167, column: 40, scope: !6488)
!6490 = !DILocation(line: 167, column: 9, scope: !6488)
!6491 = !DILocation(line: 167, column: 9, scope: !946)
!6492 = !DILocation(line: 168, column: 9, scope: !6488)
!6493 = !DILocation(line: 170, column: 21, scope: !946)
!6494 = !DILocation(line: 170, column: 29, scope: !946)
!6495 = !DILocation(line: 170, column: 38, scope: !946)
!6496 = !DILocation(line: 171, column: 12, scope: !946)
!6497 = !DILocation(line: 171, column: 5, scope: !946)
!6498 = !DILocation(line: 172, column: 1, scope: !946)
!6499 = !DILocation(line: 188, column: 47, scope: !950)
!6500 = !DILocation(line: 190, column: 9, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !950, file: !490, line: 190, column: 9)
!6502 = !DILocation(line: 190, column: 15, scope: !6501)
!6503 = !DILocation(line: 190, column: 20, scope: !6501)
!6504 = !DILocation(line: 190, column: 9, scope: !950)
!6505 = !DILocation(line: 191, column: 55, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6501, file: !490, line: 190, column: 35)
!6507 = !DILocation(line: 192, column: 9, scope: !6506)
!6508 = !DILocation(line: 194, column: 21, scope: !950)
!6509 = !DILocation(line: 194, column: 27, scope: !950)
!6510 = !DILocation(line: 194, column: 35, scope: !950)
!6511 = !DILocation(line: 194, column: 44, scope: !950)
!6512 = !DILocation(line: 195, column: 12, scope: !950)
!6513 = !DILocation(line: 195, column: 18, scope: !950)
!6514 = !DILocation(line: 195, column: 5, scope: !950)
!6515 = !DILocation(line: 196, column: 1, scope: !950)
!6516 = !DILocation(line: 199, column: 47, scope: !953)
!6517 = !DILocation(line: 199, column: 63, scope: !953)
!6518 = !DILocation(line: 201, column: 5, scope: !953)
!6519 = !DILocation(line: 201, column: 15, scope: !953)
!6520 = !DILocation(line: 202, column: 9, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !953, file: !490, line: 202, column: 9)
!6522 = !DILocation(line: 202, column: 13, scope: !6521)
!6523 = !DILocation(line: 202, column: 9, scope: !953)
!6524 = !DILocation(line: 203, column: 25, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6521, file: !490, line: 202, column: 28)
!6526 = !DILocation(line: 203, column: 9, scope: !6525)
!6527 = !DILocation(line: 204, column: 9, scope: !6525)
!6528 = !DILocation(line: 206, column: 28, scope: !953)
!6529 = !DILocation(line: 206, column: 11, scope: !953)
!6530 = !DILocation(line: 206, column: 9, scope: !953)
!6531 = !DILocation(line: 207, column: 10, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !953, file: !490, line: 207, column: 9)
!6533 = !DILocation(line: 207, column: 9, scope: !953)
!6534 = !DILocation(line: 208, column: 9, scope: !6532)
!6535 = !DILocation(line: 209, column: 5, scope: !953)
!6536 = !DILocation(line: 209, column: 10, scope: !6537)
!6537 = !DILexicalBlockFile(scope: !959, file: !490, discriminator: 1)
!6538 = !DILocation(line: 209, column: 20, scope: !959)
!6539 = !DILocation(line: 209, column: 43, scope: !959)
!6540 = !DILocation(line: 209, column: 49, scope: !959)
!6541 = !DILocation(line: 209, column: 60, scope: !963)
!6542 = !DILocation(line: 209, column: 68, scope: !963)
!6543 = !DILocation(line: 209, column: 60, scope: !959)
!6544 = !DILocation(line: 209, column: 86, scope: !6545)
!6545 = !DILexicalBlockFile(scope: !962, file: !490, discriminator: 2)
!6546 = !DILocation(line: 209, column: 92, scope: !962)
!6547 = !DILocation(line: 209, column: 98, scope: !962)
!6548 = !DILocation(line: 209, column: 112, scope: !962)
!6549 = !DILocation(line: 209, column: 117, scope: !6550)
!6550 = !DILexicalBlockFile(scope: !961, file: !490, discriminator: 4)
!6551 = !DILocation(line: 209, column: 127, scope: !961)
!6552 = !DILocation(line: 209, column: 157, scope: !961)
!6553 = !DILocation(line: 209, column: 175, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !961, file: !490, line: 209, column: 172)
!6555 = !DILocation(line: 209, column: 192, scope: !6554)
!6556 = !DILocation(line: 209, column: 172, scope: !6554)
!6557 = !DILocation(line: 209, column: 202, scope: !6554)
!6558 = !DILocation(line: 209, column: 172, scope: !961)
!6559 = !DILocation(line: 209, column: 172, scope: !6560)
!6560 = !DILexicalBlockFile(scope: !961, file: !490, discriminator: 5)
!6561 = !DILocation(line: 209, column: 233, scope: !6562)
!6562 = !DILexicalBlockFile(scope: !6554, file: !490, discriminator: 6)
!6563 = !DILocation(line: 209, column: 251, scope: !6554)
!6564 = !DILocation(line: 209, column: 261, scope: !6554)
!6565 = !DILocation(line: 209, column: 286, scope: !6554)
!6566 = !DILocation(line: 209, column: 217, scope: !6554)
!6567 = !DILocation(line: 209, column: 305, scope: !6568)
!6568 = !DILexicalBlockFile(scope: !962, file: !490, discriminator: 7)
!6569 = !DILocation(line: 209, column: 305, scope: !961)
!6570 = !DILocation(line: 209, column: 305, scope: !6571)
!6571 = !DILexicalBlockFile(scope: !961, file: !490, discriminator: 8)
!6572 = !DILocation(line: 209, column: 318, scope: !6573)
!6573 = !DILexicalBlockFile(scope: !962, file: !490, discriminator: 9)
!6574 = !DILocation(line: 209, column: 320, scope: !6575)
!6575 = !DILexicalBlockFile(scope: !6576, file: !490, discriminator: 10)
!6576 = !DILexicalBlockFile(scope: !953, file: !490, discriminator: 3)
!6577 = !DILocation(line: 209, column: 320, scope: !959)
!6578 = !DILocation(line: 209, column: 320, scope: !6579)
!6579 = !DILexicalBlockFile(scope: !959, file: !490, discriminator: 11)
!6580 = !DILocation(line: 210, column: 18, scope: !953)
!6581 = !DILocation(line: 210, column: 5, scope: !953)
!6582 = !DILocation(line: 210, column: 11, scope: !953)
!6583 = !DILocation(line: 210, column: 16, scope: !953)
!6584 = !DILocation(line: 211, column: 5, scope: !953)
!6585 = !DILocation(line: 212, column: 1, scope: !953)
!6586 = !DILocation(line: 215, column: 45, scope: !964)
!6587 = !DILocation(line: 217, column: 9, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !964, file: !490, line: 217, column: 9)
!6589 = !DILocation(line: 217, column: 15, scope: !6588)
!6590 = !DILocation(line: 217, column: 25, scope: !6588)
!6591 = !DILocation(line: 217, column: 9, scope: !964)
!6592 = !DILocation(line: 218, column: 55, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6588, file: !490, line: 217, column: 40)
!6594 = !DILocation(line: 219, column: 9, scope: !6593)
!6595 = !DILocation(line: 221, column: 21, scope: !964)
!6596 = !DILocation(line: 221, column: 27, scope: !964)
!6597 = !DILocation(line: 221, column: 40, scope: !964)
!6598 = !DILocation(line: 221, column: 49, scope: !964)
!6599 = !DILocation(line: 222, column: 12, scope: !964)
!6600 = !DILocation(line: 222, column: 18, scope: !964)
!6601 = !DILocation(line: 222, column: 5, scope: !964)
!6602 = !DILocation(line: 223, column: 1, scope: !964)
!6603 = !DILocation(line: 245, column: 37, scope: !967)
!6604 = !DILocation(line: 246, column: 5, scope: !967)
!6605 = !DILocation(line: 246, column: 15, scope: !967)
!6606 = !DILocation(line: 246, column: 44, scope: !967)
!6607 = !DILocation(line: 246, column: 21, scope: !967)
!6608 = !DILocation(line: 247, column: 9, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !967, file: !490, line: 247, column: 9)
!6610 = !DILocation(line: 247, column: 9, scope: !967)
!6611 = !DILocation(line: 248, column: 16, scope: !6609)
!6612 = !DILocation(line: 248, column: 9, scope: !6609)
!6613 = !DILocation(line: 249, column: 58, scope: !967)
!6614 = !DILocation(line: 249, column: 5, scope: !967)
!6615 = !DILocation(line: 250, column: 1, scope: !967)
!6616 = !DILocation(line: 253, column: 37, scope: !971)
!6617 = !DILocation(line: 253, column: 53, scope: !971)
!6618 = !DILocation(line: 254, column: 9, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !971, file: !490, line: 254, column: 9)
!6620 = !DILocation(line: 254, column: 13, scope: !6619)
!6621 = !DILocation(line: 254, column: 9, scope: !971)
!6622 = !DILocation(line: 255, column: 25, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6619, file: !490, line: 254, column: 28)
!6624 = !DILocation(line: 255, column: 9, scope: !6623)
!6625 = !DILocation(line: 256, column: 9, scope: !6623)
!6626 = !DILocation(line: 257, column: 16, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6619, file: !490, line: 257, column: 16)
!6628 = !DILocation(line: 257, column: 20, scope: !6627)
!6629 = !DILocation(line: 257, column: 16, scope: !6619)
!6630 = !DILocation(line: 258, column: 13, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6627, file: !490, line: 257, column: 42)
!6632 = !DILocation(line: 259, column: 5, scope: !6631)
!6633 = !DILocation(line: 259, column: 21, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6627, file: !490, line: 259, column: 16)
!6635 = !DILocation(line: 259, column: 27, scope: !6634)
!6636 = !DILocation(line: 259, column: 37, scope: !6634)
!6637 = !DILocation(line: 259, column: 46, scope: !6634)
!6638 = !DILocation(line: 259, column: 63, scope: !6634)
!6639 = !DILocation(line: 259, column: 16, scope: !6627)
!6640 = !DILocation(line: 260, column: 25, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6634, file: !490, line: 259, column: 70)
!6642 = !DILocation(line: 260, column: 9, scope: !6641)
!6643 = !DILocation(line: 262, column: 9, scope: !6641)
!6644 = !DILocation(line: 265, column: 25, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6634, file: !490, line: 263, column: 12)
!6646 = !DILocation(line: 265, column: 32, scope: !6645)
!6647 = !DILocation(line: 265, column: 41, scope: !6645)
!6648 = !DILocation(line: 267, column: 28, scope: !971)
!6649 = !DILocation(line: 267, column: 34, scope: !971)
!6650 = !DILocation(line: 267, column: 5, scope: !971)
!6651 = !DILocation(line: 268, column: 5, scope: !971)
!6652 = !DILocation(line: 269, column: 1, scope: !971)
!6653 = !DILocation(line: 272, column: 35, scope: !975)
!6654 = !DILocation(line: 273, column: 5, scope: !975)
!6655 = !DILocation(line: 273, column: 15, scope: !975)
!6656 = !DILocation(line: 273, column: 42, scope: !975)
!6657 = !DILocation(line: 273, column: 21, scope: !975)
!6658 = !DILocation(line: 274, column: 9, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !975, file: !490, line: 274, column: 9)
!6660 = !DILocation(line: 274, column: 9, scope: !975)
!6661 = !DILocation(line: 275, column: 16, scope: !6659)
!6662 = !DILocation(line: 275, column: 9, scope: !6659)
!6663 = !DILocation(line: 276, column: 58, scope: !975)
!6664 = !DILocation(line: 276, column: 5, scope: !975)
!6665 = !DILocation(line: 277, column: 1, scope: !975)
!6666 = !DILocation(line: 280, column: 35, scope: !979)
!6667 = !DILocation(line: 280, column: 51, scope: !979)
!6668 = !DILocation(line: 281, column: 9, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !979, file: !490, line: 281, column: 9)
!6670 = !DILocation(line: 281, column: 13, scope: !6669)
!6671 = !DILocation(line: 281, column: 9, scope: !979)
!6672 = !DILocation(line: 282, column: 25, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6669, file: !490, line: 281, column: 28)
!6674 = !DILocation(line: 282, column: 9, scope: !6673)
!6675 = !DILocation(line: 283, column: 9, scope: !6673)
!6676 = !DILocation(line: 284, column: 16, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6669, file: !490, line: 284, column: 16)
!6678 = !DILocation(line: 284, column: 20, scope: !6677)
!6679 = !DILocation(line: 284, column: 16, scope: !6669)
!6680 = !DILocation(line: 285, column: 13, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6677, file: !490, line: 284, column: 42)
!6682 = !DILocation(line: 286, column: 5, scope: !6681)
!6683 = !DILocation(line: 286, column: 21, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6677, file: !490, line: 286, column: 16)
!6685 = !DILocation(line: 286, column: 27, scope: !6684)
!6686 = !DILocation(line: 286, column: 37, scope: !6684)
!6687 = !DILocation(line: 286, column: 46, scope: !6684)
!6688 = !DILocation(line: 286, column: 63, scope: !6684)
!6689 = !DILocation(line: 286, column: 16, scope: !6677)
!6690 = !DILocation(line: 287, column: 25, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6684, file: !490, line: 286, column: 70)
!6692 = !DILocation(line: 287, column: 9, scope: !6691)
!6693 = !DILocation(line: 289, column: 9, scope: !6691)
!6694 = !DILocation(line: 292, column: 25, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6684, file: !490, line: 290, column: 12)
!6696 = !DILocation(line: 292, column: 32, scope: !6695)
!6697 = !DILocation(line: 292, column: 41, scope: !6695)
!6698 = !DILocation(line: 294, column: 26, scope: !979)
!6699 = !DILocation(line: 294, column: 32, scope: !979)
!6700 = !DILocation(line: 294, column: 5, scope: !979)
!6701 = !DILocation(line: 295, column: 5, scope: !979)
!6702 = !DILocation(line: 296, column: 1, scope: !979)
!6703 = !DILocation(line: 511, column: 46, scope: !983)
!6704 = !DILocation(line: 513, column: 5, scope: !983)
!6705 = !DILocation(line: 513, column: 10, scope: !6706)
!6706 = !DILexicalBlockFile(scope: !1001, file: !490, discriminator: 1)
!6707 = !DILocation(line: 513, column: 21, scope: !1001)
!6708 = !DILocation(line: 513, column: 40, scope: !1001)
!6709 = !DILocation(line: 513, column: 26, scope: !1001)
!6710 = !DILocation(line: 513, column: 45, scope: !1001)
!6711 = !DILocation(line: 513, column: 64, scope: !1001)
!6712 = !DILocation(line: 513, column: 89, scope: !6713)
!6713 = !DILexicalBlockFile(scope: !6714, file: !490, discriminator: 2)
!6714 = distinct !DILexicalBlock(scope: !1001, file: !490, line: 513, column: 67)
!6715 = !DILocation(line: 513, column: 93, scope: !6714)
!6716 = !DILocation(line: 513, column: 96, scope: !6714)
!6717 = !DILocation(line: 513, column: 104, scope: !6714)
!6718 = !DILocation(line: 513, column: 131, scope: !6714)
!6719 = !DILocation(line: 513, column: 70, scope: !6714)
!6720 = !DILocation(line: 513, column: 74, scope: !6714)
!6721 = !DILocation(line: 513, column: 77, scope: !6714)
!6722 = !DILocation(line: 513, column: 85, scope: !6714)
!6723 = !DILocation(line: 513, column: 160, scope: !6714)
!6724 = !DILocation(line: 513, column: 160, scope: !6725)
!6725 = !DILexicalBlockFile(scope: !6714, file: !490, discriminator: 3)
!6726 = !DILocation(line: 513, column: 201, scope: !6727)
!6727 = !DILexicalBlockFile(scope: !1001, file: !490, discriminator: 4)
!6728 = !DILocation(line: 513, column: 204, scope: !1001)
!6729 = !DILocation(line: 513, column: 207, scope: !1001)
!6730 = !DILocation(line: 513, column: 173, scope: !1001)
!6731 = !DILocation(line: 513, column: 176, scope: !1001)
!6732 = !DILocation(line: 513, column: 179, scope: !1001)
!6733 = !DILocation(line: 513, column: 188, scope: !1001)
!6734 = !DILocation(line: 513, column: 191, scope: !1001)
!6735 = !DILocation(line: 513, column: 199, scope: !1001)
!6736 = !DILocation(line: 513, column: 244, scope: !1001)
!6737 = !DILocation(line: 513, column: 247, scope: !1001)
!6738 = !DILocation(line: 513, column: 250, scope: !1001)
!6739 = !DILocation(line: 513, column: 216, scope: !1001)
!6740 = !DILocation(line: 513, column: 219, scope: !1001)
!6741 = !DILocation(line: 513, column: 222, scope: !1001)
!6742 = !DILocation(line: 513, column: 231, scope: !1001)
!6743 = !DILocation(line: 513, column: 234, scope: !1001)
!6744 = !DILocation(line: 513, column: 242, scope: !1001)
!6745 = !DILocation(line: 513, column: 259, scope: !1001)
!6746 = !DILocation(line: 513, column: 262, scope: !1001)
!6747 = !DILocation(line: 513, column: 265, scope: !1001)
!6748 = !DILocation(line: 513, column: 273, scope: !1001)
!6749 = !DILocation(line: 513, column: 287, scope: !983)
!6750 = !DILocation(line: 513, column: 287, scope: !1001)
!6751 = !DILocation(line: 514, column: 25, scope: !983)
!6752 = !DILocation(line: 514, column: 5, scope: !983)
!6753 = !DILocation(line: 515, column: 19, scope: !983)
!6754 = !DILocation(line: 515, column: 7, scope: !983)
!6755 = !DILocation(line: 515, column: 27, scope: !983)
!6756 = !DILocation(line: 515, column: 37, scope: !983)
!6757 = !DILocation(line: 515, column: 57, scope: !983)
!6758 = !DILocation(line: 515, column: 45, scope: !983)
!6759 = !DILocation(line: 515, column: 5, scope: !983)
!6760 = !DILocation(line: 516, column: 1, scope: !983)
!6761 = !DILocation(line: 519, column: 47, scope: !1002)
!6762 = !DILocation(line: 519, column: 63, scope: !1002)
!6763 = !DILocation(line: 519, column: 76, scope: !1002)
!6764 = !DILocation(line: 521, column: 5, scope: !1002)
!6765 = !DILocation(line: 521, column: 14, scope: !6766)
!6766 = !DILexicalBlockFile(scope: !1011, file: !490, discriminator: 1)
!6767 = !DILocation(line: 521, column: 20, scope: !1011)
!6768 = !{!6769, !1976, i64 64}
!6769 = !{!"", !1993, i64 0, !1976, i64 16, !1976, i64 24, !1976, i64 32, !1976, i64 40, !1976, i64 48, !1977, i64 56, !1976, i64 64}
!6770 = !DILocation(line: 521, column: 14, scope: !1011)
!6771 = !DILocation(line: 521, column: 14, scope: !1012)
!6772 = !DILocation(line: 521, column: 29, scope: !6773)
!6773 = !DILexicalBlockFile(scope: !1010, file: !490, discriminator: 2)
!6774 = !DILocation(line: 521, column: 33, scope: !1010)
!6775 = !DILocation(line: 521, column: 40, scope: !1010)
!6776 = !DILocation(line: 521, column: 59, scope: !1010)
!6777 = !DILocation(line: 521, column: 65, scope: !1010)
!6778 = !DILocation(line: 521, column: 73, scope: !1010)
!6779 = !DILocation(line: 521, column: 83, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !1010, file: !490, line: 521, column: 83)
!6781 = !DILocation(line: 521, column: 83, scope: !1010)
!6782 = !DILocation(line: 521, column: 96, scope: !6783)
!6783 = !DILexicalBlockFile(scope: !6780, file: !490, discriminator: 4)
!6784 = !DILocation(line: 521, column: 89, scope: !6780)
!6785 = !DILocation(line: 521, column: 102, scope: !6786)
!6786 = !DILexicalBlockFile(scope: !1011, file: !490, discriminator: 5)
!6787 = !DILocation(line: 521, column: 102, scope: !6788)
!6788 = !DILexicalBlockFile(scope: !6789, file: !490, discriminator: 7)
!6789 = !DILexicalBlockFile(scope: !1011, file: !490, discriminator: 6)
!6790 = !DILocation(line: 521, column: 102, scope: !1010)
!6791 = !DILocation(line: 521, column: 104, scope: !6792)
!6792 = !DILexicalBlockFile(scope: !6793, file: !490, discriminator: 8)
!6793 = !DILexicalBlockFile(scope: !1012, file: !490, discriminator: 3)
!6794 = !DILocation(line: 522, column: 60, scope: !1002)
!6795 = !DILocation(line: 522, column: 35, scope: !1002)
!6796 = !DILocation(line: 522, column: 66, scope: !1002)
!6797 = !DILocation(line: 522, column: 73, scope: !1002)
!6798 = !DILocation(line: 522, column: 12, scope: !1002)
!6799 = !DILocation(line: 522, column: 5, scope: !1002)
!6800 = !DILocation(line: 523, column: 1, scope: !1002)
!6801 = !DILocation(line: 504, column: 44, scope: !1013)
!6802 = !DILocation(line: 506, column: 5, scope: !1013)
!6803 = !DILocation(line: 506, column: 10, scope: !6804)
!6804 = !DILexicalBlockFile(scope: !1019, file: !490, discriminator: 1)
!6805 = !DILocation(line: 506, column: 20, scope: !1019)
!6806 = !DILocation(line: 506, column: 43, scope: !1019)
!6807 = !DILocation(line: 506, column: 49, scope: !1019)
!6808 = !DILocation(line: 506, column: 61, scope: !1023)
!6809 = !DILocation(line: 506, column: 69, scope: !1023)
!6810 = !DILocation(line: 506, column: 61, scope: !1019)
!6811 = !DILocation(line: 506, column: 87, scope: !6812)
!6812 = !DILexicalBlockFile(scope: !1022, file: !490, discriminator: 2)
!6813 = !DILocation(line: 506, column: 93, scope: !1022)
!6814 = !DILocation(line: 506, column: 100, scope: !1022)
!6815 = !DILocation(line: 506, column: 114, scope: !1022)
!6816 = !DILocation(line: 506, column: 119, scope: !6817)
!6817 = !DILexicalBlockFile(scope: !1021, file: !490, discriminator: 4)
!6818 = !DILocation(line: 506, column: 129, scope: !1021)
!6819 = !DILocation(line: 506, column: 159, scope: !1021)
!6820 = !DILocation(line: 506, column: 177, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !1021, file: !490, line: 506, column: 174)
!6822 = !DILocation(line: 506, column: 194, scope: !6821)
!6823 = !DILocation(line: 506, column: 174, scope: !6821)
!6824 = !DILocation(line: 506, column: 204, scope: !6821)
!6825 = !DILocation(line: 506, column: 174, scope: !1021)
!6826 = !DILocation(line: 506, column: 174, scope: !6827)
!6827 = !DILexicalBlockFile(scope: !1021, file: !490, discriminator: 5)
!6828 = !DILocation(line: 506, column: 235, scope: !6829)
!6829 = !DILexicalBlockFile(scope: !6821, file: !490, discriminator: 6)
!6830 = !DILocation(line: 506, column: 253, scope: !6821)
!6831 = !DILocation(line: 506, column: 263, scope: !6821)
!6832 = !DILocation(line: 506, column: 288, scope: !6821)
!6833 = !DILocation(line: 506, column: 219, scope: !6821)
!6834 = !DILocation(line: 506, column: 307, scope: !6835)
!6835 = !DILexicalBlockFile(scope: !1022, file: !490, discriminator: 7)
!6836 = !DILocation(line: 506, column: 307, scope: !1021)
!6837 = !DILocation(line: 506, column: 307, scope: !6838)
!6838 = !DILexicalBlockFile(scope: !1021, file: !490, discriminator: 8)
!6839 = !DILocation(line: 506, column: 320, scope: !6840)
!6840 = !DILexicalBlockFile(scope: !1022, file: !490, discriminator: 9)
!6841 = !DILocation(line: 506, column: 322, scope: !6842)
!6842 = !DILexicalBlockFile(scope: !6843, file: !490, discriminator: 10)
!6843 = !DILexicalBlockFile(scope: !1013, file: !490, discriminator: 3)
!6844 = !DILocation(line: 506, column: 322, scope: !1019)
!6845 = !DILocation(line: 507, column: 57, scope: !1013)
!6846 = !DILocation(line: 507, column: 32, scope: !1013)
!6847 = !DILocation(line: 507, column: 12, scope: !1013)
!6848 = !DILocation(line: 507, column: 5, scope: !1013)
!6849 = !DILocation(line: 486, column: 43, scope: !1024)
!6850 = !DILocation(line: 486, column: 59, scope: !1024)
!6851 = !DILocation(line: 486, column: 75, scope: !1024)
!6852 = !DILocation(line: 488, column: 5, scope: !1024)
!6853 = !DILocation(line: 488, column: 16, scope: !1024)
!6854 = !DILocation(line: 488, column: 40, scope: !1024)
!6855 = !DILocation(line: 488, column: 25, scope: !1024)
!6856 = !DILocation(line: 488, column: 48, scope: !1024)
!6857 = !DILocation(line: 489, column: 5, scope: !1024)
!6858 = !DILocation(line: 489, column: 15, scope: !1024)
!6859 = !DILocation(line: 491, column: 53, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !1024, file: !490, line: 491, column: 9)
!6861 = !DILocation(line: 491, column: 28, scope: !6860)
!6862 = !DILocation(line: 491, column: 59, scope: !6860)
!6863 = !DILocation(line: 491, column: 65, scope: !6860)
!6864 = !DILocation(line: 491, column: 9, scope: !6860)
!6865 = !DILocation(line: 491, column: 71, scope: !6860)
!6866 = !DILocation(line: 491, column: 9, scope: !1024)
!6867 = !DILocation(line: 492, column: 9, scope: !6860)
!6868 = !DILocation(line: 493, column: 5, scope: !1024)
!6869 = !DILocation(line: 493, column: 10, scope: !6870)
!6870 = !DILexicalBlockFile(scope: !1034, file: !490, discriminator: 1)
!6871 = !DILocation(line: 493, column: 20, scope: !1034)
!6872 = !DILocation(line: 493, column: 43, scope: !1034)
!6873 = !DILocation(line: 493, column: 49, scope: !1034)
!6874 = !DILocation(line: 493, column: 61, scope: !1038)
!6875 = !DILocation(line: 493, column: 69, scope: !1038)
!6876 = !DILocation(line: 493, column: 61, scope: !1034)
!6877 = !DILocation(line: 493, column: 87, scope: !6878)
!6878 = !DILexicalBlockFile(scope: !1037, file: !490, discriminator: 2)
!6879 = !DILocation(line: 493, column: 93, scope: !1037)
!6880 = !DILocation(line: 493, column: 100, scope: !1037)
!6881 = !DILocation(line: 493, column: 114, scope: !1037)
!6882 = !DILocation(line: 493, column: 119, scope: !6883)
!6883 = !DILexicalBlockFile(scope: !1036, file: !490, discriminator: 4)
!6884 = !DILocation(line: 493, column: 129, scope: !1036)
!6885 = !DILocation(line: 493, column: 159, scope: !1036)
!6886 = !DILocation(line: 493, column: 177, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !1036, file: !490, line: 493, column: 174)
!6888 = !DILocation(line: 493, column: 194, scope: !6887)
!6889 = !DILocation(line: 493, column: 174, scope: !6887)
!6890 = !DILocation(line: 493, column: 204, scope: !6887)
!6891 = !DILocation(line: 493, column: 174, scope: !1036)
!6892 = !DILocation(line: 493, column: 174, scope: !6893)
!6893 = !DILexicalBlockFile(scope: !1036, file: !490, discriminator: 5)
!6894 = !DILocation(line: 493, column: 235, scope: !6895)
!6895 = !DILexicalBlockFile(scope: !6887, file: !490, discriminator: 6)
!6896 = !DILocation(line: 493, column: 253, scope: !6887)
!6897 = !DILocation(line: 493, column: 263, scope: !6887)
!6898 = !DILocation(line: 493, column: 288, scope: !6887)
!6899 = !DILocation(line: 493, column: 219, scope: !6887)
!6900 = !DILocation(line: 493, column: 307, scope: !6901)
!6901 = !DILexicalBlockFile(scope: !1037, file: !490, discriminator: 7)
!6902 = !DILocation(line: 493, column: 307, scope: !1036)
!6903 = !DILocation(line: 493, column: 307, scope: !6904)
!6904 = !DILexicalBlockFile(scope: !1036, file: !490, discriminator: 8)
!6905 = !DILocation(line: 493, column: 320, scope: !6906)
!6906 = !DILexicalBlockFile(scope: !1037, file: !490, discriminator: 9)
!6907 = !DILocation(line: 493, column: 322, scope: !6908)
!6908 = !DILexicalBlockFile(scope: !6909, file: !490, discriminator: 10)
!6909 = !DILexicalBlockFile(scope: !1024, file: !490, discriminator: 3)
!6910 = !DILocation(line: 493, column: 322, scope: !1034)
!6911 = !DILocation(line: 493, column: 322, scope: !6912)
!6912 = !DILexicalBlockFile(scope: !1034, file: !490, discriminator: 11)
!6913 = !DILocation(line: 494, column: 9, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !1024, file: !490, line: 494, column: 9)
!6915 = !DILocation(line: 494, column: 14, scope: !6914)
!6916 = !DILocation(line: 494, column: 9, scope: !1024)
!6917 = !DILocation(line: 495, column: 37, scope: !6914)
!6918 = !DILocation(line: 495, column: 19, scope: !6914)
!6919 = !DILocation(line: 495, column: 45, scope: !6914)
!6920 = !DILocation(line: 495, column: 18, scope: !6914)
!6921 = !DILocation(line: 495, column: 15, scope: !6914)
!6922 = !DILocation(line: 495, column: 9, scope: !6914)
!6923 = !DILocation(line: 497, column: 15, scope: !6914)
!6924 = !DILocation(line: 498, column: 21, scope: !1024)
!6925 = !DILocation(line: 498, column: 30, scope: !1024)
!6926 = !DILocation(line: 498, column: 39, scope: !1024)
!6927 = !DILocation(line: 499, column: 19, scope: !1024)
!6928 = !DILocation(line: 499, column: 5, scope: !1024)
!6929 = !DILocation(line: 499, column: 11, scope: !1024)
!6930 = !DILocation(line: 499, column: 17, scope: !1024)
!6931 = !DILocation(line: 500, column: 5, scope: !1024)
!6932 = !DILocation(line: 501, column: 1, scope: !1024)
!6933 = !DILocation(line: 576, column: 40, scope: !1039)
!6934 = !DILocation(line: 578, column: 5, scope: !1039)
!6935 = !DILocation(line: 578, column: 10, scope: !6936)
!6936 = !DILexicalBlockFile(scope: !1057, file: !490, discriminator: 1)
!6937 = !DILocation(line: 578, column: 21, scope: !1057)
!6938 = !DILocation(line: 578, column: 40, scope: !1057)
!6939 = !DILocation(line: 578, column: 26, scope: !1057)
!6940 = !DILocation(line: 578, column: 45, scope: !1057)
!6941 = !DILocation(line: 578, column: 64, scope: !1057)
!6942 = !DILocation(line: 578, column: 89, scope: !6943)
!6943 = !DILexicalBlockFile(scope: !6944, file: !490, discriminator: 2)
!6944 = distinct !DILexicalBlock(scope: !1057, file: !490, line: 578, column: 67)
!6945 = !DILocation(line: 578, column: 93, scope: !6944)
!6946 = !DILocation(line: 578, column: 96, scope: !6944)
!6947 = !DILocation(line: 578, column: 104, scope: !6944)
!6948 = !DILocation(line: 578, column: 131, scope: !6944)
!6949 = !DILocation(line: 578, column: 70, scope: !6944)
!6950 = !DILocation(line: 578, column: 74, scope: !6944)
!6951 = !DILocation(line: 578, column: 77, scope: !6944)
!6952 = !DILocation(line: 578, column: 85, scope: !6944)
!6953 = !DILocation(line: 578, column: 160, scope: !6944)
!6954 = !DILocation(line: 578, column: 160, scope: !6955)
!6955 = !DILexicalBlockFile(scope: !6944, file: !490, discriminator: 3)
!6956 = !DILocation(line: 578, column: 201, scope: !6957)
!6957 = !DILexicalBlockFile(scope: !1057, file: !490, discriminator: 4)
!6958 = !DILocation(line: 578, column: 204, scope: !1057)
!6959 = !DILocation(line: 578, column: 207, scope: !1057)
!6960 = !DILocation(line: 578, column: 173, scope: !1057)
!6961 = !DILocation(line: 578, column: 176, scope: !1057)
!6962 = !DILocation(line: 578, column: 179, scope: !1057)
!6963 = !DILocation(line: 578, column: 188, scope: !1057)
!6964 = !DILocation(line: 578, column: 191, scope: !1057)
!6965 = !DILocation(line: 578, column: 199, scope: !1057)
!6966 = !DILocation(line: 578, column: 244, scope: !1057)
!6967 = !DILocation(line: 578, column: 247, scope: !1057)
!6968 = !DILocation(line: 578, column: 250, scope: !1057)
!6969 = !DILocation(line: 578, column: 216, scope: !1057)
!6970 = !DILocation(line: 578, column: 219, scope: !1057)
!6971 = !DILocation(line: 578, column: 222, scope: !1057)
!6972 = !DILocation(line: 578, column: 231, scope: !1057)
!6973 = !DILocation(line: 578, column: 234, scope: !1057)
!6974 = !DILocation(line: 578, column: 242, scope: !1057)
!6975 = !DILocation(line: 578, column: 259, scope: !1057)
!6976 = !DILocation(line: 578, column: 262, scope: !1057)
!6977 = !DILocation(line: 578, column: 265, scope: !1057)
!6978 = !DILocation(line: 578, column: 273, scope: !1057)
!6979 = !DILocation(line: 578, column: 287, scope: !1039)
!6980 = !DILocation(line: 578, column: 287, scope: !1057)
!6981 = !DILocation(line: 579, column: 22, scope: !1039)
!6982 = !DILocation(line: 579, column: 5, scope: !1039)
!6983 = !DILocation(line: 580, column: 19, scope: !1039)
!6984 = !DILocation(line: 580, column: 7, scope: !1039)
!6985 = !DILocation(line: 580, column: 27, scope: !1039)
!6986 = !DILocation(line: 580, column: 37, scope: !1039)
!6987 = !DILocation(line: 580, column: 57, scope: !1039)
!6988 = !DILocation(line: 580, column: 45, scope: !1039)
!6989 = !DILocation(line: 580, column: 5, scope: !1039)
!6990 = !DILocation(line: 581, column: 1, scope: !1039)
!6991 = !DILocation(line: 584, column: 41, scope: !1058)
!6992 = !DILocation(line: 584, column: 57, scope: !1058)
!6993 = !DILocation(line: 584, column: 70, scope: !1058)
!6994 = !DILocation(line: 586, column: 5, scope: !1058)
!6995 = !DILocation(line: 586, column: 14, scope: !6996)
!6996 = !DILexicalBlockFile(scope: !1067, file: !490, discriminator: 1)
!6997 = !DILocation(line: 586, column: 20, scope: !1067)
!6998 = !DILocation(line: 586, column: 14, scope: !1067)
!6999 = !DILocation(line: 586, column: 14, scope: !1068)
!7000 = !DILocation(line: 586, column: 28, scope: !7001)
!7001 = !DILexicalBlockFile(scope: !1066, file: !490, discriminator: 2)
!7002 = !DILocation(line: 586, column: 32, scope: !1066)
!7003 = !DILocation(line: 586, column: 39, scope: !1066)
!7004 = !DILocation(line: 586, column: 58, scope: !1066)
!7005 = !DILocation(line: 586, column: 64, scope: !1066)
!7006 = !DILocation(line: 586, column: 71, scope: !1066)
!7007 = !DILocation(line: 586, column: 81, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !1066, file: !490, line: 586, column: 81)
!7009 = !DILocation(line: 586, column: 81, scope: !1066)
!7010 = !DILocation(line: 586, column: 94, scope: !7011)
!7011 = !DILexicalBlockFile(scope: !7008, file: !490, discriminator: 4)
!7012 = !DILocation(line: 586, column: 87, scope: !7008)
!7013 = !DILocation(line: 586, column: 100, scope: !7014)
!7014 = !DILexicalBlockFile(scope: !1067, file: !490, discriminator: 5)
!7015 = !DILocation(line: 586, column: 100, scope: !7016)
!7016 = !DILexicalBlockFile(scope: !7017, file: !490, discriminator: 7)
!7017 = !DILexicalBlockFile(scope: !1067, file: !490, discriminator: 6)
!7018 = !DILocation(line: 586, column: 100, scope: !1066)
!7019 = !DILocation(line: 586, column: 102, scope: !7020)
!7020 = !DILexicalBlockFile(scope: !7021, file: !490, discriminator: 8)
!7021 = !DILexicalBlockFile(scope: !1068, file: !490, discriminator: 3)
!7022 = !DILocation(line: 587, column: 60, scope: !1058)
!7023 = !DILocation(line: 587, column: 35, scope: !1058)
!7024 = !DILocation(line: 587, column: 66, scope: !1058)
!7025 = !DILocation(line: 587, column: 73, scope: !1058)
!7026 = !DILocation(line: 587, column: 12, scope: !1058)
!7027 = !DILocation(line: 587, column: 5, scope: !1058)
!7028 = !DILocation(line: 588, column: 1, scope: !1058)
!7029 = !DILocation(line: 569, column: 38, scope: !1069)
!7030 = !DILocation(line: 571, column: 5, scope: !1069)
!7031 = !DILocation(line: 571, column: 10, scope: !7032)
!7032 = !DILexicalBlockFile(scope: !1075, file: !490, discriminator: 1)
!7033 = !DILocation(line: 571, column: 20, scope: !1075)
!7034 = !DILocation(line: 571, column: 43, scope: !1075)
!7035 = !DILocation(line: 571, column: 49, scope: !1075)
!7036 = !DILocation(line: 571, column: 60, scope: !1079)
!7037 = !DILocation(line: 571, column: 68, scope: !1079)
!7038 = !DILocation(line: 571, column: 60, scope: !1075)
!7039 = !DILocation(line: 571, column: 86, scope: !7040)
!7040 = !DILexicalBlockFile(scope: !1078, file: !490, discriminator: 2)
!7041 = !DILocation(line: 571, column: 92, scope: !1078)
!7042 = !DILocation(line: 571, column: 98, scope: !1078)
!7043 = !DILocation(line: 571, column: 112, scope: !1078)
!7044 = !DILocation(line: 571, column: 117, scope: !7045)
!7045 = !DILexicalBlockFile(scope: !1077, file: !490, discriminator: 4)
!7046 = !DILocation(line: 571, column: 127, scope: !1077)
!7047 = !DILocation(line: 571, column: 157, scope: !1077)
!7048 = !DILocation(line: 571, column: 175, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !1077, file: !490, line: 571, column: 172)
!7050 = !DILocation(line: 571, column: 192, scope: !7049)
!7051 = !DILocation(line: 571, column: 172, scope: !7049)
!7052 = !DILocation(line: 571, column: 202, scope: !7049)
!7053 = !DILocation(line: 571, column: 172, scope: !1077)
!7054 = !DILocation(line: 571, column: 172, scope: !7055)
!7055 = !DILexicalBlockFile(scope: !1077, file: !490, discriminator: 5)
!7056 = !DILocation(line: 571, column: 233, scope: !7057)
!7057 = !DILexicalBlockFile(scope: !7049, file: !490, discriminator: 6)
!7058 = !DILocation(line: 571, column: 251, scope: !7049)
!7059 = !DILocation(line: 571, column: 261, scope: !7049)
!7060 = !DILocation(line: 571, column: 286, scope: !7049)
!7061 = !DILocation(line: 571, column: 217, scope: !7049)
!7062 = !DILocation(line: 571, column: 305, scope: !7063)
!7063 = !DILexicalBlockFile(scope: !1078, file: !490, discriminator: 7)
!7064 = !DILocation(line: 571, column: 305, scope: !1077)
!7065 = !DILocation(line: 571, column: 305, scope: !7066)
!7066 = !DILexicalBlockFile(scope: !1077, file: !490, discriminator: 8)
!7067 = !DILocation(line: 571, column: 318, scope: !7068)
!7068 = !DILexicalBlockFile(scope: !1078, file: !490, discriminator: 9)
!7069 = !DILocation(line: 571, column: 320, scope: !7070)
!7070 = !DILexicalBlockFile(scope: !7071, file: !490, discriminator: 10)
!7071 = !DILexicalBlockFile(scope: !1069, file: !490, discriminator: 3)
!7072 = !DILocation(line: 571, column: 320, scope: !1075)
!7073 = !DILocation(line: 572, column: 57, scope: !1069)
!7074 = !DILocation(line: 572, column: 32, scope: !1069)
!7075 = !DILocation(line: 572, column: 12, scope: !1069)
!7076 = !DILocation(line: 572, column: 5, scope: !1069)
!7077 = !DILocation(line: 550, column: 37, scope: !1080)
!7078 = !DILocation(line: 550, column: 53, scope: !1080)
!7079 = !DILocation(line: 550, column: 69, scope: !1080)
!7080 = !DILocation(line: 552, column: 5, scope: !1080)
!7081 = !DILocation(line: 552, column: 16, scope: !1080)
!7082 = !DILocation(line: 552, column: 40, scope: !1080)
!7083 = !DILocation(line: 552, column: 25, scope: !1080)
!7084 = !DILocation(line: 552, column: 48, scope: !1080)
!7085 = !DILocation(line: 554, column: 53, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !1080, file: !490, line: 554, column: 9)
!7087 = !DILocation(line: 554, column: 28, scope: !7086)
!7088 = !DILocation(line: 554, column: 59, scope: !7086)
!7089 = !DILocation(line: 554, column: 65, scope: !7086)
!7090 = !DILocation(line: 554, column: 9, scope: !7086)
!7091 = !DILocation(line: 554, column: 71, scope: !7086)
!7092 = !DILocation(line: 554, column: 9, scope: !1080)
!7093 = !DILocation(line: 555, column: 9, scope: !7086)
!7094 = !DILocation(line: 557, column: 9, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !1080, file: !490, line: 557, column: 9)
!7096 = !DILocation(line: 557, column: 14, scope: !7095)
!7097 = !DILocation(line: 557, column: 9, scope: !1080)
!7098 = !DILocation(line: 558, column: 9, scope: !7095)
!7099 = !DILocation(line: 559, column: 5, scope: !1080)
!7100 = !DILocation(line: 559, column: 10, scope: !7101)
!7101 = !DILexicalBlockFile(scope: !1089, file: !490, discriminator: 1)
!7102 = !DILocation(line: 559, column: 20, scope: !1089)
!7103 = !DILocation(line: 559, column: 43, scope: !1089)
!7104 = !DILocation(line: 559, column: 49, scope: !1089)
!7105 = !DILocation(line: 559, column: 60, scope: !1093)
!7106 = !DILocation(line: 559, column: 68, scope: !1093)
!7107 = !DILocation(line: 559, column: 60, scope: !1089)
!7108 = !DILocation(line: 559, column: 86, scope: !7109)
!7109 = !DILexicalBlockFile(scope: !1092, file: !490, discriminator: 2)
!7110 = !DILocation(line: 559, column: 92, scope: !1092)
!7111 = !DILocation(line: 559, column: 98, scope: !1092)
!7112 = !DILocation(line: 559, column: 112, scope: !1092)
!7113 = !DILocation(line: 559, column: 117, scope: !7114)
!7114 = !DILexicalBlockFile(scope: !1091, file: !490, discriminator: 4)
!7115 = !DILocation(line: 559, column: 127, scope: !1091)
!7116 = !DILocation(line: 559, column: 157, scope: !1091)
!7117 = !DILocation(line: 559, column: 175, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !1091, file: !490, line: 559, column: 172)
!7119 = !DILocation(line: 559, column: 192, scope: !7118)
!7120 = !DILocation(line: 559, column: 172, scope: !7118)
!7121 = !DILocation(line: 559, column: 202, scope: !7118)
!7122 = !DILocation(line: 559, column: 172, scope: !1091)
!7123 = !DILocation(line: 559, column: 172, scope: !7124)
!7124 = !DILexicalBlockFile(scope: !1091, file: !490, discriminator: 5)
!7125 = !DILocation(line: 559, column: 233, scope: !7126)
!7126 = !DILexicalBlockFile(scope: !7118, file: !490, discriminator: 6)
!7127 = !DILocation(line: 559, column: 251, scope: !7118)
!7128 = !DILocation(line: 559, column: 261, scope: !7118)
!7129 = !DILocation(line: 559, column: 286, scope: !7118)
!7130 = !DILocation(line: 559, column: 217, scope: !7118)
!7131 = !DILocation(line: 559, column: 305, scope: !7132)
!7132 = !DILexicalBlockFile(scope: !1092, file: !490, discriminator: 7)
!7133 = !DILocation(line: 559, column: 305, scope: !1091)
!7134 = !DILocation(line: 559, column: 305, scope: !7135)
!7135 = !DILexicalBlockFile(scope: !1091, file: !490, discriminator: 8)
!7136 = !DILocation(line: 559, column: 318, scope: !7137)
!7137 = !DILexicalBlockFile(scope: !1092, file: !490, discriminator: 9)
!7138 = !DILocation(line: 559, column: 320, scope: !7139)
!7139 = !DILexicalBlockFile(scope: !7140, file: !490, discriminator: 10)
!7140 = !DILexicalBlockFile(scope: !1080, file: !490, discriminator: 3)
!7141 = !DILocation(line: 559, column: 320, scope: !1089)
!7142 = !DILocation(line: 559, column: 320, scope: !7143)
!7143 = !DILexicalBlockFile(scope: !1089, file: !490, discriminator: 11)
!7144 = !DILocation(line: 560, column: 9, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !1080, file: !490, line: 560, column: 9)
!7146 = !DILocation(line: 560, column: 14, scope: !7145)
!7147 = !DILocation(line: 560, column: 9, scope: !1080)
!7148 = !DILocation(line: 561, column: 42, scope: !7145)
!7149 = !DILocation(line: 561, column: 24, scope: !7145)
!7150 = !DILocation(line: 561, column: 50, scope: !7145)
!7151 = !DILocation(line: 561, column: 23, scope: !7145)
!7152 = !DILocation(line: 561, column: 9, scope: !7145)
!7153 = !DILocation(line: 561, column: 15, scope: !7145)
!7154 = !DILocation(line: 561, column: 20, scope: !7145)
!7155 = !DILocation(line: 563, column: 22, scope: !7145)
!7156 = !DILocation(line: 563, column: 9, scope: !7145)
!7157 = !DILocation(line: 563, column: 15, scope: !7145)
!7158 = !DILocation(line: 563, column: 20, scope: !7145)
!7159 = !DILocation(line: 564, column: 21, scope: !1080)
!7160 = !DILocation(line: 564, column: 27, scope: !1080)
!7161 = !DILocation(line: 564, column: 35, scope: !1080)
!7162 = !DILocation(line: 564, column: 44, scope: !1080)
!7163 = !DILocation(line: 565, column: 5, scope: !1080)
!7164 = !DILocation(line: 566, column: 1, scope: !1080)
!7165 = !DILocation(line: 660, column: 42, scope: !1094)
!7166 = !DILocation(line: 662, column: 5, scope: !1094)
!7167 = !DILocation(line: 662, column: 10, scope: !7168)
!7168 = !DILexicalBlockFile(scope: !1114, file: !490, discriminator: 1)
!7169 = !DILocation(line: 662, column: 21, scope: !1114)
!7170 = !DILocation(line: 662, column: 40, scope: !1114)
!7171 = !DILocation(line: 662, column: 26, scope: !1114)
!7172 = !DILocation(line: 662, column: 45, scope: !1114)
!7173 = !DILocation(line: 662, column: 64, scope: !1114)
!7174 = !DILocation(line: 662, column: 89, scope: !7175)
!7175 = !DILexicalBlockFile(scope: !7176, file: !490, discriminator: 2)
!7176 = distinct !DILexicalBlock(scope: !1114, file: !490, line: 662, column: 67)
!7177 = !DILocation(line: 662, column: 93, scope: !7176)
!7178 = !DILocation(line: 662, column: 96, scope: !7176)
!7179 = !DILocation(line: 662, column: 104, scope: !7176)
!7180 = !DILocation(line: 662, column: 131, scope: !7176)
!7181 = !DILocation(line: 662, column: 70, scope: !7176)
!7182 = !DILocation(line: 662, column: 74, scope: !7176)
!7183 = !DILocation(line: 662, column: 77, scope: !7176)
!7184 = !DILocation(line: 662, column: 85, scope: !7176)
!7185 = !DILocation(line: 662, column: 160, scope: !7176)
!7186 = !DILocation(line: 662, column: 160, scope: !7187)
!7187 = !DILexicalBlockFile(scope: !7176, file: !490, discriminator: 3)
!7188 = !DILocation(line: 662, column: 201, scope: !7189)
!7189 = !DILexicalBlockFile(scope: !1114, file: !490, discriminator: 4)
!7190 = !DILocation(line: 662, column: 204, scope: !1114)
!7191 = !DILocation(line: 662, column: 207, scope: !1114)
!7192 = !DILocation(line: 662, column: 173, scope: !1114)
!7193 = !DILocation(line: 662, column: 176, scope: !1114)
!7194 = !DILocation(line: 662, column: 179, scope: !1114)
!7195 = !DILocation(line: 662, column: 188, scope: !1114)
!7196 = !DILocation(line: 662, column: 191, scope: !1114)
!7197 = !DILocation(line: 662, column: 199, scope: !1114)
!7198 = !DILocation(line: 662, column: 244, scope: !1114)
!7199 = !DILocation(line: 662, column: 247, scope: !1114)
!7200 = !DILocation(line: 662, column: 250, scope: !1114)
!7201 = !DILocation(line: 662, column: 216, scope: !1114)
!7202 = !DILocation(line: 662, column: 219, scope: !1114)
!7203 = !DILocation(line: 662, column: 222, scope: !1114)
!7204 = !DILocation(line: 662, column: 231, scope: !1114)
!7205 = !DILocation(line: 662, column: 234, scope: !1114)
!7206 = !DILocation(line: 662, column: 242, scope: !1114)
!7207 = !DILocation(line: 662, column: 259, scope: !1114)
!7208 = !DILocation(line: 662, column: 262, scope: !1114)
!7209 = !DILocation(line: 662, column: 265, scope: !1114)
!7210 = !DILocation(line: 662, column: 273, scope: !1114)
!7211 = !DILocation(line: 662, column: 287, scope: !1094)
!7212 = !DILocation(line: 662, column: 287, scope: !1114)
!7213 = !DILocation(line: 663, column: 23, scope: !1094)
!7214 = !DILocation(line: 663, column: 5, scope: !1094)
!7215 = !DILocation(line: 664, column: 19, scope: !1094)
!7216 = !DILocation(line: 664, column: 7, scope: !1094)
!7217 = !DILocation(line: 664, column: 27, scope: !1094)
!7218 = !DILocation(line: 664, column: 37, scope: !1094)
!7219 = !DILocation(line: 664, column: 57, scope: !1094)
!7220 = !DILocation(line: 664, column: 45, scope: !1094)
!7221 = !DILocation(line: 664, column: 5, scope: !1094)
!7222 = !DILocation(line: 665, column: 1, scope: !1094)
!7223 = !DILocation(line: 677, column: 38, scope: !1115)
!7224 = !DILocation(line: 679, column: 9, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !1115, file: !490, line: 679, column: 9)
!7226 = !DILocation(line: 679, column: 15, scope: !7225)
!7227 = !{!7228, !1976, i64 64}
!7228 = !{!"", !1993, i64 0, !1976, i64 16, !1976, i64 24, !1976, i64 32, !1976, i64 40, !1976, i64 48, !1977, i64 56, !1976, i64 64, !1976, i64 72, !1976, i64 80}
!7229 = !DILocation(line: 679, column: 19, scope: !7225)
!7230 = !DILocation(line: 679, column: 37, scope: !7231)
!7231 = !DILexicalBlockFile(scope: !7225, file: !490, discriminator: 1)
!7232 = !DILocation(line: 679, column: 43, scope: !7225)
!7233 = !DILocation(line: 679, column: 50, scope: !7225)
!7234 = !DILocation(line: 679, column: 59, scope: !7225)
!7235 = !DILocation(line: 679, column: 9, scope: !1115)
!7236 = !DILocation(line: 680, column: 25, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7225, file: !490, line: 679, column: 80)
!7238 = !DILocation(line: 680, column: 31, scope: !7237)
!7239 = !DILocation(line: 680, column: 38, scope: !7237)
!7240 = !DILocation(line: 680, column: 47, scope: !7237)
!7241 = !DILocation(line: 681, column: 16, scope: !7237)
!7242 = !DILocation(line: 681, column: 22, scope: !7237)
!7243 = !DILocation(line: 681, column: 9, scope: !7237)
!7244 = !DILocation(line: 684, column: 59, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7225, file: !490, line: 683, column: 10)
!7246 = !DILocation(line: 684, column: 34, scope: !7245)
!7247 = !DILocation(line: 684, column: 16, scope: !7245)
!7248 = !DILocation(line: 684, column: 9, scope: !7245)
!7249 = !DILocation(line: 686, column: 1, scope: !1115)
!7250 = !DILocation(line: 668, column: 43, scope: !1120)
!7251 = !DILocation(line: 668, column: 59, scope: !1120)
!7252 = !DILocation(line: 668, column: 72, scope: !1120)
!7253 = !DILocation(line: 670, column: 5, scope: !1120)
!7254 = !DILocation(line: 670, column: 14, scope: !7255)
!7255 = !DILexicalBlockFile(scope: !1129, file: !490, discriminator: 1)
!7256 = !DILocation(line: 670, column: 20, scope: !1129)
!7257 = !DILocation(line: 670, column: 14, scope: !1129)
!7258 = !DILocation(line: 670, column: 14, scope: !1130)
!7259 = !DILocation(line: 670, column: 27, scope: !7260)
!7260 = !DILexicalBlockFile(scope: !1128, file: !490, discriminator: 2)
!7261 = !DILocation(line: 670, column: 31, scope: !1128)
!7262 = !DILocation(line: 670, column: 38, scope: !1128)
!7263 = !DILocation(line: 670, column: 57, scope: !1128)
!7264 = !DILocation(line: 670, column: 63, scope: !1128)
!7265 = !DILocation(line: 670, column: 69, scope: !1128)
!7266 = !DILocation(line: 670, column: 79, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !1128, file: !490, line: 670, column: 79)
!7268 = !DILocation(line: 670, column: 79, scope: !1128)
!7269 = !DILocation(line: 670, column: 92, scope: !7270)
!7270 = !DILexicalBlockFile(scope: !7267, file: !490, discriminator: 4)
!7271 = !DILocation(line: 670, column: 85, scope: !7267)
!7272 = !DILocation(line: 670, column: 98, scope: !7273)
!7273 = !DILexicalBlockFile(scope: !1129, file: !490, discriminator: 5)
!7274 = !DILocation(line: 670, column: 98, scope: !7275)
!7275 = !DILexicalBlockFile(scope: !7276, file: !490, discriminator: 7)
!7276 = !DILexicalBlockFile(scope: !1129, file: !490, discriminator: 6)
!7277 = !DILocation(line: 670, column: 98, scope: !1128)
!7278 = !DILocation(line: 670, column: 100, scope: !7279)
!7279 = !DILexicalBlockFile(scope: !7280, file: !490, discriminator: 8)
!7280 = !DILexicalBlockFile(scope: !1130, file: !490, discriminator: 3)
!7281 = !DILocation(line: 671, column: 5, scope: !1120)
!7282 = !DILocation(line: 671, column: 14, scope: !7283)
!7283 = !DILexicalBlockFile(scope: !1133, file: !490, discriminator: 1)
!7284 = !DILocation(line: 671, column: 20, scope: !1133)
!7285 = !{!7228, !1976, i64 72}
!7286 = !DILocation(line: 671, column: 14, scope: !1133)
!7287 = !DILocation(line: 671, column: 14, scope: !1134)
!7288 = !DILocation(line: 671, column: 28, scope: !7289)
!7289 = !DILexicalBlockFile(scope: !1132, file: !490, discriminator: 2)
!7290 = !DILocation(line: 671, column: 32, scope: !1132)
!7291 = !DILocation(line: 671, column: 39, scope: !1132)
!7292 = !DILocation(line: 671, column: 58, scope: !1132)
!7293 = !DILocation(line: 671, column: 64, scope: !1132)
!7294 = !DILocation(line: 671, column: 71, scope: !1132)
!7295 = !DILocation(line: 671, column: 81, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !1132, file: !490, line: 671, column: 81)
!7297 = !DILocation(line: 671, column: 81, scope: !1132)
!7298 = !DILocation(line: 671, column: 94, scope: !7299)
!7299 = !DILexicalBlockFile(scope: !7296, file: !490, discriminator: 4)
!7300 = !DILocation(line: 671, column: 87, scope: !7296)
!7301 = !DILocation(line: 671, column: 100, scope: !7302)
!7302 = !DILexicalBlockFile(scope: !1133, file: !490, discriminator: 5)
!7303 = !DILocation(line: 671, column: 100, scope: !7304)
!7304 = !DILexicalBlockFile(scope: !7305, file: !490, discriminator: 7)
!7305 = !DILexicalBlockFile(scope: !1133, file: !490, discriminator: 6)
!7306 = !DILocation(line: 671, column: 100, scope: !1132)
!7307 = !DILocation(line: 671, column: 102, scope: !7308)
!7308 = !DILexicalBlockFile(scope: !7309, file: !490, discriminator: 8)
!7309 = !DILexicalBlockFile(scope: !1134, file: !490, discriminator: 3)
!7310 = !DILocation(line: 672, column: 5, scope: !1120)
!7311 = !DILocation(line: 672, column: 14, scope: !7312)
!7312 = !DILexicalBlockFile(scope: !1137, file: !490, discriminator: 1)
!7313 = !DILocation(line: 672, column: 20, scope: !1137)
!7314 = !{!7228, !1976, i64 80}
!7315 = !DILocation(line: 672, column: 14, scope: !1137)
!7316 = !DILocation(line: 672, column: 14, scope: !1138)
!7317 = !DILocation(line: 672, column: 28, scope: !7318)
!7318 = !DILexicalBlockFile(scope: !1136, file: !490, discriminator: 2)
!7319 = !DILocation(line: 672, column: 32, scope: !1136)
!7320 = !DILocation(line: 672, column: 39, scope: !1136)
!7321 = !DILocation(line: 672, column: 58, scope: !1136)
!7322 = !DILocation(line: 672, column: 64, scope: !1136)
!7323 = !DILocation(line: 672, column: 71, scope: !1136)
!7324 = !DILocation(line: 672, column: 81, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !1136, file: !490, line: 672, column: 81)
!7326 = !DILocation(line: 672, column: 81, scope: !1136)
!7327 = !DILocation(line: 672, column: 94, scope: !7328)
!7328 = !DILexicalBlockFile(scope: !7325, file: !490, discriminator: 4)
!7329 = !DILocation(line: 672, column: 87, scope: !7325)
!7330 = !DILocation(line: 672, column: 100, scope: !7331)
!7331 = !DILexicalBlockFile(scope: !1137, file: !490, discriminator: 5)
!7332 = !DILocation(line: 672, column: 100, scope: !7333)
!7333 = !DILexicalBlockFile(scope: !7334, file: !490, discriminator: 7)
!7334 = !DILexicalBlockFile(scope: !1137, file: !490, discriminator: 6)
!7335 = !DILocation(line: 672, column: 100, scope: !1136)
!7336 = !DILocation(line: 672, column: 102, scope: !7337)
!7337 = !DILexicalBlockFile(scope: !7338, file: !490, discriminator: 8)
!7338 = !DILexicalBlockFile(scope: !1138, file: !490, discriminator: 3)
!7339 = !DILocation(line: 673, column: 60, scope: !1120)
!7340 = !DILocation(line: 673, column: 35, scope: !1120)
!7341 = !DILocation(line: 673, column: 66, scope: !1120)
!7342 = !DILocation(line: 673, column: 73, scope: !1120)
!7343 = !DILocation(line: 673, column: 12, scope: !1120)
!7344 = !DILocation(line: 673, column: 5, scope: !1120)
!7345 = !DILocation(line: 674, column: 1, scope: !1120)
!7346 = !DILocation(line: 651, column: 40, scope: !1139)
!7347 = !DILocation(line: 653, column: 5, scope: !1139)
!7348 = !DILocation(line: 653, column: 10, scope: !7349)
!7349 = !DILexicalBlockFile(scope: !1145, file: !490, discriminator: 1)
!7350 = !DILocation(line: 653, column: 20, scope: !1145)
!7351 = !DILocation(line: 653, column: 43, scope: !1145)
!7352 = !DILocation(line: 653, column: 49, scope: !1145)
!7353 = !DILocation(line: 653, column: 59, scope: !1149)
!7354 = !DILocation(line: 653, column: 67, scope: !1149)
!7355 = !DILocation(line: 653, column: 59, scope: !1145)
!7356 = !DILocation(line: 653, column: 85, scope: !7357)
!7357 = !DILexicalBlockFile(scope: !1148, file: !490, discriminator: 2)
!7358 = !DILocation(line: 653, column: 91, scope: !1148)
!7359 = !DILocation(line: 653, column: 96, scope: !1148)
!7360 = !DILocation(line: 653, column: 110, scope: !1148)
!7361 = !DILocation(line: 653, column: 115, scope: !7362)
!7362 = !DILexicalBlockFile(scope: !1147, file: !490, discriminator: 4)
!7363 = !DILocation(line: 653, column: 125, scope: !1147)
!7364 = !DILocation(line: 653, column: 155, scope: !1147)
!7365 = !DILocation(line: 653, column: 173, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !1147, file: !490, line: 653, column: 170)
!7367 = !DILocation(line: 653, column: 190, scope: !7366)
!7368 = !DILocation(line: 653, column: 170, scope: !7366)
!7369 = !DILocation(line: 653, column: 200, scope: !7366)
!7370 = !DILocation(line: 653, column: 170, scope: !1147)
!7371 = !DILocation(line: 653, column: 170, scope: !7372)
!7372 = !DILexicalBlockFile(scope: !1147, file: !490, discriminator: 5)
!7373 = !DILocation(line: 653, column: 231, scope: !7374)
!7374 = !DILexicalBlockFile(scope: !7366, file: !490, discriminator: 6)
!7375 = !DILocation(line: 653, column: 249, scope: !7366)
!7376 = !DILocation(line: 653, column: 259, scope: !7366)
!7377 = !DILocation(line: 653, column: 284, scope: !7366)
!7378 = !DILocation(line: 653, column: 215, scope: !7366)
!7379 = !DILocation(line: 653, column: 303, scope: !7380)
!7380 = !DILexicalBlockFile(scope: !1148, file: !490, discriminator: 7)
!7381 = !DILocation(line: 653, column: 303, scope: !1147)
!7382 = !DILocation(line: 653, column: 303, scope: !7383)
!7383 = !DILexicalBlockFile(scope: !1147, file: !490, discriminator: 8)
!7384 = !DILocation(line: 653, column: 316, scope: !7385)
!7385 = !DILexicalBlockFile(scope: !1148, file: !490, discriminator: 9)
!7386 = !DILocation(line: 653, column: 318, scope: !7387)
!7387 = !DILexicalBlockFile(scope: !7388, file: !490, discriminator: 10)
!7388 = !DILexicalBlockFile(scope: !1139, file: !490, discriminator: 3)
!7389 = !DILocation(line: 653, column: 318, scope: !1145)
!7390 = !DILocation(line: 654, column: 5, scope: !1139)
!7391 = !DILocation(line: 654, column: 10, scope: !7392)
!7392 = !DILexicalBlockFile(scope: !1151, file: !490, discriminator: 1)
!7393 = !DILocation(line: 654, column: 20, scope: !1151)
!7394 = !DILocation(line: 654, column: 43, scope: !1151)
!7395 = !DILocation(line: 654, column: 49, scope: !1151)
!7396 = !DILocation(line: 654, column: 60, scope: !1155)
!7397 = !DILocation(line: 654, column: 68, scope: !1155)
!7398 = !DILocation(line: 654, column: 60, scope: !1151)
!7399 = !DILocation(line: 654, column: 86, scope: !7400)
!7400 = !DILexicalBlockFile(scope: !1154, file: !490, discriminator: 2)
!7401 = !DILocation(line: 654, column: 92, scope: !1154)
!7402 = !DILocation(line: 654, column: 98, scope: !1154)
!7403 = !DILocation(line: 654, column: 112, scope: !1154)
!7404 = !DILocation(line: 654, column: 117, scope: !7405)
!7405 = !DILexicalBlockFile(scope: !1153, file: !490, discriminator: 4)
!7406 = !DILocation(line: 654, column: 127, scope: !1153)
!7407 = !DILocation(line: 654, column: 157, scope: !1153)
!7408 = !DILocation(line: 654, column: 175, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !1153, file: !490, line: 654, column: 172)
!7410 = !DILocation(line: 654, column: 192, scope: !7409)
!7411 = !DILocation(line: 654, column: 172, scope: !7409)
!7412 = !DILocation(line: 654, column: 202, scope: !7409)
!7413 = !DILocation(line: 654, column: 172, scope: !1153)
!7414 = !DILocation(line: 654, column: 172, scope: !7415)
!7415 = !DILexicalBlockFile(scope: !1153, file: !490, discriminator: 5)
!7416 = !DILocation(line: 654, column: 233, scope: !7417)
!7417 = !DILexicalBlockFile(scope: !7409, file: !490, discriminator: 6)
!7418 = !DILocation(line: 654, column: 251, scope: !7409)
!7419 = !DILocation(line: 654, column: 261, scope: !7409)
!7420 = !DILocation(line: 654, column: 286, scope: !7409)
!7421 = !DILocation(line: 654, column: 217, scope: !7409)
!7422 = !DILocation(line: 654, column: 305, scope: !7423)
!7423 = !DILexicalBlockFile(scope: !1154, file: !490, discriminator: 7)
!7424 = !DILocation(line: 654, column: 305, scope: !1153)
!7425 = !DILocation(line: 654, column: 305, scope: !7426)
!7426 = !DILexicalBlockFile(scope: !1153, file: !490, discriminator: 8)
!7427 = !DILocation(line: 654, column: 318, scope: !7428)
!7428 = !DILexicalBlockFile(scope: !1154, file: !490, discriminator: 9)
!7429 = !DILocation(line: 654, column: 320, scope: !7387)
!7430 = !DILocation(line: 654, column: 320, scope: !1151)
!7431 = !DILocation(line: 655, column: 5, scope: !1139)
!7432 = !DILocation(line: 655, column: 10, scope: !7433)
!7433 = !DILexicalBlockFile(scope: !1157, file: !490, discriminator: 1)
!7434 = !DILocation(line: 655, column: 20, scope: !1157)
!7435 = !DILocation(line: 655, column: 43, scope: !1157)
!7436 = !DILocation(line: 655, column: 49, scope: !1157)
!7437 = !DILocation(line: 655, column: 60, scope: !1161)
!7438 = !DILocation(line: 655, column: 68, scope: !1161)
!7439 = !DILocation(line: 655, column: 60, scope: !1157)
!7440 = !DILocation(line: 655, column: 86, scope: !7441)
!7441 = !DILexicalBlockFile(scope: !1160, file: !490, discriminator: 2)
!7442 = !DILocation(line: 655, column: 92, scope: !1160)
!7443 = !DILocation(line: 655, column: 98, scope: !1160)
!7444 = !DILocation(line: 655, column: 112, scope: !1160)
!7445 = !DILocation(line: 655, column: 117, scope: !7446)
!7446 = !DILexicalBlockFile(scope: !1159, file: !490, discriminator: 4)
!7447 = !DILocation(line: 655, column: 127, scope: !1159)
!7448 = !DILocation(line: 655, column: 157, scope: !1159)
!7449 = !DILocation(line: 655, column: 175, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !1159, file: !490, line: 655, column: 172)
!7451 = !DILocation(line: 655, column: 192, scope: !7450)
!7452 = !DILocation(line: 655, column: 172, scope: !7450)
!7453 = !DILocation(line: 655, column: 202, scope: !7450)
!7454 = !DILocation(line: 655, column: 172, scope: !1159)
!7455 = !DILocation(line: 655, column: 172, scope: !7456)
!7456 = !DILexicalBlockFile(scope: !1159, file: !490, discriminator: 5)
!7457 = !DILocation(line: 655, column: 233, scope: !7458)
!7458 = !DILexicalBlockFile(scope: !7450, file: !490, discriminator: 6)
!7459 = !DILocation(line: 655, column: 251, scope: !7450)
!7460 = !DILocation(line: 655, column: 261, scope: !7450)
!7461 = !DILocation(line: 655, column: 286, scope: !7450)
!7462 = !DILocation(line: 655, column: 217, scope: !7450)
!7463 = !DILocation(line: 655, column: 305, scope: !7464)
!7464 = !DILexicalBlockFile(scope: !1160, file: !490, discriminator: 7)
!7465 = !DILocation(line: 655, column: 305, scope: !1159)
!7466 = !DILocation(line: 655, column: 305, scope: !7467)
!7467 = !DILexicalBlockFile(scope: !1159, file: !490, discriminator: 8)
!7468 = !DILocation(line: 655, column: 318, scope: !7469)
!7469 = !DILexicalBlockFile(scope: !1160, file: !490, discriminator: 9)
!7470 = !DILocation(line: 655, column: 320, scope: !7387)
!7471 = !DILocation(line: 655, column: 320, scope: !1157)
!7472 = !DILocation(line: 656, column: 57, scope: !1139)
!7473 = !DILocation(line: 656, column: 32, scope: !1139)
!7474 = !DILocation(line: 656, column: 12, scope: !1139)
!7475 = !DILocation(line: 656, column: 5, scope: !1139)
!7476 = !DILocation(line: 612, column: 39, scope: !1162)
!7477 = !DILocation(line: 612, column: 55, scope: !1162)
!7478 = !DILocation(line: 612, column: 71, scope: !1162)
!7479 = !DILocation(line: 614, column: 5, scope: !1162)
!7480 = !DILocation(line: 614, column: 15, scope: !1162)
!7481 = !DILocation(line: 615, column: 5, scope: !1162)
!7482 = !DILocation(line: 615, column: 15, scope: !1162)
!7483 = !DILocation(line: 616, column: 5, scope: !1162)
!7484 = !DILocation(line: 616, column: 15, scope: !1162)
!7485 = !DILocation(line: 631, column: 9, scope: !1178)
!7486 = !DILocation(line: 631, column: 9, scope: !1162)
!7487 = !DILocation(line: 632, column: 39, scope: !1176)
!7488 = !DILocation(line: 632, column: 18, scope: !1176)
!7489 = !DILocation(line: 632, column: 16, scope: !1176)
!7490 = !DILocation(line: 632, column: 58, scope: !1175)
!7491 = !DILocation(line: 632, column: 58, scope: !1176)
!7492 = !DILocation(line: 632, column: 66, scope: !7493)
!7493 = !DILexicalBlockFile(scope: !1174, file: !490, discriminator: 1)
!7494 = !DILocation(line: 632, column: 71, scope: !7495)
!7495 = !DILexicalBlockFile(scope: !1173, file: !490, discriminator: 2)
!7496 = !DILocation(line: 632, column: 81, scope: !1173)
!7497 = !DILocation(line: 632, column: 104, scope: !1173)
!7498 = !DILocation(line: 632, column: 110, scope: !1173)
!7499 = !DILocation(line: 632, column: 121, scope: !1182)
!7500 = !DILocation(line: 632, column: 129, scope: !1182)
!7501 = !DILocation(line: 632, column: 121, scope: !1173)
!7502 = !DILocation(line: 632, column: 147, scope: !7503)
!7503 = !DILexicalBlockFile(scope: !1181, file: !490, discriminator: 3)
!7504 = !DILocation(line: 632, column: 153, scope: !1181)
!7505 = !DILocation(line: 632, column: 159, scope: !1181)
!7506 = !DILocation(line: 632, column: 173, scope: !1181)
!7507 = !DILocation(line: 632, column: 178, scope: !7508)
!7508 = !DILexicalBlockFile(scope: !1180, file: !490, discriminator: 5)
!7509 = !DILocation(line: 632, column: 188, scope: !1180)
!7510 = !DILocation(line: 632, column: 218, scope: !1180)
!7511 = !DILocation(line: 632, column: 236, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !1180, file: !490, line: 632, column: 233)
!7513 = !DILocation(line: 632, column: 253, scope: !7512)
!7514 = !DILocation(line: 632, column: 233, scope: !7512)
!7515 = !DILocation(line: 632, column: 263, scope: !7512)
!7516 = !DILocation(line: 632, column: 233, scope: !1180)
!7517 = !DILocation(line: 632, column: 233, scope: !7518)
!7518 = !DILexicalBlockFile(scope: !1180, file: !490, discriminator: 6)
!7519 = !DILocation(line: 632, column: 294, scope: !7520)
!7520 = !DILexicalBlockFile(scope: !7512, file: !490, discriminator: 7)
!7521 = !DILocation(line: 632, column: 312, scope: !7512)
!7522 = !DILocation(line: 632, column: 322, scope: !7512)
!7523 = !DILocation(line: 632, column: 347, scope: !7512)
!7524 = !DILocation(line: 632, column: 278, scope: !7512)
!7525 = !DILocation(line: 632, column: 366, scope: !7526)
!7526 = !DILexicalBlockFile(scope: !1181, file: !490, discriminator: 8)
!7527 = !DILocation(line: 632, column: 366, scope: !1180)
!7528 = !DILocation(line: 632, column: 366, scope: !7529)
!7529 = !DILexicalBlockFile(scope: !1180, file: !490, discriminator: 9)
!7530 = !DILocation(line: 632, column: 379, scope: !7531)
!7531 = !DILexicalBlockFile(scope: !1181, file: !490, discriminator: 10)
!7532 = !DILocation(line: 632, column: 381, scope: !7533)
!7533 = !DILexicalBlockFile(scope: !7534, file: !490, discriminator: 11)
!7534 = !DILexicalBlockFile(scope: !1174, file: !490, discriminator: 4)
!7535 = !DILocation(line: 632, column: 381, scope: !1173)
!7536 = !DILocation(line: 632, column: 381, scope: !7537)
!7537 = !DILexicalBlockFile(scope: !1173, file: !490, discriminator: 12)
!7538 = !DILocation(line: 632, column: 407, scope: !7539)
!7539 = !DILexicalBlockFile(scope: !1174, file: !490, discriminator: 13)
!7540 = !DILocation(line: 632, column: 394, scope: !1174)
!7541 = !DILocation(line: 632, column: 400, scope: !1174)
!7542 = !DILocation(line: 632, column: 405, scope: !1174)
!7543 = !DILocation(line: 632, column: 429, scope: !1174)
!7544 = !DILocation(line: 632, column: 435, scope: !1174)
!7545 = !DILocation(line: 632, column: 443, scope: !1174)
!7546 = !DILocation(line: 632, column: 452, scope: !1174)
!7547 = !DILocation(line: 632, column: 482, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !1174, file: !490, line: 632, column: 461)
!7549 = !DILocation(line: 632, column: 461, scope: !7548)
!7550 = !DILocation(line: 632, column: 461, scope: !1174)
!7551 = !DILocation(line: 632, column: 497, scope: !7552)
!7552 = !DILexicalBlockFile(scope: !7548, file: !490, discriminator: 14)
!7553 = !DILocation(line: 632, column: 497, scope: !7548)
!7554 = !DILocation(line: 632, column: 508, scope: !7555)
!7555 = !DILexicalBlockFile(scope: !1174, file: !490, discriminator: 15)
!7556 = !DILocation(line: 633, column: 39, scope: !1187)
!7557 = !DILocation(line: 633, column: 18, scope: !1187)
!7558 = !DILocation(line: 633, column: 16, scope: !1187)
!7559 = !DILocation(line: 633, column: 58, scope: !1186)
!7560 = !DILocation(line: 633, column: 58, scope: !1187)
!7561 = !DILocation(line: 633, column: 66, scope: !7562)
!7562 = !DILexicalBlockFile(scope: !1185, file: !490, discriminator: 1)
!7563 = !DILocation(line: 633, column: 71, scope: !7564)
!7564 = !DILexicalBlockFile(scope: !1184, file: !490, discriminator: 2)
!7565 = !DILocation(line: 633, column: 81, scope: !1184)
!7566 = !DILocation(line: 633, column: 104, scope: !1184)
!7567 = !DILocation(line: 633, column: 110, scope: !1184)
!7568 = !DILocation(line: 633, column: 121, scope: !1191)
!7569 = !DILocation(line: 633, column: 129, scope: !1191)
!7570 = !DILocation(line: 633, column: 121, scope: !1184)
!7571 = !DILocation(line: 633, column: 147, scope: !7572)
!7572 = !DILexicalBlockFile(scope: !1190, file: !490, discriminator: 3)
!7573 = !DILocation(line: 633, column: 153, scope: !1190)
!7574 = !DILocation(line: 633, column: 159, scope: !1190)
!7575 = !DILocation(line: 633, column: 173, scope: !1190)
!7576 = !DILocation(line: 633, column: 178, scope: !7577)
!7577 = !DILexicalBlockFile(scope: !1189, file: !490, discriminator: 5)
!7578 = !DILocation(line: 633, column: 188, scope: !1189)
!7579 = !DILocation(line: 633, column: 218, scope: !1189)
!7580 = !DILocation(line: 633, column: 236, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !1189, file: !490, line: 633, column: 233)
!7582 = !DILocation(line: 633, column: 253, scope: !7581)
!7583 = !DILocation(line: 633, column: 233, scope: !7581)
!7584 = !DILocation(line: 633, column: 263, scope: !7581)
!7585 = !DILocation(line: 633, column: 233, scope: !1189)
!7586 = !DILocation(line: 633, column: 233, scope: !7587)
!7587 = !DILexicalBlockFile(scope: !1189, file: !490, discriminator: 6)
!7588 = !DILocation(line: 633, column: 294, scope: !7589)
!7589 = !DILexicalBlockFile(scope: !7581, file: !490, discriminator: 7)
!7590 = !DILocation(line: 633, column: 312, scope: !7581)
!7591 = !DILocation(line: 633, column: 322, scope: !7581)
!7592 = !DILocation(line: 633, column: 347, scope: !7581)
!7593 = !DILocation(line: 633, column: 278, scope: !7581)
!7594 = !DILocation(line: 633, column: 366, scope: !7595)
!7595 = !DILexicalBlockFile(scope: !1190, file: !490, discriminator: 8)
!7596 = !DILocation(line: 633, column: 366, scope: !1189)
!7597 = !DILocation(line: 633, column: 366, scope: !7598)
!7598 = !DILexicalBlockFile(scope: !1189, file: !490, discriminator: 9)
!7599 = !DILocation(line: 633, column: 379, scope: !7600)
!7600 = !DILexicalBlockFile(scope: !1190, file: !490, discriminator: 10)
!7601 = !DILocation(line: 633, column: 381, scope: !7602)
!7602 = !DILexicalBlockFile(scope: !7603, file: !490, discriminator: 11)
!7603 = !DILexicalBlockFile(scope: !1185, file: !490, discriminator: 4)
!7604 = !DILocation(line: 633, column: 381, scope: !1184)
!7605 = !DILocation(line: 633, column: 381, scope: !7606)
!7606 = !DILexicalBlockFile(scope: !1184, file: !490, discriminator: 12)
!7607 = !DILocation(line: 633, column: 407, scope: !7608)
!7608 = !DILexicalBlockFile(scope: !1185, file: !490, discriminator: 13)
!7609 = !DILocation(line: 633, column: 394, scope: !1185)
!7610 = !DILocation(line: 633, column: 400, scope: !1185)
!7611 = !DILocation(line: 633, column: 405, scope: !1185)
!7612 = !DILocation(line: 633, column: 429, scope: !1185)
!7613 = !DILocation(line: 633, column: 435, scope: !1185)
!7614 = !DILocation(line: 633, column: 443, scope: !1185)
!7615 = !DILocation(line: 633, column: 452, scope: !1185)
!7616 = !DILocation(line: 633, column: 482, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !1185, file: !490, line: 633, column: 461)
!7618 = !DILocation(line: 633, column: 461, scope: !7617)
!7619 = !DILocation(line: 633, column: 461, scope: !1185)
!7620 = !DILocation(line: 633, column: 497, scope: !7621)
!7621 = !DILexicalBlockFile(scope: !7617, file: !490, discriminator: 14)
!7622 = !DILocation(line: 633, column: 497, scope: !7617)
!7623 = !DILocation(line: 633, column: 508, scope: !7624)
!7624 = !DILexicalBlockFile(scope: !1185, file: !490, discriminator: 15)
!7625 = !DILocation(line: 634, column: 5, scope: !1177)
!7626 = !DILocation(line: 636, column: 53, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !1162, file: !490, line: 636, column: 9)
!7628 = !DILocation(line: 636, column: 28, scope: !7627)
!7629 = !DILocation(line: 636, column: 59, scope: !7627)
!7630 = !DILocation(line: 636, column: 65, scope: !7627)
!7631 = !DILocation(line: 636, column: 9, scope: !7627)
!7632 = !DILocation(line: 636, column: 71, scope: !7627)
!7633 = !DILocation(line: 636, column: 9, scope: !1162)
!7634 = !DILocation(line: 637, column: 9, scope: !7627)
!7635 = !DILocation(line: 638, column: 26, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !1162, file: !490, line: 638, column: 9)
!7637 = !DILocation(line: 638, column: 11, scope: !7636)
!7638 = !DILocation(line: 638, column: 34, scope: !7636)
!7639 = !DILocation(line: 638, column: 43, scope: !7636)
!7640 = !DILocation(line: 638, column: 9, scope: !1162)
!7641 = !DILocation(line: 639, column: 9, scope: !7636)
!7642 = !DILocation(line: 640, column: 28, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !1162, file: !490, line: 640, column: 9)
!7644 = !DILocation(line: 640, column: 10, scope: !7643)
!7645 = !DILocation(line: 640, column: 9, scope: !1162)
!7646 = !DILocation(line: 641, column: 9, scope: !7643)
!7647 = !DILocation(line: 643, column: 5, scope: !1162)
!7648 = !DILocation(line: 643, column: 10, scope: !7649)
!7649 = !DILexicalBlockFile(scope: !1193, file: !490, discriminator: 1)
!7650 = !DILocation(line: 643, column: 20, scope: !1193)
!7651 = !DILocation(line: 643, column: 43, scope: !1193)
!7652 = !DILocation(line: 643, column: 49, scope: !1193)
!7653 = !DILocation(line: 643, column: 59, scope: !1197)
!7654 = !DILocation(line: 643, column: 67, scope: !1197)
!7655 = !DILocation(line: 643, column: 59, scope: !1193)
!7656 = !DILocation(line: 643, column: 85, scope: !7657)
!7657 = !DILexicalBlockFile(scope: !1196, file: !490, discriminator: 2)
!7658 = !DILocation(line: 643, column: 91, scope: !1196)
!7659 = !DILocation(line: 643, column: 96, scope: !1196)
!7660 = !DILocation(line: 643, column: 110, scope: !1196)
!7661 = !DILocation(line: 643, column: 115, scope: !7662)
!7662 = !DILexicalBlockFile(scope: !1195, file: !490, discriminator: 4)
!7663 = !DILocation(line: 643, column: 125, scope: !1195)
!7664 = !DILocation(line: 643, column: 155, scope: !1195)
!7665 = !DILocation(line: 643, column: 173, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !1195, file: !490, line: 643, column: 170)
!7667 = !DILocation(line: 643, column: 190, scope: !7666)
!7668 = !DILocation(line: 643, column: 170, scope: !7666)
!7669 = !DILocation(line: 643, column: 200, scope: !7666)
!7670 = !DILocation(line: 643, column: 170, scope: !1195)
!7671 = !DILocation(line: 643, column: 170, scope: !7672)
!7672 = !DILexicalBlockFile(scope: !1195, file: !490, discriminator: 5)
!7673 = !DILocation(line: 643, column: 231, scope: !7674)
!7674 = !DILexicalBlockFile(scope: !7666, file: !490, discriminator: 6)
!7675 = !DILocation(line: 643, column: 249, scope: !7666)
!7676 = !DILocation(line: 643, column: 259, scope: !7666)
!7677 = !DILocation(line: 643, column: 284, scope: !7666)
!7678 = !DILocation(line: 643, column: 215, scope: !7666)
!7679 = !DILocation(line: 643, column: 303, scope: !7680)
!7680 = !DILexicalBlockFile(scope: !1196, file: !490, discriminator: 7)
!7681 = !DILocation(line: 643, column: 303, scope: !1195)
!7682 = !DILocation(line: 643, column: 303, scope: !7683)
!7683 = !DILexicalBlockFile(scope: !1195, file: !490, discriminator: 8)
!7684 = !DILocation(line: 643, column: 316, scope: !7685)
!7685 = !DILexicalBlockFile(scope: !1196, file: !490, discriminator: 9)
!7686 = !DILocation(line: 643, column: 318, scope: !7687)
!7687 = !DILexicalBlockFile(scope: !7688, file: !490, discriminator: 10)
!7688 = !DILexicalBlockFile(scope: !1162, file: !490, discriminator: 3)
!7689 = !DILocation(line: 643, column: 318, scope: !1193)
!7690 = !DILocation(line: 643, column: 318, scope: !7691)
!7691 = !DILexicalBlockFile(scope: !1193, file: !490, discriminator: 11)
!7692 = !DILocation(line: 644, column: 17, scope: !1162)
!7693 = !DILocation(line: 644, column: 5, scope: !1162)
!7694 = !DILocation(line: 644, column: 11, scope: !1162)
!7695 = !DILocation(line: 644, column: 15, scope: !1162)
!7696 = !DILocation(line: 645, column: 21, scope: !1162)
!7697 = !DILocation(line: 645, column: 27, scope: !1162)
!7698 = !DILocation(line: 645, column: 34, scope: !1162)
!7699 = !DILocation(line: 645, column: 43, scope: !1162)
!7700 = !DILocation(line: 647, column: 5, scope: !1162)
!7701 = !DILocation(line: 648, column: 1, scope: !1162)
!7702 = !DILocation(line: 1008, column: 34, scope: !1198)
!7703 = !DILocation(line: 1010, column: 5, scope: !1198)
!7704 = !DILocation(line: 1010, column: 10, scope: !7705)
!7705 = !DILexicalBlockFile(scope: !1204, file: !490, discriminator: 1)
!7706 = !DILocation(line: 1010, column: 21, scope: !1204)
!7707 = !DILocation(line: 1010, column: 40, scope: !1204)
!7708 = !DILocation(line: 1010, column: 26, scope: !1204)
!7709 = !DILocation(line: 1010, column: 45, scope: !1204)
!7710 = !DILocation(line: 1010, column: 64, scope: !1204)
!7711 = !DILocation(line: 1010, column: 89, scope: !7712)
!7712 = !DILexicalBlockFile(scope: !7713, file: !490, discriminator: 2)
!7713 = distinct !DILexicalBlock(scope: !1204, file: !490, line: 1010, column: 67)
!7714 = !DILocation(line: 1010, column: 93, scope: !7713)
!7715 = !DILocation(line: 1010, column: 96, scope: !7713)
!7716 = !DILocation(line: 1010, column: 104, scope: !7713)
!7717 = !DILocation(line: 1010, column: 131, scope: !7713)
!7718 = !DILocation(line: 1010, column: 70, scope: !7713)
!7719 = !DILocation(line: 1010, column: 74, scope: !7713)
!7720 = !DILocation(line: 1010, column: 77, scope: !7713)
!7721 = !DILocation(line: 1010, column: 85, scope: !7713)
!7722 = !DILocation(line: 1010, column: 160, scope: !7713)
!7723 = !DILocation(line: 1010, column: 160, scope: !7724)
!7724 = !DILexicalBlockFile(scope: !7713, file: !490, discriminator: 3)
!7725 = !DILocation(line: 1010, column: 201, scope: !7726)
!7726 = !DILexicalBlockFile(scope: !1204, file: !490, discriminator: 4)
!7727 = !DILocation(line: 1010, column: 204, scope: !1204)
!7728 = !DILocation(line: 1010, column: 207, scope: !1204)
!7729 = !DILocation(line: 1010, column: 173, scope: !1204)
!7730 = !DILocation(line: 1010, column: 176, scope: !1204)
!7731 = !DILocation(line: 1010, column: 179, scope: !1204)
!7732 = !DILocation(line: 1010, column: 188, scope: !1204)
!7733 = !DILocation(line: 1010, column: 191, scope: !1204)
!7734 = !DILocation(line: 1010, column: 199, scope: !1204)
!7735 = !DILocation(line: 1010, column: 244, scope: !1204)
!7736 = !DILocation(line: 1010, column: 247, scope: !1204)
!7737 = !DILocation(line: 1010, column: 250, scope: !1204)
!7738 = !DILocation(line: 1010, column: 216, scope: !1204)
!7739 = !DILocation(line: 1010, column: 219, scope: !1204)
!7740 = !DILocation(line: 1010, column: 222, scope: !1204)
!7741 = !DILocation(line: 1010, column: 231, scope: !1204)
!7742 = !DILocation(line: 1010, column: 234, scope: !1204)
!7743 = !DILocation(line: 1010, column: 242, scope: !1204)
!7744 = !DILocation(line: 1010, column: 259, scope: !1204)
!7745 = !DILocation(line: 1010, column: 262, scope: !1204)
!7746 = !DILocation(line: 1010, column: 265, scope: !1204)
!7747 = !DILocation(line: 1010, column: 273, scope: !1204)
!7748 = !DILocation(line: 1010, column: 287, scope: !1198)
!7749 = !DILocation(line: 1010, column: 287, scope: !1204)
!7750 = !DILocation(line: 1011, column: 19, scope: !1198)
!7751 = !DILocation(line: 1011, column: 5, scope: !1198)
!7752 = !DILocation(line: 1012, column: 19, scope: !1198)
!7753 = !DILocation(line: 1012, column: 7, scope: !1198)
!7754 = !DILocation(line: 1012, column: 27, scope: !1198)
!7755 = !DILocation(line: 1012, column: 37, scope: !1198)
!7756 = !DILocation(line: 1012, column: 57, scope: !1198)
!7757 = !DILocation(line: 1012, column: 45, scope: !1198)
!7758 = !DILocation(line: 1012, column: 5, scope: !1198)
!7759 = !DILocation(line: 1013, column: 1, scope: !1198)
!7760 = !DILocation(line: 1030, column: 30, scope: !1205)
!7761 = !DILocation(line: 1054, column: 9, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !1205, file: !490, line: 1054, column: 9)
!7763 = !DILocation(line: 1054, column: 15, scope: !7762)
!7764 = !{!7765, !1976, i64 80}
!7765 = !{!"", !1993, i64 0, !1976, i64 16, !1976, i64 24, !1976, i64 32, !1976, i64 40, !1976, i64 48, !1977, i64 56, !1976, i64 64, !1976, i64 72, !1976, i64 80, !1976, i64 88, !1994, i64 96}
!7766 = !DILocation(line: 1054, column: 9, scope: !1205)
!7767 = !DILocation(line: 1055, column: 13, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !490, line: 1055, column: 13)
!7769 = distinct !DILexicalBlock(scope: !7762, file: !490, line: 1054, column: 25)
!7770 = !DILocation(line: 1055, column: 19, scope: !7768)
!7771 = !{!7765, !1976, i64 88}
!7772 = !DILocation(line: 1055, column: 13, scope: !7769)
!7773 = !DILocation(line: 1057, column: 43, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7768, file: !490, line: 1055, column: 30)
!7775 = !DILocation(line: 1057, column: 49, scope: !7774)
!7776 = !{!7765, !1976, i64 64}
!7777 = !DILocation(line: 1057, column: 42, scope: !7774)
!7778 = !DILocation(line: 1057, column: 59, scope: !7779)
!7779 = !DILexicalBlockFile(scope: !7774, file: !490, discriminator: 1)
!7780 = !DILocation(line: 1057, column: 65, scope: !7774)
!7781 = !DILocation(line: 1057, column: 42, scope: !7782)
!7782 = !DILexicalBlockFile(scope: !7774, file: !490, discriminator: 2)
!7783 = !DILocation(line: 1058, column: 43, scope: !7774)
!7784 = !DILocation(line: 1058, column: 49, scope: !7774)
!7785 = !{!7765, !1976, i64 72}
!7786 = !DILocation(line: 1058, column: 42, scope: !7774)
!7787 = !DILocation(line: 1058, column: 60, scope: !7779)
!7788 = !DILocation(line: 1058, column: 66, scope: !7774)
!7789 = !DILocation(line: 1058, column: 42, scope: !7782)
!7790 = !DILocation(line: 1059, column: 41, scope: !7774)
!7791 = !DILocation(line: 1059, column: 47, scope: !7774)
!7792 = !DILocation(line: 1060, column: 41, scope: !7774)
!7793 = !DILocation(line: 1060, column: 47, scope: !7774)
!7794 = !DILocation(line: 1056, column: 20, scope: !7774)
!7795 = !DILocation(line: 1056, column: 13, scope: !7774)
!7796 = !DILocation(line: 1063, column: 43, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7768, file: !490, line: 1061, column: 16)
!7798 = !DILocation(line: 1063, column: 49, scope: !7797)
!7799 = !DILocation(line: 1063, column: 42, scope: !7797)
!7800 = !DILocation(line: 1063, column: 59, scope: !7801)
!7801 = !DILexicalBlockFile(scope: !7797, file: !490, discriminator: 1)
!7802 = !DILocation(line: 1063, column: 65, scope: !7797)
!7803 = !DILocation(line: 1063, column: 42, scope: !7804)
!7804 = !DILexicalBlockFile(scope: !7797, file: !490, discriminator: 2)
!7805 = !DILocation(line: 1064, column: 43, scope: !7797)
!7806 = !DILocation(line: 1064, column: 49, scope: !7797)
!7807 = !DILocation(line: 1064, column: 42, scope: !7797)
!7808 = !DILocation(line: 1064, column: 60, scope: !7801)
!7809 = !DILocation(line: 1064, column: 66, scope: !7797)
!7810 = !DILocation(line: 1064, column: 42, scope: !7804)
!7811 = !DILocation(line: 1065, column: 41, scope: !7797)
!7812 = !DILocation(line: 1065, column: 47, scope: !7797)
!7813 = !DILocation(line: 1062, column: 20, scope: !7797)
!7814 = !DILocation(line: 1062, column: 13, scope: !7797)
!7815 = !DILocation(line: 1068, column: 9, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !1205, file: !490, line: 1068, column: 9)
!7817 = !DILocation(line: 1068, column: 15, scope: !7816)
!7818 = !DILocation(line: 1068, column: 23, scope: !7816)
!7819 = !DILocation(line: 1068, column: 26, scope: !7820)
!7820 = !DILexicalBlockFile(scope: !7816, file: !490, discriminator: 1)
!7821 = !DILocation(line: 1068, column: 32, scope: !7816)
!7822 = !DILocation(line: 1068, column: 26, scope: !7816)
!7823 = !DILocation(line: 1068, column: 9, scope: !1205)
!7824 = !DILocation(line: 1070, column: 37, scope: !7816)
!7825 = !DILocation(line: 1070, column: 43, scope: !7816)
!7826 = !DILocation(line: 1070, column: 53, scope: !7820)
!7827 = !DILocation(line: 1070, column: 59, scope: !7816)
!7828 = !DILocation(line: 1070, column: 37, scope: !7829)
!7829 = !DILexicalBlockFile(scope: !7816, file: !490, discriminator: 2)
!7830 = !DILocation(line: 1071, column: 37, scope: !7816)
!7831 = !DILocation(line: 1071, column: 43, scope: !7816)
!7832 = !DILocation(line: 1071, column: 54, scope: !7820)
!7833 = !DILocation(line: 1071, column: 60, scope: !7816)
!7834 = !DILocation(line: 1071, column: 37, scope: !7829)
!7835 = !DILocation(line: 1069, column: 16, scope: !7816)
!7836 = !DILocation(line: 1069, column: 9, scope: !7816)
!7837 = !DILocation(line: 1072, column: 55, scope: !1205)
!7838 = !DILocation(line: 1072, column: 30, scope: !1205)
!7839 = !DILocation(line: 1072, column: 12, scope: !1205)
!7840 = !DILocation(line: 1072, column: 5, scope: !1205)
!7841 = !DILocation(line: 1073, column: 1, scope: !1205)
!7842 = !DILocation(line: 1016, column: 35, scope: !1210)
!7843 = !DILocation(line: 1016, column: 51, scope: !1210)
!7844 = !DILocation(line: 1017, column: 15, scope: !1210)
!7845 = !DILocation(line: 1019, column: 5, scope: !1210)
!7846 = !DILocation(line: 1019, column: 14, scope: !7847)
!7847 = !DILexicalBlockFile(scope: !1219, file: !490, discriminator: 1)
!7848 = !DILocation(line: 1019, column: 20, scope: !1219)
!7849 = !DILocation(line: 1019, column: 14, scope: !1219)
!7850 = !DILocation(line: 1019, column: 14, scope: !1220)
!7851 = !DILocation(line: 1019, column: 31, scope: !7852)
!7852 = !DILexicalBlockFile(scope: !1218, file: !490, discriminator: 2)
!7853 = !DILocation(line: 1019, column: 35, scope: !1218)
!7854 = !DILocation(line: 1019, column: 42, scope: !1218)
!7855 = !DILocation(line: 1019, column: 61, scope: !1218)
!7856 = !DILocation(line: 1019, column: 67, scope: !1218)
!7857 = !DILocation(line: 1019, column: 77, scope: !1218)
!7858 = !DILocation(line: 1019, column: 87, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !1218, file: !490, line: 1019, column: 87)
!7860 = !DILocation(line: 1019, column: 87, scope: !1218)
!7861 = !DILocation(line: 1019, column: 100, scope: !7862)
!7862 = !DILexicalBlockFile(scope: !7859, file: !490, discriminator: 4)
!7863 = !DILocation(line: 1019, column: 93, scope: !7859)
!7864 = !DILocation(line: 1019, column: 106, scope: !7865)
!7865 = !DILexicalBlockFile(scope: !1219, file: !490, discriminator: 5)
!7866 = !DILocation(line: 1019, column: 106, scope: !7867)
!7867 = !DILexicalBlockFile(scope: !7868, file: !490, discriminator: 7)
!7868 = !DILexicalBlockFile(scope: !1219, file: !490, discriminator: 6)
!7869 = !DILocation(line: 1019, column: 106, scope: !1218)
!7870 = !DILocation(line: 1019, column: 108, scope: !7871)
!7871 = !DILexicalBlockFile(scope: !7872, file: !490, discriminator: 8)
!7872 = !DILexicalBlockFile(scope: !1220, file: !490, discriminator: 3)
!7873 = !DILocation(line: 1020, column: 5, scope: !1210)
!7874 = !DILocation(line: 1020, column: 14, scope: !7875)
!7875 = !DILexicalBlockFile(scope: !1223, file: !490, discriminator: 1)
!7876 = !DILocation(line: 1020, column: 20, scope: !1223)
!7877 = !DILocation(line: 1020, column: 14, scope: !1223)
!7878 = !DILocation(line: 1020, column: 14, scope: !1224)
!7879 = !DILocation(line: 1020, column: 32, scope: !7880)
!7880 = !DILexicalBlockFile(scope: !1222, file: !490, discriminator: 2)
!7881 = !DILocation(line: 1020, column: 36, scope: !1222)
!7882 = !DILocation(line: 1020, column: 43, scope: !1222)
!7883 = !DILocation(line: 1020, column: 62, scope: !1222)
!7884 = !DILocation(line: 1020, column: 68, scope: !1222)
!7885 = !DILocation(line: 1020, column: 79, scope: !1222)
!7886 = !DILocation(line: 1020, column: 89, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !1222, file: !490, line: 1020, column: 89)
!7888 = !DILocation(line: 1020, column: 89, scope: !1222)
!7889 = !DILocation(line: 1020, column: 102, scope: !7890)
!7890 = !DILexicalBlockFile(scope: !7887, file: !490, discriminator: 4)
!7891 = !DILocation(line: 1020, column: 95, scope: !7887)
!7892 = !DILocation(line: 1020, column: 108, scope: !7893)
!7893 = !DILexicalBlockFile(scope: !1223, file: !490, discriminator: 5)
!7894 = !DILocation(line: 1020, column: 108, scope: !7895)
!7895 = !DILexicalBlockFile(scope: !7896, file: !490, discriminator: 7)
!7896 = !DILexicalBlockFile(scope: !1223, file: !490, discriminator: 6)
!7897 = !DILocation(line: 1020, column: 108, scope: !1222)
!7898 = !DILocation(line: 1020, column: 110, scope: !7899)
!7899 = !DILexicalBlockFile(scope: !7900, file: !490, discriminator: 8)
!7900 = !DILexicalBlockFile(scope: !1224, file: !490, discriminator: 3)
!7901 = !DILocation(line: 1021, column: 5, scope: !1210)
!7902 = !DILocation(line: 1021, column: 14, scope: !7903)
!7903 = !DILexicalBlockFile(scope: !1227, file: !490, discriminator: 1)
!7904 = !DILocation(line: 1021, column: 20, scope: !1227)
!7905 = !DILocation(line: 1021, column: 14, scope: !1227)
!7906 = !DILocation(line: 1021, column: 14, scope: !1228)
!7907 = !DILocation(line: 1021, column: 32, scope: !7908)
!7908 = !DILexicalBlockFile(scope: !1226, file: !490, discriminator: 2)
!7909 = !DILocation(line: 1021, column: 36, scope: !1226)
!7910 = !DILocation(line: 1021, column: 43, scope: !1226)
!7911 = !DILocation(line: 1021, column: 62, scope: !1226)
!7912 = !DILocation(line: 1021, column: 68, scope: !1226)
!7913 = !DILocation(line: 1021, column: 79, scope: !1226)
!7914 = !DILocation(line: 1021, column: 89, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !1226, file: !490, line: 1021, column: 89)
!7916 = !DILocation(line: 1021, column: 89, scope: !1226)
!7917 = !DILocation(line: 1021, column: 102, scope: !7918)
!7918 = !DILexicalBlockFile(scope: !7915, file: !490, discriminator: 4)
!7919 = !DILocation(line: 1021, column: 95, scope: !7915)
!7920 = !DILocation(line: 1021, column: 108, scope: !7921)
!7921 = !DILexicalBlockFile(scope: !1227, file: !490, discriminator: 5)
!7922 = !DILocation(line: 1021, column: 108, scope: !7923)
!7923 = !DILexicalBlockFile(scope: !7924, file: !490, discriminator: 7)
!7924 = !DILexicalBlockFile(scope: !1227, file: !490, discriminator: 6)
!7925 = !DILocation(line: 1021, column: 108, scope: !1226)
!7926 = !DILocation(line: 1021, column: 110, scope: !7927)
!7927 = !DILexicalBlockFile(scope: !7928, file: !490, discriminator: 8)
!7928 = !DILexicalBlockFile(scope: !1228, file: !490, discriminator: 3)
!7929 = !DILocation(line: 1022, column: 5, scope: !1210)
!7930 = !DILocation(line: 1022, column: 14, scope: !7931)
!7931 = !DILexicalBlockFile(scope: !1231, file: !490, discriminator: 1)
!7932 = !DILocation(line: 1022, column: 20, scope: !1231)
!7933 = !DILocation(line: 1022, column: 14, scope: !1231)
!7934 = !DILocation(line: 1022, column: 14, scope: !1232)
!7935 = !DILocation(line: 1022, column: 33, scope: !7936)
!7936 = !DILexicalBlockFile(scope: !1230, file: !490, discriminator: 2)
!7937 = !DILocation(line: 1022, column: 37, scope: !1230)
!7938 = !DILocation(line: 1022, column: 44, scope: !1230)
!7939 = !DILocation(line: 1022, column: 63, scope: !1230)
!7940 = !DILocation(line: 1022, column: 69, scope: !1230)
!7941 = !DILocation(line: 1022, column: 81, scope: !1230)
!7942 = !DILocation(line: 1022, column: 91, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !1230, file: !490, line: 1022, column: 91)
!7944 = !DILocation(line: 1022, column: 91, scope: !1230)
!7945 = !DILocation(line: 1022, column: 104, scope: !7946)
!7946 = !DILexicalBlockFile(scope: !7943, file: !490, discriminator: 4)
!7947 = !DILocation(line: 1022, column: 97, scope: !7943)
!7948 = !DILocation(line: 1022, column: 110, scope: !7949)
!7949 = !DILexicalBlockFile(scope: !1231, file: !490, discriminator: 5)
!7950 = !DILocation(line: 1022, column: 110, scope: !7951)
!7951 = !DILexicalBlockFile(scope: !7952, file: !490, discriminator: 7)
!7952 = !DILexicalBlockFile(scope: !1231, file: !490, discriminator: 6)
!7953 = !DILocation(line: 1022, column: 110, scope: !1230)
!7954 = !DILocation(line: 1022, column: 112, scope: !7955)
!7955 = !DILexicalBlockFile(scope: !7956, file: !490, discriminator: 8)
!7956 = !DILexicalBlockFile(scope: !1232, file: !490, discriminator: 3)
!7957 = !DILocation(line: 1026, column: 60, scope: !1210)
!7958 = !DILocation(line: 1026, column: 35, scope: !1210)
!7959 = !DILocation(line: 1026, column: 66, scope: !1210)
!7960 = !DILocation(line: 1026, column: 73, scope: !1210)
!7961 = !DILocation(line: 1026, column: 12, scope: !1210)
!7962 = !DILocation(line: 1026, column: 5, scope: !1210)
!7963 = !DILocation(line: 1027, column: 1, scope: !1210)
!7964 = !DILocation(line: 995, column: 32, scope: !1233)
!7965 = !DILocation(line: 997, column: 5, scope: !1233)
!7966 = !DILocation(line: 997, column: 10, scope: !7967)
!7967 = !DILexicalBlockFile(scope: !1239, file: !490, discriminator: 1)
!7968 = !DILocation(line: 997, column: 20, scope: !1239)
!7969 = !DILocation(line: 997, column: 43, scope: !1239)
!7970 = !DILocation(line: 997, column: 49, scope: !1239)
!7971 = !DILocation(line: 997, column: 63, scope: !1243)
!7972 = !DILocation(line: 997, column: 71, scope: !1243)
!7973 = !DILocation(line: 997, column: 63, scope: !1239)
!7974 = !DILocation(line: 997, column: 89, scope: !7975)
!7975 = !DILexicalBlockFile(scope: !1242, file: !490, discriminator: 2)
!7976 = !DILocation(line: 997, column: 95, scope: !1242)
!7977 = !DILocation(line: 997, column: 104, scope: !1242)
!7978 = !DILocation(line: 997, column: 118, scope: !1242)
!7979 = !DILocation(line: 997, column: 123, scope: !7980)
!7980 = !DILexicalBlockFile(scope: !1241, file: !490, discriminator: 4)
!7981 = !DILocation(line: 997, column: 133, scope: !1241)
!7982 = !DILocation(line: 997, column: 163, scope: !1241)
!7983 = !DILocation(line: 997, column: 181, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !1241, file: !490, line: 997, column: 178)
!7985 = !DILocation(line: 997, column: 198, scope: !7984)
!7986 = !DILocation(line: 997, column: 178, scope: !7984)
!7987 = !DILocation(line: 997, column: 208, scope: !7984)
!7988 = !DILocation(line: 997, column: 178, scope: !1241)
!7989 = !DILocation(line: 997, column: 178, scope: !7990)
!7990 = !DILexicalBlockFile(scope: !1241, file: !490, discriminator: 5)
!7991 = !DILocation(line: 997, column: 239, scope: !7992)
!7992 = !DILexicalBlockFile(scope: !7984, file: !490, discriminator: 6)
!7993 = !DILocation(line: 997, column: 257, scope: !7984)
!7994 = !DILocation(line: 997, column: 267, scope: !7984)
!7995 = !DILocation(line: 997, column: 292, scope: !7984)
!7996 = !DILocation(line: 997, column: 223, scope: !7984)
!7997 = !DILocation(line: 997, column: 311, scope: !7998)
!7998 = !DILexicalBlockFile(scope: !1242, file: !490, discriminator: 7)
!7999 = !DILocation(line: 997, column: 311, scope: !1241)
!8000 = !DILocation(line: 997, column: 311, scope: !8001)
!8001 = !DILexicalBlockFile(scope: !1241, file: !490, discriminator: 8)
!8002 = !DILocation(line: 997, column: 324, scope: !8003)
!8003 = !DILexicalBlockFile(scope: !1242, file: !490, discriminator: 9)
!8004 = !DILocation(line: 997, column: 326, scope: !8005)
!8005 = !DILexicalBlockFile(scope: !8006, file: !490, discriminator: 10)
!8006 = !DILexicalBlockFile(scope: !1233, file: !490, discriminator: 3)
!8007 = !DILocation(line: 997, column: 326, scope: !1239)
!8008 = !DILocation(line: 998, column: 5, scope: !1233)
!8009 = !DILocation(line: 998, column: 10, scope: !8010)
!8010 = !DILexicalBlockFile(scope: !1245, file: !490, discriminator: 1)
!8011 = !DILocation(line: 998, column: 20, scope: !1245)
!8012 = !DILocation(line: 998, column: 43, scope: !1245)
!8013 = !DILocation(line: 998, column: 49, scope: !1245)
!8014 = !DILocation(line: 998, column: 64, scope: !1249)
!8015 = !DILocation(line: 998, column: 72, scope: !1249)
!8016 = !DILocation(line: 998, column: 64, scope: !1245)
!8017 = !DILocation(line: 998, column: 90, scope: !8018)
!8018 = !DILexicalBlockFile(scope: !1248, file: !490, discriminator: 2)
!8019 = !DILocation(line: 998, column: 96, scope: !1248)
!8020 = !DILocation(line: 998, column: 106, scope: !1248)
!8021 = !DILocation(line: 998, column: 120, scope: !1248)
!8022 = !DILocation(line: 998, column: 125, scope: !8023)
!8023 = !DILexicalBlockFile(scope: !1247, file: !490, discriminator: 4)
!8024 = !DILocation(line: 998, column: 135, scope: !1247)
!8025 = !DILocation(line: 998, column: 165, scope: !1247)
!8026 = !DILocation(line: 998, column: 183, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !1247, file: !490, line: 998, column: 180)
!8028 = !DILocation(line: 998, column: 200, scope: !8027)
!8029 = !DILocation(line: 998, column: 180, scope: !8027)
!8030 = !DILocation(line: 998, column: 210, scope: !8027)
!8031 = !DILocation(line: 998, column: 180, scope: !1247)
!8032 = !DILocation(line: 998, column: 180, scope: !8033)
!8033 = !DILexicalBlockFile(scope: !1247, file: !490, discriminator: 5)
!8034 = !DILocation(line: 998, column: 241, scope: !8035)
!8035 = !DILexicalBlockFile(scope: !8027, file: !490, discriminator: 6)
!8036 = !DILocation(line: 998, column: 259, scope: !8027)
!8037 = !DILocation(line: 998, column: 269, scope: !8027)
!8038 = !DILocation(line: 998, column: 294, scope: !8027)
!8039 = !DILocation(line: 998, column: 225, scope: !8027)
!8040 = !DILocation(line: 998, column: 313, scope: !8041)
!8041 = !DILexicalBlockFile(scope: !1248, file: !490, discriminator: 7)
!8042 = !DILocation(line: 998, column: 313, scope: !1247)
!8043 = !DILocation(line: 998, column: 313, scope: !8044)
!8044 = !DILexicalBlockFile(scope: !1247, file: !490, discriminator: 8)
!8045 = !DILocation(line: 998, column: 326, scope: !8046)
!8046 = !DILexicalBlockFile(scope: !1248, file: !490, discriminator: 9)
!8047 = !DILocation(line: 998, column: 328, scope: !8005)
!8048 = !DILocation(line: 998, column: 328, scope: !1245)
!8049 = !DILocation(line: 999, column: 5, scope: !1233)
!8050 = !DILocation(line: 999, column: 10, scope: !8051)
!8051 = !DILexicalBlockFile(scope: !1251, file: !490, discriminator: 1)
!8052 = !DILocation(line: 999, column: 20, scope: !1251)
!8053 = !DILocation(line: 999, column: 43, scope: !1251)
!8054 = !DILocation(line: 999, column: 49, scope: !1251)
!8055 = !DILocation(line: 999, column: 64, scope: !1255)
!8056 = !DILocation(line: 999, column: 72, scope: !1255)
!8057 = !DILocation(line: 999, column: 64, scope: !1251)
!8058 = !DILocation(line: 999, column: 90, scope: !8059)
!8059 = !DILexicalBlockFile(scope: !1254, file: !490, discriminator: 2)
!8060 = !DILocation(line: 999, column: 96, scope: !1254)
!8061 = !DILocation(line: 999, column: 106, scope: !1254)
!8062 = !DILocation(line: 999, column: 120, scope: !1254)
!8063 = !DILocation(line: 999, column: 125, scope: !8064)
!8064 = !DILexicalBlockFile(scope: !1253, file: !490, discriminator: 4)
!8065 = !DILocation(line: 999, column: 135, scope: !1253)
!8066 = !DILocation(line: 999, column: 165, scope: !1253)
!8067 = !DILocation(line: 999, column: 183, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !1253, file: !490, line: 999, column: 180)
!8069 = !DILocation(line: 999, column: 200, scope: !8068)
!8070 = !DILocation(line: 999, column: 180, scope: !8068)
!8071 = !DILocation(line: 999, column: 210, scope: !8068)
!8072 = !DILocation(line: 999, column: 180, scope: !1253)
!8073 = !DILocation(line: 999, column: 180, scope: !8074)
!8074 = !DILexicalBlockFile(scope: !1253, file: !490, discriminator: 5)
!8075 = !DILocation(line: 999, column: 241, scope: !8076)
!8076 = !DILexicalBlockFile(scope: !8068, file: !490, discriminator: 6)
!8077 = !DILocation(line: 999, column: 259, scope: !8068)
!8078 = !DILocation(line: 999, column: 269, scope: !8068)
!8079 = !DILocation(line: 999, column: 294, scope: !8068)
!8080 = !DILocation(line: 999, column: 225, scope: !8068)
!8081 = !DILocation(line: 999, column: 313, scope: !8082)
!8082 = !DILexicalBlockFile(scope: !1254, file: !490, discriminator: 7)
!8083 = !DILocation(line: 999, column: 313, scope: !1253)
!8084 = !DILocation(line: 999, column: 313, scope: !8085)
!8085 = !DILexicalBlockFile(scope: !1253, file: !490, discriminator: 8)
!8086 = !DILocation(line: 999, column: 326, scope: !8087)
!8087 = !DILexicalBlockFile(scope: !1254, file: !490, discriminator: 9)
!8088 = !DILocation(line: 999, column: 328, scope: !8005)
!8089 = !DILocation(line: 999, column: 328, scope: !1251)
!8090 = !DILocation(line: 1000, column: 5, scope: !1233)
!8091 = !DILocation(line: 1000, column: 10, scope: !8092)
!8092 = !DILexicalBlockFile(scope: !1257, file: !490, discriminator: 1)
!8093 = !DILocation(line: 1000, column: 20, scope: !1257)
!8094 = !DILocation(line: 1000, column: 43, scope: !1257)
!8095 = !DILocation(line: 1000, column: 49, scope: !1257)
!8096 = !DILocation(line: 1000, column: 65, scope: !1261)
!8097 = !DILocation(line: 1000, column: 73, scope: !1261)
!8098 = !DILocation(line: 1000, column: 65, scope: !1257)
!8099 = !DILocation(line: 1000, column: 91, scope: !8100)
!8100 = !DILexicalBlockFile(scope: !1260, file: !490, discriminator: 2)
!8101 = !DILocation(line: 1000, column: 97, scope: !1260)
!8102 = !DILocation(line: 1000, column: 108, scope: !1260)
!8103 = !DILocation(line: 1000, column: 122, scope: !1260)
!8104 = !DILocation(line: 1000, column: 127, scope: !8105)
!8105 = !DILexicalBlockFile(scope: !1259, file: !490, discriminator: 4)
!8106 = !DILocation(line: 1000, column: 137, scope: !1259)
!8107 = !DILocation(line: 1000, column: 167, scope: !1259)
!8108 = !DILocation(line: 1000, column: 185, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !1259, file: !490, line: 1000, column: 182)
!8110 = !DILocation(line: 1000, column: 202, scope: !8109)
!8111 = !DILocation(line: 1000, column: 182, scope: !8109)
!8112 = !DILocation(line: 1000, column: 212, scope: !8109)
!8113 = !DILocation(line: 1000, column: 182, scope: !1259)
!8114 = !DILocation(line: 1000, column: 182, scope: !8115)
!8115 = !DILexicalBlockFile(scope: !1259, file: !490, discriminator: 5)
!8116 = !DILocation(line: 1000, column: 243, scope: !8117)
!8117 = !DILexicalBlockFile(scope: !8109, file: !490, discriminator: 6)
!8118 = !DILocation(line: 1000, column: 261, scope: !8109)
!8119 = !DILocation(line: 1000, column: 271, scope: !8109)
!8120 = !DILocation(line: 1000, column: 296, scope: !8109)
!8121 = !DILocation(line: 1000, column: 227, scope: !8109)
!8122 = !DILocation(line: 1000, column: 315, scope: !8123)
!8123 = !DILexicalBlockFile(scope: !1260, file: !490, discriminator: 7)
!8124 = !DILocation(line: 1000, column: 315, scope: !1259)
!8125 = !DILocation(line: 1000, column: 315, scope: !8126)
!8126 = !DILexicalBlockFile(scope: !1259, file: !490, discriminator: 8)
!8127 = !DILocation(line: 1000, column: 328, scope: !8128)
!8128 = !DILexicalBlockFile(scope: !1260, file: !490, discriminator: 9)
!8129 = !DILocation(line: 1000, column: 330, scope: !8005)
!8130 = !DILocation(line: 1000, column: 330, scope: !1257)
!8131 = !DILocation(line: 1004, column: 57, scope: !1233)
!8132 = !DILocation(line: 1004, column: 32, scope: !1233)
!8133 = !DILocation(line: 1004, column: 12, scope: !1233)
!8134 = !DILocation(line: 1004, column: 5, scope: !1233)
!8135 = !DILocation(line: 957, column: 31, scope: !1287)
!8136 = !DILocation(line: 957, column: 47, scope: !1287)
!8137 = !DILocation(line: 957, column: 63, scope: !1287)
!8138 = !DILocation(line: 959, column: 5, scope: !1287)
!8139 = !DILocation(line: 959, column: 15, scope: !1287)
!8140 = !DILocation(line: 959, column: 38, scope: !1287)
!8141 = !DILocation(line: 960, column: 5, scope: !1287)
!8142 = !DILocation(line: 960, column: 15, scope: !1287)
!8143 = !DILocation(line: 960, column: 39, scope: !1287)
!8144 = !DILocation(line: 965, column: 41, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !1287, file: !490, line: 965, column: 9)
!8146 = !DILocation(line: 965, column: 29, scope: !8145)
!8147 = !DILocation(line: 965, column: 49, scope: !8145)
!8148 = !DILocation(line: 965, column: 10, scope: !8145)
!8149 = !DILocation(line: 965, column: 9, scope: !1287)
!8150 = !DILocation(line: 967, column: 9, scope: !8145)
!8151 = !DILocation(line: 969, column: 42, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !1287, file: !490, line: 969, column: 9)
!8153 = !DILocation(line: 969, column: 30, scope: !8152)
!8154 = !DILocation(line: 969, column: 50, scope: !8152)
!8155 = !DILocation(line: 969, column: 60, scope: !8152)
!8156 = !DILocation(line: 969, column: 69, scope: !8152)
!8157 = !DILocation(line: 969, column: 10, scope: !8152)
!8158 = !DILocation(line: 969, column: 9, scope: !1287)
!8159 = !DILocation(line: 970, column: 9, scope: !8152)
!8160 = !DILocation(line: 972, column: 21, scope: !1287)
!8161 = !DILocation(line: 972, column: 29, scope: !1287)
!8162 = !DILocation(line: 972, column: 38, scope: !1287)
!8163 = !DILocation(line: 973, column: 9, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !1287, file: !490, line: 973, column: 9)
!8165 = !DILocation(line: 973, column: 9, scope: !1287)
!8166 = !DILocation(line: 978, column: 9, scope: !8164)
!8167 = !DILocation(line: 980, column: 22, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !1287, file: !490, line: 980, column: 9)
!8169 = !DILocation(line: 980, column: 35, scope: !8168)
!8170 = !DILocation(line: 980, column: 44, scope: !8168)
!8171 = !DILocation(line: 980, column: 54, scope: !8168)
!8172 = !DILocation(line: 980, column: 64, scope: !8168)
!8173 = !DILocation(line: 980, column: 9, scope: !8168)
!8174 = !DILocation(line: 980, column: 9, scope: !1287)
!8175 = !DILocation(line: 985, column: 9, scope: !8168)
!8176 = !DILocation(line: 987, column: 5, scope: !1287)
!8177 = !DILocation(line: 990, column: 5, scope: !1287)
!8178 = !DILocation(line: 990, column: 10, scope: !8179)
!8179 = !DILexicalBlockFile(scope: !1299, file: !490, discriminator: 1)
!8180 = !DILocation(line: 990, column: 20, scope: !1299)
!8181 = !DILocation(line: 990, column: 51, scope: !1299)
!8182 = !DILocation(line: 990, column: 62, scope: !1302)
!8183 = !DILocation(line: 990, column: 78, scope: !1302)
!8184 = !DILocation(line: 990, column: 62, scope: !1299)
!8185 = !DILocation(line: 990, column: 93, scope: !8186)
!8186 = !DILexicalBlockFile(scope: !1302, file: !490, discriminator: 2)
!8187 = !DILocation(line: 990, column: 98, scope: !8188)
!8188 = !DILexicalBlockFile(scope: !1301, file: !490, discriminator: 4)
!8189 = !DILocation(line: 990, column: 108, scope: !1301)
!8190 = !DILocation(line: 990, column: 138, scope: !1301)
!8191 = !DILocation(line: 990, column: 164, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !1301, file: !490, line: 990, column: 161)
!8193 = !DILocation(line: 990, column: 181, scope: !8192)
!8194 = !DILocation(line: 990, column: 161, scope: !8192)
!8195 = !DILocation(line: 990, column: 191, scope: !8192)
!8196 = !DILocation(line: 990, column: 161, scope: !1301)
!8197 = !DILocation(line: 990, column: 161, scope: !8198)
!8198 = !DILexicalBlockFile(scope: !1301, file: !490, discriminator: 5)
!8199 = !DILocation(line: 990, column: 222, scope: !8200)
!8200 = !DILexicalBlockFile(scope: !8192, file: !490, discriminator: 6)
!8201 = !DILocation(line: 990, column: 240, scope: !8192)
!8202 = !DILocation(line: 990, column: 250, scope: !8192)
!8203 = !DILocation(line: 990, column: 275, scope: !8192)
!8204 = !DILocation(line: 990, column: 206, scope: !8192)
!8205 = !DILocation(line: 990, column: 294, scope: !8206)
!8206 = !DILexicalBlockFile(scope: !1302, file: !490, discriminator: 7)
!8207 = !DILocation(line: 990, column: 294, scope: !1301)
!8208 = !DILocation(line: 990, column: 294, scope: !8209)
!8209 = !DILexicalBlockFile(scope: !1301, file: !490, discriminator: 8)
!8210 = !DILocation(line: 990, column: 294, scope: !8211)
!8211 = !DILexicalBlockFile(scope: !1301, file: !490, discriminator: 9)
!8212 = !DILocation(line: 990, column: 307, scope: !8213)
!8213 = !DILexicalBlockFile(scope: !8214, file: !490, discriminator: 10)
!8214 = !DILexicalBlockFile(scope: !1287, file: !490, discriminator: 3)
!8215 = !DILocation(line: 990, column: 307, scope: !1299)
!8216 = !DILocation(line: 990, column: 307, scope: !8217)
!8217 = !DILexicalBlockFile(scope: !1299, file: !490, discriminator: 11)
!8218 = !DILocation(line: 991, column: 5, scope: !1287)
!8219 = !DILocation(line: 992, column: 1, scope: !1287)
!8220 = !DILocation(line: 889, column: 27, scope: !1352)
!8221 = !DILocation(line: 889, column: 43, scope: !1352)
!8222 = !DILocation(line: 889, column: 59, scope: !1352)
!8223 = !DILocation(line: 891, column: 5, scope: !1352)
!8224 = !DILocation(line: 891, column: 22, scope: !1352)
!8225 = !DILocation(line: 892, column: 5, scope: !1352)
!8226 = !DILocation(line: 892, column: 15, scope: !1352)
!8227 = !DILocation(line: 892, column: 38, scope: !1352)
!8228 = !DILocation(line: 893, column: 5, scope: !1352)
!8229 = !DILocation(line: 893, column: 15, scope: !1352)
!8230 = !DILocation(line: 893, column: 39, scope: !1352)
!8231 = !DILocation(line: 898, column: 21, scope: !1352)
!8232 = !DILocation(line: 898, column: 29, scope: !1352)
!8233 = !DILocation(line: 898, column: 38, scope: !1352)
!8234 = !DILocation(line: 900, column: 27, scope: !1368)
!8235 = !DILocation(line: 900, column: 10, scope: !1368)
!8236 = !DILocation(line: 900, column: 9, scope: !1352)
!8237 = !DILocation(line: 901, column: 32, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !1367, file: !490, line: 901, column: 13)
!8239 = !DILocation(line: 901, column: 38, scope: !8238)
!8240 = !DILocation(line: 901, column: 47, scope: !8238)
!8241 = !DILocation(line: 901, column: 14, scope: !8238)
!8242 = !DILocation(line: 901, column: 13, scope: !1367)
!8243 = !DILocation(line: 902, column: 13, scope: !8238)
!8244 = !DILocation(line: 904, column: 13, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !1367, file: !490, line: 904, column: 13)
!8246 = !DILocation(line: 904, column: 13, scope: !1367)
!8247 = !DILocation(line: 910, column: 13, scope: !8245)
!8248 = !DILocation(line: 912, column: 13, scope: !1366)
!8249 = !DILocation(line: 912, column: 21, scope: !1366)
!8250 = !DILocation(line: 912, column: 41, scope: !8251)
!8251 = !DILexicalBlockFile(scope: !1366, file: !490, discriminator: 1)
!8252 = !DILocation(line: 912, column: 52, scope: !1366)
!8253 = !DILocation(line: 912, column: 63, scope: !1366)
!8254 = !DILocation(line: 912, column: 72, scope: !1366)
!8255 = !DILocation(line: 912, column: 89, scope: !1366)
!8256 = !DILocation(line: 912, column: 95, scope: !1366)
!8257 = !DILocation(line: 913, column: 13, scope: !1366)
!8258 = !DILocation(line: 913, column: 22, scope: !1366)
!8259 = !DILocation(line: 913, column: 38, scope: !8251)
!8260 = !DILocation(line: 913, column: 25, scope: !1366)
!8261 = !DILocation(line: 913, column: 46, scope: !1366)
!8262 = !DILocation(line: 913, column: 43, scope: !1366)
!8263 = !DILocation(line: 912, column: 13, scope: !1367)
!8264 = !DILocation(line: 914, column: 13, scope: !1365)
!8265 = !DILocation(line: 914, column: 23, scope: !1365)
!8266 = !DILocation(line: 915, column: 38, scope: !1365)
!8267 = !DILocation(line: 915, column: 48, scope: !1365)
!8268 = !DILocation(line: 915, column: 23, scope: !1365)
!8269 = !DILocation(line: 915, column: 21, scope: !1365)
!8270 = !DILocation(line: 916, column: 17, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !1365, file: !490, line: 916, column: 17)
!8272 = !DILocation(line: 916, column: 17, scope: !1365)
!8273 = !DILocation(line: 918, column: 41, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8271, file: !490, line: 916, column: 26)
!8275 = !DILocation(line: 918, column: 24, scope: !8274)
!8276 = !DILocation(line: 918, column: 22, scope: !8274)
!8277 = !DILocation(line: 919, column: 13, scope: !8274)
!8278 = !DILocation(line: 920, column: 22, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8271, file: !490, line: 920, column: 22)
!8280 = !DILocation(line: 920, column: 22, scope: !8271)
!8281 = !DILocation(line: 921, column: 17, scope: !8279)
!8282 = !DILocation(line: 922, column: 9, scope: !1366)
!8283 = !DILocation(line: 922, column: 9, scope: !8251)
!8284 = !DILocation(line: 922, column: 9, scope: !1365)
!8285 = !DILocation(line: 923, column: 5, scope: !1367)
!8286 = !DILocation(line: 925, column: 32, scope: !1352)
!8287 = !DILocation(line: 925, column: 38, scope: !1352)
!8288 = !DILocation(line: 925, column: 47, scope: !1352)
!8289 = !DILocation(line: 925, column: 12, scope: !1352)
!8290 = !DILocation(line: 925, column: 10, scope: !1352)
!8291 = !DILocation(line: 926, column: 10, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !1352, file: !490, line: 926, column: 9)
!8293 = !DILocation(line: 926, column: 9, scope: !1352)
!8294 = !DILocation(line: 927, column: 9, scope: !8292)
!8295 = !DILocation(line: 929, column: 5, scope: !1352)
!8296 = !DILocation(line: 929, column: 11, scope: !1352)
!8297 = !DILocation(line: 929, column: 16, scope: !1352)
!8298 = !{!7765, !1976, i64 16}
!8299 = !DILocation(line: 930, column: 37, scope: !1352)
!8300 = !DILocation(line: 930, column: 43, scope: !1352)
!8301 = !DILocation(line: 930, column: 51, scope: !1352)
!8302 = !{!7765, !1976, i64 40}
!8303 = !DILocation(line: 930, column: 23, scope: !1352)
!8304 = !DILocation(line: 930, column: 29, scope: !1352)
!8305 = !DILocation(line: 930, column: 35, scope: !1352)
!8306 = !{!7765, !1976, i64 48}
!8307 = !DILocation(line: 930, column: 5, scope: !1352)
!8308 = !DILocation(line: 930, column: 11, scope: !1352)
!8309 = !DILocation(line: 930, column: 21, scope: !1352)
!8310 = !{!7765, !1976, i64 32}
!8311 = !DILocation(line: 931, column: 5, scope: !1352)
!8312 = !DILocation(line: 931, column: 11, scope: !1352)
!8313 = !DILocation(line: 931, column: 19, scope: !1352)
!8314 = !{!7765, !1994, i64 96}
!8315 = !DILocation(line: 933, column: 27, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !1352, file: !490, line: 933, column: 9)
!8317 = !DILocation(line: 933, column: 10, scope: !8316)
!8318 = !DILocation(line: 933, column: 9, scope: !1352)
!8319 = !DILocation(line: 934, column: 26, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !490, line: 934, column: 13)
!8321 = distinct !DILexicalBlock(scope: !8316, file: !490, line: 933, column: 34)
!8322 = !DILocation(line: 934, column: 39, scope: !8320)
!8323 = !DILocation(line: 934, column: 48, scope: !8320)
!8324 = !DILocation(line: 934, column: 58, scope: !8320)
!8325 = !DILocation(line: 934, column: 68, scope: !8320)
!8326 = !DILocation(line: 934, column: 13, scope: !8320)
!8327 = !DILocation(line: 934, column: 13, scope: !8321)
!8328 = !DILocation(line: 939, column: 13, scope: !8320)
!8329 = !DILocation(line: 940, column: 5, scope: !8321)
!8330 = !DILocation(line: 942, column: 22, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8316, file: !490, line: 941, column: 10)
!8332 = !DILocation(line: 942, column: 9, scope: !8331)
!8333 = !DILocation(line: 942, column: 15, scope: !8331)
!8334 = !DILocation(line: 942, column: 20, scope: !8331)
!8335 = !{!7765, !1976, i64 24}
!8336 = !DILocation(line: 943, column: 13, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8331, file: !490, line: 943, column: 13)
!8338 = !DILocation(line: 943, column: 19, scope: !8337)
!8339 = !DILocation(line: 943, column: 24, scope: !8337)
!8340 = !DILocation(line: 943, column: 13, scope: !8331)
!8341 = !DILocation(line: 944, column: 13, scope: !8337)
!8342 = !DILocation(line: 947, column: 5, scope: !1352)
!8343 = !DILocation(line: 947, column: 10, scope: !8344)
!8344 = !DILexicalBlockFile(scope: !1370, file: !490, discriminator: 1)
!8345 = !DILocation(line: 947, column: 20, scope: !1370)
!8346 = !DILocation(line: 947, column: 51, scope: !1370)
!8347 = !DILocation(line: 947, column: 62, scope: !1373)
!8348 = !DILocation(line: 947, column: 78, scope: !1373)
!8349 = !DILocation(line: 947, column: 62, scope: !1370)
!8350 = !DILocation(line: 947, column: 93, scope: !8351)
!8351 = !DILexicalBlockFile(scope: !1373, file: !490, discriminator: 2)
!8352 = !DILocation(line: 947, column: 98, scope: !8353)
!8353 = !DILexicalBlockFile(scope: !1372, file: !490, discriminator: 4)
!8354 = !DILocation(line: 947, column: 108, scope: !1372)
!8355 = !DILocation(line: 947, column: 138, scope: !1372)
!8356 = !DILocation(line: 947, column: 164, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !1372, file: !490, line: 947, column: 161)
!8358 = !DILocation(line: 947, column: 181, scope: !8357)
!8359 = !DILocation(line: 947, column: 161, scope: !8357)
!8360 = !DILocation(line: 947, column: 191, scope: !8357)
!8361 = !DILocation(line: 947, column: 161, scope: !1372)
!8362 = !DILocation(line: 947, column: 161, scope: !8363)
!8363 = !DILexicalBlockFile(scope: !1372, file: !490, discriminator: 5)
!8364 = !DILocation(line: 947, column: 222, scope: !8365)
!8365 = !DILexicalBlockFile(scope: !8357, file: !490, discriminator: 6)
!8366 = !DILocation(line: 947, column: 240, scope: !8357)
!8367 = !DILocation(line: 947, column: 250, scope: !8357)
!8368 = !DILocation(line: 947, column: 275, scope: !8357)
!8369 = !DILocation(line: 947, column: 206, scope: !8357)
!8370 = !DILocation(line: 947, column: 294, scope: !8371)
!8371 = !DILexicalBlockFile(scope: !1373, file: !490, discriminator: 7)
!8372 = !DILocation(line: 947, column: 294, scope: !1372)
!8373 = !DILocation(line: 947, column: 294, scope: !8374)
!8374 = !DILexicalBlockFile(scope: !1372, file: !490, discriminator: 8)
!8375 = !DILocation(line: 947, column: 294, scope: !8376)
!8376 = !DILexicalBlockFile(scope: !1372, file: !490, discriminator: 9)
!8377 = !DILocation(line: 947, column: 307, scope: !8378)
!8378 = !DILexicalBlockFile(scope: !8379, file: !490, discriminator: 10)
!8379 = !DILexicalBlockFile(scope: !1352, file: !490, discriminator: 3)
!8380 = !DILocation(line: 947, column: 307, scope: !1370)
!8381 = !DILocation(line: 947, column: 307, scope: !8382)
!8382 = !DILexicalBlockFile(scope: !1370, file: !490, discriminator: 11)
!8383 = !DILocation(line: 948, column: 25, scope: !1352)
!8384 = !DILocation(line: 948, column: 12, scope: !1352)
!8385 = !DILocation(line: 948, column: 5, scope: !1352)
!8386 = !DILocation(line: 951, column: 5, scope: !1352)
!8387 = !DILocation(line: 951, column: 10, scope: !8388)
!8388 = !DILexicalBlockFile(scope: !1375, file: !490, discriminator: 1)
!8389 = !DILocation(line: 951, column: 20, scope: !1375)
!8390 = !DILocation(line: 951, column: 51, scope: !1375)
!8391 = !DILocation(line: 951, column: 62, scope: !1378)
!8392 = !DILocation(line: 951, column: 78, scope: !1378)
!8393 = !DILocation(line: 951, column: 62, scope: !1375)
!8394 = !DILocation(line: 951, column: 93, scope: !8395)
!8395 = !DILexicalBlockFile(scope: !1378, file: !490, discriminator: 2)
!8396 = !DILocation(line: 951, column: 98, scope: !8397)
!8397 = !DILexicalBlockFile(scope: !1377, file: !490, discriminator: 4)
!8398 = !DILocation(line: 951, column: 108, scope: !1377)
!8399 = !DILocation(line: 951, column: 138, scope: !1377)
!8400 = !DILocation(line: 951, column: 164, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !1377, file: !490, line: 951, column: 161)
!8402 = !DILocation(line: 951, column: 181, scope: !8401)
!8403 = !DILocation(line: 951, column: 161, scope: !8401)
!8404 = !DILocation(line: 951, column: 191, scope: !8401)
!8405 = !DILocation(line: 951, column: 161, scope: !1377)
!8406 = !DILocation(line: 951, column: 161, scope: !8407)
!8407 = !DILexicalBlockFile(scope: !1377, file: !490, discriminator: 5)
!8408 = !DILocation(line: 951, column: 222, scope: !8409)
!8409 = !DILexicalBlockFile(scope: !8401, file: !490, discriminator: 6)
!8410 = !DILocation(line: 951, column: 240, scope: !8401)
!8411 = !DILocation(line: 951, column: 250, scope: !8401)
!8412 = !DILocation(line: 951, column: 275, scope: !8401)
!8413 = !DILocation(line: 951, column: 206, scope: !8401)
!8414 = !DILocation(line: 951, column: 294, scope: !8415)
!8415 = !DILexicalBlockFile(scope: !1378, file: !490, discriminator: 7)
!8416 = !DILocation(line: 951, column: 294, scope: !1377)
!8417 = !DILocation(line: 951, column: 294, scope: !8418)
!8418 = !DILexicalBlockFile(scope: !1377, file: !490, discriminator: 8)
!8419 = !DILocation(line: 951, column: 294, scope: !8420)
!8420 = !DILexicalBlockFile(scope: !1377, file: !490, discriminator: 9)
!8421 = !DILocation(line: 951, column: 307, scope: !8378)
!8422 = !DILocation(line: 951, column: 307, scope: !1375)
!8423 = !DILocation(line: 951, column: 307, scope: !8424)
!8424 = !DILexicalBlockFile(scope: !1375, file: !490, discriminator: 11)
!8425 = !DILocation(line: 952, column: 5, scope: !1352)
!8426 = !DILocation(line: 952, column: 10, scope: !8427)
!8427 = !DILexicalBlockFile(scope: !1380, file: !490, discriminator: 1)
!8428 = !DILocation(line: 952, column: 20, scope: !1380)
!8429 = !DILocation(line: 952, column: 51, scope: !1380)
!8430 = !DILocation(line: 952, column: 38, scope: !1380)
!8431 = !DILocation(line: 952, column: 62, scope: !1383)
!8432 = !DILocation(line: 952, column: 78, scope: !1383)
!8433 = !DILocation(line: 952, column: 62, scope: !1380)
!8434 = !DILocation(line: 952, column: 93, scope: !8435)
!8435 = !DILexicalBlockFile(scope: !1383, file: !490, discriminator: 2)
!8436 = !DILocation(line: 952, column: 98, scope: !8437)
!8437 = !DILexicalBlockFile(scope: !1382, file: !490, discriminator: 4)
!8438 = !DILocation(line: 952, column: 108, scope: !1382)
!8439 = !DILocation(line: 952, column: 138, scope: !1382)
!8440 = !DILocation(line: 952, column: 164, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !1382, file: !490, line: 952, column: 161)
!8442 = !DILocation(line: 952, column: 181, scope: !8441)
!8443 = !DILocation(line: 952, column: 161, scope: !8441)
!8444 = !DILocation(line: 952, column: 191, scope: !8441)
!8445 = !DILocation(line: 952, column: 161, scope: !1382)
!8446 = !DILocation(line: 952, column: 161, scope: !8447)
!8447 = !DILexicalBlockFile(scope: !1382, file: !490, discriminator: 5)
!8448 = !DILocation(line: 952, column: 222, scope: !8449)
!8449 = !DILexicalBlockFile(scope: !8441, file: !490, discriminator: 6)
!8450 = !DILocation(line: 952, column: 240, scope: !8441)
!8451 = !DILocation(line: 952, column: 250, scope: !8441)
!8452 = !DILocation(line: 952, column: 275, scope: !8441)
!8453 = !DILocation(line: 952, column: 206, scope: !8441)
!8454 = !DILocation(line: 952, column: 294, scope: !8455)
!8455 = !DILexicalBlockFile(scope: !1383, file: !490, discriminator: 7)
!8456 = !DILocation(line: 952, column: 294, scope: !1382)
!8457 = !DILocation(line: 952, column: 294, scope: !8458)
!8458 = !DILexicalBlockFile(scope: !1382, file: !490, discriminator: 8)
!8459 = !DILocation(line: 952, column: 294, scope: !8460)
!8460 = !DILexicalBlockFile(scope: !1382, file: !490, discriminator: 9)
!8461 = !DILocation(line: 952, column: 307, scope: !8378)
!8462 = !DILocation(line: 952, column: 307, scope: !1380)
!8463 = !DILocation(line: 952, column: 307, scope: !8464)
!8464 = !DILexicalBlockFile(scope: !1380, file: !490, discriminator: 11)
!8465 = !DILocation(line: 953, column: 5, scope: !1352)
!8466 = !DILocation(line: 954, column: 1, scope: !1352)
!8467 = !DILocation(line: 1076, column: 33, scope: !1262)
!8468 = !DILocation(line: 1078, column: 5, scope: !1262)
!8469 = !DILocation(line: 1078, column: 15, scope: !1262)
!8470 = !DILocation(line: 1078, column: 22, scope: !1262)
!8471 = !DILocation(line: 1078, column: 28, scope: !1262)
!8472 = !DILocation(line: 1079, column: 5, scope: !1262)
!8473 = !DILocation(line: 1079, column: 15, scope: !1262)
!8474 = !DILocation(line: 1079, column: 34, scope: !1262)
!8475 = !DILocation(line: 1083, column: 26, scope: !1270)
!8476 = !DILocation(line: 1083, column: 11, scope: !1270)
!8477 = !DILocation(line: 1083, column: 34, scope: !1270)
!8478 = !DILocation(line: 1083, column: 43, scope: !1270)
!8479 = !DILocation(line: 1083, column: 48, scope: !1270)
!8480 = !DILocation(line: 1083, column: 51, scope: !8481)
!8481 = !DILexicalBlockFile(scope: !1270, file: !490, discriminator: 1)
!8482 = !DILocation(line: 1083, column: 57, scope: !1270)
!8483 = !DILocation(line: 1083, column: 51, scope: !1270)
!8484 = !DILocation(line: 1083, column: 9, scope: !1262)
!8485 = !DILocation(line: 1084, column: 9, scope: !1269)
!8486 = !DILocation(line: 1084, column: 20, scope: !1269)
!8487 = !DILocation(line: 1084, column: 27, scope: !1269)
!8488 = !DILocation(line: 1084, column: 33, scope: !1269)
!8489 = !DILocation(line: 1085, column: 28, scope: !1269)
!8490 = !DILocation(line: 1085, column: 16, scope: !1269)
!8491 = !DILocation(line: 1085, column: 14, scope: !1269)
!8492 = !DILocation(line: 1086, column: 14, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !1269, file: !490, line: 1086, column: 13)
!8494 = !DILocation(line: 1086, column: 13, scope: !1269)
!8495 = !DILocation(line: 1087, column: 13, scope: !8493)
!8496 = !DILocation(line: 1089, column: 35, scope: !1269)
!8497 = !DILocation(line: 1089, column: 41, scope: !1269)
!8498 = !DILocation(line: 1089, column: 17, scope: !1269)
!8499 = !DILocation(line: 1089, column: 49, scope: !1269)
!8500 = !DILocation(line: 1089, column: 16, scope: !1269)
!8501 = !DILocation(line: 1089, column: 13, scope: !1269)
!8502 = !DILocation(line: 1090, column: 25, scope: !1269)
!8503 = !DILocation(line: 1090, column: 32, scope: !1269)
!8504 = !DILocation(line: 1090, column: 41, scope: !1269)
!8505 = !DILocation(line: 1091, column: 50, scope: !1269)
!8506 = !DILocation(line: 1091, column: 29, scope: !1269)
!8507 = !DILocation(line: 1091, column: 11, scope: !1269)
!8508 = !DILocation(line: 1091, column: 37, scope: !1269)
!8509 = !DILocation(line: 1091, column: 10, scope: !1269)
!8510 = !DILocation(line: 1091, column: 48, scope: !1269)
!8511 = !DILocation(line: 1093, column: 35, scope: !1269)
!8512 = !DILocation(line: 1093, column: 41, scope: !1269)
!8513 = !DILocation(line: 1093, column: 17, scope: !1269)
!8514 = !DILocation(line: 1093, column: 49, scope: !1269)
!8515 = !DILocation(line: 1093, column: 16, scope: !1269)
!8516 = !DILocation(line: 1093, column: 13, scope: !1269)
!8517 = !DILocation(line: 1094, column: 25, scope: !1269)
!8518 = !DILocation(line: 1094, column: 32, scope: !1269)
!8519 = !DILocation(line: 1094, column: 41, scope: !1269)
!8520 = !DILocation(line: 1095, column: 50, scope: !1269)
!8521 = !DILocation(line: 1095, column: 29, scope: !1269)
!8522 = !DILocation(line: 1095, column: 11, scope: !1269)
!8523 = !DILocation(line: 1095, column: 37, scope: !1269)
!8524 = !DILocation(line: 1095, column: 10, scope: !1269)
!8525 = !DILocation(line: 1095, column: 48, scope: !1269)
!8526 = !DILocation(line: 1097, column: 25, scope: !1269)
!8527 = !DILocation(line: 1097, column: 31, scope: !1269)
!8528 = !DILocation(line: 1097, column: 43, scope: !1269)
!8529 = !DILocation(line: 1097, column: 52, scope: !1269)
!8530 = !DILocation(line: 1098, column: 50, scope: !1269)
!8531 = !DILocation(line: 1098, column: 56, scope: !1269)
!8532 = !DILocation(line: 1098, column: 29, scope: !1269)
!8533 = !DILocation(line: 1098, column: 11, scope: !1269)
!8534 = !DILocation(line: 1098, column: 37, scope: !1269)
!8535 = !DILocation(line: 1098, column: 10, scope: !1269)
!8536 = !DILocation(line: 1098, column: 48, scope: !1269)
!8537 = !DILocation(line: 1100, column: 13, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !1269, file: !490, line: 1100, column: 13)
!8539 = !DILocation(line: 1100, column: 19, scope: !8538)
!8540 = !DILocation(line: 1100, column: 13, scope: !1269)
!8541 = !DILocation(line: 1106, column: 59, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8538, file: !490, line: 1100, column: 30)
!8543 = !DILocation(line: 1107, column: 33, scope: !8542)
!8544 = !DILocation(line: 1107, column: 15, scope: !8542)
!8545 = !DILocation(line: 1107, column: 41, scope: !8542)
!8546 = !DILocation(line: 1107, column: 14, scope: !8542)
!8547 = !DILocation(line: 1107, column: 52, scope: !8542)
!8548 = !DILocation(line: 1110, column: 29, scope: !8542)
!8549 = !DILocation(line: 1110, column: 35, scope: !8542)
!8550 = !DILocation(line: 1110, column: 48, scope: !8542)
!8551 = !DILocation(line: 1110, column: 57, scope: !8542)
!8552 = !DILocation(line: 1111, column: 54, scope: !8542)
!8553 = !DILocation(line: 1111, column: 60, scope: !8542)
!8554 = !DILocation(line: 1111, column: 33, scope: !8542)
!8555 = !DILocation(line: 1111, column: 15, scope: !8542)
!8556 = !DILocation(line: 1111, column: 41, scope: !8542)
!8557 = !DILocation(line: 1111, column: 14, scope: !8542)
!8558 = !DILocation(line: 1111, column: 52, scope: !8542)
!8559 = !DILocation(line: 1112, column: 9, scope: !8542)
!8560 = !DILocation(line: 1113, column: 5, scope: !1270)
!8561 = !DILocation(line: 1113, column: 5, scope: !8481)
!8562 = !DILocation(line: 1113, column: 5, scope: !1269)
!8563 = !DILocation(line: 1114, column: 25, scope: !1270)
!8564 = !DILocation(line: 1114, column: 33, scope: !1270)
!8565 = !DILocation(line: 1114, column: 42, scope: !1270)
!8566 = !DILocation(line: 1116, column: 9, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !1262, file: !490, line: 1116, column: 9)
!8568 = !DILocation(line: 1116, column: 15, scope: !8567)
!8569 = !DILocation(line: 1116, column: 9, scope: !1262)
!8570 = !DILocation(line: 1117, column: 45, scope: !8567)
!8571 = !DILocation(line: 1117, column: 33, scope: !8567)
!8572 = !DILocation(line: 1117, column: 53, scope: !8567)
!8573 = !DILocation(line: 1117, column: 63, scope: !8567)
!8574 = !DILocation(line: 1117, column: 69, scope: !8567)
!8575 = !DILocation(line: 1117, column: 75, scope: !8567)
!8576 = !DILocation(line: 1117, column: 15, scope: !8567)
!8577 = !DILocation(line: 1117, column: 13, scope: !8567)
!8578 = !DILocation(line: 1117, column: 9, scope: !8567)
!8579 = !DILocation(line: 1119, column: 45, scope: !8567)
!8580 = !DILocation(line: 1119, column: 33, scope: !8567)
!8581 = !DILocation(line: 1119, column: 53, scope: !8567)
!8582 = !DILocation(line: 1119, column: 63, scope: !8567)
!8583 = !DILocation(line: 1119, column: 15, scope: !8567)
!8584 = !DILocation(line: 1119, column: 13, scope: !8567)
!8585 = !DILocation(line: 1120, column: 5, scope: !1262)
!8586 = !DILocation(line: 1120, column: 10, scope: !8587)
!8587 = !DILexicalBlockFile(scope: !1272, file: !490, discriminator: 1)
!8588 = !DILocation(line: 1120, column: 20, scope: !1272)
!8589 = !DILocation(line: 1120, column: 50, scope: !1272)
!8590 = !DILocation(line: 1120, column: 65, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !1272, file: !490, line: 1120, column: 62)
!8592 = !DILocation(line: 1120, column: 82, scope: !8591)
!8593 = !DILocation(line: 1120, column: 62, scope: !8591)
!8594 = !DILocation(line: 1120, column: 92, scope: !8591)
!8595 = !DILocation(line: 1120, column: 62, scope: !1272)
!8596 = !DILocation(line: 1120, column: 62, scope: !8597)
!8597 = !DILexicalBlockFile(scope: !1272, file: !490, discriminator: 2)
!8598 = !DILocation(line: 1120, column: 123, scope: !8599)
!8599 = !DILexicalBlockFile(scope: !8591, file: !490, discriminator: 3)
!8600 = !DILocation(line: 1120, column: 141, scope: !8591)
!8601 = !DILocation(line: 1120, column: 151, scope: !8591)
!8602 = !DILocation(line: 1120, column: 176, scope: !8591)
!8603 = !DILocation(line: 1120, column: 107, scope: !8591)
!8604 = !DILocation(line: 1120, column: 195, scope: !8605)
!8605 = !DILexicalBlockFile(scope: !1262, file: !490, discriminator: 4)
!8606 = !DILocation(line: 1120, column: 195, scope: !1272)
!8607 = !DILocation(line: 1120, column: 195, scope: !8608)
!8608 = !DILexicalBlockFile(scope: !1272, file: !490, discriminator: 5)
!8609 = !DILocation(line: 1121, column: 12, scope: !1262)
!8610 = !DILocation(line: 1121, column: 5, scope: !1262)
!8611 = !DILocation(line: 1122, column: 1, scope: !1262)
!8612 = !DILocation(line: 1125, column: 38, scope: !1273)
!8613 = !DILocation(line: 1125, column: 50, scope: !1273)
!8614 = !DILocation(line: 1127, column: 9, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !1273, file: !490, line: 1127, column: 9)
!8616 = !DILocation(line: 1127, column: 15, scope: !8615)
!8617 = !DILocation(line: 1127, column: 23, scope: !8615)
!8618 = !DILocation(line: 1127, column: 9, scope: !1273)
!8619 = !DILocation(line: 1128, column: 25, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8615, file: !490, line: 1127, column: 30)
!8621 = !DILocation(line: 1128, column: 9, scope: !8620)
!8622 = !DILocation(line: 1129, column: 9, scope: !8620)
!8623 = !DILocation(line: 1131, column: 31, scope: !1273)
!8624 = !DILocation(line: 1131, column: 37, scope: !1273)
!8625 = !DILocation(line: 1131, column: 12, scope: !1273)
!8626 = !DILocation(line: 1131, column: 5, scope: !1273)
!8627 = !DILocation(line: 1132, column: 1, scope: !1273)
!8628 = !DILocation(line: 1135, column: 38, scope: !1279)
!8629 = !DILocation(line: 1135, column: 54, scope: !1279)
!8630 = !DILocation(line: 1135, column: 65, scope: !1279)
!8631 = !DILocation(line: 1137, column: 5, scope: !1279)
!8632 = !DILocation(line: 1137, column: 16, scope: !1279)
!8633 = !DILocation(line: 1138, column: 28, scope: !1279)
!8634 = !DILocation(line: 1138, column: 33, scope: !1279)
!8635 = !DILocation(line: 1138, column: 9, scope: !1279)
!8636 = !DILocation(line: 1138, column: 7, scope: !1279)
!8637 = !DILocation(line: 1139, column: 9, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !1279, file: !490, line: 1139, column: 9)
!8639 = !DILocation(line: 1139, column: 11, scope: !8638)
!8640 = !DILocation(line: 1139, column: 17, scope: !8638)
!8641 = !DILocation(line: 1139, column: 20, scope: !8642)
!8642 = !DILexicalBlockFile(scope: !8638, file: !490, discriminator: 1)
!8643 = !DILocation(line: 1139, column: 9, scope: !1279)
!8644 = !DILocation(line: 1140, column: 9, scope: !8638)
!8645 = !DILocation(line: 1141, column: 21, scope: !1279)
!8646 = !DILocation(line: 1141, column: 5, scope: !1279)
!8647 = !DILocation(line: 1141, column: 11, scope: !1279)
!8648 = !DILocation(line: 1141, column: 19, scope: !1279)
!8649 = !DILocation(line: 1142, column: 5, scope: !1279)
!8650 = !DILocation(line: 1143, column: 1, scope: !1279)
!8651 = !DILocation(line: 868, column: 32, scope: !1303)
!8652 = !DILocation(line: 880, column: 9, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !1303, file: !490, line: 880, column: 9)
!8654 = !DILocation(line: 880, column: 15, scope: !8653)
!8655 = !DILocation(line: 880, column: 23, scope: !8653)
!8656 = !DILocation(line: 880, column: 50, scope: !8653)
!8657 = !DILocation(line: 881, column: 9, scope: !8653)
!8658 = !DILocation(line: 881, column: 15, scope: !8653)
!8659 = !DILocation(line: 881, column: 22, scope: !8653)
!8660 = !DILocation(line: 880, column: 9, scope: !1303)
!8661 = !DILocation(line: 883, column: 9, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8653, file: !490, line: 881, column: 48)
!8663 = !DILocation(line: 885, column: 5, scope: !1303)
!8664 = !DILocation(line: 886, column: 1, scope: !1303)
!8665 = !DILocation(line: 735, column: 31, scope: !1308)
!8666 = !DILocation(line: 736, column: 31, scope: !1308)
!8667 = !DILocation(line: 736, column: 51, scope: !1308)
!8668 = !DILocation(line: 737, column: 31, scope: !1308)
!8669 = !DILocation(line: 737, column: 52, scope: !1308)
!8670 = !DILocation(line: 743, column: 5, scope: !1308)
!8671 = !DILocation(line: 743, column: 16, scope: !1308)
!8672 = !DILocation(line: 744, column: 5, scope: !1308)
!8673 = !DILocation(line: 744, column: 15, scope: !1308)
!8674 = !DILocation(line: 744, column: 23, scope: !1308)
!8675 = !DILocation(line: 744, column: 22, scope: !1308)
!8676 = !DILocation(line: 750, column: 5, scope: !1308)
!8677 = !DILocation(line: 750, column: 15, scope: !1308)
!8678 = !DILocation(line: 751, column: 5, scope: !1308)
!8679 = !DILocation(line: 751, column: 16, scope: !1308)
!8680 = !DILocation(line: 754, column: 30, scope: !1308)
!8681 = !DILocation(line: 754, column: 15, scope: !1308)
!8682 = !DILocation(line: 754, column: 38, scope: !1308)
!8683 = !DILocation(line: 754, column: 11, scope: !1308)
!8684 = !DILocation(line: 756, column: 9, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !1308, file: !490, line: 756, column: 9)
!8686 = !DILocation(line: 756, column: 15, scope: !8685)
!8687 = !DILocation(line: 756, column: 20, scope: !8685)
!8688 = !DILocation(line: 756, column: 23, scope: !8689)
!8689 = !DILexicalBlockFile(scope: !8685, file: !490, discriminator: 1)
!8690 = !DILocation(line: 756, column: 29, scope: !8685)
!8691 = !DILocation(line: 756, column: 9, scope: !1308)
!8692 = !DILocation(line: 757, column: 32, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !490, line: 757, column: 13)
!8694 = distinct !DILexicalBlock(scope: !8685, file: !490, line: 756, column: 35)
!8695 = !DILocation(line: 758, column: 32, scope: !8693)
!8696 = !DILocation(line: 758, column: 41, scope: !8693)
!8697 = !DILocation(line: 759, column: 32, scope: !8693)
!8698 = !DILocation(line: 759, column: 42, scope: !8693)
!8699 = !DILocation(line: 759, column: 52, scope: !8693)
!8700 = !DILocation(line: 757, column: 14, scope: !8693)
!8701 = !DILocation(line: 757, column: 13, scope: !8694)
!8702 = !DILocation(line: 760, column: 13, scope: !8693)
!8703 = !DILocation(line: 794, column: 5, scope: !8694)
!8704 = !DILocation(line: 796, column: 5, scope: !1308)
!8705 = !DILocation(line: 797, column: 1, scope: !1308)
!8706 = !DILocation(line: 800, column: 31, scope: !1321)
!8707 = !DILocation(line: 800, column: 48, scope: !1321)
!8708 = !DILocation(line: 801, column: 24, scope: !1321)
!8709 = !DILocation(line: 801, column: 43, scope: !1321)
!8710 = !DILocation(line: 802, column: 24, scope: !1321)
!8711 = !DILocation(line: 802, column: 44, scope: !1321)
!8712 = !DILocation(line: 808, column: 5, scope: !1321)
!8713 = !DILocation(line: 808, column: 15, scope: !1321)
!8714 = !DILocation(line: 808, column: 23, scope: !1321)
!8715 = !DILocation(line: 808, column: 22, scope: !1321)
!8716 = !DILocation(line: 809, column: 5, scope: !1321)
!8717 = !DILocation(line: 809, column: 16, scope: !1321)
!8718 = !DILocation(line: 809, column: 41, scope: !1321)
!8719 = !DILocation(line: 809, column: 26, scope: !1321)
!8720 = !DILocation(line: 809, column: 49, scope: !1321)
!8721 = !DILocation(line: 812, column: 9, scope: !1339)
!8722 = !DILocation(line: 812, column: 18, scope: !1339)
!8723 = !DILocation(line: 812, column: 21, scope: !8724)
!8724 = !DILexicalBlockFile(scope: !1339, file: !490, discriminator: 1)
!8725 = !DILocation(line: 812, column: 30, scope: !1339)
!8726 = !DILocation(line: 812, column: 9, scope: !1321)
!8727 = !DILocation(line: 813, column: 27, scope: !1337)
!8728 = !DILocation(line: 813, column: 15, scope: !1337)
!8729 = !DILocation(line: 813, column: 35, scope: !1337)
!8730 = !DILocation(line: 813, column: 64, scope: !1337)
!8731 = !DILocation(line: 813, column: 47, scope: !1337)
!8732 = !DILocation(line: 813, column: 44, scope: !1337)
!8733 = !DILocation(line: 813, column: 86, scope: !1337)
!8734 = !DILocation(line: 814, column: 28, scope: !1337)
!8735 = !DILocation(line: 814, column: 13, scope: !1337)
!8736 = !DILocation(line: 813, column: 13, scope: !1338)
!8737 = !DILocation(line: 818, column: 48, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !1337, file: !490, line: 814, column: 39)
!8739 = !DILocation(line: 818, column: 58, scope: !8738)
!8740 = !DILocation(line: 818, column: 29, scope: !8738)
!8741 = !DILocation(line: 818, column: 13, scope: !8738)
!8742 = !DILocation(line: 818, column: 19, scope: !8738)
!8743 = !DILocation(line: 818, column: 27, scope: !8738)
!8744 = !DILocation(line: 819, column: 17, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8738, file: !490, line: 819, column: 17)
!8746 = !DILocation(line: 819, column: 23, scope: !8745)
!8747 = !DILocation(line: 819, column: 31, scope: !8745)
!8748 = !DILocation(line: 819, column: 37, scope: !8745)
!8749 = !DILocation(line: 819, column: 40, scope: !8750)
!8750 = !DILexicalBlockFile(scope: !8745, file: !490, discriminator: 1)
!8751 = !DILocation(line: 819, column: 17, scope: !8738)
!8752 = !DILocation(line: 820, column: 17, scope: !8745)
!8753 = !DILocation(line: 821, column: 9, scope: !8738)
!8754 = !DILocation(line: 823, column: 29, scope: !1336)
!8755 = !DILocation(line: 823, column: 41, scope: !1336)
!8756 = !DILocation(line: 823, column: 50, scope: !1336)
!8757 = !DILocation(line: 824, column: 30, scope: !1336)
!8758 = !DILocation(line: 824, column: 13, scope: !1336)
!8759 = !DILocation(line: 824, column: 19, scope: !1336)
!8760 = !DILocation(line: 824, column: 28, scope: !1336)
!8761 = !DILocation(line: 826, column: 17, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !1336, file: !490, line: 826, column: 17)
!8763 = !DILocation(line: 826, column: 27, scope: !8762)
!8764 = !DILocation(line: 826, column: 30, scope: !8765)
!8765 = !DILexicalBlockFile(scope: !8762, file: !490, discriminator: 1)
!8766 = !DILocation(line: 826, column: 40, scope: !8762)
!8767 = !DILocation(line: 826, column: 17, scope: !1336)
!8768 = !DILocation(line: 827, column: 33, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8762, file: !490, line: 826, column: 62)
!8770 = !DILocation(line: 827, column: 46, scope: !8769)
!8771 = !DILocation(line: 827, column: 55, scope: !8769)
!8772 = !DILocation(line: 828, column: 35, scope: !8769)
!8773 = !DILocation(line: 828, column: 17, scope: !8769)
!8774 = !DILocation(line: 828, column: 23, scope: !8769)
!8775 = !DILocation(line: 828, column: 33, scope: !8769)
!8776 = !DILocation(line: 829, column: 13, scope: !8769)
!8777 = !DILocation(line: 831, column: 17, scope: !1335)
!8778 = !DILocation(line: 831, column: 23, scope: !1335)
!8779 = !DILocation(line: 831, column: 28, scope: !1335)
!8780 = !DILocation(line: 831, column: 31, scope: !8781)
!8781 = !DILexicalBlockFile(scope: !1335, file: !490, discriminator: 1)
!8782 = !DILocation(line: 831, column: 37, scope: !1335)
!8783 = !DILocation(line: 831, column: 17, scope: !1336)
!8784 = !DILocation(line: 834, column: 17, scope: !1334)
!8785 = !DILocation(line: 834, column: 27, scope: !1334)
!8786 = !DILocation(line: 834, column: 55, scope: !1334)
!8787 = !DILocation(line: 834, column: 38, scope: !1334)
!8788 = !DILocation(line: 835, column: 22, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !1334, file: !490, line: 835, column: 21)
!8790 = !DILocation(line: 835, column: 21, scope: !1334)
!8791 = !DILocation(line: 836, column: 21, scope: !8789)
!8792 = !DILocation(line: 838, column: 17, scope: !1334)
!8793 = !DILocation(line: 838, column: 22, scope: !8794)
!8794 = !DILexicalBlockFile(scope: !1341, file: !490, discriminator: 1)
!8795 = !DILocation(line: 838, column: 32, scope: !1341)
!8796 = !DILocation(line: 838, column: 62, scope: !1341)
!8797 = !DILocation(line: 838, column: 77, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !1341, file: !490, line: 838, column: 74)
!8799 = !DILocation(line: 838, column: 94, scope: !8798)
!8800 = !DILocation(line: 838, column: 74, scope: !8798)
!8801 = !DILocation(line: 838, column: 104, scope: !8798)
!8802 = !DILocation(line: 838, column: 74, scope: !1341)
!8803 = !DILocation(line: 838, column: 74, scope: !8804)
!8804 = !DILexicalBlockFile(scope: !1341, file: !490, discriminator: 2)
!8805 = !DILocation(line: 838, column: 135, scope: !8806)
!8806 = !DILexicalBlockFile(scope: !8798, file: !490, discriminator: 3)
!8807 = !DILocation(line: 838, column: 153, scope: !8798)
!8808 = !DILocation(line: 838, column: 163, scope: !8798)
!8809 = !DILocation(line: 838, column: 188, scope: !8798)
!8810 = !DILocation(line: 838, column: 119, scope: !8798)
!8811 = !DILocation(line: 838, column: 207, scope: !8812)
!8812 = !DILexicalBlockFile(scope: !1334, file: !490, discriminator: 4)
!8813 = !DILocation(line: 838, column: 207, scope: !1341)
!8814 = !DILocation(line: 838, column: 207, scope: !8815)
!8815 = !DILexicalBlockFile(scope: !1341, file: !490, discriminator: 5)
!8816 = !DILocation(line: 839, column: 34, scope: !1334)
!8817 = !DILocation(line: 839, column: 32, scope: !1334)
!8818 = !DILocation(line: 839, column: 18, scope: !1334)
!8819 = !DILocation(line: 839, column: 25, scope: !1334)
!8820 = !DILocation(line: 840, column: 13, scope: !1335)
!8821 = !DILocation(line: 840, column: 13, scope: !8781)
!8822 = !DILocation(line: 840, column: 13, scope: !1334)
!8823 = !DILocation(line: 842, column: 5, scope: !1338)
!8824 = !DILocation(line: 843, column: 5, scope: !1321)
!8825 = !DILocation(line: 843, column: 10, scope: !8826)
!8826 = !DILexicalBlockFile(scope: !1343, file: !490, discriminator: 1)
!8827 = !DILocation(line: 843, column: 20, scope: !1343)
!8828 = !DILocation(line: 843, column: 51, scope: !1343)
!8829 = !DILocation(line: 843, column: 65, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !1343, file: !490, line: 843, column: 65)
!8831 = !DILocation(line: 843, column: 81, scope: !8830)
!8832 = !DILocation(line: 843, column: 65, scope: !1343)
!8833 = !DILocation(line: 843, column: 112, scope: !8834)
!8834 = !DILexicalBlockFile(scope: !8830, file: !490, discriminator: 2)
!8835 = !DILocation(line: 843, column: 131, scope: !8830)
!8836 = !DILocation(line: 843, column: 140, scope: !8830)
!8837 = !DILocation(line: 843, column: 96, scope: !8830)
!8838 = !DILocation(line: 843, column: 145, scope: !8839)
!8839 = !DILexicalBlockFile(scope: !8840, file: !490, discriminator: 4)
!8840 = !DILexicalBlockFile(scope: !1321, file: !490, discriminator: 3)
!8841 = !DILocation(line: 843, column: 145, scope: !1343)
!8842 = !DILocation(line: 843, column: 145, scope: !8843)
!8843 = !DILexicalBlockFile(scope: !1343, file: !490, discriminator: 5)
!8844 = !DILocation(line: 844, column: 21, scope: !1321)
!8845 = !DILocation(line: 844, column: 5, scope: !1321)
!8846 = !DILocation(line: 844, column: 11, scope: !1321)
!8847 = !DILocation(line: 844, column: 19, scope: !1321)
!8848 = !DILocation(line: 846, column: 5, scope: !1321)
!8849 = !DILocation(line: 846, column: 10, scope: !8850)
!8850 = !DILexicalBlockFile(scope: !1345, file: !490, discriminator: 1)
!8851 = !DILocation(line: 846, column: 20, scope: !1345)
!8852 = !DILocation(line: 846, column: 51, scope: !1345)
!8853 = !DILocation(line: 846, column: 66, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !1345, file: !490, line: 846, column: 66)
!8855 = !DILocation(line: 846, column: 82, scope: !8854)
!8856 = !DILocation(line: 846, column: 66, scope: !1345)
!8857 = !DILocation(line: 846, column: 113, scope: !8858)
!8858 = !DILexicalBlockFile(scope: !8854, file: !490, discriminator: 2)
!8859 = !DILocation(line: 846, column: 132, scope: !8854)
!8860 = !DILocation(line: 846, column: 141, scope: !8854)
!8861 = !DILocation(line: 846, column: 97, scope: !8854)
!8862 = !DILocation(line: 846, column: 146, scope: !8839)
!8863 = !DILocation(line: 846, column: 146, scope: !1345)
!8864 = !DILocation(line: 846, column: 146, scope: !8865)
!8865 = !DILexicalBlockFile(scope: !1345, file: !490, discriminator: 5)
!8866 = !DILocation(line: 847, column: 22, scope: !1321)
!8867 = !DILocation(line: 847, column: 5, scope: !1321)
!8868 = !DILocation(line: 847, column: 11, scope: !1321)
!8869 = !DILocation(line: 847, column: 20, scope: !1321)
!8870 = !DILocation(line: 855, column: 5, scope: !1321)
!8871 = !DILocation(line: 855, column: 10, scope: !8872)
!8872 = !DILexicalBlockFile(scope: !1347, file: !490, discriminator: 1)
!8873 = !DILocation(line: 855, column: 20, scope: !1347)
!8874 = !DILocation(line: 855, column: 43, scope: !1347)
!8875 = !DILocation(line: 855, column: 49, scope: !1347)
!8876 = !DILocation(line: 855, column: 60, scope: !1351)
!8877 = !DILocation(line: 855, column: 68, scope: !1351)
!8878 = !DILocation(line: 855, column: 60, scope: !1347)
!8879 = !DILocation(line: 855, column: 86, scope: !8880)
!8880 = !DILexicalBlockFile(scope: !1350, file: !490, discriminator: 2)
!8881 = !DILocation(line: 855, column: 92, scope: !1350)
!8882 = !DILocation(line: 855, column: 98, scope: !1350)
!8883 = !DILocation(line: 855, column: 112, scope: !1350)
!8884 = !DILocation(line: 855, column: 117, scope: !8885)
!8885 = !DILexicalBlockFile(scope: !1349, file: !490, discriminator: 4)
!8886 = !DILocation(line: 855, column: 127, scope: !1349)
!8887 = !DILocation(line: 855, column: 157, scope: !1349)
!8888 = !DILocation(line: 855, column: 175, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !1349, file: !490, line: 855, column: 172)
!8890 = !DILocation(line: 855, column: 192, scope: !8889)
!8891 = !DILocation(line: 855, column: 172, scope: !8889)
!8892 = !DILocation(line: 855, column: 202, scope: !8889)
!8893 = !DILocation(line: 855, column: 172, scope: !1349)
!8894 = !DILocation(line: 855, column: 172, scope: !8895)
!8895 = !DILexicalBlockFile(scope: !1349, file: !490, discriminator: 5)
!8896 = !DILocation(line: 855, column: 233, scope: !8897)
!8897 = !DILexicalBlockFile(scope: !8889, file: !490, discriminator: 6)
!8898 = !DILocation(line: 855, column: 251, scope: !8889)
!8899 = !DILocation(line: 855, column: 261, scope: !8889)
!8900 = !DILocation(line: 855, column: 286, scope: !8889)
!8901 = !DILocation(line: 855, column: 217, scope: !8889)
!8902 = !DILocation(line: 855, column: 305, scope: !8903)
!8903 = !DILexicalBlockFile(scope: !1350, file: !490, discriminator: 7)
!8904 = !DILocation(line: 855, column: 305, scope: !1349)
!8905 = !DILocation(line: 855, column: 305, scope: !8906)
!8906 = !DILexicalBlockFile(scope: !1349, file: !490, discriminator: 8)
!8907 = !DILocation(line: 855, column: 318, scope: !8908)
!8908 = !DILexicalBlockFile(scope: !1350, file: !490, discriminator: 9)
!8909 = !DILocation(line: 855, column: 320, scope: !8910)
!8910 = !DILexicalBlockFile(scope: !8840, file: !490, discriminator: 10)
!8911 = !DILocation(line: 855, column: 320, scope: !1347)
!8912 = !DILocation(line: 855, column: 320, scope: !8913)
!8913 = !DILexicalBlockFile(scope: !1347, file: !490, discriminator: 11)
!8914 = !DILocation(line: 856, column: 18, scope: !1321)
!8915 = !DILocation(line: 856, column: 5, scope: !1321)
!8916 = !DILocation(line: 856, column: 11, scope: !1321)
!8917 = !DILocation(line: 856, column: 16, scope: !1321)
!8918 = !DILocation(line: 857, column: 20, scope: !1321)
!8919 = !DILocation(line: 857, column: 6, scope: !1321)
!8920 = !DILocation(line: 857, column: 13, scope: !1321)
!8921 = !DILocation(line: 859, column: 5, scope: !1321)
!8922 = !DILocation(line: 860, column: 1, scope: !1321)
!8923 = !DILocation(line: 1318, column: 42, scope: !1384)
!8924 = !DILocation(line: 1320, column: 5, scope: !1384)
!8925 = !DILocation(line: 1320, column: 10, scope: !8926)
!8926 = !DILexicalBlockFile(scope: !1407, file: !490, discriminator: 1)
!8927 = !DILocation(line: 1320, column: 21, scope: !1407)
!8928 = !DILocation(line: 1320, column: 40, scope: !1407)
!8929 = !DILocation(line: 1320, column: 26, scope: !1407)
!8930 = !DILocation(line: 1320, column: 45, scope: !1407)
!8931 = !DILocation(line: 1320, column: 64, scope: !1407)
!8932 = !DILocation(line: 1320, column: 89, scope: !8933)
!8933 = !DILexicalBlockFile(scope: !8934, file: !490, discriminator: 2)
!8934 = distinct !DILexicalBlock(scope: !1407, file: !490, line: 1320, column: 67)
!8935 = !DILocation(line: 1320, column: 93, scope: !8934)
!8936 = !DILocation(line: 1320, column: 96, scope: !8934)
!8937 = !DILocation(line: 1320, column: 104, scope: !8934)
!8938 = !DILocation(line: 1320, column: 131, scope: !8934)
!8939 = !DILocation(line: 1320, column: 70, scope: !8934)
!8940 = !DILocation(line: 1320, column: 74, scope: !8934)
!8941 = !DILocation(line: 1320, column: 77, scope: !8934)
!8942 = !DILocation(line: 1320, column: 85, scope: !8934)
!8943 = !DILocation(line: 1320, column: 160, scope: !8934)
!8944 = !DILocation(line: 1320, column: 160, scope: !8945)
!8945 = !DILexicalBlockFile(scope: !8934, file: !490, discriminator: 3)
!8946 = !DILocation(line: 1320, column: 201, scope: !8947)
!8947 = !DILexicalBlockFile(scope: !1407, file: !490, discriminator: 4)
!8948 = !DILocation(line: 1320, column: 204, scope: !1407)
!8949 = !DILocation(line: 1320, column: 207, scope: !1407)
!8950 = !DILocation(line: 1320, column: 173, scope: !1407)
!8951 = !DILocation(line: 1320, column: 176, scope: !1407)
!8952 = !DILocation(line: 1320, column: 179, scope: !1407)
!8953 = !DILocation(line: 1320, column: 188, scope: !1407)
!8954 = !DILocation(line: 1320, column: 191, scope: !1407)
!8955 = !DILocation(line: 1320, column: 199, scope: !1407)
!8956 = !DILocation(line: 1320, column: 244, scope: !1407)
!8957 = !DILocation(line: 1320, column: 247, scope: !1407)
!8958 = !DILocation(line: 1320, column: 250, scope: !1407)
!8959 = !DILocation(line: 1320, column: 216, scope: !1407)
!8960 = !DILocation(line: 1320, column: 219, scope: !1407)
!8961 = !DILocation(line: 1320, column: 222, scope: !1407)
!8962 = !DILocation(line: 1320, column: 231, scope: !1407)
!8963 = !DILocation(line: 1320, column: 234, scope: !1407)
!8964 = !DILocation(line: 1320, column: 242, scope: !1407)
!8965 = !DILocation(line: 1320, column: 259, scope: !1407)
!8966 = !DILocation(line: 1320, column: 262, scope: !1407)
!8967 = !DILocation(line: 1320, column: 265, scope: !1407)
!8968 = !DILocation(line: 1320, column: 273, scope: !1407)
!8969 = !DILocation(line: 1320, column: 287, scope: !1384)
!8970 = !DILocation(line: 1320, column: 287, scope: !1407)
!8971 = !DILocation(line: 1321, column: 23, scope: !1384)
!8972 = !DILocation(line: 1321, column: 5, scope: !1384)
!8973 = !DILocation(line: 1322, column: 19, scope: !1384)
!8974 = !DILocation(line: 1322, column: 7, scope: !1384)
!8975 = !DILocation(line: 1322, column: 27, scope: !1384)
!8976 = !DILocation(line: 1322, column: 37, scope: !1384)
!8977 = !DILocation(line: 1322, column: 57, scope: !1384)
!8978 = !DILocation(line: 1322, column: 45, scope: !1384)
!8979 = !DILocation(line: 1322, column: 5, scope: !1384)
!8980 = !DILocation(line: 1323, column: 1, scope: !1384)
!8981 = !DILocation(line: 1367, column: 38, scope: !1408)
!8982 = !DILocation(line: 1369, column: 5, scope: !1408)
!8983 = !DILocation(line: 1369, column: 9, scope: !1408)
!8984 = !DILocation(line: 1370, column: 5, scope: !1408)
!8985 = !DILocation(line: 1370, column: 15, scope: !1408)
!8986 = !DILocation(line: 1371, column: 5, scope: !1408)
!8987 = !DILocation(line: 1371, column: 15, scope: !1408)
!8988 = !DILocation(line: 1375, column: 5, scope: !1408)
!8989 = !DILocation(line: 1375, column: 9, scope: !1408)
!8990 = !DILocation(line: 1380, column: 9, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !1408, file: !490, line: 1380, column: 9)
!8992 = !DILocation(line: 1380, column: 15, scope: !8991)
!8993 = !{!8994, !1976, i64 72}
!8994 = !{!"", !1993, i64 0, !1976, i64 16, !1976, i64 24, !1976, i64 32, !1976, i64 40, !1976, i64 48, !1977, i64 56, !1976, i64 64, !1976, i64 72, !1976, i64 80, !1976, i64 88, !1976, i64 96, !1976, i64 104}
!8995 = !DILocation(line: 1380, column: 24, scope: !8991)
!8996 = !DILocation(line: 1380, column: 44, scope: !8997)
!8997 = !DILexicalBlockFile(scope: !8991, file: !490, discriminator: 1)
!8998 = !DILocation(line: 1380, column: 50, scope: !8991)
!8999 = !DILocation(line: 1380, column: 62, scope: !8991)
!9000 = !DILocation(line: 1380, column: 73, scope: !8991)
!9001 = !DILocation(line: 1380, column: 82, scope: !8991)
!9002 = !DILocation(line: 1380, column: 99, scope: !8991)
!9003 = !DILocation(line: 1380, column: 9, scope: !1408)
!9004 = !DILocation(line: 1381, column: 32, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8991, file: !490, line: 1380, column: 106)
!9006 = !DILocation(line: 1381, column: 38, scope: !9005)
!9007 = !DILocation(line: 1381, column: 20, scope: !9005)
!9008 = !DILocation(line: 1381, column: 18, scope: !9005)
!9009 = !DILocation(line: 1382, column: 13, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9005, file: !490, line: 1382, column: 13)
!9011 = !DILocation(line: 1382, column: 22, scope: !9010)
!9012 = !DILocation(line: 1382, column: 13, scope: !9005)
!9013 = !DILocation(line: 1383, column: 13, scope: !9010)
!9014 = !DILocation(line: 1384, column: 5, scope: !9005)
!9015 = !DILocation(line: 1385, column: 18, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !8991, file: !490, line: 1384, column: 12)
!9017 = !DILocation(line: 1387, column: 20, scope: !1408)
!9018 = !DILocation(line: 1387, column: 26, scope: !1408)
!9019 = !{!8994, !1976, i64 80}
!9020 = !DILocation(line: 1387, column: 33, scope: !1408)
!9021 = !DILocation(line: 1387, column: 48, scope: !1408)
!9022 = !DILocation(line: 1387, column: 66, scope: !9023)
!9023 = !DILexicalBlockFile(scope: !1408, file: !490, discriminator: 1)
!9024 = !DILocation(line: 1387, column: 72, scope: !1408)
!9025 = !DILocation(line: 1387, column: 82, scope: !1408)
!9026 = !DILocation(line: 1387, column: 91, scope: !1408)
!9027 = !DILocation(line: 1387, column: 48, scope: !9028)
!9028 = !DILexicalBlockFile(scope: !1408, file: !490, discriminator: 2)
!9029 = !DILocation(line: 1387, column: 17, scope: !1408)
!9030 = !DILocation(line: 1389, column: 10, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !1408, file: !490, line: 1389, column: 9)
!9032 = !DILocation(line: 1389, column: 19, scope: !9031)
!9033 = !DILocation(line: 1389, column: 23, scope: !9034)
!9034 = !DILexicalBlockFile(scope: !9031, file: !490, discriminator: 1)
!9035 = !DILocation(line: 1389, column: 9, scope: !1408)
!9036 = !DILocation(line: 1390, column: 29, scope: !9031)
!9037 = !DILocation(line: 1390, column: 35, scope: !9031)
!9038 = !{!8994, !1976, i64 64}
!9039 = !DILocation(line: 1390, column: 41, scope: !9034)
!9040 = !DILocation(line: 1390, column: 47, scope: !9031)
!9041 = !DILocation(line: 1390, column: 29, scope: !9042)
!9042 = !DILexicalBlockFile(scope: !9031, file: !490, discriminator: 2)
!9043 = !DILocation(line: 1390, column: 16, scope: !9044)
!9044 = !DILexicalBlockFile(scope: !9045, file: !490, discriminator: 4)
!9045 = !DILexicalBlockFile(scope: !9031, file: !490, discriminator: 3)
!9046 = !DILocation(line: 1390, column: 9, scope: !9031)
!9047 = !DILocation(line: 1392, column: 9, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !1408, file: !490, line: 1392, column: 9)
!9049 = !DILocation(line: 1392, column: 18, scope: !9048)
!9050 = !DILocation(line: 1392, column: 21, scope: !9051)
!9051 = !DILexicalBlockFile(scope: !9048, file: !490, discriminator: 1)
!9052 = !DILocation(line: 1392, column: 9, scope: !1408)
!9053 = !DILocation(line: 1394, column: 20, scope: !9048)
!9054 = !DILocation(line: 1394, column: 26, scope: !9048)
!9055 = !DILocation(line: 1394, column: 32, scope: !9051)
!9056 = !DILocation(line: 1394, column: 38, scope: !9048)
!9057 = !DILocation(line: 1394, column: 20, scope: !9058)
!9058 = !DILexicalBlockFile(scope: !9048, file: !490, discriminator: 2)
!9059 = !DILocation(line: 1395, column: 20, scope: !9048)
!9060 = !DILocation(line: 1396, column: 45, scope: !9048)
!9061 = !DILocation(line: 1396, column: 51, scope: !9048)
!9062 = !DILocation(line: 1396, column: 20, scope: !9048)
!9063 = !DILocation(line: 1393, column: 18, scope: !9048)
!9064 = !DILocation(line: 1393, column: 16, scope: !9048)
!9065 = !DILocation(line: 1393, column: 9, scope: !9048)
!9066 = !DILocation(line: 1397, column: 14, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9048, file: !490, line: 1397, column: 14)
!9068 = !DILocation(line: 1397, column: 14, scope: !9048)
!9069 = !DILocation(line: 1399, column: 20, scope: !9067)
!9070 = !DILocation(line: 1399, column: 26, scope: !9067)
!9071 = !DILocation(line: 1399, column: 32, scope: !9072)
!9072 = !DILexicalBlockFile(scope: !9067, file: !490, discriminator: 1)
!9073 = !DILocation(line: 1399, column: 38, scope: !9067)
!9074 = !DILocation(line: 1399, column: 20, scope: !9075)
!9075 = !DILexicalBlockFile(scope: !9067, file: !490, discriminator: 2)
!9076 = !DILocation(line: 1400, column: 20, scope: !9067)
!9077 = !DILocation(line: 1398, column: 18, scope: !9067)
!9078 = !DILocation(line: 1398, column: 16, scope: !9067)
!9079 = !DILocation(line: 1398, column: 9, scope: !9067)
!9080 = !DILocation(line: 1403, column: 20, scope: !9067)
!9081 = !DILocation(line: 1403, column: 26, scope: !9067)
!9082 = !DILocation(line: 1403, column: 32, scope: !9072)
!9083 = !DILocation(line: 1403, column: 38, scope: !9067)
!9084 = !DILocation(line: 1403, column: 20, scope: !9075)
!9085 = !DILocation(line: 1404, column: 45, scope: !9067)
!9086 = !DILocation(line: 1404, column: 51, scope: !9067)
!9087 = !DILocation(line: 1404, column: 20, scope: !9067)
!9088 = !DILocation(line: 1402, column: 18, scope: !9067)
!9089 = !DILocation(line: 1402, column: 16, scope: !9067)
!9090 = !DILocation(line: 1405, column: 5, scope: !1408)
!9091 = !DILocation(line: 1405, column: 10, scope: !9092)
!9092 = !DILexicalBlockFile(scope: !1418, file: !490, discriminator: 1)
!9093 = !DILocation(line: 1405, column: 20, scope: !1418)
!9094 = !DILocation(line: 1405, column: 51, scope: !1418)
!9095 = !DILocation(line: 1405, column: 66, scope: !1421)
!9096 = !DILocation(line: 1405, column: 82, scope: !1421)
!9097 = !DILocation(line: 1405, column: 66, scope: !1418)
!9098 = !DILocation(line: 1405, column: 97, scope: !9099)
!9099 = !DILexicalBlockFile(scope: !1421, file: !490, discriminator: 2)
!9100 = !DILocation(line: 1405, column: 102, scope: !9101)
!9101 = !DILexicalBlockFile(scope: !1420, file: !490, discriminator: 4)
!9102 = !DILocation(line: 1405, column: 112, scope: !1420)
!9103 = !DILocation(line: 1405, column: 142, scope: !1420)
!9104 = !DILocation(line: 1405, column: 168, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !1420, file: !490, line: 1405, column: 165)
!9106 = !DILocation(line: 1405, column: 185, scope: !9105)
!9107 = !DILocation(line: 1405, column: 165, scope: !9105)
!9108 = !DILocation(line: 1405, column: 195, scope: !9105)
!9109 = !DILocation(line: 1405, column: 165, scope: !1420)
!9110 = !DILocation(line: 1405, column: 165, scope: !9111)
!9111 = !DILexicalBlockFile(scope: !1420, file: !490, discriminator: 5)
!9112 = !DILocation(line: 1405, column: 226, scope: !9113)
!9113 = !DILexicalBlockFile(scope: !9105, file: !490, discriminator: 6)
!9114 = !DILocation(line: 1405, column: 244, scope: !9105)
!9115 = !DILocation(line: 1405, column: 254, scope: !9105)
!9116 = !DILocation(line: 1405, column: 279, scope: !9105)
!9117 = !DILocation(line: 1405, column: 210, scope: !9105)
!9118 = !DILocation(line: 1405, column: 298, scope: !9119)
!9119 = !DILexicalBlockFile(scope: !1421, file: !490, discriminator: 7)
!9120 = !DILocation(line: 1405, column: 298, scope: !1420)
!9121 = !DILocation(line: 1405, column: 298, scope: !9122)
!9122 = !DILexicalBlockFile(scope: !1420, file: !490, discriminator: 8)
!9123 = !DILocation(line: 1405, column: 298, scope: !9124)
!9124 = !DILexicalBlockFile(scope: !1420, file: !490, discriminator: 9)
!9125 = !DILocation(line: 1405, column: 311, scope: !9126)
!9126 = !DILexicalBlockFile(scope: !9127, file: !490, discriminator: 10)
!9127 = !DILexicalBlockFile(scope: !1408, file: !490, discriminator: 3)
!9128 = !DILocation(line: 1405, column: 311, scope: !1418)
!9129 = !DILocation(line: 1405, column: 311, scope: !9130)
!9130 = !DILexicalBlockFile(scope: !1418, file: !490, discriminator: 11)
!9131 = !DILocation(line: 1406, column: 12, scope: !1408)
!9132 = !DILocation(line: 1406, column: 5, scope: !1408)
!9133 = !DILocation(line: 1407, column: 1, scope: !1408)
!9134 = !DILocation(line: 1326, column: 43, scope: !1430)
!9135 = !DILocation(line: 1326, column: 59, scope: !1430)
!9136 = !DILocation(line: 1326, column: 72, scope: !1430)
!9137 = !DILocation(line: 1328, column: 5, scope: !1430)
!9138 = !DILocation(line: 1328, column: 14, scope: !9139)
!9139 = !DILexicalBlockFile(scope: !1439, file: !490, discriminator: 1)
!9140 = !DILocation(line: 1328, column: 20, scope: !1439)
!9141 = !DILocation(line: 1328, column: 14, scope: !1439)
!9142 = !DILocation(line: 1328, column: 14, scope: !1440)
!9143 = !DILocation(line: 1328, column: 27, scope: !9144)
!9144 = !DILexicalBlockFile(scope: !1438, file: !490, discriminator: 2)
!9145 = !DILocation(line: 1328, column: 31, scope: !1438)
!9146 = !DILocation(line: 1328, column: 38, scope: !1438)
!9147 = !DILocation(line: 1328, column: 57, scope: !1438)
!9148 = !DILocation(line: 1328, column: 63, scope: !1438)
!9149 = !DILocation(line: 1328, column: 69, scope: !1438)
!9150 = !DILocation(line: 1328, column: 79, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !1438, file: !490, line: 1328, column: 79)
!9152 = !DILocation(line: 1328, column: 79, scope: !1438)
!9153 = !DILocation(line: 1328, column: 92, scope: !9154)
!9154 = !DILexicalBlockFile(scope: !9151, file: !490, discriminator: 4)
!9155 = !DILocation(line: 1328, column: 85, scope: !9151)
!9156 = !DILocation(line: 1328, column: 98, scope: !9157)
!9157 = !DILexicalBlockFile(scope: !1439, file: !490, discriminator: 5)
!9158 = !DILocation(line: 1328, column: 98, scope: !9159)
!9159 = !DILexicalBlockFile(scope: !9160, file: !490, discriminator: 7)
!9160 = !DILexicalBlockFile(scope: !1439, file: !490, discriminator: 6)
!9161 = !DILocation(line: 1328, column: 98, scope: !1438)
!9162 = !DILocation(line: 1328, column: 100, scope: !9163)
!9163 = !DILexicalBlockFile(scope: !9164, file: !490, discriminator: 8)
!9164 = !DILexicalBlockFile(scope: !1440, file: !490, discriminator: 3)
!9165 = !DILocation(line: 1329, column: 5, scope: !1430)
!9166 = !DILocation(line: 1329, column: 14, scope: !9167)
!9167 = !DILexicalBlockFile(scope: !1443, file: !490, discriminator: 1)
!9168 = !DILocation(line: 1329, column: 20, scope: !1443)
!9169 = !DILocation(line: 1329, column: 14, scope: !1443)
!9170 = !DILocation(line: 1329, column: 14, scope: !1444)
!9171 = !DILocation(line: 1329, column: 32, scope: !9172)
!9172 = !DILexicalBlockFile(scope: !1442, file: !490, discriminator: 2)
!9173 = !DILocation(line: 1329, column: 36, scope: !1442)
!9174 = !DILocation(line: 1329, column: 43, scope: !1442)
!9175 = !DILocation(line: 1329, column: 62, scope: !1442)
!9176 = !DILocation(line: 1329, column: 68, scope: !1442)
!9177 = !DILocation(line: 1329, column: 79, scope: !1442)
!9178 = !DILocation(line: 1329, column: 89, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !1442, file: !490, line: 1329, column: 89)
!9180 = !DILocation(line: 1329, column: 89, scope: !1442)
!9181 = !DILocation(line: 1329, column: 102, scope: !9182)
!9182 = !DILexicalBlockFile(scope: !9179, file: !490, discriminator: 4)
!9183 = !DILocation(line: 1329, column: 95, scope: !9179)
!9184 = !DILocation(line: 1329, column: 108, scope: !9185)
!9185 = !DILexicalBlockFile(scope: !1443, file: !490, discriminator: 5)
!9186 = !DILocation(line: 1329, column: 108, scope: !9187)
!9187 = !DILexicalBlockFile(scope: !9188, file: !490, discriminator: 7)
!9188 = !DILexicalBlockFile(scope: !1443, file: !490, discriminator: 6)
!9189 = !DILocation(line: 1329, column: 108, scope: !1442)
!9190 = !DILocation(line: 1329, column: 110, scope: !9191)
!9191 = !DILexicalBlockFile(scope: !9192, file: !490, discriminator: 8)
!9192 = !DILexicalBlockFile(scope: !1444, file: !490, discriminator: 3)
!9193 = !DILocation(line: 1330, column: 5, scope: !1430)
!9194 = !DILocation(line: 1330, column: 14, scope: !9195)
!9195 = !DILexicalBlockFile(scope: !1447, file: !490, discriminator: 1)
!9196 = !DILocation(line: 1330, column: 20, scope: !1447)
!9197 = !DILocation(line: 1330, column: 14, scope: !1447)
!9198 = !DILocation(line: 1330, column: 14, scope: !1448)
!9199 = !DILocation(line: 1330, column: 30, scope: !9200)
!9200 = !DILexicalBlockFile(scope: !1446, file: !490, discriminator: 2)
!9201 = !DILocation(line: 1330, column: 34, scope: !1446)
!9202 = !DILocation(line: 1330, column: 41, scope: !1446)
!9203 = !DILocation(line: 1330, column: 60, scope: !1446)
!9204 = !DILocation(line: 1330, column: 66, scope: !1446)
!9205 = !DILocation(line: 1330, column: 75, scope: !1446)
!9206 = !DILocation(line: 1330, column: 85, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !1446, file: !490, line: 1330, column: 85)
!9208 = !DILocation(line: 1330, column: 85, scope: !1446)
!9209 = !DILocation(line: 1330, column: 98, scope: !9210)
!9210 = !DILexicalBlockFile(scope: !9207, file: !490, discriminator: 4)
!9211 = !DILocation(line: 1330, column: 91, scope: !9207)
!9212 = !DILocation(line: 1330, column: 104, scope: !9213)
!9213 = !DILexicalBlockFile(scope: !1447, file: !490, discriminator: 5)
!9214 = !DILocation(line: 1330, column: 104, scope: !9215)
!9215 = !DILexicalBlockFile(scope: !9216, file: !490, discriminator: 7)
!9216 = !DILexicalBlockFile(scope: !1447, file: !490, discriminator: 6)
!9217 = !DILocation(line: 1330, column: 104, scope: !1446)
!9218 = !DILocation(line: 1330, column: 106, scope: !9219)
!9219 = !DILexicalBlockFile(scope: !9220, file: !490, discriminator: 8)
!9220 = !DILexicalBlockFile(scope: !1448, file: !490, discriminator: 3)
!9221 = !DILocation(line: 1331, column: 5, scope: !1430)
!9222 = !DILocation(line: 1331, column: 14, scope: !9223)
!9223 = !DILexicalBlockFile(scope: !1451, file: !490, discriminator: 1)
!9224 = !DILocation(line: 1331, column: 20, scope: !1451)
!9225 = !{!8994, !1976, i64 88}
!9226 = !DILocation(line: 1331, column: 14, scope: !1451)
!9227 = !DILocation(line: 1331, column: 14, scope: !1452)
!9228 = !DILocation(line: 1331, column: 30, scope: !9229)
!9229 = !DILexicalBlockFile(scope: !1450, file: !490, discriminator: 2)
!9230 = !DILocation(line: 1331, column: 34, scope: !1450)
!9231 = !DILocation(line: 1331, column: 41, scope: !1450)
!9232 = !DILocation(line: 1331, column: 60, scope: !1450)
!9233 = !DILocation(line: 1331, column: 66, scope: !1450)
!9234 = !DILocation(line: 1331, column: 75, scope: !1450)
!9235 = !DILocation(line: 1331, column: 85, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !1450, file: !490, line: 1331, column: 85)
!9237 = !DILocation(line: 1331, column: 85, scope: !1450)
!9238 = !DILocation(line: 1331, column: 98, scope: !9239)
!9239 = !DILexicalBlockFile(scope: !9236, file: !490, discriminator: 4)
!9240 = !DILocation(line: 1331, column: 91, scope: !9236)
!9241 = !DILocation(line: 1331, column: 104, scope: !9242)
!9242 = !DILexicalBlockFile(scope: !1451, file: !490, discriminator: 5)
!9243 = !DILocation(line: 1331, column: 104, scope: !9244)
!9244 = !DILexicalBlockFile(scope: !9245, file: !490, discriminator: 7)
!9245 = !DILexicalBlockFile(scope: !1451, file: !490, discriminator: 6)
!9246 = !DILocation(line: 1331, column: 104, scope: !1450)
!9247 = !DILocation(line: 1331, column: 106, scope: !9248)
!9248 = !DILexicalBlockFile(scope: !9249, file: !490, discriminator: 8)
!9249 = !DILexicalBlockFile(scope: !1452, file: !490, discriminator: 3)
!9250 = !DILocation(line: 1332, column: 5, scope: !1430)
!9251 = !DILocation(line: 1332, column: 14, scope: !9252)
!9252 = !DILexicalBlockFile(scope: !1455, file: !490, discriminator: 1)
!9253 = !DILocation(line: 1332, column: 20, scope: !1455)
!9254 = !{!8994, !1976, i64 96}
!9255 = !DILocation(line: 1332, column: 14, scope: !1455)
!9256 = !DILocation(line: 1332, column: 14, scope: !1456)
!9257 = !DILocation(line: 1332, column: 28, scope: !9258)
!9258 = !DILexicalBlockFile(scope: !1454, file: !490, discriminator: 2)
!9259 = !DILocation(line: 1332, column: 32, scope: !1454)
!9260 = !DILocation(line: 1332, column: 39, scope: !1454)
!9261 = !DILocation(line: 1332, column: 58, scope: !1454)
!9262 = !DILocation(line: 1332, column: 64, scope: !1454)
!9263 = !DILocation(line: 1332, column: 71, scope: !1454)
!9264 = !DILocation(line: 1332, column: 81, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !1454, file: !490, line: 1332, column: 81)
!9266 = !DILocation(line: 1332, column: 81, scope: !1454)
!9267 = !DILocation(line: 1332, column: 94, scope: !9268)
!9268 = !DILexicalBlockFile(scope: !9265, file: !490, discriminator: 4)
!9269 = !DILocation(line: 1332, column: 87, scope: !9265)
!9270 = !DILocation(line: 1332, column: 100, scope: !9271)
!9271 = !DILexicalBlockFile(scope: !1455, file: !490, discriminator: 5)
!9272 = !DILocation(line: 1332, column: 100, scope: !9273)
!9273 = !DILexicalBlockFile(scope: !9274, file: !490, discriminator: 7)
!9274 = !DILexicalBlockFile(scope: !1455, file: !490, discriminator: 6)
!9275 = !DILocation(line: 1332, column: 100, scope: !1454)
!9276 = !DILocation(line: 1332, column: 102, scope: !9277)
!9277 = !DILexicalBlockFile(scope: !9278, file: !490, discriminator: 8)
!9278 = !DILexicalBlockFile(scope: !1456, file: !490, discriminator: 3)
!9279 = !DILocation(line: 1333, column: 5, scope: !1430)
!9280 = !DILocation(line: 1333, column: 14, scope: !9281)
!9281 = !DILexicalBlockFile(scope: !1459, file: !490, discriminator: 1)
!9282 = !DILocation(line: 1333, column: 20, scope: !1459)
!9283 = !{!8994, !1976, i64 104}
!9284 = !DILocation(line: 1333, column: 14, scope: !1459)
!9285 = !DILocation(line: 1333, column: 14, scope: !1460)
!9286 = !DILocation(line: 1333, column: 43, scope: !9287)
!9287 = !DILexicalBlockFile(scope: !1458, file: !490, discriminator: 2)
!9288 = !DILocation(line: 1333, column: 47, scope: !1458)
!9289 = !DILocation(line: 1333, column: 54, scope: !1458)
!9290 = !DILocation(line: 1333, column: 73, scope: !1458)
!9291 = !DILocation(line: 1333, column: 79, scope: !1458)
!9292 = !DILocation(line: 1333, column: 101, scope: !1458)
!9293 = !DILocation(line: 1333, column: 111, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !1458, file: !490, line: 1333, column: 111)
!9295 = !DILocation(line: 1333, column: 111, scope: !1458)
!9296 = !DILocation(line: 1333, column: 124, scope: !9297)
!9297 = !DILexicalBlockFile(scope: !9294, file: !490, discriminator: 4)
!9298 = !DILocation(line: 1333, column: 117, scope: !9294)
!9299 = !DILocation(line: 1333, column: 130, scope: !9300)
!9300 = !DILexicalBlockFile(scope: !1459, file: !490, discriminator: 5)
!9301 = !DILocation(line: 1333, column: 130, scope: !9302)
!9302 = !DILexicalBlockFile(scope: !9303, file: !490, discriminator: 7)
!9303 = !DILexicalBlockFile(scope: !1459, file: !490, discriminator: 6)
!9304 = !DILocation(line: 1333, column: 130, scope: !1458)
!9305 = !DILocation(line: 1333, column: 132, scope: !9306)
!9306 = !DILexicalBlockFile(scope: !9307, file: !490, discriminator: 8)
!9307 = !DILexicalBlockFile(scope: !1460, file: !490, discriminator: 3)
!9308 = !DILocation(line: 1334, column: 60, scope: !1430)
!9309 = !DILocation(line: 1334, column: 35, scope: !1430)
!9310 = !DILocation(line: 1334, column: 66, scope: !1430)
!9311 = !DILocation(line: 1334, column: 73, scope: !1430)
!9312 = !DILocation(line: 1334, column: 12, scope: !1430)
!9313 = !DILocation(line: 1334, column: 5, scope: !1430)
!9314 = !DILocation(line: 1335, column: 1, scope: !1430)
!9315 = !DILocation(line: 1306, column: 40, scope: !1461)
!9316 = !DILocation(line: 1308, column: 5, scope: !1461)
!9317 = !DILocation(line: 1308, column: 10, scope: !9318)
!9318 = !DILexicalBlockFile(scope: !1467, file: !490, discriminator: 1)
!9319 = !DILocation(line: 1308, column: 20, scope: !1467)
!9320 = !DILocation(line: 1308, column: 43, scope: !1467)
!9321 = !DILocation(line: 1308, column: 49, scope: !1467)
!9322 = !DILocation(line: 1308, column: 59, scope: !1471)
!9323 = !DILocation(line: 1308, column: 67, scope: !1471)
!9324 = !DILocation(line: 1308, column: 59, scope: !1467)
!9325 = !DILocation(line: 1308, column: 85, scope: !9326)
!9326 = !DILexicalBlockFile(scope: !1470, file: !490, discriminator: 2)
!9327 = !DILocation(line: 1308, column: 91, scope: !1470)
!9328 = !DILocation(line: 1308, column: 96, scope: !1470)
!9329 = !DILocation(line: 1308, column: 110, scope: !1470)
!9330 = !DILocation(line: 1308, column: 115, scope: !9331)
!9331 = !DILexicalBlockFile(scope: !1469, file: !490, discriminator: 4)
!9332 = !DILocation(line: 1308, column: 125, scope: !1469)
!9333 = !DILocation(line: 1308, column: 155, scope: !1469)
!9334 = !DILocation(line: 1308, column: 173, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !1469, file: !490, line: 1308, column: 170)
!9336 = !DILocation(line: 1308, column: 190, scope: !9335)
!9337 = !DILocation(line: 1308, column: 170, scope: !9335)
!9338 = !DILocation(line: 1308, column: 200, scope: !9335)
!9339 = !DILocation(line: 1308, column: 170, scope: !1469)
!9340 = !DILocation(line: 1308, column: 170, scope: !9341)
!9341 = !DILexicalBlockFile(scope: !1469, file: !490, discriminator: 5)
!9342 = !DILocation(line: 1308, column: 231, scope: !9343)
!9343 = !DILexicalBlockFile(scope: !9335, file: !490, discriminator: 6)
!9344 = !DILocation(line: 1308, column: 249, scope: !9335)
!9345 = !DILocation(line: 1308, column: 259, scope: !9335)
!9346 = !DILocation(line: 1308, column: 284, scope: !9335)
!9347 = !DILocation(line: 1308, column: 215, scope: !9335)
!9348 = !DILocation(line: 1308, column: 303, scope: !9349)
!9349 = !DILexicalBlockFile(scope: !1470, file: !490, discriminator: 7)
!9350 = !DILocation(line: 1308, column: 303, scope: !1469)
!9351 = !DILocation(line: 1308, column: 303, scope: !9352)
!9352 = !DILexicalBlockFile(scope: !1469, file: !490, discriminator: 8)
!9353 = !DILocation(line: 1308, column: 316, scope: !9354)
!9354 = !DILexicalBlockFile(scope: !1470, file: !490, discriminator: 9)
!9355 = !DILocation(line: 1308, column: 318, scope: !9356)
!9356 = !DILexicalBlockFile(scope: !9357, file: !490, discriminator: 10)
!9357 = !DILexicalBlockFile(scope: !1461, file: !490, discriminator: 3)
!9358 = !DILocation(line: 1308, column: 318, scope: !1467)
!9359 = !DILocation(line: 1309, column: 5, scope: !1461)
!9360 = !DILocation(line: 1309, column: 10, scope: !9361)
!9361 = !DILexicalBlockFile(scope: !1473, file: !490, discriminator: 1)
!9362 = !DILocation(line: 1309, column: 20, scope: !1473)
!9363 = !DILocation(line: 1309, column: 43, scope: !1473)
!9364 = !DILocation(line: 1309, column: 49, scope: !1473)
!9365 = !DILocation(line: 1309, column: 64, scope: !1477)
!9366 = !DILocation(line: 1309, column: 72, scope: !1477)
!9367 = !DILocation(line: 1309, column: 64, scope: !1473)
!9368 = !DILocation(line: 1309, column: 90, scope: !9369)
!9369 = !DILexicalBlockFile(scope: !1476, file: !490, discriminator: 2)
!9370 = !DILocation(line: 1309, column: 96, scope: !1476)
!9371 = !DILocation(line: 1309, column: 106, scope: !1476)
!9372 = !DILocation(line: 1309, column: 120, scope: !1476)
!9373 = !DILocation(line: 1309, column: 125, scope: !9374)
!9374 = !DILexicalBlockFile(scope: !1475, file: !490, discriminator: 4)
!9375 = !DILocation(line: 1309, column: 135, scope: !1475)
!9376 = !DILocation(line: 1309, column: 165, scope: !1475)
!9377 = !DILocation(line: 1309, column: 183, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !1475, file: !490, line: 1309, column: 180)
!9379 = !DILocation(line: 1309, column: 200, scope: !9378)
!9380 = !DILocation(line: 1309, column: 180, scope: !9378)
!9381 = !DILocation(line: 1309, column: 210, scope: !9378)
!9382 = !DILocation(line: 1309, column: 180, scope: !1475)
!9383 = !DILocation(line: 1309, column: 180, scope: !9384)
!9384 = !DILexicalBlockFile(scope: !1475, file: !490, discriminator: 5)
!9385 = !DILocation(line: 1309, column: 241, scope: !9386)
!9386 = !DILexicalBlockFile(scope: !9378, file: !490, discriminator: 6)
!9387 = !DILocation(line: 1309, column: 259, scope: !9378)
!9388 = !DILocation(line: 1309, column: 269, scope: !9378)
!9389 = !DILocation(line: 1309, column: 294, scope: !9378)
!9390 = !DILocation(line: 1309, column: 225, scope: !9378)
!9391 = !DILocation(line: 1309, column: 313, scope: !9392)
!9392 = !DILexicalBlockFile(scope: !1476, file: !490, discriminator: 7)
!9393 = !DILocation(line: 1309, column: 313, scope: !1475)
!9394 = !DILocation(line: 1309, column: 313, scope: !9395)
!9395 = !DILexicalBlockFile(scope: !1475, file: !490, discriminator: 8)
!9396 = !DILocation(line: 1309, column: 326, scope: !9397)
!9397 = !DILexicalBlockFile(scope: !1476, file: !490, discriminator: 9)
!9398 = !DILocation(line: 1309, column: 328, scope: !9356)
!9399 = !DILocation(line: 1309, column: 328, scope: !1473)
!9400 = !DILocation(line: 1310, column: 5, scope: !1461)
!9401 = !DILocation(line: 1310, column: 10, scope: !9402)
!9402 = !DILexicalBlockFile(scope: !1479, file: !490, discriminator: 1)
!9403 = !DILocation(line: 1310, column: 20, scope: !1479)
!9404 = !DILocation(line: 1310, column: 43, scope: !1479)
!9405 = !DILocation(line: 1310, column: 49, scope: !1479)
!9406 = !DILocation(line: 1310, column: 62, scope: !1483)
!9407 = !DILocation(line: 1310, column: 70, scope: !1483)
!9408 = !DILocation(line: 1310, column: 62, scope: !1479)
!9409 = !DILocation(line: 1310, column: 88, scope: !9410)
!9410 = !DILexicalBlockFile(scope: !1482, file: !490, discriminator: 2)
!9411 = !DILocation(line: 1310, column: 94, scope: !1482)
!9412 = !DILocation(line: 1310, column: 102, scope: !1482)
!9413 = !DILocation(line: 1310, column: 116, scope: !1482)
!9414 = !DILocation(line: 1310, column: 121, scope: !9415)
!9415 = !DILexicalBlockFile(scope: !1481, file: !490, discriminator: 4)
!9416 = !DILocation(line: 1310, column: 131, scope: !1481)
!9417 = !DILocation(line: 1310, column: 161, scope: !1481)
!9418 = !DILocation(line: 1310, column: 179, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !1481, file: !490, line: 1310, column: 176)
!9420 = !DILocation(line: 1310, column: 196, scope: !9419)
!9421 = !DILocation(line: 1310, column: 176, scope: !9419)
!9422 = !DILocation(line: 1310, column: 206, scope: !9419)
!9423 = !DILocation(line: 1310, column: 176, scope: !1481)
!9424 = !DILocation(line: 1310, column: 176, scope: !9425)
!9425 = !DILexicalBlockFile(scope: !1481, file: !490, discriminator: 5)
!9426 = !DILocation(line: 1310, column: 237, scope: !9427)
!9427 = !DILexicalBlockFile(scope: !9419, file: !490, discriminator: 6)
!9428 = !DILocation(line: 1310, column: 255, scope: !9419)
!9429 = !DILocation(line: 1310, column: 265, scope: !9419)
!9430 = !DILocation(line: 1310, column: 290, scope: !9419)
!9431 = !DILocation(line: 1310, column: 221, scope: !9419)
!9432 = !DILocation(line: 1310, column: 309, scope: !9433)
!9433 = !DILexicalBlockFile(scope: !1482, file: !490, discriminator: 7)
!9434 = !DILocation(line: 1310, column: 309, scope: !1481)
!9435 = !DILocation(line: 1310, column: 309, scope: !9436)
!9436 = !DILexicalBlockFile(scope: !1481, file: !490, discriminator: 8)
!9437 = !DILocation(line: 1310, column: 322, scope: !9438)
!9438 = !DILexicalBlockFile(scope: !1482, file: !490, discriminator: 9)
!9439 = !DILocation(line: 1310, column: 324, scope: !9356)
!9440 = !DILocation(line: 1310, column: 324, scope: !1479)
!9441 = !DILocation(line: 1311, column: 5, scope: !1461)
!9442 = !DILocation(line: 1311, column: 10, scope: !9443)
!9443 = !DILexicalBlockFile(scope: !1485, file: !490, discriminator: 1)
!9444 = !DILocation(line: 1311, column: 20, scope: !1485)
!9445 = !DILocation(line: 1311, column: 43, scope: !1485)
!9446 = !DILocation(line: 1311, column: 49, scope: !1485)
!9447 = !DILocation(line: 1311, column: 62, scope: !1489)
!9448 = !DILocation(line: 1311, column: 70, scope: !1489)
!9449 = !DILocation(line: 1311, column: 62, scope: !1485)
!9450 = !DILocation(line: 1311, column: 88, scope: !9451)
!9451 = !DILexicalBlockFile(scope: !1488, file: !490, discriminator: 2)
!9452 = !DILocation(line: 1311, column: 94, scope: !1488)
!9453 = !DILocation(line: 1311, column: 102, scope: !1488)
!9454 = !DILocation(line: 1311, column: 116, scope: !1488)
!9455 = !DILocation(line: 1311, column: 121, scope: !9456)
!9456 = !DILexicalBlockFile(scope: !1487, file: !490, discriminator: 4)
!9457 = !DILocation(line: 1311, column: 131, scope: !1487)
!9458 = !DILocation(line: 1311, column: 161, scope: !1487)
!9459 = !DILocation(line: 1311, column: 179, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !1487, file: !490, line: 1311, column: 176)
!9461 = !DILocation(line: 1311, column: 196, scope: !9460)
!9462 = !DILocation(line: 1311, column: 176, scope: !9460)
!9463 = !DILocation(line: 1311, column: 206, scope: !9460)
!9464 = !DILocation(line: 1311, column: 176, scope: !1487)
!9465 = !DILocation(line: 1311, column: 176, scope: !9466)
!9466 = !DILexicalBlockFile(scope: !1487, file: !490, discriminator: 5)
!9467 = !DILocation(line: 1311, column: 237, scope: !9468)
!9468 = !DILexicalBlockFile(scope: !9460, file: !490, discriminator: 6)
!9469 = !DILocation(line: 1311, column: 255, scope: !9460)
!9470 = !DILocation(line: 1311, column: 265, scope: !9460)
!9471 = !DILocation(line: 1311, column: 290, scope: !9460)
!9472 = !DILocation(line: 1311, column: 221, scope: !9460)
!9473 = !DILocation(line: 1311, column: 309, scope: !9474)
!9474 = !DILexicalBlockFile(scope: !1488, file: !490, discriminator: 7)
!9475 = !DILocation(line: 1311, column: 309, scope: !1487)
!9476 = !DILocation(line: 1311, column: 309, scope: !9477)
!9477 = !DILexicalBlockFile(scope: !1487, file: !490, discriminator: 8)
!9478 = !DILocation(line: 1311, column: 322, scope: !9479)
!9479 = !DILexicalBlockFile(scope: !1488, file: !490, discriminator: 9)
!9480 = !DILocation(line: 1311, column: 324, scope: !9356)
!9481 = !DILocation(line: 1311, column: 324, scope: !1485)
!9482 = !DILocation(line: 1312, column: 5, scope: !1461)
!9483 = !DILocation(line: 1312, column: 10, scope: !9484)
!9484 = !DILexicalBlockFile(scope: !1491, file: !490, discriminator: 1)
!9485 = !DILocation(line: 1312, column: 20, scope: !1491)
!9486 = !DILocation(line: 1312, column: 43, scope: !1491)
!9487 = !DILocation(line: 1312, column: 49, scope: !1491)
!9488 = !DILocation(line: 1312, column: 60, scope: !1495)
!9489 = !DILocation(line: 1312, column: 68, scope: !1495)
!9490 = !DILocation(line: 1312, column: 60, scope: !1491)
!9491 = !DILocation(line: 1312, column: 86, scope: !9492)
!9492 = !DILexicalBlockFile(scope: !1494, file: !490, discriminator: 2)
!9493 = !DILocation(line: 1312, column: 92, scope: !1494)
!9494 = !DILocation(line: 1312, column: 98, scope: !1494)
!9495 = !DILocation(line: 1312, column: 112, scope: !1494)
!9496 = !DILocation(line: 1312, column: 117, scope: !9497)
!9497 = !DILexicalBlockFile(scope: !1493, file: !490, discriminator: 4)
!9498 = !DILocation(line: 1312, column: 127, scope: !1493)
!9499 = !DILocation(line: 1312, column: 157, scope: !1493)
!9500 = !DILocation(line: 1312, column: 175, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !1493, file: !490, line: 1312, column: 172)
!9502 = !DILocation(line: 1312, column: 192, scope: !9501)
!9503 = !DILocation(line: 1312, column: 172, scope: !9501)
!9504 = !DILocation(line: 1312, column: 202, scope: !9501)
!9505 = !DILocation(line: 1312, column: 172, scope: !1493)
!9506 = !DILocation(line: 1312, column: 172, scope: !9507)
!9507 = !DILexicalBlockFile(scope: !1493, file: !490, discriminator: 5)
!9508 = !DILocation(line: 1312, column: 233, scope: !9509)
!9509 = !DILexicalBlockFile(scope: !9501, file: !490, discriminator: 6)
!9510 = !DILocation(line: 1312, column: 251, scope: !9501)
!9511 = !DILocation(line: 1312, column: 261, scope: !9501)
!9512 = !DILocation(line: 1312, column: 286, scope: !9501)
!9513 = !DILocation(line: 1312, column: 217, scope: !9501)
!9514 = !DILocation(line: 1312, column: 305, scope: !9515)
!9515 = !DILexicalBlockFile(scope: !1494, file: !490, discriminator: 7)
!9516 = !DILocation(line: 1312, column: 305, scope: !1493)
!9517 = !DILocation(line: 1312, column: 305, scope: !9518)
!9518 = !DILexicalBlockFile(scope: !1493, file: !490, discriminator: 8)
!9519 = !DILocation(line: 1312, column: 318, scope: !9520)
!9520 = !DILexicalBlockFile(scope: !1494, file: !490, discriminator: 9)
!9521 = !DILocation(line: 1312, column: 320, scope: !9356)
!9522 = !DILocation(line: 1312, column: 320, scope: !1491)
!9523 = !DILocation(line: 1313, column: 5, scope: !1461)
!9524 = !DILocation(line: 1313, column: 10, scope: !9525)
!9525 = !DILexicalBlockFile(scope: !1497, file: !490, discriminator: 1)
!9526 = !DILocation(line: 1313, column: 20, scope: !1497)
!9527 = !DILocation(line: 1313, column: 43, scope: !1497)
!9528 = !DILocation(line: 1313, column: 49, scope: !1497)
!9529 = !DILocation(line: 1313, column: 75, scope: !1501)
!9530 = !DILocation(line: 1313, column: 83, scope: !1501)
!9531 = !DILocation(line: 1313, column: 75, scope: !1497)
!9532 = !DILocation(line: 1313, column: 101, scope: !9533)
!9533 = !DILexicalBlockFile(scope: !1500, file: !490, discriminator: 2)
!9534 = !DILocation(line: 1313, column: 107, scope: !1500)
!9535 = !DILocation(line: 1313, column: 128, scope: !1500)
!9536 = !DILocation(line: 1313, column: 142, scope: !1500)
!9537 = !DILocation(line: 1313, column: 147, scope: !9538)
!9538 = !DILexicalBlockFile(scope: !1499, file: !490, discriminator: 4)
!9539 = !DILocation(line: 1313, column: 157, scope: !1499)
!9540 = !DILocation(line: 1313, column: 187, scope: !1499)
!9541 = !DILocation(line: 1313, column: 205, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !1499, file: !490, line: 1313, column: 202)
!9543 = !DILocation(line: 1313, column: 222, scope: !9542)
!9544 = !DILocation(line: 1313, column: 202, scope: !9542)
!9545 = !DILocation(line: 1313, column: 232, scope: !9542)
!9546 = !DILocation(line: 1313, column: 202, scope: !1499)
!9547 = !DILocation(line: 1313, column: 202, scope: !9548)
!9548 = !DILexicalBlockFile(scope: !1499, file: !490, discriminator: 5)
!9549 = !DILocation(line: 1313, column: 263, scope: !9550)
!9550 = !DILexicalBlockFile(scope: !9542, file: !490, discriminator: 6)
!9551 = !DILocation(line: 1313, column: 281, scope: !9542)
!9552 = !DILocation(line: 1313, column: 291, scope: !9542)
!9553 = !DILocation(line: 1313, column: 316, scope: !9542)
!9554 = !DILocation(line: 1313, column: 247, scope: !9542)
!9555 = !DILocation(line: 1313, column: 335, scope: !9556)
!9556 = !DILexicalBlockFile(scope: !1500, file: !490, discriminator: 7)
!9557 = !DILocation(line: 1313, column: 335, scope: !1499)
!9558 = !DILocation(line: 1313, column: 335, scope: !9559)
!9559 = !DILexicalBlockFile(scope: !1499, file: !490, discriminator: 8)
!9560 = !DILocation(line: 1313, column: 348, scope: !9561)
!9561 = !DILexicalBlockFile(scope: !1500, file: !490, discriminator: 9)
!9562 = !DILocation(line: 1313, column: 350, scope: !9356)
!9563 = !DILocation(line: 1313, column: 350, scope: !1497)
!9564 = !DILocation(line: 1314, column: 57, scope: !1461)
!9565 = !DILocation(line: 1314, column: 32, scope: !1461)
!9566 = !DILocation(line: 1314, column: 12, scope: !1461)
!9567 = !DILocation(line: 1314, column: 5, scope: !1461)
!9568 = !DILocation(line: 1258, column: 39, scope: !1502)
!9569 = !DILocation(line: 1258, column: 55, scope: !1502)
!9570 = !DILocation(line: 1258, column: 71, scope: !1502)
!9571 = !DILocation(line: 1260, column: 5, scope: !1502)
!9572 = !DILocation(line: 1260, column: 15, scope: !1502)
!9573 = !DILocation(line: 1261, column: 5, scope: !1502)
!9574 = !DILocation(line: 1261, column: 16, scope: !1502)
!9575 = !DILocation(line: 1261, column: 43, scope: !1502)
!9576 = !DILocation(line: 1261, column: 28, scope: !1502)
!9577 = !DILocation(line: 1261, column: 51, scope: !1502)
!9578 = !DILocation(line: 1263, column: 53, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !1502, file: !490, line: 1263, column: 9)
!9580 = !DILocation(line: 1263, column: 28, scope: !9579)
!9581 = !DILocation(line: 1263, column: 59, scope: !9579)
!9582 = !DILocation(line: 1263, column: 65, scope: !9579)
!9583 = !DILocation(line: 1263, column: 9, scope: !9579)
!9584 = !DILocation(line: 1263, column: 71, scope: !9579)
!9585 = !DILocation(line: 1263, column: 9, scope: !1502)
!9586 = !DILocation(line: 1264, column: 9, scope: !9579)
!9587 = !DILocation(line: 1266, column: 9, scope: !1514)
!9588 = !DILocation(line: 1266, column: 17, scope: !1514)
!9589 = !DILocation(line: 1266, column: 9, scope: !1502)
!9590 = !DILocation(line: 1267, column: 9, scope: !1513)
!9591 = !DILocation(line: 1267, column: 14, scope: !9592)
!9592 = !DILexicalBlockFile(scope: !1512, file: !490, discriminator: 1)
!9593 = !DILocation(line: 1267, column: 24, scope: !1512)
!9594 = !DILocation(line: 1267, column: 47, scope: !1512)
!9595 = !DILocation(line: 1267, column: 53, scope: !1512)
!9596 = !DILocation(line: 1267, column: 63, scope: !1518)
!9597 = !DILocation(line: 1267, column: 71, scope: !1518)
!9598 = !DILocation(line: 1267, column: 63, scope: !1512)
!9599 = !DILocation(line: 1267, column: 89, scope: !9600)
!9600 = !DILexicalBlockFile(scope: !1517, file: !490, discriminator: 2)
!9601 = !DILocation(line: 1267, column: 95, scope: !1517)
!9602 = !DILocation(line: 1267, column: 100, scope: !1517)
!9603 = !DILocation(line: 1267, column: 114, scope: !1517)
!9604 = !DILocation(line: 1267, column: 119, scope: !9605)
!9605 = !DILexicalBlockFile(scope: !1516, file: !490, discriminator: 4)
!9606 = !DILocation(line: 1267, column: 129, scope: !1516)
!9607 = !DILocation(line: 1267, column: 159, scope: !1516)
!9608 = !DILocation(line: 1267, column: 177, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !1516, file: !490, line: 1267, column: 174)
!9610 = !DILocation(line: 1267, column: 194, scope: !9609)
!9611 = !DILocation(line: 1267, column: 174, scope: !9609)
!9612 = !DILocation(line: 1267, column: 204, scope: !9609)
!9613 = !DILocation(line: 1267, column: 174, scope: !1516)
!9614 = !DILocation(line: 1267, column: 174, scope: !9615)
!9615 = !DILexicalBlockFile(scope: !1516, file: !490, discriminator: 5)
!9616 = !DILocation(line: 1267, column: 235, scope: !9617)
!9617 = !DILexicalBlockFile(scope: !9609, file: !490, discriminator: 6)
!9618 = !DILocation(line: 1267, column: 253, scope: !9609)
!9619 = !DILocation(line: 1267, column: 263, scope: !9609)
!9620 = !DILocation(line: 1267, column: 288, scope: !9609)
!9621 = !DILocation(line: 1267, column: 219, scope: !9609)
!9622 = !DILocation(line: 1267, column: 307, scope: !9623)
!9623 = !DILexicalBlockFile(scope: !1517, file: !490, discriminator: 7)
!9624 = !DILocation(line: 1267, column: 307, scope: !1516)
!9625 = !DILocation(line: 1267, column: 307, scope: !9626)
!9626 = !DILexicalBlockFile(scope: !1516, file: !490, discriminator: 8)
!9627 = !DILocation(line: 1267, column: 320, scope: !9628)
!9628 = !DILexicalBlockFile(scope: !1517, file: !490, discriminator: 9)
!9629 = !DILocation(line: 1267, column: 322, scope: !9630)
!9630 = !DILexicalBlockFile(scope: !9631, file: !490, discriminator: 10)
!9631 = !DILexicalBlockFile(scope: !1513, file: !490, discriminator: 3)
!9632 = !DILocation(line: 1267, column: 322, scope: !1512)
!9633 = !DILocation(line: 1267, column: 322, scope: !9634)
!9634 = !DILexicalBlockFile(scope: !1512, file: !490, discriminator: 11)
!9635 = !DILocation(line: 1268, column: 41, scope: !1513)
!9636 = !DILocation(line: 1268, column: 23, scope: !1513)
!9637 = !DILocation(line: 1268, column: 49, scope: !1513)
!9638 = !DILocation(line: 1268, column: 22, scope: !1513)
!9639 = !DILocation(line: 1268, column: 9, scope: !1513)
!9640 = !DILocation(line: 1268, column: 15, scope: !1513)
!9641 = !DILocation(line: 1268, column: 19, scope: !1513)
!9642 = !DILocation(line: 1269, column: 25, scope: !1513)
!9643 = !DILocation(line: 1269, column: 31, scope: !1513)
!9644 = !DILocation(line: 1269, column: 38, scope: !1513)
!9645 = !DILocation(line: 1269, column: 47, scope: !1513)
!9646 = !DILocation(line: 1270, column: 5, scope: !1513)
!9647 = !DILocation(line: 1271, column: 9, scope: !1524)
!9648 = !DILocation(line: 1271, column: 17, scope: !1524)
!9649 = !DILocation(line: 1271, column: 9, scope: !1502)
!9650 = !DILocation(line: 1272, column: 36, scope: !1523)
!9651 = !DILocation(line: 1272, column: 18, scope: !1523)
!9652 = !DILocation(line: 1272, column: 44, scope: !1523)
!9653 = !DILocation(line: 1272, column: 17, scope: !1523)
!9654 = !DILocation(line: 1272, column: 14, scope: !1523)
!9655 = !DILocation(line: 1273, column: 33, scope: !1523)
!9656 = !DILocation(line: 1273, column: 16, scope: !1523)
!9657 = !DILocation(line: 1273, column: 14, scope: !1523)
!9658 = !DILocation(line: 1274, column: 14, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !1523, file: !490, line: 1274, column: 13)
!9660 = !DILocation(line: 1274, column: 13, scope: !1523)
!9661 = !DILocation(line: 1275, column: 13, scope: !9659)
!9662 = !DILocation(line: 1277, column: 30, scope: !1522)
!9663 = !DILocation(line: 1277, column: 15, scope: !1522)
!9664 = !DILocation(line: 1277, column: 38, scope: !1522)
!9665 = !DILocation(line: 1277, column: 47, scope: !1522)
!9666 = !DILocation(line: 1277, column: 13, scope: !1523)
!9667 = !DILocation(line: 1279, column: 29, scope: !1521)
!9668 = !DILocation(line: 1279, column: 13, scope: !1521)
!9669 = !DILocation(line: 1280, column: 13, scope: !1521)
!9670 = !DILocation(line: 1280, column: 18, scope: !9671)
!9671 = !DILexicalBlockFile(scope: !1520, file: !490, discriminator: 1)
!9672 = !DILocation(line: 1280, column: 28, scope: !1520)
!9673 = !DILocation(line: 1280, column: 58, scope: !1520)
!9674 = !DILocation(line: 1280, column: 73, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !1520, file: !490, line: 1280, column: 70)
!9676 = !DILocation(line: 1280, column: 90, scope: !9675)
!9677 = !DILocation(line: 1280, column: 70, scope: !9675)
!9678 = !DILocation(line: 1280, column: 100, scope: !9675)
!9679 = !DILocation(line: 1280, column: 70, scope: !1520)
!9680 = !DILocation(line: 1280, column: 70, scope: !9681)
!9681 = !DILexicalBlockFile(scope: !1520, file: !490, discriminator: 2)
!9682 = !DILocation(line: 1280, column: 131, scope: !9683)
!9683 = !DILexicalBlockFile(scope: !9675, file: !490, discriminator: 3)
!9684 = !DILocation(line: 1280, column: 149, scope: !9675)
!9685 = !DILocation(line: 1280, column: 159, scope: !9675)
!9686 = !DILocation(line: 1280, column: 184, scope: !9675)
!9687 = !DILocation(line: 1280, column: 115, scope: !9675)
!9688 = !DILocation(line: 1280, column: 203, scope: !9689)
!9689 = !DILexicalBlockFile(scope: !1521, file: !490, discriminator: 4)
!9690 = !DILocation(line: 1280, column: 203, scope: !1520)
!9691 = !DILocation(line: 1280, column: 203, scope: !9692)
!9692 = !DILexicalBlockFile(scope: !1520, file: !490, discriminator: 5)
!9693 = !DILocation(line: 1281, column: 13, scope: !1521)
!9694 = !DILocation(line: 1284, column: 9, scope: !1523)
!9695 = !DILocation(line: 1284, column: 14, scope: !9696)
!9696 = !DILexicalBlockFile(scope: !1526, file: !490, discriminator: 1)
!9697 = !DILocation(line: 1284, column: 24, scope: !1526)
!9698 = !DILocation(line: 1284, column: 47, scope: !1526)
!9699 = !DILocation(line: 1284, column: 53, scope: !1526)
!9700 = !DILocation(line: 1284, column: 68, scope: !1530)
!9701 = !DILocation(line: 1284, column: 76, scope: !1530)
!9702 = !DILocation(line: 1284, column: 68, scope: !1526)
!9703 = !DILocation(line: 1284, column: 94, scope: !9704)
!9704 = !DILexicalBlockFile(scope: !1529, file: !490, discriminator: 2)
!9705 = !DILocation(line: 1284, column: 100, scope: !1529)
!9706 = !DILocation(line: 1284, column: 110, scope: !1529)
!9707 = !DILocation(line: 1284, column: 124, scope: !1529)
!9708 = !DILocation(line: 1284, column: 129, scope: !9709)
!9709 = !DILexicalBlockFile(scope: !1528, file: !490, discriminator: 4)
!9710 = !DILocation(line: 1284, column: 139, scope: !1528)
!9711 = !DILocation(line: 1284, column: 169, scope: !1528)
!9712 = !DILocation(line: 1284, column: 187, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !1528, file: !490, line: 1284, column: 184)
!9714 = !DILocation(line: 1284, column: 204, scope: !9713)
!9715 = !DILocation(line: 1284, column: 184, scope: !9713)
!9716 = !DILocation(line: 1284, column: 214, scope: !9713)
!9717 = !DILocation(line: 1284, column: 184, scope: !1528)
!9718 = !DILocation(line: 1284, column: 184, scope: !9719)
!9719 = !DILexicalBlockFile(scope: !1528, file: !490, discriminator: 5)
!9720 = !DILocation(line: 1284, column: 245, scope: !9721)
!9721 = !DILexicalBlockFile(scope: !9713, file: !490, discriminator: 6)
!9722 = !DILocation(line: 1284, column: 263, scope: !9713)
!9723 = !DILocation(line: 1284, column: 273, scope: !9713)
!9724 = !DILocation(line: 1284, column: 298, scope: !9713)
!9725 = !DILocation(line: 1284, column: 229, scope: !9713)
!9726 = !DILocation(line: 1284, column: 317, scope: !9727)
!9727 = !DILexicalBlockFile(scope: !1529, file: !490, discriminator: 7)
!9728 = !DILocation(line: 1284, column: 317, scope: !1528)
!9729 = !DILocation(line: 1284, column: 317, scope: !9730)
!9730 = !DILexicalBlockFile(scope: !1528, file: !490, discriminator: 8)
!9731 = !DILocation(line: 1284, column: 330, scope: !9732)
!9732 = !DILexicalBlockFile(scope: !1529, file: !490, discriminator: 9)
!9733 = !DILocation(line: 1284, column: 332, scope: !9734)
!9734 = !DILexicalBlockFile(scope: !9735, file: !490, discriminator: 10)
!9735 = !DILexicalBlockFile(scope: !1523, file: !490, discriminator: 3)
!9736 = !DILocation(line: 1284, column: 332, scope: !1526)
!9737 = !DILocation(line: 1284, column: 332, scope: !9738)
!9738 = !DILexicalBlockFile(scope: !1526, file: !490, discriminator: 11)
!9739 = !DILocation(line: 1285, column: 46, scope: !1523)
!9740 = !DILocation(line: 1285, column: 28, scope: !1523)
!9741 = !DILocation(line: 1285, column: 54, scope: !1523)
!9742 = !DILocation(line: 1285, column: 27, scope: !1523)
!9743 = !DILocation(line: 1285, column: 9, scope: !1523)
!9744 = !DILocation(line: 1285, column: 15, scope: !1523)
!9745 = !DILocation(line: 1285, column: 24, scope: !1523)
!9746 = !DILocation(line: 1286, column: 25, scope: !1523)
!9747 = !DILocation(line: 1286, column: 31, scope: !1523)
!9748 = !DILocation(line: 1286, column: 43, scope: !1523)
!9749 = !DILocation(line: 1286, column: 52, scope: !1523)
!9750 = !DILocation(line: 1288, column: 9, scope: !1523)
!9751 = !DILocation(line: 1288, column: 14, scope: !9752)
!9752 = !DILexicalBlockFile(scope: !1532, file: !490, discriminator: 1)
!9753 = !DILocation(line: 1288, column: 24, scope: !1532)
!9754 = !DILocation(line: 1288, column: 47, scope: !1532)
!9755 = !DILocation(line: 1288, column: 53, scope: !1532)
!9756 = !DILocation(line: 1288, column: 66, scope: !1536)
!9757 = !DILocation(line: 1288, column: 74, scope: !1536)
!9758 = !DILocation(line: 1288, column: 66, scope: !1532)
!9759 = !DILocation(line: 1288, column: 92, scope: !9760)
!9760 = !DILexicalBlockFile(scope: !1535, file: !490, discriminator: 2)
!9761 = !DILocation(line: 1288, column: 98, scope: !1535)
!9762 = !DILocation(line: 1288, column: 106, scope: !1535)
!9763 = !DILocation(line: 1288, column: 120, scope: !1535)
!9764 = !DILocation(line: 1288, column: 125, scope: !9765)
!9765 = !DILexicalBlockFile(scope: !1534, file: !490, discriminator: 4)
!9766 = !DILocation(line: 1288, column: 135, scope: !1534)
!9767 = !DILocation(line: 1288, column: 165, scope: !1534)
!9768 = !DILocation(line: 1288, column: 183, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !1534, file: !490, line: 1288, column: 180)
!9770 = !DILocation(line: 1288, column: 200, scope: !9769)
!9771 = !DILocation(line: 1288, column: 180, scope: !9769)
!9772 = !DILocation(line: 1288, column: 210, scope: !9769)
!9773 = !DILocation(line: 1288, column: 180, scope: !1534)
!9774 = !DILocation(line: 1288, column: 180, scope: !9775)
!9775 = !DILexicalBlockFile(scope: !1534, file: !490, discriminator: 5)
!9776 = !DILocation(line: 1288, column: 241, scope: !9777)
!9777 = !DILexicalBlockFile(scope: !9769, file: !490, discriminator: 6)
!9778 = !DILocation(line: 1288, column: 259, scope: !9769)
!9779 = !DILocation(line: 1288, column: 269, scope: !9769)
!9780 = !DILocation(line: 1288, column: 294, scope: !9769)
!9781 = !DILocation(line: 1288, column: 225, scope: !9769)
!9782 = !DILocation(line: 1288, column: 313, scope: !9783)
!9783 = !DILexicalBlockFile(scope: !1535, file: !490, discriminator: 7)
!9784 = !DILocation(line: 1288, column: 313, scope: !1534)
!9785 = !DILocation(line: 1288, column: 313, scope: !9786)
!9786 = !DILexicalBlockFile(scope: !1534, file: !490, discriminator: 8)
!9787 = !DILocation(line: 1288, column: 326, scope: !9788)
!9788 = !DILexicalBlockFile(scope: !1535, file: !490, discriminator: 9)
!9789 = !DILocation(line: 1288, column: 328, scope: !9734)
!9790 = !DILocation(line: 1288, column: 328, scope: !1532)
!9791 = !DILocation(line: 1288, column: 328, scope: !9792)
!9792 = !DILexicalBlockFile(scope: !1532, file: !490, discriminator: 11)
!9793 = !DILocation(line: 1289, column: 44, scope: !1523)
!9794 = !DILocation(line: 1289, column: 26, scope: !1523)
!9795 = !DILocation(line: 1289, column: 52, scope: !1523)
!9796 = !DILocation(line: 1289, column: 25, scope: !1523)
!9797 = !DILocation(line: 1289, column: 9, scope: !1523)
!9798 = !DILocation(line: 1289, column: 15, scope: !1523)
!9799 = !DILocation(line: 1289, column: 22, scope: !1523)
!9800 = !DILocation(line: 1290, column: 25, scope: !1523)
!9801 = !DILocation(line: 1290, column: 31, scope: !1523)
!9802 = !DILocation(line: 1290, column: 41, scope: !1523)
!9803 = !DILocation(line: 1290, column: 50, scope: !1523)
!9804 = !DILocation(line: 1292, column: 9, scope: !1523)
!9805 = !DILocation(line: 1292, column: 14, scope: !9806)
!9806 = !DILexicalBlockFile(scope: !1538, file: !490, discriminator: 1)
!9807 = !DILocation(line: 1292, column: 24, scope: !1538)
!9808 = !DILocation(line: 1292, column: 47, scope: !1538)
!9809 = !DILocation(line: 1292, column: 53, scope: !1538)
!9810 = !DILocation(line: 1292, column: 66, scope: !1542)
!9811 = !DILocation(line: 1292, column: 74, scope: !1542)
!9812 = !DILocation(line: 1292, column: 66, scope: !1538)
!9813 = !DILocation(line: 1292, column: 92, scope: !9814)
!9814 = !DILexicalBlockFile(scope: !1541, file: !490, discriminator: 2)
!9815 = !DILocation(line: 1292, column: 98, scope: !1541)
!9816 = !DILocation(line: 1292, column: 106, scope: !1541)
!9817 = !DILocation(line: 1292, column: 120, scope: !1541)
!9818 = !DILocation(line: 1292, column: 125, scope: !9819)
!9819 = !DILexicalBlockFile(scope: !1540, file: !490, discriminator: 4)
!9820 = !DILocation(line: 1292, column: 135, scope: !1540)
!9821 = !DILocation(line: 1292, column: 165, scope: !1540)
!9822 = !DILocation(line: 1292, column: 183, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !1540, file: !490, line: 1292, column: 180)
!9824 = !DILocation(line: 1292, column: 200, scope: !9823)
!9825 = !DILocation(line: 1292, column: 180, scope: !9823)
!9826 = !DILocation(line: 1292, column: 210, scope: !9823)
!9827 = !DILocation(line: 1292, column: 180, scope: !1540)
!9828 = !DILocation(line: 1292, column: 180, scope: !9829)
!9829 = !DILexicalBlockFile(scope: !1540, file: !490, discriminator: 5)
!9830 = !DILocation(line: 1292, column: 241, scope: !9831)
!9831 = !DILexicalBlockFile(scope: !9823, file: !490, discriminator: 6)
!9832 = !DILocation(line: 1292, column: 259, scope: !9823)
!9833 = !DILocation(line: 1292, column: 269, scope: !9823)
!9834 = !DILocation(line: 1292, column: 294, scope: !9823)
!9835 = !DILocation(line: 1292, column: 225, scope: !9823)
!9836 = !DILocation(line: 1292, column: 313, scope: !9837)
!9837 = !DILexicalBlockFile(scope: !1541, file: !490, discriminator: 7)
!9838 = !DILocation(line: 1292, column: 313, scope: !1540)
!9839 = !DILocation(line: 1292, column: 313, scope: !9840)
!9840 = !DILexicalBlockFile(scope: !1540, file: !490, discriminator: 8)
!9841 = !DILocation(line: 1292, column: 326, scope: !9842)
!9842 = !DILexicalBlockFile(scope: !1541, file: !490, discriminator: 9)
!9843 = !DILocation(line: 1292, column: 328, scope: !9734)
!9844 = !DILocation(line: 1292, column: 328, scope: !1538)
!9845 = !DILocation(line: 1292, column: 328, scope: !9846)
!9846 = !DILexicalBlockFile(scope: !1538, file: !490, discriminator: 11)
!9847 = !DILocation(line: 1293, column: 44, scope: !1523)
!9848 = !DILocation(line: 1293, column: 26, scope: !1523)
!9849 = !DILocation(line: 1293, column: 52, scope: !1523)
!9850 = !DILocation(line: 1293, column: 25, scope: !1523)
!9851 = !DILocation(line: 1293, column: 9, scope: !1523)
!9852 = !DILocation(line: 1293, column: 15, scope: !1523)
!9853 = !DILocation(line: 1293, column: 22, scope: !1523)
!9854 = !DILocation(line: 1294, column: 25, scope: !1523)
!9855 = !DILocation(line: 1294, column: 31, scope: !1523)
!9856 = !DILocation(line: 1294, column: 41, scope: !1523)
!9857 = !DILocation(line: 1294, column: 50, scope: !1523)
!9858 = !DILocation(line: 1296, column: 9, scope: !1523)
!9859 = !DILocation(line: 1296, column: 14, scope: !9860)
!9860 = !DILexicalBlockFile(scope: !1544, file: !490, discriminator: 1)
!9861 = !DILocation(line: 1296, column: 24, scope: !1544)
!9862 = !DILocation(line: 1296, column: 47, scope: !1544)
!9863 = !DILocation(line: 1296, column: 53, scope: !1544)
!9864 = !DILocation(line: 1296, column: 64, scope: !1548)
!9865 = !DILocation(line: 1296, column: 72, scope: !1548)
!9866 = !DILocation(line: 1296, column: 64, scope: !1544)
!9867 = !DILocation(line: 1296, column: 90, scope: !9868)
!9868 = !DILexicalBlockFile(scope: !1547, file: !490, discriminator: 2)
!9869 = !DILocation(line: 1296, column: 96, scope: !1547)
!9870 = !DILocation(line: 1296, column: 102, scope: !1547)
!9871 = !DILocation(line: 1296, column: 116, scope: !1547)
!9872 = !DILocation(line: 1296, column: 121, scope: !9873)
!9873 = !DILexicalBlockFile(scope: !1546, file: !490, discriminator: 4)
!9874 = !DILocation(line: 1296, column: 131, scope: !1546)
!9875 = !DILocation(line: 1296, column: 161, scope: !1546)
!9876 = !DILocation(line: 1296, column: 179, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !1546, file: !490, line: 1296, column: 176)
!9878 = !DILocation(line: 1296, column: 196, scope: !9877)
!9879 = !DILocation(line: 1296, column: 176, scope: !9877)
!9880 = !DILocation(line: 1296, column: 206, scope: !9877)
!9881 = !DILocation(line: 1296, column: 176, scope: !1546)
!9882 = !DILocation(line: 1296, column: 176, scope: !9883)
!9883 = !DILexicalBlockFile(scope: !1546, file: !490, discriminator: 5)
!9884 = !DILocation(line: 1296, column: 237, scope: !9885)
!9885 = !DILexicalBlockFile(scope: !9877, file: !490, discriminator: 6)
!9886 = !DILocation(line: 1296, column: 255, scope: !9877)
!9887 = !DILocation(line: 1296, column: 265, scope: !9877)
!9888 = !DILocation(line: 1296, column: 290, scope: !9877)
!9889 = !DILocation(line: 1296, column: 221, scope: !9877)
!9890 = !DILocation(line: 1296, column: 309, scope: !9891)
!9891 = !DILexicalBlockFile(scope: !1547, file: !490, discriminator: 7)
!9892 = !DILocation(line: 1296, column: 309, scope: !1546)
!9893 = !DILocation(line: 1296, column: 309, scope: !9894)
!9894 = !DILexicalBlockFile(scope: !1546, file: !490, discriminator: 8)
!9895 = !DILocation(line: 1296, column: 322, scope: !9896)
!9896 = !DILexicalBlockFile(scope: !1547, file: !490, discriminator: 9)
!9897 = !DILocation(line: 1296, column: 324, scope: !9734)
!9898 = !DILocation(line: 1296, column: 324, scope: !1544)
!9899 = !DILocation(line: 1296, column: 324, scope: !9900)
!9900 = !DILexicalBlockFile(scope: !1544, file: !490, discriminator: 11)
!9901 = !DILocation(line: 1297, column: 42, scope: !1523)
!9902 = !DILocation(line: 1297, column: 24, scope: !1523)
!9903 = !DILocation(line: 1297, column: 50, scope: !1523)
!9904 = !DILocation(line: 1297, column: 23, scope: !1523)
!9905 = !DILocation(line: 1297, column: 9, scope: !1523)
!9906 = !DILocation(line: 1297, column: 15, scope: !1523)
!9907 = !DILocation(line: 1297, column: 20, scope: !1523)
!9908 = !DILocation(line: 1298, column: 25, scope: !1523)
!9909 = !DILocation(line: 1298, column: 31, scope: !1523)
!9910 = !DILocation(line: 1298, column: 39, scope: !1523)
!9911 = !DILocation(line: 1298, column: 48, scope: !1523)
!9912 = !DILocation(line: 1300, column: 9, scope: !1523)
!9913 = !DILocation(line: 1300, column: 14, scope: !9914)
!9914 = !DILexicalBlockFile(scope: !1550, file: !490, discriminator: 1)
!9915 = !DILocation(line: 1300, column: 24, scope: !1550)
!9916 = !DILocation(line: 1300, column: 54, scope: !1550)
!9917 = !DILocation(line: 1300, column: 69, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !1550, file: !490, line: 1300, column: 66)
!9919 = !DILocation(line: 1300, column: 86, scope: !9918)
!9920 = !DILocation(line: 1300, column: 66, scope: !9918)
!9921 = !DILocation(line: 1300, column: 96, scope: !9918)
!9922 = !DILocation(line: 1300, column: 66, scope: !1550)
!9923 = !DILocation(line: 1300, column: 66, scope: !9924)
!9924 = !DILexicalBlockFile(scope: !1550, file: !490, discriminator: 2)
!9925 = !DILocation(line: 1300, column: 127, scope: !9926)
!9926 = !DILexicalBlockFile(scope: !9918, file: !490, discriminator: 3)
!9927 = !DILocation(line: 1300, column: 145, scope: !9918)
!9928 = !DILocation(line: 1300, column: 155, scope: !9918)
!9929 = !DILocation(line: 1300, column: 180, scope: !9918)
!9930 = !DILocation(line: 1300, column: 111, scope: !9918)
!9931 = !DILocation(line: 1300, column: 199, scope: !9932)
!9932 = !DILexicalBlockFile(scope: !1523, file: !490, discriminator: 4)
!9933 = !DILocation(line: 1300, column: 199, scope: !1550)
!9934 = !DILocation(line: 1300, column: 199, scope: !9935)
!9935 = !DILexicalBlockFile(scope: !1550, file: !490, discriminator: 5)
!9936 = !DILocation(line: 1301, column: 5, scope: !1523)
!9937 = !DILocation(line: 1302, column: 5, scope: !1502)
!9938 = !DILocation(line: 1303, column: 1, scope: !1502)
!9939 = !DILocation(line: 1341, column: 23, scope: !1422)
!9940 = !DILocation(line: 1343, column: 5, scope: !1422)
!9941 = !DILocation(line: 1343, column: 16, scope: !1422)
!9942 = !DILocation(line: 1343, column: 19, scope: !1422)
!9943 = !DILocation(line: 1343, column: 25, scope: !1422)
!9944 = !DILocation(line: 1344, column: 5, scope: !1422)
!9945 = !DILocation(line: 1344, column: 9, scope: !1422)
!9946 = !DILocation(line: 1345, column: 5, scope: !1422)
!9947 = !DILocation(line: 1345, column: 11, scope: !1422)
!9948 = !DILocation(line: 1347, column: 43, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !1422, file: !490, line: 1347, column: 9)
!9950 = !DILocation(line: 1347, column: 27, scope: !9949)
!9951 = !DILocation(line: 1347, column: 50, scope: !9949)
!9952 = !DILocation(line: 1347, column: 56, scope: !9949)
!9953 = !DILocation(line: 1347, column: 25, scope: !9949)
!9954 = !DILocation(line: 1347, column: 25, scope: !9955)
!9955 = !DILexicalBlockFile(scope: !9949, file: !490, discriminator: 1)
!9956 = !DILocation(line: 1347, column: 99, scope: !9957)
!9957 = !DILexicalBlockFile(scope: !9949, file: !490, discriminator: 2)
!9958 = !DILocation(line: 1347, column: 69, scope: !9949)
!9959 = !DILocation(line: 1347, column: 22, scope: !9960)
!9960 = !DILexicalBlockFile(scope: !9961, file: !490, discriminator: 4)
!9961 = !DILexicalBlockFile(scope: !9949, file: !490, discriminator: 3)
!9962 = !DILocation(line: 1347, column: 9, scope: !1422)
!9963 = !DILocation(line: 1348, column: 9, scope: !9949)
!9964 = !DILocation(line: 1349, column: 60, scope: !1422)
!9965 = !DILocation(line: 1349, column: 42, scope: !1422)
!9966 = !DILocation(line: 1349, column: 68, scope: !1422)
!9967 = !DILocation(line: 1349, column: 74, scope: !1422)
!9968 = !DILocation(line: 1349, column: 10, scope: !1422)
!9969 = !DILocation(line: 1350, column: 46, scope: !1422)
!9970 = !DILocation(line: 1350, column: 29, scope: !1422)
!9971 = !DILocation(line: 1350, column: 54, scope: !1422)
!9972 = !DILocation(line: 1350, column: 60, scope: !1422)
!9973 = !DILocation(line: 1350, column: 27, scope: !1422)
!9974 = !DILocation(line: 1350, column: 118, scope: !9975)
!9975 = !DILexicalBlockFile(scope: !1422, file: !490, discriminator: 1)
!9976 = !DILocation(line: 1350, column: 102, scope: !1422)
!9977 = !DILocation(line: 1350, column: 125, scope: !1422)
!9978 = !DILocation(line: 1350, column: 131, scope: !1422)
!9979 = !DILocation(line: 1350, column: 72, scope: !1422)
!9980 = !DILocation(line: 1350, column: 166, scope: !9981)
!9981 = !DILexicalBlockFile(scope: !1422, file: !490, discriminator: 3)
!9982 = !DILocation(line: 1350, column: 149, scope: !1422)
!9983 = !DILocation(line: 1350, column: 172, scope: !1422)
!9984 = !DILocation(line: 1350, column: 141, scope: !1422)
!9985 = !DILocation(line: 1350, column: 215, scope: !9986)
!9986 = !DILexicalBlockFile(scope: !1422, file: !490, discriminator: 4)
!9987 = !DILocation(line: 1350, column: 189, scope: !1422)
!9988 = !DILocation(line: 1350, column: 221, scope: !1422)
!9989 = !DILocation(line: 1350, column: 181, scope: !1422)
!9990 = !DILocation(line: 1350, column: 27, scope: !9991)
!9991 = !DILexicalBlockFile(scope: !9992, file: !490, discriminator: 6)
!9992 = !DILexicalBlockFile(scope: !1422, file: !490, discriminator: 5)
!9993 = !DILocation(line: 1350, column: 268, scope: !9994)
!9994 = !DILexicalBlockFile(scope: !1422, file: !490, discriminator: 2)
!9995 = !DILocation(line: 1350, column: 248, scope: !1422)
!9996 = !DILocation(line: 1350, column: 276, scope: !1422)
!9997 = !DILocation(line: 1350, column: 281, scope: !1422)
!9998 = !DILocation(line: 1350, column: 10, scope: !9999)
!9999 = !DILexicalBlockFile(scope: !10000, file: !490, discriminator: 8)
!10000 = !DILexicalBlockFile(scope: !1422, file: !490, discriminator: 7)
!10001 = !DILocation(line: 1351, column: 60, scope: !1422)
!10002 = !DILocation(line: 1351, column: 42, scope: !1422)
!10003 = !DILocation(line: 1351, column: 68, scope: !1422)
!10004 = !DILocation(line: 1351, column: 10, scope: !1422)
!10005 = !DILocation(line: 1352, column: 12, scope: !1422)
!10006 = !DILocation(line: 1353, column: 10, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !1422, file: !490, line: 1353, column: 5)
!10008 = !DILocation(line: 1353, column: 9, scope: !10007)
!10009 = !DILocation(line: 1353, column: 14, scope: !10010)
!10010 = !DILexicalBlockFile(scope: !10011, file: !490, discriminator: 2)
!10011 = !DILexicalBlockFile(scope: !10012, file: !490, discriminator: 1)
!10012 = distinct !DILexicalBlock(scope: !10007, file: !490, line: 1353, column: 5)
!10013 = !DILocation(line: 1353, column: 18, scope: !10012)
!10014 = !DILocation(line: 1353, column: 16, scope: !10012)
!10015 = !DILocation(line: 1353, column: 5, scope: !10007)
!10016 = !DILocation(line: 1354, column: 26, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10018, file: !490, line: 1354, column: 13)
!10018 = distinct !DILexicalBlock(scope: !10012, file: !490, line: 1353, column: 29)
!10019 = !DILocation(line: 1354, column: 32, scope: !10017)
!10020 = !DILocation(line: 1354, column: 25, scope: !10017)
!10021 = !DILocation(line: 1354, column: 85, scope: !10022)
!10022 = !DILexicalBlockFile(scope: !10017, file: !490, discriminator: 1)
!10023 = !DILocation(line: 1354, column: 77, scope: !10017)
!10024 = !DILocation(line: 1354, column: 58, scope: !10017)
!10025 = !{!1977, !1977, i64 0}
!10026 = !DILocation(line: 1354, column: 93, scope: !10027)
!10027 = !DILexicalBlockFile(scope: !10017, file: !490, discriminator: 2)
!10028 = !DILocation(line: 1354, column: 99, scope: !10017)
!10029 = !DILocation(line: 1354, column: 92, scope: !10017)
!10030 = !DILocation(line: 1354, column: 152, scope: !10031)
!10031 = !DILexicalBlockFile(scope: !10017, file: !490, discriminator: 4)
!10032 = !DILocation(line: 1354, column: 144, scope: !10017)
!10033 = !DILocation(line: 1354, column: 126, scope: !10017)
!10034 = !DILocation(line: 1354, column: 125, scope: !10017)
!10035 = !{!10036, !10036, i64 0}
!10036 = !{!"short", !1977, i64 0}
!10037 = !DILocation(line: 1354, column: 185, scope: !10038)
!10038 = !DILexicalBlockFile(scope: !10017, file: !490, discriminator: 5)
!10039 = !DILocation(line: 1354, column: 177, scope: !10017)
!10040 = !DILocation(line: 1354, column: 159, scope: !10017)
!10041 = !DILocation(line: 1354, column: 158, scope: !10017)
!10042 = !DILocation(line: 1354, column: 25, scope: !10043)
!10043 = !DILexicalBlockFile(scope: !10044, file: !490, discriminator: 7)
!10044 = !DILexicalBlockFile(scope: !10017, file: !490, discriminator: 6)
!10045 = !DILocation(line: 1354, column: 194, scope: !10046)
!10046 = !DILexicalBlockFile(scope: !10047, file: !490, discriminator: 8)
!10047 = !DILexicalBlockFile(scope: !10017, file: !490, discriminator: 3)
!10048 = !DILocation(line: 1354, column: 13, scope: !10018)
!10049 = !DILocation(line: 1355, column: 22, scope: !10017)
!10050 = !DILocation(line: 1355, column: 24, scope: !10017)
!10051 = !DILocation(line: 1355, column: 20, scope: !10017)
!10052 = !DILocation(line: 1355, column: 13, scope: !10017)
!10053 = !DILocation(line: 1356, column: 5, scope: !10018)
!10054 = !DILocation(line: 1353, column: 25, scope: !10012)
!10055 = !DILocation(line: 1353, column: 5, scope: !10012)
!10056 = !DILocation(line: 1357, column: 9, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !1422, file: !490, line: 1357, column: 9)
!10058 = !DILocation(line: 1357, column: 16, scope: !10057)
!10059 = !DILocation(line: 1357, column: 9, scope: !1422)
!10060 = !DILocation(line: 1358, column: 36, scope: !10057)
!10061 = !DILocation(line: 1358, column: 42, scope: !10057)
!10062 = !DILocation(line: 1358, column: 50, scope: !10057)
!10063 = !DILocation(line: 1358, column: 16, scope: !10057)
!10064 = !DILocation(line: 1358, column: 9, scope: !10057)
!10065 = !DILocation(line: 1360, column: 25, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10057, file: !490, line: 1359, column: 10)
!10067 = !DILocation(line: 1360, column: 33, scope: !10066)
!10068 = !DILocation(line: 1360, column: 42, scope: !10066)
!10069 = !DILocation(line: 1361, column: 16, scope: !10066)
!10070 = !DILocation(line: 1361, column: 9, scope: !10066)
!10071 = !DILocation(line: 1363, column: 1, scope: !1422)
!10072 = !DILocation(line: 1463, column: 37, scope: !1551)
!10073 = !DILocation(line: 1474, column: 26, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !1551, file: !490, line: 1474, column: 9)
!10075 = !DILocation(line: 1474, column: 32, scope: !10074)
!10076 = !DILocation(line: 1474, column: 11, scope: !10074)
!10077 = !DILocation(line: 1474, column: 40, scope: !10074)
!10078 = !DILocation(line: 1474, column: 49, scope: !10074)
!10079 = !DILocation(line: 1474, column: 9, scope: !1551)
!10080 = !DILocation(line: 1475, column: 50, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10074, file: !490, line: 1474, column: 55)
!10082 = !DILocation(line: 1475, column: 56, scope: !10081)
!10083 = !DILocation(line: 1475, column: 32, scope: !10081)
!10084 = !DILocation(line: 1475, column: 64, scope: !10081)
!10085 = !DILocation(line: 1475, column: 31, scope: !10081)
!10086 = !DILocation(line: 1475, column: 16, scope: !10081)
!10087 = !DILocation(line: 1475, column: 9, scope: !10081)
!10088 = !DILocation(line: 1477, column: 30, scope: !1551)
!10089 = !DILocation(line: 1477, column: 12, scope: !1551)
!10090 = !DILocation(line: 1477, column: 5, scope: !1551)
!10091 = !DILocation(line: 1478, column: 1, scope: !1551)
!10092 = !DILocation(line: 1761, column: 44, scope: !1577)
!10093 = !DILocation(line: 1763, column: 5, scope: !1577)
!10094 = !DILocation(line: 1763, column: 10, scope: !10095)
!10095 = !DILexicalBlockFile(scope: !1583, file: !490, discriminator: 1)
!10096 = !DILocation(line: 1763, column: 21, scope: !1583)
!10097 = !DILocation(line: 1763, column: 40, scope: !1583)
!10098 = !DILocation(line: 1763, column: 26, scope: !1583)
!10099 = !DILocation(line: 1763, column: 45, scope: !1583)
!10100 = !DILocation(line: 1763, column: 64, scope: !1583)
!10101 = !DILocation(line: 1763, column: 89, scope: !10102)
!10102 = !DILexicalBlockFile(scope: !10103, file: !490, discriminator: 2)
!10103 = distinct !DILexicalBlock(scope: !1583, file: !490, line: 1763, column: 67)
!10104 = !DILocation(line: 1763, column: 93, scope: !10103)
!10105 = !DILocation(line: 1763, column: 96, scope: !10103)
!10106 = !DILocation(line: 1763, column: 104, scope: !10103)
!10107 = !DILocation(line: 1763, column: 131, scope: !10103)
!10108 = !DILocation(line: 1763, column: 70, scope: !10103)
!10109 = !DILocation(line: 1763, column: 74, scope: !10103)
!10110 = !DILocation(line: 1763, column: 77, scope: !10103)
!10111 = !DILocation(line: 1763, column: 85, scope: !10103)
!10112 = !DILocation(line: 1763, column: 160, scope: !10103)
!10113 = !DILocation(line: 1763, column: 160, scope: !10114)
!10114 = !DILexicalBlockFile(scope: !10103, file: !490, discriminator: 3)
!10115 = !DILocation(line: 1763, column: 201, scope: !10116)
!10116 = !DILexicalBlockFile(scope: !1583, file: !490, discriminator: 4)
!10117 = !DILocation(line: 1763, column: 204, scope: !1583)
!10118 = !DILocation(line: 1763, column: 207, scope: !1583)
!10119 = !DILocation(line: 1763, column: 173, scope: !1583)
!10120 = !DILocation(line: 1763, column: 176, scope: !1583)
!10121 = !DILocation(line: 1763, column: 179, scope: !1583)
!10122 = !DILocation(line: 1763, column: 188, scope: !1583)
!10123 = !DILocation(line: 1763, column: 191, scope: !1583)
!10124 = !DILocation(line: 1763, column: 199, scope: !1583)
!10125 = !DILocation(line: 1763, column: 244, scope: !1583)
!10126 = !DILocation(line: 1763, column: 247, scope: !1583)
!10127 = !DILocation(line: 1763, column: 250, scope: !1583)
!10128 = !DILocation(line: 1763, column: 216, scope: !1583)
!10129 = !DILocation(line: 1763, column: 219, scope: !1583)
!10130 = !DILocation(line: 1763, column: 222, scope: !1583)
!10131 = !DILocation(line: 1763, column: 231, scope: !1583)
!10132 = !DILocation(line: 1763, column: 234, scope: !1583)
!10133 = !DILocation(line: 1763, column: 242, scope: !1583)
!10134 = !DILocation(line: 1763, column: 259, scope: !1583)
!10135 = !DILocation(line: 1763, column: 262, scope: !1583)
!10136 = !DILocation(line: 1763, column: 265, scope: !1583)
!10137 = !DILocation(line: 1763, column: 273, scope: !1583)
!10138 = !DILocation(line: 1763, column: 287, scope: !1577)
!10139 = !DILocation(line: 1763, column: 287, scope: !1583)
!10140 = !DILocation(line: 1764, column: 24, scope: !1577)
!10141 = !DILocation(line: 1764, column: 5, scope: !1577)
!10142 = !DILocation(line: 1765, column: 19, scope: !1577)
!10143 = !DILocation(line: 1765, column: 7, scope: !1577)
!10144 = !DILocation(line: 1765, column: 27, scope: !1577)
!10145 = !DILocation(line: 1765, column: 37, scope: !1577)
!10146 = !DILocation(line: 1765, column: 57, scope: !1577)
!10147 = !DILocation(line: 1765, column: 45, scope: !1577)
!10148 = !DILocation(line: 1765, column: 5, scope: !1577)
!10149 = !DILocation(line: 1766, column: 1, scope: !1577)
!10150 = !DILocation(line: 1833, column: 34, scope: !1584)
!10151 = !DILocation(line: 1835, column: 5, scope: !1584)
!10152 = !DILocation(line: 1835, column: 27, scope: !1584)
!10153 = !DILocation(line: 1835, column: 59, scope: !1584)
!10154 = !DILocation(line: 1835, column: 35, scope: !1584)
!10155 = !DILocation(line: 1836, column: 5, scope: !1584)
!10156 = !DILocation(line: 1836, column: 15, scope: !1584)
!10157 = !DILocation(line: 1837, column: 5, scope: !1584)
!10158 = !DILocation(line: 1837, column: 15, scope: !1584)
!10159 = !DILocation(line: 1838, column: 5, scope: !1584)
!10160 = !DILocation(line: 1838, column: 15, scope: !1584)
!10161 = !DILocation(line: 1840, column: 10, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !1584, file: !490, line: 1840, column: 9)
!10163 = !DILocation(line: 1840, column: 17, scope: !10162)
!10164 = !DILocation(line: 1840, column: 9, scope: !1584)
!10165 = !DILocation(line: 1842, column: 16, scope: !10162)
!10166 = !DILocation(line: 1842, column: 9, scope: !10162)
!10167 = !DILocation(line: 1846, column: 31, scope: !1584)
!10168 = !DILocation(line: 1846, column: 38, scope: !1584)
!10169 = !DILocation(line: 1846, column: 18, scope: !1584)
!10170 = !DILocation(line: 1846, column: 16, scope: !1584)
!10171 = !DILocation(line: 1847, column: 9, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !1584, file: !490, line: 1847, column: 9)
!10173 = !DILocation(line: 1847, column: 20, scope: !10172)
!10174 = !DILocation(line: 1847, column: 9, scope: !1584)
!10175 = !DILocation(line: 1848, column: 9, scope: !10172)
!10176 = !DILocation(line: 1849, column: 33, scope: !1584)
!10177 = !DILocation(line: 1849, column: 40, scope: !1584)
!10178 = !DILocation(line: 1849, column: 20, scope: !1584)
!10179 = !DILocation(line: 1849, column: 18, scope: !1584)
!10180 = !DILocation(line: 1850, column: 9, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !1584, file: !490, line: 1850, column: 9)
!10182 = !DILocation(line: 1850, column: 22, scope: !10181)
!10183 = !DILocation(line: 1850, column: 9, scope: !1584)
!10184 = !DILocation(line: 1851, column: 9, scope: !10181)
!10185 = !DILocation(line: 1853, column: 9, scope: !1593)
!10186 = !DILocation(line: 1853, column: 16, scope: !1593)
!10187 = !DILocation(line: 1853, column: 72, scope: !1593)
!10188 = !DILocation(line: 1853, column: 79, scope: !1593)
!10189 = !DILocation(line: 1853, column: 54, scope: !1593)
!10190 = !DILocation(line: 1853, column: 89, scope: !1593)
!10191 = !DILocation(line: 1853, column: 22, scope: !1593)
!10192 = !DILocation(line: 1853, column: 97, scope: !1593)
!10193 = !DILocation(line: 1853, column: 100, scope: !10194)
!10194 = !DILexicalBlockFile(scope: !1593, file: !490, discriminator: 1)
!10195 = !DILocation(line: 1853, column: 107, scope: !1593)
!10196 = !DILocation(line: 1853, column: 114, scope: !1593)
!10197 = !DILocation(line: 1853, column: 121, scope: !1593)
!10198 = !DILocation(line: 1853, column: 126, scope: !1593)
!10199 = !DILocation(line: 1853, column: 111, scope: !1593)
!10200 = !DILocation(line: 1853, column: 9, scope: !1584)
!10201 = !DILocation(line: 1854, column: 9, scope: !1592)
!10202 = !DILocation(line: 1854, column: 17, scope: !1592)
!10203 = !DILocation(line: 1854, column: 46, scope: !1592)
!10204 = !DILocation(line: 1854, column: 53, scope: !1592)
!10205 = !DILocation(line: 1854, column: 61, scope: !1592)
!10206 = !DILocation(line: 1854, column: 68, scope: !1592)
!10207 = !DILocation(line: 1854, column: 27, scope: !1592)
!10208 = !DILocation(line: 1855, column: 9, scope: !1592)
!10209 = !DILocation(line: 1855, column: 21, scope: !1592)
!10210 = !DILocation(line: 1856, column: 13, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !1592, file: !490, line: 1856, column: 13)
!10212 = !DILocation(line: 1856, column: 21, scope: !10211)
!10213 = !DILocation(line: 1856, column: 13, scope: !1592)
!10214 = !DILocation(line: 1857, column: 17, scope: !10211)
!10215 = !DILocation(line: 1857, column: 13, scope: !10211)
!10216 = !DILocation(line: 1858, column: 18, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10211, file: !490, line: 1858, column: 18)
!10218 = !DILocation(line: 1858, column: 26, scope: !10217)
!10219 = !DILocation(line: 1858, column: 18, scope: !10211)
!10220 = !DILocation(line: 1859, column: 17, scope: !10217)
!10221 = !DILocation(line: 1859, column: 13, scope: !10217)
!10222 = !DILocation(line: 1861, column: 17, scope: !10217)
!10223 = !DILocation(line: 1863, column: 13, scope: !1592)
!10224 = !DILocation(line: 1864, column: 13, scope: !1592)
!10225 = !DILocation(line: 1865, column: 18, scope: !1592)
!10226 = !DILocation(line: 1866, column: 13, scope: !1592)
!10227 = !DILocation(line: 1866, column: 20, scope: !1592)
!10228 = !DILocation(line: 1867, column: 13, scope: !1592)
!10229 = !DILocation(line: 1862, column: 18, scope: !1592)
!10230 = !DILocation(line: 1862, column: 16, scope: !1592)
!10231 = !DILocation(line: 1868, column: 5, scope: !1593)
!10232 = !DILocation(line: 1868, column: 5, scope: !1592)
!10233 = !DILocation(line: 1872, column: 13, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !1593, file: !490, line: 1869, column: 10)
!10235 = !DILocation(line: 1873, column: 13, scope: !10234)
!10236 = !DILocation(line: 1873, column: 20, scope: !10234)
!10237 = !DILocation(line: 1874, column: 13, scope: !10234)
!10238 = !DILocation(line: 1874, column: 20, scope: !10234)
!10239 = !DILocation(line: 1874, column: 23, scope: !10234)
!10240 = !DILocation(line: 1875, column: 13, scope: !10234)
!10241 = !DILocation(line: 1870, column: 18, scope: !10234)
!10242 = !DILocation(line: 1870, column: 16, scope: !10234)
!10243 = !DILocation(line: 1853, column: 127, scope: !1593)
!10244 = !DILocation(line: 1878, column: 5, scope: !1584)
!10245 = !DILocation(line: 1878, column: 10, scope: !10246)
!10246 = !DILexicalBlockFile(scope: !1596, file: !490, discriminator: 1)
!10247 = !DILocation(line: 1878, column: 20, scope: !1596)
!10248 = !DILocation(line: 1878, column: 51, scope: !1596)
!10249 = !DILocation(line: 1878, column: 68, scope: !1599)
!10250 = !DILocation(line: 1878, column: 84, scope: !1599)
!10251 = !DILocation(line: 1878, column: 68, scope: !1596)
!10252 = !DILocation(line: 1878, column: 99, scope: !10253)
!10253 = !DILexicalBlockFile(scope: !1599, file: !490, discriminator: 2)
!10254 = !DILocation(line: 1878, column: 104, scope: !10255)
!10255 = !DILexicalBlockFile(scope: !1598, file: !490, discriminator: 4)
!10256 = !DILocation(line: 1878, column: 114, scope: !1598)
!10257 = !DILocation(line: 1878, column: 144, scope: !1598)
!10258 = !DILocation(line: 1878, column: 170, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !1598, file: !490, line: 1878, column: 167)
!10260 = !DILocation(line: 1878, column: 187, scope: !10259)
!10261 = !DILocation(line: 1878, column: 167, scope: !10259)
!10262 = !DILocation(line: 1878, column: 197, scope: !10259)
!10263 = !DILocation(line: 1878, column: 167, scope: !1598)
!10264 = !DILocation(line: 1878, column: 167, scope: !10265)
!10265 = !DILexicalBlockFile(scope: !1598, file: !490, discriminator: 5)
!10266 = !DILocation(line: 1878, column: 228, scope: !10267)
!10267 = !DILexicalBlockFile(scope: !10259, file: !490, discriminator: 6)
!10268 = !DILocation(line: 1878, column: 246, scope: !10259)
!10269 = !DILocation(line: 1878, column: 256, scope: !10259)
!10270 = !DILocation(line: 1878, column: 281, scope: !10259)
!10271 = !DILocation(line: 1878, column: 212, scope: !10259)
!10272 = !DILocation(line: 1878, column: 300, scope: !10273)
!10273 = !DILexicalBlockFile(scope: !1599, file: !490, discriminator: 7)
!10274 = !DILocation(line: 1878, column: 300, scope: !1598)
!10275 = !DILocation(line: 1878, column: 300, scope: !10276)
!10276 = !DILexicalBlockFile(scope: !1598, file: !490, discriminator: 8)
!10277 = !DILocation(line: 1878, column: 300, scope: !10278)
!10278 = !DILexicalBlockFile(scope: !1598, file: !490, discriminator: 9)
!10279 = !DILocation(line: 1878, column: 313, scope: !10280)
!10280 = !DILexicalBlockFile(scope: !10281, file: !490, discriminator: 10)
!10281 = !DILexicalBlockFile(scope: !1584, file: !490, discriminator: 3)
!10282 = !DILocation(line: 1878, column: 313, scope: !1596)
!10283 = !DILocation(line: 1878, column: 313, scope: !10284)
!10284 = !DILexicalBlockFile(scope: !1596, file: !490, discriminator: 11)
!10285 = !DILocation(line: 1879, column: 5, scope: !1584)
!10286 = !DILocation(line: 1879, column: 10, scope: !10287)
!10287 = !DILexicalBlockFile(scope: !1601, file: !490, discriminator: 1)
!10288 = !DILocation(line: 1879, column: 20, scope: !1601)
!10289 = !DILocation(line: 1879, column: 51, scope: !1601)
!10290 = !DILocation(line: 1879, column: 70, scope: !1604)
!10291 = !DILocation(line: 1879, column: 86, scope: !1604)
!10292 = !DILocation(line: 1879, column: 70, scope: !1601)
!10293 = !DILocation(line: 1879, column: 101, scope: !10294)
!10294 = !DILexicalBlockFile(scope: !1604, file: !490, discriminator: 2)
!10295 = !DILocation(line: 1879, column: 106, scope: !10296)
!10296 = !DILexicalBlockFile(scope: !1603, file: !490, discriminator: 4)
!10297 = !DILocation(line: 1879, column: 116, scope: !1603)
!10298 = !DILocation(line: 1879, column: 146, scope: !1603)
!10299 = !DILocation(line: 1879, column: 172, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !1603, file: !490, line: 1879, column: 169)
!10301 = !DILocation(line: 1879, column: 189, scope: !10300)
!10302 = !DILocation(line: 1879, column: 169, scope: !10300)
!10303 = !DILocation(line: 1879, column: 199, scope: !10300)
!10304 = !DILocation(line: 1879, column: 169, scope: !1603)
!10305 = !DILocation(line: 1879, column: 169, scope: !10306)
!10306 = !DILexicalBlockFile(scope: !1603, file: !490, discriminator: 5)
!10307 = !DILocation(line: 1879, column: 230, scope: !10308)
!10308 = !DILexicalBlockFile(scope: !10300, file: !490, discriminator: 6)
!10309 = !DILocation(line: 1879, column: 248, scope: !10300)
!10310 = !DILocation(line: 1879, column: 258, scope: !10300)
!10311 = !DILocation(line: 1879, column: 283, scope: !10300)
!10312 = !DILocation(line: 1879, column: 214, scope: !10300)
!10313 = !DILocation(line: 1879, column: 302, scope: !10314)
!10314 = !DILexicalBlockFile(scope: !1604, file: !490, discriminator: 7)
!10315 = !DILocation(line: 1879, column: 302, scope: !1603)
!10316 = !DILocation(line: 1879, column: 302, scope: !10317)
!10317 = !DILexicalBlockFile(scope: !1603, file: !490, discriminator: 8)
!10318 = !DILocation(line: 1879, column: 302, scope: !10319)
!10319 = !DILexicalBlockFile(scope: !1603, file: !490, discriminator: 9)
!10320 = !DILocation(line: 1879, column: 315, scope: !10280)
!10321 = !DILocation(line: 1879, column: 315, scope: !1601)
!10322 = !DILocation(line: 1879, column: 315, scope: !10323)
!10323 = !DILexicalBlockFile(scope: !1601, file: !490, discriminator: 11)
!10324 = !DILocation(line: 1880, column: 12, scope: !1584)
!10325 = !DILocation(line: 1880, column: 5, scope: !1584)
!10326 = !DILocation(line: 1881, column: 1, scope: !1584)
!10327 = !DILocation(line: 1769, column: 45, scope: !1605)
!10328 = !DILocation(line: 1769, column: 61, scope: !1605)
!10329 = !DILocation(line: 1769, column: 74, scope: !1605)
!10330 = !DILocation(line: 1771, column: 5, scope: !1605)
!10331 = !DILocation(line: 1771, column: 14, scope: !10332)
!10332 = !DILexicalBlockFile(scope: !1614, file: !490, discriminator: 1)
!10333 = !DILocation(line: 1771, column: 20, scope: !1614)
!10334 = !DILocation(line: 1771, column: 14, scope: !1614)
!10335 = !DILocation(line: 1771, column: 14, scope: !1615)
!10336 = !DILocation(line: 1771, column: 32, scope: !10337)
!10337 = !DILexicalBlockFile(scope: !1613, file: !490, discriminator: 2)
!10338 = !DILocation(line: 1771, column: 36, scope: !1613)
!10339 = !DILocation(line: 1771, column: 43, scope: !1613)
!10340 = !DILocation(line: 1771, column: 62, scope: !1613)
!10341 = !DILocation(line: 1771, column: 68, scope: !1613)
!10342 = !DILocation(line: 1771, column: 79, scope: !1613)
!10343 = !DILocation(line: 1771, column: 89, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !1613, file: !490, line: 1771, column: 89)
!10345 = !DILocation(line: 1771, column: 89, scope: !1613)
!10346 = !DILocation(line: 1771, column: 102, scope: !10347)
!10347 = !DILexicalBlockFile(scope: !10344, file: !490, discriminator: 4)
!10348 = !DILocation(line: 1771, column: 95, scope: !10344)
!10349 = !DILocation(line: 1771, column: 108, scope: !10350)
!10350 = !DILexicalBlockFile(scope: !1614, file: !490, discriminator: 5)
!10351 = !DILocation(line: 1771, column: 108, scope: !10352)
!10352 = !DILexicalBlockFile(scope: !10353, file: !490, discriminator: 7)
!10353 = !DILexicalBlockFile(scope: !1614, file: !490, discriminator: 6)
!10354 = !DILocation(line: 1771, column: 108, scope: !1613)
!10355 = !DILocation(line: 1771, column: 110, scope: !10356)
!10356 = !DILexicalBlockFile(scope: !10357, file: !490, discriminator: 8)
!10357 = !DILexicalBlockFile(scope: !1615, file: !490, discriminator: 3)
!10358 = !DILocation(line: 1772, column: 5, scope: !1605)
!10359 = !DILocation(line: 1772, column: 14, scope: !10360)
!10360 = !DILexicalBlockFile(scope: !1618, file: !490, discriminator: 1)
!10361 = !DILocation(line: 1772, column: 20, scope: !1618)
!10362 = !DILocation(line: 1772, column: 14, scope: !1618)
!10363 = !DILocation(line: 1772, column: 14, scope: !1619)
!10364 = !DILocation(line: 1772, column: 30, scope: !10365)
!10365 = !DILexicalBlockFile(scope: !1617, file: !490, discriminator: 2)
!10366 = !DILocation(line: 1772, column: 34, scope: !1617)
!10367 = !DILocation(line: 1772, column: 41, scope: !1617)
!10368 = !DILocation(line: 1772, column: 60, scope: !1617)
!10369 = !DILocation(line: 1772, column: 66, scope: !1617)
!10370 = !DILocation(line: 1772, column: 75, scope: !1617)
!10371 = !DILocation(line: 1772, column: 85, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !1617, file: !490, line: 1772, column: 85)
!10373 = !DILocation(line: 1772, column: 85, scope: !1617)
!10374 = !DILocation(line: 1772, column: 98, scope: !10375)
!10375 = !DILexicalBlockFile(scope: !10372, file: !490, discriminator: 4)
!10376 = !DILocation(line: 1772, column: 91, scope: !10372)
!10377 = !DILocation(line: 1772, column: 104, scope: !10378)
!10378 = !DILexicalBlockFile(scope: !1618, file: !490, discriminator: 5)
!10379 = !DILocation(line: 1772, column: 104, scope: !10380)
!10380 = !DILexicalBlockFile(scope: !10381, file: !490, discriminator: 7)
!10381 = !DILexicalBlockFile(scope: !1618, file: !490, discriminator: 6)
!10382 = !DILocation(line: 1772, column: 104, scope: !1617)
!10383 = !DILocation(line: 1772, column: 106, scope: !10384)
!10384 = !DILexicalBlockFile(scope: !10385, file: !490, discriminator: 8)
!10385 = !DILexicalBlockFile(scope: !1619, file: !490, discriminator: 3)
!10386 = !DILocation(line: 1773, column: 5, scope: !1605)
!10387 = !DILocation(line: 1773, column: 14, scope: !10388)
!10388 = !DILexicalBlockFile(scope: !1622, file: !490, discriminator: 1)
!10389 = !DILocation(line: 1773, column: 20, scope: !1622)
!10390 = !DILocation(line: 1773, column: 14, scope: !1622)
!10391 = !DILocation(line: 1773, column: 14, scope: !1623)
!10392 = !DILocation(line: 1773, column: 30, scope: !10393)
!10393 = !DILexicalBlockFile(scope: !1621, file: !490, discriminator: 2)
!10394 = !DILocation(line: 1773, column: 34, scope: !1621)
!10395 = !DILocation(line: 1773, column: 41, scope: !1621)
!10396 = !DILocation(line: 1773, column: 60, scope: !1621)
!10397 = !DILocation(line: 1773, column: 66, scope: !1621)
!10398 = !DILocation(line: 1773, column: 75, scope: !1621)
!10399 = !DILocation(line: 1773, column: 85, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !1621, file: !490, line: 1773, column: 85)
!10401 = !DILocation(line: 1773, column: 85, scope: !1621)
!10402 = !DILocation(line: 1773, column: 98, scope: !10403)
!10403 = !DILexicalBlockFile(scope: !10400, file: !490, discriminator: 4)
!10404 = !DILocation(line: 1773, column: 91, scope: !10400)
!10405 = !DILocation(line: 1773, column: 104, scope: !10406)
!10406 = !DILexicalBlockFile(scope: !1622, file: !490, discriminator: 5)
!10407 = !DILocation(line: 1773, column: 104, scope: !10408)
!10408 = !DILexicalBlockFile(scope: !10409, file: !490, discriminator: 7)
!10409 = !DILexicalBlockFile(scope: !1622, file: !490, discriminator: 6)
!10410 = !DILocation(line: 1773, column: 104, scope: !1621)
!10411 = !DILocation(line: 1773, column: 106, scope: !10412)
!10412 = !DILexicalBlockFile(scope: !10413, file: !490, discriminator: 8)
!10413 = !DILexicalBlockFile(scope: !1623, file: !490, discriminator: 3)
!10414 = !DILocation(line: 1774, column: 60, scope: !1605)
!10415 = !DILocation(line: 1774, column: 35, scope: !1605)
!10416 = !DILocation(line: 1774, column: 66, scope: !1605)
!10417 = !DILocation(line: 1774, column: 73, scope: !1605)
!10418 = !DILocation(line: 1774, column: 12, scope: !1605)
!10419 = !DILocation(line: 1774, column: 5, scope: !1605)
!10420 = !DILocation(line: 1775, column: 1, scope: !1605)
!10421 = !DILocation(line: 1752, column: 42, scope: !1624)
!10422 = !DILocation(line: 1754, column: 5, scope: !1624)
!10423 = !DILocation(line: 1754, column: 10, scope: !10424)
!10424 = !DILexicalBlockFile(scope: !1630, file: !490, discriminator: 1)
!10425 = !DILocation(line: 1754, column: 20, scope: !1630)
!10426 = !DILocation(line: 1754, column: 43, scope: !1630)
!10427 = !DILocation(line: 1754, column: 49, scope: !1630)
!10428 = !DILocation(line: 1754, column: 64, scope: !1634)
!10429 = !DILocation(line: 1754, column: 72, scope: !1634)
!10430 = !DILocation(line: 1754, column: 64, scope: !1630)
!10431 = !DILocation(line: 1754, column: 90, scope: !10432)
!10432 = !DILexicalBlockFile(scope: !1633, file: !490, discriminator: 2)
!10433 = !DILocation(line: 1754, column: 96, scope: !1633)
!10434 = !DILocation(line: 1754, column: 106, scope: !1633)
!10435 = !DILocation(line: 1754, column: 120, scope: !1633)
!10436 = !DILocation(line: 1754, column: 125, scope: !10437)
!10437 = !DILexicalBlockFile(scope: !1632, file: !490, discriminator: 4)
!10438 = !DILocation(line: 1754, column: 135, scope: !1632)
!10439 = !DILocation(line: 1754, column: 165, scope: !1632)
!10440 = !DILocation(line: 1754, column: 183, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !1632, file: !490, line: 1754, column: 180)
!10442 = !DILocation(line: 1754, column: 200, scope: !10441)
!10443 = !DILocation(line: 1754, column: 180, scope: !10441)
!10444 = !DILocation(line: 1754, column: 210, scope: !10441)
!10445 = !DILocation(line: 1754, column: 180, scope: !1632)
!10446 = !DILocation(line: 1754, column: 180, scope: !10447)
!10447 = !DILexicalBlockFile(scope: !1632, file: !490, discriminator: 5)
!10448 = !DILocation(line: 1754, column: 241, scope: !10449)
!10449 = !DILexicalBlockFile(scope: !10441, file: !490, discriminator: 6)
!10450 = !DILocation(line: 1754, column: 259, scope: !10441)
!10451 = !DILocation(line: 1754, column: 269, scope: !10441)
!10452 = !DILocation(line: 1754, column: 294, scope: !10441)
!10453 = !DILocation(line: 1754, column: 225, scope: !10441)
!10454 = !DILocation(line: 1754, column: 313, scope: !10455)
!10455 = !DILexicalBlockFile(scope: !1633, file: !490, discriminator: 7)
!10456 = !DILocation(line: 1754, column: 313, scope: !1632)
!10457 = !DILocation(line: 1754, column: 313, scope: !10458)
!10458 = !DILexicalBlockFile(scope: !1632, file: !490, discriminator: 8)
!10459 = !DILocation(line: 1754, column: 326, scope: !10460)
!10460 = !DILexicalBlockFile(scope: !1633, file: !490, discriminator: 9)
!10461 = !DILocation(line: 1754, column: 328, scope: !10462)
!10462 = !DILexicalBlockFile(scope: !10463, file: !490, discriminator: 10)
!10463 = !DILexicalBlockFile(scope: !1624, file: !490, discriminator: 3)
!10464 = !DILocation(line: 1754, column: 328, scope: !1630)
!10465 = !DILocation(line: 1755, column: 5, scope: !1624)
!10466 = !DILocation(line: 1755, column: 10, scope: !10467)
!10467 = !DILexicalBlockFile(scope: !1636, file: !490, discriminator: 1)
!10468 = !DILocation(line: 1755, column: 20, scope: !1636)
!10469 = !DILocation(line: 1755, column: 43, scope: !1636)
!10470 = !DILocation(line: 1755, column: 49, scope: !1636)
!10471 = !DILocation(line: 1755, column: 62, scope: !1640)
!10472 = !DILocation(line: 1755, column: 70, scope: !1640)
!10473 = !DILocation(line: 1755, column: 62, scope: !1636)
!10474 = !DILocation(line: 1755, column: 88, scope: !10475)
!10475 = !DILexicalBlockFile(scope: !1639, file: !490, discriminator: 2)
!10476 = !DILocation(line: 1755, column: 94, scope: !1639)
!10477 = !DILocation(line: 1755, column: 102, scope: !1639)
!10478 = !DILocation(line: 1755, column: 116, scope: !1639)
!10479 = !DILocation(line: 1755, column: 121, scope: !10480)
!10480 = !DILexicalBlockFile(scope: !1638, file: !490, discriminator: 4)
!10481 = !DILocation(line: 1755, column: 131, scope: !1638)
!10482 = !DILocation(line: 1755, column: 161, scope: !1638)
!10483 = !DILocation(line: 1755, column: 179, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !1638, file: !490, line: 1755, column: 176)
!10485 = !DILocation(line: 1755, column: 196, scope: !10484)
!10486 = !DILocation(line: 1755, column: 176, scope: !10484)
!10487 = !DILocation(line: 1755, column: 206, scope: !10484)
!10488 = !DILocation(line: 1755, column: 176, scope: !1638)
!10489 = !DILocation(line: 1755, column: 176, scope: !10490)
!10490 = !DILexicalBlockFile(scope: !1638, file: !490, discriminator: 5)
!10491 = !DILocation(line: 1755, column: 237, scope: !10492)
!10492 = !DILexicalBlockFile(scope: !10484, file: !490, discriminator: 6)
!10493 = !DILocation(line: 1755, column: 255, scope: !10484)
!10494 = !DILocation(line: 1755, column: 265, scope: !10484)
!10495 = !DILocation(line: 1755, column: 290, scope: !10484)
!10496 = !DILocation(line: 1755, column: 221, scope: !10484)
!10497 = !DILocation(line: 1755, column: 309, scope: !10498)
!10498 = !DILexicalBlockFile(scope: !1639, file: !490, discriminator: 7)
!10499 = !DILocation(line: 1755, column: 309, scope: !1638)
!10500 = !DILocation(line: 1755, column: 309, scope: !10501)
!10501 = !DILexicalBlockFile(scope: !1638, file: !490, discriminator: 8)
!10502 = !DILocation(line: 1755, column: 322, scope: !10503)
!10503 = !DILexicalBlockFile(scope: !1639, file: !490, discriminator: 9)
!10504 = !DILocation(line: 1755, column: 324, scope: !10462)
!10505 = !DILocation(line: 1755, column: 324, scope: !1636)
!10506 = !DILocation(line: 1756, column: 5, scope: !1624)
!10507 = !DILocation(line: 1756, column: 10, scope: !10508)
!10508 = !DILexicalBlockFile(scope: !1642, file: !490, discriminator: 1)
!10509 = !DILocation(line: 1756, column: 20, scope: !1642)
!10510 = !DILocation(line: 1756, column: 43, scope: !1642)
!10511 = !DILocation(line: 1756, column: 49, scope: !1642)
!10512 = !DILocation(line: 1756, column: 62, scope: !1646)
!10513 = !DILocation(line: 1756, column: 70, scope: !1646)
!10514 = !DILocation(line: 1756, column: 62, scope: !1642)
!10515 = !DILocation(line: 1756, column: 88, scope: !10516)
!10516 = !DILexicalBlockFile(scope: !1645, file: !490, discriminator: 2)
!10517 = !DILocation(line: 1756, column: 94, scope: !1645)
!10518 = !DILocation(line: 1756, column: 102, scope: !1645)
!10519 = !DILocation(line: 1756, column: 116, scope: !1645)
!10520 = !DILocation(line: 1756, column: 121, scope: !10521)
!10521 = !DILexicalBlockFile(scope: !1644, file: !490, discriminator: 4)
!10522 = !DILocation(line: 1756, column: 131, scope: !1644)
!10523 = !DILocation(line: 1756, column: 161, scope: !1644)
!10524 = !DILocation(line: 1756, column: 179, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !1644, file: !490, line: 1756, column: 176)
!10526 = !DILocation(line: 1756, column: 196, scope: !10525)
!10527 = !DILocation(line: 1756, column: 176, scope: !10525)
!10528 = !DILocation(line: 1756, column: 206, scope: !10525)
!10529 = !DILocation(line: 1756, column: 176, scope: !1644)
!10530 = !DILocation(line: 1756, column: 176, scope: !10531)
!10531 = !DILexicalBlockFile(scope: !1644, file: !490, discriminator: 5)
!10532 = !DILocation(line: 1756, column: 237, scope: !10533)
!10533 = !DILexicalBlockFile(scope: !10525, file: !490, discriminator: 6)
!10534 = !DILocation(line: 1756, column: 255, scope: !10525)
!10535 = !DILocation(line: 1756, column: 265, scope: !10525)
!10536 = !DILocation(line: 1756, column: 290, scope: !10525)
!10537 = !DILocation(line: 1756, column: 221, scope: !10525)
!10538 = !DILocation(line: 1756, column: 309, scope: !10539)
!10539 = !DILexicalBlockFile(scope: !1645, file: !490, discriminator: 7)
!10540 = !DILocation(line: 1756, column: 309, scope: !1644)
!10541 = !DILocation(line: 1756, column: 309, scope: !10542)
!10542 = !DILexicalBlockFile(scope: !1644, file: !490, discriminator: 8)
!10543 = !DILocation(line: 1756, column: 322, scope: !10544)
!10544 = !DILexicalBlockFile(scope: !1645, file: !490, discriminator: 9)
!10545 = !DILocation(line: 1756, column: 324, scope: !10462)
!10546 = !DILocation(line: 1756, column: 324, scope: !1642)
!10547 = !DILocation(line: 1757, column: 57, scope: !1624)
!10548 = !DILocation(line: 1757, column: 32, scope: !1624)
!10549 = !DILocation(line: 1757, column: 12, scope: !1624)
!10550 = !DILocation(line: 1757, column: 5, scope: !1624)
!10551 = !DILocation(line: 1797, column: 35, scope: !1647)
!10552 = !DILocation(line: 1797, column: 51, scope: !1647)
!10553 = !DILocation(line: 1797, column: 67, scope: !1647)
!10554 = !DILocation(line: 1799, column: 5, scope: !1647)
!10555 = !DILocation(line: 1799, column: 27, scope: !1647)
!10556 = !DILocation(line: 1801, column: 53, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !1647, file: !490, line: 1801, column: 9)
!10558 = !DILocation(line: 1801, column: 28, scope: !10557)
!10559 = !DILocation(line: 1801, column: 59, scope: !10557)
!10560 = !DILocation(line: 1801, column: 65, scope: !10557)
!10561 = !DILocation(line: 1801, column: 9, scope: !10557)
!10562 = !DILocation(line: 1801, column: 71, scope: !10557)
!10563 = !DILocation(line: 1801, column: 9, scope: !1647)
!10564 = !DILocation(line: 1802, column: 9, scope: !10557)
!10565 = !DILocation(line: 1804, column: 35, scope: !1647)
!10566 = !DILocation(line: 1804, column: 11, scope: !1647)
!10567 = !DILocation(line: 1804, column: 9, scope: !1647)
!10568 = !DILocation(line: 1806, column: 5, scope: !1647)
!10569 = !DILocation(line: 1806, column: 10, scope: !10570)
!10570 = !DILexicalBlockFile(scope: !1654, file: !490, discriminator: 1)
!10571 = !DILocation(line: 1806, column: 20, scope: !1654)
!10572 = !DILocation(line: 1806, column: 43, scope: !1654)
!10573 = !DILocation(line: 1806, column: 48, scope: !1654)
!10574 = !DILocation(line: 1806, column: 63, scope: !1658)
!10575 = !DILocation(line: 1806, column: 71, scope: !1658)
!10576 = !DILocation(line: 1806, column: 63, scope: !1654)
!10577 = !DILocation(line: 1806, column: 89, scope: !10578)
!10578 = !DILexicalBlockFile(scope: !1657, file: !490, discriminator: 2)
!10579 = !DILocation(line: 1806, column: 94, scope: !1657)
!10580 = !DILocation(line: 1806, column: 104, scope: !1657)
!10581 = !DILocation(line: 1806, column: 118, scope: !1657)
!10582 = !DILocation(line: 1806, column: 123, scope: !10583)
!10583 = !DILexicalBlockFile(scope: !1656, file: !490, discriminator: 4)
!10584 = !DILocation(line: 1806, column: 133, scope: !1656)
!10585 = !DILocation(line: 1806, column: 163, scope: !1656)
!10586 = !DILocation(line: 1806, column: 181, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !1656, file: !490, line: 1806, column: 178)
!10588 = !DILocation(line: 1806, column: 198, scope: !10587)
!10589 = !DILocation(line: 1806, column: 178, scope: !10587)
!10590 = !DILocation(line: 1806, column: 208, scope: !10587)
!10591 = !DILocation(line: 1806, column: 178, scope: !1656)
!10592 = !DILocation(line: 1806, column: 178, scope: !10593)
!10593 = !DILexicalBlockFile(scope: !1656, file: !490, discriminator: 5)
!10594 = !DILocation(line: 1806, column: 239, scope: !10595)
!10595 = !DILexicalBlockFile(scope: !10587, file: !490, discriminator: 6)
!10596 = !DILocation(line: 1806, column: 257, scope: !10587)
!10597 = !DILocation(line: 1806, column: 267, scope: !10587)
!10598 = !DILocation(line: 1806, column: 292, scope: !10587)
!10599 = !DILocation(line: 1806, column: 223, scope: !10587)
!10600 = !DILocation(line: 1806, column: 311, scope: !10601)
!10601 = !DILexicalBlockFile(scope: !1657, file: !490, discriminator: 7)
!10602 = !DILocation(line: 1806, column: 311, scope: !1656)
!10603 = !DILocation(line: 1806, column: 311, scope: !10604)
!10604 = !DILexicalBlockFile(scope: !1656, file: !490, discriminator: 8)
!10605 = !DILocation(line: 1806, column: 324, scope: !10606)
!10606 = !DILexicalBlockFile(scope: !1657, file: !490, discriminator: 9)
!10607 = !DILocation(line: 1806, column: 326, scope: !10608)
!10608 = !DILexicalBlockFile(scope: !10609, file: !490, discriminator: 10)
!10609 = !DILexicalBlockFile(scope: !1647, file: !490, discriminator: 3)
!10610 = !DILocation(line: 1806, column: 326, scope: !1654)
!10611 = !DILocation(line: 1806, column: 326, scope: !10612)
!10612 = !DILexicalBlockFile(scope: !1654, file: !490, discriminator: 11)
!10613 = !DILocation(line: 1807, column: 5, scope: !1647)
!10614 = !DILocation(line: 1807, column: 10, scope: !10615)
!10615 = !DILexicalBlockFile(scope: !1660, file: !490, discriminator: 1)
!10616 = !DILocation(line: 1807, column: 20, scope: !1660)
!10617 = !DILocation(line: 1807, column: 43, scope: !1660)
!10618 = !DILocation(line: 1807, column: 48, scope: !1660)
!10619 = !DILocation(line: 1807, column: 61, scope: !1664)
!10620 = !DILocation(line: 1807, column: 69, scope: !1664)
!10621 = !DILocation(line: 1807, column: 61, scope: !1660)
!10622 = !DILocation(line: 1807, column: 87, scope: !10623)
!10623 = !DILexicalBlockFile(scope: !1663, file: !490, discriminator: 2)
!10624 = !DILocation(line: 1807, column: 92, scope: !1663)
!10625 = !DILocation(line: 1807, column: 100, scope: !1663)
!10626 = !DILocation(line: 1807, column: 114, scope: !1663)
!10627 = !DILocation(line: 1807, column: 119, scope: !10628)
!10628 = !DILexicalBlockFile(scope: !1662, file: !490, discriminator: 4)
!10629 = !DILocation(line: 1807, column: 129, scope: !1662)
!10630 = !DILocation(line: 1807, column: 159, scope: !1662)
!10631 = !DILocation(line: 1807, column: 177, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !1662, file: !490, line: 1807, column: 174)
!10633 = !DILocation(line: 1807, column: 194, scope: !10632)
!10634 = !DILocation(line: 1807, column: 174, scope: !10632)
!10635 = !DILocation(line: 1807, column: 204, scope: !10632)
!10636 = !DILocation(line: 1807, column: 174, scope: !1662)
!10637 = !DILocation(line: 1807, column: 174, scope: !10638)
!10638 = !DILexicalBlockFile(scope: !1662, file: !490, discriminator: 5)
!10639 = !DILocation(line: 1807, column: 235, scope: !10640)
!10640 = !DILexicalBlockFile(scope: !10632, file: !490, discriminator: 6)
!10641 = !DILocation(line: 1807, column: 253, scope: !10632)
!10642 = !DILocation(line: 1807, column: 263, scope: !10632)
!10643 = !DILocation(line: 1807, column: 288, scope: !10632)
!10644 = !DILocation(line: 1807, column: 219, scope: !10632)
!10645 = !DILocation(line: 1807, column: 307, scope: !10646)
!10646 = !DILexicalBlockFile(scope: !1663, file: !490, discriminator: 7)
!10647 = !DILocation(line: 1807, column: 307, scope: !1662)
!10648 = !DILocation(line: 1807, column: 307, scope: !10649)
!10649 = !DILexicalBlockFile(scope: !1662, file: !490, discriminator: 8)
!10650 = !DILocation(line: 1807, column: 320, scope: !10651)
!10651 = !DILexicalBlockFile(scope: !1663, file: !490, discriminator: 9)
!10652 = !DILocation(line: 1807, column: 322, scope: !10608)
!10653 = !DILocation(line: 1807, column: 322, scope: !1660)
!10654 = !DILocation(line: 1807, column: 322, scope: !10655)
!10655 = !DILexicalBlockFile(scope: !1660, file: !490, discriminator: 11)
!10656 = !DILocation(line: 1808, column: 5, scope: !1647)
!10657 = !DILocation(line: 1808, column: 10, scope: !10658)
!10658 = !DILexicalBlockFile(scope: !1666, file: !490, discriminator: 1)
!10659 = !DILocation(line: 1808, column: 20, scope: !1666)
!10660 = !DILocation(line: 1808, column: 43, scope: !1666)
!10661 = !DILocation(line: 1808, column: 48, scope: !1666)
!10662 = !DILocation(line: 1808, column: 61, scope: !1670)
!10663 = !DILocation(line: 1808, column: 69, scope: !1670)
!10664 = !DILocation(line: 1808, column: 61, scope: !1666)
!10665 = !DILocation(line: 1808, column: 87, scope: !10666)
!10666 = !DILexicalBlockFile(scope: !1669, file: !490, discriminator: 2)
!10667 = !DILocation(line: 1808, column: 92, scope: !1669)
!10668 = !DILocation(line: 1808, column: 100, scope: !1669)
!10669 = !DILocation(line: 1808, column: 114, scope: !1669)
!10670 = !DILocation(line: 1808, column: 119, scope: !10671)
!10671 = !DILexicalBlockFile(scope: !1668, file: !490, discriminator: 4)
!10672 = !DILocation(line: 1808, column: 129, scope: !1668)
!10673 = !DILocation(line: 1808, column: 159, scope: !1668)
!10674 = !DILocation(line: 1808, column: 177, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !1668, file: !490, line: 1808, column: 174)
!10676 = !DILocation(line: 1808, column: 194, scope: !10675)
!10677 = !DILocation(line: 1808, column: 174, scope: !10675)
!10678 = !DILocation(line: 1808, column: 204, scope: !10675)
!10679 = !DILocation(line: 1808, column: 174, scope: !1668)
!10680 = !DILocation(line: 1808, column: 174, scope: !10681)
!10681 = !DILexicalBlockFile(scope: !1668, file: !490, discriminator: 5)
!10682 = !DILocation(line: 1808, column: 235, scope: !10683)
!10683 = !DILexicalBlockFile(scope: !10675, file: !490, discriminator: 6)
!10684 = !DILocation(line: 1808, column: 253, scope: !10675)
!10685 = !DILocation(line: 1808, column: 263, scope: !10675)
!10686 = !DILocation(line: 1808, column: 288, scope: !10675)
!10687 = !DILocation(line: 1808, column: 219, scope: !10675)
!10688 = !DILocation(line: 1808, column: 307, scope: !10689)
!10689 = !DILexicalBlockFile(scope: !1669, file: !490, discriminator: 7)
!10690 = !DILocation(line: 1808, column: 307, scope: !1668)
!10691 = !DILocation(line: 1808, column: 307, scope: !10692)
!10692 = !DILexicalBlockFile(scope: !1668, file: !490, discriminator: 8)
!10693 = !DILocation(line: 1808, column: 320, scope: !10694)
!10694 = !DILexicalBlockFile(scope: !1669, file: !490, discriminator: 9)
!10695 = !DILocation(line: 1808, column: 322, scope: !10608)
!10696 = !DILocation(line: 1808, column: 322, scope: !1666)
!10697 = !DILocation(line: 1808, column: 322, scope: !10698)
!10698 = !DILexicalBlockFile(scope: !1666, file: !490, discriminator: 11)
!10699 = !DILocation(line: 1810, column: 34, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !1647, file: !490, line: 1810, column: 9)
!10701 = !DILocation(line: 1811, column: 27, scope: !10700)
!10702 = !DILocation(line: 1811, column: 32, scope: !10700)
!10703 = !DILocation(line: 1812, column: 27, scope: !10700)
!10704 = !DILocation(line: 1812, column: 32, scope: !10700)
!10705 = !DILocation(line: 1813, column: 10, scope: !10700)
!10706 = !DILocation(line: 1813, column: 15, scope: !10700)
!10707 = !DILocation(line: 1814, column: 10, scope: !10700)
!10708 = !DILocation(line: 1814, column: 15, scope: !10700)
!10709 = !DILocation(line: 1815, column: 27, scope: !10700)
!10710 = !DILocation(line: 1815, column: 32, scope: !10700)
!10711 = !DILocation(line: 1810, column: 10, scope: !10700)
!10712 = !DILocation(line: 1810, column: 9, scope: !1647)
!10713 = !DILocation(line: 1816, column: 41, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10700, file: !490, line: 1815, column: 41)
!10715 = !DILocation(line: 1816, column: 46, scope: !10714)
!10716 = !DILocation(line: 1816, column: 53, scope: !10714)
!10717 = !DILocation(line: 1816, column: 27, scope: !10714)
!10718 = !DILocation(line: 1816, column: 32, scope: !10714)
!10719 = !DILocation(line: 1816, column: 39, scope: !10714)
!10720 = !DILocation(line: 1816, column: 11, scope: !10714)
!10721 = !DILocation(line: 1816, column: 16, scope: !10714)
!10722 = !DILocation(line: 1816, column: 25, scope: !10714)
!10723 = !DILocation(line: 1817, column: 11, scope: !10714)
!10724 = !DILocation(line: 1820, column: 43, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !1647, file: !490, line: 1820, column: 9)
!10726 = !DILocation(line: 1820, column: 48, scope: !10725)
!10727 = !DILocation(line: 1820, column: 27, scope: !10725)
!10728 = !DILocation(line: 1820, column: 57, scope: !10725)
!10729 = !DILocation(line: 1820, column: 63, scope: !10725)
!10730 = !DILocation(line: 1820, column: 25, scope: !10725)
!10731 = !DILocation(line: 1820, column: 25, scope: !10732)
!10732 = !DILexicalBlockFile(scope: !10725, file: !490, discriminator: 1)
!10733 = !DILocation(line: 1820, column: 106, scope: !10734)
!10734 = !DILexicalBlockFile(scope: !10725, file: !490, discriminator: 2)
!10735 = !DILocation(line: 1820, column: 111, scope: !10725)
!10736 = !DILocation(line: 1820, column: 76, scope: !10725)
!10737 = !DILocation(line: 1820, column: 122, scope: !10738)
!10738 = !DILexicalBlockFile(scope: !10739, file: !490, discriminator: 4)
!10739 = !DILexicalBlockFile(scope: !10725, file: !490, discriminator: 3)
!10740 = !DILocation(line: 1820, column: 9, scope: !1647)
!10741 = !DILocation(line: 1821, column: 9, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10725, file: !490, line: 1820, column: 128)
!10743 = !DILocation(line: 1821, column: 14, scope: !10742)
!10744 = !DILocation(line: 1821, column: 23, scope: !10742)
!10745 = !DILocation(line: 1822, column: 9, scope: !10742)
!10746 = !DILocation(line: 1825, column: 21, scope: !1647)
!10747 = !DILocation(line: 1825, column: 26, scope: !1647)
!10748 = !DILocation(line: 1825, column: 38, scope: !1647)
!10749 = !DILocation(line: 1825, column: 47, scope: !1647)
!10750 = !DILocation(line: 1826, column: 21, scope: !1647)
!10751 = !DILocation(line: 1826, column: 26, scope: !1647)
!10752 = !DILocation(line: 1826, column: 36, scope: !1647)
!10753 = !DILocation(line: 1826, column: 45, scope: !1647)
!10754 = !DILocation(line: 1827, column: 21, scope: !1647)
!10755 = !DILocation(line: 1827, column: 26, scope: !1647)
!10756 = !DILocation(line: 1827, column: 36, scope: !1647)
!10757 = !DILocation(line: 1827, column: 45, scope: !1647)
!10758 = !DILocation(line: 1829, column: 5, scope: !1647)
!10759 = !DILocation(line: 1830, column: 1, scope: !1647)
!10760 = !DILocation(line: 1955, column: 34, scope: !1671)
!10761 = !DILocation(line: 1957, column: 5, scope: !1671)
!10762 = !DILocation(line: 1957, column: 27, scope: !1671)
!10763 = !DILocation(line: 1957, column: 59, scope: !1671)
!10764 = !DILocation(line: 1957, column: 35, scope: !1671)
!10765 = !DILocation(line: 1958, column: 5, scope: !1671)
!10766 = !DILocation(line: 1958, column: 15, scope: !1671)
!10767 = !DILocation(line: 1959, column: 5, scope: !1671)
!10768 = !DILocation(line: 1959, column: 15, scope: !1671)
!10769 = !DILocation(line: 1960, column: 5, scope: !1671)
!10770 = !DILocation(line: 1960, column: 15, scope: !1671)
!10771 = !DILocation(line: 1962, column: 10, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !1671, file: !490, line: 1962, column: 9)
!10773 = !DILocation(line: 1962, column: 17, scope: !10772)
!10774 = !DILocation(line: 1962, column: 9, scope: !1671)
!10775 = !DILocation(line: 1964, column: 16, scope: !10772)
!10776 = !DILocation(line: 1964, column: 9, scope: !10772)
!10777 = !DILocation(line: 1968, column: 31, scope: !1671)
!10778 = !DILocation(line: 1968, column: 38, scope: !1671)
!10779 = !DILocation(line: 1968, column: 18, scope: !1671)
!10780 = !DILocation(line: 1968, column: 16, scope: !1671)
!10781 = !DILocation(line: 1969, column: 9, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !1671, file: !490, line: 1969, column: 9)
!10783 = !DILocation(line: 1969, column: 20, scope: !10782)
!10784 = !DILocation(line: 1969, column: 9, scope: !1671)
!10785 = !DILocation(line: 1970, column: 9, scope: !10782)
!10786 = !DILocation(line: 1971, column: 33, scope: !1671)
!10787 = !DILocation(line: 1971, column: 40, scope: !1671)
!10788 = !DILocation(line: 1971, column: 20, scope: !1671)
!10789 = !DILocation(line: 1971, column: 18, scope: !1671)
!10790 = !DILocation(line: 1972, column: 9, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !1671, file: !490, line: 1972, column: 9)
!10792 = !DILocation(line: 1972, column: 22, scope: !10791)
!10793 = !DILocation(line: 1972, column: 9, scope: !1671)
!10794 = !DILocation(line: 1973, column: 9, scope: !10791)
!10795 = !DILocation(line: 1975, column: 9, scope: !1680)
!10796 = !DILocation(line: 1975, column: 16, scope: !1680)
!10797 = !DILocation(line: 1975, column: 55, scope: !1680)
!10798 = !DILocation(line: 1975, column: 62, scope: !1680)
!10799 = !DILocation(line: 1975, column: 40, scope: !1680)
!10800 = !DILocation(line: 1975, column: 72, scope: !1680)
!10801 = !DILocation(line: 1975, column: 22, scope: !1680)
!10802 = !DILocation(line: 1975, column: 82, scope: !1680)
!10803 = !DILocation(line: 1975, column: 85, scope: !10804)
!10804 = !DILexicalBlockFile(scope: !1680, file: !490, discriminator: 1)
!10805 = !DILocation(line: 1975, column: 92, scope: !1680)
!10806 = !DILocation(line: 1975, column: 99, scope: !1680)
!10807 = !DILocation(line: 1975, column: 106, scope: !1680)
!10808 = !DILocation(line: 1975, column: 111, scope: !1680)
!10809 = !DILocation(line: 1975, column: 96, scope: !1680)
!10810 = !DILocation(line: 1975, column: 9, scope: !1671)
!10811 = !DILocation(line: 1976, column: 9, scope: !1679)
!10812 = !DILocation(line: 1976, column: 13, scope: !1679)
!10813 = !DILocation(line: 1976, column: 113, scope: !1679)
!10814 = !DILocation(line: 1976, column: 120, scope: !1679)
!10815 = !DILocation(line: 1976, column: 86, scope: !1679)
!10816 = !DILocation(line: 1976, column: 62, scope: !1679)
!10817 = !DILocation(line: 1976, column: 93, scope: !1679)
!10818 = !DILocation(line: 1976, column: 43, scope: !1679)
!10819 = !DILocation(line: 1976, column: 103, scope: !1679)
!10820 = !DILocation(line: 1976, column: 41, scope: !1679)
!10821 = !DILocation(line: 1976, column: 26, scope: !1679)
!10822 = !DILocation(line: 1976, column: 126, scope: !1679)
!10823 = !DILocation(line: 1979, column: 13, scope: !1679)
!10824 = !DILocation(line: 1980, column: 13, scope: !1679)
!10825 = !DILocation(line: 1981, column: 13, scope: !1679)
!10826 = !DILocation(line: 1981, column: 20, scope: !1679)
!10827 = !DILocation(line: 1982, column: 13, scope: !1679)
!10828 = !DILocation(line: 1977, column: 18, scope: !1679)
!10829 = !DILocation(line: 1977, column: 16, scope: !1679)
!10830 = !DILocation(line: 1983, column: 5, scope: !1680)
!10831 = !DILocation(line: 1983, column: 5, scope: !1679)
!10832 = !DILocation(line: 1987, column: 13, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !1680, file: !490, line: 1984, column: 10)
!10834 = !DILocation(line: 1988, column: 13, scope: !10833)
!10835 = !DILocation(line: 1988, column: 20, scope: !10833)
!10836 = !DILocation(line: 1989, column: 13, scope: !10833)
!10837 = !DILocation(line: 1989, column: 20, scope: !10833)
!10838 = !DILocation(line: 1989, column: 23, scope: !10833)
!10839 = !DILocation(line: 1990, column: 13, scope: !10833)
!10840 = !DILocation(line: 1985, column: 18, scope: !10833)
!10841 = !DILocation(line: 1985, column: 16, scope: !10833)
!10842 = !DILocation(line: 1975, column: 112, scope: !1680)
!10843 = !DILocation(line: 1994, column: 5, scope: !1671)
!10844 = !DILocation(line: 1994, column: 10, scope: !10845)
!10845 = !DILexicalBlockFile(scope: !1682, file: !490, discriminator: 1)
!10846 = !DILocation(line: 1994, column: 20, scope: !1682)
!10847 = !DILocation(line: 1994, column: 51, scope: !1682)
!10848 = !DILocation(line: 1994, column: 68, scope: !1685)
!10849 = !DILocation(line: 1994, column: 84, scope: !1685)
!10850 = !DILocation(line: 1994, column: 68, scope: !1682)
!10851 = !DILocation(line: 1994, column: 99, scope: !10852)
!10852 = !DILexicalBlockFile(scope: !1685, file: !490, discriminator: 2)
!10853 = !DILocation(line: 1994, column: 104, scope: !10854)
!10854 = !DILexicalBlockFile(scope: !1684, file: !490, discriminator: 4)
!10855 = !DILocation(line: 1994, column: 114, scope: !1684)
!10856 = !DILocation(line: 1994, column: 144, scope: !1684)
!10857 = !DILocation(line: 1994, column: 170, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !1684, file: !490, line: 1994, column: 167)
!10859 = !DILocation(line: 1994, column: 187, scope: !10858)
!10860 = !DILocation(line: 1994, column: 167, scope: !10858)
!10861 = !DILocation(line: 1994, column: 197, scope: !10858)
!10862 = !DILocation(line: 1994, column: 167, scope: !1684)
!10863 = !DILocation(line: 1994, column: 167, scope: !10864)
!10864 = !DILexicalBlockFile(scope: !1684, file: !490, discriminator: 5)
!10865 = !DILocation(line: 1994, column: 228, scope: !10866)
!10866 = !DILexicalBlockFile(scope: !10858, file: !490, discriminator: 6)
!10867 = !DILocation(line: 1994, column: 246, scope: !10858)
!10868 = !DILocation(line: 1994, column: 256, scope: !10858)
!10869 = !DILocation(line: 1994, column: 281, scope: !10858)
!10870 = !DILocation(line: 1994, column: 212, scope: !10858)
!10871 = !DILocation(line: 1994, column: 300, scope: !10872)
!10872 = !DILexicalBlockFile(scope: !1685, file: !490, discriminator: 7)
!10873 = !DILocation(line: 1994, column: 300, scope: !1684)
!10874 = !DILocation(line: 1994, column: 300, scope: !10875)
!10875 = !DILexicalBlockFile(scope: !1684, file: !490, discriminator: 8)
!10876 = !DILocation(line: 1994, column: 300, scope: !10877)
!10877 = !DILexicalBlockFile(scope: !1684, file: !490, discriminator: 9)
!10878 = !DILocation(line: 1994, column: 313, scope: !10879)
!10879 = !DILexicalBlockFile(scope: !10880, file: !490, discriminator: 10)
!10880 = !DILexicalBlockFile(scope: !1671, file: !490, discriminator: 3)
!10881 = !DILocation(line: 1994, column: 313, scope: !1682)
!10882 = !DILocation(line: 1994, column: 313, scope: !10883)
!10883 = !DILexicalBlockFile(scope: !1682, file: !490, discriminator: 11)
!10884 = !DILocation(line: 1995, column: 5, scope: !1671)
!10885 = !DILocation(line: 1995, column: 10, scope: !10886)
!10886 = !DILexicalBlockFile(scope: !1687, file: !490, discriminator: 1)
!10887 = !DILocation(line: 1995, column: 20, scope: !1687)
!10888 = !DILocation(line: 1995, column: 51, scope: !1687)
!10889 = !DILocation(line: 1995, column: 70, scope: !1690)
!10890 = !DILocation(line: 1995, column: 86, scope: !1690)
!10891 = !DILocation(line: 1995, column: 70, scope: !1687)
!10892 = !DILocation(line: 1995, column: 101, scope: !10893)
!10893 = !DILexicalBlockFile(scope: !1690, file: !490, discriminator: 2)
!10894 = !DILocation(line: 1995, column: 106, scope: !10895)
!10895 = !DILexicalBlockFile(scope: !1689, file: !490, discriminator: 4)
!10896 = !DILocation(line: 1995, column: 116, scope: !1689)
!10897 = !DILocation(line: 1995, column: 146, scope: !1689)
!10898 = !DILocation(line: 1995, column: 172, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !1689, file: !490, line: 1995, column: 169)
!10900 = !DILocation(line: 1995, column: 189, scope: !10899)
!10901 = !DILocation(line: 1995, column: 169, scope: !10899)
!10902 = !DILocation(line: 1995, column: 199, scope: !10899)
!10903 = !DILocation(line: 1995, column: 169, scope: !1689)
!10904 = !DILocation(line: 1995, column: 169, scope: !10905)
!10905 = !DILexicalBlockFile(scope: !1689, file: !490, discriminator: 5)
!10906 = !DILocation(line: 1995, column: 230, scope: !10907)
!10907 = !DILexicalBlockFile(scope: !10899, file: !490, discriminator: 6)
!10908 = !DILocation(line: 1995, column: 248, scope: !10899)
!10909 = !DILocation(line: 1995, column: 258, scope: !10899)
!10910 = !DILocation(line: 1995, column: 283, scope: !10899)
!10911 = !DILocation(line: 1995, column: 214, scope: !10899)
!10912 = !DILocation(line: 1995, column: 302, scope: !10913)
!10913 = !DILexicalBlockFile(scope: !1690, file: !490, discriminator: 7)
!10914 = !DILocation(line: 1995, column: 302, scope: !1689)
!10915 = !DILocation(line: 1995, column: 302, scope: !10916)
!10916 = !DILexicalBlockFile(scope: !1689, file: !490, discriminator: 8)
!10917 = !DILocation(line: 1995, column: 302, scope: !10918)
!10918 = !DILexicalBlockFile(scope: !1689, file: !490, discriminator: 9)
!10919 = !DILocation(line: 1995, column: 315, scope: !10879)
!10920 = !DILocation(line: 1995, column: 315, scope: !1687)
!10921 = !DILocation(line: 1995, column: 315, scope: !10922)
!10922 = !DILexicalBlockFile(scope: !1687, file: !490, discriminator: 11)
!10923 = !DILocation(line: 1996, column: 12, scope: !1671)
!10924 = !DILocation(line: 1996, column: 5, scope: !1671)
!10925 = !DILocation(line: 1997, column: 1, scope: !1671)
!10926 = !DILocation(line: 1912, column: 35, scope: !1691)
!10927 = !DILocation(line: 1912, column: 51, scope: !1691)
!10928 = !DILocation(line: 1912, column: 67, scope: !1691)
!10929 = !DILocation(line: 1914, column: 5, scope: !1691)
!10930 = !DILocation(line: 1914, column: 27, scope: !1691)
!10931 = !DILocation(line: 1915, column: 5, scope: !1691)
!10932 = !DILocation(line: 1915, column: 17, scope: !1691)
!10933 = !DILocation(line: 1916, column: 5, scope: !1691)
!10934 = !DILocation(line: 1916, column: 16, scope: !1691)
!10935 = !DILocation(line: 1918, column: 53, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !1691, file: !490, line: 1918, column: 9)
!10937 = !DILocation(line: 1918, column: 28, scope: !10936)
!10938 = !DILocation(line: 1918, column: 59, scope: !10936)
!10939 = !DILocation(line: 1918, column: 65, scope: !10936)
!10940 = !DILocation(line: 1918, column: 9, scope: !10936)
!10941 = !DILocation(line: 1918, column: 71, scope: !10936)
!10942 = !DILocation(line: 1918, column: 9, scope: !1691)
!10943 = !DILocation(line: 1919, column: 9, scope: !10936)
!10944 = !DILocation(line: 1921, column: 35, scope: !1691)
!10945 = !DILocation(line: 1921, column: 11, scope: !1691)
!10946 = !DILocation(line: 1921, column: 9, scope: !1691)
!10947 = !DILocation(line: 1923, column: 5, scope: !1691)
!10948 = !DILocation(line: 1923, column: 10, scope: !10949)
!10949 = !DILexicalBlockFile(scope: !1700, file: !490, discriminator: 1)
!10950 = !DILocation(line: 1923, column: 20, scope: !1700)
!10951 = !DILocation(line: 1923, column: 43, scope: !1700)
!10952 = !DILocation(line: 1923, column: 48, scope: !1700)
!10953 = !DILocation(line: 1923, column: 63, scope: !1704)
!10954 = !DILocation(line: 1923, column: 71, scope: !1704)
!10955 = !DILocation(line: 1923, column: 63, scope: !1700)
!10956 = !DILocation(line: 1923, column: 89, scope: !10957)
!10957 = !DILexicalBlockFile(scope: !1703, file: !490, discriminator: 2)
!10958 = !DILocation(line: 1923, column: 94, scope: !1703)
!10959 = !DILocation(line: 1923, column: 104, scope: !1703)
!10960 = !DILocation(line: 1923, column: 118, scope: !1703)
!10961 = !DILocation(line: 1923, column: 123, scope: !10962)
!10962 = !DILexicalBlockFile(scope: !1702, file: !490, discriminator: 4)
!10963 = !DILocation(line: 1923, column: 133, scope: !1702)
!10964 = !DILocation(line: 1923, column: 163, scope: !1702)
!10965 = !DILocation(line: 1923, column: 181, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !1702, file: !490, line: 1923, column: 178)
!10967 = !DILocation(line: 1923, column: 198, scope: !10966)
!10968 = !DILocation(line: 1923, column: 178, scope: !10966)
!10969 = !DILocation(line: 1923, column: 208, scope: !10966)
!10970 = !DILocation(line: 1923, column: 178, scope: !1702)
!10971 = !DILocation(line: 1923, column: 178, scope: !10972)
!10972 = !DILexicalBlockFile(scope: !1702, file: !490, discriminator: 5)
!10973 = !DILocation(line: 1923, column: 239, scope: !10974)
!10974 = !DILexicalBlockFile(scope: !10966, file: !490, discriminator: 6)
!10975 = !DILocation(line: 1923, column: 257, scope: !10966)
!10976 = !DILocation(line: 1923, column: 267, scope: !10966)
!10977 = !DILocation(line: 1923, column: 292, scope: !10966)
!10978 = !DILocation(line: 1923, column: 223, scope: !10966)
!10979 = !DILocation(line: 1923, column: 311, scope: !10980)
!10980 = !DILexicalBlockFile(scope: !1703, file: !490, discriminator: 7)
!10981 = !DILocation(line: 1923, column: 311, scope: !1702)
!10982 = !DILocation(line: 1923, column: 311, scope: !10983)
!10983 = !DILexicalBlockFile(scope: !1702, file: !490, discriminator: 8)
!10984 = !DILocation(line: 1923, column: 324, scope: !10985)
!10985 = !DILexicalBlockFile(scope: !1703, file: !490, discriminator: 9)
!10986 = !DILocation(line: 1923, column: 326, scope: !10987)
!10987 = !DILexicalBlockFile(scope: !10988, file: !490, discriminator: 10)
!10988 = !DILexicalBlockFile(scope: !1691, file: !490, discriminator: 3)
!10989 = !DILocation(line: 1923, column: 326, scope: !1700)
!10990 = !DILocation(line: 1923, column: 326, scope: !10991)
!10991 = !DILexicalBlockFile(scope: !1700, file: !490, discriminator: 11)
!10992 = !DILocation(line: 1924, column: 5, scope: !1691)
!10993 = !DILocation(line: 1924, column: 10, scope: !10994)
!10994 = !DILexicalBlockFile(scope: !1706, file: !490, discriminator: 1)
!10995 = !DILocation(line: 1924, column: 20, scope: !1706)
!10996 = !DILocation(line: 1924, column: 43, scope: !1706)
!10997 = !DILocation(line: 1924, column: 48, scope: !1706)
!10998 = !DILocation(line: 1924, column: 61, scope: !1710)
!10999 = !DILocation(line: 1924, column: 69, scope: !1710)
!11000 = !DILocation(line: 1924, column: 61, scope: !1706)
!11001 = !DILocation(line: 1924, column: 87, scope: !11002)
!11002 = !DILexicalBlockFile(scope: !1709, file: !490, discriminator: 2)
!11003 = !DILocation(line: 1924, column: 92, scope: !1709)
!11004 = !DILocation(line: 1924, column: 100, scope: !1709)
!11005 = !DILocation(line: 1924, column: 114, scope: !1709)
!11006 = !DILocation(line: 1924, column: 119, scope: !11007)
!11007 = !DILexicalBlockFile(scope: !1708, file: !490, discriminator: 4)
!11008 = !DILocation(line: 1924, column: 129, scope: !1708)
!11009 = !DILocation(line: 1924, column: 159, scope: !1708)
!11010 = !DILocation(line: 1924, column: 177, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !1708, file: !490, line: 1924, column: 174)
!11012 = !DILocation(line: 1924, column: 194, scope: !11011)
!11013 = !DILocation(line: 1924, column: 174, scope: !11011)
!11014 = !DILocation(line: 1924, column: 204, scope: !11011)
!11015 = !DILocation(line: 1924, column: 174, scope: !1708)
!11016 = !DILocation(line: 1924, column: 174, scope: !11017)
!11017 = !DILexicalBlockFile(scope: !1708, file: !490, discriminator: 5)
!11018 = !DILocation(line: 1924, column: 235, scope: !11019)
!11019 = !DILexicalBlockFile(scope: !11011, file: !490, discriminator: 6)
!11020 = !DILocation(line: 1924, column: 253, scope: !11011)
!11021 = !DILocation(line: 1924, column: 263, scope: !11011)
!11022 = !DILocation(line: 1924, column: 288, scope: !11011)
!11023 = !DILocation(line: 1924, column: 219, scope: !11011)
!11024 = !DILocation(line: 1924, column: 307, scope: !11025)
!11025 = !DILexicalBlockFile(scope: !1709, file: !490, discriminator: 7)
!11026 = !DILocation(line: 1924, column: 307, scope: !1708)
!11027 = !DILocation(line: 1924, column: 307, scope: !11028)
!11028 = !DILexicalBlockFile(scope: !1708, file: !490, discriminator: 8)
!11029 = !DILocation(line: 1924, column: 320, scope: !11030)
!11030 = !DILexicalBlockFile(scope: !1709, file: !490, discriminator: 9)
!11031 = !DILocation(line: 1924, column: 322, scope: !10987)
!11032 = !DILocation(line: 1924, column: 322, scope: !1706)
!11033 = !DILocation(line: 1924, column: 322, scope: !11034)
!11034 = !DILexicalBlockFile(scope: !1706, file: !490, discriminator: 11)
!11035 = !DILocation(line: 1925, column: 5, scope: !1691)
!11036 = !DILocation(line: 1925, column: 10, scope: !11037)
!11037 = !DILexicalBlockFile(scope: !1712, file: !490, discriminator: 1)
!11038 = !DILocation(line: 1925, column: 20, scope: !1712)
!11039 = !DILocation(line: 1925, column: 43, scope: !1712)
!11040 = !DILocation(line: 1925, column: 48, scope: !1712)
!11041 = !DILocation(line: 1925, column: 61, scope: !1716)
!11042 = !DILocation(line: 1925, column: 69, scope: !1716)
!11043 = !DILocation(line: 1925, column: 61, scope: !1712)
!11044 = !DILocation(line: 1925, column: 87, scope: !11045)
!11045 = !DILexicalBlockFile(scope: !1715, file: !490, discriminator: 2)
!11046 = !DILocation(line: 1925, column: 92, scope: !1715)
!11047 = !DILocation(line: 1925, column: 100, scope: !1715)
!11048 = !DILocation(line: 1925, column: 114, scope: !1715)
!11049 = !DILocation(line: 1925, column: 119, scope: !11050)
!11050 = !DILexicalBlockFile(scope: !1714, file: !490, discriminator: 4)
!11051 = !DILocation(line: 1925, column: 129, scope: !1714)
!11052 = !DILocation(line: 1925, column: 159, scope: !1714)
!11053 = !DILocation(line: 1925, column: 177, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !1714, file: !490, line: 1925, column: 174)
!11055 = !DILocation(line: 1925, column: 194, scope: !11054)
!11056 = !DILocation(line: 1925, column: 174, scope: !11054)
!11057 = !DILocation(line: 1925, column: 204, scope: !11054)
!11058 = !DILocation(line: 1925, column: 174, scope: !1714)
!11059 = !DILocation(line: 1925, column: 174, scope: !11060)
!11060 = !DILexicalBlockFile(scope: !1714, file: !490, discriminator: 5)
!11061 = !DILocation(line: 1925, column: 235, scope: !11062)
!11062 = !DILexicalBlockFile(scope: !11054, file: !490, discriminator: 6)
!11063 = !DILocation(line: 1925, column: 253, scope: !11054)
!11064 = !DILocation(line: 1925, column: 263, scope: !11054)
!11065 = !DILocation(line: 1925, column: 288, scope: !11054)
!11066 = !DILocation(line: 1925, column: 219, scope: !11054)
!11067 = !DILocation(line: 1925, column: 307, scope: !11068)
!11068 = !DILexicalBlockFile(scope: !1715, file: !490, discriminator: 7)
!11069 = !DILocation(line: 1925, column: 307, scope: !1714)
!11070 = !DILocation(line: 1925, column: 307, scope: !11071)
!11071 = !DILexicalBlockFile(scope: !1714, file: !490, discriminator: 8)
!11072 = !DILocation(line: 1925, column: 320, scope: !11073)
!11073 = !DILexicalBlockFile(scope: !1715, file: !490, discriminator: 9)
!11074 = !DILocation(line: 1925, column: 322, scope: !10987)
!11075 = !DILocation(line: 1925, column: 322, scope: !1712)
!11076 = !DILocation(line: 1925, column: 322, scope: !11077)
!11077 = !DILexicalBlockFile(scope: !1712, file: !490, discriminator: 11)
!11078 = !DILocation(line: 1927, column: 34, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !1691, file: !490, line: 1927, column: 9)
!11080 = !DILocation(line: 1928, column: 28, scope: !11079)
!11081 = !DILocation(line: 1928, column: 33, scope: !11079)
!11082 = !DILocation(line: 1929, column: 11, scope: !11079)
!11083 = !DILocation(line: 1929, column: 16, scope: !11079)
!11084 = !DILocation(line: 1930, column: 11, scope: !11079)
!11085 = !DILocation(line: 1930, column: 16, scope: !11079)
!11086 = !DILocation(line: 1931, column: 11, scope: !11079)
!11087 = !DILocation(line: 1931, column: 16, scope: !11079)
!11088 = !DILocation(line: 1932, column: 28, scope: !11079)
!11089 = !DILocation(line: 1932, column: 33, scope: !11079)
!11090 = !DILocation(line: 1927, column: 10, scope: !11079)
!11091 = !DILocation(line: 1927, column: 9, scope: !1691)
!11092 = !DILocation(line: 1933, column: 44, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11079, file: !490, line: 1932, column: 42)
!11094 = !DILocation(line: 1933, column: 49, scope: !11093)
!11095 = !DILocation(line: 1933, column: 56, scope: !11093)
!11096 = !DILocation(line: 1933, column: 30, scope: !11093)
!11097 = !DILocation(line: 1933, column: 35, scope: !11093)
!11098 = !DILocation(line: 1933, column: 42, scope: !11093)
!11099 = !DILocation(line: 1933, column: 14, scope: !11093)
!11100 = !DILocation(line: 1933, column: 19, scope: !11093)
!11101 = !DILocation(line: 1933, column: 28, scope: !11093)
!11102 = !DILocation(line: 1934, column: 14, scope: !11093)
!11103 = !DILocation(line: 1937, column: 27, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !1691, file: !490, line: 1937, column: 9)
!11105 = !DILocation(line: 1937, column: 32, scope: !11104)
!11106 = !DILocation(line: 1937, column: 42, scope: !11104)
!11107 = !DILocation(line: 1937, column: 53, scope: !11104)
!11108 = !DILocation(line: 1937, column: 62, scope: !11104)
!11109 = !DILocation(line: 1937, column: 79, scope: !11104)
!11110 = !DILocation(line: 1937, column: 9, scope: !1691)
!11111 = !DILocation(line: 1938, column: 35, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11113, file: !490, line: 1938, column: 13)
!11113 = distinct !DILexicalBlock(scope: !11104, file: !490, line: 1937, column: 86)
!11114 = !DILocation(line: 1938, column: 40, scope: !11112)
!11115 = !DILocation(line: 1938, column: 13, scope: !11112)
!11116 = !DILocation(line: 1938, column: 13, scope: !11113)
!11117 = !DILocation(line: 1939, column: 43, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11112, file: !490, line: 1938, column: 78)
!11119 = !DILocation(line: 1939, column: 48, scope: !11118)
!11120 = !DILocation(line: 1939, column: 55, scope: !11118)
!11121 = !DILocation(line: 1939, column: 29, scope: !11118)
!11122 = !DILocation(line: 1939, column: 34, scope: !11118)
!11123 = !DILocation(line: 1939, column: 41, scope: !11118)
!11124 = !DILocation(line: 1939, column: 13, scope: !11118)
!11125 = !DILocation(line: 1939, column: 18, scope: !11118)
!11126 = !DILocation(line: 1939, column: 27, scope: !11118)
!11127 = !DILocation(line: 1940, column: 13, scope: !11118)
!11128 = !DILocation(line: 1942, column: 49, scope: !11113)
!11129 = !DILocation(line: 1942, column: 55, scope: !11113)
!11130 = !DILocation(line: 1942, column: 23, scope: !11113)
!11131 = !DILocation(line: 1942, column: 9, scope: !11113)
!11132 = !DILocation(line: 1942, column: 14, scope: !11113)
!11133 = !DILocation(line: 1942, column: 21, scope: !11113)
!11134 = !DILocation(line: 1943, column: 5, scope: !11113)
!11135 = !DILocation(line: 1945, column: 25, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11104, file: !490, line: 1944, column: 10)
!11137 = !DILocation(line: 1945, column: 30, scope: !11136)
!11138 = !DILocation(line: 1945, column: 40, scope: !11136)
!11139 = !DILocation(line: 1945, column: 49, scope: !11136)
!11140 = !DILocation(line: 1948, column: 21, scope: !1691)
!11141 = !DILocation(line: 1948, column: 26, scope: !1691)
!11142 = !DILocation(line: 1948, column: 38, scope: !1691)
!11143 = !DILocation(line: 1948, column: 47, scope: !1691)
!11144 = !DILocation(line: 1949, column: 21, scope: !1691)
!11145 = !DILocation(line: 1949, column: 26, scope: !1691)
!11146 = !DILocation(line: 1949, column: 36, scope: !1691)
!11147 = !DILocation(line: 1949, column: 45, scope: !1691)
!11148 = !DILocation(line: 1951, column: 5, scope: !1691)
!11149 = !DILocation(line: 1952, column: 1, scope: !1691)
!11150 = !DILocation(line: 2054, column: 37, scope: !1717)
!11151 = !DILocation(line: 2056, column: 5, scope: !1717)
!11152 = !DILocation(line: 2056, column: 27, scope: !1717)
!11153 = !DILocation(line: 2056, column: 59, scope: !1717)
!11154 = !DILocation(line: 2056, column: 35, scope: !1717)
!11155 = !DILocation(line: 2057, column: 5, scope: !1717)
!11156 = !DILocation(line: 2057, column: 15, scope: !1717)
!11157 = !DILocation(line: 2058, column: 5, scope: !1717)
!11158 = !DILocation(line: 2058, column: 15, scope: !1717)
!11159 = !DILocation(line: 2060, column: 10, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !1717, file: !490, line: 2060, column: 9)
!11161 = !DILocation(line: 2060, column: 17, scope: !11160)
!11162 = !DILocation(line: 2060, column: 9, scope: !1717)
!11163 = !DILocation(line: 2062, column: 16, scope: !11160)
!11164 = !DILocation(line: 2062, column: 9, scope: !11160)
!11165 = !DILocation(line: 2066, column: 31, scope: !1717)
!11166 = !DILocation(line: 2066, column: 38, scope: !1717)
!11167 = !DILocation(line: 2066, column: 18, scope: !1717)
!11168 = !DILocation(line: 2066, column: 16, scope: !1717)
!11169 = !DILocation(line: 2067, column: 9, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !1717, file: !490, line: 2067, column: 9)
!11171 = !DILocation(line: 2067, column: 20, scope: !11170)
!11172 = !DILocation(line: 2067, column: 9, scope: !1717)
!11173 = !DILocation(line: 2068, column: 9, scope: !11170)
!11174 = !DILocation(line: 2070, column: 9, scope: !1725)
!11175 = !DILocation(line: 2070, column: 16, scope: !1725)
!11176 = !DILocation(line: 2070, column: 72, scope: !1725)
!11177 = !DILocation(line: 2070, column: 79, scope: !1725)
!11178 = !DILocation(line: 2070, column: 54, scope: !1725)
!11179 = !DILocation(line: 2070, column: 89, scope: !1725)
!11180 = !DILocation(line: 2070, column: 22, scope: !1725)
!11181 = !DILocation(line: 2070, column: 97, scope: !1725)
!11182 = !DILocation(line: 2070, column: 100, scope: !11183)
!11183 = !DILexicalBlockFile(scope: !1725, file: !490, discriminator: 1)
!11184 = !DILocation(line: 2070, column: 107, scope: !1725)
!11185 = !DILocation(line: 2070, column: 114, scope: !1725)
!11186 = !DILocation(line: 2070, column: 121, scope: !1725)
!11187 = !DILocation(line: 2070, column: 126, scope: !1725)
!11188 = !DILocation(line: 2070, column: 111, scope: !1725)
!11189 = !DILocation(line: 2070, column: 9, scope: !1717)
!11190 = !DILocation(line: 2071, column: 9, scope: !1724)
!11191 = !DILocation(line: 2071, column: 17, scope: !1724)
!11192 = !DILocation(line: 2071, column: 46, scope: !1724)
!11193 = !DILocation(line: 2071, column: 53, scope: !1724)
!11194 = !DILocation(line: 2071, column: 61, scope: !1724)
!11195 = !DILocation(line: 2071, column: 68, scope: !1724)
!11196 = !DILocation(line: 2071, column: 27, scope: !1724)
!11197 = !DILocation(line: 2072, column: 9, scope: !1724)
!11198 = !DILocation(line: 2072, column: 21, scope: !1724)
!11199 = !DILocation(line: 2073, column: 13, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !1724, file: !490, line: 2073, column: 13)
!11201 = !DILocation(line: 2073, column: 21, scope: !11200)
!11202 = !DILocation(line: 2073, column: 13, scope: !1724)
!11203 = !DILocation(line: 2074, column: 17, scope: !11200)
!11204 = !DILocation(line: 2074, column: 13, scope: !11200)
!11205 = !DILocation(line: 2075, column: 18, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11200, file: !490, line: 2075, column: 18)
!11207 = !DILocation(line: 2075, column: 26, scope: !11206)
!11208 = !DILocation(line: 2075, column: 18, scope: !11200)
!11209 = !DILocation(line: 2076, column: 17, scope: !11206)
!11210 = !DILocation(line: 2076, column: 13, scope: !11206)
!11211 = !DILocation(line: 2078, column: 17, scope: !11206)
!11212 = !DILocation(line: 2080, column: 13, scope: !1724)
!11213 = !DILocation(line: 2081, column: 18, scope: !1724)
!11214 = !DILocation(line: 2082, column: 13, scope: !1724)
!11215 = !DILocation(line: 2082, column: 20, scope: !1724)
!11216 = !DILocation(line: 2083, column: 13, scope: !1724)
!11217 = !DILocation(line: 2079, column: 18, scope: !1724)
!11218 = !DILocation(line: 2079, column: 16, scope: !1724)
!11219 = !DILocation(line: 2085, column: 5, scope: !1725)
!11220 = !DILocation(line: 2085, column: 5, scope: !1724)
!11221 = !DILocation(line: 2088, column: 13, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !1725, file: !490, line: 2085, column: 12)
!11223 = !DILocation(line: 2088, column: 20, scope: !11222)
!11224 = !DILocation(line: 2089, column: 13, scope: !11222)
!11225 = !DILocation(line: 2089, column: 20, scope: !11222)
!11226 = !DILocation(line: 2089, column: 23, scope: !11222)
!11227 = !DILocation(line: 2090, column: 13, scope: !11222)
!11228 = !DILocation(line: 2086, column: 18, scope: !11222)
!11229 = !DILocation(line: 2086, column: 16, scope: !11222)
!11230 = !DILocation(line: 2070, column: 127, scope: !1725)
!11231 = !DILocation(line: 2094, column: 5, scope: !1717)
!11232 = !DILocation(line: 2094, column: 10, scope: !11233)
!11233 = !DILexicalBlockFile(scope: !1728, file: !490, discriminator: 1)
!11234 = !DILocation(line: 2094, column: 20, scope: !1728)
!11235 = !DILocation(line: 2094, column: 51, scope: !1728)
!11236 = !DILocation(line: 2094, column: 68, scope: !1731)
!11237 = !DILocation(line: 2094, column: 84, scope: !1731)
!11238 = !DILocation(line: 2094, column: 68, scope: !1728)
!11239 = !DILocation(line: 2094, column: 99, scope: !11240)
!11240 = !DILexicalBlockFile(scope: !1731, file: !490, discriminator: 2)
!11241 = !DILocation(line: 2094, column: 104, scope: !11242)
!11242 = !DILexicalBlockFile(scope: !1730, file: !490, discriminator: 4)
!11243 = !DILocation(line: 2094, column: 114, scope: !1730)
!11244 = !DILocation(line: 2094, column: 144, scope: !1730)
!11245 = !DILocation(line: 2094, column: 170, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !1730, file: !490, line: 2094, column: 167)
!11247 = !DILocation(line: 2094, column: 187, scope: !11246)
!11248 = !DILocation(line: 2094, column: 167, scope: !11246)
!11249 = !DILocation(line: 2094, column: 197, scope: !11246)
!11250 = !DILocation(line: 2094, column: 167, scope: !1730)
!11251 = !DILocation(line: 2094, column: 167, scope: !11252)
!11252 = !DILexicalBlockFile(scope: !1730, file: !490, discriminator: 5)
!11253 = !DILocation(line: 2094, column: 228, scope: !11254)
!11254 = !DILexicalBlockFile(scope: !11246, file: !490, discriminator: 6)
!11255 = !DILocation(line: 2094, column: 246, scope: !11246)
!11256 = !DILocation(line: 2094, column: 256, scope: !11246)
!11257 = !DILocation(line: 2094, column: 281, scope: !11246)
!11258 = !DILocation(line: 2094, column: 212, scope: !11246)
!11259 = !DILocation(line: 2094, column: 300, scope: !11260)
!11260 = !DILexicalBlockFile(scope: !1731, file: !490, discriminator: 7)
!11261 = !DILocation(line: 2094, column: 300, scope: !1730)
!11262 = !DILocation(line: 2094, column: 300, scope: !11263)
!11263 = !DILexicalBlockFile(scope: !1730, file: !490, discriminator: 8)
!11264 = !DILocation(line: 2094, column: 300, scope: !11265)
!11265 = !DILexicalBlockFile(scope: !1730, file: !490, discriminator: 9)
!11266 = !DILocation(line: 2094, column: 313, scope: !11267)
!11267 = !DILexicalBlockFile(scope: !11268, file: !490, discriminator: 10)
!11268 = !DILexicalBlockFile(scope: !1717, file: !490, discriminator: 3)
!11269 = !DILocation(line: 2094, column: 313, scope: !1728)
!11270 = !DILocation(line: 2094, column: 313, scope: !11271)
!11271 = !DILexicalBlockFile(scope: !1728, file: !490, discriminator: 11)
!11272 = !DILocation(line: 2095, column: 12, scope: !1717)
!11273 = !DILocation(line: 2095, column: 5, scope: !1717)
!11274 = !DILocation(line: 2096, column: 1, scope: !1717)
!11275 = !DILocation(line: 2028, column: 50, scope: !1732)
!11276 = !DILocation(line: 2028, column: 66, scope: !1732)
!11277 = !DILocation(line: 2029, column: 38, scope: !1732)
!11278 = !DILocation(line: 2031, column: 53, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !1732, file: !490, line: 2031, column: 9)
!11280 = !DILocation(line: 2031, column: 28, scope: !11279)
!11281 = !DILocation(line: 2031, column: 59, scope: !11279)
!11282 = !DILocation(line: 2031, column: 65, scope: !11279)
!11283 = !DILocation(line: 2031, column: 9, scope: !11279)
!11284 = !DILocation(line: 2031, column: 71, scope: !11279)
!11285 = !DILocation(line: 2031, column: 9, scope: !1732)
!11286 = !DILocation(line: 2032, column: 9, scope: !11279)
!11287 = !DILocation(line: 2034, column: 5, scope: !1732)
!11288 = !DILocation(line: 2034, column: 10, scope: !11289)
!11289 = !DILexicalBlockFile(scope: !1740, file: !490, discriminator: 1)
!11290 = !DILocation(line: 2034, column: 20, scope: !1740)
!11291 = !DILocation(line: 2034, column: 43, scope: !1740)
!11292 = !DILocation(line: 2034, column: 49, scope: !1740)
!11293 = !DILocation(line: 2034, column: 62, scope: !1744)
!11294 = !DILocation(line: 2034, column: 70, scope: !1744)
!11295 = !DILocation(line: 2034, column: 62, scope: !1740)
!11296 = !DILocation(line: 2034, column: 88, scope: !11297)
!11297 = !DILexicalBlockFile(scope: !1743, file: !490, discriminator: 2)
!11298 = !DILocation(line: 2034, column: 94, scope: !1743)
!11299 = !DILocation(line: 2034, column: 102, scope: !1743)
!11300 = !DILocation(line: 2034, column: 116, scope: !1743)
!11301 = !DILocation(line: 2034, column: 121, scope: !11302)
!11302 = !DILexicalBlockFile(scope: !1742, file: !490, discriminator: 4)
!11303 = !DILocation(line: 2034, column: 131, scope: !1742)
!11304 = !DILocation(line: 2034, column: 161, scope: !1742)
!11305 = !DILocation(line: 2034, column: 179, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !1742, file: !490, line: 2034, column: 176)
!11307 = !DILocation(line: 2034, column: 196, scope: !11306)
!11308 = !DILocation(line: 2034, column: 176, scope: !11306)
!11309 = !DILocation(line: 2034, column: 206, scope: !11306)
!11310 = !DILocation(line: 2034, column: 176, scope: !1742)
!11311 = !DILocation(line: 2034, column: 176, scope: !11312)
!11312 = !DILexicalBlockFile(scope: !1742, file: !490, discriminator: 5)
!11313 = !DILocation(line: 2034, column: 237, scope: !11314)
!11314 = !DILexicalBlockFile(scope: !11306, file: !490, discriminator: 6)
!11315 = !DILocation(line: 2034, column: 255, scope: !11306)
!11316 = !DILocation(line: 2034, column: 265, scope: !11306)
!11317 = !DILocation(line: 2034, column: 290, scope: !11306)
!11318 = !DILocation(line: 2034, column: 221, scope: !11306)
!11319 = !DILocation(line: 2034, column: 309, scope: !11320)
!11320 = !DILexicalBlockFile(scope: !1743, file: !490, discriminator: 7)
!11321 = !DILocation(line: 2034, column: 309, scope: !1742)
!11322 = !DILocation(line: 2034, column: 309, scope: !11323)
!11323 = !DILexicalBlockFile(scope: !1742, file: !490, discriminator: 8)
!11324 = !DILocation(line: 2034, column: 322, scope: !11325)
!11325 = !DILexicalBlockFile(scope: !1743, file: !490, discriminator: 9)
!11326 = !DILocation(line: 2034, column: 324, scope: !11327)
!11327 = !DILexicalBlockFile(scope: !11328, file: !490, discriminator: 10)
!11328 = !DILexicalBlockFile(scope: !1732, file: !490, discriminator: 3)
!11329 = !DILocation(line: 2034, column: 324, scope: !1740)
!11330 = !DILocation(line: 2035, column: 5, scope: !1732)
!11331 = !DILocation(line: 2035, column: 10, scope: !11332)
!11332 = !DILexicalBlockFile(scope: !1746, file: !490, discriminator: 1)
!11333 = !DILocation(line: 2035, column: 20, scope: !1746)
!11334 = !DILocation(line: 2035, column: 43, scope: !1746)
!11335 = !DILocation(line: 2035, column: 49, scope: !1746)
!11336 = !DILocation(line: 2035, column: 62, scope: !1750)
!11337 = !DILocation(line: 2035, column: 70, scope: !1750)
!11338 = !DILocation(line: 2035, column: 62, scope: !1746)
!11339 = !DILocation(line: 2035, column: 88, scope: !11340)
!11340 = !DILexicalBlockFile(scope: !1749, file: !490, discriminator: 2)
!11341 = !DILocation(line: 2035, column: 94, scope: !1749)
!11342 = !DILocation(line: 2035, column: 102, scope: !1749)
!11343 = !DILocation(line: 2035, column: 116, scope: !1749)
!11344 = !DILocation(line: 2035, column: 121, scope: !11345)
!11345 = !DILexicalBlockFile(scope: !1748, file: !490, discriminator: 4)
!11346 = !DILocation(line: 2035, column: 131, scope: !1748)
!11347 = !DILocation(line: 2035, column: 161, scope: !1748)
!11348 = !DILocation(line: 2035, column: 179, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !1748, file: !490, line: 2035, column: 176)
!11350 = !DILocation(line: 2035, column: 196, scope: !11349)
!11351 = !DILocation(line: 2035, column: 176, scope: !11349)
!11352 = !DILocation(line: 2035, column: 206, scope: !11349)
!11353 = !DILocation(line: 2035, column: 176, scope: !1748)
!11354 = !DILocation(line: 2035, column: 176, scope: !11355)
!11355 = !DILexicalBlockFile(scope: !1748, file: !490, discriminator: 5)
!11356 = !DILocation(line: 2035, column: 237, scope: !11357)
!11357 = !DILexicalBlockFile(scope: !11349, file: !490, discriminator: 6)
!11358 = !DILocation(line: 2035, column: 255, scope: !11349)
!11359 = !DILocation(line: 2035, column: 265, scope: !11349)
!11360 = !DILocation(line: 2035, column: 290, scope: !11349)
!11361 = !DILocation(line: 2035, column: 221, scope: !11349)
!11362 = !DILocation(line: 2035, column: 309, scope: !11363)
!11363 = !DILexicalBlockFile(scope: !1749, file: !490, discriminator: 7)
!11364 = !DILocation(line: 2035, column: 309, scope: !1748)
!11365 = !DILocation(line: 2035, column: 309, scope: !11366)
!11366 = !DILexicalBlockFile(scope: !1748, file: !490, discriminator: 8)
!11367 = !DILocation(line: 2035, column: 322, scope: !11368)
!11368 = !DILexicalBlockFile(scope: !1749, file: !490, discriminator: 9)
!11369 = !DILocation(line: 2035, column: 324, scope: !11327)
!11370 = !DILocation(line: 2035, column: 324, scope: !1746)
!11371 = !DILocation(line: 2037, column: 34, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !1732, file: !490, line: 2037, column: 9)
!11373 = !DILocation(line: 2038, column: 27, scope: !11372)
!11374 = !DILocation(line: 2038, column: 33, scope: !11372)
!11375 = !DILocation(line: 2039, column: 10, scope: !11372)
!11376 = !DILocation(line: 2039, column: 16, scope: !11372)
!11377 = !DILocation(line: 2040, column: 10, scope: !11372)
!11378 = !DILocation(line: 2040, column: 16, scope: !11372)
!11379 = !DILocation(line: 2041, column: 27, scope: !11372)
!11380 = !DILocation(line: 2041, column: 33, scope: !11372)
!11381 = !DILocation(line: 2037, column: 10, scope: !11372)
!11382 = !DILocation(line: 2037, column: 9, scope: !1732)
!11383 = !DILocation(line: 2042, column: 24, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11372, file: !490, line: 2041, column: 42)
!11385 = !DILocation(line: 2042, column: 30, scope: !11384)
!11386 = !DILocation(line: 2042, column: 37, scope: !11384)
!11387 = !DILocation(line: 2042, column: 9, scope: !11384)
!11388 = !DILocation(line: 2042, column: 15, scope: !11384)
!11389 = !DILocation(line: 2042, column: 22, scope: !11384)
!11390 = !DILocation(line: 2043, column: 9, scope: !11384)
!11391 = !DILocation(line: 2046, column: 21, scope: !1732)
!11392 = !DILocation(line: 2046, column: 27, scope: !1732)
!11393 = !DILocation(line: 2046, column: 37, scope: !1732)
!11394 = !DILocation(line: 2046, column: 46, scope: !1732)
!11395 = !DILocation(line: 2047, column: 21, scope: !1732)
!11396 = !DILocation(line: 2047, column: 27, scope: !1732)
!11397 = !DILocation(line: 2047, column: 37, scope: !1732)
!11398 = !DILocation(line: 2047, column: 46, scope: !1732)
!11399 = !DILocation(line: 2049, column: 5, scope: !1732)
!11400 = !DILocation(line: 2050, column: 1, scope: !1732)
!11401 = !DILocation(line: 2215, column: 44, scope: !1751)
!11402 = !DILocation(line: 2217, column: 5, scope: !1751)
!11403 = !DILocation(line: 2217, column: 10, scope: !11404)
!11404 = !DILexicalBlockFile(scope: !1755, file: !490, discriminator: 1)
!11405 = !DILocation(line: 2217, column: 21, scope: !1755)
!11406 = !DILocation(line: 2217, column: 40, scope: !1755)
!11407 = !DILocation(line: 2217, column: 26, scope: !1755)
!11408 = !DILocation(line: 2217, column: 45, scope: !1755)
!11409 = !DILocation(line: 2217, column: 64, scope: !1755)
!11410 = !DILocation(line: 2217, column: 89, scope: !11411)
!11411 = !DILexicalBlockFile(scope: !11412, file: !490, discriminator: 2)
!11412 = distinct !DILexicalBlock(scope: !1755, file: !490, line: 2217, column: 67)
!11413 = !DILocation(line: 2217, column: 93, scope: !11412)
!11414 = !DILocation(line: 2217, column: 96, scope: !11412)
!11415 = !DILocation(line: 2217, column: 104, scope: !11412)
!11416 = !DILocation(line: 2217, column: 131, scope: !11412)
!11417 = !DILocation(line: 2217, column: 70, scope: !11412)
!11418 = !DILocation(line: 2217, column: 74, scope: !11412)
!11419 = !DILocation(line: 2217, column: 77, scope: !11412)
!11420 = !DILocation(line: 2217, column: 85, scope: !11412)
!11421 = !DILocation(line: 2217, column: 160, scope: !11412)
!11422 = !DILocation(line: 2217, column: 160, scope: !11423)
!11423 = !DILexicalBlockFile(scope: !11412, file: !490, discriminator: 3)
!11424 = !DILocation(line: 2217, column: 201, scope: !11425)
!11425 = !DILexicalBlockFile(scope: !1755, file: !490, discriminator: 4)
!11426 = !DILocation(line: 2217, column: 204, scope: !1755)
!11427 = !DILocation(line: 2217, column: 207, scope: !1755)
!11428 = !DILocation(line: 2217, column: 173, scope: !1755)
!11429 = !DILocation(line: 2217, column: 176, scope: !1755)
!11430 = !DILocation(line: 2217, column: 179, scope: !1755)
!11431 = !DILocation(line: 2217, column: 188, scope: !1755)
!11432 = !DILocation(line: 2217, column: 191, scope: !1755)
!11433 = !DILocation(line: 2217, column: 199, scope: !1755)
!11434 = !DILocation(line: 2217, column: 244, scope: !1755)
!11435 = !DILocation(line: 2217, column: 247, scope: !1755)
!11436 = !DILocation(line: 2217, column: 250, scope: !1755)
!11437 = !DILocation(line: 2217, column: 216, scope: !1755)
!11438 = !DILocation(line: 2217, column: 219, scope: !1755)
!11439 = !DILocation(line: 2217, column: 222, scope: !1755)
!11440 = !DILocation(line: 2217, column: 231, scope: !1755)
!11441 = !DILocation(line: 2217, column: 234, scope: !1755)
!11442 = !DILocation(line: 2217, column: 242, scope: !1755)
!11443 = !DILocation(line: 2217, column: 259, scope: !1755)
!11444 = !DILocation(line: 2217, column: 262, scope: !1755)
!11445 = !DILocation(line: 2217, column: 265, scope: !1755)
!11446 = !DILocation(line: 2217, column: 273, scope: !1755)
!11447 = !DILocation(line: 2217, column: 287, scope: !1751)
!11448 = !DILocation(line: 2217, column: 287, scope: !1755)
!11449 = !DILocation(line: 2218, column: 25, scope: !1751)
!11450 = !DILocation(line: 2218, column: 5, scope: !1751)
!11451 = !DILocation(line: 2219, column: 9, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !1751, file: !490, line: 2219, column: 9)
!11453 = !DILocation(line: 2219, column: 27, scope: !11452)
!11454 = !DILocation(line: 2219, column: 9, scope: !1751)
!11455 = !DILocation(line: 2220, column: 23, scope: !11452)
!11456 = !DILocation(line: 2220, column: 11, scope: !11452)
!11457 = !DILocation(line: 2220, column: 31, scope: !11452)
!11458 = !DILocation(line: 2220, column: 41, scope: !11452)
!11459 = !DILocation(line: 2220, column: 61, scope: !11452)
!11460 = !DILocation(line: 2220, column: 49, scope: !11452)
!11461 = !DILocation(line: 2220, column: 9, scope: !11452)
!11462 = !DILocation(line: 2222, column: 35, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11452, file: !490, line: 2221, column: 10)
!11464 = !DILocation(line: 2222, column: 22, scope: !11463)
!11465 = !DILocation(line: 2222, column: 9, scope: !11463)
!11466 = !DILocation(line: 2222, column: 15, scope: !11463)
!11467 = !DILocation(line: 2222, column: 20, scope: !11463)
!11468 = !DILocation(line: 2223, column: 30, scope: !11463)
!11469 = !DILocation(line: 2223, column: 28, scope: !11463)
!11470 = !DILocation(line: 2224, column: 26, scope: !11463)
!11471 = !DILocation(line: 2226, column: 1, scope: !1751)
!11472 = !DILocation(line: 2192, column: 31, scope: !1756)
!11473 = !DILocation(line: 2192, column: 47, scope: !1756)
!11474 = !DILocation(line: 2192, column: 63, scope: !1756)
!11475 = !DILocation(line: 2194, column: 5, scope: !1756)
!11476 = !DILocation(line: 2194, column: 28, scope: !1756)
!11477 = !DILocation(line: 2196, column: 9, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !1756, file: !490, line: 2196, column: 9)
!11479 = !DILocation(line: 2196, column: 34, scope: !11478)
!11480 = !DILocation(line: 2196, column: 17, scope: !11478)
!11481 = !DILocation(line: 2196, column: 14, scope: !11478)
!11482 = !DILocation(line: 2196, column: 9, scope: !1756)
!11483 = !DILocation(line: 2197, column: 34, scope: !11478)
!11484 = !DILocation(line: 2197, column: 40, scope: !11478)
!11485 = !DILocation(line: 2197, column: 46, scope: !11478)
!11486 = !DILocation(line: 2197, column: 16, scope: !11478)
!11487 = !DILocation(line: 2197, column: 9, scope: !11478)
!11488 = !DILocation(line: 2198, column: 9, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !1756, file: !490, line: 2198, column: 9)
!11490 = !DILocation(line: 2198, column: 28, scope: !11489)
!11491 = !DILocation(line: 2198, column: 9, scope: !1756)
!11492 = !DILocation(line: 2199, column: 34, scope: !11489)
!11493 = !DILocation(line: 2199, column: 40, scope: !11489)
!11494 = !DILocation(line: 2199, column: 46, scope: !11489)
!11495 = !DILocation(line: 2199, column: 16, scope: !11489)
!11496 = !DILocation(line: 2199, column: 9, scope: !11489)
!11497 = !DILocation(line: 2201, column: 12, scope: !1756)
!11498 = !DILocation(line: 2201, column: 10, scope: !1756)
!11499 = !DILocation(line: 2202, column: 18, scope: !1756)
!11500 = !DILocation(line: 2202, column: 5, scope: !1756)
!11501 = !DILocation(line: 2202, column: 11, scope: !1756)
!11502 = !DILocation(line: 2202, column: 16, scope: !1756)
!11503 = !DILocation(line: 2204, column: 9, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !1756, file: !490, line: 2204, column: 9)
!11505 = !DILocation(line: 2204, column: 15, scope: !11504)
!11506 = !DILocation(line: 2204, column: 20, scope: !11504)
!11507 = !DILocation(line: 2204, column: 9, scope: !1756)
!11508 = !DILocation(line: 2205, column: 9, scope: !11504)
!11509 = !DILocation(line: 2206, column: 52, scope: !1756)
!11510 = !DILocation(line: 2206, column: 58, scope: !1756)
!11511 = !DILocation(line: 2206, column: 26, scope: !1756)
!11512 = !DILocation(line: 2206, column: 24, scope: !1756)
!11513 = !DILocation(line: 2207, column: 22, scope: !1756)
!11514 = !DILocation(line: 2208, column: 5, scope: !1756)
!11515 = !DILocation(line: 2208, column: 11, scope: !1756)
!11516 = !DILocation(line: 2208, column: 16, scope: !1756)
!11517 = !DILocation(line: 2209, column: 33, scope: !1756)
!11518 = !DILocation(line: 2209, column: 21, scope: !1756)
!11519 = !DILocation(line: 2209, column: 41, scope: !1756)
!11520 = !DILocation(line: 2209, column: 52, scope: !1756)
!11521 = !DILocation(line: 2210, column: 5, scope: !1756)
!11522 = !DILocation(line: 2210, column: 10, scope: !11523)
!11523 = !DILexicalBlockFile(scope: !1763, file: !490, discriminator: 1)
!11524 = !DILocation(line: 2210, column: 21, scope: !1763)
!11525 = !DILocation(line: 2210, column: 40, scope: !1763)
!11526 = !DILocation(line: 2210, column: 26, scope: !1763)
!11527 = !DILocation(line: 2210, column: 45, scope: !1763)
!11528 = !DILocation(line: 2210, column: 56, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !1763, file: !490, line: 2210, column: 54)
!11530 = !DILocation(line: 2210, column: 60, scope: !11529)
!11531 = !DILocation(line: 2210, column: 63, scope: !11529)
!11532 = !DILocation(line: 2210, column: 71, scope: !11529)
!11533 = !DILocation(line: 2210, column: 79, scope: !11529)
!11534 = !DILocation(line: 2210, column: 54, scope: !1763)
!11535 = !DILocation(line: 2210, column: 88, scope: !11536)
!11536 = !DILexicalBlockFile(scope: !11529, file: !490, discriminator: 2)
!11537 = !DILocation(line: 2210, column: 132, scope: !11538)
!11538 = !DILexicalBlockFile(scope: !1763, file: !490, discriminator: 3)
!11539 = !DILocation(line: 2210, column: 157, scope: !11540)
!11540 = !DILexicalBlockFile(scope: !11541, file: !490, discriminator: 4)
!11541 = distinct !DILexicalBlock(scope: !1763, file: !490, line: 2210, column: 135)
!11542 = !DILocation(line: 2210, column: 161, scope: !11541)
!11543 = !DILocation(line: 2210, column: 164, scope: !11541)
!11544 = !DILocation(line: 2210, column: 172, scope: !11541)
!11545 = !DILocation(line: 2210, column: 199, scope: !11541)
!11546 = !DILocation(line: 2210, column: 138, scope: !11541)
!11547 = !DILocation(line: 2210, column: 142, scope: !11541)
!11548 = !DILocation(line: 2210, column: 145, scope: !11541)
!11549 = !DILocation(line: 2210, column: 153, scope: !11541)
!11550 = !DILocation(line: 2210, column: 228, scope: !11541)
!11551 = !DILocation(line: 2210, column: 228, scope: !11552)
!11552 = !DILexicalBlockFile(scope: !11541, file: !490, discriminator: 5)
!11553 = !DILocation(line: 2210, column: 257, scope: !11554)
!11554 = !DILexicalBlockFile(scope: !1763, file: !490, discriminator: 6)
!11555 = !DILocation(line: 2210, column: 241, scope: !1763)
!11556 = !DILocation(line: 2210, column: 244, scope: !1763)
!11557 = !DILocation(line: 2210, column: 247, scope: !1763)
!11558 = !DILocation(line: 2210, column: 255, scope: !1763)
!11559 = !DILocation(line: 2210, column: 292, scope: !1763)
!11560 = !DILocation(line: 2210, column: 311, scope: !1763)
!11561 = !DILocation(line: 2210, column: 314, scope: !1763)
!11562 = !DILocation(line: 2210, column: 276, scope: !1763)
!11563 = !DILocation(line: 2210, column: 279, scope: !1763)
!11564 = !DILocation(line: 2210, column: 282, scope: !1763)
!11565 = !DILocation(line: 2210, column: 290, scope: !1763)
!11566 = !DILocation(line: 2210, column: 351, scope: !1763)
!11567 = !DILocation(line: 2210, column: 323, scope: !1763)
!11568 = !DILocation(line: 2210, column: 326, scope: !1763)
!11569 = !DILocation(line: 2210, column: 329, scope: !1763)
!11570 = !DILocation(line: 2210, column: 338, scope: !1763)
!11571 = !DILocation(line: 2210, column: 341, scope: !1763)
!11572 = !DILocation(line: 2210, column: 349, scope: !1763)
!11573 = !DILocation(line: 2210, column: 386, scope: !1763)
!11574 = !DILocation(line: 2210, column: 354, scope: !1763)
!11575 = !DILocation(line: 2210, column: 373, scope: !1763)
!11576 = !DILocation(line: 2210, column: 376, scope: !1763)
!11577 = !DILocation(line: 2210, column: 384, scope: !1763)
!11578 = !DILocation(line: 2210, column: 389, scope: !1756)
!11579 = !DILocation(line: 2210, column: 389, scope: !1763)
!11580 = !DILocation(line: 2210, column: 389, scope: !11581)
!11581 = !DILexicalBlockFile(scope: !1763, file: !490, discriminator: 7)
!11582 = !DILocation(line: 2211, column: 24, scope: !1756)
!11583 = !DILocation(line: 2211, column: 12, scope: !1756)
!11584 = !DILocation(line: 2211, column: 5, scope: !1756)
!11585 = !DILocation(line: 2212, column: 1, scope: !1756)
