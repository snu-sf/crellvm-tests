; ModuleID = 'programs_new/Python-new/bufferedio.bc.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct.PyOSErrorObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i64 }
%struct.buffered = type { %struct._object, %struct._object*, i32, i32, i32, i32, i8, i32, i64, i8*, i64, i64, i64, i64, i64, i8*, i64, i64, i64, %struct._object*, %struct._object* }
%union._gc_head = type { %struct.anon }
%struct.anon = type { %union._gc_head*, %union._gc_head*, i64 }
%struct.rwpair = type { %struct._object, %struct.buffered*, %struct.buffered*, %struct._object*, %struct._object* }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }
%struct._PyIO_State = type { i32, %struct._object*, %struct._object* }
%struct._ts = type { %struct._ts*, %struct._ts*, %struct._is*, %struct._frame*, i32, i8, i8, i32, i32, i32 (%struct._object*, %struct._frame*, i32, %struct._object*)*, i32 (%struct._object*, %struct._frame*, i32, %struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i32, %struct._object*, i64, i32, %struct._object*, void (i8*)*, i8* }
%struct._is = type { %struct._is*, %struct._ts*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i32, i32, i32, %struct._object* }
%struct._frame = type opaque

@.str = private unnamed_addr constant [20 x i8] c"_io._BufferedIOBase\00", align 1
@bufferediobase_doc = internal global [497 x i8] c"Base class for buffered IO objects.\0A\0AThe main difference with RawIOBase is that the read() method\0Asupports omitting the size argument, and does not have a default\0Aimplementation that defers to readinto().\0A\0AIn addition, read(), readinto() and write() may raise\0ABlockingIOError if the underlying raw stream is in non-blocking\0Amode and not ready; unlike their raw counterparts, they will never\0Areturn None.\0A\0AA typical implementation should not inherit from a RawIOBase\0Aimplementation, but wrap one.\0A\00", align 16
@bufferediobase_methods = internal global [6 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @bufferediobase_detach to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @bufferediobase_detach_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @bufferediobase_read, i32 1, i8* getelementptr inbounds ([600 x i8], [600 x i8]* @bufferediobase_read_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @bufferediobase_read1, i32 1, i8* getelementptr inbounds ([182 x i8], [182 x i8]* @bufferediobase_read1_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @bufferediobase_readinto, i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @bufferediobase_write, i32 1, i8* getelementptr inbounds ([228 x i8], [228 x i8]* @bufferediobase_write_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@PyIOBase_Type = external global %struct._typeobject, align 8
@PyBufferedIOBase_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i64 0, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 263169, i8* getelementptr inbounds ([497 x i8], [497 x i8]* @bufferediobase_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([6 x %struct.PyMethodDef], [6 x %struct.PyMethodDef]* @bufferediobase_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* @PyIOBase_Type, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@_PyIO_trap_eintr.eintr_int = internal global %struct._object* null, align 8
@PyExc_EnvironmentError = external global %struct._object*, align 8
@.str.1 = private unnamed_addr constant [19 x i8] c"_io.BufferedReader\00", align 1
@bufferedreader_doc = internal global [69 x i8] c"Create a new buffered reader using the given readable raw IO object.\00", align 16
@bufferedreader_methods = internal global [20 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_detach to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_simple_flush to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_close to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_seekable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_readable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_writable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_fileno to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_isatty to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_dealloc_warn to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_getstate to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_read to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_peek to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_read1 to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_readinto to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_readline to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_seek to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_tell to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_truncate to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, i8*)* @buffered_sizeof to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@bufferedreader_members = internal global [3 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i32 6, i64 16, i32 1, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i32 0, i32 0), i32 14, i64 40, i32 0, i8* null }, %struct.PyMemberDef zeroinitializer], align 16
@bufferedreader_getset = internal global [4 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.buffered*, i8*)* @buffered_closed_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.buffered*, i8*)* @buffered_name_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.buffered*, i8*)* @buffered_mode_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@PyBufferedReader_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), i64 152, i64 0, void (%struct._object*)* bitcast (void (%struct.buffered*)* @buffered_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.buffered*)* @buffered_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279553, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @bufferedreader_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.buffered*, i32 (%struct._object*, i8*)*, i8*)* @buffered_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.buffered*)* @buffered_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 144, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.buffered*)* @buffered_iternext to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([20 x %struct.PyMethodDef], [20 x %struct.PyMethodDef]* @bufferedreader_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([3 x %struct.PyMemberDef], [3 x %struct.PyMemberDef]* @bufferedreader_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([4 x %struct.PyGetSetDef], [4 x %struct.PyGetSetDef]* @bufferedreader_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 136, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.buffered*, %struct._object*, %struct._object*)* @bufferedreader_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyType_GenericNew, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.2 = private unnamed_addr constant [19 x i8] c"_io.BufferedWriter\00", align 1
@bufferedwriter_doc = internal global [198 x i8] c"A buffer for a writeable sequential RawIO object.\0A\0AThe constructor creates a BufferedWriter for the given writeable raw\0Astream. If the buffer_size is not given, it defaults to\0ADEFAULT_BUFFER_SIZE.\0A\00", align 16
@bufferedwriter_methods = internal global [16 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_close to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_detach to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_seekable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_readable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_writable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_fileno to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_isatty to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_dealloc_warn to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_getstate to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @bufferedwriter_write to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_truncate to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_flush to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_seek to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_tell to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, i8*)* @buffered_sizeof to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@bufferedwriter_members = internal global [3 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i32 6, i64 16, i32 1, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i32 0, i32 0), i32 14, i64 40, i32 0, i8* null }, %struct.PyMemberDef zeroinitializer], align 16
@bufferedwriter_getset = internal global [4 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.buffered*, i8*)* @buffered_closed_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.buffered*, i8*)* @buffered_name_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.buffered*, i8*)* @buffered_mode_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@PyBufferedWriter_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0), i64 152, i64 0, void (%struct._object*)* bitcast (void (%struct.buffered*)* @buffered_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.buffered*)* @buffered_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279553, i8* getelementptr inbounds ([198 x i8], [198 x i8]* @bufferedwriter_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.buffered*, i32 (%struct._object*, i8*)*, i8*)* @buffered_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.buffered*)* @buffered_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 144, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([16 x %struct.PyMethodDef], [16 x %struct.PyMethodDef]* @bufferedwriter_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([3 x %struct.PyMemberDef], [3 x %struct.PyMemberDef]* @bufferedwriter_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([4 x %struct.PyGetSetDef], [4 x %struct.PyGetSetDef]* @bufferedwriter_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 136, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.buffered*, %struct._object*, %struct._object*)* @bufferedwriter_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyType_GenericNew, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.3 = private unnamed_addr constant [19 x i8] c"_io.BufferedRWPair\00", align 1
@bufferedrwpair_doc = internal global [376 x i8] c"A buffered reader and writer object together.\0A\0AA buffered reader object and buffered writer object put together to\0Aform a sequential IO object that can read and write. This is typically\0Aused with a socket or two-way pipe.\0A\0Areader and writer are RawIOBase objects that are readable and\0Awriteable respectively. If the buffer_size is omitted it defaults to\0ADEFAULT_BUFFER_SIZE.\0A\00", align 16
@bufferedrwpair_methods = internal global [12 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_read to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_peek to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_read1 to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_readinto to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_write to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_flush to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_readable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_writable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_close to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_isatty to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_getstate to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@bufferedrwpair_getset = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.rwpair*, i8*)* @bufferedrwpair_closed_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@PyBufferedRWPair_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i64 48, i64 0, void (%struct._object*)* bitcast (void (%struct.rwpair*)* @bufferedrwpair_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279553, i8* getelementptr inbounds ([376 x i8], [376 x i8]* @bufferedrwpair_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.rwpair*, i32 (%struct._object*, i8*)*, i8*)* @bufferedrwpair_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.rwpair*)* @bufferedrwpair_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 40, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([12 x %struct.PyMethodDef], [12 x %struct.PyMethodDef]* @bufferedrwpair_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @bufferedrwpair_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 32, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.rwpair*, %struct._object*, %struct._object*)* @bufferedrwpair_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyType_GenericNew, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.4 = private unnamed_addr constant [19 x i8] c"_io.BufferedRandom\00", align 1
@bufferedrandom_doc = internal global [216 x i8] c"A buffered interface to random access streams.\0A\0AThe constructor creates a reader and writer for a seekable stream,\0Araw, given in the first argument. If the buffer_size is omitted it\0Adefaults to DEFAULT_BUFFER_SIZE.\0A\00", align 16
@bufferedrandom_methods = internal global [21 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_close to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_detach to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_seekable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_readable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_writable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_fileno to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_isatty to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_dealloc_warn to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_getstate to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_flush to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_seek to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_tell to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_truncate to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_read to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_read1 to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_readinto to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_readline to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @buffered_peek to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, %struct._object*)* @bufferedwriter_write to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.buffered*, i8*)* @buffered_sizeof to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@bufferedrandom_members = internal global [3 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i32 6, i64 16, i32 1, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i32 0, i32 0), i32 14, i64 40, i32 0, i8* null }, %struct.PyMemberDef zeroinitializer], align 16
@bufferedrandom_getset = internal global [4 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.buffered*, i8*)* @buffered_closed_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.buffered*, i8*)* @buffered_name_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.buffered*, i8*)* @buffered_mode_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@PyBufferedRandom_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), i64 152, i64 0, void (%struct._object*)* bitcast (void (%struct.buffered*)* @buffered_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.buffered*)* @buffered_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279553, i8* getelementptr inbounds ([216 x i8], [216 x i8]* @bufferedrandom_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.buffered*, i32 (%struct._object*, i8*)*, i8*)* @buffered_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.buffered*)* @buffered_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 144, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.buffered*)* @buffered_iternext to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([21 x %struct.PyMethodDef], [21 x %struct.PyMethodDef]* @bufferedrandom_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([3 x %struct.PyMemberDef], [3 x %struct.PyMemberDef]* @bufferedrandom_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([4 x %struct.PyGetSetDef], [4 x %struct.PyGetSetDef]* @bufferedrandom_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 136, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.buffered*, %struct._object*, %struct._object*)* @bufferedrandom_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyType_GenericNew, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.5 = private unnamed_addr constant [7 x i8] c"detach\00", align 1
@bufferediobase_detach_doc = internal global [147 x i8] c"Disconnect this buffer from its underlying raw stream and return it.\0A\0AAfter the raw stream has been detached, the buffer is in an unusable\0Astate.\0A\00", align 16
@.str.6 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@bufferediobase_read_doc = internal global [600 x i8] c"Read and return up to n bytes.\0A\0AIf the argument is omitted, None, or negative, reads and\0Areturns all data until EOF.\0A\0AIf the argument is positive, and the underlying raw stream is\0Anot 'interactive', multiple raw reads may be issued to satisfy\0Athe byte count (unless EOF is reached first).  But for\0Ainteractive raw streams (as well as sockets and pipes), at most\0Aone raw read will be issued, and a short result does not imply\0Athat EOF is imminent.\0A\0AReturns an empty bytes object on EOF.\0A\0AReturns None if the underlying raw stream was open in non-blocking\0Amode and no data is available at the moment.\0A\00", align 16
@.str.7 = private unnamed_addr constant [6 x i8] c"read1\00", align 1
@bufferediobase_read1_doc = internal global [182 x i8] c"Read and return up to n bytes, with at most one read() call\0Ato the underlying raw stream. A short result does not imply\0Athat EOF is imminent.\0A\0AReturns an empty bytes object on EOF.\0A\00", align 16
@.str.8 = private unnamed_addr constant [9 x i8] c"readinto\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@bufferediobase_write_doc = internal global [228 x i8] c"Write the given buffer to the IO stream.\0A\0AReturns the number of bytes written, which is never less than\0Alen(b).\0A\0ARaises BlockingIOError if the buffer is full and the\0Aunderlying raw stream cannot accept more data at the moment.\0A\00", align 16
@.str.10 = private unnamed_addr constant [12 x i8] c"w*:readinto\00", align 1
@PyId_read = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), %struct._object* null }, align 8
@.str.11 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@PyExc_TypeError = external global %struct._object*, align 8
@.str.12 = private unnamed_addr constant [27 x i8] c"read() should return bytes\00", align 1
@PyExc_ValueError = external global %struct._object*, align 8
@.str.13 = private unnamed_addr constant [65 x i8] c"read() returned too much data: %zd bytes requested, %zd returned\00", align 1
@PyId_name = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), %struct._object* null }, align 8
@PyExc_AttributeError = external global %struct._object*, align 8
@.str.14 = private unnamed_addr constant [5 x i8] c"<%s>\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"<%s name=%R>\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.17 = private unnamed_addr constant [29 x i8] c"raw stream has been detached\00", align 1
@.str.18 = private unnamed_addr constant [38 x i8] c"I/O operation on uninitialized object\00", align 1
@_PyIO_str_readline = external global %struct._object*, align 8
@PyExc_IOError = external global %struct._object*, align 8
@.str.19 = private unnamed_addr constant [61 x i8] c"readline() should have returned a bytes object, not '%.200s'\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"readline of closed file\00", align 1
@_PyIO_empty_bytes = external global %struct._object*, align 8
@_PyIO_str_closed = external global %struct._object*, align 8
@PyExc_RuntimeError = external global %struct._object*, align 8
@.str.21 = private unnamed_addr constant [25 x i8] c"reentrant call inside %R\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@.str.22 = private unnamed_addr constant [42 x i8] c"write could not complete without blocking\00", align 1
@_PyIO_str_write = external global %struct._object*, align 8
@.str.23 = private unnamed_addr constant [77 x i8] c"raw write() returned invalid length %zd (should have been between 0 and %zd)\00", align 1
@PyExc_BlockingIOError = external global %struct._object*, align 8
@.str.24 = private unnamed_addr constant [4 x i8] c"isn\00", align 1
@_PyIO_str_seek = external global %struct._object*, align 8
@.str.25 = private unnamed_addr constant [41 x i8] c"Raw stream returned invalid position %zd\00", align 1
@_PyIO_str_readinto = external global %struct._object*, align 8
@.str.26 = private unnamed_addr constant [80 x i8] c"raw readinto() returned invalid length %zd (should have been between 0 and %zd)\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"flush\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"seekable\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"readable\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"writable\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"fileno\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"isatty\00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c"_dealloc_warn\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"__getstate__\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"peek\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"readline\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"seek\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"tell\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"truncate\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"__sizeof__\00", align 1
@_PyIO_str_flush = external global %struct._object*, align 8
@_PyIO_str_close = external global %struct._object*, align 8
@_PyIO_str_seekable = external global %struct._object*, align 8
@_PyIO_str_readable = external global %struct._object*, align 8
@_PyIO_str_writable = external global %struct._object*, align 8
@_PyIO_str_fileno = external global %struct._object*, align 8
@_PyIO_str_isatty = external global %struct._object*, align 8
@PyId__dealloc_warn = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i32 0, i32 0), %struct._object* null }, align 8
@.str.42 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.43 = private unnamed_addr constant [29 x i8] c"cannot serialize '%s' object\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"|O&:read\00", align 1
@.str.45 = private unnamed_addr constant [35 x i8] c"read length must be positive or -1\00", align 1
@.str.46 = private unnamed_addr constant [20 x i8] c"read of closed file\00", align 1
@_PyIO_str_readall = external global %struct._object*, align 8
@.str.47 = private unnamed_addr constant [30 x i8] c"readall() should return bytes\00", align 1
@_PyIO_str_read = external global %struct._object*, align 8
@.str.48 = private unnamed_addr constant [8 x i8] c"|n:peek\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"n:read1\00", align 1
@.str.50 = private unnamed_addr constant [29 x i8] c"read length must be positive\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"|O&:readline\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"O|i:seek\00", align 1
@.str.53 = private unnamed_addr constant [28 x i8] c"whence value %d unsupported\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"seek of closed file\00", align 1
@_Py_TrueStruct = external global %struct._longobject, align 8
@_PyIO_str_tell = external global %struct._object*, align 8
@.str.55 = private unnamed_addr constant [12 x i8] c"|O:truncate\00", align 1
@_PyIO_str_truncate = external global %struct._object*, align 8
@.str.56 = private unnamed_addr constant [4 x i8] c"raw\00", align 1
@.str.57 = private unnamed_addr constant [12 x i8] c"_finalizing\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"closed\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@PyId_mode = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), %struct._object* null }, align 8
@.str.60 = private unnamed_addr constant [12 x i8] c"buffer_size\00", align 1
@bufferedreader_init.kwlist = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i32 0, i32 0), i8* null], align 16
@.str.61 = private unnamed_addr constant [19 x i8] c"O|n:BufferedReader\00", align 1
@PyFileIO_Type = external global %struct._typeobject, align 8
@.str.62 = private unnamed_addr constant [38 x i8] c"buffer size must be strictly positive\00", align 1
@.str.63 = private unnamed_addr constant [25 x i8] c"can't allocate read lock\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"y*:write\00", align 1
@.str.65 = private unnamed_addr constant [21 x i8] c"write to closed file\00", align 1
@.str.66 = private unnamed_addr constant [21 x i8] c"flush of closed file\00", align 1
@bufferedwriter_init.kwlist = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i32 0, i32 0), i8* null], align 16
@.str.67 = private unnamed_addr constant [19 x i8] c"O|n:BufferedWriter\00", align 1
@PyId_peek = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), %struct._object* null }, align 8
@PyId_read1 = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %struct._object* null }, align 8
@PyId_readinto = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), %struct._object* null }, align 8
@PyId_write = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), %struct._object* null }, align 8
@PyId_flush = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), %struct._object* null }, align 8
@PyId_readable = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), %struct._object* null }, align 8
@PyId_writable = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i32 0, i32 0), %struct._object* null }, align 8
@PyId_close = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %struct._object* null }, align 8
@PyId_isatty = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), %struct._object* null }, align 8
@_Py_FalseStruct = external global %struct._longobject, align 8
@.str.68 = private unnamed_addr constant [53 x i8] c"the BufferedRWPair object is being garbage-collected\00", align 1
@.str.69 = private unnamed_addr constant [20 x i8] c"OO|n:BufferedRWPair\00", align 1
@.str.70 = private unnamed_addr constant [3 x i8] c"On\00", align 1
@bufferedrandom_init.kwlist = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i32 0, i32 0), i8* null], align 16
@.str.71 = private unnamed_addr constant [19 x i8] c"O|n:BufferedRandom\00", align 1

; Function Attrs: nounwind uwtable
define i32 @_PyIO_trap_eintr() #0 {
entry:
  %retval = alloca i32, align 4
  %typ = alloca %struct._object*, align 8
  %val = alloca %struct._object*, align 8
  %tb = alloca %struct._object*, align 8
  %env_err = alloca %struct.PyOSErrorObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp13 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp28 = alloca %struct._object*, align 8
  %0 = bitcast %struct._object** %typ to i8*, !dbg !1449
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1449
  call void @llvm.dbg.declare(metadata %struct._object** %typ, metadata !429, metadata !1450), !dbg !1451
  %1 = bitcast %struct._object** %val to i8*, !dbg !1449
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1449
  call void @llvm.dbg.declare(metadata %struct._object** %val, metadata !430, metadata !1450), !dbg !1452
  %2 = bitcast %struct._object** %tb to i8*, !dbg !1449
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !1449
  call void @llvm.dbg.declare(metadata %struct._object** %tb, metadata !431, metadata !1450), !dbg !1453
  %3 = bitcast %struct.PyOSErrorObject** %env_err to i8*, !dbg !1454
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !1454
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %env_err, metadata !432, metadata !1450), !dbg !1455
  %4 = load %struct._object*, %struct._object** @_PyIO_trap_eintr.eintr_int, align 8, !dbg !1456, !tbaa !1458
  %cmp = icmp eq %struct._object* %4, null, !dbg !1462
  br i1 %cmp, label %if.then, label %if.end, !dbg !1463

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyLong_FromLong(i64 4), !dbg !1464
  store %struct._object* %call, %struct._object** @_PyIO_trap_eintr.eintr_int, align 8, !dbg !1466, !tbaa !1458
  br label %if.end, !dbg !1467

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_EnvironmentError, align 8, !dbg !1468, !tbaa !1458
  %call1 = call i32 @PyErr_ExceptionMatches(%struct._object* %5), !dbg !1470
  %tobool = icmp ne i32 %call1, 0, !dbg !1470
  br i1 %tobool, label %if.end.3, label %if.then.2, !dbg !1471

if.then.2:                                        ; preds = %if.end
  store i32 0, i32* %retval, !dbg !1472
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1472

if.end.3:                                         ; preds = %if.end
  call void @PyErr_Fetch(%struct._object** %typ, %struct._object** %val, %struct._object** %tb), !dbg !1473
  call void @PyErr_NormalizeException(%struct._object** %typ, %struct._object** %val, %struct._object** %tb), !dbg !1474
  %6 = load %struct._object*, %struct._object** %val, align 8, !dbg !1475, !tbaa !1458
  %7 = bitcast %struct._object* %6 to %struct.PyOSErrorObject*, !dbg !1476
  store %struct.PyOSErrorObject* %7, %struct.PyOSErrorObject** %env_err, align 8, !dbg !1477, !tbaa !1458
  %8 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %env_err, align 8, !dbg !1478, !tbaa !1458
  %myerrno = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %8, i32 0, i32 7, !dbg !1479
  %9 = load %struct._object*, %struct._object** %myerrno, align 8, !dbg !1479, !tbaa !1480
  %cmp4 = icmp ne %struct._object* %9, null, !dbg !1484
  br i1 %cmp4, label %land.lhs.true, label %if.end.42, !dbg !1485

land.lhs.true:                                    ; preds = %if.end.3
  %10 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %env_err, align 8, !dbg !1486, !tbaa !1458
  %myerrno5 = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %10, i32 0, i32 7, !dbg !1487
  %11 = load %struct._object*, %struct._object** %myerrno5, align 8, !dbg !1487, !tbaa !1480
  %12 = load %struct._object*, %struct._object** @_PyIO_trap_eintr.eintr_int, align 8, !dbg !1488, !tbaa !1458
  %call6 = call i32 @PyObject_RichCompareBool(%struct._object* %11, %struct._object* %12, i32 2), !dbg !1489
  %cmp7 = icmp sgt i32 %call6, 0, !dbg !1490
  br i1 %cmp7, label %if.then.8, label %if.end.42, !dbg !1491

if.then.8:                                        ; preds = %land.lhs.true
  br label %do.body, !dbg !1492

do.body:                                          ; preds = %if.then.8
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1493
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !1493
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !433, metadata !1450), !dbg !1495
  %14 = load %struct._object*, %struct._object** %typ, align 8, !dbg !1496, !tbaa !1458
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !1495, !tbaa !1458
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1497, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !1499
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !1500, !tbaa !1501
  %dec = add i64 %16, -1, !dbg !1500
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !1500, !tbaa !1501
  %cmp9 = icmp ne i64 %dec, 0, !dbg !1502
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !1503

if.then.10:                                       ; preds = %do.body
  br label %if.end.11, !dbg !1504

if.else:                                          ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1506, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !1508
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1508, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !1510
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1510, !tbaa !1511
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1515, !tbaa !1458
  call void %19(%struct._object* %20), !dbg !1516
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1517
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !1517
  br label %do.cond, !dbg !1519

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !1520

do.end:                                           ; preds = %do.cond
  br label %do.body.12, !dbg !1522

do.body.12:                                       ; preds = %do.end
  %22 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !1523
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !1523
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp13, metadata !437, metadata !1450), !dbg !1525
  %23 = load %struct._object*, %struct._object** %val, align 8, !dbg !1526, !tbaa !1458
  store %struct._object* %23, %struct._object** %_py_decref_tmp13, align 8, !dbg !1525, !tbaa !1458
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !1527, !tbaa !1458
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !1529
  %25 = load i64, i64* %ob_refcnt14, align 8, !dbg !1530, !tbaa !1501
  %dec15 = add i64 %25, -1, !dbg !1530
  store i64 %dec15, i64* %ob_refcnt14, align 8, !dbg !1530, !tbaa !1501
  %cmp16 = icmp ne i64 %dec15, 0, !dbg !1531
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !1532

if.then.17:                                       ; preds = %do.body.12
  br label %if.end.21, !dbg !1533

if.else.18:                                       ; preds = %do.body.12
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !1535, !tbaa !1458
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !1537
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !1537, !tbaa !1509
  %tp_dealloc20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !1538
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc20, align 8, !dbg !1538, !tbaa !1511
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !1539, !tbaa !1458
  call void %28(%struct._object* %29), !dbg !1540
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.18, %if.then.17
  %30 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !1541
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !1541
  br label %do.cond.22, !dbg !1542

do.cond.22:                                       ; preds = %if.end.21
  br label %do.end.23, !dbg !1543

do.end.23:                                        ; preds = %do.cond.22
  br label %do.body.24, !dbg !1545

do.body.24:                                       ; preds = %do.end.23
  %31 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !1546
  call void @llvm.lifetime.start(i64 8, i8* %31) #1, !dbg !1546
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !439, metadata !1450), !dbg !1548
  %32 = load %struct._object*, %struct._object** %tb, align 8, !dbg !1549, !tbaa !1458
  store %struct._object* %32, %struct._object** %_py_xdecref_tmp, align 8, !dbg !1548, !tbaa !1458
  %33 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !1550, !tbaa !1458
  %cmp25 = icmp ne %struct._object* %33, null, !dbg !1551
  br i1 %cmp25, label %if.then.26, label %if.end.39, !dbg !1552

if.then.26:                                       ; preds = %do.body.24
  br label %do.body.27, !dbg !1553

do.body.27:                                       ; preds = %if.then.26
  %34 = bitcast %struct._object** %_py_decref_tmp28 to i8*, !dbg !1555
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !1555
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp28, metadata !441, metadata !1450), !dbg !1557
  %35 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !1558, !tbaa !1458
  store %struct._object* %35, %struct._object** %_py_decref_tmp28, align 8, !dbg !1557, !tbaa !1458
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !1559, !tbaa !1458
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !1561
  %37 = load i64, i64* %ob_refcnt29, align 8, !dbg !1562, !tbaa !1501
  %dec30 = add i64 %37, -1, !dbg !1562
  store i64 %dec30, i64* %ob_refcnt29, align 8, !dbg !1562, !tbaa !1501
  %cmp31 = icmp ne i64 %dec30, 0, !dbg !1563
  br i1 %cmp31, label %if.then.32, label %if.else.33, !dbg !1564

if.then.32:                                       ; preds = %do.body.27
  br label %if.end.36, !dbg !1565

if.else.33:                                       ; preds = %do.body.27
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !1567, !tbaa !1458
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !1569
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !1569, !tbaa !1509
  %tp_dealloc35 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !1570
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc35, align 8, !dbg !1570, !tbaa !1511
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !1571, !tbaa !1458
  call void %40(%struct._object* %41), !dbg !1572
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.33, %if.then.32
  %42 = bitcast %struct._object** %_py_decref_tmp28 to i8*, !dbg !1573
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !1573
  br label %do.cond.37, !dbg !1575

do.cond.37:                                       ; preds = %if.end.36
  br label %do.end.38, !dbg !1576

do.end.38:                                        ; preds = %do.cond.37
  br label %if.end.39, !dbg !1578

if.end.39:                                        ; preds = %do.end.38, %do.body.24
  %43 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !1580
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !1580
  br label %do.cond.40, !dbg !1583

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !1584

do.end.41:                                        ; preds = %do.cond.40
  store i32 1, i32* %retval, !dbg !1586
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1586

if.end.42:                                        ; preds = %land.lhs.true, %if.end.3
  %44 = load %struct._object*, %struct._object** %typ, align 8, !dbg !1587, !tbaa !1458
  %45 = load %struct._object*, %struct._object** %val, align 8, !dbg !1588, !tbaa !1458
  %46 = load %struct._object*, %struct._object** %tb, align 8, !dbg !1589, !tbaa !1458
  call void @PyErr_Restore(%struct._object* %44, %struct._object* %45, %struct._object* %46), !dbg !1590
  store i32 0, i32* %retval, !dbg !1591
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1591

cleanup:                                          ; preds = %if.end.42, %do.end.41, %if.then.2
  %47 = bitcast %struct.PyOSErrorObject** %env_err to i8*, !dbg !1592
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !1592
  %48 = bitcast %struct._object** %tb to i8*, !dbg !1592
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !1592
  %49 = bitcast %struct._object** %val to i8*, !dbg !1592
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !1592
  %50 = bitcast %struct._object** %typ to i8*, !dbg !1592
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !1592
  %51 = load i32, i32* %retval, !dbg !1592
  ret i32 %51, !dbg !1592
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare %struct._object* @PyLong_FromLong(i64) #3

declare i32 @PyErr_ExceptionMatches(%struct._object*) #3

declare void @PyErr_Fetch(%struct._object**, %struct._object**, %struct._object**) #3

declare void @PyErr_NormalizeException(%struct._object**, %struct._object**, %struct._object**) #3

declare i32 @PyObject_RichCompareBool(%struct._object*, %struct._object*, i32) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

declare void @PyErr_Restore(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @buffered_dealloc(%struct.buffered* %self) #0 {
entry:
  %self.addr = alloca %struct.buffered*, align 8
  %g = alloca %union._gc_head*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp44 = alloca %struct._object*, align 8
  %_py_decref_tmp49 = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !493, metadata !1450), !dbg !1593
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1594, !tbaa !1458
  %finalizing = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 6, !dbg !1595
  store i8 1, i8* %finalizing, align 1, !dbg !1596, !tbaa !1597
  %1 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1599, !tbaa !1458
  %2 = bitcast %struct.buffered* %1 to %struct._object*, !dbg !1601
  %call = call i32 @_PyIOBase_finalize(%struct._object* %2), !dbg !1602
  %cmp = icmp slt i32 %call, 0, !dbg !1603
  br i1 %cmp, label %if.then, label %if.end, !dbg !1604

if.then:                                          ; preds = %entry
  br label %return, !dbg !1605

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !1606

do.body:                                          ; preds = %if.end
  %3 = bitcast %union._gc_head** %g to i8*, !dbg !1607
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !1607
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !494, metadata !1450), !dbg !1609
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1610, !tbaa !1458
  %5 = bitcast %struct.buffered* %4 to %union._gc_head*, !dbg !1611
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %5, i64 -1, !dbg !1612
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !1609, !tbaa !1458
  br label %do.body.1, !dbg !1613

do.body.1:                                        ; preds = %do.body
  %6 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1614, !tbaa !1458
  %gc = bitcast %union._gc_head* %6 to %struct.anon*, !dbg !1617
  %gc_refs = getelementptr inbounds %struct.anon, %struct.anon* %gc, i32 0, i32 2, !dbg !1618
  %7 = load i64, i64* %gc_refs, align 8, !dbg !1618, !tbaa !1619
  %and = and i64 %7, 1, !dbg !1621
  %or = or i64 %and, -4, !dbg !1622
  %8 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1623, !tbaa !1458
  %gc2 = bitcast %union._gc_head* %8 to %struct.anon*, !dbg !1624
  %gc_refs3 = getelementptr inbounds %struct.anon, %struct.anon* %gc2, i32 0, i32 2, !dbg !1625
  store i64 %or, i64* %gc_refs3, align 8, !dbg !1626, !tbaa !1619
  br label %do.cond, !dbg !1627

do.cond:                                          ; preds = %do.body.1
  br label %do.end, !dbg !1628

do.end:                                           ; preds = %do.cond
  %9 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1630, !tbaa !1458
  %gc4 = bitcast %union._gc_head* %9 to %struct.anon*, !dbg !1632
  %gc_next = getelementptr inbounds %struct.anon, %struct.anon* %gc4, i32 0, i32 0, !dbg !1633
  %10 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !1633, !tbaa !1634
  %11 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1635, !tbaa !1458
  %gc5 = bitcast %union._gc_head* %11 to %struct.anon*, !dbg !1636
  %gc_prev = getelementptr inbounds %struct.anon, %struct.anon* %gc5, i32 0, i32 1, !dbg !1637
  %12 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !1637, !tbaa !1638
  %gc6 = bitcast %union._gc_head* %12 to %struct.anon*, !dbg !1639
  %gc_next7 = getelementptr inbounds %struct.anon, %struct.anon* %gc6, i32 0, i32 0, !dbg !1640
  store %union._gc_head* %10, %union._gc_head** %gc_next7, align 8, !dbg !1641, !tbaa !1634
  %13 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1642, !tbaa !1458
  %gc8 = bitcast %union._gc_head* %13 to %struct.anon*, !dbg !1643
  %gc_prev9 = getelementptr inbounds %struct.anon, %struct.anon* %gc8, i32 0, i32 1, !dbg !1644
  %14 = load %union._gc_head*, %union._gc_head** %gc_prev9, align 8, !dbg !1644, !tbaa !1638
  %15 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1645, !tbaa !1458
  %gc10 = bitcast %union._gc_head* %15 to %struct.anon*, !dbg !1646
  %gc_next11 = getelementptr inbounds %struct.anon, %struct.anon* %gc10, i32 0, i32 0, !dbg !1647
  %16 = load %union._gc_head*, %union._gc_head** %gc_next11, align 8, !dbg !1647, !tbaa !1634
  %gc12 = bitcast %union._gc_head* %16 to %struct.anon*, !dbg !1648
  %gc_prev13 = getelementptr inbounds %struct.anon, %struct.anon* %gc12, i32 0, i32 1, !dbg !1649
  store %union._gc_head* %14, %union._gc_head** %gc_prev13, align 8, !dbg !1650, !tbaa !1638
  %17 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !1651, !tbaa !1458
  %gc14 = bitcast %union._gc_head* %17 to %struct.anon*, !dbg !1652
  %gc_next15 = getelementptr inbounds %struct.anon, %struct.anon* %gc14, i32 0, i32 0, !dbg !1653
  store %union._gc_head* null, %union._gc_head** %gc_next15, align 8, !dbg !1654, !tbaa !1634
  %18 = bitcast %union._gc_head** %g to i8*, !dbg !1655
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !1655
  br label %do.end.17, !dbg !1656

do.end.17:                                        ; preds = %do.end
  %19 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1657, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %19, i32 0, i32 2, !dbg !1658
  store i32 0, i32* %ok, align 4, !dbg !1659, !tbaa !1660
  %20 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1661, !tbaa !1458
  %weakreflist = getelementptr inbounds %struct.buffered, %struct.buffered* %20, i32 0, i32 20, !dbg !1663
  %21 = load %struct._object*, %struct._object** %weakreflist, align 8, !dbg !1663, !tbaa !1664
  %cmp18 = icmp ne %struct._object* %21, null, !dbg !1665
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !1666

if.then.19:                                       ; preds = %do.end.17
  %22 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1667, !tbaa !1458
  %23 = bitcast %struct.buffered* %22 to %struct._object*, !dbg !1668
  call void @PyObject_ClearWeakRefs(%struct._object* %23), !dbg !1669
  br label %if.end.20, !dbg !1669

if.end.20:                                        ; preds = %if.then.19, %do.end.17
  br label %do.body.21, !dbg !1670

do.body.21:                                       ; preds = %if.end.20
  %24 = bitcast %struct._object** %_py_tmp to i8*, !dbg !1671
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !1671
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !496, metadata !1450), !dbg !1673
  %25 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1674, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %25, i32 0, i32 1, !dbg !1675
  %26 = load %struct._object*, %struct._object** %raw, align 8, !dbg !1675, !tbaa !1676
  store %struct._object* %26, %struct._object** %_py_tmp, align 8, !dbg !1673, !tbaa !1458
  %27 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !1677, !tbaa !1458
  %cmp22 = icmp ne %struct._object* %27, null, !dbg !1678
  br i1 %cmp22, label %if.then.23, label %if.end.31, !dbg !1679

if.then.23:                                       ; preds = %do.body.21
  %28 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1680, !tbaa !1458
  %raw24 = getelementptr inbounds %struct.buffered, %struct.buffered* %28, i32 0, i32 1, !dbg !1682
  store %struct._object* null, %struct._object** %raw24, align 8, !dbg !1683, !tbaa !1676
  br label %do.body.25, !dbg !1684

do.body.25:                                       ; preds = %if.then.23
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1685
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !1685
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !498, metadata !1450), !dbg !1687
  %30 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !1688, !tbaa !1458
  store %struct._object* %30, %struct._object** %_py_decref_tmp, align 8, !dbg !1687, !tbaa !1458
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1689, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !1691
  %32 = load i64, i64* %ob_refcnt, align 8, !dbg !1692, !tbaa !1501
  %dec = add i64 %32, -1, !dbg !1692
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !1692, !tbaa !1501
  %cmp26 = icmp ne i64 %dec, 0, !dbg !1693
  br i1 %cmp26, label %if.then.27, label %if.else, !dbg !1694

if.then.27:                                       ; preds = %do.body.25
  br label %if.end.28, !dbg !1695

if.else:                                          ; preds = %do.body.25
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1697, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !1699
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1699, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !1700
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1700, !tbaa !1511
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1701, !tbaa !1458
  call void %35(%struct._object* %36), !dbg !1702
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.27
  %37 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1703
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !1703
  br label %do.cond.29, !dbg !1705

do.cond.29:                                       ; preds = %if.end.28
  br label %do.end.30, !dbg !1706

do.end.30:                                        ; preds = %do.cond.29
  br label %if.end.31, !dbg !1708

if.end.31:                                        ; preds = %do.end.30, %do.body.21
  %38 = bitcast %struct._object** %_py_tmp to i8*, !dbg !1710
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !1710
  br label %do.end.33, !dbg !1713

do.end.33:                                        ; preds = %if.end.31
  %39 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1714, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %39, i32 0, i32 9, !dbg !1716
  %40 = load i8*, i8** %buffer, align 8, !dbg !1716, !tbaa !1717
  %tobool = icmp ne i8* %40, null, !dbg !1714
  br i1 %tobool, label %if.then.34, label %if.end.37, !dbg !1718

if.then.34:                                       ; preds = %do.end.33
  %41 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1719, !tbaa !1458
  %buffer35 = getelementptr inbounds %struct.buffered, %struct.buffered* %41, i32 0, i32 9, !dbg !1721
  %42 = load i8*, i8** %buffer35, align 8, !dbg !1721, !tbaa !1717
  call void @PyMem_Free(i8* %42), !dbg !1722
  %43 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1723, !tbaa !1458
  %buffer36 = getelementptr inbounds %struct.buffered, %struct.buffered* %43, i32 0, i32 9, !dbg !1724
  store i8* null, i8** %buffer36, align 8, !dbg !1725, !tbaa !1717
  br label %if.end.37, !dbg !1726

if.end.37:                                        ; preds = %if.then.34, %do.end.33
  %44 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1727, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %44, i32 0, i32 15, !dbg !1729
  %45 = load i8*, i8** %lock, align 8, !dbg !1729, !tbaa !1730
  %tobool38 = icmp ne i8* %45, null, !dbg !1727
  br i1 %tobool38, label %if.then.39, label %if.end.42, !dbg !1731

if.then.39:                                       ; preds = %if.end.37
  %46 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1732, !tbaa !1458
  %lock40 = getelementptr inbounds %struct.buffered, %struct.buffered* %46, i32 0, i32 15, !dbg !1734
  %47 = load i8*, i8** %lock40, align 8, !dbg !1734, !tbaa !1730
  call void @PyThread_free_lock(i8* %47), !dbg !1735
  %48 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1736, !tbaa !1458
  %lock41 = getelementptr inbounds %struct.buffered, %struct.buffered* %48, i32 0, i32 15, !dbg !1737
  store i8* null, i8** %lock41, align 8, !dbg !1738, !tbaa !1730
  br label %if.end.42, !dbg !1739

if.end.42:                                        ; preds = %if.then.39, %if.end.37
  br label %do.body.43, !dbg !1740

do.body.43:                                       ; preds = %if.end.42
  %49 = bitcast %struct._object** %_py_tmp44 to i8*, !dbg !1741
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !1741
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp44, metadata !502, metadata !1450), !dbg !1743
  %50 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1744, !tbaa !1458
  %dict = getelementptr inbounds %struct.buffered, %struct.buffered* %50, i32 0, i32 19, !dbg !1745
  %51 = load %struct._object*, %struct._object** %dict, align 8, !dbg !1745, !tbaa !1746
  store %struct._object* %51, %struct._object** %_py_tmp44, align 8, !dbg !1743, !tbaa !1458
  %52 = load %struct._object*, %struct._object** %_py_tmp44, align 8, !dbg !1747, !tbaa !1458
  %cmp45 = icmp ne %struct._object* %52, null, !dbg !1748
  br i1 %cmp45, label %if.then.46, label %if.end.60, !dbg !1749

if.then.46:                                       ; preds = %do.body.43
  %53 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1750, !tbaa !1458
  %dict47 = getelementptr inbounds %struct.buffered, %struct.buffered* %53, i32 0, i32 19, !dbg !1752
  store %struct._object* null, %struct._object** %dict47, align 8, !dbg !1753, !tbaa !1746
  br label %do.body.48, !dbg !1754

do.body.48:                                       ; preds = %if.then.46
  %54 = bitcast %struct._object** %_py_decref_tmp49 to i8*, !dbg !1755
  call void @llvm.lifetime.start(i64 8, i8* %54) #1, !dbg !1755
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp49, metadata !504, metadata !1450), !dbg !1757
  %55 = load %struct._object*, %struct._object** %_py_tmp44, align 8, !dbg !1758, !tbaa !1458
  store %struct._object* %55, %struct._object** %_py_decref_tmp49, align 8, !dbg !1757, !tbaa !1458
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !1759, !tbaa !1458
  %ob_refcnt50 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0, !dbg !1761
  %57 = load i64, i64* %ob_refcnt50, align 8, !dbg !1762, !tbaa !1501
  %dec51 = add i64 %57, -1, !dbg !1762
  store i64 %dec51, i64* %ob_refcnt50, align 8, !dbg !1762, !tbaa !1501
  %cmp52 = icmp ne i64 %dec51, 0, !dbg !1763
  br i1 %cmp52, label %if.then.53, label %if.else.54, !dbg !1764

if.then.53:                                       ; preds = %do.body.48
  br label %if.end.57, !dbg !1765

if.else.54:                                       ; preds = %do.body.48
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !1767, !tbaa !1458
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1, !dbg !1769
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8, !dbg !1769, !tbaa !1509
  %tp_dealloc56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4, !dbg !1770
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc56, align 8, !dbg !1770, !tbaa !1511
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !1771, !tbaa !1458
  call void %60(%struct._object* %61), !dbg !1772
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.54, %if.then.53
  %62 = bitcast %struct._object** %_py_decref_tmp49 to i8*, !dbg !1773
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !1773
  br label %do.cond.58, !dbg !1775

do.cond.58:                                       ; preds = %if.end.57
  br label %do.end.59, !dbg !1776

do.end.59:                                        ; preds = %do.cond.58
  br label %if.end.60, !dbg !1778

if.end.60:                                        ; preds = %do.end.59, %do.body.43
  %63 = bitcast %struct._object** %_py_tmp44 to i8*, !dbg !1780
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !1780
  br label %do.end.62, !dbg !1781

do.end.62:                                        ; preds = %if.end.60
  %64 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1782, !tbaa !1458
  %65 = bitcast %struct.buffered* %64 to %struct._object*, !dbg !1783
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !1784
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !1784, !tbaa !1509
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 38, !dbg !1785
  %67 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !1785, !tbaa !1786
  %68 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1787, !tbaa !1458
  %69 = bitcast %struct.buffered* %68 to %struct._object*, !dbg !1788
  %70 = bitcast %struct._object* %69 to i8*, !dbg !1788
  call void %67(i8* %70), !dbg !1789
  br label %return, !dbg !1790

return:                                           ; preds = %do.end.62, %if.then
  ret void, !dbg !1791
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_repr(%struct.buffered* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %nameobj = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !512, metadata !1450), !dbg !1793
  %0 = bitcast %struct._object** %nameobj to i8*, !dbg !1794
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1794
  call void @llvm.dbg.declare(metadata %struct._object** %nameobj, metadata !513, metadata !1450), !dbg !1795
  %1 = bitcast %struct._object** %res to i8*, !dbg !1794
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1794
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !514, metadata !1450), !dbg !1796
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1797, !tbaa !1458
  %3 = bitcast %struct.buffered* %2 to %struct._object*, !dbg !1798
  %call = call %struct._object* @_PyObject_GetAttrId(%struct._object* %3, %struct._Py_Identifier* @PyId_name), !dbg !1799
  store %struct._object* %call, %struct._object** %nameobj, align 8, !dbg !1800, !tbaa !1458
  %4 = load %struct._object*, %struct._object** %nameobj, align 8, !dbg !1801, !tbaa !1458
  %cmp = icmp eq %struct._object* %4, null, !dbg !1802
  br i1 %cmp, label %if.then, label %if.else.4, !dbg !1803

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !1804, !tbaa !1458
  %call1 = call i32 @PyErr_ExceptionMatches(%struct._object* %5), !dbg !1807
  %tobool = icmp ne i32 %call1, 0, !dbg !1807
  br i1 %tobool, label %if.then.2, label %if.else, !dbg !1808

if.then.2:                                        ; preds = %if.then
  call void @PyErr_Clear(), !dbg !1809
  br label %if.end, !dbg !1809

if.else:                                          ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !1810
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1810

if.end:                                           ; preds = %if.then.2
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1811, !tbaa !1458
  %7 = bitcast %struct.buffered* %6 to %struct._object*, !dbg !1812
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !1813
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1813, !tbaa !1509
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 1, !dbg !1814
  %9 = load i8*, i8** %tp_name, align 8, !dbg !1814, !tbaa !1815
  %call3 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8* %9), !dbg !1816
  store %struct._object* %call3, %struct._object** %res, align 8, !dbg !1817, !tbaa !1458
  br label %if.end.13, !dbg !1818

if.else.4:                                        ; preds = %entry
  %10 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1819, !tbaa !1458
  %11 = bitcast %struct.buffered* %10 to %struct._object*, !dbg !1820
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !1821
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !1821, !tbaa !1509
  %tp_name6 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 1, !dbg !1822
  %13 = load i8*, i8** %tp_name6, align 8, !dbg !1822, !tbaa !1815
  %14 = load %struct._object*, %struct._object** %nameobj, align 8, !dbg !1823, !tbaa !1458
  %call7 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i32 0, i32 0), i8* %13, %struct._object* %14), !dbg !1824
  store %struct._object* %call7, %struct._object** %res, align 8, !dbg !1825, !tbaa !1458
  br label %do.body, !dbg !1826

do.body:                                          ; preds = %if.else.4
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1827
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !1827
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !515, metadata !1450), !dbg !1829
  %16 = load %struct._object*, %struct._object** %nameobj, align 8, !dbg !1830, !tbaa !1458
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !1829, !tbaa !1458
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1831, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !1833
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !1834, !tbaa !1501
  %dec = add i64 %18, -1, !dbg !1834
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !1834, !tbaa !1501
  %cmp8 = icmp ne i64 %dec, 0, !dbg !1835
  br i1 %cmp8, label %if.then.9, label %if.else.10, !dbg !1836

if.then.9:                                        ; preds = %do.body
  br label %if.end.12, !dbg !1837

if.else.10:                                       ; preds = %do.body
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1839, !tbaa !1458
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !1841
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !1841, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !1842
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1842, !tbaa !1511
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1843, !tbaa !1458
  call void %21(%struct._object* %22), !dbg !1844
  br label %if.end.12

if.end.12:                                        ; preds = %if.else.10, %if.then.9
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1845
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !1845
  br label %do.cond, !dbg !1847

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !1848

do.end:                                           ; preds = %do.cond
  br label %if.end.13

if.end.13:                                        ; preds = %do.end, %if.end
  %24 = load %struct._object*, %struct._object** %res, align 8, !dbg !1850, !tbaa !1458
  store %struct._object* %24, %struct._object** %retval, !dbg !1851
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1851

cleanup:                                          ; preds = %if.end.13, %if.else
  %25 = bitcast %struct._object** %res to i8*, !dbg !1852
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !1852
  %26 = bitcast %struct._object** %nameobj to i8*, !dbg !1852
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !1852
  %27 = load %struct._object*, %struct._object** %retval, !dbg !1852
  ret %struct._object* %27, !dbg !1852
}

; Function Attrs: nounwind uwtable
define internal i32 @buffered_traverse(%struct.buffered* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.buffered*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !523, metadata !1450), !dbg !1853
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !524, metadata !1450), !dbg !1854
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !525, metadata !1450), !dbg !1855
  br label %do.body, !dbg !1856

do.body:                                          ; preds = %entry
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1857, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 1, !dbg !1859
  %1 = load %struct._object*, %struct._object** %raw, align 8, !dbg !1859, !tbaa !1676
  %tobool = icmp ne %struct._object* %1, null, !dbg !1860
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !1861

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !1862
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !1862
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !526, metadata !1450), !dbg !1864
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !1865, !tbaa !1458
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1866, !tbaa !1458
  %raw1 = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 1, !dbg !1867
  %5 = load %struct._object*, %struct._object** %raw1, align 8, !dbg !1867, !tbaa !1676
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !1868, !tbaa !1458
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !1865
  store i32 %call, i32* %vret, align 4, !dbg !1864, !tbaa !1869
  %7 = load i32, i32* %vret, align 4, !dbg !1870, !tbaa !1869
  %tobool2 = icmp ne i32 %7, 0, !dbg !1870
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !1872

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !1873, !tbaa !1869
  store i32 %8, i32* %retval, !dbg !1875
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1875

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !1876
  br label %cleanup, !dbg !1876

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !1878
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1878
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !1881

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !1882

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !1885

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1886, !tbaa !1458
  %dict = getelementptr inbounds %struct.buffered, %struct.buffered* %10, i32 0, i32 19, !dbg !1888
  %11 = load %struct._object*, %struct._object** %dict, align 8, !dbg !1888, !tbaa !1746
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !1889
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !1890

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !1891
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !1891
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !530, metadata !1450), !dbg !1893
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !1894, !tbaa !1458
  %14 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1895, !tbaa !1458
  %dict9 = getelementptr inbounds %struct.buffered, %struct.buffered* %14, i32 0, i32 19, !dbg !1896
  %15 = load %struct._object*, %struct._object** %dict9, align 8, !dbg !1896, !tbaa !1746
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !1897, !tbaa !1458
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !1894
  store i32 %call10, i32* %vret8, align 4, !dbg !1893, !tbaa !1869
  %17 = load i32, i32* %vret8, align 4, !dbg !1898, !tbaa !1869
  %tobool11 = icmp ne i32 %17, 0, !dbg !1898
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !1900

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !1901, !tbaa !1869
  store i32 %18, i32* %retval, !dbg !1903
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !1903

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !1904
  br label %cleanup.14, !dbg !1904

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !1906
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !1906
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !1909

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !1910

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !1913
  br label %return, !dbg !1913

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %20 = load i32, i32* %retval, !dbg !1914
  ret i32 %20, !dbg !1914
}

; Function Attrs: nounwind uwtable
define internal i32 @buffered_clear(%struct.buffered* %self) #0 {
entry:
  %self.addr = alloca %struct.buffered*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !538, metadata !1450), !dbg !1915
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1916, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 2, !dbg !1917
  store i32 0, i32* %ok, align 4, !dbg !1918, !tbaa !1660
  br label %do.body, !dbg !1919

do.body:                                          ; preds = %entry
  %1 = bitcast %struct._object** %_py_tmp to i8*, !dbg !1920
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1920
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !539, metadata !1450), !dbg !1922
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1923, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 1, !dbg !1924
  %3 = load %struct._object*, %struct._object** %raw, align 8, !dbg !1924, !tbaa !1676
  store %struct._object* %3, %struct._object** %_py_tmp, align 8, !dbg !1922, !tbaa !1458
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !1925, !tbaa !1458
  %cmp = icmp ne %struct._object* %4, null, !dbg !1926
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !1927

if.then:                                          ; preds = %do.body
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1928, !tbaa !1458
  %raw1 = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 1, !dbg !1930
  store %struct._object* null, %struct._object** %raw1, align 8, !dbg !1931, !tbaa !1676
  br label %do.body.2, !dbg !1932

do.body.2:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1933
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !1933
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !541, metadata !1450), !dbg !1935
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !1936, !tbaa !1458
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !1935, !tbaa !1458
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1937, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !1939
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !1940, !tbaa !1501
  %dec = add i64 %9, -1, !dbg !1940
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !1940, !tbaa !1501
  %cmp3 = icmp ne i64 %dec, 0, !dbg !1941
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !1942

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !1943

if.else:                                          ; preds = %do.body.2
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1945, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !1947
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1947, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !1948
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1948, !tbaa !1511
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1949, !tbaa !1458
  call void %12(%struct._object* %13), !dbg !1950
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1951
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !1951
  br label %do.cond, !dbg !1953

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !1954

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !1956

if.end.5:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_tmp to i8*, !dbg !1958
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !1958
  br label %do.end.7, !dbg !1961

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !1962

do.body.8:                                        ; preds = %do.end.7
  %16 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !1963
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !1963
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !545, metadata !1450), !dbg !1965
  %17 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1966, !tbaa !1458
  %dict = getelementptr inbounds %struct.buffered, %struct.buffered* %17, i32 0, i32 19, !dbg !1967
  %18 = load %struct._object*, %struct._object** %dict, align 8, !dbg !1967, !tbaa !1746
  store %struct._object* %18, %struct._object** %_py_tmp9, align 8, !dbg !1965, !tbaa !1458
  %19 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !1968, !tbaa !1458
  %cmp10 = icmp ne %struct._object* %19, null, !dbg !1969
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !1970

if.then.11:                                       ; preds = %do.body.8
  %20 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !1971, !tbaa !1458
  %dict12 = getelementptr inbounds %struct.buffered, %struct.buffered* %20, i32 0, i32 19, !dbg !1973
  store %struct._object* null, %struct._object** %dict12, align 8, !dbg !1974, !tbaa !1746
  br label %do.body.13, !dbg !1975

do.body.13:                                       ; preds = %if.then.11
  %21 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !1976
  call void @llvm.lifetime.start(i64 8, i8* %21) #1, !dbg !1976
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !547, metadata !1450), !dbg !1978
  %22 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !1979, !tbaa !1458
  store %struct._object* %22, %struct._object** %_py_decref_tmp14, align 8, !dbg !1978, !tbaa !1458
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !1980, !tbaa !1458
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !1982
  %24 = load i64, i64* %ob_refcnt15, align 8, !dbg !1983, !tbaa !1501
  %dec16 = add i64 %24, -1, !dbg !1983
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !1983, !tbaa !1501
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !1984
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !1985

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !1986

if.else.19:                                       ; preds = %do.body.13
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !1988, !tbaa !1458
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !1990
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !1990, !tbaa !1509
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !1991
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !1991, !tbaa !1511
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !1992, !tbaa !1458
  call void %27(%struct._object* %28), !dbg !1993
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %29 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !1994
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !1994
  br label %do.cond.23, !dbg !1996

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !1997

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !1999

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %30 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !2001
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !2001
  br label %do.end.27, !dbg !2002

do.end.27:                                        ; preds = %if.end.25
  ret i32 0, !dbg !2003
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_iternext(%struct.buffered* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %line = alloca %struct._object*, align 8
  %tp = alloca %struct._typeobject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp27 = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !553, metadata !1450), !dbg !2004
  %0 = bitcast %struct._object** %line to i8*, !dbg !2005
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2005
  call void @llvm.dbg.declare(metadata %struct._object** %line, metadata !554, metadata !1450), !dbg !2006
  %1 = bitcast %struct._typeobject** %tp to i8*, !dbg !2007
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !2007
  call void @llvm.dbg.declare(metadata %struct._typeobject** %tp, metadata !555, metadata !1450), !dbg !2008
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2009, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 2, !dbg !2011
  %3 = load i32, i32* %ok, align 4, !dbg !2011, !tbaa !1660
  %cmp = icmp sle i32 %3, 0, !dbg !2012
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !2013

if.then:                                          ; preds = %entry
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2014, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 3, !dbg !2018
  %5 = load i32, i32* %detached, align 4, !dbg !2018, !tbaa !2019
  %tobool = icmp ne i32 %5, 0, !dbg !2020
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !2021

if.then.1:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !2022, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !2025
  br label %if.end, !dbg !2026

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !2027, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !2030
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !2031
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2033

if.end.2:                                         ; preds = %entry
  %8 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2034, !tbaa !1458
  %9 = bitcast %struct.buffered* %8 to %struct._object*, !dbg !2035
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !2036
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2036, !tbaa !1509
  store %struct._typeobject* %10, %struct._typeobject** %tp, align 8, !dbg !2037, !tbaa !1458
  %11 = load %struct._typeobject*, %struct._typeobject** %tp, align 8, !dbg !2038, !tbaa !1458
  %cmp3 = icmp eq %struct._typeobject* %11, @PyBufferedReader_Type, !dbg !2039
  br i1 %cmp3, label %if.then.5, label %lor.lhs.false, !dbg !2040

lor.lhs.false:                                    ; preds = %if.end.2
  %12 = load %struct._typeobject*, %struct._typeobject** %tp, align 8, !dbg !2041, !tbaa !1458
  %cmp4 = icmp eq %struct._typeobject* %12, @PyBufferedRandom_Type, !dbg !2042
  br i1 %cmp4, label %if.then.5, label %if.else.6, !dbg !2043

if.then.5:                                        ; preds = %lor.lhs.false, %if.end.2
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2044, !tbaa !1458
  %call = call %struct._object* @_buffered_readline(%struct.buffered* %13, i64 -1), !dbg !2046
  store %struct._object* %call, %struct._object** %line, align 8, !dbg !2047, !tbaa !1458
  br label %if.end.20, !dbg !2048

if.else.6:                                        ; preds = %lor.lhs.false
  %14 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2049, !tbaa !1458
  %15 = bitcast %struct.buffered* %14 to %struct._object*, !dbg !2050
  %16 = load %struct._object*, %struct._object** @_PyIO_str_readline, align 8, !dbg !2051, !tbaa !1458
  %call7 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %15, %struct._object* %16, i8* null), !dbg !2052
  store %struct._object* %call7, %struct._object** %line, align 8, !dbg !2053, !tbaa !1458
  %17 = load %struct._object*, %struct._object** %line, align 8, !dbg !2054, !tbaa !1458
  %tobool8 = icmp ne %struct._object* %17, null, !dbg !2054
  br i1 %tobool8, label %land.lhs.true, label %if.end.19, !dbg !2055

land.lhs.true:                                    ; preds = %if.else.6
  %18 = load %struct._object*, %struct._object** %line, align 8, !dbg !2056, !tbaa !1458
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !2058
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !2058, !tbaa !1509
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 19, !dbg !2059
  %20 = load i64, i64* %tp_flags, align 8, !dbg !2059, !tbaa !2060
  %and = and i64 %20, 134217728, !dbg !2061
  %cmp10 = icmp ne i64 %and, 0, !dbg !2062
  br i1 %cmp10, label %if.end.19, label %if.then.11, !dbg !2063

if.then.11:                                       ; preds = %land.lhs.true
  %21 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !2064, !tbaa !1458
  %22 = load %struct._object*, %struct._object** %line, align 8, !dbg !2065, !tbaa !1458
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !2066
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8, !dbg !2066, !tbaa !1509
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 1, !dbg !2067
  %24 = load i8*, i8** %tp_name, align 8, !dbg !2067, !tbaa !1815
  %call13 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %21, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.19, i32 0, i32 0), i8* %24), !dbg !2068
  br label %do.body, !dbg !2069

do.body:                                          ; preds = %if.then.11
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2070
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !2070
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !558, metadata !1450), !dbg !2072
  %26 = load %struct._object*, %struct._object** %line, align 8, !dbg !2073, !tbaa !1458
  store %struct._object* %26, %struct._object** %_py_decref_tmp, align 8, !dbg !2072, !tbaa !1458
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2074, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !2076
  %28 = load i64, i64* %ob_refcnt, align 8, !dbg !2077, !tbaa !1501
  %dec = add i64 %28, -1, !dbg !2077
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2077, !tbaa !1501
  %cmp14 = icmp ne i64 %dec, 0, !dbg !2078
  br i1 %cmp14, label %if.then.15, label %if.else.16, !dbg !2079

if.then.15:                                       ; preds = %do.body
  br label %if.end.18, !dbg !2080

if.else.16:                                       ; preds = %do.body
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2082, !tbaa !1458
  %ob_type17 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !2084
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type17, align 8, !dbg !2084, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !2085
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2085, !tbaa !1511
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2086, !tbaa !1458
  call void %31(%struct._object* %32), !dbg !2087
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.16, %if.then.15
  %33 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2088
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !2088
  br label %do.cond, !dbg !2090

do.cond:                                          ; preds = %if.end.18
  br label %do.end, !dbg !2091

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !2093
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2093

if.end.19:                                        ; preds = %land.lhs.true, %if.else.6
  br label %if.end.20

if.end.20:                                        ; preds = %if.end.19, %if.then.5
  %34 = load %struct._object*, %struct._object** %line, align 8, !dbg !2094, !tbaa !1458
  %cmp21 = icmp eq %struct._object* %34, null, !dbg !2096
  br i1 %cmp21, label %if.then.22, label %if.end.23, !dbg !2097

if.then.22:                                       ; preds = %if.end.20
  store %struct._object* null, %struct._object** %retval, !dbg !2098
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2098

if.end.23:                                        ; preds = %if.end.20
  %35 = load %struct._object*, %struct._object** %line, align 8, !dbg !2099, !tbaa !1458
  %36 = bitcast %struct._object* %35 to %struct.PyVarObject*, !dbg !2100
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %36, i32 0, i32 1, !dbg !2101
  %37 = load i64, i64* %ob_size, align 8, !dbg !2101, !tbaa !2102
  %cmp24 = icmp eq i64 %37, 0, !dbg !2103
  br i1 %cmp24, label %if.then.25, label %if.end.38, !dbg !2104

if.then.25:                                       ; preds = %if.end.23
  br label %do.body.26, !dbg !2105

do.body.26:                                       ; preds = %if.then.25
  %38 = bitcast %struct._object** %_py_decref_tmp27 to i8*, !dbg !2106
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !2106
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp27, metadata !564, metadata !1450), !dbg !2108
  %39 = load %struct._object*, %struct._object** %line, align 8, !dbg !2109, !tbaa !1458
  store %struct._object* %39, %struct._object** %_py_decref_tmp27, align 8, !dbg !2108, !tbaa !1458
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !2110, !tbaa !1458
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !2112
  %41 = load i64, i64* %ob_refcnt28, align 8, !dbg !2113, !tbaa !1501
  %dec29 = add i64 %41, -1, !dbg !2113
  store i64 %dec29, i64* %ob_refcnt28, align 8, !dbg !2113, !tbaa !1501
  %cmp30 = icmp ne i64 %dec29, 0, !dbg !2114
  br i1 %cmp30, label %if.then.31, label %if.else.32, !dbg !2115

if.then.31:                                       ; preds = %do.body.26
  br label %if.end.35, !dbg !2116

if.else.32:                                       ; preds = %do.body.26
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !2118, !tbaa !1458
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !2120
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8, !dbg !2120, !tbaa !1509
  %tp_dealloc34 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !2121
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc34, align 8, !dbg !2121, !tbaa !1511
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !2122, !tbaa !1458
  call void %44(%struct._object* %45), !dbg !2123
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.32, %if.then.31
  %46 = bitcast %struct._object** %_py_decref_tmp27 to i8*, !dbg !2124
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !2124
  br label %do.cond.36, !dbg !2126

do.cond.36:                                       ; preds = %if.end.35
  br label %do.end.37, !dbg !2127

do.end.37:                                        ; preds = %do.cond.36
  store %struct._object* null, %struct._object** %retval, !dbg !2129
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2129

if.end.38:                                        ; preds = %if.end.23
  %47 = load %struct._object*, %struct._object** %line, align 8, !dbg !2130, !tbaa !1458
  store %struct._object* %47, %struct._object** %retval, !dbg !2131
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2131

cleanup:                                          ; preds = %if.end.38, %do.end.37, %if.then.22, %do.end, %if.end
  %48 = bitcast %struct._typeobject** %tp to i8*, !dbg !2132
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !2132
  %49 = bitcast %struct._object** %line to i8*, !dbg !2132
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !2132
  %50 = load %struct._object*, %struct._object** %retval, !dbg !2132
  ret %struct._object* %50, !dbg !2132
}

; Function Attrs: nounwind uwtable
define internal i32 @bufferedreader_init(%struct.buffered* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [3 x i8*], align 16
  %buffer_size = alloca i64, align 8
  %raw = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1115, metadata !1450), !dbg !2133
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1116, metadata !1450), !dbg !2134
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1117, metadata !1450), !dbg !2135
  %0 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !2136
  call void @llvm.lifetime.start(i64 24, i8* %0) #1, !dbg !2136
  call void @llvm.dbg.declare(metadata [3 x i8*]* %kwlist, metadata !1118, metadata !1450), !dbg !2137
  %1 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !2137
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([3 x i8*]* @bufferedreader_init.kwlist to i8*), i64 24, i32 16, i1 false), !dbg !2137
  %2 = bitcast i64* %buffer_size to i8*, !dbg !2138
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2138
  call void @llvm.dbg.declare(metadata i64* %buffer_size, metadata !1122, metadata !1450), !dbg !2139
  store i64 8192, i64* %buffer_size, align 8, !dbg !2139, !tbaa !2140
  %3 = bitcast %struct._object** %raw to i8*, !dbg !2141
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !2141
  call void @llvm.dbg.declare(metadata %struct._object** %raw, metadata !1123, metadata !1450), !dbg !2142
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2143, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 2, !dbg !2144
  store i32 0, i32* %ok, align 4, !dbg !2145, !tbaa !1660
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2146, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 3, !dbg !2147
  store i32 0, i32* %detached, align 4, !dbg !2148, !tbaa !2019
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !2149, !tbaa !1458
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !2151, !tbaa !1458
  %arraydecay = getelementptr inbounds [3 x i8*], [3 x i8*]* %kwlist, i32 0, i32 0, !dbg !2152
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %6, %struct._object* %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.61, i32 0, i32 0), i8** %arraydecay, %struct._object** %raw, i64* %buffer_size), !dbg !2153
  %tobool = icmp ne i32 %call, 0, !dbg !2153
  br i1 %tobool, label %if.end, label %if.then, !dbg !2154

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !2155
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2155

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2157, !tbaa !1458
  %call1 = call %struct._object* @_PyIOBase_check_readable(%struct._object* %8, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !2159
  %cmp = icmp eq %struct._object* %call1, null, !dbg !2160
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !2161

if.then.2:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !2162
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2162

if.end.3:                                         ; preds = %if.end
  br label %do.body, !dbg !2163

do.body:                                          ; preds = %if.end.3
  %9 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2164
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !2164
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1124, metadata !1450), !dbg !2166
  %10 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2167, !tbaa !1458
  %raw4 = getelementptr inbounds %struct.buffered, %struct.buffered* %10, i32 0, i32 1, !dbg !2168
  %11 = load %struct._object*, %struct._object** %raw4, align 8, !dbg !2168, !tbaa !1676
  store %struct._object* %11, %struct._object** %_py_tmp, align 8, !dbg !2166, !tbaa !1458
  %12 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2169, !tbaa !1458
  %cmp5 = icmp ne %struct._object* %12, null, !dbg !2170
  br i1 %cmp5, label %if.then.6, label %if.end.12, !dbg !2171

if.then.6:                                        ; preds = %do.body
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2172, !tbaa !1458
  %raw7 = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 1, !dbg !2174
  store %struct._object* null, %struct._object** %raw7, align 8, !dbg !2175, !tbaa !1676
  br label %do.body.8, !dbg !2176

do.body.8:                                        ; preds = %if.then.6
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2177
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !2177
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1126, metadata !1450), !dbg !2179
  %15 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2180, !tbaa !1458
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !2179, !tbaa !1458
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2181, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !2183
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !2184, !tbaa !1501
  %dec = add i64 %17, -1, !dbg !2184
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2184, !tbaa !1501
  %cmp9 = icmp ne i64 %dec, 0, !dbg !2185
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !2186

if.then.10:                                       ; preds = %do.body.8
  br label %if.end.11, !dbg !2187

if.else:                                          ; preds = %do.body.8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2189, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !2191
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2191, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !2192
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2192, !tbaa !1511
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2193, !tbaa !1458
  call void %20(%struct._object* %21), !dbg !2194
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2195
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !2195
  br label %do.cond, !dbg !2197

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !2198

do.end:                                           ; preds = %do.cond
  br label %if.end.12, !dbg !2200

if.end.12:                                        ; preds = %do.end, %do.body
  %23 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2202
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !2202
  br label %do.cond.13, !dbg !2205

do.cond.13:                                       ; preds = %if.end.12
  br label %do.end.14, !dbg !2206

do.end.14:                                        ; preds = %do.cond.13
  %24 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2208, !tbaa !1458
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !2209
  %25 = load i64, i64* %ob_refcnt15, align 8, !dbg !2210, !tbaa !1501
  %inc = add i64 %25, 1, !dbg !2210
  store i64 %inc, i64* %ob_refcnt15, align 8, !dbg !2210, !tbaa !1501
  %26 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2211, !tbaa !1458
  %27 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2212, !tbaa !1458
  %raw16 = getelementptr inbounds %struct.buffered, %struct.buffered* %27, i32 0, i32 1, !dbg !2213
  store %struct._object* %26, %struct._object** %raw16, align 8, !dbg !2214, !tbaa !1676
  %28 = load i64, i64* %buffer_size, align 8, !dbg !2215, !tbaa !2140
  %29 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2216, !tbaa !1458
  %buffer_size17 = getelementptr inbounds %struct.buffered, %struct.buffered* %29, i32 0, i32 17, !dbg !2217
  store i64 %28, i64* %buffer_size17, align 8, !dbg !2218, !tbaa !2219
  %30 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2220, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %30, i32 0, i32 4, !dbg !2221
  store i32 1, i32* %readable, align 4, !dbg !2222, !tbaa !2223
  %31 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2224, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %31, i32 0, i32 5, !dbg !2225
  store i32 0, i32* %writable, align 4, !dbg !2226, !tbaa !2227
  %32 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2228, !tbaa !1458
  %call18 = call i32 @_buffered_init(%struct.buffered* %32), !dbg !2230
  %cmp19 = icmp slt i32 %call18, 0, !dbg !2231
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !2232

if.then.20:                                       ; preds = %do.end.14
  store i32 -1, i32* %retval, !dbg !2233
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2233

if.end.21:                                        ; preds = %do.end.14
  %33 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2234, !tbaa !1458
  call void @_bufferedreader_reset_buf(%struct.buffered* %33), !dbg !2235
  %34 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2236, !tbaa !1458
  %35 = bitcast %struct.buffered* %34 to %struct._object*, !dbg !2237
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1, !dbg !2238
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !2238, !tbaa !1509
  %cmp23 = icmp eq %struct._typeobject* %36, @PyBufferedReader_Type, !dbg !2239
  br i1 %cmp23, label %land.rhs, label %land.end, !dbg !2240

land.rhs:                                         ; preds = %if.end.21
  %37 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2241, !tbaa !1458
  %ob_type24 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !2242
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type24, align 8, !dbg !2242, !tbaa !1509
  %cmp25 = icmp eq %struct._typeobject* %38, @PyFileIO_Type, !dbg !2243
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.21
  %39 = phi i1 [ false, %if.end.21 ], [ %cmp25, %land.rhs ]
  %land.ext = zext i1 %39 to i32, !dbg !2244
  %40 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2246, !tbaa !1458
  %fast_closed_checks = getelementptr inbounds %struct.buffered, %struct.buffered* %40, i32 0, i32 7, !dbg !2247
  store i32 %land.ext, i32* %fast_closed_checks, align 4, !dbg !2248, !tbaa !2249
  %41 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2250, !tbaa !1458
  %ok26 = getelementptr inbounds %struct.buffered, %struct.buffered* %41, i32 0, i32 2, !dbg !2251
  store i32 1, i32* %ok26, align 4, !dbg !2252, !tbaa !1660
  store i32 0, i32* %retval, !dbg !2253
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2253

cleanup:                                          ; preds = %land.end, %if.then.20, %if.then.2, %if.then
  %42 = bitcast %struct._object** %raw to i8*, !dbg !2254
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !2254
  %43 = bitcast i64* %buffer_size to i8*, !dbg !2254
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !2254
  %44 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !2254
  call void @llvm.lifetime.end(i64 24, i8* %44) #1, !dbg !2254
  %45 = load i32, i32* %retval, !dbg !2254
  ret i32 %45, !dbg !2254
}

declare %struct._object* @PyType_GenericNew(%struct._typeobject*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @bufferedwriter_init(%struct.buffered* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [3 x i8*], align 16
  %buffer_size = alloca i64, align 8
  %raw = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1170, metadata !1450), !dbg !2255
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1171, metadata !1450), !dbg !2256
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1172, metadata !1450), !dbg !2257
  %0 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !2258
  call void @llvm.lifetime.start(i64 24, i8* %0) #1, !dbg !2258
  call void @llvm.dbg.declare(metadata [3 x i8*]* %kwlist, metadata !1173, metadata !1450), !dbg !2259
  %1 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !2259
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([3 x i8*]* @bufferedwriter_init.kwlist to i8*), i64 24, i32 16, i1 false), !dbg !2259
  %2 = bitcast i64* %buffer_size to i8*, !dbg !2260
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2260
  call void @llvm.dbg.declare(metadata i64* %buffer_size, metadata !1174, metadata !1450), !dbg !2261
  store i64 8192, i64* %buffer_size, align 8, !dbg !2261, !tbaa !2140
  %3 = bitcast %struct._object** %raw to i8*, !dbg !2262
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !2262
  call void @llvm.dbg.declare(metadata %struct._object** %raw, metadata !1175, metadata !1450), !dbg !2263
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2264, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 2, !dbg !2265
  store i32 0, i32* %ok, align 4, !dbg !2266, !tbaa !1660
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2267, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 3, !dbg !2268
  store i32 0, i32* %detached, align 4, !dbg !2269, !tbaa !2019
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !2270, !tbaa !1458
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !2272, !tbaa !1458
  %arraydecay = getelementptr inbounds [3 x i8*], [3 x i8*]* %kwlist, i32 0, i32 0, !dbg !2273
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %6, %struct._object* %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i32 0, i32 0), i8** %arraydecay, %struct._object** %raw, i64* %buffer_size), !dbg !2274
  %tobool = icmp ne i32 %call, 0, !dbg !2274
  br i1 %tobool, label %if.end, label %if.then, !dbg !2275

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !2276
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2276

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2278, !tbaa !1458
  %call1 = call %struct._object* @_PyIOBase_check_writable(%struct._object* %8, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !2280
  %cmp = icmp eq %struct._object* %call1, null, !dbg !2281
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !2282

if.then.2:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !2283
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2283

if.end.3:                                         ; preds = %if.end
  br label %do.body, !dbg !2284

do.body:                                          ; preds = %if.end.3
  %9 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2285
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !2285
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1176, metadata !1450), !dbg !2287
  %10 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2288, !tbaa !1458
  %raw4 = getelementptr inbounds %struct.buffered, %struct.buffered* %10, i32 0, i32 1, !dbg !2289
  %11 = load %struct._object*, %struct._object** %raw4, align 8, !dbg !2289, !tbaa !1676
  store %struct._object* %11, %struct._object** %_py_tmp, align 8, !dbg !2287, !tbaa !1458
  %12 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2290, !tbaa !1458
  %cmp5 = icmp ne %struct._object* %12, null, !dbg !2291
  br i1 %cmp5, label %if.then.6, label %if.end.12, !dbg !2292

if.then.6:                                        ; preds = %do.body
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2293, !tbaa !1458
  %raw7 = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 1, !dbg !2295
  store %struct._object* null, %struct._object** %raw7, align 8, !dbg !2296, !tbaa !1676
  br label %do.body.8, !dbg !2297

do.body.8:                                        ; preds = %if.then.6
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2298
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !2298
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1178, metadata !1450), !dbg !2300
  %15 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2301, !tbaa !1458
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !2300, !tbaa !1458
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2302, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !2304
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !2305, !tbaa !1501
  %dec = add i64 %17, -1, !dbg !2305
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2305, !tbaa !1501
  %cmp9 = icmp ne i64 %dec, 0, !dbg !2306
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !2307

if.then.10:                                       ; preds = %do.body.8
  br label %if.end.11, !dbg !2308

if.else:                                          ; preds = %do.body.8
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2310, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !2312
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2312, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !2313
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2313, !tbaa !1511
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2314, !tbaa !1458
  call void %20(%struct._object* %21), !dbg !2315
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2316
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !2316
  br label %do.cond, !dbg !2318

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !2319

do.end:                                           ; preds = %do.cond
  br label %if.end.12, !dbg !2321

if.end.12:                                        ; preds = %do.end, %do.body
  %23 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2323
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !2323
  br label %do.cond.13, !dbg !2326

do.cond.13:                                       ; preds = %if.end.12
  br label %do.end.14, !dbg !2327

do.end.14:                                        ; preds = %do.cond.13
  %24 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2329, !tbaa !1458
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !2330
  %25 = load i64, i64* %ob_refcnt15, align 8, !dbg !2331, !tbaa !1501
  %inc = add i64 %25, 1, !dbg !2331
  store i64 %inc, i64* %ob_refcnt15, align 8, !dbg !2331, !tbaa !1501
  %26 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2332, !tbaa !1458
  %27 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2333, !tbaa !1458
  %raw16 = getelementptr inbounds %struct.buffered, %struct.buffered* %27, i32 0, i32 1, !dbg !2334
  store %struct._object* %26, %struct._object** %raw16, align 8, !dbg !2335, !tbaa !1676
  %28 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2336, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %28, i32 0, i32 4, !dbg !2337
  store i32 0, i32* %readable, align 4, !dbg !2338, !tbaa !2223
  %29 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2339, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %29, i32 0, i32 5, !dbg !2340
  store i32 1, i32* %writable, align 4, !dbg !2341, !tbaa !2227
  %30 = load i64, i64* %buffer_size, align 8, !dbg !2342, !tbaa !2140
  %31 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2343, !tbaa !1458
  %buffer_size17 = getelementptr inbounds %struct.buffered, %struct.buffered* %31, i32 0, i32 17, !dbg !2344
  store i64 %30, i64* %buffer_size17, align 8, !dbg !2345, !tbaa !2219
  %32 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2346, !tbaa !1458
  %call18 = call i32 @_buffered_init(%struct.buffered* %32), !dbg !2348
  %cmp19 = icmp slt i32 %call18, 0, !dbg !2349
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !2350

if.then.20:                                       ; preds = %do.end.14
  store i32 -1, i32* %retval, !dbg !2351
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2351

if.end.21:                                        ; preds = %do.end.14
  %33 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2352, !tbaa !1458
  call void @_bufferedwriter_reset_buf(%struct.buffered* %33), !dbg !2353
  %34 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2354, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %34, i32 0, i32 10, !dbg !2355
  store i64 0, i64* %pos, align 8, !dbg !2356, !tbaa !2357
  %35 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2358, !tbaa !1458
  %36 = bitcast %struct.buffered* %35 to %struct._object*, !dbg !2359
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !2360
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !2360, !tbaa !1509
  %cmp23 = icmp eq %struct._typeobject* %37, @PyBufferedWriter_Type, !dbg !2361
  br i1 %cmp23, label %land.rhs, label %land.end, !dbg !2362

land.rhs:                                         ; preds = %if.end.21
  %38 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2363, !tbaa !1458
  %ob_type24 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !2364
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type24, align 8, !dbg !2364, !tbaa !1509
  %cmp25 = icmp eq %struct._typeobject* %39, @PyFileIO_Type, !dbg !2365
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.21
  %40 = phi i1 [ false, %if.end.21 ], [ %cmp25, %land.rhs ]
  %land.ext = zext i1 %40 to i32, !dbg !2366
  %41 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2368, !tbaa !1458
  %fast_closed_checks = getelementptr inbounds %struct.buffered, %struct.buffered* %41, i32 0, i32 7, !dbg !2369
  store i32 %land.ext, i32* %fast_closed_checks, align 4, !dbg !2370, !tbaa !2249
  %42 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2371, !tbaa !1458
  %ok26 = getelementptr inbounds %struct.buffered, %struct.buffered* %42, i32 0, i32 2, !dbg !2372
  store i32 1, i32* %ok26, align 4, !dbg !2373, !tbaa !1660
  store i32 0, i32* %retval, !dbg !2374
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2374

cleanup:                                          ; preds = %land.end, %if.then.20, %if.then.2, %if.then
  %43 = bitcast %struct._object** %raw to i8*, !dbg !2375
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !2375
  %44 = bitcast i64* %buffer_size to i8*, !dbg !2375
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !2375
  %45 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !2375
  call void @llvm.lifetime.end(i64 24, i8* %45) #1, !dbg !2375
  %46 = load i32, i32* %retval, !dbg !2375
  ret i32 %46, !dbg !2375
}

; Function Attrs: nounwind uwtable
define internal void @bufferedrwpair_dealloc(%struct.rwpair* %self) #0 {
entry:
  %self.addr = alloca %struct.rwpair*, align 8
  %g = alloca %union._gc_head*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1195, metadata !1450), !dbg !2376
  br label %do.body, !dbg !2377

do.body:                                          ; preds = %entry
  %0 = bitcast %union._gc_head** %g to i8*, !dbg !2378
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2378
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !1196, metadata !1450), !dbg !2380
  %1 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2381, !tbaa !1458
  %2 = bitcast %struct.rwpair* %1 to %union._gc_head*, !dbg !2382
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %2, i64 -1, !dbg !2383
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !2380, !tbaa !1458
  br label %do.body.1, !dbg !2384

do.body.1:                                        ; preds = %do.body
  %3 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2385, !tbaa !1458
  %gc = bitcast %union._gc_head* %3 to %struct.anon*, !dbg !2388
  %gc_refs = getelementptr inbounds %struct.anon, %struct.anon* %gc, i32 0, i32 2, !dbg !2389
  %4 = load i64, i64* %gc_refs, align 8, !dbg !2389, !tbaa !1619
  %and = and i64 %4, 1, !dbg !2390
  %or = or i64 %and, -4, !dbg !2391
  %5 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2392, !tbaa !1458
  %gc2 = bitcast %union._gc_head* %5 to %struct.anon*, !dbg !2393
  %gc_refs3 = getelementptr inbounds %struct.anon, %struct.anon* %gc2, i32 0, i32 2, !dbg !2394
  store i64 %or, i64* %gc_refs3, align 8, !dbg !2395, !tbaa !1619
  br label %do.cond, !dbg !2396

do.cond:                                          ; preds = %do.body.1
  br label %do.end, !dbg !2397

do.end:                                           ; preds = %do.cond
  %6 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2399, !tbaa !1458
  %gc4 = bitcast %union._gc_head* %6 to %struct.anon*, !dbg !2401
  %gc_next = getelementptr inbounds %struct.anon, %struct.anon* %gc4, i32 0, i32 0, !dbg !2402
  %7 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !2402, !tbaa !1634
  %8 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2403, !tbaa !1458
  %gc5 = bitcast %union._gc_head* %8 to %struct.anon*, !dbg !2404
  %gc_prev = getelementptr inbounds %struct.anon, %struct.anon* %gc5, i32 0, i32 1, !dbg !2405
  %9 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !2405, !tbaa !1638
  %gc6 = bitcast %union._gc_head* %9 to %struct.anon*, !dbg !2406
  %gc_next7 = getelementptr inbounds %struct.anon, %struct.anon* %gc6, i32 0, i32 0, !dbg !2407
  store %union._gc_head* %7, %union._gc_head** %gc_next7, align 8, !dbg !2408, !tbaa !1634
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2409, !tbaa !1458
  %gc8 = bitcast %union._gc_head* %10 to %struct.anon*, !dbg !2410
  %gc_prev9 = getelementptr inbounds %struct.anon, %struct.anon* %gc8, i32 0, i32 1, !dbg !2411
  %11 = load %union._gc_head*, %union._gc_head** %gc_prev9, align 8, !dbg !2411, !tbaa !1638
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2412, !tbaa !1458
  %gc10 = bitcast %union._gc_head* %12 to %struct.anon*, !dbg !2413
  %gc_next11 = getelementptr inbounds %struct.anon, %struct.anon* %gc10, i32 0, i32 0, !dbg !2414
  %13 = load %union._gc_head*, %union._gc_head** %gc_next11, align 8, !dbg !2414, !tbaa !1634
  %gc12 = bitcast %union._gc_head* %13 to %struct.anon*, !dbg !2415
  %gc_prev13 = getelementptr inbounds %struct.anon, %struct.anon* %gc12, i32 0, i32 1, !dbg !2416
  store %union._gc_head* %11, %union._gc_head** %gc_prev13, align 8, !dbg !2417, !tbaa !1638
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !2418, !tbaa !1458
  %gc14 = bitcast %union._gc_head* %14 to %struct.anon*, !dbg !2419
  %gc_next15 = getelementptr inbounds %struct.anon, %struct.anon* %gc14, i32 0, i32 0, !dbg !2420
  store %union._gc_head* null, %union._gc_head** %gc_next15, align 8, !dbg !2421, !tbaa !1634
  %15 = bitcast %union._gc_head** %g to i8*, !dbg !2422
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !2422
  br label %do.end.17, !dbg !2423

do.end.17:                                        ; preds = %do.end
  br label %do.body.18, !dbg !2424

do.body.18:                                       ; preds = %do.end.17
  %16 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2425
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !2425
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1198, metadata !1450), !dbg !2427
  %17 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2428, !tbaa !1458
  %reader = getelementptr inbounds %struct.rwpair, %struct.rwpair* %17, i32 0, i32 1, !dbg !2429
  %18 = load %struct.buffered*, %struct.buffered** %reader, align 8, !dbg !2429, !tbaa !2430
  %19 = bitcast %struct.buffered* %18 to %struct._object*, !dbg !2432
  store %struct._object* %19, %struct._object** %_py_tmp, align 8, !dbg !2427, !tbaa !1458
  %20 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2433, !tbaa !1458
  %cmp = icmp ne %struct._object* %20, null, !dbg !2434
  br i1 %cmp, label %if.then, label %if.end.25, !dbg !2435

if.then:                                          ; preds = %do.body.18
  %21 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2436, !tbaa !1458
  %reader19 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %21, i32 0, i32 1, !dbg !2438
  store %struct.buffered* null, %struct.buffered** %reader19, align 8, !dbg !2439, !tbaa !2430
  br label %do.body.20, !dbg !2440

do.body.20:                                       ; preds = %if.then
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2441
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !2441
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1200, metadata !1450), !dbg !2443
  %23 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2444, !tbaa !1458
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8, !dbg !2443, !tbaa !1458
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2445, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !2447
  %25 = load i64, i64* %ob_refcnt, align 8, !dbg !2448, !tbaa !1501
  %dec = add i64 %25, -1, !dbg !2448
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2448, !tbaa !1501
  %cmp21 = icmp ne i64 %dec, 0, !dbg !2449
  br i1 %cmp21, label %if.then.22, label %if.else, !dbg !2450

if.then.22:                                       ; preds = %do.body.20
  br label %if.end, !dbg !2451

if.else:                                          ; preds = %do.body.20
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2453, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !2455
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2455, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !2456
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2456, !tbaa !1511
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2457, !tbaa !1458
  call void %28(%struct._object* %29), !dbg !2458
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.22
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2459
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !2459
  br label %do.cond.23, !dbg !2461

do.cond.23:                                       ; preds = %if.end
  br label %do.end.24, !dbg !2462

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !2464

if.end.25:                                        ; preds = %do.end.24, %do.body.18
  %31 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2466
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !2466
  br label %do.end.27, !dbg !2469

do.end.27:                                        ; preds = %if.end.25
  br label %do.body.28, !dbg !2470

do.body.28:                                       ; preds = %do.end.27
  %32 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !2471
  call void @llvm.lifetime.start(i64 8, i8* %32) #1, !dbg !2471
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !1204, metadata !1450), !dbg !2473
  %33 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2474, !tbaa !1458
  %writer = getelementptr inbounds %struct.rwpair, %struct.rwpair* %33, i32 0, i32 2, !dbg !2475
  %34 = load %struct.buffered*, %struct.buffered** %writer, align 8, !dbg !2475, !tbaa !2476
  %35 = bitcast %struct.buffered* %34 to %struct._object*, !dbg !2477
  store %struct._object* %35, %struct._object** %_py_tmp29, align 8, !dbg !2473, !tbaa !1458
  %36 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !2478, !tbaa !1458
  %cmp30 = icmp ne %struct._object* %36, null, !dbg !2479
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !2480

if.then.31:                                       ; preds = %do.body.28
  %37 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2481, !tbaa !1458
  %writer32 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %37, i32 0, i32 2, !dbg !2483
  store %struct.buffered* null, %struct.buffered** %writer32, align 8, !dbg !2484, !tbaa !2476
  br label %do.body.33, !dbg !2485

do.body.33:                                       ; preds = %if.then.31
  %38 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !2486
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !2486
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !1206, metadata !1450), !dbg !2488
  %39 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !2489, !tbaa !1458
  store %struct._object* %39, %struct._object** %_py_decref_tmp34, align 8, !dbg !2488, !tbaa !1458
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !2490, !tbaa !1458
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !2492
  %41 = load i64, i64* %ob_refcnt35, align 8, !dbg !2493, !tbaa !1501
  %dec36 = add i64 %41, -1, !dbg !2493
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !2493, !tbaa !1501
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !2494
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !2495

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !2496

if.else.39:                                       ; preds = %do.body.33
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !2498, !tbaa !1458
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !2500
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !2500, !tbaa !1509
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !2501
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !2501, !tbaa !1511
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !2502, !tbaa !1458
  call void %44(%struct._object* %45), !dbg !2503
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %46 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !2504
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !2504
  br label %do.cond.43, !dbg !2506

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !2507

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !2509

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %47 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !2511
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !2511
  br label %do.end.47, !dbg !2512

do.end.47:                                        ; preds = %if.end.45
  br label %do.body.48, !dbg !2513

do.body.48:                                       ; preds = %do.end.47
  %48 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !2514
  call void @llvm.lifetime.start(i64 8, i8* %48) #1, !dbg !2514
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp49, metadata !1210, metadata !1450), !dbg !2516
  %49 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2517, !tbaa !1458
  %dict = getelementptr inbounds %struct.rwpair, %struct.rwpair* %49, i32 0, i32 3, !dbg !2518
  %50 = load %struct._object*, %struct._object** %dict, align 8, !dbg !2518, !tbaa !2519
  store %struct._object* %50, %struct._object** %_py_tmp49, align 8, !dbg !2516, !tbaa !1458
  %51 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !2520, !tbaa !1458
  %cmp50 = icmp ne %struct._object* %51, null, !dbg !2521
  br i1 %cmp50, label %if.then.51, label %if.end.65, !dbg !2522

if.then.51:                                       ; preds = %do.body.48
  %52 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2523, !tbaa !1458
  %dict52 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %52, i32 0, i32 3, !dbg !2525
  store %struct._object* null, %struct._object** %dict52, align 8, !dbg !2526, !tbaa !2519
  br label %do.body.53, !dbg !2527

do.body.53:                                       ; preds = %if.then.51
  %53 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !2528
  call void @llvm.lifetime.start(i64 8, i8* %53) #1, !dbg !2528
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp54, metadata !1212, metadata !1450), !dbg !2530
  %54 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !2531, !tbaa !1458
  store %struct._object* %54, %struct._object** %_py_decref_tmp54, align 8, !dbg !2530, !tbaa !1458
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !2532, !tbaa !1458
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 0, !dbg !2534
  %56 = load i64, i64* %ob_refcnt55, align 8, !dbg !2535, !tbaa !1501
  %dec56 = add i64 %56, -1, !dbg !2535
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !2535, !tbaa !1501
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !2536
  br i1 %cmp57, label %if.then.58, label %if.else.59, !dbg !2537

if.then.58:                                       ; preds = %do.body.53
  br label %if.end.62, !dbg !2538

if.else.59:                                       ; preds = %do.body.53
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !2540, !tbaa !1458
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 1, !dbg !2542
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !2542, !tbaa !1509
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i32 0, i32 4, !dbg !2543
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !2543, !tbaa !1511
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !2544, !tbaa !1458
  call void %59(%struct._object* %60), !dbg !2545
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  %61 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !2546
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !2546
  br label %do.cond.63, !dbg !2548

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !2549

do.end.64:                                        ; preds = %do.cond.63
  br label %if.end.65, !dbg !2551

if.end.65:                                        ; preds = %do.end.64, %do.body.48
  %62 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !2553
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !2553
  br label %do.end.67, !dbg !2554

do.end.67:                                        ; preds = %if.end.65
  %63 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2555, !tbaa !1458
  %64 = bitcast %struct.rwpair* %63 to %struct._object*, !dbg !2556
  %ob_type68 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1, !dbg !2557
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type68, align 8, !dbg !2557, !tbaa !1509
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %65, i32 0, i32 38, !dbg !2558
  %66 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !2558, !tbaa !1786
  %67 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2559, !tbaa !1458
  %68 = bitcast %struct.rwpair* %67 to %struct._object*, !dbg !2560
  %69 = bitcast %struct._object* %68 to i8*, !dbg !2560
  call void %66(i8* %69), !dbg !2561
  ret void, !dbg !2562
}

; Function Attrs: nounwind uwtable
define internal i32 @bufferedrwpair_traverse(%struct.rwpair* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.rwpair*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1220, metadata !1450), !dbg !2563
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1221, metadata !1450), !dbg !2564
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1222, metadata !1450), !dbg !2565
  br label %do.body, !dbg !2566

do.body:                                          ; preds = %entry
  %0 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2567, !tbaa !1458
  %dict = getelementptr inbounds %struct.rwpair, %struct.rwpair* %0, i32 0, i32 3, !dbg !2569
  %1 = load %struct._object*, %struct._object** %dict, align 8, !dbg !2569, !tbaa !2519
  %tobool = icmp ne %struct._object* %1, null, !dbg !2570
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !2571

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !2572
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !2572
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1223, metadata !1450), !dbg !2574
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !2575, !tbaa !1458
  %4 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2576, !tbaa !1458
  %dict1 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %4, i32 0, i32 3, !dbg !2577
  %5 = load %struct._object*, %struct._object** %dict1, align 8, !dbg !2577, !tbaa !2519
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !2578, !tbaa !1458
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !2575
  store i32 %call, i32* %vret, align 4, !dbg !2574, !tbaa !1869
  %7 = load i32, i32* %vret, align 4, !dbg !2579, !tbaa !1869
  %tobool2 = icmp ne i32 %7, 0, !dbg !2579
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !2581

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !2582, !tbaa !1869
  store i32 %8, i32* %retval, !dbg !2584
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2584

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !2585
  br label %cleanup, !dbg !2585

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !2587
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !2587
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !2590

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !2591

do.end:                                           ; preds = %if.end.4
  store i32 0, i32* %retval, !dbg !2594
  br label %return, !dbg !2594

return:                                           ; preds = %LeafBlock, %do.end
  %10 = load i32, i32* %retval, !dbg !2595
  ret i32 %10, !dbg !2595
}

; Function Attrs: nounwind uwtable
define internal i32 @bufferedrwpair_clear(%struct.rwpair* %self) #0 {
entry:
  %self.addr = alloca %struct.rwpair*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1231, metadata !1450), !dbg !2596
  br label %do.body, !dbg !2597

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2598
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2598
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1232, metadata !1450), !dbg !2600
  %1 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2601, !tbaa !1458
  %reader = getelementptr inbounds %struct.rwpair, %struct.rwpair* %1, i32 0, i32 1, !dbg !2602
  %2 = load %struct.buffered*, %struct.buffered** %reader, align 8, !dbg !2602, !tbaa !2430
  %3 = bitcast %struct.buffered* %2 to %struct._object*, !dbg !2603
  store %struct._object* %3, %struct._object** %_py_tmp, align 8, !dbg !2600, !tbaa !1458
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2604, !tbaa !1458
  %cmp = icmp ne %struct._object* %4, null, !dbg !2605
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !2606

if.then:                                          ; preds = %do.body
  %5 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2607, !tbaa !1458
  %reader1 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %5, i32 0, i32 1, !dbg !2609
  store %struct.buffered* null, %struct.buffered** %reader1, align 8, !dbg !2610, !tbaa !2430
  br label %do.body.2, !dbg !2611

do.body.2:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2612
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !2612
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1234, metadata !1450), !dbg !2614
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2615, !tbaa !1458
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !2614, !tbaa !1458
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2616, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !2618
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !2619, !tbaa !1501
  %dec = add i64 %9, -1, !dbg !2619
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2619, !tbaa !1501
  %cmp3 = icmp ne i64 %dec, 0, !dbg !2620
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !2621

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !2622

if.else:                                          ; preds = %do.body.2
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2624, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !2626
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2626, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !2627
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2627, !tbaa !1511
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2628, !tbaa !1458
  call void %12(%struct._object* %13), !dbg !2629
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2630
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !2630
  br label %do.cond, !dbg !2632

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2633

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !2635

if.end.5:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2637
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !2637
  br label %do.end.7, !dbg !2640

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !2641

do.body.8:                                        ; preds = %do.end.7
  %16 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !2642
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !2642
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !1238, metadata !1450), !dbg !2644
  %17 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2645, !tbaa !1458
  %writer = getelementptr inbounds %struct.rwpair, %struct.rwpair* %17, i32 0, i32 2, !dbg !2646
  %18 = load %struct.buffered*, %struct.buffered** %writer, align 8, !dbg !2646, !tbaa !2476
  %19 = bitcast %struct.buffered* %18 to %struct._object*, !dbg !2647
  store %struct._object* %19, %struct._object** %_py_tmp9, align 8, !dbg !2644, !tbaa !1458
  %20 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !2648, !tbaa !1458
  %cmp10 = icmp ne %struct._object* %20, null, !dbg !2649
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !2650

if.then.11:                                       ; preds = %do.body.8
  %21 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2651, !tbaa !1458
  %writer12 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %21, i32 0, i32 2, !dbg !2653
  store %struct.buffered* null, %struct.buffered** %writer12, align 8, !dbg !2654, !tbaa !2476
  br label %do.body.13, !dbg !2655

do.body.13:                                       ; preds = %if.then.11
  %22 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !2656
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !2656
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !1240, metadata !1450), !dbg !2658
  %23 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !2659, !tbaa !1458
  store %struct._object* %23, %struct._object** %_py_decref_tmp14, align 8, !dbg !2658, !tbaa !1458
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !2660, !tbaa !1458
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !2662
  %25 = load i64, i64* %ob_refcnt15, align 8, !dbg !2663, !tbaa !1501
  %dec16 = add i64 %25, -1, !dbg !2663
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !2663, !tbaa !1501
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !2664
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !2665

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !2666

if.else.19:                                       ; preds = %do.body.13
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !2668, !tbaa !1458
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !2670
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !2670, !tbaa !1509
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !2671
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !2671, !tbaa !1511
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !2672, !tbaa !1458
  call void %28(%struct._object* %29), !dbg !2673
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %30 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !2674
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !2674
  br label %do.cond.23, !dbg !2676

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !2677

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !2679

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %31 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !2681
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !2681
  br label %do.end.27, !dbg !2682

do.end.27:                                        ; preds = %if.end.25
  br label %do.body.28, !dbg !2683

do.body.28:                                       ; preds = %do.end.27
  %32 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !2684
  call void @llvm.lifetime.start(i64 8, i8* %32) #1, !dbg !2684
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !1244, metadata !1450), !dbg !2686
  %33 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2687, !tbaa !1458
  %dict = getelementptr inbounds %struct.rwpair, %struct.rwpair* %33, i32 0, i32 3, !dbg !2688
  %34 = load %struct._object*, %struct._object** %dict, align 8, !dbg !2688, !tbaa !2519
  store %struct._object* %34, %struct._object** %_py_tmp29, align 8, !dbg !2686, !tbaa !1458
  %35 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !2689, !tbaa !1458
  %cmp30 = icmp ne %struct._object* %35, null, !dbg !2690
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !2691

if.then.31:                                       ; preds = %do.body.28
  %36 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2692, !tbaa !1458
  %dict32 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %36, i32 0, i32 3, !dbg !2694
  store %struct._object* null, %struct._object** %dict32, align 8, !dbg !2695, !tbaa !2519
  br label %do.body.33, !dbg !2696

do.body.33:                                       ; preds = %if.then.31
  %37 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !2697
  call void @llvm.lifetime.start(i64 8, i8* %37) #1, !dbg !2697
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !1246, metadata !1450), !dbg !2699
  %38 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !2700, !tbaa !1458
  store %struct._object* %38, %struct._object** %_py_decref_tmp34, align 8, !dbg !2699, !tbaa !1458
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !2701, !tbaa !1458
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !2703
  %40 = load i64, i64* %ob_refcnt35, align 8, !dbg !2704, !tbaa !1501
  %dec36 = add i64 %40, -1, !dbg !2704
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !2704, !tbaa !1501
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !2705
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !2706

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !2707

if.else.39:                                       ; preds = %do.body.33
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !2709, !tbaa !1458
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !2711
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !2711, !tbaa !1509
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !2712
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !2712, !tbaa !1511
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !2713, !tbaa !1458
  call void %43(%struct._object* %44), !dbg !2714
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %45 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !2715
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !2715
  br label %do.cond.43, !dbg !2717

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !2718

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !2720

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %46 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !2722
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !2722
  br label %do.end.47, !dbg !2723

do.end.47:                                        ; preds = %if.end.45
  ret i32 0, !dbg !2724
}

; Function Attrs: nounwind uwtable
define internal i32 @bufferedrwpair_init(%struct.rwpair* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.rwpair*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %reader = alloca %struct._object*, align 8
  %writer = alloca %struct._object*, align 8
  %buffer_size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1327, metadata !1450), !dbg !2725
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1328, metadata !1450), !dbg !2726
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1329, metadata !1450), !dbg !2727
  %0 = bitcast %struct._object** %reader to i8*, !dbg !2728
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2728
  call void @llvm.dbg.declare(metadata %struct._object** %reader, metadata !1330, metadata !1450), !dbg !2729
  %1 = bitcast %struct._object** %writer to i8*, !dbg !2728
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !2728
  call void @llvm.dbg.declare(metadata %struct._object** %writer, metadata !1331, metadata !1450), !dbg !2730
  %2 = bitcast i64* %buffer_size to i8*, !dbg !2731
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2731
  call void @llvm.dbg.declare(metadata i64* %buffer_size, metadata !1332, metadata !1450), !dbg !2732
  store i64 8192, i64* %buffer_size, align 8, !dbg !2732, !tbaa !2140
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !2733, !tbaa !1458
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.69, i32 0, i32 0), %struct._object** %reader, %struct._object** %writer, i64* %buffer_size), !dbg !2735
  %tobool = icmp ne i32 %call, 0, !dbg !2735
  br i1 %tobool, label %if.end, label %if.then, !dbg !2736

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !2737
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2737

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %reader, align 8, !dbg !2739, !tbaa !1458
  %call1 = call %struct._object* @_PyIOBase_check_readable(%struct._object* %4, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !2741
  %cmp = icmp eq %struct._object* %call1, null, !dbg !2742
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !2743

if.then.2:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !2744
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2744

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %writer, align 8, !dbg !2745, !tbaa !1458
  %call4 = call %struct._object* @_PyIOBase_check_writable(%struct._object* %5, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !2747
  %cmp5 = icmp eq %struct._object* %call4, null, !dbg !2748
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !2749

if.then.6:                                        ; preds = %if.end.3
  store i32 -1, i32* %retval, !dbg !2750
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2750

if.end.7:                                         ; preds = %if.end.3
  %6 = load %struct._object*, %struct._object** %reader, align 8, !dbg !2751, !tbaa !1458
  %7 = load i64, i64* %buffer_size, align 8, !dbg !2752, !tbaa !2140
  %call8 = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyBufferedReader_Type, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.70, i32 0, i32 0), %struct._object* %6, i64 %7), !dbg !2753
  %8 = bitcast %struct._object* %call8 to %struct.buffered*, !dbg !2754
  %9 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2755, !tbaa !1458
  %reader9 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %9, i32 0, i32 1, !dbg !2756
  store %struct.buffered* %8, %struct.buffered** %reader9, align 8, !dbg !2757, !tbaa !2430
  %10 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2758, !tbaa !1458
  %reader10 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %10, i32 0, i32 1, !dbg !2760
  %11 = load %struct.buffered*, %struct.buffered** %reader10, align 8, !dbg !2760, !tbaa !2430
  %cmp11 = icmp eq %struct.buffered* %11, null, !dbg !2761
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !2762

if.then.12:                                       ; preds = %if.end.7
  store i32 -1, i32* %retval, !dbg !2763
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2763

if.end.13:                                        ; preds = %if.end.7
  %12 = load %struct._object*, %struct._object** %writer, align 8, !dbg !2764, !tbaa !1458
  %13 = load i64, i64* %buffer_size, align 8, !dbg !2765, !tbaa !2140
  %call14 = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyBufferedWriter_Type, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.70, i32 0, i32 0), %struct._object* %12, i64 %13), !dbg !2766
  %14 = bitcast %struct._object* %call14 to %struct.buffered*, !dbg !2767
  %15 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2768, !tbaa !1458
  %writer15 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %15, i32 0, i32 2, !dbg !2769
  store %struct.buffered* %14, %struct.buffered** %writer15, align 8, !dbg !2770, !tbaa !2476
  %16 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2771, !tbaa !1458
  %writer16 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %16, i32 0, i32 2, !dbg !2772
  %17 = load %struct.buffered*, %struct.buffered** %writer16, align 8, !dbg !2772, !tbaa !2476
  %cmp17 = icmp eq %struct.buffered* %17, null, !dbg !2773
  br i1 %cmp17, label %if.then.18, label %if.end.30, !dbg !2774

if.then.18:                                       ; preds = %if.end.13
  br label %do.body, !dbg !2775

do.body:                                          ; preds = %if.then.18
  %18 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2776
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !2776
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1333, metadata !1450), !dbg !2778
  %19 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2779, !tbaa !1458
  %reader19 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %19, i32 0, i32 1, !dbg !2780
  %20 = load %struct.buffered*, %struct.buffered** %reader19, align 8, !dbg !2780, !tbaa !2430
  %21 = bitcast %struct.buffered* %20 to %struct._object*, !dbg !2781
  store %struct._object* %21, %struct._object** %_py_tmp, align 8, !dbg !2778, !tbaa !1458
  %22 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2782, !tbaa !1458
  %cmp20 = icmp ne %struct._object* %22, null, !dbg !2783
  br i1 %cmp20, label %if.then.21, label %if.end.27, !dbg !2784

if.then.21:                                       ; preds = %do.body
  %23 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !2785, !tbaa !1458
  %reader22 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %23, i32 0, i32 1, !dbg !2787
  store %struct.buffered* null, %struct.buffered** %reader22, align 8, !dbg !2788, !tbaa !2430
  br label %do.body.23, !dbg !2789

do.body.23:                                       ; preds = %if.then.21
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2790
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !2790
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1337, metadata !1450), !dbg !2792
  %25 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2793, !tbaa !1458
  store %struct._object* %25, %struct._object** %_py_decref_tmp, align 8, !dbg !2792, !tbaa !1458
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2794, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !2796
  %27 = load i64, i64* %ob_refcnt, align 8, !dbg !2797, !tbaa !1501
  %dec = add i64 %27, -1, !dbg !2797
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2797, !tbaa !1501
  %cmp24 = icmp ne i64 %dec, 0, !dbg !2798
  br i1 %cmp24, label %if.then.25, label %if.else, !dbg !2799

if.then.25:                                       ; preds = %do.body.23
  br label %if.end.26, !dbg !2800

if.else:                                          ; preds = %do.body.23
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2802, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !2804
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2804, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !2805
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2805, !tbaa !1511
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2806, !tbaa !1458
  call void %30(%struct._object* %31), !dbg !2807
  br label %if.end.26

if.end.26:                                        ; preds = %if.else, %if.then.25
  %32 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2808
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !2808
  br label %do.cond, !dbg !2810

do.cond:                                          ; preds = %if.end.26
  br label %do.end, !dbg !2811

do.end:                                           ; preds = %do.cond
  br label %if.end.27, !dbg !2813

if.end.27:                                        ; preds = %do.end, %do.body
  %33 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2815
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !2815
  br label %do.cond.28, !dbg !2818

do.cond.28:                                       ; preds = %if.end.27
  br label %do.end.29, !dbg !2819

do.end.29:                                        ; preds = %do.cond.28
  store i32 -1, i32* %retval, !dbg !2821
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2821

if.end.30:                                        ; preds = %if.end.13
  store i32 0, i32* %retval, !dbg !2822
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2822

cleanup:                                          ; preds = %if.end.30, %do.end.29, %if.then.12, %if.then.6, %if.then.2, %if.then
  %34 = bitcast i64* %buffer_size to i8*, !dbg !2823
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !2823
  %35 = bitcast %struct._object** %writer to i8*, !dbg !2823
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !2823
  %36 = bitcast %struct._object** %reader to i8*, !dbg !2823
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !2823
  %37 = load i32, i32* %retval, !dbg !2823
  ret i32 %37, !dbg !2823
}

; Function Attrs: nounwind uwtable
define internal i32 @bufferedrandom_init(%struct.buffered* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [3 x i8*], align 16
  %buffer_size = alloca i64, align 8
  %raw = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1343, metadata !1450), !dbg !2824
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1344, metadata !1450), !dbg !2825
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1345, metadata !1450), !dbg !2826
  %0 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !2827
  call void @llvm.lifetime.start(i64 24, i8* %0) #1, !dbg !2827
  call void @llvm.dbg.declare(metadata [3 x i8*]* %kwlist, metadata !1346, metadata !1450), !dbg !2828
  %1 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !2828
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([3 x i8*]* @bufferedrandom_init.kwlist to i8*), i64 24, i32 16, i1 false), !dbg !2828
  %2 = bitcast i64* %buffer_size to i8*, !dbg !2829
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2829
  call void @llvm.dbg.declare(metadata i64* %buffer_size, metadata !1347, metadata !1450), !dbg !2830
  store i64 8192, i64* %buffer_size, align 8, !dbg !2830, !tbaa !2140
  %3 = bitcast %struct._object** %raw to i8*, !dbg !2831
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !2831
  call void @llvm.dbg.declare(metadata %struct._object** %raw, metadata !1348, metadata !1450), !dbg !2832
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2833, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 2, !dbg !2834
  store i32 0, i32* %ok, align 4, !dbg !2835, !tbaa !1660
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2836, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 3, !dbg !2837
  store i32 0, i32* %detached, align 4, !dbg !2838, !tbaa !2019
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !2839, !tbaa !1458
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !2841, !tbaa !1458
  %arraydecay = getelementptr inbounds [3 x i8*], [3 x i8*]* %kwlist, i32 0, i32 0, !dbg !2842
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %6, %struct._object* %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.71, i32 0, i32 0), i8** %arraydecay, %struct._object** %raw, i64* %buffer_size), !dbg !2843
  %tobool = icmp ne i32 %call, 0, !dbg !2843
  br i1 %tobool, label %if.end, label %if.then, !dbg !2844

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !2845
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2845

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2847, !tbaa !1458
  %call1 = call %struct._object* @_PyIOBase_check_seekable(%struct._object* %8, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !2849
  %cmp = icmp eq %struct._object* %call1, null, !dbg !2850
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !2851

if.then.2:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !2852
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2852

if.end.3:                                         ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2853, !tbaa !1458
  %call4 = call %struct._object* @_PyIOBase_check_readable(%struct._object* %9, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !2855
  %cmp5 = icmp eq %struct._object* %call4, null, !dbg !2856
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !2857

if.then.6:                                        ; preds = %if.end.3
  store i32 -1, i32* %retval, !dbg !2858
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2858

if.end.7:                                         ; preds = %if.end.3
  %10 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2859, !tbaa !1458
  %call8 = call %struct._object* @_PyIOBase_check_writable(%struct._object* %10, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !2861
  %cmp9 = icmp eq %struct._object* %call8, null, !dbg !2862
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !2863

if.then.10:                                       ; preds = %if.end.7
  store i32 -1, i32* %retval, !dbg !2864
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2864

if.end.11:                                        ; preds = %if.end.7
  br label %do.body, !dbg !2865

do.body:                                          ; preds = %if.end.11
  %11 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2866
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !2866
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1349, metadata !1450), !dbg !2868
  %12 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2869, !tbaa !1458
  %raw12 = getelementptr inbounds %struct.buffered, %struct.buffered* %12, i32 0, i32 1, !dbg !2870
  %13 = load %struct._object*, %struct._object** %raw12, align 8, !dbg !2870, !tbaa !1676
  store %struct._object* %13, %struct._object** %_py_tmp, align 8, !dbg !2868, !tbaa !1458
  %14 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2871, !tbaa !1458
  %cmp13 = icmp ne %struct._object* %14, null, !dbg !2872
  br i1 %cmp13, label %if.then.14, label %if.end.20, !dbg !2873

if.then.14:                                       ; preds = %do.body
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2874, !tbaa !1458
  %raw15 = getelementptr inbounds %struct.buffered, %struct.buffered* %15, i32 0, i32 1, !dbg !2876
  store %struct._object* null, %struct._object** %raw15, align 8, !dbg !2877, !tbaa !1676
  br label %do.body.16, !dbg !2878

do.body.16:                                       ; preds = %if.then.14
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2879
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !2879
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1351, metadata !1450), !dbg !2881
  %17 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2882, !tbaa !1458
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !2881, !tbaa !1458
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2883, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !2885
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !2886, !tbaa !1501
  %dec = add i64 %19, -1, !dbg !2886
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2886, !tbaa !1501
  %cmp17 = icmp ne i64 %dec, 0, !dbg !2887
  br i1 %cmp17, label %if.then.18, label %if.else, !dbg !2888

if.then.18:                                       ; preds = %do.body.16
  br label %if.end.19, !dbg !2889

if.else:                                          ; preds = %do.body.16
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2891, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !2893
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2893, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !2894
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2894, !tbaa !1511
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2895, !tbaa !1458
  call void %22(%struct._object* %23), !dbg !2896
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.then.18
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2897
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !2897
  br label %do.cond, !dbg !2899

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !2900

do.end:                                           ; preds = %do.cond
  br label %if.end.20, !dbg !2902

if.end.20:                                        ; preds = %do.end, %do.body
  %25 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2904
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !2904
  br label %do.cond.21, !dbg !2907

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !2908

do.end.22:                                        ; preds = %do.cond.21
  %26 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2910, !tbaa !1458
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !2911
  %27 = load i64, i64* %ob_refcnt23, align 8, !dbg !2912, !tbaa !1501
  %inc = add i64 %27, 1, !dbg !2912
  store i64 %inc, i64* %ob_refcnt23, align 8, !dbg !2912, !tbaa !1501
  %28 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2913, !tbaa !1458
  %29 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2914, !tbaa !1458
  %raw24 = getelementptr inbounds %struct.buffered, %struct.buffered* %29, i32 0, i32 1, !dbg !2915
  store %struct._object* %28, %struct._object** %raw24, align 8, !dbg !2916, !tbaa !1676
  %30 = load i64, i64* %buffer_size, align 8, !dbg !2917, !tbaa !2140
  %31 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2918, !tbaa !1458
  %buffer_size25 = getelementptr inbounds %struct.buffered, %struct.buffered* %31, i32 0, i32 17, !dbg !2919
  store i64 %30, i64* %buffer_size25, align 8, !dbg !2920, !tbaa !2219
  %32 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2921, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %32, i32 0, i32 4, !dbg !2922
  store i32 1, i32* %readable, align 4, !dbg !2923, !tbaa !2223
  %33 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2924, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %33, i32 0, i32 5, !dbg !2925
  store i32 1, i32* %writable, align 4, !dbg !2926, !tbaa !2227
  %34 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2927, !tbaa !1458
  %call26 = call i32 @_buffered_init(%struct.buffered* %34), !dbg !2929
  %cmp27 = icmp slt i32 %call26, 0, !dbg !2930
  br i1 %cmp27, label %if.then.28, label %if.end.29, !dbg !2931

if.then.28:                                       ; preds = %do.end.22
  store i32 -1, i32* %retval, !dbg !2932
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2932

if.end.29:                                        ; preds = %do.end.22
  %35 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2933, !tbaa !1458
  call void @_bufferedreader_reset_buf(%struct.buffered* %35), !dbg !2934
  %36 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2935, !tbaa !1458
  call void @_bufferedwriter_reset_buf(%struct.buffered* %36), !dbg !2936
  %37 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2937, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %37, i32 0, i32 10, !dbg !2938
  store i64 0, i64* %pos, align 8, !dbg !2939, !tbaa !2357
  %38 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2940, !tbaa !1458
  %39 = bitcast %struct.buffered* %38 to %struct._object*, !dbg !2941
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !2942
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !2942, !tbaa !1509
  %cmp31 = icmp eq %struct._typeobject* %40, @PyBufferedRandom_Type, !dbg !2943
  br i1 %cmp31, label %land.rhs, label %land.end, !dbg !2944

land.rhs:                                         ; preds = %if.end.29
  %41 = load %struct._object*, %struct._object** %raw, align 8, !dbg !2945, !tbaa !1458
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !2946
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8, !dbg !2946, !tbaa !1509
  %cmp33 = icmp eq %struct._typeobject* %42, @PyFileIO_Type, !dbg !2947
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.29
  %43 = phi i1 [ false, %if.end.29 ], [ %cmp33, %land.rhs ]
  %land.ext = zext i1 %43 to i32, !dbg !2948
  %44 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2950, !tbaa !1458
  %fast_closed_checks = getelementptr inbounds %struct.buffered, %struct.buffered* %44, i32 0, i32 7, !dbg !2951
  store i32 %land.ext, i32* %fast_closed_checks, align 4, !dbg !2952, !tbaa !2249
  %45 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !2953, !tbaa !1458
  %ok34 = getelementptr inbounds %struct.buffered, %struct.buffered* %45, i32 0, i32 2, !dbg !2954
  store i32 1, i32* %ok34, align 4, !dbg !2955, !tbaa !1660
  store i32 0, i32* %retval, !dbg !2956
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2956

cleanup:                                          ; preds = %land.end, %if.then.28, %if.then.10, %if.then.6, %if.then.2, %if.then
  %46 = bitcast %struct._object** %raw to i8*, !dbg !2957
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !2957
  %47 = bitcast i64* %buffer_size to i8*, !dbg !2957
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !2957
  %48 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !2957
  call void @llvm.lifetime.end(i64 24, i8* %48) #1, !dbg !2957
  %49 = load i32, i32* %retval, !dbg !2957
  ret i32 %49, !dbg !2957
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferediobase_detach(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !446, metadata !1450), !dbg !2958
  %call = call %struct._object* @bufferediobase_unsupported(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0)), !dbg !2959
  ret %struct._object* %call, !dbg !2960
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferediobase_read(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !462, metadata !1450), !dbg !2961
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !463, metadata !1450), !dbg !2962
  %call = call %struct._object* @bufferediobase_unsupported(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0)), !dbg !2963
  ret %struct._object* %call, !dbg !2964
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferediobase_read1(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !466, metadata !1450), !dbg !2965
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !467, metadata !1450), !dbg !2966
  %call = call %struct._object* @bufferediobase_unsupported(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0)), !dbg !2967
  ret %struct._object* %call, !dbg !2968
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferediobase_readinto(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %buf = alloca %struct.bufferinfo, align 8
  %len = alloca i64, align 8
  %data = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp18 = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !470, metadata !1450), !dbg !2969
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !471, metadata !1450), !dbg !2970
  %0 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !2971
  call void @llvm.lifetime.start(i64 80, i8* %0) #1, !dbg !2971
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %buf, metadata !472, metadata !1450), !dbg !2972
  %1 = bitcast i64* %len to i8*, !dbg !2973
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !2973
  call void @llvm.dbg.declare(metadata i64* %len, metadata !473, metadata !1450), !dbg !2974
  %2 = bitcast %struct._object** %data to i8*, !dbg !2975
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2975
  call void @llvm.dbg.declare(metadata %struct._object** %data, metadata !474, metadata !1450), !dbg !2976
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !2977, !tbaa !1458
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), %struct.bufferinfo* %buf), !dbg !2979
  %tobool = icmp ne i32 %call, 0, !dbg !2979
  br i1 %tobool, label %if.end, label %if.then, !dbg !2980

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2981
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2981

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2983, !tbaa !1458
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !2984
  %5 = load i64, i64* %len1, align 8, !dbg !2984, !tbaa !2985
  %call2 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %4, %struct._Py_Identifier* @PyId_read, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0), i64 %5), !dbg !2987
  store %struct._object* %call2, %struct._object** %data, align 8, !dbg !2988, !tbaa !1458
  %6 = load %struct._object*, %struct._object** %data, align 8, !dbg !2989, !tbaa !1458
  %cmp = icmp eq %struct._object* %6, null, !dbg !2991
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !2992

if.then.3:                                        ; preds = %if.end
  br label %error, !dbg !2993

if.end.4:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %data, align 8, !dbg !2994, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !2995
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2995, !tbaa !1509
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 19, !dbg !2996
  %9 = load i64, i64* %tp_flags, align 8, !dbg !2996, !tbaa !2060
  %and = and i64 %9, 134217728, !dbg !2997
  %cmp5 = icmp ne i64 %and, 0, !dbg !2998
  br i1 %cmp5, label %if.end.11, label %if.then.6, !dbg !2999

if.then.6:                                        ; preds = %if.end.4
  br label %do.body, !dbg !3000

do.body:                                          ; preds = %if.then.6
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3001
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !3001
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !475, metadata !1450), !dbg !3003
  %11 = load %struct._object*, %struct._object** %data, align 8, !dbg !3004, !tbaa !1458
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !3003, !tbaa !1458
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3005, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !3007
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !3008, !tbaa !1501
  %dec = add i64 %13, -1, !dbg !3008
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3008, !tbaa !1501
  %cmp7 = icmp ne i64 %dec, 0, !dbg !3009
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !3010

if.then.8:                                        ; preds = %do.body
  br label %if.end.10, !dbg !3011

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3013, !tbaa !1458
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !3015
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !3015, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !3016
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3016, !tbaa !1511
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3017, !tbaa !1458
  call void %16(%struct._object* %17), !dbg !3018
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.8
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3019
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !3019
  br label %do.cond, !dbg !3021

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !3022

do.end:                                           ; preds = %do.cond
  %19 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3024, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %19, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i32 0, i32 0)), !dbg !3025
  br label %error, !dbg !3026

if.end.11:                                        ; preds = %if.end.4
  %20 = load %struct._object*, %struct._object** %data, align 8, !dbg !3027, !tbaa !1458
  %21 = bitcast %struct._object* %20 to %struct.PyVarObject*, !dbg !3028
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %21, i32 0, i32 1, !dbg !3029
  %22 = load i64, i64* %ob_size, align 8, !dbg !3029, !tbaa !2102
  store i64 %22, i64* %len, align 8, !dbg !3030, !tbaa !2140
  %23 = load i64, i64* %len, align 8, !dbg !3031, !tbaa !2140
  %len12 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !3032
  %24 = load i64, i64* %len12, align 8, !dbg !3032, !tbaa !2985
  %cmp13 = icmp sgt i64 %23, %24, !dbg !3033
  br i1 %cmp13, label %if.then.14, label %if.end.29, !dbg !3034

if.then.14:                                       ; preds = %if.end.11
  %25 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3035, !tbaa !1458
  %len15 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !3036
  %26 = load i64, i64* %len15, align 8, !dbg !3036, !tbaa !2985
  %27 = load i64, i64* %len, align 8, !dbg !3037, !tbaa !2140
  %call16 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %25, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.13, i32 0, i32 0), i64 %26, i64 %27), !dbg !3038
  br label %do.body.17, !dbg !3039

do.body.17:                                       ; preds = %if.then.14
  %28 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !3040
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !3040
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp18, metadata !479, metadata !1450), !dbg !3042
  %29 = load %struct._object*, %struct._object** %data, align 8, !dbg !3043, !tbaa !1458
  store %struct._object* %29, %struct._object** %_py_decref_tmp18, align 8, !dbg !3042, !tbaa !1458
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !3044, !tbaa !1458
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !3046
  %31 = load i64, i64* %ob_refcnt19, align 8, !dbg !3047, !tbaa !1501
  %dec20 = add i64 %31, -1, !dbg !3047
  store i64 %dec20, i64* %ob_refcnt19, align 8, !dbg !3047, !tbaa !1501
  %cmp21 = icmp ne i64 %dec20, 0, !dbg !3048
  br i1 %cmp21, label %if.then.22, label %if.else.23, !dbg !3049

if.then.22:                                       ; preds = %do.body.17
  br label %if.end.26, !dbg !3050

if.else.23:                                       ; preds = %do.body.17
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !3052, !tbaa !1458
  %ob_type24 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !3054
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type24, align 8, !dbg !3054, !tbaa !1509
  %tp_dealloc25 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 4, !dbg !3055
  %34 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc25, align 8, !dbg !3055, !tbaa !1511
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !3056, !tbaa !1458
  call void %34(%struct._object* %35), !dbg !3057
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.23, %if.then.22
  %36 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !3058
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !3058
  br label %do.cond.27, !dbg !3060

do.cond.27:                                       ; preds = %if.end.26
  br label %do.end.28, !dbg !3061

do.end.28:                                        ; preds = %do.cond.27
  br label %error, !dbg !3063

if.end.29:                                        ; preds = %if.end.11
  %buf30 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !3064
  %37 = load i8*, i8** %buf30, align 8, !dbg !3064, !tbaa !3065
  %38 = load %struct._object*, %struct._object** %data, align 8, !dbg !3066, !tbaa !1458
  %39 = bitcast %struct._object* %38 to %struct.PyBytesObject*, !dbg !3067
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %39, i32 0, i32 2, !dbg !3068
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !3069
  %40 = load i64, i64* %len, align 8, !dbg !3070, !tbaa !2140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %arraydecay, i64 %40, i32 1, i1 false), !dbg !3071
  call void @PyBuffer_Release(%struct.bufferinfo* %buf), !dbg !3072
  br label %do.body.31, !dbg !3073

do.body.31:                                       ; preds = %if.end.29
  %41 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !3074
  call void @llvm.lifetime.start(i64 8, i8* %41) #1, !dbg !3074
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp32, metadata !483, metadata !1450), !dbg !3076
  %42 = load %struct._object*, %struct._object** %data, align 8, !dbg !3077, !tbaa !1458
  store %struct._object* %42, %struct._object** %_py_decref_tmp32, align 8, !dbg !3076, !tbaa !1458
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !3078, !tbaa !1458
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0, !dbg !3080
  %44 = load i64, i64* %ob_refcnt33, align 8, !dbg !3081, !tbaa !1501
  %dec34 = add i64 %44, -1, !dbg !3081
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !3081, !tbaa !1501
  %cmp35 = icmp ne i64 %dec34, 0, !dbg !3082
  br i1 %cmp35, label %if.then.36, label %if.else.37, !dbg !3083

if.then.36:                                       ; preds = %do.body.31
  br label %if.end.40, !dbg !3084

if.else.37:                                       ; preds = %do.body.31
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !3086, !tbaa !1458
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !3088
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !3088, !tbaa !1509
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4, !dbg !3089
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8, !dbg !3089, !tbaa !1511
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !3090, !tbaa !1458
  call void %47(%struct._object* %48), !dbg !3091
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.37, %if.then.36
  %49 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !3092
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !3092
  br label %do.cond.41, !dbg !3094

do.cond.41:                                       ; preds = %if.end.40
  br label %do.end.42, !dbg !3095

do.end.42:                                        ; preds = %do.cond.41
  %50 = load i64, i64* %len, align 8, !dbg !3097, !tbaa !2140
  %call43 = call %struct._object* @PyLong_FromSsize_t(i64 %50), !dbg !3098
  store %struct._object* %call43, %struct._object** %retval, !dbg !3099
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3099

error:                                            ; preds = %do.end.28, %do.end, %if.then.3
  call void @PyBuffer_Release(%struct.bufferinfo* %buf), !dbg !3100
  store %struct._object* null, %struct._object** %retval, !dbg !3101
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3101

cleanup:                                          ; preds = %error, %do.end.42, %if.then
  %51 = bitcast %struct._object** %data to i8*, !dbg !3102
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !3102
  %52 = bitcast i64* %len to i8*, !dbg !3102
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !3102
  %53 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !3102
  call void @llvm.lifetime.end(i64 80, i8* %53) #1, !dbg !3102
  %54 = load %struct._object*, %struct._object** %retval, !dbg !3102
  ret %struct._object* %54, !dbg !3102
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferediobase_write(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !487, metadata !1450), !dbg !3103
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !488, metadata !1450), !dbg !3104
  %call = call %struct._object* @bufferediobase_unsupported(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0)), !dbg !3105
  ret %struct._object* %call, !dbg !3106
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferediobase_unsupported(i8* %message) #0 {
entry:
  %message.addr = alloca i8*, align 8
  %state = alloca %struct._PyIO_State*, align 8
  store i8* %message, i8** %message.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !451, metadata !1450), !dbg !3107
  %0 = bitcast %struct._PyIO_State** %state to i8*, !dbg !3108
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3108
  call void @llvm.dbg.declare(metadata %struct._PyIO_State** %state, metadata !452, metadata !1450), !dbg !3109
  %call = call %struct._PyIO_State* @_PyIO_get_module_state(), !dbg !3110
  store %struct._PyIO_State* %call, %struct._PyIO_State** %state, align 8, !dbg !3109, !tbaa !1458
  %1 = load %struct._PyIO_State*, %struct._PyIO_State** %state, align 8, !dbg !3111, !tbaa !1458
  %cmp = icmp ne %struct._PyIO_State* %1, null, !dbg !3113
  br i1 %cmp, label %if.then, label %if.end, !dbg !3114

if.then:                                          ; preds = %entry
  %2 = load %struct._PyIO_State*, %struct._PyIO_State** %state, align 8, !dbg !3115, !tbaa !1458
  %unsupported_operation = getelementptr inbounds %struct._PyIO_State, %struct._PyIO_State* %2, i32 0, i32 2, !dbg !3116
  %3 = load %struct._object*, %struct._object** %unsupported_operation, align 8, !dbg !3116, !tbaa !3117
  %4 = load i8*, i8** %message.addr, align 8, !dbg !3119, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %3, i8* %4), !dbg !3120
  br label %if.end, !dbg !3120

if.end:                                           ; preds = %if.then, %entry
  %5 = bitcast %struct._PyIO_State** %state to i8*, !dbg !3121
  call void @llvm.lifetime.end(i64 8, i8* %5) #1, !dbg !3121
  ret %struct._object* null, !dbg !3122
}

declare %struct._PyIO_State* @_PyIO_get_module_state() #3

declare void @PyErr_SetString(%struct._object*, i8*) #3

declare i32 @_PyArg_ParseTuple_SizeT(%struct._object*, i8*, ...) #3

declare %struct._object* @_PyObject_CallMethodId_SizeT(%struct._object*, %struct._Py_Identifier*, i8*, ...) #3

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare void @PyBuffer_Release(%struct.bufferinfo*) #3

declare %struct._object* @PyLong_FromSsize_t(i64) #3

declare i32 @_PyIOBase_finalize(%struct._object*) #3

declare void @PyObject_ClearWeakRefs(%struct._object*) #3

declare void @PyMem_Free(i8*) #3

declare void @PyThread_free_lock(i8*) #3

declare %struct._object* @_PyObject_GetAttrId(%struct._object*, %struct._Py_Identifier*) #3

declare void @PyErr_Clear() #3

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_buffered_readline(%struct.buffered* %self, i64 %limit) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %limit.addr = alloca i64, align 8
  %res = alloca %struct._object*, align 8
  %chunks = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %written = alloca i64, align 8
  %start = alloca i8*, align 8
  %s = alloca i8*, align 8
  %end = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp74 = alloca %struct._object*, align 8
  %_py_decref_tmp78 = alloca %struct._object*, align 8
  %r = alloca %struct._object*, align 8
  %_py_decref_tmp107 = alloca %struct._object*, align 8
  %_py_tmp165 = alloca %struct._object*, align 8
  %_py_decref_tmp170 = alloca %struct._object*, align 8
  %_py_tmp187 = alloca %struct._object*, align 8
  %_py_decref_tmp192 = alloca %struct._object*, align 8
  %_py_tmp221 = alloca %struct._object*, align 8
  %_py_decref_tmp226 = alloca %struct._object*, align 8
  %_py_tmp243 = alloca %struct._object*, align 8
  %_py_decref_tmp248 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp275 = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !572, metadata !1450), !dbg !3123
  store i64 %limit, i64* %limit.addr, align 8, !tbaa !2140
  call void @llvm.dbg.declare(metadata i64* %limit.addr, metadata !573, metadata !1450), !dbg !3124
  %0 = bitcast %struct._object** %res to i8*, !dbg !3125
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3125
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !574, metadata !1450), !dbg !3126
  store %struct._object* null, %struct._object** %res, align 8, !dbg !3126, !tbaa !1458
  %1 = bitcast %struct._object** %chunks to i8*, !dbg !3127
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3127
  call void @llvm.dbg.declare(metadata %struct._object** %chunks, metadata !575, metadata !1450), !dbg !3128
  store %struct._object* null, %struct._object** %chunks, align 8, !dbg !3128, !tbaa !1458
  %2 = bitcast i64* %n to i8*, !dbg !3129
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3129
  call void @llvm.dbg.declare(metadata i64* %n, metadata !576, metadata !1450), !dbg !3130
  %3 = bitcast i64* %written to i8*, !dbg !3129
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3129
  call void @llvm.dbg.declare(metadata i64* %written, metadata !577, metadata !1450), !dbg !3131
  store i64 0, i64* %written, align 8, !dbg !3131, !tbaa !2140
  %4 = bitcast i8** %start to i8*, !dbg !3132
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !3132
  call void @llvm.dbg.declare(metadata i8** %start, metadata !578, metadata !1450), !dbg !3133
  %5 = bitcast i8** %s to i8*, !dbg !3132
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !3132
  call void @llvm.dbg.declare(metadata i8** %s, metadata !579, metadata !1450), !dbg !3134
  %6 = bitcast i8** %end to i8*, !dbg !3132
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !3132
  call void @llvm.dbg.declare(metadata i8** %end, metadata !580, metadata !1450), !dbg !3135
  %7 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3136, !tbaa !1458
  %fast_closed_checks = getelementptr inbounds %struct.buffered, %struct.buffered* %7, i32 0, i32 7, !dbg !3138
  %8 = load i32, i32* %fast_closed_checks, align 4, !dbg !3138, !tbaa !2249
  %tobool = icmp ne i32 %8, 0, !dbg !3136
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3139

cond.true:                                        ; preds = %entry
  %9 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3140, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %9, i32 0, i32 1, !dbg !3142
  %10 = load %struct._object*, %struct._object** %raw, align 8, !dbg !3142, !tbaa !1676
  %call = call i32 @_PyFileIO_closed(%struct._object* %10), !dbg !3143
  %tobool1 = icmp ne i32 %call, 0, !dbg !3143
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3136

cond.false:                                       ; preds = %entry
  %11 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3144, !tbaa !1458
  %call2 = call i32 @buffered_closed(%struct.buffered* %11), !dbg !3146
  %tobool3 = icmp ne i32 %call2, 0, !dbg !3146
  br i1 %tobool3, label %if.then, label %if.end, !dbg !3139

if.then:                                          ; preds = %cond.false, %cond.true
  %12 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3147, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0)), !dbg !3151
  store %struct._object* null, %struct._object** %retval, !dbg !3152
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.290, !dbg !3152

if.end:                                           ; preds = %cond.false, %cond.true
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3153, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 4, !dbg !3154
  %14 = load i32, i32* %readable, align 4, !dbg !3154, !tbaa !2223
  %tobool4 = icmp ne i32 %14, 0, !dbg !3153
  br i1 %tobool4, label %land.lhs.true, label %cond.false.10, !dbg !3155

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3156, !tbaa !1458
  %readable5 = getelementptr inbounds %struct.buffered, %struct.buffered* %15, i32 0, i32 4, !dbg !3158
  %16 = load i32, i32* %readable5, align 4, !dbg !3158, !tbaa !2223
  %tobool6 = icmp ne i32 %16, 0, !dbg !3159
  br i1 %tobool6, label %land.lhs.true.7, label %cond.false.10, !dbg !3160

land.lhs.true.7:                                  ; preds = %land.lhs.true
  %17 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3161, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %17, i32 0, i32 12, !dbg !3163
  %18 = load i64, i64* %read_end, align 8, !dbg !3163, !tbaa !3164
  %cmp = icmp ne i64 %18, -1, !dbg !3165
  br i1 %cmp, label %cond.true.8, label %cond.false.10, !dbg !3166

cond.true.8:                                      ; preds = %land.lhs.true.7
  %19 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3167, !tbaa !1458
  %read_end9 = getelementptr inbounds %struct.buffered, %struct.buffered* %19, i32 0, i32 12, !dbg !3169
  %20 = load i64, i64* %read_end9, align 8, !dbg !3169, !tbaa !3164
  %21 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3170, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %21, i32 0, i32 10, !dbg !3171
  %22 = load i64, i64* %pos, align 8, !dbg !3171, !tbaa !2357
  %sub = sub i64 %20, %22, !dbg !3172
  br label %cond.end, !dbg !3166

cond.false.10:                                    ; preds = %land.lhs.true.7, %land.lhs.true, %if.end
  br label %cond.end, !dbg !3173

cond.end:                                         ; preds = %cond.false.10, %cond.true.8
  %cond = phi i64 [ %sub, %cond.true.8 ], [ 0, %cond.false.10 ], !dbg !3166
  store i64 %cond, i64* %n, align 8, !dbg !3177, !tbaa !2140
  %23 = load i64, i64* %limit.addr, align 8, !dbg !3180, !tbaa !2140
  %cmp11 = icmp sge i64 %23, 0, !dbg !3182
  br i1 %cmp11, label %land.lhs.true.12, label %if.end.15, !dbg !3183

land.lhs.true.12:                                 ; preds = %cond.end
  %24 = load i64, i64* %n, align 8, !dbg !3184, !tbaa !2140
  %25 = load i64, i64* %limit.addr, align 8, !dbg !3186, !tbaa !2140
  %cmp13 = icmp sgt i64 %24, %25, !dbg !3187
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !3188

if.then.14:                                       ; preds = %land.lhs.true.12
  %26 = load i64, i64* %limit.addr, align 8, !dbg !3189, !tbaa !2140
  store i64 %26, i64* %n, align 8, !dbg !3190, !tbaa !2140
  br label %if.end.15, !dbg !3191

if.end.15:                                        ; preds = %if.then.14, %land.lhs.true.12, %cond.end
  %27 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3192, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %27, i32 0, i32 9, !dbg !3193
  %28 = load i8*, i8** %buffer, align 8, !dbg !3193, !tbaa !1717
  %29 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3194, !tbaa !1458
  %pos16 = getelementptr inbounds %struct.buffered, %struct.buffered* %29, i32 0, i32 10, !dbg !3195
  %30 = load i64, i64* %pos16, align 8, !dbg !3195, !tbaa !2357
  %add.ptr = getelementptr i8, i8* %28, i64 %30, !dbg !3196
  store i8* %add.ptr, i8** %start, align 8, !dbg !3197, !tbaa !1458
  %31 = load i8*, i8** %start, align 8, !dbg !3198, !tbaa !1458
  %32 = load i64, i64* %n, align 8, !dbg !3199, !tbaa !2140
  %call17 = call i8* @memchr(i8* %31, i32 10, i64 %32) #6, !dbg !3200
  store i8* %call17, i8** %s, align 8, !dbg !3201, !tbaa !1458
  %33 = load i8*, i8** %s, align 8, !dbg !3202, !tbaa !1458
  %cmp18 = icmp ne i8* %33, null, !dbg !3204
  br i1 %cmp18, label %if.then.19, label %if.end.30, !dbg !3205

if.then.19:                                       ; preds = %if.end.15
  %34 = load i8*, i8** %start, align 8, !dbg !3206, !tbaa !1458
  %35 = load i8*, i8** %s, align 8, !dbg !3208, !tbaa !1458
  %36 = load i8*, i8** %start, align 8, !dbg !3209, !tbaa !1458
  %sub.ptr.lhs.cast = ptrtoint i8* %35 to i64, !dbg !3210
  %sub.ptr.rhs.cast = ptrtoint i8* %36 to i64, !dbg !3210
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3210
  %add = add i64 %sub.ptr.sub, 1, !dbg !3211
  %call20 = call %struct._object* @PyBytes_FromStringAndSize(i8* %34, i64 %add), !dbg !3212
  store %struct._object* %call20, %struct._object** %res, align 8, !dbg !3213, !tbaa !1458
  %37 = load %struct._object*, %struct._object** %res, align 8, !dbg !3214, !tbaa !1458
  %cmp21 = icmp ne %struct._object* %37, null, !dbg !3216
  br i1 %cmp21, label %if.then.22, label %if.end.29, !dbg !3217

if.then.22:                                       ; preds = %if.then.19
  %38 = load i8*, i8** %s, align 8, !dbg !3218, !tbaa !1458
  %39 = load i8*, i8** %start, align 8, !dbg !3219, !tbaa !1458
  %sub.ptr.lhs.cast23 = ptrtoint i8* %38 to i64, !dbg !3220
  %sub.ptr.rhs.cast24 = ptrtoint i8* %39 to i64, !dbg !3220
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast24, !dbg !3220
  %add26 = add i64 %sub.ptr.sub25, 1, !dbg !3221
  %40 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3222, !tbaa !1458
  %pos27 = getelementptr inbounds %struct.buffered, %struct.buffered* %40, i32 0, i32 10, !dbg !3223
  %41 = load i64, i64* %pos27, align 8, !dbg !3224, !tbaa !2357
  %add28 = add i64 %41, %add26, !dbg !3224
  store i64 %add28, i64* %pos27, align 8, !dbg !3224, !tbaa !2357
  br label %if.end.29, !dbg !3222

if.end.29:                                        ; preds = %if.then.22, %if.then.19
  br label %end_unlocked, !dbg !3225

if.end.30:                                        ; preds = %if.end.15
  %42 = load i64, i64* %n, align 8, !dbg !3226, !tbaa !2140
  %43 = load i64, i64* %limit.addr, align 8, !dbg !3228, !tbaa !2140
  %cmp31 = icmp eq i64 %42, %43, !dbg !3229
  br i1 %cmp31, label %if.then.32, label %if.end.39, !dbg !3230

if.then.32:                                       ; preds = %if.end.30
  %44 = load i8*, i8** %start, align 8, !dbg !3231, !tbaa !1458
  %45 = load i64, i64* %n, align 8, !dbg !3233, !tbaa !2140
  %call33 = call %struct._object* @PyBytes_FromStringAndSize(i8* %44, i64 %45), !dbg !3234
  store %struct._object* %call33, %struct._object** %res, align 8, !dbg !3235, !tbaa !1458
  %46 = load %struct._object*, %struct._object** %res, align 8, !dbg !3236, !tbaa !1458
  %cmp34 = icmp ne %struct._object* %46, null, !dbg !3238
  br i1 %cmp34, label %if.then.35, label %if.end.38, !dbg !3239

if.then.35:                                       ; preds = %if.then.32
  %47 = load i64, i64* %n, align 8, !dbg !3240, !tbaa !2140
  %48 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3241, !tbaa !1458
  %pos36 = getelementptr inbounds %struct.buffered, %struct.buffered* %48, i32 0, i32 10, !dbg !3242
  %49 = load i64, i64* %pos36, align 8, !dbg !3243, !tbaa !2357
  %add37 = add i64 %49, %47, !dbg !3243
  store i64 %add37, i64* %pos36, align 8, !dbg !3243, !tbaa !2357
  br label %if.end.38, !dbg !3241

if.end.38:                                        ; preds = %if.then.35, %if.then.32
  br label %end_unlocked, !dbg !3244

if.end.39:                                        ; preds = %if.end.30
  %50 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3245, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %50, i32 0, i32 15, !dbg !3247
  %51 = load i8*, i8** %lock, align 8, !dbg !3247, !tbaa !1730
  %call40 = call i32 @PyThread_acquire_lock(i8* %51, i32 0), !dbg !3248
  %tobool41 = icmp ne i32 %call40, 0, !dbg !3248
  br i1 %tobool41, label %cond.true.42, label %cond.false.43, !dbg !3249

cond.true.42:                                     ; preds = %if.end.39
  br i1 true, label %land.lhs.true.46, label %if.then.48, !dbg !3250

cond.false.43:                                    ; preds = %if.end.39
  %52 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3252, !tbaa !1458
  %call44 = call i32 @_enter_buffered_busy(%struct.buffered* %52), !dbg !3254
  %tobool45 = icmp ne i32 %call44, 0, !dbg !3254
  br i1 %tobool45, label %land.lhs.true.46, label %if.then.48, !dbg !3249

land.lhs.true.46:                                 ; preds = %cond.false.43, %cond.true.42
  %call47 = call i64 @PyThread_get_thread_ident(), !dbg !3255
  %53 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3258, !tbaa !1458
  %owner = getelementptr inbounds %struct.buffered, %struct.buffered* %53, i32 0, i32 16, !dbg !3259
  store volatile i64 %call47, i64* %owner, align 8, !dbg !3260, !tbaa !3261
  br i1 true, label %if.end.49, label %if.then.48, !dbg !3262

if.then.48:                                       ; preds = %land.lhs.true.46, %cond.false.43, %cond.true.42
  br label %end_unlocked, !dbg !3263

if.end.49:                                        ; preds = %land.lhs.true.46
  %call50 = call %struct._object* @PyList_New(i64 0), !dbg !3264
  store %struct._object* %call50, %struct._object** %chunks, align 8, !dbg !3265, !tbaa !1458
  %54 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !3266, !tbaa !1458
  %cmp51 = icmp eq %struct._object* %54, null, !dbg !3268
  br i1 %cmp51, label %if.then.52, label %if.end.53, !dbg !3269

if.then.52:                                       ; preds = %if.end.49
  br label %end.264, !dbg !3270

if.end.53:                                        ; preds = %if.end.49
  %55 = load i64, i64* %n, align 8, !dbg !3271, !tbaa !2140
  %cmp54 = icmp sgt i64 %55, 0, !dbg !3272
  br i1 %cmp54, label %if.then.55, label %if.end.99, !dbg !3273

if.then.55:                                       ; preds = %if.end.53
  %56 = load i8*, i8** %start, align 8, !dbg !3274, !tbaa !1458
  %57 = load i64, i64* %n, align 8, !dbg !3275, !tbaa !2140
  %call56 = call %struct._object* @PyBytes_FromStringAndSize(i8* %56, i64 %57), !dbg !3276
  store %struct._object* %call56, %struct._object** %res, align 8, !dbg !3277, !tbaa !1458
  %58 = load %struct._object*, %struct._object** %res, align 8, !dbg !3278, !tbaa !1458
  %cmp57 = icmp eq %struct._object* %58, null, !dbg !3280
  br i1 %cmp57, label %if.then.58, label %if.end.59, !dbg !3281

if.then.58:                                       ; preds = %if.then.55
  br label %end.264, !dbg !3282

if.end.59:                                        ; preds = %if.then.55
  %59 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !3283, !tbaa !1458
  %60 = load %struct._object*, %struct._object** %res, align 8, !dbg !3284, !tbaa !1458
  %call60 = call i32 @PyList_Append(%struct._object* %59, %struct._object* %60), !dbg !3285
  %cmp61 = icmp slt i32 %call60, 0, !dbg !3286
  br i1 %cmp61, label %if.then.62, label %if.end.72, !dbg !3287

if.then.62:                                       ; preds = %if.end.59
  br label %do.body, !dbg !3288

do.body:                                          ; preds = %if.then.62
  %61 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3289
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !3289
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !581, metadata !1450), !dbg !3291
  %62 = load %struct._object*, %struct._object** %res, align 8, !dbg !3292, !tbaa !1458
  store %struct._object* %62, %struct._object** %_py_tmp, align 8, !dbg !3291, !tbaa !1458
  %63 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3293, !tbaa !1458
  %cmp63 = icmp ne %struct._object* %63, null, !dbg !3294
  br i1 %cmp63, label %if.then.64, label %if.end.69, !dbg !3295

if.then.64:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %res, align 8, !dbg !3296, !tbaa !1458
  br label %do.body.65, !dbg !3298

do.body.65:                                       ; preds = %if.then.64
  %64 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3299
  call void @llvm.lifetime.start(i64 8, i8* %64) #1, !dbg !3299
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !587, metadata !1450), !dbg !3301
  %65 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3302, !tbaa !1458
  store %struct._object* %65, %struct._object** %_py_decref_tmp, align 8, !dbg !3301, !tbaa !1458
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3303, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 0, !dbg !3305
  %67 = load i64, i64* %ob_refcnt, align 8, !dbg !3306, !tbaa !1501
  %dec = add i64 %67, -1, !dbg !3306
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3306, !tbaa !1501
  %cmp66 = icmp ne i64 %dec, 0, !dbg !3307
  br i1 %cmp66, label %if.then.67, label %if.else, !dbg !3308

if.then.67:                                       ; preds = %do.body.65
  br label %if.end.68, !dbg !3309

if.else:                                          ; preds = %do.body.65
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3311, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 1, !dbg !3313
  %69 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3313, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %69, i32 0, i32 4, !dbg !3314
  %70 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3314, !tbaa !1511
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3315, !tbaa !1458
  call void %70(%struct._object* %71), !dbg !3316
  br label %if.end.68

if.end.68:                                        ; preds = %if.else, %if.then.67
  %72 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3317
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !3317
  br label %do.cond, !dbg !3319

do.cond:                                          ; preds = %if.end.68
  br label %do.end, !dbg !3320

do.end:                                           ; preds = %do.cond
  br label %if.end.69, !dbg !3322

if.end.69:                                        ; preds = %do.end, %do.body
  %73 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3324
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !3324
  br label %do.cond.70, !dbg !3327

do.cond.70:                                       ; preds = %if.end.69
  br label %do.end.71, !dbg !3328

do.end.71:                                        ; preds = %do.cond.70
  br label %end.264, !dbg !3330

if.end.72:                                        ; preds = %if.end.59
  br label %do.body.73, !dbg !3331

do.body.73:                                       ; preds = %if.end.72
  %74 = bitcast %struct._object** %_py_tmp74 to i8*, !dbg !3332
  call void @llvm.lifetime.start(i64 8, i8* %74) #1, !dbg !3332
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp74, metadata !591, metadata !1450), !dbg !3334
  %75 = load %struct._object*, %struct._object** %res, align 8, !dbg !3335, !tbaa !1458
  store %struct._object* %75, %struct._object** %_py_tmp74, align 8, !dbg !3334, !tbaa !1458
  %76 = load %struct._object*, %struct._object** %_py_tmp74, align 8, !dbg !3336, !tbaa !1458
  %cmp75 = icmp ne %struct._object* %76, null, !dbg !3337
  br i1 %cmp75, label %if.then.76, label %if.end.89, !dbg !3338

if.then.76:                                       ; preds = %do.body.73
  store %struct._object* null, %struct._object** %res, align 8, !dbg !3339, !tbaa !1458
  br label %do.body.77, !dbg !3341

do.body.77:                                       ; preds = %if.then.76
  %77 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !3342
  call void @llvm.lifetime.start(i64 8, i8* %77) #1, !dbg !3342
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp78, metadata !593, metadata !1450), !dbg !3344
  %78 = load %struct._object*, %struct._object** %_py_tmp74, align 8, !dbg !3345, !tbaa !1458
  store %struct._object* %78, %struct._object** %_py_decref_tmp78, align 8, !dbg !3344, !tbaa !1458
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !3346, !tbaa !1458
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 0, !dbg !3348
  %80 = load i64, i64* %ob_refcnt79, align 8, !dbg !3349, !tbaa !1501
  %dec80 = add i64 %80, -1, !dbg !3349
  store i64 %dec80, i64* %ob_refcnt79, align 8, !dbg !3349, !tbaa !1501
  %cmp81 = icmp ne i64 %dec80, 0, !dbg !3350
  br i1 %cmp81, label %if.then.82, label %if.else.83, !dbg !3351

if.then.82:                                       ; preds = %do.body.77
  br label %if.end.86, !dbg !3352

if.else.83:                                       ; preds = %do.body.77
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !3354, !tbaa !1458
  %ob_type84 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 1, !dbg !3356
  %82 = load %struct._typeobject*, %struct._typeobject** %ob_type84, align 8, !dbg !3356, !tbaa !1509
  %tp_dealloc85 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %82, i32 0, i32 4, !dbg !3357
  %83 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc85, align 8, !dbg !3357, !tbaa !1511
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !3358, !tbaa !1458
  call void %83(%struct._object* %84), !dbg !3359
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.83, %if.then.82
  %85 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !3360
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !3360
  br label %do.cond.87, !dbg !3362

do.cond.87:                                       ; preds = %if.end.86
  br label %do.end.88, !dbg !3363

do.end.88:                                        ; preds = %do.cond.87
  br label %if.end.89, !dbg !3365

if.end.89:                                        ; preds = %do.end.88, %do.body.73
  %86 = bitcast %struct._object** %_py_tmp74 to i8*, !dbg !3367
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !3367
  br label %do.cond.90, !dbg !3370

do.cond.90:                                       ; preds = %if.end.89
  br label %do.end.91, !dbg !3371

do.end.91:                                        ; preds = %do.cond.90
  %87 = load i64, i64* %n, align 8, !dbg !3373, !tbaa !2140
  %88 = load i64, i64* %written, align 8, !dbg !3374, !tbaa !2140
  %add92 = add i64 %88, %87, !dbg !3374
  store i64 %add92, i64* %written, align 8, !dbg !3374, !tbaa !2140
  %89 = load i64, i64* %n, align 8, !dbg !3375, !tbaa !2140
  %90 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3376, !tbaa !1458
  %pos93 = getelementptr inbounds %struct.buffered, %struct.buffered* %90, i32 0, i32 10, !dbg !3377
  %91 = load i64, i64* %pos93, align 8, !dbg !3378, !tbaa !2357
  %add94 = add i64 %91, %89, !dbg !3378
  store i64 %add94, i64* %pos93, align 8, !dbg !3378, !tbaa !2357
  %92 = load i64, i64* %limit.addr, align 8, !dbg !3379, !tbaa !2140
  %cmp95 = icmp sge i64 %92, 0, !dbg !3381
  br i1 %cmp95, label %if.then.96, label %if.end.98, !dbg !3382

if.then.96:                                       ; preds = %do.end.91
  %93 = load i64, i64* %n, align 8, !dbg !3383, !tbaa !2140
  %94 = load i64, i64* %limit.addr, align 8, !dbg !3384, !tbaa !2140
  %sub97 = sub i64 %94, %93, !dbg !3384
  store i64 %sub97, i64* %limit.addr, align 8, !dbg !3384, !tbaa !2140
  br label %if.end.98, !dbg !3385

if.end.98:                                        ; preds = %if.then.96, %do.end.91
  br label %if.end.99, !dbg !3386

if.end.99:                                        ; preds = %if.end.98, %if.end.53
  %95 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3387, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %95, i32 0, i32 5, !dbg !3388
  %96 = load i32, i32* %writable, align 4, !dbg !3388, !tbaa !2227
  %tobool100 = icmp ne i32 %96, 0, !dbg !3387
  br i1 %tobool100, label %if.then.101, label %if.end.118, !dbg !3389

if.then.101:                                      ; preds = %if.end.99
  %97 = bitcast %struct._object** %r to i8*, !dbg !3390
  call void @llvm.lifetime.start(i64 8, i8* %97) #1, !dbg !3390
  call void @llvm.dbg.declare(metadata %struct._object** %r, metadata !597, metadata !1450), !dbg !3391
  %98 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3392, !tbaa !1458
  %call102 = call %struct._object* @buffered_flush_and_rewind_unlocked(%struct.buffered* %98), !dbg !3393
  store %struct._object* %call102, %struct._object** %r, align 8, !dbg !3391, !tbaa !1458
  %99 = load %struct._object*, %struct._object** %r, align 8, !dbg !3394, !tbaa !1458
  %cmp103 = icmp eq %struct._object* %99, null, !dbg !3396
  br i1 %cmp103, label %if.then.104, label %if.end.105, !dbg !3397

if.then.104:                                      ; preds = %if.then.101
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3398

if.end.105:                                       ; preds = %if.then.101
  br label %do.body.106, !dbg !3399

do.body.106:                                      ; preds = %if.end.105
  %100 = bitcast %struct._object** %_py_decref_tmp107 to i8*, !dbg !3400
  call void @llvm.lifetime.start(i64 8, i8* %100) #1, !dbg !3400
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp107, metadata !600, metadata !1450), !dbg !3402
  %101 = load %struct._object*, %struct._object** %r, align 8, !dbg !3403, !tbaa !1458
  store %struct._object* %101, %struct._object** %_py_decref_tmp107, align 8, !dbg !3402, !tbaa !1458
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8, !dbg !3404, !tbaa !1458
  %ob_refcnt108 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 0, !dbg !3406
  %103 = load i64, i64* %ob_refcnt108, align 8, !dbg !3407, !tbaa !1501
  %dec109 = add i64 %103, -1, !dbg !3407
  store i64 %dec109, i64* %ob_refcnt108, align 8, !dbg !3407, !tbaa !1501
  %cmp110 = icmp ne i64 %dec109, 0, !dbg !3408
  br i1 %cmp110, label %if.then.111, label %if.else.112, !dbg !3409

if.then.111:                                      ; preds = %do.body.106
  br label %if.end.115, !dbg !3410

if.else.112:                                      ; preds = %do.body.106
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8, !dbg !3412, !tbaa !1458
  %ob_type113 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 1, !dbg !3414
  %105 = load %struct._typeobject*, %struct._typeobject** %ob_type113, align 8, !dbg !3414, !tbaa !1509
  %tp_dealloc114 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 4, !dbg !3415
  %106 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc114, align 8, !dbg !3415, !tbaa !1511
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8, !dbg !3416, !tbaa !1458
  call void %106(%struct._object* %107), !dbg !3417
  br label %if.end.115

if.end.115:                                       ; preds = %if.else.112, %if.then.111
  %108 = bitcast %struct._object** %_py_decref_tmp107 to i8*, !dbg !3418
  call void @llvm.lifetime.end(i64 8, i8* %108) #1, !dbg !3418
  br label %do.cond.116, !dbg !3420

do.cond.116:                                      ; preds = %if.end.115
  br label %do.end.117, !dbg !3421

do.end.117:                                       ; preds = %do.cond.116
  store i32 0, i32* %cleanup.dest.slot, !dbg !3423
  br label %cleanup, !dbg !3423

cleanup:                                          ; preds = %do.end.117, %if.then.104
  %109 = bitcast %struct._object** %r to i8*, !dbg !3424
  call void @llvm.lifetime.end(i64 8, i8* %109) #1, !dbg !3424
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 3
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 3
  br i1 %SwitchLeaf2, label %end.264, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.118, !dbg !3426

if.end.118:                                       ; preds = %cleanup.cont, %if.end.99
  br label %for.cond, !dbg !3427

for.cond:                                         ; preds = %if.end.212, %if.end.118
  %110 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3428, !tbaa !1458
  call void @_bufferedreader_reset_buf(%struct.buffered* %110), !dbg !3429
  %111 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3430, !tbaa !1458
  %call119 = call i64 @_bufferedreader_fill_buffer(%struct.buffered* %111), !dbg !3431
  store i64 %call119, i64* %n, align 8, !dbg !3432, !tbaa !2140
  %112 = load i64, i64* %n, align 8, !dbg !3433, !tbaa !2140
  %cmp120 = icmp eq i64 %112, -1, !dbg !3435
  br i1 %cmp120, label %if.then.121, label %if.end.122, !dbg !3436

if.then.121:                                      ; preds = %for.cond
  br label %end.264, !dbg !3437

if.end.122:                                       ; preds = %for.cond
  %113 = load i64, i64* %n, align 8, !dbg !3438, !tbaa !2140
  %cmp123 = icmp sle i64 %113, 0, !dbg !3440
  br i1 %cmp123, label %if.then.124, label %if.end.125, !dbg !3441

if.then.124:                                      ; preds = %if.end.122
  br label %for.end, !dbg !3442

if.end.125:                                       ; preds = %if.end.122
  %114 = load i64, i64* %limit.addr, align 8, !dbg !3443, !tbaa !2140
  %cmp126 = icmp sge i64 %114, 0, !dbg !3445
  br i1 %cmp126, label %land.lhs.true.127, label %if.end.130, !dbg !3446

land.lhs.true.127:                                ; preds = %if.end.125
  %115 = load i64, i64* %n, align 8, !dbg !3447, !tbaa !2140
  %116 = load i64, i64* %limit.addr, align 8, !dbg !3449, !tbaa !2140
  %cmp128 = icmp sgt i64 %115, %116, !dbg !3450
  br i1 %cmp128, label %if.then.129, label %if.end.130, !dbg !3451

if.then.129:                                      ; preds = %land.lhs.true.127
  %117 = load i64, i64* %limit.addr, align 8, !dbg !3452, !tbaa !2140
  store i64 %117, i64* %n, align 8, !dbg !3453, !tbaa !2140
  br label %if.end.130, !dbg !3454

if.end.130:                                       ; preds = %if.then.129, %land.lhs.true.127, %if.end.125
  %118 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3455, !tbaa !1458
  %buffer131 = getelementptr inbounds %struct.buffered, %struct.buffered* %118, i32 0, i32 9, !dbg !3456
  %119 = load i8*, i8** %buffer131, align 8, !dbg !3456, !tbaa !1717
  store i8* %119, i8** %start, align 8, !dbg !3457, !tbaa !1458
  %120 = load i8*, i8** %start, align 8, !dbg !3458, !tbaa !1458
  %121 = load i64, i64* %n, align 8, !dbg !3459, !tbaa !2140
  %add.ptr132 = getelementptr i8, i8* %120, i64 %121, !dbg !3460
  store i8* %add.ptr132, i8** %end, align 8, !dbg !3461, !tbaa !1458
  %122 = load i8*, i8** %start, align 8, !dbg !3462, !tbaa !1458
  store i8* %122, i8** %s, align 8, !dbg !3463, !tbaa !1458
  br label %while.cond, !dbg !3464

while.cond:                                       ; preds = %if.end.149, %if.end.130
  %123 = load i8*, i8** %s, align 8, !dbg !3465, !tbaa !1458
  %124 = load i8*, i8** %end, align 8, !dbg !3468, !tbaa !1458
  %cmp133 = icmp ult i8* %123, %124, !dbg !3469
  br i1 %cmp133, label %while.body, label %while.end, !dbg !3464

while.body:                                       ; preds = %while.cond
  %125 = load i8*, i8** %s, align 8, !dbg !3470, !tbaa !1458
  %incdec.ptr = getelementptr i8, i8* %125, i32 1, !dbg !3470
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !3470, !tbaa !1458
  %126 = load i8, i8* %125, align 1, !dbg !3473, !tbaa !3474
  %conv = sext i8 %126 to i32, !dbg !3473
  %cmp134 = icmp eq i32 %conv, 10, !dbg !3475
  br i1 %cmp134, label %if.then.136, label %if.end.149, !dbg !3476

if.then.136:                                      ; preds = %while.body
  %127 = load i8*, i8** %start, align 8, !dbg !3477, !tbaa !1458
  %128 = load i8*, i8** %s, align 8, !dbg !3479, !tbaa !1458
  %129 = load i8*, i8** %start, align 8, !dbg !3480, !tbaa !1458
  %sub.ptr.lhs.cast137 = ptrtoint i8* %128 to i64, !dbg !3481
  %sub.ptr.rhs.cast138 = ptrtoint i8* %129 to i64, !dbg !3481
  %sub.ptr.sub139 = sub i64 %sub.ptr.lhs.cast137, %sub.ptr.rhs.cast138, !dbg !3481
  %call140 = call %struct._object* @PyBytes_FromStringAndSize(i8* %127, i64 %sub.ptr.sub139), !dbg !3482
  store %struct._object* %call140, %struct._object** %res, align 8, !dbg !3483, !tbaa !1458
  %130 = load %struct._object*, %struct._object** %res, align 8, !dbg !3484, !tbaa !1458
  %cmp141 = icmp eq %struct._object* %130, null, !dbg !3486
  br i1 %cmp141, label %if.then.143, label %if.end.144, !dbg !3487

if.then.143:                                      ; preds = %if.then.136
  br label %end.264, !dbg !3488

if.end.144:                                       ; preds = %if.then.136
  %131 = load i8*, i8** %s, align 8, !dbg !3489, !tbaa !1458
  %132 = load i8*, i8** %start, align 8, !dbg !3490, !tbaa !1458
  %sub.ptr.lhs.cast145 = ptrtoint i8* %131 to i64, !dbg !3491
  %sub.ptr.rhs.cast146 = ptrtoint i8* %132 to i64, !dbg !3491
  %sub.ptr.sub147 = sub i64 %sub.ptr.lhs.cast145, %sub.ptr.rhs.cast146, !dbg !3491
  %133 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3492, !tbaa !1458
  %pos148 = getelementptr inbounds %struct.buffered, %struct.buffered* %133, i32 0, i32 10, !dbg !3493
  store i64 %sub.ptr.sub147, i64* %pos148, align 8, !dbg !3494, !tbaa !2357
  br label %found, !dbg !3495

if.end.149:                                       ; preds = %while.body
  br label %while.cond, !dbg !3464

while.end:                                        ; preds = %while.cond
  %134 = load i8*, i8** %start, align 8, !dbg !3496, !tbaa !1458
  %135 = load i64, i64* %n, align 8, !dbg !3497, !tbaa !2140
  %call150 = call %struct._object* @PyBytes_FromStringAndSize(i8* %134, i64 %135), !dbg !3498
  store %struct._object* %call150, %struct._object** %res, align 8, !dbg !3499, !tbaa !1458
  %136 = load %struct._object*, %struct._object** %res, align 8, !dbg !3500, !tbaa !1458
  %cmp151 = icmp eq %struct._object* %136, null, !dbg !3502
  br i1 %cmp151, label %if.then.153, label %if.end.154, !dbg !3503

if.then.153:                                      ; preds = %while.end
  br label %end.264, !dbg !3504

if.end.154:                                       ; preds = %while.end
  %137 = load i64, i64* %n, align 8, !dbg !3505, !tbaa !2140
  %138 = load i64, i64* %limit.addr, align 8, !dbg !3507, !tbaa !2140
  %cmp155 = icmp eq i64 %137, %138, !dbg !3508
  br i1 %cmp155, label %if.then.157, label %if.end.159, !dbg !3509

if.then.157:                                      ; preds = %if.end.154
  %139 = load i64, i64* %n, align 8, !dbg !3510, !tbaa !2140
  %140 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3512, !tbaa !1458
  %pos158 = getelementptr inbounds %struct.buffered, %struct.buffered* %140, i32 0, i32 10, !dbg !3513
  store i64 %139, i64* %pos158, align 8, !dbg !3514, !tbaa !2357
  br label %for.end, !dbg !3515

if.end.159:                                       ; preds = %if.end.154
  %141 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !3516, !tbaa !1458
  %142 = load %struct._object*, %struct._object** %res, align 8, !dbg !3517, !tbaa !1458
  %call160 = call i32 @PyList_Append(%struct._object* %141, %struct._object* %142), !dbg !3518
  %cmp161 = icmp slt i32 %call160, 0, !dbg !3519
  br i1 %cmp161, label %if.then.163, label %if.end.185, !dbg !3520

if.then.163:                                      ; preds = %if.end.159
  br label %do.body.164, !dbg !3521

do.body.164:                                      ; preds = %if.then.163
  %143 = bitcast %struct._object** %_py_tmp165 to i8*, !dbg !3522
  call void @llvm.lifetime.start(i64 8, i8* %143) #1, !dbg !3522
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp165, metadata !602, metadata !1450), !dbg !3524
  %144 = load %struct._object*, %struct._object** %res, align 8, !dbg !3525, !tbaa !1458
  store %struct._object* %144, %struct._object** %_py_tmp165, align 8, !dbg !3524, !tbaa !1458
  %145 = load %struct._object*, %struct._object** %_py_tmp165, align 8, !dbg !3526, !tbaa !1458
  %cmp166 = icmp ne %struct._object* %145, null, !dbg !3527
  br i1 %cmp166, label %if.then.168, label %if.end.182, !dbg !3528

if.then.168:                                      ; preds = %do.body.164
  store %struct._object* null, %struct._object** %res, align 8, !dbg !3529, !tbaa !1458
  br label %do.body.169, !dbg !3531

do.body.169:                                      ; preds = %if.then.168
  %146 = bitcast %struct._object** %_py_decref_tmp170 to i8*, !dbg !3532
  call void @llvm.lifetime.start(i64 8, i8* %146) #1, !dbg !3532
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp170, metadata !609, metadata !1450), !dbg !3534
  %147 = load %struct._object*, %struct._object** %_py_tmp165, align 8, !dbg !3535, !tbaa !1458
  store %struct._object* %147, %struct._object** %_py_decref_tmp170, align 8, !dbg !3534, !tbaa !1458
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp170, align 8, !dbg !3536, !tbaa !1458
  %ob_refcnt171 = getelementptr inbounds %struct._object, %struct._object* %148, i32 0, i32 0, !dbg !3538
  %149 = load i64, i64* %ob_refcnt171, align 8, !dbg !3539, !tbaa !1501
  %dec172 = add i64 %149, -1, !dbg !3539
  store i64 %dec172, i64* %ob_refcnt171, align 8, !dbg !3539, !tbaa !1501
  %cmp173 = icmp ne i64 %dec172, 0, !dbg !3540
  br i1 %cmp173, label %if.then.175, label %if.else.176, !dbg !3541

if.then.175:                                      ; preds = %do.body.169
  br label %if.end.179, !dbg !3542

if.else.176:                                      ; preds = %do.body.169
  %150 = load %struct._object*, %struct._object** %_py_decref_tmp170, align 8, !dbg !3544, !tbaa !1458
  %ob_type177 = getelementptr inbounds %struct._object, %struct._object* %150, i32 0, i32 1, !dbg !3546
  %151 = load %struct._typeobject*, %struct._typeobject** %ob_type177, align 8, !dbg !3546, !tbaa !1509
  %tp_dealloc178 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %151, i32 0, i32 4, !dbg !3547
  %152 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc178, align 8, !dbg !3547, !tbaa !1511
  %153 = load %struct._object*, %struct._object** %_py_decref_tmp170, align 8, !dbg !3548, !tbaa !1458
  call void %152(%struct._object* %153), !dbg !3549
  br label %if.end.179

if.end.179:                                       ; preds = %if.else.176, %if.then.175
  %154 = bitcast %struct._object** %_py_decref_tmp170 to i8*, !dbg !3550
  call void @llvm.lifetime.end(i64 8, i8* %154) #1, !dbg !3550
  br label %do.cond.180, !dbg !3552

do.cond.180:                                      ; preds = %if.end.179
  br label %do.end.181, !dbg !3553

do.end.181:                                       ; preds = %do.cond.180
  br label %if.end.182, !dbg !3555

if.end.182:                                       ; preds = %do.end.181, %do.body.164
  %155 = bitcast %struct._object** %_py_tmp165 to i8*, !dbg !3557
  call void @llvm.lifetime.end(i64 8, i8* %155) #1, !dbg !3557
  br label %do.cond.183, !dbg !3560

do.cond.183:                                      ; preds = %if.end.182
  br label %do.end.184, !dbg !3561

do.end.184:                                       ; preds = %do.cond.183
  br label %end.264, !dbg !3563

if.end.185:                                       ; preds = %if.end.159
  br label %do.body.186, !dbg !3564

do.body.186:                                      ; preds = %if.end.185
  %156 = bitcast %struct._object** %_py_tmp187 to i8*, !dbg !3565
  call void @llvm.lifetime.start(i64 8, i8* %156) #1, !dbg !3565
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp187, metadata !613, metadata !1450), !dbg !3567
  %157 = load %struct._object*, %struct._object** %res, align 8, !dbg !3568, !tbaa !1458
  store %struct._object* %157, %struct._object** %_py_tmp187, align 8, !dbg !3567, !tbaa !1458
  %158 = load %struct._object*, %struct._object** %_py_tmp187, align 8, !dbg !3569, !tbaa !1458
  %cmp188 = icmp ne %struct._object* %158, null, !dbg !3570
  br i1 %cmp188, label %if.then.190, label %if.end.204, !dbg !3571

if.then.190:                                      ; preds = %do.body.186
  store %struct._object* null, %struct._object** %res, align 8, !dbg !3572, !tbaa !1458
  br label %do.body.191, !dbg !3574

do.body.191:                                      ; preds = %if.then.190
  %159 = bitcast %struct._object** %_py_decref_tmp192 to i8*, !dbg !3575
  call void @llvm.lifetime.start(i64 8, i8* %159) #1, !dbg !3575
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp192, metadata !615, metadata !1450), !dbg !3577
  %160 = load %struct._object*, %struct._object** %_py_tmp187, align 8, !dbg !3578, !tbaa !1458
  store %struct._object* %160, %struct._object** %_py_decref_tmp192, align 8, !dbg !3577, !tbaa !1458
  %161 = load %struct._object*, %struct._object** %_py_decref_tmp192, align 8, !dbg !3579, !tbaa !1458
  %ob_refcnt193 = getelementptr inbounds %struct._object, %struct._object* %161, i32 0, i32 0, !dbg !3581
  %162 = load i64, i64* %ob_refcnt193, align 8, !dbg !3582, !tbaa !1501
  %dec194 = add i64 %162, -1, !dbg !3582
  store i64 %dec194, i64* %ob_refcnt193, align 8, !dbg !3582, !tbaa !1501
  %cmp195 = icmp ne i64 %dec194, 0, !dbg !3583
  br i1 %cmp195, label %if.then.197, label %if.else.198, !dbg !3584

if.then.197:                                      ; preds = %do.body.191
  br label %if.end.201, !dbg !3585

if.else.198:                                      ; preds = %do.body.191
  %163 = load %struct._object*, %struct._object** %_py_decref_tmp192, align 8, !dbg !3587, !tbaa !1458
  %ob_type199 = getelementptr inbounds %struct._object, %struct._object* %163, i32 0, i32 1, !dbg !3589
  %164 = load %struct._typeobject*, %struct._typeobject** %ob_type199, align 8, !dbg !3589, !tbaa !1509
  %tp_dealloc200 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %164, i32 0, i32 4, !dbg !3590
  %165 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc200, align 8, !dbg !3590, !tbaa !1511
  %166 = load %struct._object*, %struct._object** %_py_decref_tmp192, align 8, !dbg !3591, !tbaa !1458
  call void %165(%struct._object* %166), !dbg !3592
  br label %if.end.201

if.end.201:                                       ; preds = %if.else.198, %if.then.197
  %167 = bitcast %struct._object** %_py_decref_tmp192 to i8*, !dbg !3593
  call void @llvm.lifetime.end(i64 8, i8* %167) #1, !dbg !3593
  br label %do.cond.202, !dbg !3595

do.cond.202:                                      ; preds = %if.end.201
  br label %do.end.203, !dbg !3596

do.end.203:                                       ; preds = %do.cond.202
  br label %if.end.204, !dbg !3598

if.end.204:                                       ; preds = %do.end.203, %do.body.186
  %168 = bitcast %struct._object** %_py_tmp187 to i8*, !dbg !3600
  call void @llvm.lifetime.end(i64 8, i8* %168) #1, !dbg !3600
  br label %do.cond.205, !dbg !3603

do.cond.205:                                      ; preds = %if.end.204
  br label %do.end.206, !dbg !3604

do.end.206:                                       ; preds = %do.cond.205
  %169 = load i64, i64* %n, align 8, !dbg !3606, !tbaa !2140
  %170 = load i64, i64* %written, align 8, !dbg !3607, !tbaa !2140
  %add207 = add i64 %170, %169, !dbg !3607
  store i64 %add207, i64* %written, align 8, !dbg !3607, !tbaa !2140
  %171 = load i64, i64* %limit.addr, align 8, !dbg !3608, !tbaa !2140
  %cmp208 = icmp sge i64 %171, 0, !dbg !3610
  br i1 %cmp208, label %if.then.210, label %if.end.212, !dbg !3611

if.then.210:                                      ; preds = %do.end.206
  %172 = load i64, i64* %n, align 8, !dbg !3612, !tbaa !2140
  %173 = load i64, i64* %limit.addr, align 8, !dbg !3613, !tbaa !2140
  %sub211 = sub i64 %173, %172, !dbg !3613
  store i64 %sub211, i64* %limit.addr, align 8, !dbg !3613, !tbaa !2140
  br label %if.end.212, !dbg !3614

if.end.212:                                       ; preds = %if.then.210, %do.end.206
  br label %for.cond, !dbg !3615

for.end:                                          ; preds = %if.then.157, %if.then.124
  br label %found, !dbg !3616

found:                                            ; preds = %for.end, %if.end.144
  %174 = load %struct._object*, %struct._object** %res, align 8, !dbg !3617, !tbaa !1458
  %cmp213 = icmp ne %struct._object* %174, null, !dbg !3618
  br i1 %cmp213, label %land.lhs.true.215, label %if.end.241, !dbg !3619

land.lhs.true.215:                                ; preds = %found
  %175 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !3620, !tbaa !1458
  %176 = load %struct._object*, %struct._object** %res, align 8, !dbg !3622, !tbaa !1458
  %call216 = call i32 @PyList_Append(%struct._object* %175, %struct._object* %176), !dbg !3623
  %cmp217 = icmp slt i32 %call216, 0, !dbg !3624
  br i1 %cmp217, label %if.then.219, label %if.end.241, !dbg !3625

if.then.219:                                      ; preds = %land.lhs.true.215
  br label %do.body.220, !dbg !3626

do.body.220:                                      ; preds = %if.then.219
  %177 = bitcast %struct._object** %_py_tmp221 to i8*, !dbg !3627
  call void @llvm.lifetime.start(i64 8, i8* %177) #1, !dbg !3627
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp221, metadata !619, metadata !1450), !dbg !3629
  %178 = load %struct._object*, %struct._object** %res, align 8, !dbg !3630, !tbaa !1458
  store %struct._object* %178, %struct._object** %_py_tmp221, align 8, !dbg !3629, !tbaa !1458
  %179 = load %struct._object*, %struct._object** %_py_tmp221, align 8, !dbg !3631, !tbaa !1458
  %cmp222 = icmp ne %struct._object* %179, null, !dbg !3632
  br i1 %cmp222, label %if.then.224, label %if.end.238, !dbg !3633

if.then.224:                                      ; preds = %do.body.220
  store %struct._object* null, %struct._object** %res, align 8, !dbg !3634, !tbaa !1458
  br label %do.body.225, !dbg !3636

do.body.225:                                      ; preds = %if.then.224
  %180 = bitcast %struct._object** %_py_decref_tmp226 to i8*, !dbg !3637
  call void @llvm.lifetime.start(i64 8, i8* %180) #1, !dbg !3637
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp226, metadata !623, metadata !1450), !dbg !3639
  %181 = load %struct._object*, %struct._object** %_py_tmp221, align 8, !dbg !3640, !tbaa !1458
  store %struct._object* %181, %struct._object** %_py_decref_tmp226, align 8, !dbg !3639, !tbaa !1458
  %182 = load %struct._object*, %struct._object** %_py_decref_tmp226, align 8, !dbg !3641, !tbaa !1458
  %ob_refcnt227 = getelementptr inbounds %struct._object, %struct._object* %182, i32 0, i32 0, !dbg !3643
  %183 = load i64, i64* %ob_refcnt227, align 8, !dbg !3644, !tbaa !1501
  %dec228 = add i64 %183, -1, !dbg !3644
  store i64 %dec228, i64* %ob_refcnt227, align 8, !dbg !3644, !tbaa !1501
  %cmp229 = icmp ne i64 %dec228, 0, !dbg !3645
  br i1 %cmp229, label %if.then.231, label %if.else.232, !dbg !3646

if.then.231:                                      ; preds = %do.body.225
  br label %if.end.235, !dbg !3647

if.else.232:                                      ; preds = %do.body.225
  %184 = load %struct._object*, %struct._object** %_py_decref_tmp226, align 8, !dbg !3649, !tbaa !1458
  %ob_type233 = getelementptr inbounds %struct._object, %struct._object* %184, i32 0, i32 1, !dbg !3651
  %185 = load %struct._typeobject*, %struct._typeobject** %ob_type233, align 8, !dbg !3651, !tbaa !1509
  %tp_dealloc234 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %185, i32 0, i32 4, !dbg !3652
  %186 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc234, align 8, !dbg !3652, !tbaa !1511
  %187 = load %struct._object*, %struct._object** %_py_decref_tmp226, align 8, !dbg !3653, !tbaa !1458
  call void %186(%struct._object* %187), !dbg !3654
  br label %if.end.235

if.end.235:                                       ; preds = %if.else.232, %if.then.231
  %188 = bitcast %struct._object** %_py_decref_tmp226 to i8*, !dbg !3655
  call void @llvm.lifetime.end(i64 8, i8* %188) #1, !dbg !3655
  br label %do.cond.236, !dbg !3657

do.cond.236:                                      ; preds = %if.end.235
  br label %do.end.237, !dbg !3658

do.end.237:                                       ; preds = %do.cond.236
  br label %if.end.238, !dbg !3660

if.end.238:                                       ; preds = %do.end.237, %do.body.220
  %189 = bitcast %struct._object** %_py_tmp221 to i8*, !dbg !3662
  call void @llvm.lifetime.end(i64 8, i8* %189) #1, !dbg !3662
  br label %do.cond.239, !dbg !3665

do.cond.239:                                      ; preds = %if.end.238
  br label %do.end.240, !dbg !3666

do.end.240:                                       ; preds = %do.cond.239
  br label %end.264, !dbg !3668

if.end.241:                                       ; preds = %land.lhs.true.215, %found
  br label %do.body.242, !dbg !3669

do.body.242:                                      ; preds = %if.end.241
  %190 = bitcast %struct._object** %_py_tmp243 to i8*, !dbg !3670
  call void @llvm.lifetime.start(i64 8, i8* %190) #1, !dbg !3670
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp243, metadata !627, metadata !1450), !dbg !3672
  %191 = load %struct._object*, %struct._object** %res, align 8, !dbg !3673, !tbaa !1458
  store %struct._object* %191, %struct._object** %_py_tmp243, align 8, !dbg !3672, !tbaa !1458
  %192 = load %struct._object*, %struct._object** %_py_tmp243, align 8, !dbg !3674, !tbaa !1458
  %cmp244 = icmp ne %struct._object* %192, null, !dbg !3675
  br i1 %cmp244, label %if.then.246, label %if.end.260, !dbg !3676

if.then.246:                                      ; preds = %do.body.242
  store %struct._object* null, %struct._object** %res, align 8, !dbg !3677, !tbaa !1458
  br label %do.body.247, !dbg !3679

do.body.247:                                      ; preds = %if.then.246
  %193 = bitcast %struct._object** %_py_decref_tmp248 to i8*, !dbg !3680
  call void @llvm.lifetime.start(i64 8, i8* %193) #1, !dbg !3680
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp248, metadata !629, metadata !1450), !dbg !3682
  %194 = load %struct._object*, %struct._object** %_py_tmp243, align 8, !dbg !3683, !tbaa !1458
  store %struct._object* %194, %struct._object** %_py_decref_tmp248, align 8, !dbg !3682, !tbaa !1458
  %195 = load %struct._object*, %struct._object** %_py_decref_tmp248, align 8, !dbg !3684, !tbaa !1458
  %ob_refcnt249 = getelementptr inbounds %struct._object, %struct._object* %195, i32 0, i32 0, !dbg !3686
  %196 = load i64, i64* %ob_refcnt249, align 8, !dbg !3687, !tbaa !1501
  %dec250 = add i64 %196, -1, !dbg !3687
  store i64 %dec250, i64* %ob_refcnt249, align 8, !dbg !3687, !tbaa !1501
  %cmp251 = icmp ne i64 %dec250, 0, !dbg !3688
  br i1 %cmp251, label %if.then.253, label %if.else.254, !dbg !3689

if.then.253:                                      ; preds = %do.body.247
  br label %if.end.257, !dbg !3690

if.else.254:                                      ; preds = %do.body.247
  %197 = load %struct._object*, %struct._object** %_py_decref_tmp248, align 8, !dbg !3692, !tbaa !1458
  %ob_type255 = getelementptr inbounds %struct._object, %struct._object* %197, i32 0, i32 1, !dbg !3694
  %198 = load %struct._typeobject*, %struct._typeobject** %ob_type255, align 8, !dbg !3694, !tbaa !1509
  %tp_dealloc256 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %198, i32 0, i32 4, !dbg !3695
  %199 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc256, align 8, !dbg !3695, !tbaa !1511
  %200 = load %struct._object*, %struct._object** %_py_decref_tmp248, align 8, !dbg !3696, !tbaa !1458
  call void %199(%struct._object* %200), !dbg !3697
  br label %if.end.257

if.end.257:                                       ; preds = %if.else.254, %if.then.253
  %201 = bitcast %struct._object** %_py_decref_tmp248 to i8*, !dbg !3698
  call void @llvm.lifetime.end(i64 8, i8* %201) #1, !dbg !3698
  br label %do.cond.258, !dbg !3700

do.cond.258:                                      ; preds = %if.end.257
  br label %do.end.259, !dbg !3701

do.end.259:                                       ; preds = %do.cond.258
  br label %if.end.260, !dbg !3703

if.end.260:                                       ; preds = %do.end.259, %do.body.242
  %202 = bitcast %struct._object** %_py_tmp243 to i8*, !dbg !3705
  call void @llvm.lifetime.end(i64 8, i8* %202) #1, !dbg !3705
  br label %do.cond.261, !dbg !3707

do.cond.261:                                      ; preds = %if.end.260
  br label %do.end.262, !dbg !3708

do.end.262:                                       ; preds = %do.cond.261
  %203 = load %struct._object*, %struct._object** @_PyIO_empty_bytes, align 8, !dbg !3710, !tbaa !1458
  %204 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !3711, !tbaa !1458
  %call263 = call %struct._object* @_PyBytes_Join(%struct._object* %203, %struct._object* %204), !dbg !3712
  store %struct._object* %call263, %struct._object** %res, align 8, !dbg !3713, !tbaa !1458
  br label %end.264, !dbg !3714

end.264:                                          ; preds = %LeafBlock.1, %do.end.262, %do.end.240, %do.end.184, %if.then.153, %if.then.143, %if.then.121, %do.end.71, %if.then.58, %if.then.52
  br label %do.body.265, !dbg !3715

do.body.265:                                      ; preds = %end.264
  %205 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3716, !tbaa !1458
  %owner266 = getelementptr inbounds %struct.buffered, %struct.buffered* %205, i32 0, i32 16, !dbg !3719
  store volatile i64 0, i64* %owner266, align 8, !dbg !3720, !tbaa !3261
  %206 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3721, !tbaa !1458
  %lock267 = getelementptr inbounds %struct.buffered, %struct.buffered* %206, i32 0, i32 15, !dbg !3722
  %207 = load i8*, i8** %lock267, align 8, !dbg !3722, !tbaa !1730
  call void @PyThread_release_lock(i8* %207), !dbg !3723
  br label %do.cond.268, !dbg !3724

do.cond.268:                                      ; preds = %do.body.265
  br label %do.end.269, !dbg !3725

do.end.269:                                       ; preds = %do.cond.268
  br label %end_unlocked, !dbg !3727

end_unlocked:                                     ; preds = %do.end.269, %if.then.48, %if.end.38, %if.end.29
  br label %do.body.270, !dbg !3729

do.body.270:                                      ; preds = %end_unlocked
  %208 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3730
  call void @llvm.lifetime.start(i64 8, i8* %208) #1, !dbg !3730
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !633, metadata !1450), !dbg !3732
  %209 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !3733, !tbaa !1458
  store %struct._object* %209, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3732, !tbaa !1458
  %210 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3734, !tbaa !1458
  %cmp271 = icmp ne %struct._object* %210, null, !dbg !3735
  br i1 %cmp271, label %if.then.273, label %if.end.287, !dbg !3736

if.then.273:                                      ; preds = %do.body.270
  br label %do.body.274, !dbg !3737

do.body.274:                                      ; preds = %if.then.273
  %211 = bitcast %struct._object** %_py_decref_tmp275 to i8*, !dbg !3739
  call void @llvm.lifetime.start(i64 8, i8* %211) #1, !dbg !3739
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp275, metadata !635, metadata !1450), !dbg !3741
  %212 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3742, !tbaa !1458
  store %struct._object* %212, %struct._object** %_py_decref_tmp275, align 8, !dbg !3741, !tbaa !1458
  %213 = load %struct._object*, %struct._object** %_py_decref_tmp275, align 8, !dbg !3743, !tbaa !1458
  %ob_refcnt276 = getelementptr inbounds %struct._object, %struct._object* %213, i32 0, i32 0, !dbg !3745
  %214 = load i64, i64* %ob_refcnt276, align 8, !dbg !3746, !tbaa !1501
  %dec277 = add i64 %214, -1, !dbg !3746
  store i64 %dec277, i64* %ob_refcnt276, align 8, !dbg !3746, !tbaa !1501
  %cmp278 = icmp ne i64 %dec277, 0, !dbg !3747
  br i1 %cmp278, label %if.then.280, label %if.else.281, !dbg !3748

if.then.280:                                      ; preds = %do.body.274
  br label %if.end.284, !dbg !3749

if.else.281:                                      ; preds = %do.body.274
  %215 = load %struct._object*, %struct._object** %_py_decref_tmp275, align 8, !dbg !3751, !tbaa !1458
  %ob_type282 = getelementptr inbounds %struct._object, %struct._object* %215, i32 0, i32 1, !dbg !3753
  %216 = load %struct._typeobject*, %struct._typeobject** %ob_type282, align 8, !dbg !3753, !tbaa !1509
  %tp_dealloc283 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %216, i32 0, i32 4, !dbg !3754
  %217 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc283, align 8, !dbg !3754, !tbaa !1511
  %218 = load %struct._object*, %struct._object** %_py_decref_tmp275, align 8, !dbg !3755, !tbaa !1458
  call void %217(%struct._object* %218), !dbg !3756
  br label %if.end.284

if.end.284:                                       ; preds = %if.else.281, %if.then.280
  %219 = bitcast %struct._object** %_py_decref_tmp275 to i8*, !dbg !3757
  call void @llvm.lifetime.end(i64 8, i8* %219) #1, !dbg !3757
  br label %do.cond.285, !dbg !3759

do.cond.285:                                      ; preds = %if.end.284
  br label %do.end.286, !dbg !3760

do.end.286:                                       ; preds = %do.cond.285
  br label %if.end.287, !dbg !3762

if.end.287:                                       ; preds = %do.end.286, %do.body.270
  %220 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3764
  call void @llvm.lifetime.end(i64 8, i8* %220) #1, !dbg !3764
  br label %do.cond.288, !dbg !3765

do.cond.288:                                      ; preds = %if.end.287
  br label %do.end.289, !dbg !3766

do.end.289:                                       ; preds = %do.cond.288
  %221 = load %struct._object*, %struct._object** %res, align 8, !dbg !3768, !tbaa !1458
  store %struct._object* %221, %struct._object** %retval, !dbg !3769
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.290, !dbg !3769

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.290

cleanup.290:                                      ; preds = %NewDefault, %do.end.289, %if.then
  %222 = bitcast i8** %end to i8*, !dbg !3770
  call void @llvm.lifetime.end(i64 8, i8* %222) #1, !dbg !3770
  %223 = bitcast i8** %s to i8*, !dbg !3770
  call void @llvm.lifetime.end(i64 8, i8* %223) #1, !dbg !3770
  %224 = bitcast i8** %start to i8*, !dbg !3770
  call void @llvm.lifetime.end(i64 8, i8* %224) #1, !dbg !3770
  %225 = bitcast i64* %written to i8*, !dbg !3770
  call void @llvm.lifetime.end(i64 8, i8* %225) #1, !dbg !3770
  %226 = bitcast i64* %n to i8*, !dbg !3770
  call void @llvm.lifetime.end(i64 8, i8* %226) #1, !dbg !3770
  %227 = bitcast %struct._object** %chunks to i8*, !dbg !3770
  call void @llvm.lifetime.end(i64 8, i8* %227) #1, !dbg !3770
  %228 = bitcast %struct._object** %res to i8*, !dbg !3770
  call void @llvm.lifetime.end(i64 8, i8* %228) #1, !dbg !3770
  %229 = load %struct._object*, %struct._object** %retval, !dbg !3770
  ret %struct._object* %229, !dbg !3770
}

declare %struct._object* @PyObject_CallMethodObjArgs(%struct._object*, %struct._object*, ...) #3

declare i32 @_PyFileIO_closed(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @buffered_closed(%struct.buffered* %self) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.buffered*, align 8
  %closed = alloca i32, align 4
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !640, metadata !1450), !dbg !3771
  %0 = bitcast i32* %closed to i8*, !dbg !3772
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !3772
  call void @llvm.dbg.declare(metadata i32* %closed, metadata !641, metadata !1450), !dbg !3773
  %1 = bitcast %struct._object** %res to i8*, !dbg !3774
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3774
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !642, metadata !1450), !dbg !3775
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3776, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 2, !dbg !3778
  %3 = load i32, i32* %ok, align 4, !dbg !3778, !tbaa !1660
  %cmp = icmp sle i32 %3, 0, !dbg !3779
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !3780

if.then:                                          ; preds = %entry
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3781, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 3, !dbg !3785
  %5 = load i32, i32* %detached, align 4, !dbg !3785, !tbaa !2019
  %tobool = icmp ne i32 %5, 0, !dbg !3786
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !3787

if.then.1:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3788, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !3791
  br label %if.end, !dbg !3792

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3793, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !3796
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store i32 -1, i32* %retval, !dbg !3797
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3799

if.end.2:                                         ; preds = %entry
  %8 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3800, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %8, i32 0, i32 1, !dbg !3801
  %9 = load %struct._object*, %struct._object** %raw, align 8, !dbg !3801, !tbaa !1676
  %10 = load %struct._object*, %struct._object** @_PyIO_str_closed, align 8, !dbg !3802, !tbaa !1458
  %call = call %struct._object* @PyObject_GetAttr(%struct._object* %9, %struct._object* %10), !dbg !3803
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !3804, !tbaa !1458
  %11 = load %struct._object*, %struct._object** %res, align 8, !dbg !3805, !tbaa !1458
  %cmp3 = icmp eq %struct._object* %11, null, !dbg !3807
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !3808

if.then.4:                                        ; preds = %if.end.2
  store i32 -1, i32* %retval, !dbg !3809
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3809

if.end.5:                                         ; preds = %if.end.2
  %12 = load %struct._object*, %struct._object** %res, align 8, !dbg !3810, !tbaa !1458
  %call6 = call i32 @PyObject_IsTrue(%struct._object* %12), !dbg !3811
  store i32 %call6, i32* %closed, align 4, !dbg !3812, !tbaa !1869
  br label %do.body, !dbg !3813

do.body:                                          ; preds = %if.end.5
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3814
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !3814
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !643, metadata !1450), !dbg !3816
  %14 = load %struct._object*, %struct._object** %res, align 8, !dbg !3817, !tbaa !1458
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !3816, !tbaa !1458
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3818, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !3820
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !3821, !tbaa !1501
  %dec = add i64 %16, -1, !dbg !3821
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3821, !tbaa !1501
  %cmp7 = icmp ne i64 %dec, 0, !dbg !3822
  br i1 %cmp7, label %if.then.8, label %if.else.9, !dbg !3823

if.then.8:                                        ; preds = %do.body
  br label %if.end.10, !dbg !3824

if.else.9:                                        ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3826, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !3828
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3828, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !3829
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3829, !tbaa !1511
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3830, !tbaa !1458
  call void %19(%struct._object* %20), !dbg !3831
  br label %if.end.10

if.end.10:                                        ; preds = %if.else.9, %if.then.8
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3832
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !3832
  br label %do.cond, !dbg !3834

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !3835

do.end:                                           ; preds = %do.cond
  %22 = load i32, i32* %closed, align 4, !dbg !3837, !tbaa !1869
  store i32 %22, i32* %retval, !dbg !3838
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3838

cleanup:                                          ; preds = %do.end, %if.then.4, %if.end
  %23 = bitcast %struct._object** %res to i8*, !dbg !3839
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !3839
  %24 = bitcast i32* %closed to i8*, !dbg !3839
  call void @llvm.lifetime.end(i64 4, i8* %24) #1, !dbg !3839
  %25 = load i32, i32* %retval, !dbg !3839
  ret i32 %25, !dbg !3839
}

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) #4

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #3

declare i32 @PyThread_acquire_lock(i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @_enter_buffered_busy(%struct.buffered* %self) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.buffered*, align 8
  %_save = alloca %struct._ts*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !647, metadata !1450), !dbg !3840
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3841, !tbaa !1458
  %owner = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 16, !dbg !3843
  %1 = load volatile i64, i64* %owner, align 8, !dbg !3843, !tbaa !3261
  %call = call i64 @PyThread_get_thread_ident(), !dbg !3844
  %cmp = icmp eq i64 %1, %call, !dbg !3845
  br i1 %cmp, label %if.then, label %if.end, !dbg !3846

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !3847, !tbaa !1458
  %3 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3849, !tbaa !1458
  %call1 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i32 0, i32 0), %struct.buffered* %3), !dbg !3850
  store i32 0, i32* %retval, !dbg !3851
  br label %return, !dbg !3851

if.end:                                           ; preds = %entry
  %4 = bitcast %struct._ts** %_save to i8*, !dbg !3852
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !3852
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !648, metadata !1450), !dbg !3853
  %call2 = call %struct._ts* @PyEval_SaveThread(), !dbg !3854
  store %struct._ts* %call2, %struct._ts** %_save, align 8, !dbg !3855, !tbaa !1458
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3856, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 15, !dbg !3857
  %6 = load i8*, i8** %lock, align 8, !dbg !3857, !tbaa !1730
  %call3 = call i32 @PyThread_acquire_lock(i8* %6, i32 1), !dbg !3858
  %7 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !3859, !tbaa !1458
  call void @PyEval_RestoreThread(%struct._ts* %7), !dbg !3860
  %8 = bitcast %struct._ts** %_save to i8*, !dbg !3861
  call void @llvm.lifetime.end(i64 8, i8* %8) #1, !dbg !3861
  store i32 1, i32* %retval, !dbg !3862
  br label %return, !dbg !3862

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, !dbg !3863
  ret i32 %9, !dbg !3863
}

declare i64 @PyThread_get_thread_ident() #3

declare %struct._object* @PyList_New(i64) #3

declare i32 @PyList_Append(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_flush_and_rewind_unlocked(%struct.buffered* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !710, metadata !1450), !dbg !3864
  %0 = bitcast %struct._object** %res to i8*, !dbg !3865
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3865
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !711, metadata !1450), !dbg !3866
  %1 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3867, !tbaa !1458
  %call = call %struct._object* @_bufferedwriter_flush_unlocked(%struct.buffered* %1), !dbg !3868
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !3869, !tbaa !1458
  %2 = load %struct._object*, %struct._object** %res, align 8, !dbg !3870, !tbaa !1458
  %cmp = icmp eq %struct._object* %2, null, !dbg !3872
  br i1 %cmp, label %if.then, label %if.end, !dbg !3873

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3874
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.20, !dbg !3874

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !3875

do.body:                                          ; preds = %if.end
  %3 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3876
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3876
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !712, metadata !1450), !dbg !3878
  %4 = load %struct._object*, %struct._object** %res, align 8, !dbg !3879, !tbaa !1458
  store %struct._object* %4, %struct._object** %_py_decref_tmp, align 8, !dbg !3878, !tbaa !1458
  %5 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3880, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !3882
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !3883, !tbaa !1501
  %dec = add i64 %6, -1, !dbg !3883
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3883, !tbaa !1501
  %cmp1 = icmp ne i64 %dec, 0, !dbg !3884
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !3885

if.then.2:                                        ; preds = %do.body
  br label %if.end.3, !dbg !3886

if.else:                                          ; preds = %do.body
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3888, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !3890
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3890, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 4, !dbg !3891
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3891, !tbaa !1511
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3892, !tbaa !1458
  call void %9(%struct._object* %10), !dbg !3893
  br label %if.end.3

if.end.3:                                         ; preds = %if.else, %if.then.2
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3894
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !3894
  br label %do.cond, !dbg !3896

do.cond:                                          ; preds = %if.end.3
  br label %do.end, !dbg !3897

do.end:                                           ; preds = %do.cond
  %12 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3899, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %12, i32 0, i32 4, !dbg !3900
  %13 = load i32, i32* %readable, align 4, !dbg !3900, !tbaa !2223
  %tobool = icmp ne i32 %13, 0, !dbg !3899
  br i1 %tobool, label %if.then.4, label %if.end.19, !dbg !3901

if.then.4:                                        ; preds = %do.end
  %14 = bitcast i64* %n to i8*, !dbg !3902
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !3902
  call void @llvm.dbg.declare(metadata i64* %n, metadata !714, metadata !1450), !dbg !3903
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3904, !tbaa !1458
  %16 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3905, !tbaa !1458
  %readable5 = getelementptr inbounds %struct.buffered, %struct.buffered* %16, i32 0, i32 4, !dbg !3906
  %17 = load i32, i32* %readable5, align 4, !dbg !3906, !tbaa !2223
  %tobool6 = icmp ne i32 %17, 0, !dbg !3905
  br i1 %tobool6, label %land.lhs.true, label %lor.lhs.false, !dbg !3907

land.lhs.true:                                    ; preds = %if.then.4
  %18 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3908, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %18, i32 0, i32 12, !dbg !3910
  %19 = load i64, i64* %read_end, align 8, !dbg !3910, !tbaa !3164
  %cmp7 = icmp ne i64 %19, -1, !dbg !3911
  br i1 %cmp7, label %land.lhs.true.11, label %lor.lhs.false, !dbg !3912

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then.4
  %20 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3913, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %20, i32 0, i32 5, !dbg !3916
  %21 = load i32, i32* %writable, align 4, !dbg !3916, !tbaa !2227
  %tobool8 = icmp ne i32 %21, 0, !dbg !3917
  br i1 %tobool8, label %land.lhs.true.9, label %cond.false, !dbg !3918

land.lhs.true.9:                                  ; preds = %lor.lhs.false
  %22 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3919, !tbaa !1458
  %write_end = getelementptr inbounds %struct.buffered, %struct.buffered* %22, i32 0, i32 14, !dbg !3921
  %23 = load i64, i64* %write_end, align 8, !dbg !3921, !tbaa !3922
  %cmp10 = icmp ne i64 %23, -1, !dbg !3923
  br i1 %cmp10, label %land.lhs.true.11, label %cond.false, !dbg !3924

land.lhs.true.11:                                 ; preds = %land.lhs.true.9, %land.lhs.true
  %24 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3925, !tbaa !1458
  %raw_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %24, i32 0, i32 11, !dbg !3928
  %25 = load i64, i64* %raw_pos, align 8, !dbg !3928, !tbaa !3929
  %cmp12 = icmp sge i64 %25, 0, !dbg !3930
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !3931

cond.true:                                        ; preds = %land.lhs.true.11
  %26 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3932, !tbaa !1458
  %raw_pos13 = getelementptr inbounds %struct.buffered, %struct.buffered* %26, i32 0, i32 11, !dbg !3934
  %27 = load i64, i64* %raw_pos13, align 8, !dbg !3934, !tbaa !3929
  %28 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3935, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %28, i32 0, i32 10, !dbg !3936
  %29 = load i64, i64* %pos, align 8, !dbg !3936, !tbaa !2357
  %sub = sub i64 %27, %29, !dbg !3937
  br label %cond.end, !dbg !3931

cond.false:                                       ; preds = %land.lhs.true.11, %land.lhs.true.9, %lor.lhs.false
  br label %cond.end, !dbg !3938

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !3931
  %sub14 = sub i64 0, %cond, !dbg !3942
  %call15 = call i64 @_buffered_raw_seek(%struct.buffered* %15, i64 %sub14, i32 1), !dbg !3945
  store i64 %call15, i64* %n, align 8, !dbg !3946, !tbaa !2140
  %30 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3947, !tbaa !1458
  call void @_bufferedreader_reset_buf(%struct.buffered* %30), !dbg !3948
  %31 = load i64, i64* %n, align 8, !dbg !3949, !tbaa !2140
  %cmp16 = icmp eq i64 %31, -1, !dbg !3951
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !3952

if.then.17:                                       ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval, !dbg !3953
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3953

if.end.18:                                        ; preds = %cond.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !3954
  br label %cleanup, !dbg !3954

cleanup:                                          ; preds = %if.end.18, %if.then.17
  %32 = bitcast i64* %n to i8*, !dbg !3955
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !3955
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.19, !dbg !3957

if.end.19:                                        ; preds = %cleanup.cont, %do.end
  %33 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3958, !tbaa !1501
  %inc = add i64 %33, 1, !dbg !3958
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3958, !tbaa !1501
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !3959
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.20, !dbg !3959

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.20

cleanup.20:                                       ; preds = %NewDefault, %if.end.19, %if.then
  %34 = bitcast %struct._object** %res to i8*, !dbg !3960
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !3960
  %35 = load %struct._object*, %struct._object** %retval, !dbg !3960
  ret %struct._object* %35, !dbg !3960
}

; Function Attrs: nounwind uwtable
define internal void @_bufferedreader_reset_buf(%struct.buffered* %self) #0 {
entry:
  %self.addr = alloca %struct.buffered*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !781, metadata !1450), !dbg !3961
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3962, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 12, !dbg !3963
  store i64 -1, i64* %read_end, align 8, !dbg !3964, !tbaa !3164
  ret void, !dbg !3965
}

; Function Attrs: nounwind uwtable
define internal i64 @_bufferedreader_fill_buffer(%struct.buffered* %self) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %start = alloca i64, align 8
  %len = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !786, metadata !1450), !dbg !3966
  %0 = bitcast i64* %start to i8*, !dbg !3967
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3967
  call void @llvm.dbg.declare(metadata i64* %start, metadata !787, metadata !1450), !dbg !3968
  %1 = bitcast i64* %len to i8*, !dbg !3967
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3967
  call void @llvm.dbg.declare(metadata i64* %len, metadata !788, metadata !1450), !dbg !3969
  %2 = bitcast i64* %n to i8*, !dbg !3967
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3967
  call void @llvm.dbg.declare(metadata i64* %n, metadata !789, metadata !1450), !dbg !3970
  %3 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3971, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %3, i32 0, i32 4, !dbg !3973
  %4 = load i32, i32* %readable, align 4, !dbg !3973, !tbaa !2223
  %tobool = icmp ne i32 %4, 0, !dbg !3971
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !3974

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3975, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 12, !dbg !3977
  %6 = load i64, i64* %read_end, align 8, !dbg !3977, !tbaa !3164
  %cmp = icmp ne i64 %6, -1, !dbg !3978
  br i1 %cmp, label %if.then, label %if.else, !dbg !3979

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3980, !tbaa !1458
  %read_end1 = getelementptr inbounds %struct.buffered, %struct.buffered* %7, i32 0, i32 12, !dbg !3981
  %8 = load i64, i64* %read_end1, align 8, !dbg !3981, !tbaa !3164
  store i64 %8, i64* %start, align 8, !dbg !3982, !tbaa !2140
  br label %if.end, !dbg !3983

if.else:                                          ; preds = %land.lhs.true, %entry
  store i64 0, i64* %start, align 8, !dbg !3984, !tbaa !2140
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3985, !tbaa !1458
  %buffer_size = getelementptr inbounds %struct.buffered, %struct.buffered* %9, i32 0, i32 17, !dbg !3986
  %10 = load i64, i64* %buffer_size, align 8, !dbg !3986, !tbaa !2219
  %11 = load i64, i64* %start, align 8, !dbg !3987, !tbaa !2140
  %sub = sub i64 %10, %11, !dbg !3988
  store i64 %sub, i64* %len, align 8, !dbg !3989, !tbaa !2140
  %12 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3990, !tbaa !1458
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !3991, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 9, !dbg !3992
  %14 = load i8*, i8** %buffer, align 8, !dbg !3992, !tbaa !1717
  %15 = load i64, i64* %start, align 8, !dbg !3993, !tbaa !2140
  %add.ptr = getelementptr i8, i8* %14, i64 %15, !dbg !3994
  %16 = load i64, i64* %len, align 8, !dbg !3995, !tbaa !2140
  %call = call i64 @_bufferedreader_raw_read(%struct.buffered* %12, i8* %add.ptr, i64 %16), !dbg !3996
  store i64 %call, i64* %n, align 8, !dbg !3997, !tbaa !2140
  %17 = load i64, i64* %n, align 8, !dbg !3998, !tbaa !2140
  %cmp2 = icmp sle i64 %17, 0, !dbg !4000
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !4001

if.then.3:                                        ; preds = %if.end
  %18 = load i64, i64* %n, align 8, !dbg !4002, !tbaa !2140
  store i64 %18, i64* %retval, !dbg !4003
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4003

if.end.4:                                         ; preds = %if.end
  %19 = load i64, i64* %start, align 8, !dbg !4004, !tbaa !2140
  %20 = load i64, i64* %n, align 8, !dbg !4005, !tbaa !2140
  %add = add i64 %19, %20, !dbg !4006
  %21 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4007, !tbaa !1458
  %read_end5 = getelementptr inbounds %struct.buffered, %struct.buffered* %21, i32 0, i32 12, !dbg !4008
  store i64 %add, i64* %read_end5, align 8, !dbg !4009, !tbaa !3164
  %22 = load i64, i64* %start, align 8, !dbg !4010, !tbaa !2140
  %23 = load i64, i64* %n, align 8, !dbg !4011, !tbaa !2140
  %add6 = add i64 %22, %23, !dbg !4012
  %24 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4013, !tbaa !1458
  %raw_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %24, i32 0, i32 11, !dbg !4014
  store i64 %add6, i64* %raw_pos, align 8, !dbg !4015, !tbaa !3929
  %25 = load i64, i64* %n, align 8, !dbg !4016, !tbaa !2140
  store i64 %25, i64* %retval, !dbg !4017
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4017

cleanup:                                          ; preds = %if.end.4, %if.then.3
  %26 = bitcast i64* %n to i8*, !dbg !4018
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !4018
  %27 = bitcast i64* %len to i8*, !dbg !4018
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !4018
  %28 = bitcast i64* %start to i8*, !dbg !4018
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !4018
  %29 = load i64, i64* %retval, !dbg !4018
  ret i64 %29, !dbg !4018
}

declare %struct._object* @_PyBytes_Join(%struct._object*, %struct._object*) #3

declare void @PyThread_release_lock(i8*) #3

declare %struct._object* @PyObject_GetAttr(%struct._object*, %struct._object*) #3

declare i32 @PyObject_IsTrue(%struct._object*) #3

declare %struct._ts* @PyEval_SaveThread() #3

declare void @PyEval_RestoreThread(%struct._ts*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_bufferedwriter_flush_unlocked(%struct.buffered* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %written = alloca i64, align 8
  %n = alloca i64, align 8
  %rewind = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !719, metadata !1450), !dbg !4019
  %0 = bitcast i64* %written to i8*, !dbg !4020
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4020
  call void @llvm.dbg.declare(metadata i64* %written, metadata !720, metadata !1450), !dbg !4021
  store i64 0, i64* %written, align 8, !dbg !4021, !tbaa !2140
  %1 = bitcast i64* %n to i8*, !dbg !4022
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4022
  call void @llvm.dbg.declare(metadata i64* %n, metadata !721, metadata !1450), !dbg !4023
  %2 = bitcast i64* %rewind to i8*, !dbg !4022
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4022
  call void @llvm.dbg.declare(metadata i64* %rewind, metadata !722, metadata !1450), !dbg !4024
  %3 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4025, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %3, i32 0, i32 5, !dbg !4027
  %4 = load i32, i32* %writable, align 4, !dbg !4027, !tbaa !2227
  %tobool = icmp ne i32 %4, 0, !dbg !4025
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !4028

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4029, !tbaa !1458
  %write_end = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 14, !dbg !4031
  %6 = load i64, i64* %write_end, align 8, !dbg !4031, !tbaa !3922
  %cmp = icmp ne i64 %6, -1, !dbg !4032
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !4033

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4034, !tbaa !1458
  %write_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %7, i32 0, i32 13, !dbg !4036
  %8 = load i64, i64* %write_pos, align 8, !dbg !4036, !tbaa !4037
  %9 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4038, !tbaa !1458
  %write_end1 = getelementptr inbounds %struct.buffered, %struct.buffered* %9, i32 0, i32 14, !dbg !4039
  %10 = load i64, i64* %write_end1, align 8, !dbg !4039, !tbaa !3922
  %cmp2 = icmp eq i64 %8, %10, !dbg !4040
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4041

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true, %entry
  br label %end, !dbg !4042

if.end:                                           ; preds = %lor.lhs.false
  %11 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4043, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %11, i32 0, i32 4, !dbg !4044
  %12 = load i32, i32* %readable, align 4, !dbg !4044, !tbaa !2223
  %tobool3 = icmp ne i32 %12, 0, !dbg !4043
  br i1 %tobool3, label %land.lhs.true.4, label %lor.lhs.false.6, !dbg !4045

land.lhs.true.4:                                  ; preds = %if.end
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4046, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 12, !dbg !4048
  %14 = load i64, i64* %read_end, align 8, !dbg !4048, !tbaa !3164
  %cmp5 = icmp ne i64 %14, -1, !dbg !4049
  br i1 %cmp5, label %land.lhs.true.12, label %lor.lhs.false.6, !dbg !4050

lor.lhs.false.6:                                  ; preds = %land.lhs.true.4, %if.end
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4051, !tbaa !1458
  %writable7 = getelementptr inbounds %struct.buffered, %struct.buffered* %15, i32 0, i32 5, !dbg !4054
  %16 = load i32, i32* %writable7, align 4, !dbg !4054, !tbaa !2227
  %tobool8 = icmp ne i32 %16, 0, !dbg !4055
  br i1 %tobool8, label %land.lhs.true.9, label %cond.false, !dbg !4056

land.lhs.true.9:                                  ; preds = %lor.lhs.false.6
  %17 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4057, !tbaa !1458
  %write_end10 = getelementptr inbounds %struct.buffered, %struct.buffered* %17, i32 0, i32 14, !dbg !4059
  %18 = load i64, i64* %write_end10, align 8, !dbg !4059, !tbaa !3922
  %cmp11 = icmp ne i64 %18, -1, !dbg !4060
  br i1 %cmp11, label %land.lhs.true.12, label %cond.false, !dbg !4061

land.lhs.true.12:                                 ; preds = %land.lhs.true.9, %land.lhs.true.4
  %19 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4062, !tbaa !1458
  %raw_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %19, i32 0, i32 11, !dbg !4065
  %20 = load i64, i64* %raw_pos, align 8, !dbg !4065, !tbaa !3929
  %cmp13 = icmp sge i64 %20, 0, !dbg !4066
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !4067

cond.true:                                        ; preds = %land.lhs.true.12
  %21 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4068, !tbaa !1458
  %raw_pos14 = getelementptr inbounds %struct.buffered, %struct.buffered* %21, i32 0, i32 11, !dbg !4070
  %22 = load i64, i64* %raw_pos14, align 8, !dbg !4070, !tbaa !3929
  %23 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4071, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %23, i32 0, i32 10, !dbg !4072
  %24 = load i64, i64* %pos, align 8, !dbg !4072, !tbaa !2357
  %sub = sub i64 %22, %24, !dbg !4073
  br label %cond.end, !dbg !4067

cond.false:                                       ; preds = %land.lhs.true.12, %land.lhs.true.9, %lor.lhs.false.6
  br label %cond.end, !dbg !4074

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !4067
  %25 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4078, !tbaa !1458
  %pos15 = getelementptr inbounds %struct.buffered, %struct.buffered* %25, i32 0, i32 10, !dbg !4081
  %26 = load i64, i64* %pos15, align 8, !dbg !4081, !tbaa !2357
  %27 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4082, !tbaa !1458
  %write_pos16 = getelementptr inbounds %struct.buffered, %struct.buffered* %27, i32 0, i32 13, !dbg !4083
  %28 = load i64, i64* %write_pos16, align 8, !dbg !4083, !tbaa !4037
  %sub17 = sub i64 %26, %28, !dbg !4084
  %add = add i64 %cond, %sub17, !dbg !4085
  store i64 %add, i64* %rewind, align 8, !dbg !4086, !tbaa !2140
  %29 = load i64, i64* %rewind, align 8, !dbg !4087, !tbaa !2140
  %cmp18 = icmp ne i64 %29, 0, !dbg !4089
  br i1 %cmp18, label %if.then.19, label %if.end.26, !dbg !4090

if.then.19:                                       ; preds = %cond.end
  %30 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4091, !tbaa !1458
  %31 = load i64, i64* %rewind, align 8, !dbg !4093, !tbaa !2140
  %sub20 = sub i64 0, %31, !dbg !4094
  %call = call i64 @_buffered_raw_seek(%struct.buffered* %30, i64 %sub20, i32 1), !dbg !4095
  store i64 %call, i64* %n, align 8, !dbg !4096, !tbaa !2140
  %32 = load i64, i64* %n, align 8, !dbg !4097, !tbaa !2140
  %cmp21 = icmp slt i64 %32, 0, !dbg !4099
  br i1 %cmp21, label %if.then.22, label %if.end.23, !dbg !4100

if.then.22:                                       ; preds = %if.then.19
  br label %error, !dbg !4101

if.end.23:                                        ; preds = %if.then.19
  %33 = load i64, i64* %rewind, align 8, !dbg !4103, !tbaa !2140
  %34 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4104, !tbaa !1458
  %raw_pos24 = getelementptr inbounds %struct.buffered, %struct.buffered* %34, i32 0, i32 11, !dbg !4105
  %35 = load i64, i64* %raw_pos24, align 8, !dbg !4106, !tbaa !3929
  %sub25 = sub i64 %35, %33, !dbg !4106
  store i64 %sub25, i64* %raw_pos24, align 8, !dbg !4106, !tbaa !3929
  br label %if.end.26, !dbg !4107

if.end.26:                                        ; preds = %if.end.23, %cond.end
  br label %while.cond, !dbg !4108

while.cond:                                       ; preds = %if.end.49, %if.end.26
  %36 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4109, !tbaa !1458
  %write_pos27 = getelementptr inbounds %struct.buffered, %struct.buffered* %36, i32 0, i32 13, !dbg !4111
  %37 = load i64, i64* %write_pos27, align 8, !dbg !4111, !tbaa !4037
  %38 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4112, !tbaa !1458
  %write_end28 = getelementptr inbounds %struct.buffered, %struct.buffered* %38, i32 0, i32 14, !dbg !4113
  %39 = load i64, i64* %write_end28, align 8, !dbg !4113, !tbaa !3922
  %cmp29 = icmp slt i64 %37, %39, !dbg !4114
  br i1 %cmp29, label %while.body, label %while.end, !dbg !4108

while.body:                                       ; preds = %while.cond
  %40 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4115, !tbaa !1458
  %41 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4117, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %41, i32 0, i32 9, !dbg !4118
  %42 = load i8*, i8** %buffer, align 8, !dbg !4118, !tbaa !1717
  %43 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4119, !tbaa !1458
  %write_pos30 = getelementptr inbounds %struct.buffered, %struct.buffered* %43, i32 0, i32 13, !dbg !4120
  %44 = load i64, i64* %write_pos30, align 8, !dbg !4120, !tbaa !4037
  %add.ptr = getelementptr i8, i8* %42, i64 %44, !dbg !4121
  %45 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4122, !tbaa !1458
  %write_end31 = getelementptr inbounds %struct.buffered, %struct.buffered* %45, i32 0, i32 14, !dbg !4123
  %46 = load i64, i64* %write_end31, align 8, !dbg !4123, !tbaa !3922
  %47 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4124, !tbaa !1458
  %write_pos32 = getelementptr inbounds %struct.buffered, %struct.buffered* %47, i32 0, i32 13, !dbg !4125
  %48 = load i64, i64* %write_pos32, align 8, !dbg !4125, !tbaa !4037
  %sub33 = sub i64 %46, %48, !dbg !4126
  %call34 = call i64 @_bufferedwriter_raw_write(%struct.buffered* %40, i8* %add.ptr, i64 %sub33), !dbg !4127
  store i64 %call34, i64* %n, align 8, !dbg !4128, !tbaa !2140
  %49 = load i64, i64* %n, align 8, !dbg !4129, !tbaa !2140
  %cmp35 = icmp eq i64 %49, -1, !dbg !4131
  br i1 %cmp35, label %if.then.36, label %if.else, !dbg !4132

if.then.36:                                       ; preds = %while.body
  br label %error, !dbg !4133

if.else:                                          ; preds = %while.body
  %50 = load i64, i64* %n, align 8, !dbg !4135, !tbaa !2140
  %cmp37 = icmp eq i64 %50, -2, !dbg !4137
  br i1 %cmp37, label %if.then.38, label %if.end.39, !dbg !4138

if.then.38:                                       ; preds = %if.else
  call void @_set_BlockingIOError(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i32 0, i32 0), i64 0), !dbg !4139
  br label %error, !dbg !4141

if.end.39:                                        ; preds = %if.else
  br label %if.end.40

if.end.40:                                        ; preds = %if.end.39
  %51 = load i64, i64* %n, align 8, !dbg !4142, !tbaa !2140
  %52 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4143, !tbaa !1458
  %write_pos41 = getelementptr inbounds %struct.buffered, %struct.buffered* %52, i32 0, i32 13, !dbg !4144
  %53 = load i64, i64* %write_pos41, align 8, !dbg !4145, !tbaa !4037
  %add42 = add i64 %53, %51, !dbg !4145
  store i64 %add42, i64* %write_pos41, align 8, !dbg !4145, !tbaa !4037
  %54 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4146, !tbaa !1458
  %write_pos43 = getelementptr inbounds %struct.buffered, %struct.buffered* %54, i32 0, i32 13, !dbg !4147
  %55 = load i64, i64* %write_pos43, align 8, !dbg !4147, !tbaa !4037
  %56 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4148, !tbaa !1458
  %raw_pos44 = getelementptr inbounds %struct.buffered, %struct.buffered* %56, i32 0, i32 11, !dbg !4149
  store i64 %55, i64* %raw_pos44, align 8, !dbg !4150, !tbaa !3929
  %57 = load i64, i64* %n, align 8, !dbg !4151, !tbaa !2140
  %58 = load i64, i64* %written, align 8, !dbg !4152, !tbaa !2140
  %add45 = add i64 %58, %57, !dbg !4152
  store i64 %add45, i64* %written, align 8, !dbg !4152, !tbaa !2140
  %call46 = call i32 @PyErr_CheckSignals(), !dbg !4153
  %cmp47 = icmp slt i32 %call46, 0, !dbg !4155
  br i1 %cmp47, label %if.then.48, label %if.end.49, !dbg !4156

if.then.48:                                       ; preds = %if.end.40
  br label %error, !dbg !4157

if.end.49:                                        ; preds = %if.end.40
  br label %while.cond, !dbg !4108

while.end:                                        ; preds = %while.cond
  %59 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4158, !tbaa !1458
  call void @_bufferedwriter_reset_buf(%struct.buffered* %59), !dbg !4159
  br label %end, !dbg !4159

end:                                              ; preds = %while.end, %if.then
  %60 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4160, !tbaa !1501
  %inc = add i64 %60, 1, !dbg !4160
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4160, !tbaa !1501
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !4161
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4161

error:                                            ; preds = %if.then.48, %if.then.38, %if.then.36, %if.then.22
  store %struct._object* null, %struct._object** %retval, !dbg !4162
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4162

cleanup:                                          ; preds = %error, %end
  %61 = bitcast i64* %rewind to i8*, !dbg !4163
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !4163
  %62 = bitcast i64* %n to i8*, !dbg !4163
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !4163
  %63 = bitcast i64* %written to i8*, !dbg !4163
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !4163
  %64 = load %struct._object*, %struct._object** %retval, !dbg !4163
  ret %struct._object* %64, !dbg !4163
}

; Function Attrs: nounwind uwtable
define internal i64 @_buffered_raw_seek(%struct.buffered* %self, i64 %target, i32 %whence) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %target.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %res = alloca %struct._object*, align 8
  %posobj = alloca %struct._object*, align 8
  %whenceobj = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  %_py_decref_tmp25 = alloca %struct._object*, align 8
  %_py_decref_tmp43 = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !762, metadata !1450), !dbg !4164
  store i64 %target, i64* %target.addr, align 8, !tbaa !2140
  call void @llvm.dbg.declare(metadata i64* %target.addr, metadata !763, metadata !1450), !dbg !4165
  store i32 %whence, i32* %whence.addr, align 4, !tbaa !1869
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !764, metadata !1450), !dbg !4166
  %0 = bitcast %struct._object** %res to i8*, !dbg !4167
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4167
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !765, metadata !1450), !dbg !4168
  %1 = bitcast %struct._object** %posobj to i8*, !dbg !4167
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4167
  call void @llvm.dbg.declare(metadata %struct._object** %posobj, metadata !766, metadata !1450), !dbg !4169
  %2 = bitcast %struct._object** %whenceobj to i8*, !dbg !4167
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4167
  call void @llvm.dbg.declare(metadata %struct._object** %whenceobj, metadata !767, metadata !1450), !dbg !4170
  %3 = bitcast i64* %n to i8*, !dbg !4171
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !4171
  call void @llvm.dbg.declare(metadata i64* %n, metadata !768, metadata !1450), !dbg !4172
  %4 = load i64, i64* %target.addr, align 8, !dbg !4173, !tbaa !2140
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %4), !dbg !4174
  store %struct._object* %call, %struct._object** %posobj, align 8, !dbg !4175, !tbaa !1458
  %5 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !4176, !tbaa !1458
  %cmp = icmp eq %struct._object* %5, null, !dbg !4178
  br i1 %cmp, label %if.then, label %if.end, !dbg !4179

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, !dbg !4180
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4180

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %whence.addr, align 4, !dbg !4181, !tbaa !1869
  %conv = sext i32 %6 to i64, !dbg !4181
  %call1 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !4182
  store %struct._object* %call1, %struct._object** %whenceobj, align 8, !dbg !4183, !tbaa !1458
  %7 = load %struct._object*, %struct._object** %whenceobj, align 8, !dbg !4184, !tbaa !1458
  %cmp2 = icmp eq %struct._object* %7, null, !dbg !4185
  br i1 %cmp2, label %if.then.4, label %if.end.9, !dbg !4186

if.then.4:                                        ; preds = %if.end
  br label %do.body, !dbg !4187

do.body:                                          ; preds = %if.then.4
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4188
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !4188
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !769, metadata !1450), !dbg !4190
  %9 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !4191, !tbaa !1458
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !4190, !tbaa !1458
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4192, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !4194
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !4195, !tbaa !1501
  %dec = add i64 %11, -1, !dbg !4195
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4195, !tbaa !1501
  %cmp5 = icmp ne i64 %dec, 0, !dbg !4196
  br i1 %cmp5, label %if.then.7, label %if.else, !dbg !4197

if.then.7:                                        ; preds = %do.body
  br label %if.end.8, !dbg !4198

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4200, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !4202
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4202, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !4203
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4203, !tbaa !1511
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4204, !tbaa !1458
  call void %14(%struct._object* %15), !dbg !4205
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !4206
  br label %do.cond, !dbg !4208

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !4209

do.end:                                           ; preds = %do.cond
  store i64 -1, i64* %retval, !dbg !4211
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4211

if.end.9:                                         ; preds = %if.end
  %17 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4212, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %17, i32 0, i32 1, !dbg !4213
  %18 = load %struct._object*, %struct._object** %raw, align 8, !dbg !4213, !tbaa !1676
  %19 = load %struct._object*, %struct._object** @_PyIO_str_seek, align 8, !dbg !4214, !tbaa !1458
  %20 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !4215, !tbaa !1458
  %21 = load %struct._object*, %struct._object** %whenceobj, align 8, !dbg !4216, !tbaa !1458
  %call10 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %18, %struct._object* %19, %struct._object* %20, %struct._object* %21, i8* null), !dbg !4217
  store %struct._object* %call10, %struct._object** %res, align 8, !dbg !4218, !tbaa !1458
  br label %do.body.11, !dbg !4219

do.body.11:                                       ; preds = %if.end.9
  %22 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !4220
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !4220
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !773, metadata !1450), !dbg !4222
  %23 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !4223, !tbaa !1458
  store %struct._object* %23, %struct._object** %_py_decref_tmp12, align 8, !dbg !4222, !tbaa !1458
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !4224, !tbaa !1458
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !4226
  %25 = load i64, i64* %ob_refcnt13, align 8, !dbg !4227, !tbaa !1501
  %dec14 = add i64 %25, -1, !dbg !4227
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !4227, !tbaa !1501
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !4228
  br i1 %cmp15, label %if.then.17, label %if.else.18, !dbg !4229

if.then.17:                                       ; preds = %do.body.11
  br label %if.end.21, !dbg !4230

if.else.18:                                       ; preds = %do.body.11
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !4232, !tbaa !1458
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !4234
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !4234, !tbaa !1509
  %tp_dealloc20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !4235
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc20, align 8, !dbg !4235, !tbaa !1511
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !4236, !tbaa !1458
  call void %28(%struct._object* %29), !dbg !4237
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.18, %if.then.17
  %30 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !4238
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !4238
  br label %do.cond.22, !dbg !4240

do.cond.22:                                       ; preds = %if.end.21
  br label %do.end.23, !dbg !4241

do.end.23:                                        ; preds = %do.cond.22
  br label %do.body.24, !dbg !4243

do.body.24:                                       ; preds = %do.end.23
  %31 = bitcast %struct._object** %_py_decref_tmp25 to i8*, !dbg !4244
  call void @llvm.lifetime.start(i64 8, i8* %31) #1, !dbg !4244
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp25, metadata !775, metadata !1450), !dbg !4246
  %32 = load %struct._object*, %struct._object** %whenceobj, align 8, !dbg !4247, !tbaa !1458
  store %struct._object* %32, %struct._object** %_py_decref_tmp25, align 8, !dbg !4246, !tbaa !1458
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !4248, !tbaa !1458
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0, !dbg !4250
  %34 = load i64, i64* %ob_refcnt26, align 8, !dbg !4251, !tbaa !1501
  %dec27 = add i64 %34, -1, !dbg !4251
  store i64 %dec27, i64* %ob_refcnt26, align 8, !dbg !4251, !tbaa !1501
  %cmp28 = icmp ne i64 %dec27, 0, !dbg !4252
  br i1 %cmp28, label %if.then.30, label %if.else.31, !dbg !4253

if.then.30:                                       ; preds = %do.body.24
  br label %if.end.34, !dbg !4254

if.else.31:                                       ; preds = %do.body.24
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !4256, !tbaa !1458
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1, !dbg !4258
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8, !dbg !4258, !tbaa !1509
  %tp_dealloc33 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 4, !dbg !4259
  %37 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc33, align 8, !dbg !4259, !tbaa !1511
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !4260, !tbaa !1458
  call void %37(%struct._object* %38), !dbg !4261
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.31, %if.then.30
  %39 = bitcast %struct._object** %_py_decref_tmp25 to i8*, !dbg !4262
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !4262
  br label %do.cond.35, !dbg !4263

do.cond.35:                                       ; preds = %if.end.34
  br label %do.end.36, !dbg !4264

do.end.36:                                        ; preds = %do.cond.35
  %40 = load %struct._object*, %struct._object** %res, align 8, !dbg !4266, !tbaa !1458
  %cmp37 = icmp eq %struct._object* %40, null, !dbg !4268
  br i1 %cmp37, label %if.then.39, label %if.end.40, !dbg !4269

if.then.39:                                       ; preds = %do.end.36
  store i64 -1, i64* %retval, !dbg !4270
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4270

if.end.40:                                        ; preds = %do.end.36
  %41 = load %struct._object*, %struct._object** %res, align 8, !dbg !4271, !tbaa !1458
  %42 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4272, !tbaa !1458
  %call41 = call i64 @PyNumber_AsOff_t(%struct._object* %41, %struct._object* %42), !dbg !4273
  store i64 %call41, i64* %n, align 8, !dbg !4274, !tbaa !2140
  br label %do.body.42, !dbg !4275

do.body.42:                                       ; preds = %if.end.40
  %43 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !4276
  call void @llvm.lifetime.start(i64 8, i8* %43) #1, !dbg !4276
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp43, metadata !777, metadata !1450), !dbg !4278
  %44 = load %struct._object*, %struct._object** %res, align 8, !dbg !4279, !tbaa !1458
  store %struct._object* %44, %struct._object** %_py_decref_tmp43, align 8, !dbg !4278, !tbaa !1458
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !4280, !tbaa !1458
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0, !dbg !4282
  %46 = load i64, i64* %ob_refcnt44, align 8, !dbg !4283, !tbaa !1501
  %dec45 = add i64 %46, -1, !dbg !4283
  store i64 %dec45, i64* %ob_refcnt44, align 8, !dbg !4283, !tbaa !1501
  %cmp46 = icmp ne i64 %dec45, 0, !dbg !4284
  br i1 %cmp46, label %if.then.48, label %if.else.49, !dbg !4285

if.then.48:                                       ; preds = %do.body.42
  br label %if.end.52, !dbg !4286

if.else.49:                                       ; preds = %do.body.42
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !4288, !tbaa !1458
  %ob_type50 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1, !dbg !4290
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type50, align 8, !dbg !4290, !tbaa !1509
  %tp_dealloc51 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4, !dbg !4291
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc51, align 8, !dbg !4291, !tbaa !1511
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !4292, !tbaa !1458
  call void %49(%struct._object* %50), !dbg !4293
  br label %if.end.52

if.end.52:                                        ; preds = %if.else.49, %if.then.48
  %51 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !4294
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !4294
  br label %do.cond.53, !dbg !4295

do.cond.53:                                       ; preds = %if.end.52
  br label %do.end.54, !dbg !4296

do.end.54:                                        ; preds = %do.cond.53
  %52 = load i64, i64* %n, align 8, !dbg !4298, !tbaa !2140
  %cmp55 = icmp slt i64 %52, 0, !dbg !4300
  br i1 %cmp55, label %if.then.57, label %if.end.62, !dbg !4301

if.then.57:                                       ; preds = %do.end.54
  %call58 = call %struct._object* @PyErr_Occurred(), !dbg !4302
  %tobool = icmp ne %struct._object* %call58, null, !dbg !4302
  br i1 %tobool, label %if.end.61, label %if.then.59, !dbg !4305

if.then.59:                                       ; preds = %if.then.57
  %53 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !4306, !tbaa !1458
  %54 = load i64, i64* %n, align 8, !dbg !4307, !tbaa !2140
  %call60 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %53, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i32 0, i32 0), i64 %54), !dbg !4308
  br label %if.end.61, !dbg !4308

if.end.61:                                        ; preds = %if.then.59, %if.then.57
  store i64 -1, i64* %retval, !dbg !4309
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4309

if.end.62:                                        ; preds = %do.end.54
  %55 = load i64, i64* %n, align 8, !dbg !4310, !tbaa !2140
  %56 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4311, !tbaa !1458
  %abs_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %56, i32 0, i32 8, !dbg !4312
  store i64 %55, i64* %abs_pos, align 8, !dbg !4313, !tbaa !4314
  %57 = load i64, i64* %n, align 8, !dbg !4315, !tbaa !2140
  store i64 %57, i64* %retval, !dbg !4316
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4316

cleanup:                                          ; preds = %if.end.62, %if.end.61, %if.then.39, %do.end, %if.then
  %58 = bitcast i64* %n to i8*, !dbg !4317
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !4317
  %59 = bitcast %struct._object** %whenceobj to i8*, !dbg !4317
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !4317
  %60 = bitcast %struct._object** %posobj to i8*, !dbg !4317
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !4317
  %61 = bitcast %struct._object** %res to i8*, !dbg !4317
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !4317
  %62 = load i64, i64* %retval, !dbg !4317
  ret i64 %62, !dbg !4317
}

; Function Attrs: nounwind uwtable
define internal i64 @_bufferedwriter_raw_write(%struct.buffered* %self, i8* %start, i64 %len) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %start.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %buf = alloca %struct.bufferinfo, align 8
  %memobj = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %errnum = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp22 = alloca %struct._object*, align 8
  %_py_decref_tmp37 = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !727, metadata !1450), !dbg !4318
  store i8* %start, i8** %start.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !728, metadata !1450), !dbg !4319
  store i64 %len, i64* %len.addr, align 8, !tbaa !2140
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !729, metadata !1450), !dbg !4320
  %0 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !4321
  call void @llvm.lifetime.start(i64 80, i8* %0) #1, !dbg !4321
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %buf, metadata !730, metadata !1450), !dbg !4322
  %1 = bitcast %struct._object** %memobj to i8*, !dbg !4323
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4323
  call void @llvm.dbg.declare(metadata %struct._object** %memobj, metadata !731, metadata !1450), !dbg !4324
  %2 = bitcast %struct._object** %res to i8*, !dbg !4323
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4323
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !732, metadata !1450), !dbg !4325
  %3 = bitcast i64* %n to i8*, !dbg !4326
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !4326
  call void @llvm.dbg.declare(metadata i64* %n, metadata !733, metadata !1450), !dbg !4327
  %4 = bitcast i32* %errnum to i8*, !dbg !4328
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !4328
  call void @llvm.dbg.declare(metadata i32* %errnum, metadata !734, metadata !1450), !dbg !4329
  %5 = load i8*, i8** %start.addr, align 8, !dbg !4330, !tbaa !1458
  %6 = load i64, i64* %len.addr, align 8, !dbg !4332, !tbaa !2140
  %call = call i32 @PyBuffer_FillInfo(%struct.bufferinfo* %buf, %struct._object* null, i8* %5, i64 %6, i32 1, i32 8), !dbg !4333
  %cmp = icmp eq i32 %call, -1, !dbg !4334
  br i1 %cmp, label %if.then, label %if.end, !dbg !4335

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, !dbg !4336
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4336

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyMemoryView_FromBuffer(%struct.bufferinfo* %buf), !dbg !4337
  store %struct._object* %call1, %struct._object** %memobj, align 8, !dbg !4338, !tbaa !1458
  %7 = load %struct._object*, %struct._object** %memobj, align 8, !dbg !4339, !tbaa !1458
  %cmp2 = icmp eq %struct._object* %7, null, !dbg !4341
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !4342

if.then.3:                                        ; preds = %if.end
  store i64 -1, i64* %retval, !dbg !4343
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4343

if.end.4:                                         ; preds = %if.end
  br label %do.body, !dbg !4344

do.body:                                          ; preds = %land.end, %if.end.4
  %call5 = call i32* @__errno_location() #2, !dbg !4345
  store i32 0, i32* %call5, align 4, !dbg !4347, !tbaa !1869
  %8 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4348, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %8, i32 0, i32 1, !dbg !4349
  %9 = load %struct._object*, %struct._object** %raw, align 8, !dbg !4349, !tbaa !1676
  %10 = load %struct._object*, %struct._object** @_PyIO_str_write, align 8, !dbg !4350, !tbaa !1458
  %11 = load %struct._object*, %struct._object** %memobj, align 8, !dbg !4351, !tbaa !1458
  %call6 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %9, %struct._object* %10, %struct._object* %11, i8* null), !dbg !4352
  store %struct._object* %call6, %struct._object** %res, align 8, !dbg !4353, !tbaa !1458
  %call7 = call i32* @__errno_location() #2, !dbg !4354
  %12 = load i32, i32* %call7, align 4, !dbg !4355, !tbaa !1869
  store i32 %12, i32* %errnum, align 4, !dbg !4356, !tbaa !1869
  br label %do.cond, !dbg !4357

do.cond:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %res, align 8, !dbg !4358, !tbaa !1458
  %cmp8 = icmp eq %struct._object* %13, null, !dbg !4360
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !4361

land.rhs:                                         ; preds = %do.cond
  %call9 = call i32 @_PyIO_trap_eintr(), !dbg !4362
  %tobool = icmp ne i32 %call9, 0, !dbg !4361
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %14 = phi i1 [ false, %do.cond ], [ %tobool, %land.rhs ]
  br i1 %14, label %do.body, label %do.end, !dbg !4364

do.end:                                           ; preds = %land.end
  br label %do.body.10, !dbg !4366

do.body.10:                                       ; preds = %do.end
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4367
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !4367
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !735, metadata !1450), !dbg !4369
  %16 = load %struct._object*, %struct._object** %memobj, align 8, !dbg !4370, !tbaa !1458
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !4369, !tbaa !1458
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4371, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !4373
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !4374, !tbaa !1501
  %dec = add i64 %18, -1, !dbg !4374
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4374, !tbaa !1501
  %cmp11 = icmp ne i64 %dec, 0, !dbg !4375
  br i1 %cmp11, label %if.then.12, label %if.else, !dbg !4376

if.then.12:                                       ; preds = %do.body.10
  br label %if.end.13, !dbg !4377

if.else:                                          ; preds = %do.body.10
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4379, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !4381
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4381, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !4382
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4382, !tbaa !1511
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4383, !tbaa !1458
  call void %21(%struct._object* %22), !dbg !4384
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4385
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !4385
  br label %do.cond.14, !dbg !4387

do.cond.14:                                       ; preds = %if.end.13
  br label %do.end.15, !dbg !4388

do.end.15:                                        ; preds = %do.cond.14
  %24 = load %struct._object*, %struct._object** %res, align 8, !dbg !4390, !tbaa !1458
  %cmp16 = icmp eq %struct._object* %24, null, !dbg !4392
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !4393

if.then.17:                                       ; preds = %do.end.15
  store i64 -1, i64* %retval, !dbg !4394
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4394

if.end.18:                                        ; preds = %do.end.15
  %25 = load %struct._object*, %struct._object** %res, align 8, !dbg !4395, !tbaa !1458
  %cmp19 = icmp eq %struct._object* %25, @_Py_NoneStruct, !dbg !4396
  br i1 %cmp19, label %if.then.20, label %if.end.34, !dbg !4397

if.then.20:                                       ; preds = %if.end.18
  br label %do.body.21, !dbg !4398

do.body.21:                                       ; preds = %if.then.20
  %26 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !4399
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !4399
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp22, metadata !737, metadata !1450), !dbg !4401
  %27 = load %struct._object*, %struct._object** %res, align 8, !dbg !4402, !tbaa !1458
  store %struct._object* %27, %struct._object** %_py_decref_tmp22, align 8, !dbg !4401, !tbaa !1458
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !4403, !tbaa !1458
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !4405
  %29 = load i64, i64* %ob_refcnt23, align 8, !dbg !4406, !tbaa !1501
  %dec24 = add i64 %29, -1, !dbg !4406
  store i64 %dec24, i64* %ob_refcnt23, align 8, !dbg !4406, !tbaa !1501
  %cmp25 = icmp ne i64 %dec24, 0, !dbg !4407
  br i1 %cmp25, label %if.then.26, label %if.else.27, !dbg !4408

if.then.26:                                       ; preds = %do.body.21
  br label %if.end.30, !dbg !4409

if.else.27:                                       ; preds = %do.body.21
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !4411, !tbaa !1458
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !4413
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !4413, !tbaa !1509
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4, !dbg !4414
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8, !dbg !4414, !tbaa !1511
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !4415, !tbaa !1458
  call void %32(%struct._object* %33), !dbg !4416
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.27, %if.then.26
  %34 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !4417
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !4417
  br label %do.cond.31, !dbg !4419

do.cond.31:                                       ; preds = %if.end.30
  br label %do.end.32, !dbg !4420

do.end.32:                                        ; preds = %do.cond.31
  %35 = load i32, i32* %errnum, align 4, !dbg !4422, !tbaa !1869
  %call33 = call i32* @__errno_location() #2, !dbg !4423
  store i32 %35, i32* %call33, align 4, !dbg !4424, !tbaa !1869
  store i64 -2, i64* %retval, !dbg !4425
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4425

if.end.34:                                        ; preds = %if.end.18
  %36 = load %struct._object*, %struct._object** %res, align 8, !dbg !4426, !tbaa !1458
  %37 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4427, !tbaa !1458
  %call35 = call i64 @PyNumber_AsSsize_t(%struct._object* %36, %struct._object* %37), !dbg !4428
  store i64 %call35, i64* %n, align 8, !dbg !4429, !tbaa !2140
  br label %do.body.36, !dbg !4430

do.body.36:                                       ; preds = %if.end.34
  %38 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !4431
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !4431
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp37, metadata !741, metadata !1450), !dbg !4433
  %39 = load %struct._object*, %struct._object** %res, align 8, !dbg !4434, !tbaa !1458
  store %struct._object* %39, %struct._object** %_py_decref_tmp37, align 8, !dbg !4433, !tbaa !1458
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !4435, !tbaa !1458
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !4437
  %41 = load i64, i64* %ob_refcnt38, align 8, !dbg !4438, !tbaa !1501
  %dec39 = add i64 %41, -1, !dbg !4438
  store i64 %dec39, i64* %ob_refcnt38, align 8, !dbg !4438, !tbaa !1501
  %cmp40 = icmp ne i64 %dec39, 0, !dbg !4439
  br i1 %cmp40, label %if.then.41, label %if.else.42, !dbg !4440

if.then.41:                                       ; preds = %do.body.36
  br label %if.end.45, !dbg !4441

if.else.42:                                       ; preds = %do.body.36
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !4443, !tbaa !1458
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !4445
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !4445, !tbaa !1509
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !4446
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !4446, !tbaa !1511
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !4447, !tbaa !1458
  call void %44(%struct._object* %45), !dbg !4448
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  %46 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !4449
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !4449
  br label %do.cond.46, !dbg !4450

do.cond.46:                                       ; preds = %if.end.45
  br label %do.end.47, !dbg !4451

do.end.47:                                        ; preds = %do.cond.46
  %47 = load i64, i64* %n, align 8, !dbg !4453, !tbaa !2140
  %cmp48 = icmp slt i64 %47, 0, !dbg !4455
  br i1 %cmp48, label %if.then.50, label %lor.lhs.false, !dbg !4456

lor.lhs.false:                                    ; preds = %do.end.47
  %48 = load i64, i64* %n, align 8, !dbg !4457, !tbaa !2140
  %49 = load i64, i64* %len.addr, align 8, !dbg !4459, !tbaa !2140
  %cmp49 = icmp sgt i64 %48, %49, !dbg !4460
  br i1 %cmp49, label %if.then.50, label %if.end.52, !dbg !4461

if.then.50:                                       ; preds = %lor.lhs.false, %do.end.47
  %50 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !4462, !tbaa !1458
  %51 = load i64, i64* %n, align 8, !dbg !4464, !tbaa !2140
  %52 = load i64, i64* %len.addr, align 8, !dbg !4465, !tbaa !2140
  %call51 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %50, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.23, i32 0, i32 0), i64 %51, i64 %52), !dbg !4466
  store i64 -1, i64* %retval, !dbg !4467
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4467

if.end.52:                                        ; preds = %lor.lhs.false
  %53 = load i64, i64* %n, align 8, !dbg !4468, !tbaa !2140
  %cmp53 = icmp sgt i64 %53, 0, !dbg !4470
  br i1 %cmp53, label %land.lhs.true, label %if.end.57, !dbg !4471

land.lhs.true:                                    ; preds = %if.end.52
  %54 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4472, !tbaa !1458
  %abs_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %54, i32 0, i32 8, !dbg !4474
  %55 = load i64, i64* %abs_pos, align 8, !dbg !4474, !tbaa !4314
  %cmp54 = icmp ne i64 %55, -1, !dbg !4475
  br i1 %cmp54, label %if.then.55, label %if.end.57, !dbg !4476

if.then.55:                                       ; preds = %land.lhs.true
  %56 = load i64, i64* %n, align 8, !dbg !4477, !tbaa !2140
  %57 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4478, !tbaa !1458
  %abs_pos56 = getelementptr inbounds %struct.buffered, %struct.buffered* %57, i32 0, i32 8, !dbg !4479
  %58 = load i64, i64* %abs_pos56, align 8, !dbg !4480, !tbaa !4314
  %add = add i64 %58, %56, !dbg !4480
  store i64 %add, i64* %abs_pos56, align 8, !dbg !4480, !tbaa !4314
  br label %if.end.57, !dbg !4478

if.end.57:                                        ; preds = %if.then.55, %land.lhs.true, %if.end.52
  %59 = load i64, i64* %n, align 8, !dbg !4481, !tbaa !2140
  store i64 %59, i64* %retval, !dbg !4482
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4482

cleanup:                                          ; preds = %if.end.57, %if.then.50, %do.end.32, %if.then.17, %if.then.3, %if.then
  %60 = bitcast i32* %errnum to i8*, !dbg !4483
  call void @llvm.lifetime.end(i64 4, i8* %60) #1, !dbg !4483
  %61 = bitcast i64* %n to i8*, !dbg !4483
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !4483
  %62 = bitcast %struct._object** %res to i8*, !dbg !4483
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !4483
  %63 = bitcast %struct._object** %memobj to i8*, !dbg !4483
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !4483
  %64 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !4483
  call void @llvm.lifetime.end(i64 80, i8* %64) #1, !dbg !4483
  %65 = load i64, i64* %retval, !dbg !4483
  ret i64 %65, !dbg !4483
}

; Function Attrs: nounwind uwtable
define internal void @_set_BlockingIOError(i8* %msg, i64 %written) #0 {
entry:
  %msg.addr = alloca i8*, align 8
  %written.addr = alloca i64, align 8
  %err = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store i8* %msg, i8** %msg.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !747, metadata !1450), !dbg !4484
  store i64 %written, i64* %written.addr, align 8, !tbaa !2140
  call void @llvm.dbg.declare(metadata i64* %written.addr, metadata !748, metadata !1450), !dbg !4485
  %0 = bitcast %struct._object** %err to i8*, !dbg !4486
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4486
  call void @llvm.dbg.declare(metadata %struct._object** %err, metadata !749, metadata !1450), !dbg !4487
  %1 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !4488, !tbaa !1458
  %call = call i32* @__errno_location() #2, !dbg !4489
  %2 = load i32, i32* %call, align 4, !dbg !4490, !tbaa !1869
  %3 = load i8*, i8** %msg.addr, align 8, !dbg !4491, !tbaa !1458
  %4 = load i64, i64* %written.addr, align 8, !dbg !4492, !tbaa !2140
  %call1 = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i32 %2, i8* %3, i64 %4), !dbg !4493
  store %struct._object* %call1, %struct._object** %err, align 8, !dbg !4494, !tbaa !1458
  %5 = load %struct._object*, %struct._object** %err, align 8, !dbg !4495, !tbaa !1458
  %tobool = icmp ne %struct._object* %5, null, !dbg !4495
  br i1 %tobool, label %if.then, label %if.end, !dbg !4497

if.then:                                          ; preds = %entry
  %6 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !4498, !tbaa !1458
  %7 = load %struct._object*, %struct._object** %err, align 8, !dbg !4499, !tbaa !1458
  call void @PyErr_SetObject(%struct._object* %6, %struct._object* %7), !dbg !4500
  br label %if.end, !dbg !4500

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !4501

do.body:                                          ; preds = %if.end
  %8 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4502
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !4502
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !750, metadata !1450), !dbg !4504
  %9 = load %struct._object*, %struct._object** %err, align 8, !dbg !4505, !tbaa !1458
  store %struct._object* %9, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4504, !tbaa !1458
  %10 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4506, !tbaa !1458
  %cmp = icmp ne %struct._object* %10, null, !dbg !4507
  br i1 %cmp, label %if.then.2, label %if.end.7, !dbg !4508

if.then.2:                                        ; preds = %do.body
  br label %do.body.3, !dbg !4509

do.body.3:                                        ; preds = %if.then.2
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4511
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !4511
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !752, metadata !1450), !dbg !4513
  %12 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4514, !tbaa !1458
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8, !dbg !4513, !tbaa !1458
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4515, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !4517
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !4518, !tbaa !1501
  %dec = add i64 %14, -1, !dbg !4518
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4518, !tbaa !1501
  %cmp4 = icmp ne i64 %dec, 0, !dbg !4519
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !4520

if.then.5:                                        ; preds = %do.body.3
  br label %if.end.6, !dbg !4521

if.else:                                          ; preds = %do.body.3
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4523, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !4525
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4525, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4, !dbg !4526
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4526, !tbaa !1511
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4527, !tbaa !1458
  call void %17(%struct._object* %18), !dbg !4528
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4529
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !4529
  br label %do.cond, !dbg !4531

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !4532

do.end:                                           ; preds = %do.cond
  br label %if.end.7, !dbg !4534

if.end.7:                                         ; preds = %do.end, %do.body
  %20 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4536
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !4536
  br label %do.cond.8, !dbg !4539

do.cond.8:                                        ; preds = %if.end.7
  br label %do.end.9, !dbg !4540

do.end.9:                                         ; preds = %do.cond.8
  %21 = bitcast %struct._object** %err to i8*, !dbg !4542
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !4542
  ret void, !dbg !4542
}

declare i32 @PyErr_CheckSignals() #3

; Function Attrs: nounwind uwtable
define internal void @_bufferedwriter_reset_buf(%struct.buffered* %self) #0 {
entry:
  %self.addr = alloca %struct.buffered*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !757, metadata !1450), !dbg !4543
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4544, !tbaa !1458
  %write_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 13, !dbg !4545
  store i64 0, i64* %write_pos, align 8, !dbg !4546, !tbaa !4037
  %1 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4547, !tbaa !1458
  %write_end = getelementptr inbounds %struct.buffered, %struct.buffered* %1, i32 0, i32 14, !dbg !4548
  store i64 -1, i64* %write_end, align 8, !dbg !4549, !tbaa !3922
  ret void, !dbg !4550
}

declare i32 @PyBuffer_FillInfo(%struct.bufferinfo*, %struct._object*, i8*, i64, i32, i32) #3

declare %struct._object* @PyMemoryView_FromBuffer(%struct.bufferinfo*) #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

declare i64 @PyNumber_AsSsize_t(%struct._object*, %struct._object*) #3

declare %struct._object* @_PyObject_CallFunction_SizeT(%struct._object*, i8*, ...) #3

declare void @PyErr_SetObject(%struct._object*, %struct._object*) #3

declare i64 @PyNumber_AsOff_t(%struct._object*, %struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

; Function Attrs: nounwind uwtable
define internal i64 @_bufferedreader_raw_read(%struct.buffered* %self, i8* %start, i64 %len) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %start.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %buf = alloca %struct.bufferinfo, align 8
  %memobj = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp20 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !792, metadata !1450), !dbg !4551
  store i8* %start, i8** %start.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !793, metadata !1450), !dbg !4552
  store i64 %len, i64* %len.addr, align 8, !tbaa !2140
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !794, metadata !1450), !dbg !4553
  %0 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !4554
  call void @llvm.lifetime.start(i64 80, i8* %0) #1, !dbg !4554
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %buf, metadata !795, metadata !1450), !dbg !4555
  %1 = bitcast %struct._object** %memobj to i8*, !dbg !4556
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4556
  call void @llvm.dbg.declare(metadata %struct._object** %memobj, metadata !796, metadata !1450), !dbg !4557
  %2 = bitcast %struct._object** %res to i8*, !dbg !4556
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4556
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !797, metadata !1450), !dbg !4558
  %3 = bitcast i64* %n to i8*, !dbg !4559
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !4559
  call void @llvm.dbg.declare(metadata i64* %n, metadata !798, metadata !1450), !dbg !4560
  %4 = load i8*, i8** %start.addr, align 8, !dbg !4561, !tbaa !1458
  %5 = load i64, i64* %len.addr, align 8, !dbg !4563, !tbaa !2140
  %call = call i32 @PyBuffer_FillInfo(%struct.bufferinfo* %buf, %struct._object* null, i8* %4, i64 %5, i32 0, i32 9), !dbg !4564
  %cmp = icmp eq i32 %call, -1, !dbg !4565
  br i1 %cmp, label %if.then, label %if.end, !dbg !4566

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, !dbg !4567
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4567

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyMemoryView_FromBuffer(%struct.bufferinfo* %buf), !dbg !4568
  store %struct._object* %call1, %struct._object** %memobj, align 8, !dbg !4569, !tbaa !1458
  %6 = load %struct._object*, %struct._object** %memobj, align 8, !dbg !4570, !tbaa !1458
  %cmp2 = icmp eq %struct._object* %6, null, !dbg !4572
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !4573

if.then.3:                                        ; preds = %if.end
  store i64 -1, i64* %retval, !dbg !4574
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4574

if.end.4:                                         ; preds = %if.end
  br label %do.body, !dbg !4575

do.body:                                          ; preds = %land.end, %if.end.4
  %7 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4576, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %7, i32 0, i32 1, !dbg !4578
  %8 = load %struct._object*, %struct._object** %raw, align 8, !dbg !4578, !tbaa !1676
  %9 = load %struct._object*, %struct._object** @_PyIO_str_readinto, align 8, !dbg !4579, !tbaa !1458
  %10 = load %struct._object*, %struct._object** %memobj, align 8, !dbg !4580, !tbaa !1458
  %call5 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %8, %struct._object* %9, %struct._object* %10, i8* null), !dbg !4581
  store %struct._object* %call5, %struct._object** %res, align 8, !dbg !4582, !tbaa !1458
  br label %do.cond, !dbg !4583

do.cond:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %res, align 8, !dbg !4584, !tbaa !1458
  %cmp6 = icmp eq %struct._object* %11, null, !dbg !4586
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !4587

land.rhs:                                         ; preds = %do.cond
  %call7 = call i32 @_PyIO_trap_eintr(), !dbg !4588
  %tobool = icmp ne i32 %call7, 0, !dbg !4587
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %12 = phi i1 [ false, %do.cond ], [ %tobool, %land.rhs ]
  br i1 %12, label %do.body, label %do.end, !dbg !4590

do.end:                                           ; preds = %land.end
  br label %do.body.8, !dbg !4592

do.body.8:                                        ; preds = %do.end
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4593
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !4593
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !799, metadata !1450), !dbg !4595
  %14 = load %struct._object*, %struct._object** %memobj, align 8, !dbg !4596, !tbaa !1458
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !4595, !tbaa !1458
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4597, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !4599
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !4600, !tbaa !1501
  %dec = add i64 %16, -1, !dbg !4600
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4600, !tbaa !1501
  %cmp9 = icmp ne i64 %dec, 0, !dbg !4601
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !4602

if.then.10:                                       ; preds = %do.body.8
  br label %if.end.11, !dbg !4603

if.else:                                          ; preds = %do.body.8
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4605, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !4607
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4607, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !4608
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4608, !tbaa !1511
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4609, !tbaa !1458
  call void %19(%struct._object* %20), !dbg !4610
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4611
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !4611
  br label %do.cond.12, !dbg !4613

do.cond.12:                                       ; preds = %if.end.11
  br label %do.end.13, !dbg !4614

do.end.13:                                        ; preds = %do.cond.12
  %22 = load %struct._object*, %struct._object** %res, align 8, !dbg !4616, !tbaa !1458
  %cmp14 = icmp eq %struct._object* %22, null, !dbg !4618
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !4619

if.then.15:                                       ; preds = %do.end.13
  store i64 -1, i64* %retval, !dbg !4620
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4620

if.end.16:                                        ; preds = %do.end.13
  %23 = load %struct._object*, %struct._object** %res, align 8, !dbg !4621, !tbaa !1458
  %cmp17 = icmp eq %struct._object* %23, @_Py_NoneStruct, !dbg !4622
  br i1 %cmp17, label %if.then.18, label %if.end.31, !dbg !4623

if.then.18:                                       ; preds = %if.end.16
  br label %do.body.19, !dbg !4624

do.body.19:                                       ; preds = %if.then.18
  %24 = bitcast %struct._object** %_py_decref_tmp20 to i8*, !dbg !4625
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !4625
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp20, metadata !801, metadata !1450), !dbg !4627
  %25 = load %struct._object*, %struct._object** %res, align 8, !dbg !4628, !tbaa !1458
  store %struct._object* %25, %struct._object** %_py_decref_tmp20, align 8, !dbg !4627, !tbaa !1458
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !4629, !tbaa !1458
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !4631
  %27 = load i64, i64* %ob_refcnt21, align 8, !dbg !4632, !tbaa !1501
  %dec22 = add i64 %27, -1, !dbg !4632
  store i64 %dec22, i64* %ob_refcnt21, align 8, !dbg !4632, !tbaa !1501
  %cmp23 = icmp ne i64 %dec22, 0, !dbg !4633
  br i1 %cmp23, label %if.then.24, label %if.else.25, !dbg !4634

if.then.24:                                       ; preds = %do.body.19
  br label %if.end.28, !dbg !4635

if.else.25:                                       ; preds = %do.body.19
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !4637, !tbaa !1458
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !4639
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !4639, !tbaa !1509
  %tp_dealloc27 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !4640
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc27, align 8, !dbg !4640, !tbaa !1511
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !4641, !tbaa !1458
  call void %30(%struct._object* %31), !dbg !4642
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.25, %if.then.24
  %32 = bitcast %struct._object** %_py_decref_tmp20 to i8*, !dbg !4643
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !4643
  br label %do.cond.29, !dbg !4645

do.cond.29:                                       ; preds = %if.end.28
  br label %do.end.30, !dbg !4646

do.end.30:                                        ; preds = %do.cond.29
  store i64 -2, i64* %retval, !dbg !4648
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4648

if.end.31:                                        ; preds = %if.end.16
  %33 = load %struct._object*, %struct._object** %res, align 8, !dbg !4649, !tbaa !1458
  %34 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4650, !tbaa !1458
  %call32 = call i64 @PyNumber_AsSsize_t(%struct._object* %33, %struct._object* %34), !dbg !4651
  store i64 %call32, i64* %n, align 8, !dbg !4652, !tbaa !2140
  br label %do.body.33, !dbg !4653

do.body.33:                                       ; preds = %if.end.31
  %35 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !4654
  call void @llvm.lifetime.start(i64 8, i8* %35) #1, !dbg !4654
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !805, metadata !1450), !dbg !4656
  %36 = load %struct._object*, %struct._object** %res, align 8, !dbg !4657, !tbaa !1458
  store %struct._object* %36, %struct._object** %_py_decref_tmp34, align 8, !dbg !4656, !tbaa !1458
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !4658, !tbaa !1458
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !4660
  %38 = load i64, i64* %ob_refcnt35, align 8, !dbg !4661, !tbaa !1501
  %dec36 = add i64 %38, -1, !dbg !4661
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !4661, !tbaa !1501
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !4662
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !4663

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !4664

if.else.39:                                       ; preds = %do.body.33
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !4666, !tbaa !1458
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !4668
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !4668, !tbaa !1509
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !4669
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !4669, !tbaa !1511
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !4670, !tbaa !1458
  call void %41(%struct._object* %42), !dbg !4671
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %43 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !4672
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !4672
  br label %do.cond.43, !dbg !4673

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !4674

do.end.44:                                        ; preds = %do.cond.43
  %44 = load i64, i64* %n, align 8, !dbg !4676, !tbaa !2140
  %cmp45 = icmp slt i64 %44, 0, !dbg !4678
  br i1 %cmp45, label %if.then.47, label %lor.lhs.false, !dbg !4679

lor.lhs.false:                                    ; preds = %do.end.44
  %45 = load i64, i64* %n, align 8, !dbg !4680, !tbaa !2140
  %46 = load i64, i64* %len.addr, align 8, !dbg !4682, !tbaa !2140
  %cmp46 = icmp sgt i64 %45, %46, !dbg !4683
  br i1 %cmp46, label %if.then.47, label %if.end.49, !dbg !4684

if.then.47:                                       ; preds = %lor.lhs.false, %do.end.44
  %47 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !4685, !tbaa !1458
  %48 = load i64, i64* %n, align 8, !dbg !4687, !tbaa !2140
  %49 = load i64, i64* %len.addr, align 8, !dbg !4688, !tbaa !2140
  %call48 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %47, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.26, i32 0, i32 0), i64 %48, i64 %49), !dbg !4689
  store i64 -1, i64* %retval, !dbg !4690
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4690

if.end.49:                                        ; preds = %lor.lhs.false
  %50 = load i64, i64* %n, align 8, !dbg !4691, !tbaa !2140
  %cmp50 = icmp sgt i64 %50, 0, !dbg !4693
  br i1 %cmp50, label %land.lhs.true, label %if.end.54, !dbg !4694

land.lhs.true:                                    ; preds = %if.end.49
  %51 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4695, !tbaa !1458
  %abs_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %51, i32 0, i32 8, !dbg !4697
  %52 = load i64, i64* %abs_pos, align 8, !dbg !4697, !tbaa !4314
  %cmp51 = icmp ne i64 %52, -1, !dbg !4698
  br i1 %cmp51, label %if.then.52, label %if.end.54, !dbg !4699

if.then.52:                                       ; preds = %land.lhs.true
  %53 = load i64, i64* %n, align 8, !dbg !4700, !tbaa !2140
  %54 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4701, !tbaa !1458
  %abs_pos53 = getelementptr inbounds %struct.buffered, %struct.buffered* %54, i32 0, i32 8, !dbg !4702
  %55 = load i64, i64* %abs_pos53, align 8, !dbg !4703, !tbaa !4314
  %add = add i64 %55, %53, !dbg !4703
  store i64 %add, i64* %abs_pos53, align 8, !dbg !4703, !tbaa !4314
  br label %if.end.54, !dbg !4701

if.end.54:                                        ; preds = %if.then.52, %land.lhs.true, %if.end.49
  %56 = load i64, i64* %n, align 8, !dbg !4704, !tbaa !2140
  store i64 %56, i64* %retval, !dbg !4705
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4705

cleanup:                                          ; preds = %if.end.54, %if.then.47, %do.end.30, %if.then.15, %if.then.3, %if.then
  %57 = bitcast i64* %n to i8*, !dbg !4706
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !4706
  %58 = bitcast %struct._object** %res to i8*, !dbg !4706
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !4706
  %59 = bitcast %struct._object** %memobj to i8*, !dbg !4706
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !4706
  %60 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !4706
  call void @llvm.lifetime.end(i64 80, i8* %60) #1, !dbg !4706
  %61 = load i64, i64* %retval, !dbg !4706
  ret i64 %61, !dbg !4706
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_detach(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %raw = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !811, metadata !1450), !dbg !4707
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !812, metadata !1450), !dbg !4708
  %0 = bitcast %struct._object** %raw to i8*, !dbg !4709
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4709
  call void @llvm.dbg.declare(metadata %struct._object** %raw, metadata !813, metadata !1450), !dbg !4710
  %1 = bitcast %struct._object** %res to i8*, !dbg !4709
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4709
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !814, metadata !1450), !dbg !4711
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4712, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 2, !dbg !4714
  %3 = load i32, i32* %ok, align 4, !dbg !4714, !tbaa !1660
  %cmp = icmp sle i32 %3, 0, !dbg !4715
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !4716

if.then:                                          ; preds = %entry
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4717, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 3, !dbg !4721
  %5 = load i32, i32* %detached, align 4, !dbg !4721, !tbaa !2019
  %tobool = icmp ne i32 %5, 0, !dbg !4722
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !4723

if.then.1:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4724, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !4727
  br label %if.end, !dbg !4728

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4729, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !4732
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !4733
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4735

if.end.2:                                         ; preds = %entry
  %8 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4736, !tbaa !1458
  %9 = bitcast %struct.buffered* %8 to %struct._object*, !dbg !4737
  %10 = load %struct._object*, %struct._object** @_PyIO_str_flush, align 8, !dbg !4738, !tbaa !1458
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %9, %struct._object* %10, i8* null), !dbg !4739
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !4740, !tbaa !1458
  %11 = load %struct._object*, %struct._object** %res, align 8, !dbg !4741, !tbaa !1458
  %cmp3 = icmp eq %struct._object* %11, null, !dbg !4743
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !4744

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !4745
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4745

if.end.5:                                         ; preds = %if.end.2
  br label %do.body, !dbg !4746

do.body:                                          ; preds = %if.end.5
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4747
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !4747
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !815, metadata !1450), !dbg !4749
  %13 = load %struct._object*, %struct._object** %res, align 8, !dbg !4750, !tbaa !1458
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !4749, !tbaa !1458
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4751, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !4753
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !4754, !tbaa !1501
  %dec = add i64 %15, -1, !dbg !4754
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4754, !tbaa !1501
  %cmp6 = icmp ne i64 %dec, 0, !dbg !4755
  br i1 %cmp6, label %if.then.7, label %if.else.8, !dbg !4756

if.then.7:                                        ; preds = %do.body
  br label %if.end.9, !dbg !4757

if.else.8:                                        ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4759, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !4761
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4761, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !4762
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4762, !tbaa !1511
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4763, !tbaa !1458
  call void %18(%struct._object* %19), !dbg !4764
  br label %if.end.9

if.end.9:                                         ; preds = %if.else.8, %if.then.7
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4765
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !4765
  br label %do.cond, !dbg !4767

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !4768

do.end:                                           ; preds = %do.cond
  %21 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4770, !tbaa !1458
  %raw10 = getelementptr inbounds %struct.buffered, %struct.buffered* %21, i32 0, i32 1, !dbg !4771
  %22 = load %struct._object*, %struct._object** %raw10, align 8, !dbg !4771, !tbaa !1676
  store %struct._object* %22, %struct._object** %raw, align 8, !dbg !4772, !tbaa !1458
  %23 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4773, !tbaa !1458
  %raw11 = getelementptr inbounds %struct.buffered, %struct.buffered* %23, i32 0, i32 1, !dbg !4774
  store %struct._object* null, %struct._object** %raw11, align 8, !dbg !4775, !tbaa !1676
  %24 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4776, !tbaa !1458
  %detached12 = getelementptr inbounds %struct.buffered, %struct.buffered* %24, i32 0, i32 3, !dbg !4777
  store i32 1, i32* %detached12, align 4, !dbg !4778, !tbaa !2019
  %25 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4779, !tbaa !1458
  %ok13 = getelementptr inbounds %struct.buffered, %struct.buffered* %25, i32 0, i32 2, !dbg !4780
  store i32 0, i32* %ok13, align 4, !dbg !4781, !tbaa !1660
  %26 = load %struct._object*, %struct._object** %raw, align 8, !dbg !4782, !tbaa !1458
  store %struct._object* %26, %struct._object** %retval, !dbg !4783
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4783

cleanup:                                          ; preds = %do.end, %if.then.4, %if.end
  %27 = bitcast %struct._object** %res to i8*, !dbg !4784
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !4784
  %28 = bitcast %struct._object** %raw to i8*, !dbg !4784
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !4784
  %29 = load %struct._object*, %struct._object** %retval, !dbg !4784
  ret %struct._object* %29, !dbg !4784
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_simple_flush(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !819, metadata !1450), !dbg !4785
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !820, metadata !1450), !dbg !4786
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4787, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 2, !dbg !4789
  %1 = load i32, i32* %ok, align 4, !dbg !4789, !tbaa !1660
  %cmp = icmp sle i32 %1, 0, !dbg !4790
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !4791

if.then:                                          ; preds = %entry
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4792, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 3, !dbg !4796
  %3 = load i32, i32* %detached, align 4, !dbg !4796, !tbaa !2019
  %tobool = icmp ne i32 %3, 0, !dbg !4797
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !4798

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4799, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !4802
  br label %if.end, !dbg !4803

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4804, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !4807
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !4808
  br label %return, !dbg !4808

if.end.2:                                         ; preds = %entry
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4810, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 1, !dbg !4811
  %7 = load %struct._object*, %struct._object** %raw, align 8, !dbg !4811, !tbaa !1676
  %8 = load %struct._object*, %struct._object** @_PyIO_str_flush, align 8, !dbg !4812, !tbaa !1458
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %7, %struct._object* %8, i8* null), !dbg !4813
  store %struct._object* %call, %struct._object** %retval, !dbg !4814
  br label %return, !dbg !4814

return:                                           ; preds = %if.end.2, %if.end
  %9 = load %struct._object*, %struct._object** %retval, !dbg !4815
  ret %struct._object* %9, !dbg !4815
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_close(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %exc = alloca %struct._object*, align 8
  %val = alloca %struct._object*, align 8
  %tb = alloca %struct._object*, align 8
  %r = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %r18 = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp52 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp78 = alloca %struct._object*, align 8
  %val2 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp109 = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !823, metadata !1450), !dbg !4816
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !824, metadata !1450), !dbg !4817
  %0 = bitcast %struct._object** %res to i8*, !dbg !4818
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4818
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !825, metadata !1450), !dbg !4819
  store %struct._object* null, %struct._object** %res, align 8, !dbg !4819, !tbaa !1458
  %1 = bitcast %struct._object** %exc to i8*, !dbg !4818
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4818
  call void @llvm.dbg.declare(metadata %struct._object** %exc, metadata !826, metadata !1450), !dbg !4820
  store %struct._object* null, %struct._object** %exc, align 8, !dbg !4820, !tbaa !1458
  %2 = bitcast %struct._object** %val to i8*, !dbg !4818
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4818
  call void @llvm.dbg.declare(metadata %struct._object** %val, metadata !827, metadata !1450), !dbg !4821
  %3 = bitcast %struct._object** %tb to i8*, !dbg !4818
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !4818
  call void @llvm.dbg.declare(metadata %struct._object** %tb, metadata !828, metadata !1450), !dbg !4822
  %4 = bitcast i32* %r to i8*, !dbg !4823
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !4823
  call void @llvm.dbg.declare(metadata i32* %r, metadata !829, metadata !1450), !dbg !4824
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4825, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 2, !dbg !4827
  %6 = load i32, i32* %ok, align 4, !dbg !4827, !tbaa !1660
  %cmp = icmp sle i32 %6, 0, !dbg !4828
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !4829

if.then:                                          ; preds = %entry
  %7 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4830, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %7, i32 0, i32 3, !dbg !4834
  %8 = load i32, i32* %detached, align 4, !dbg !4834, !tbaa !2019
  %tobool = icmp ne i32 %8, 0, !dbg !4835
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !4836

if.then.1:                                        ; preds = %if.then
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4837, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !4840
  br label %if.end, !dbg !4841

if.else:                                          ; preds = %if.then
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4842, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !4845
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !4846
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4848

if.end.2:                                         ; preds = %entry
  %11 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4849, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %11, i32 0, i32 15, !dbg !4851
  %12 = load i8*, i8** %lock, align 8, !dbg !4851, !tbaa !1730
  %call = call i32 @PyThread_acquire_lock(i8* %12, i32 0), !dbg !4852
  %tobool3 = icmp ne i32 %call, 0, !dbg !4852
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !4853

cond.true:                                        ; preds = %if.end.2
  br i1 true, label %land.lhs.true, label %if.then.7, !dbg !4854

cond.false:                                       ; preds = %if.end.2
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4856, !tbaa !1458
  %call4 = call i32 @_enter_buffered_busy(%struct.buffered* %13), !dbg !4858
  %tobool5 = icmp ne i32 %call4, 0, !dbg !4858
  br i1 %tobool5, label %land.lhs.true, label %if.then.7, !dbg !4853

land.lhs.true:                                    ; preds = %cond.false, %cond.true
  %call6 = call i64 @PyThread_get_thread_ident(), !dbg !4859
  %14 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4862, !tbaa !1458
  %owner = getelementptr inbounds %struct.buffered, %struct.buffered* %14, i32 0, i32 16, !dbg !4863
  store volatile i64 %call6, i64* %owner, align 8, !dbg !4864, !tbaa !3261
  br i1 true, label %if.end.8, label %if.then.7, !dbg !4865

if.then.7:                                        ; preds = %land.lhs.true, %cond.false, %cond.true
  store %struct._object* null, %struct._object** %retval, !dbg !4866
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4866

if.end.8:                                         ; preds = %land.lhs.true
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4867, !tbaa !1458
  %call9 = call i32 @buffered_closed(%struct.buffered* %15), !dbg !4868
  store i32 %call9, i32* %r, align 4, !dbg !4869, !tbaa !1869
  %16 = load i32, i32* %r, align 4, !dbg !4870, !tbaa !1869
  %cmp10 = icmp slt i32 %16, 0, !dbg !4872
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !4873

if.then.11:                                       ; preds = %if.end.8
  br label %end, !dbg !4874

if.end.12:                                        ; preds = %if.end.8
  %17 = load i32, i32* %r, align 4, !dbg !4875, !tbaa !1869
  %cmp13 = icmp sgt i32 %17, 0, !dbg !4877
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !4878

if.then.14:                                       ; preds = %if.end.12
  store %struct._object* @_Py_NoneStruct, %struct._object** %res, align 8, !dbg !4879, !tbaa !1458
  %18 = load %struct._object*, %struct._object** %res, align 8, !dbg !4881, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !4882
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !4883, !tbaa !1501
  %inc = add i64 %19, 1, !dbg !4883
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4883, !tbaa !1501
  br label %end, !dbg !4884

if.end.15:                                        ; preds = %if.end.12
  %20 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4885, !tbaa !1458
  %finalizing = getelementptr inbounds %struct.buffered, %struct.buffered* %20, i32 0, i32 6, !dbg !4886
  %21 = load i8, i8* %finalizing, align 1, !dbg !4886, !tbaa !1597
  %tobool16 = icmp ne i8 %21, 0, !dbg !4885
  br i1 %tobool16, label %if.then.17, label %if.end.29, !dbg !4887

if.then.17:                                       ; preds = %if.end.15
  %22 = bitcast %struct._object** %r18 to i8*, !dbg !4888
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !4888
  call void @llvm.dbg.declare(metadata %struct._object** %r18, metadata !830, metadata !1450), !dbg !4889
  %23 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4890, !tbaa !1458
  %24 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4891, !tbaa !1458
  %25 = bitcast %struct.buffered* %24 to %struct._object*, !dbg !4892
  %call19 = call %struct._object* @buffered_dealloc_warn(%struct.buffered* %23, %struct._object* %25), !dbg !4893
  store %struct._object* %call19, %struct._object** %r18, align 8, !dbg !4889, !tbaa !1458
  %26 = load %struct._object*, %struct._object** %r18, align 8, !dbg !4894, !tbaa !1458
  %tobool20 = icmp ne %struct._object* %26, null, !dbg !4894
  br i1 %tobool20, label %if.then.21, label %if.else.27, !dbg !4895

if.then.21:                                       ; preds = %if.then.17
  br label %do.body, !dbg !4896

do.body:                                          ; preds = %if.then.21
  %27 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4897
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !4897
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !833, metadata !1450), !dbg !4899
  %28 = load %struct._object*, %struct._object** %r18, align 8, !dbg !4900, !tbaa !1458
  store %struct._object* %28, %struct._object** %_py_decref_tmp, align 8, !dbg !4899, !tbaa !1458
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4901, !tbaa !1458
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !4903
  %30 = load i64, i64* %ob_refcnt22, align 8, !dbg !4904, !tbaa !1501
  %dec = add i64 %30, -1, !dbg !4904
  store i64 %dec, i64* %ob_refcnt22, align 8, !dbg !4904, !tbaa !1501
  %cmp23 = icmp ne i64 %dec, 0, !dbg !4905
  br i1 %cmp23, label %if.then.24, label %if.else.25, !dbg !4906

if.then.24:                                       ; preds = %do.body
  br label %if.end.26, !dbg !4907

if.else.25:                                       ; preds = %do.body
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4909, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !4911
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4911, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !4912
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4912, !tbaa !1511
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4913, !tbaa !1458
  call void %33(%struct._object* %34), !dbg !4914
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.25, %if.then.24
  %35 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4915
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !4915
  br label %do.cond, !dbg !4917

do.cond:                                          ; preds = %if.end.26
  br label %do.end, !dbg !4918

do.end:                                           ; preds = %do.cond
  br label %if.end.28, !dbg !4920

if.else.27:                                       ; preds = %if.then.17
  call void @PyErr_Clear(), !dbg !4922
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.27, %do.end
  %36 = bitcast %struct._object** %r18 to i8*, !dbg !4923
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !4923
  br label %if.end.29, !dbg !4924

if.end.29:                                        ; preds = %if.end.28, %if.end.15
  br label %do.body.30, !dbg !4925

do.body.30:                                       ; preds = %if.end.29
  %37 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4926, !tbaa !1458
  %owner31 = getelementptr inbounds %struct.buffered, %struct.buffered* %37, i32 0, i32 16, !dbg !4929
  store volatile i64 0, i64* %owner31, align 8, !dbg !4930, !tbaa !3261
  %38 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4931, !tbaa !1458
  %lock32 = getelementptr inbounds %struct.buffered, %struct.buffered* %38, i32 0, i32 15, !dbg !4932
  %39 = load i8*, i8** %lock32, align 8, !dbg !4932, !tbaa !1730
  call void @PyThread_release_lock(i8* %39), !dbg !4933
  br label %do.cond.33, !dbg !4934

do.cond.33:                                       ; preds = %do.body.30
  br label %do.end.34, !dbg !4935

do.end.34:                                        ; preds = %do.cond.33
  %40 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4937, !tbaa !1458
  %41 = bitcast %struct.buffered* %40 to %struct._object*, !dbg !4938
  %42 = load %struct._object*, %struct._object** @_PyIO_str_flush, align 8, !dbg !4939, !tbaa !1458
  %call35 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %41, %struct._object* %42, i8* null), !dbg !4940
  store %struct._object* %call35, %struct._object** %res, align 8, !dbg !4941, !tbaa !1458
  %43 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4942, !tbaa !1458
  %lock36 = getelementptr inbounds %struct.buffered, %struct.buffered* %43, i32 0, i32 15, !dbg !4944
  %44 = load i8*, i8** %lock36, align 8, !dbg !4944, !tbaa !1730
  %call37 = call i32 @PyThread_acquire_lock(i8* %44, i32 0), !dbg !4945
  %tobool38 = icmp ne i32 %call37, 0, !dbg !4945
  br i1 %tobool38, label %cond.true.39, label %cond.false.40, !dbg !4946

cond.true.39:                                     ; preds = %do.end.34
  br i1 true, label %land.lhs.true.43, label %if.then.46, !dbg !4947

cond.false.40:                                    ; preds = %do.end.34
  %45 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4949, !tbaa !1458
  %call41 = call i32 @_enter_buffered_busy(%struct.buffered* %45), !dbg !4951
  %tobool42 = icmp ne i32 %call41, 0, !dbg !4951
  br i1 %tobool42, label %land.lhs.true.43, label %if.then.46, !dbg !4946

land.lhs.true.43:                                 ; preds = %cond.false.40, %cond.true.39
  %call44 = call i64 @PyThread_get_thread_ident(), !dbg !4952
  %46 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4955, !tbaa !1458
  %owner45 = getelementptr inbounds %struct.buffered, %struct.buffered* %46, i32 0, i32 16, !dbg !4956
  store volatile i64 %call44, i64* %owner45, align 8, !dbg !4957, !tbaa !3261
  br i1 true, label %if.end.47, label %if.then.46, !dbg !4958

if.then.46:                                       ; preds = %land.lhs.true.43, %cond.false.40, %cond.true.39
  store %struct._object* null, %struct._object** %retval, !dbg !4959
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4959

if.end.47:                                        ; preds = %land.lhs.true.43
  %47 = load %struct._object*, %struct._object** %res, align 8, !dbg !4960, !tbaa !1458
  %cmp48 = icmp eq %struct._object* %47, null, !dbg !4961
  br i1 %cmp48, label %if.then.49, label %if.else.50, !dbg !4962

if.then.49:                                       ; preds = %if.end.47
  call void @PyErr_Fetch(%struct._object** %exc, %struct._object** %val, %struct._object** %tb), !dbg !4963
  br label %if.end.63, !dbg !4963

if.else.50:                                       ; preds = %if.end.47
  br label %do.body.51, !dbg !4964

do.body.51:                                       ; preds = %if.else.50
  %48 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !4965
  call void @llvm.lifetime.start(i64 8, i8* %48) #1, !dbg !4965
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp52, metadata !836, metadata !1450), !dbg !4967
  %49 = load %struct._object*, %struct._object** %res, align 8, !dbg !4968, !tbaa !1458
  store %struct._object* %49, %struct._object** %_py_decref_tmp52, align 8, !dbg !4967, !tbaa !1458
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !4969, !tbaa !1458
  %ob_refcnt53 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !4971
  %51 = load i64, i64* %ob_refcnt53, align 8, !dbg !4972, !tbaa !1501
  %dec54 = add i64 %51, -1, !dbg !4972
  store i64 %dec54, i64* %ob_refcnt53, align 8, !dbg !4972, !tbaa !1501
  %cmp55 = icmp ne i64 %dec54, 0, !dbg !4973
  br i1 %cmp55, label %if.then.56, label %if.else.57, !dbg !4974

if.then.56:                                       ; preds = %do.body.51
  br label %if.end.60, !dbg !4975

if.else.57:                                       ; preds = %do.body.51
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !4977, !tbaa !1458
  %ob_type58 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !4979
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type58, align 8, !dbg !4979, !tbaa !1509
  %tp_dealloc59 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !4980
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc59, align 8, !dbg !4980, !tbaa !1511
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !4981, !tbaa !1458
  call void %54(%struct._object* %55), !dbg !4982
  br label %if.end.60

if.end.60:                                        ; preds = %if.else.57, %if.then.56
  %56 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !4983
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !4983
  br label %do.cond.61, !dbg !4985

do.cond.61:                                       ; preds = %if.end.60
  br label %do.end.62, !dbg !4986

do.end.62:                                        ; preds = %do.cond.61
  br label %if.end.63

if.end.63:                                        ; preds = %do.end.62, %if.then.49
  %57 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4988, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %57, i32 0, i32 1, !dbg !4989
  %58 = load %struct._object*, %struct._object** %raw, align 8, !dbg !4989, !tbaa !1676
  %59 = load %struct._object*, %struct._object** @_PyIO_str_close, align 8, !dbg !4990, !tbaa !1458
  %call64 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %58, %struct._object* %59, i8* null), !dbg !4991
  store %struct._object* %call64, %struct._object** %res, align 8, !dbg !4992, !tbaa !1458
  %60 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4993, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %60, i32 0, i32 9, !dbg !4995
  %61 = load i8*, i8** %buffer, align 8, !dbg !4995, !tbaa !1717
  %tobool65 = icmp ne i8* %61, null, !dbg !4993
  br i1 %tobool65, label %if.then.66, label %if.end.69, !dbg !4996

if.then.66:                                       ; preds = %if.end.63
  %62 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !4997, !tbaa !1458
  %buffer67 = getelementptr inbounds %struct.buffered, %struct.buffered* %62, i32 0, i32 9, !dbg !4999
  %63 = load i8*, i8** %buffer67, align 8, !dbg !4999, !tbaa !1717
  call void @PyMem_Free(i8* %63), !dbg !5000
  %64 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5001, !tbaa !1458
  %buffer68 = getelementptr inbounds %struct.buffered, %struct.buffered* %64, i32 0, i32 9, !dbg !5002
  store i8* null, i8** %buffer68, align 8, !dbg !5003, !tbaa !1717
  br label %if.end.69, !dbg !5004

if.end.69:                                        ; preds = %if.then.66, %if.end.63
  %65 = load %struct._object*, %struct._object** %exc, align 8, !dbg !5005, !tbaa !1458
  %cmp70 = icmp ne %struct._object* %65, null, !dbg !5006
  br i1 %cmp70, label %if.then.71, label %if.end.124, !dbg !5007

if.then.71:                                       ; preds = %if.end.69
  %66 = load %struct._object*, %struct._object** %res, align 8, !dbg !5008, !tbaa !1458
  %cmp72 = icmp ne %struct._object* %66, null, !dbg !5009
  br i1 %cmp72, label %if.then.73, label %if.else.92, !dbg !5010

if.then.73:                                       ; preds = %if.then.71
  br label %do.body.74, !dbg !5011

do.body.74:                                       ; preds = %if.then.73
  %67 = bitcast %struct._object** %_py_tmp to i8*, !dbg !5012
  call void @llvm.lifetime.start(i64 8, i8* %67) #1, !dbg !5012
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !839, metadata !1450), !dbg !5014
  %68 = load %struct._object*, %struct._object** %res, align 8, !dbg !5015, !tbaa !1458
  store %struct._object* %68, %struct._object** %_py_tmp, align 8, !dbg !5014, !tbaa !1458
  %69 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !5016, !tbaa !1458
  %cmp75 = icmp ne %struct._object* %69, null, !dbg !5017
  br i1 %cmp75, label %if.then.76, label %if.end.89, !dbg !5018

if.then.76:                                       ; preds = %do.body.74
  store %struct._object* null, %struct._object** %res, align 8, !dbg !5019, !tbaa !1458
  br label %do.body.77, !dbg !5021

do.body.77:                                       ; preds = %if.then.76
  %70 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !5022
  call void @llvm.lifetime.start(i64 8, i8* %70) #1, !dbg !5022
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp78, metadata !845, metadata !1450), !dbg !5024
  %71 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !5025, !tbaa !1458
  store %struct._object* %71, %struct._object** %_py_decref_tmp78, align 8, !dbg !5024, !tbaa !1458
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !5026, !tbaa !1458
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 0, !dbg !5028
  %73 = load i64, i64* %ob_refcnt79, align 8, !dbg !5029, !tbaa !1501
  %dec80 = add i64 %73, -1, !dbg !5029
  store i64 %dec80, i64* %ob_refcnt79, align 8, !dbg !5029, !tbaa !1501
  %cmp81 = icmp ne i64 %dec80, 0, !dbg !5030
  br i1 %cmp81, label %if.then.82, label %if.else.83, !dbg !5031

if.then.82:                                       ; preds = %do.body.77
  br label %if.end.86, !dbg !5032

if.else.83:                                       ; preds = %do.body.77
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !5034, !tbaa !1458
  %ob_type84 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1, !dbg !5036
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type84, align 8, !dbg !5036, !tbaa !1509
  %tp_dealloc85 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 4, !dbg !5037
  %76 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc85, align 8, !dbg !5037, !tbaa !1511
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !5038, !tbaa !1458
  call void %76(%struct._object* %77), !dbg !5039
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.83, %if.then.82
  %78 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !5040
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !5040
  br label %do.cond.87, !dbg !5042

do.cond.87:                                       ; preds = %if.end.86
  br label %do.end.88, !dbg !5043

do.end.88:                                        ; preds = %do.cond.87
  br label %if.end.89, !dbg !5045

if.end.89:                                        ; preds = %do.end.88, %do.body.74
  %79 = bitcast %struct._object** %_py_tmp to i8*, !dbg !5047
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !5047
  br label %do.cond.90, !dbg !5050

do.cond.90:                                       ; preds = %if.end.89
  br label %do.end.91, !dbg !5051

do.end.91:                                        ; preds = %do.cond.90
  %80 = load %struct._object*, %struct._object** %exc, align 8, !dbg !5053, !tbaa !1458
  %81 = load %struct._object*, %struct._object** %val, align 8, !dbg !5054, !tbaa !1458
  %82 = load %struct._object*, %struct._object** %tb, align 8, !dbg !5055, !tbaa !1458
  call void @PyErr_Restore(%struct._object* %80, %struct._object* %81, %struct._object* %82), !dbg !5056
  br label %if.end.123, !dbg !5057

if.else.92:                                       ; preds = %if.then.71
  %83 = bitcast %struct._object** %val2 to i8*, !dbg !5058
  call void @llvm.lifetime.start(i64 8, i8* %83) #1, !dbg !5058
  call void @llvm.dbg.declare(metadata %struct._object** %val2, metadata !849, metadata !1450), !dbg !5059
  br label %do.body.93, !dbg !5060

do.body.93:                                       ; preds = %if.else.92
  %84 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !5061
  call void @llvm.lifetime.start(i64 8, i8* %84) #1, !dbg !5061
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !851, metadata !1450), !dbg !5063
  %85 = load %struct._object*, %struct._object** %exc, align 8, !dbg !5064, !tbaa !1458
  store %struct._object* %85, %struct._object** %_py_decref_tmp94, align 8, !dbg !5063, !tbaa !1458
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !5065, !tbaa !1458
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 0, !dbg !5067
  %87 = load i64, i64* %ob_refcnt95, align 8, !dbg !5068, !tbaa !1501
  %dec96 = add i64 %87, -1, !dbg !5068
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !5068, !tbaa !1501
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !5069
  br i1 %cmp97, label %if.then.98, label %if.else.99, !dbg !5070

if.then.98:                                       ; preds = %do.body.93
  br label %if.end.102, !dbg !5071

if.else.99:                                       ; preds = %do.body.93
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !5073, !tbaa !1458
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 1, !dbg !5075
  %89 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8, !dbg !5075, !tbaa !1509
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %89, i32 0, i32 4, !dbg !5076
  %90 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8, !dbg !5076, !tbaa !1511
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !5077, !tbaa !1458
  call void %90(%struct._object* %91), !dbg !5078
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.99, %if.then.98
  %92 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !5079
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !5079
  br label %do.cond.103, !dbg !5081

do.cond.103:                                      ; preds = %if.end.102
  br label %do.end.104, !dbg !5082

do.end.104:                                       ; preds = %do.cond.103
  br label %do.body.105, !dbg !5084

do.body.105:                                      ; preds = %do.end.104
  %93 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5085
  call void @llvm.lifetime.start(i64 8, i8* %93) #1, !dbg !5085
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !853, metadata !1450), !dbg !5087
  %94 = load %struct._object*, %struct._object** %tb, align 8, !dbg !5088, !tbaa !1458
  store %struct._object* %94, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5087, !tbaa !1458
  %95 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5089, !tbaa !1458
  %cmp106 = icmp ne %struct._object* %95, null, !dbg !5090
  br i1 %cmp106, label %if.then.107, label %if.end.120, !dbg !5091

if.then.107:                                      ; preds = %do.body.105
  br label %do.body.108, !dbg !5092

do.body.108:                                      ; preds = %if.then.107
  %96 = bitcast %struct._object** %_py_decref_tmp109 to i8*, !dbg !5094
  call void @llvm.lifetime.start(i64 8, i8* %96) #1, !dbg !5094
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp109, metadata !855, metadata !1450), !dbg !5096
  %97 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5097, !tbaa !1458
  store %struct._object* %97, %struct._object** %_py_decref_tmp109, align 8, !dbg !5096, !tbaa !1458
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8, !dbg !5098, !tbaa !1458
  %ob_refcnt110 = getelementptr inbounds %struct._object, %struct._object* %98, i32 0, i32 0, !dbg !5100
  %99 = load i64, i64* %ob_refcnt110, align 8, !dbg !5101, !tbaa !1501
  %dec111 = add i64 %99, -1, !dbg !5101
  store i64 %dec111, i64* %ob_refcnt110, align 8, !dbg !5101, !tbaa !1501
  %cmp112 = icmp ne i64 %dec111, 0, !dbg !5102
  br i1 %cmp112, label %if.then.113, label %if.else.114, !dbg !5103

if.then.113:                                      ; preds = %do.body.108
  br label %if.end.117, !dbg !5104

if.else.114:                                      ; preds = %do.body.108
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8, !dbg !5106, !tbaa !1458
  %ob_type115 = getelementptr inbounds %struct._object, %struct._object* %100, i32 0, i32 1, !dbg !5108
  %101 = load %struct._typeobject*, %struct._typeobject** %ob_type115, align 8, !dbg !5108, !tbaa !1509
  %tp_dealloc116 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %101, i32 0, i32 4, !dbg !5109
  %102 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc116, align 8, !dbg !5109, !tbaa !1511
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8, !dbg !5110, !tbaa !1458
  call void %102(%struct._object* %103), !dbg !5111
  br label %if.end.117

if.end.117:                                       ; preds = %if.else.114, %if.then.113
  %104 = bitcast %struct._object** %_py_decref_tmp109 to i8*, !dbg !5112
  call void @llvm.lifetime.end(i64 8, i8* %104) #1, !dbg !5112
  br label %do.cond.118, !dbg !5114

do.cond.118:                                      ; preds = %if.end.117
  br label %do.end.119, !dbg !5115

do.end.119:                                       ; preds = %do.cond.118
  br label %if.end.120, !dbg !5117

if.end.120:                                       ; preds = %do.end.119, %do.body.105
  %105 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5119
  call void @llvm.lifetime.end(i64 8, i8* %105) #1, !dbg !5119
  br label %do.cond.121, !dbg !5122

do.cond.121:                                      ; preds = %if.end.120
  br label %do.end.122, !dbg !5123

do.end.122:                                       ; preds = %do.cond.121
  call void @PyErr_Fetch(%struct._object** %exc, %struct._object** %val2, %struct._object** %tb), !dbg !5125
  call void @PyErr_NormalizeException(%struct._object** %exc, %struct._object** %val2, %struct._object** %tb), !dbg !5126
  %106 = load %struct._object*, %struct._object** %val2, align 8, !dbg !5127, !tbaa !1458
  %107 = load %struct._object*, %struct._object** %val, align 8, !dbg !5128, !tbaa !1458
  call void @PyException_SetContext(%struct._object* %106, %struct._object* %107), !dbg !5129
  %108 = load %struct._object*, %struct._object** %exc, align 8, !dbg !5130, !tbaa !1458
  %109 = load %struct._object*, %struct._object** %val2, align 8, !dbg !5131, !tbaa !1458
  %110 = load %struct._object*, %struct._object** %tb, align 8, !dbg !5132, !tbaa !1458
  call void @PyErr_Restore(%struct._object* %108, %struct._object* %109, %struct._object* %110), !dbg !5133
  %111 = bitcast %struct._object** %val2 to i8*, !dbg !5134
  call void @llvm.lifetime.end(i64 8, i8* %111) #1, !dbg !5134
  br label %if.end.123

if.end.123:                                       ; preds = %do.end.122, %do.end.91
  br label %if.end.124, !dbg !5135

if.end.124:                                       ; preds = %if.end.123, %if.end.69
  br label %end, !dbg !5136

end:                                              ; preds = %if.end.124, %if.then.14, %if.then.11
  br label %do.body.125, !dbg !5138

do.body.125:                                      ; preds = %end
  %112 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5139, !tbaa !1458
  %owner126 = getelementptr inbounds %struct.buffered, %struct.buffered* %112, i32 0, i32 16, !dbg !5142
  store volatile i64 0, i64* %owner126, align 8, !dbg !5143, !tbaa !3261
  %113 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5144, !tbaa !1458
  %lock127 = getelementptr inbounds %struct.buffered, %struct.buffered* %113, i32 0, i32 15, !dbg !5145
  %114 = load i8*, i8** %lock127, align 8, !dbg !5145, !tbaa !1730
  call void @PyThread_release_lock(i8* %114), !dbg !5146
  br label %do.cond.128, !dbg !5147

do.cond.128:                                      ; preds = %do.body.125
  br label %do.end.129, !dbg !5148

do.end.129:                                       ; preds = %do.cond.128
  %115 = load %struct._object*, %struct._object** %res, align 8, !dbg !5150, !tbaa !1458
  store %struct._object* %115, %struct._object** %retval, !dbg !5151
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5151

cleanup:                                          ; preds = %do.end.129, %if.then.46, %if.then.7, %if.end
  %116 = bitcast i32* %r to i8*, !dbg !5152
  call void @llvm.lifetime.end(i64 4, i8* %116) #1, !dbg !5152
  %117 = bitcast %struct._object** %tb to i8*, !dbg !5152
  call void @llvm.lifetime.end(i64 8, i8* %117) #1, !dbg !5152
  %118 = bitcast %struct._object** %val to i8*, !dbg !5152
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !5152
  %119 = bitcast %struct._object** %exc to i8*, !dbg !5152
  call void @llvm.lifetime.end(i64 8, i8* %119) #1, !dbg !5152
  %120 = bitcast %struct._object** %res to i8*, !dbg !5152
  call void @llvm.lifetime.end(i64 8, i8* %120) #1, !dbg !5152
  %121 = load %struct._object*, %struct._object** %retval, !dbg !5152
  ret %struct._object* %121, !dbg !5152
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_seekable(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !860, metadata !1450), !dbg !5153
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !861, metadata !1450), !dbg !5154
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5155, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 2, !dbg !5157
  %1 = load i32, i32* %ok, align 4, !dbg !5157, !tbaa !1660
  %cmp = icmp sle i32 %1, 0, !dbg !5158
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !5159

if.then:                                          ; preds = %entry
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5160, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 3, !dbg !5164
  %3 = load i32, i32* %detached, align 4, !dbg !5164, !tbaa !2019
  %tobool = icmp ne i32 %3, 0, !dbg !5165
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !5166

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5167, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !5170
  br label %if.end, !dbg !5171

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5172, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !5175
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !5176
  br label %return, !dbg !5176

if.end.2:                                         ; preds = %entry
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5178, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 1, !dbg !5179
  %7 = load %struct._object*, %struct._object** %raw, align 8, !dbg !5179, !tbaa !1676
  %8 = load %struct._object*, %struct._object** @_PyIO_str_seekable, align 8, !dbg !5180, !tbaa !1458
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %7, %struct._object* %8, i8* null), !dbg !5181
  store %struct._object* %call, %struct._object** %retval, !dbg !5182
  br label %return, !dbg !5182

return:                                           ; preds = %if.end.2, %if.end
  %9 = load %struct._object*, %struct._object** %retval, !dbg !5183
  ret %struct._object* %9, !dbg !5183
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_readable(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !864, metadata !1450), !dbg !5184
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !865, metadata !1450), !dbg !5185
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5186, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 2, !dbg !5188
  %1 = load i32, i32* %ok, align 4, !dbg !5188, !tbaa !1660
  %cmp = icmp sle i32 %1, 0, !dbg !5189
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !5190

if.then:                                          ; preds = %entry
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5191, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 3, !dbg !5195
  %3 = load i32, i32* %detached, align 4, !dbg !5195, !tbaa !2019
  %tobool = icmp ne i32 %3, 0, !dbg !5196
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !5197

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5198, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !5201
  br label %if.end, !dbg !5202

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5203, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !5206
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !5207
  br label %return, !dbg !5207

if.end.2:                                         ; preds = %entry
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5209, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 1, !dbg !5210
  %7 = load %struct._object*, %struct._object** %raw, align 8, !dbg !5210, !tbaa !1676
  %8 = load %struct._object*, %struct._object** @_PyIO_str_readable, align 8, !dbg !5211, !tbaa !1458
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %7, %struct._object* %8, i8* null), !dbg !5212
  store %struct._object* %call, %struct._object** %retval, !dbg !5213
  br label %return, !dbg !5213

return:                                           ; preds = %if.end.2, %if.end
  %9 = load %struct._object*, %struct._object** %retval, !dbg !5214
  ret %struct._object* %9, !dbg !5214
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_writable(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !868, metadata !1450), !dbg !5215
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !869, metadata !1450), !dbg !5216
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5217, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 2, !dbg !5219
  %1 = load i32, i32* %ok, align 4, !dbg !5219, !tbaa !1660
  %cmp = icmp sle i32 %1, 0, !dbg !5220
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !5221

if.then:                                          ; preds = %entry
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5222, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 3, !dbg !5226
  %3 = load i32, i32* %detached, align 4, !dbg !5226, !tbaa !2019
  %tobool = icmp ne i32 %3, 0, !dbg !5227
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !5228

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5229, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !5232
  br label %if.end, !dbg !5233

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5234, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !5237
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !5238
  br label %return, !dbg !5238

if.end.2:                                         ; preds = %entry
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5240, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 1, !dbg !5241
  %7 = load %struct._object*, %struct._object** %raw, align 8, !dbg !5241, !tbaa !1676
  %8 = load %struct._object*, %struct._object** @_PyIO_str_writable, align 8, !dbg !5242, !tbaa !1458
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %7, %struct._object* %8, i8* null), !dbg !5243
  store %struct._object* %call, %struct._object** %retval, !dbg !5244
  br label %return, !dbg !5244

return:                                           ; preds = %if.end.2, %if.end
  %9 = load %struct._object*, %struct._object** %retval, !dbg !5245
  ret %struct._object* %9, !dbg !5245
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_fileno(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !872, metadata !1450), !dbg !5246
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !873, metadata !1450), !dbg !5247
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5248, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 2, !dbg !5250
  %1 = load i32, i32* %ok, align 4, !dbg !5250, !tbaa !1660
  %cmp = icmp sle i32 %1, 0, !dbg !5251
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !5252

if.then:                                          ; preds = %entry
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5253, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 3, !dbg !5257
  %3 = load i32, i32* %detached, align 4, !dbg !5257, !tbaa !2019
  %tobool = icmp ne i32 %3, 0, !dbg !5258
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !5259

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5260, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !5263
  br label %if.end, !dbg !5264

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5265, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !5268
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !5269
  br label %return, !dbg !5269

if.end.2:                                         ; preds = %entry
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5271, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 1, !dbg !5272
  %7 = load %struct._object*, %struct._object** %raw, align 8, !dbg !5272, !tbaa !1676
  %8 = load %struct._object*, %struct._object** @_PyIO_str_fileno, align 8, !dbg !5273, !tbaa !1458
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %7, %struct._object* %8, i8* null), !dbg !5274
  store %struct._object* %call, %struct._object** %retval, !dbg !5275
  br label %return, !dbg !5275

return:                                           ; preds = %if.end.2, %if.end
  %9 = load %struct._object*, %struct._object** %retval, !dbg !5276
  ret %struct._object* %9, !dbg !5276
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_isatty(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !876, metadata !1450), !dbg !5277
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !877, metadata !1450), !dbg !5278
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5279, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 2, !dbg !5281
  %1 = load i32, i32* %ok, align 4, !dbg !5281, !tbaa !1660
  %cmp = icmp sle i32 %1, 0, !dbg !5282
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !5283

if.then:                                          ; preds = %entry
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5284, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 3, !dbg !5288
  %3 = load i32, i32* %detached, align 4, !dbg !5288, !tbaa !2019
  %tobool = icmp ne i32 %3, 0, !dbg !5289
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !5290

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5291, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !5294
  br label %if.end, !dbg !5295

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5296, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !5299
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !5300
  br label %return, !dbg !5300

if.end.2:                                         ; preds = %entry
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5302, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 1, !dbg !5303
  %7 = load %struct._object*, %struct._object** %raw, align 8, !dbg !5303, !tbaa !1676
  %8 = load %struct._object*, %struct._object** @_PyIO_str_isatty, align 8, !dbg !5304, !tbaa !1458
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %7, %struct._object* %8, i8* null), !dbg !5305
  store %struct._object* %call, %struct._object** %retval, !dbg !5306
  br label %return, !dbg !5306

return:                                           ; preds = %if.end.2, %if.end
  %9 = load %struct._object*, %struct._object** %retval, !dbg !5307
  ret %struct._object* %9, !dbg !5307
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_dealloc_warn(%struct.buffered* %self, %struct._object* %source) #0 {
entry:
  %self.addr = alloca %struct.buffered*, align 8
  %source.addr = alloca %struct._object*, align 8
  %r = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !880, metadata !1450), !dbg !5308
  store %struct._object* %source, %struct._object** %source.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %source.addr, metadata !881, metadata !1450), !dbg !5309
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5310, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 2, !dbg !5311
  %1 = load i32, i32* %ok, align 4, !dbg !5311, !tbaa !1660
  %tobool = icmp ne i32 %1, 0, !dbg !5310
  br i1 %tobool, label %land.lhs.true, label %if.end.8, !dbg !5312

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5313, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 1, !dbg !5315
  %3 = load %struct._object*, %struct._object** %raw, align 8, !dbg !5315, !tbaa !1676
  %tobool1 = icmp ne %struct._object* %3, null, !dbg !5316
  br i1 %tobool1, label %if.then, label %if.end.8, !dbg !5317

if.then:                                          ; preds = %land.lhs.true
  %4 = bitcast %struct._object** %r to i8*, !dbg !5318
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !5318
  call void @llvm.dbg.declare(metadata %struct._object** %r, metadata !882, metadata !1450), !dbg !5319
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5320, !tbaa !1458
  %raw2 = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 1, !dbg !5321
  %6 = load %struct._object*, %struct._object** %raw2, align 8, !dbg !5321, !tbaa !1676
  %7 = load %struct._object*, %struct._object** %source.addr, align 8, !dbg !5322, !tbaa !1458
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %6, %struct._Py_Identifier* @PyId__dealloc_warn, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i32 0, i32 0), %struct._object* %7), !dbg !5323
  store %struct._object* %call, %struct._object** %r, align 8, !dbg !5324, !tbaa !1458
  %8 = load %struct._object*, %struct._object** %r, align 8, !dbg !5325, !tbaa !1458
  %tobool3 = icmp ne %struct._object* %8, null, !dbg !5325
  br i1 %tobool3, label %if.then.4, label %if.else.6, !dbg !5326

if.then.4:                                        ; preds = %if.then
  br label %do.body, !dbg !5327

do.body:                                          ; preds = %if.then.4
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5328
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !5328
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !885, metadata !1450), !dbg !5330
  %10 = load %struct._object*, %struct._object** %r, align 8, !dbg !5331, !tbaa !1458
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !5330, !tbaa !1458
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5332, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !5334
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !5335, !tbaa !1501
  %dec = add i64 %12, -1, !dbg !5335
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5335, !tbaa !1501
  %cmp = icmp ne i64 %dec, 0, !dbg !5336
  br i1 %cmp, label %if.then.5, label %if.else, !dbg !5337

if.then.5:                                        ; preds = %do.body
  br label %if.end, !dbg !5338

if.else:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5340, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !5342
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5342, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !5343
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5343, !tbaa !1511
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5344, !tbaa !1458
  call void %15(%struct._object* %16), !dbg !5345
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.5
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5346
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !5346
  br label %do.cond, !dbg !5348

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !5349

do.end:                                           ; preds = %do.cond
  br label %if.end.7, !dbg !5351

if.else.6:                                        ; preds = %if.then
  call void @PyErr_Clear(), !dbg !5353
  br label %if.end.7

if.end.7:                                         ; preds = %if.else.6, %do.end
  %18 = bitcast %struct._object** %r to i8*, !dbg !5354
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !5354
  br label %if.end.8, !dbg !5355

if.end.8:                                         ; preds = %if.end.7, %land.lhs.true, %entry
  %19 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5356, !tbaa !1501
  %inc = add i64 %19, 1, !dbg !5356
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5356, !tbaa !1501
  ret %struct._object* @_Py_NoneStruct, !dbg !5357
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_getstate(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !890, metadata !1450), !dbg !5358
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !891, metadata !1450), !dbg !5359
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5360, !tbaa !1458
  %1 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5361, !tbaa !1458
  %2 = bitcast %struct.buffered* %1 to %struct._object*, !dbg !5362
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !5363
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5363, !tbaa !1509
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 1, !dbg !5364
  %4 = load i8*, i8** %tp_name, align 8, !dbg !5364, !tbaa !1815
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* %4), !dbg !5365
  ret %struct._object* null, !dbg !5366
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_read(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !894, metadata !1450), !dbg !5367
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !895, metadata !1450), !dbg !5368
  %0 = bitcast i64* %n to i8*, !dbg !5369
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5369
  call void @llvm.dbg.declare(metadata i64* %n, metadata !896, metadata !1450), !dbg !5370
  store i64 -1, i64* %n, align 8, !dbg !5370, !tbaa !2140
  %1 = bitcast %struct._object** %res to i8*, !dbg !5371
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5371
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !897, metadata !1450), !dbg !5372
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5373, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 2, !dbg !5375
  %3 = load i32, i32* %ok, align 4, !dbg !5375, !tbaa !1660
  %cmp = icmp sle i32 %3, 0, !dbg !5376
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !5377

if.then:                                          ; preds = %entry
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5378, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 3, !dbg !5382
  %5 = load i32, i32* %detached, align 4, !dbg !5382, !tbaa !2019
  %tobool = icmp ne i32 %5, 0, !dbg !5383
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !5384

if.then.1:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5385, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !5388
  br label %if.end, !dbg !5389

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5390, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !5393
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !5394
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5396

if.end.2:                                         ; preds = %entry
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5397, !tbaa !1458
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i32 0, i32 0), i32 (%struct._object*, i8*)* @_PyIO_ConvertSsize_t, i64* %n), !dbg !5399
  %tobool3 = icmp ne i32 %call, 0, !dbg !5399
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !5400

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !5401
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5401

if.end.5:                                         ; preds = %if.end.2
  %9 = load i64, i64* %n, align 8, !dbg !5403, !tbaa !2140
  %cmp6 = icmp slt i64 %9, -1, !dbg !5405
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !5406

if.then.7:                                        ; preds = %if.end.5
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5407, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.45, i32 0, i32 0)), !dbg !5409
  store %struct._object* null, %struct._object** %retval, !dbg !5410
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5410

if.end.8:                                         ; preds = %if.end.5
  %11 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5411, !tbaa !1458
  %fast_closed_checks = getelementptr inbounds %struct.buffered, %struct.buffered* %11, i32 0, i32 7, !dbg !5413
  %12 = load i32, i32* %fast_closed_checks, align 4, !dbg !5413, !tbaa !2249
  %tobool9 = icmp ne i32 %12, 0, !dbg !5411
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !5414

cond.true:                                        ; preds = %if.end.8
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5415, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 1, !dbg !5417
  %14 = load %struct._object*, %struct._object** %raw, align 8, !dbg !5417, !tbaa !1676
  %call10 = call i32 @_PyFileIO_closed(%struct._object* %14), !dbg !5418
  %tobool11 = icmp ne i32 %call10, 0, !dbg !5418
  br i1 %tobool11, label %if.then.14, label %if.end.15, !dbg !5411

cond.false:                                       ; preds = %if.end.8
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5419, !tbaa !1458
  %call12 = call i32 @buffered_closed(%struct.buffered* %15), !dbg !5421
  %tobool13 = icmp ne i32 %call12, 0, !dbg !5421
  br i1 %tobool13, label %if.then.14, label %if.end.15, !dbg !5414

if.then.14:                                       ; preds = %cond.false, %cond.true
  %16 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5422, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46, i32 0, i32 0)), !dbg !5426
  store %struct._object* null, %struct._object** %retval, !dbg !5427
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5427

if.end.15:                                        ; preds = %cond.false, %cond.true
  %17 = load i64, i64* %n, align 8, !dbg !5428, !tbaa !2140
  %cmp16 = icmp eq i64 %17, -1, !dbg !5429
  br i1 %cmp16, label %if.then.17, label %if.else.28, !dbg !5430

if.then.17:                                       ; preds = %if.end.15
  %18 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5431, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %18, i32 0, i32 15, !dbg !5434
  %19 = load i8*, i8** %lock, align 8, !dbg !5434, !tbaa !1730
  %call18 = call i32 @PyThread_acquire_lock(i8* %19, i32 0), !dbg !5435
  %tobool19 = icmp ne i32 %call18, 0, !dbg !5435
  br i1 %tobool19, label %cond.true.20, label %cond.false.21, !dbg !5436

cond.true.20:                                     ; preds = %if.then.17
  br i1 true, label %land.lhs.true, label %if.then.25, !dbg !5437

cond.false.21:                                    ; preds = %if.then.17
  %20 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5439, !tbaa !1458
  %call22 = call i32 @_enter_buffered_busy(%struct.buffered* %20), !dbg !5441
  %tobool23 = icmp ne i32 %call22, 0, !dbg !5441
  br i1 %tobool23, label %land.lhs.true, label %if.then.25, !dbg !5436

land.lhs.true:                                    ; preds = %cond.false.21, %cond.true.20
  %call24 = call i64 @PyThread_get_thread_ident(), !dbg !5442
  %21 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5445, !tbaa !1458
  %owner = getelementptr inbounds %struct.buffered, %struct.buffered* %21, i32 0, i32 16, !dbg !5446
  store volatile i64 %call24, i64* %owner, align 8, !dbg !5447, !tbaa !3261
  br i1 true, label %if.end.26, label %if.then.25, !dbg !5448

if.then.25:                                       ; preds = %land.lhs.true, %cond.false.21, %cond.true.20
  store %struct._object* null, %struct._object** %retval, !dbg !5449
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5449

if.end.26:                                        ; preds = %land.lhs.true
  %22 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5450, !tbaa !1458
  %call27 = call %struct._object* @_bufferedreader_read_all(%struct.buffered* %22), !dbg !5451
  store %struct._object* %call27, %struct._object** %res, align 8, !dbg !5452, !tbaa !1458
  br label %if.end.50, !dbg !5453

if.else.28:                                       ; preds = %if.end.15
  %23 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5454, !tbaa !1458
  %24 = load i64, i64* %n, align 8, !dbg !5455, !tbaa !2140
  %call29 = call %struct._object* @_bufferedreader_read_fast(%struct.buffered* %23, i64 %24), !dbg !5456
  store %struct._object* %call29, %struct._object** %res, align 8, !dbg !5457, !tbaa !1458
  %25 = load %struct._object*, %struct._object** %res, align 8, !dbg !5458, !tbaa !1458
  %cmp30 = icmp ne %struct._object* %25, @_Py_NoneStruct, !dbg !5460
  br i1 %cmp30, label %if.then.31, label %if.end.32, !dbg !5461

if.then.31:                                       ; preds = %if.else.28
  %26 = load %struct._object*, %struct._object** %res, align 8, !dbg !5462, !tbaa !1458
  store %struct._object* %26, %struct._object** %retval, !dbg !5463
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5463

if.end.32:                                        ; preds = %if.else.28
  br label %do.body, !dbg !5464

do.body:                                          ; preds = %if.end.32
  %27 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5465
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !5465
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !898, metadata !1450), !dbg !5467
  %28 = load %struct._object*, %struct._object** %res, align 8, !dbg !5468, !tbaa !1458
  store %struct._object* %28, %struct._object** %_py_decref_tmp, align 8, !dbg !5467, !tbaa !1458
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5469, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !5471
  %30 = load i64, i64* %ob_refcnt, align 8, !dbg !5472, !tbaa !1501
  %dec = add i64 %30, -1, !dbg !5472
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5472, !tbaa !1501
  %cmp33 = icmp ne i64 %dec, 0, !dbg !5473
  br i1 %cmp33, label %if.then.34, label %if.else.35, !dbg !5474

if.then.34:                                       ; preds = %do.body
  br label %if.end.36, !dbg !5475

if.else.35:                                       ; preds = %do.body
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5477, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !5479
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5479, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !5480
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5480, !tbaa !1511
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5481, !tbaa !1458
  call void %33(%struct._object* %34), !dbg !5482
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.35, %if.then.34
  %35 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5483
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !5483
  br label %do.cond, !dbg !5485

do.cond:                                          ; preds = %if.end.36
  br label %do.end, !dbg !5486

do.end:                                           ; preds = %do.cond
  %36 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5488, !tbaa !1458
  %lock37 = getelementptr inbounds %struct.buffered, %struct.buffered* %36, i32 0, i32 15, !dbg !5490
  %37 = load i8*, i8** %lock37, align 8, !dbg !5490, !tbaa !1730
  %call38 = call i32 @PyThread_acquire_lock(i8* %37, i32 0), !dbg !5491
  %tobool39 = icmp ne i32 %call38, 0, !dbg !5491
  br i1 %tobool39, label %cond.true.40, label %cond.false.41, !dbg !5492

cond.true.40:                                     ; preds = %do.end
  br i1 true, label %land.lhs.true.44, label %if.then.47, !dbg !5493

cond.false.41:                                    ; preds = %do.end
  %38 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5495, !tbaa !1458
  %call42 = call i32 @_enter_buffered_busy(%struct.buffered* %38), !dbg !5497
  %tobool43 = icmp ne i32 %call42, 0, !dbg !5497
  br i1 %tobool43, label %land.lhs.true.44, label %if.then.47, !dbg !5492

land.lhs.true.44:                                 ; preds = %cond.false.41, %cond.true.40
  %call45 = call i64 @PyThread_get_thread_ident(), !dbg !5498
  %39 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5501, !tbaa !1458
  %owner46 = getelementptr inbounds %struct.buffered, %struct.buffered* %39, i32 0, i32 16, !dbg !5502
  store volatile i64 %call45, i64* %owner46, align 8, !dbg !5503, !tbaa !3261
  br i1 true, label %if.end.48, label %if.then.47, !dbg !5504

if.then.47:                                       ; preds = %land.lhs.true.44, %cond.false.41, %cond.true.40
  store %struct._object* null, %struct._object** %retval, !dbg !5505
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5505

if.end.48:                                        ; preds = %land.lhs.true.44
  %40 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5506, !tbaa !1458
  %41 = load i64, i64* %n, align 8, !dbg !5507, !tbaa !2140
  %call49 = call %struct._object* @_bufferedreader_read_generic(%struct.buffered* %40, i64 %41), !dbg !5508
  store %struct._object* %call49, %struct._object** %res, align 8, !dbg !5509, !tbaa !1458
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.48, %if.end.26
  br label %do.body.51, !dbg !5510

do.body.51:                                       ; preds = %if.end.50
  %42 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5511, !tbaa !1458
  %owner52 = getelementptr inbounds %struct.buffered, %struct.buffered* %42, i32 0, i32 16, !dbg !5514
  store volatile i64 0, i64* %owner52, align 8, !dbg !5515, !tbaa !3261
  %43 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5516, !tbaa !1458
  %lock53 = getelementptr inbounds %struct.buffered, %struct.buffered* %43, i32 0, i32 15, !dbg !5517
  %44 = load i8*, i8** %lock53, align 8, !dbg !5517, !tbaa !1730
  call void @PyThread_release_lock(i8* %44), !dbg !5518
  br label %do.cond.54, !dbg !5519

do.cond.54:                                       ; preds = %do.body.51
  br label %do.end.55, !dbg !5520

do.end.55:                                        ; preds = %do.cond.54
  %45 = load %struct._object*, %struct._object** %res, align 8, !dbg !5522, !tbaa !1458
  store %struct._object* %45, %struct._object** %retval, !dbg !5523
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5523

cleanup:                                          ; preds = %do.end.55, %if.then.47, %if.then.31, %if.then.25, %if.then.14, %if.then.7, %if.then.4, %if.end
  %46 = bitcast %struct._object** %res to i8*, !dbg !5524
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !5524
  %47 = bitcast i64* %n to i8*, !dbg !5524
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !5524
  %48 = load %struct._object*, %struct._object** %retval, !dbg !5524
  ret %struct._object* %48, !dbg !5524
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_peek(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !985, metadata !1450), !dbg !5525
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !986, metadata !1450), !dbg !5526
  %0 = bitcast i64* %n to i8*, !dbg !5527
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5527
  call void @llvm.dbg.declare(metadata i64* %n, metadata !987, metadata !1450), !dbg !5528
  store i64 0, i64* %n, align 8, !dbg !5528, !tbaa !2140
  %1 = bitcast %struct._object** %res to i8*, !dbg !5529
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5529
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !988, metadata !1450), !dbg !5530
  store %struct._object* null, %struct._object** %res, align 8, !dbg !5530, !tbaa !1458
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5531, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 2, !dbg !5533
  %3 = load i32, i32* %ok, align 4, !dbg !5533, !tbaa !1660
  %cmp = icmp sle i32 %3, 0, !dbg !5534
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !5535

if.then:                                          ; preds = %entry
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5536, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 3, !dbg !5540
  %5 = load i32, i32* %detached, align 4, !dbg !5540, !tbaa !2019
  %tobool = icmp ne i32 %5, 0, !dbg !5541
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !5542

if.then.1:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5543, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !5546
  br label %if.end, !dbg !5547

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5548, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !5551
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !5552
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5554

if.end.2:                                         ; preds = %entry
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5555, !tbaa !1458
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i32 0, i32 0), i64* %n), !dbg !5557
  %tobool3 = icmp ne i32 %call, 0, !dbg !5557
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !5558

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !5559
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5559

if.end.5:                                         ; preds = %if.end.2
  %9 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5561, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %9, i32 0, i32 15, !dbg !5563
  %10 = load i8*, i8** %lock, align 8, !dbg !5563, !tbaa !1730
  %call6 = call i32 @PyThread_acquire_lock(i8* %10, i32 0), !dbg !5564
  %tobool7 = icmp ne i32 %call6, 0, !dbg !5564
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !5565

cond.true:                                        ; preds = %if.end.5
  br i1 true, label %land.lhs.true, label %if.then.11, !dbg !5566

cond.false:                                       ; preds = %if.end.5
  %11 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5568, !tbaa !1458
  %call8 = call i32 @_enter_buffered_busy(%struct.buffered* %11), !dbg !5570
  %tobool9 = icmp ne i32 %call8, 0, !dbg !5570
  br i1 %tobool9, label %land.lhs.true, label %if.then.11, !dbg !5565

land.lhs.true:                                    ; preds = %cond.false, %cond.true
  %call10 = call i64 @PyThread_get_thread_ident(), !dbg !5571
  %12 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5574, !tbaa !1458
  %owner = getelementptr inbounds %struct.buffered, %struct.buffered* %12, i32 0, i32 16, !dbg !5575
  store volatile i64 %call10, i64* %owner, align 8, !dbg !5576, !tbaa !3261
  br i1 true, label %if.end.12, label %if.then.11, !dbg !5577

if.then.11:                                       ; preds = %land.lhs.true, %cond.false, %cond.true
  store %struct._object* null, %struct._object** %retval, !dbg !5578
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5578

if.end.12:                                        ; preds = %land.lhs.true
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5579, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 5, !dbg !5580
  %14 = load i32, i32* %writable, align 4, !dbg !5580, !tbaa !2227
  %tobool13 = icmp ne i32 %14, 0, !dbg !5579
  br i1 %tobool13, label %if.then.14, label %if.end.29, !dbg !5581

if.then.14:                                       ; preds = %if.end.12
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5582, !tbaa !1458
  %call15 = call %struct._object* @buffered_flush_and_rewind_unlocked(%struct.buffered* %15), !dbg !5583
  store %struct._object* %call15, %struct._object** %res, align 8, !dbg !5584, !tbaa !1458
  %16 = load %struct._object*, %struct._object** %res, align 8, !dbg !5585, !tbaa !1458
  %cmp16 = icmp eq %struct._object* %16, null, !dbg !5587
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !5588

if.then.17:                                       ; preds = %if.then.14
  br label %end, !dbg !5589

if.end.18:                                        ; preds = %if.then.14
  br label %do.body, !dbg !5590

do.body:                                          ; preds = %if.end.18
  %17 = bitcast %struct._object** %_py_tmp to i8*, !dbg !5591
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !5591
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !989, metadata !1450), !dbg !5593
  %18 = load %struct._object*, %struct._object** %res, align 8, !dbg !5594, !tbaa !1458
  store %struct._object* %18, %struct._object** %_py_tmp, align 8, !dbg !5593, !tbaa !1458
  %19 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !5595, !tbaa !1458
  %cmp19 = icmp ne %struct._object* %19, null, !dbg !5596
  br i1 %cmp19, label %if.then.20, label %if.end.26, !dbg !5597

if.then.20:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %res, align 8, !dbg !5598, !tbaa !1458
  br label %do.body.21, !dbg !5600

do.body.21:                                       ; preds = %if.then.20
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5601
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !5601
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !993, metadata !1450), !dbg !5603
  %21 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !5604, !tbaa !1458
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !5603, !tbaa !1458
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5605, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !5607
  %23 = load i64, i64* %ob_refcnt, align 8, !dbg !5608, !tbaa !1501
  %dec = add i64 %23, -1, !dbg !5608
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5608, !tbaa !1501
  %cmp22 = icmp ne i64 %dec, 0, !dbg !5609
  br i1 %cmp22, label %if.then.23, label %if.else.24, !dbg !5610

if.then.23:                                       ; preds = %do.body.21
  br label %if.end.25, !dbg !5611

if.else.24:                                       ; preds = %do.body.21
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5613, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !5615
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5615, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !5616
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5616, !tbaa !1511
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5617, !tbaa !1458
  call void %26(%struct._object* %27), !dbg !5618
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.24, %if.then.23
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5619
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !5619
  br label %do.cond, !dbg !5621

do.cond:                                          ; preds = %if.end.25
  br label %do.end, !dbg !5622

do.end:                                           ; preds = %do.cond
  br label %if.end.26, !dbg !5624

if.end.26:                                        ; preds = %do.end, %do.body
  %29 = bitcast %struct._object** %_py_tmp to i8*, !dbg !5626
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !5626
  br label %do.cond.27, !dbg !5629

do.cond.27:                                       ; preds = %if.end.26
  br label %do.end.28, !dbg !5630

do.end.28:                                        ; preds = %do.cond.27
  br label %if.end.29, !dbg !5632

if.end.29:                                        ; preds = %do.end.28, %if.end.12
  %30 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5633, !tbaa !1458
  %call30 = call %struct._object* @_bufferedreader_peek_unlocked(%struct.buffered* %30), !dbg !5634
  store %struct._object* %call30, %struct._object** %res, align 8, !dbg !5635, !tbaa !1458
  br label %end, !dbg !5636

end:                                              ; preds = %if.end.29, %if.then.17
  br label %do.body.31, !dbg !5637

do.body.31:                                       ; preds = %end
  %31 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5638, !tbaa !1458
  %owner32 = getelementptr inbounds %struct.buffered, %struct.buffered* %31, i32 0, i32 16, !dbg !5641
  store volatile i64 0, i64* %owner32, align 8, !dbg !5642, !tbaa !3261
  %32 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5643, !tbaa !1458
  %lock33 = getelementptr inbounds %struct.buffered, %struct.buffered* %32, i32 0, i32 15, !dbg !5644
  %33 = load i8*, i8** %lock33, align 8, !dbg !5644, !tbaa !1730
  call void @PyThread_release_lock(i8* %33), !dbg !5645
  br label %do.cond.34, !dbg !5646

do.cond.34:                                       ; preds = %do.body.31
  br label %do.end.35, !dbg !5647

do.end.35:                                        ; preds = %do.cond.34
  %34 = load %struct._object*, %struct._object** %res, align 8, !dbg !5649, !tbaa !1458
  store %struct._object* %34, %struct._object** %retval, !dbg !5650
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5650

cleanup:                                          ; preds = %do.end.35, %if.then.11, %if.then.4, %if.end
  %35 = bitcast %struct._object** %res to i8*, !dbg !5651
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !5651
  %36 = bitcast i64* %n to i8*, !dbg !5651
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !5651
  %37 = load %struct._object*, %struct._object** %retval, !dbg !5651
  ret %struct._object* %37, !dbg !5651
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_read1(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %have = alloca i64, align 8
  %r = alloca i64, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp55 = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1004, metadata !1450), !dbg !5652
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1005, metadata !1450), !dbg !5653
  %0 = bitcast i64* %n to i8*, !dbg !5654
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5654
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1006, metadata !1450), !dbg !5655
  %1 = bitcast i64* %have to i8*, !dbg !5654
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5654
  call void @llvm.dbg.declare(metadata i64* %have, metadata !1007, metadata !1450), !dbg !5656
  %2 = bitcast i64* %r to i8*, !dbg !5654
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5654
  call void @llvm.dbg.declare(metadata i64* %r, metadata !1008, metadata !1450), !dbg !5657
  %3 = bitcast %struct._object** %res to i8*, !dbg !5658
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5658
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1009, metadata !1450), !dbg !5659
  store %struct._object* null, %struct._object** %res, align 8, !dbg !5659, !tbaa !1458
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5660, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 2, !dbg !5662
  %5 = load i32, i32* %ok, align 4, !dbg !5662, !tbaa !1660
  %cmp = icmp sle i32 %5, 0, !dbg !5663
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !5664

if.then:                                          ; preds = %entry
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5665, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 3, !dbg !5669
  %7 = load i32, i32* %detached, align 4, !dbg !5669, !tbaa !2019
  %tobool = icmp ne i32 %7, 0, !dbg !5670
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !5671

if.then.1:                                        ; preds = %if.then
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5672, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !5675
  br label %if.end, !dbg !5676

if.else:                                          ; preds = %if.then
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5677, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !5680
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !5681
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5683

if.end.2:                                         ; preds = %entry
  %10 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5684, !tbaa !1458
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i64* %n), !dbg !5686
  %tobool3 = icmp ne i32 %call, 0, !dbg !5686
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !5687

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !5688
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5688

if.end.5:                                         ; preds = %if.end.2
  %11 = load i64, i64* %n, align 8, !dbg !5690, !tbaa !2140
  %cmp6 = icmp slt i64 %11, 0, !dbg !5692
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !5693

if.then.7:                                        ; preds = %if.end.5
  %12 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5694, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i32 0, i32 0)), !dbg !5696
  store %struct._object* null, %struct._object** %retval, !dbg !5697
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5697

if.end.8:                                         ; preds = %if.end.5
  %13 = load i64, i64* %n, align 8, !dbg !5698, !tbaa !2140
  %cmp9 = icmp eq i64 %13, 0, !dbg !5700
  br i1 %cmp9, label %if.then.10, label %if.end.12, !dbg !5701

if.then.10:                                       ; preds = %if.end.8
  %call11 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 0), !dbg !5702
  store %struct._object* %call11, %struct._object** %retval, !dbg !5703
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5703

if.end.12:                                        ; preds = %if.end.8
  %14 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5704, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %14, i32 0, i32 4, !dbg !5705
  %15 = load i32, i32* %readable, align 4, !dbg !5705, !tbaa !2223
  %tobool13 = icmp ne i32 %15, 0, !dbg !5704
  br i1 %tobool13, label %land.lhs.true, label %cond.false, !dbg !5706

land.lhs.true:                                    ; preds = %if.end.12
  %16 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5707, !tbaa !1458
  %readable14 = getelementptr inbounds %struct.buffered, %struct.buffered* %16, i32 0, i32 4, !dbg !5709
  %17 = load i32, i32* %readable14, align 4, !dbg !5709, !tbaa !2223
  %tobool15 = icmp ne i32 %17, 0, !dbg !5710
  br i1 %tobool15, label %land.lhs.true.16, label %cond.false, !dbg !5711

land.lhs.true.16:                                 ; preds = %land.lhs.true
  %18 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5712, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %18, i32 0, i32 12, !dbg !5714
  %19 = load i64, i64* %read_end, align 8, !dbg !5714, !tbaa !3164
  %cmp17 = icmp ne i64 %19, -1, !dbg !5715
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !5716

cond.true:                                        ; preds = %land.lhs.true.16
  %20 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5717, !tbaa !1458
  %read_end18 = getelementptr inbounds %struct.buffered, %struct.buffered* %20, i32 0, i32 12, !dbg !5719
  %21 = load i64, i64* %read_end18, align 8, !dbg !5719, !tbaa !3164
  %22 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5720, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %22, i32 0, i32 10, !dbg !5721
  %23 = load i64, i64* %pos, align 8, !dbg !5721, !tbaa !2357
  %sub = sub i64 %21, %23, !dbg !5722
  br label %cond.end, !dbg !5716

cond.false:                                       ; preds = %land.lhs.true.16, %land.lhs.true, %if.end.12
  br label %cond.end, !dbg !5723

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !5716
  store i64 %cond, i64* %have, align 8, !dbg !5727, !tbaa !2140
  %24 = load i64, i64* %have, align 8, !dbg !5730, !tbaa !2140
  %cmp19 = icmp sgt i64 %24, 0, !dbg !5732
  br i1 %cmp19, label %if.then.20, label %if.end.27, !dbg !5733

if.then.20:                                       ; preds = %cond.end
  %25 = load i64, i64* %have, align 8, !dbg !5734, !tbaa !2140
  %26 = load i64, i64* %n, align 8, !dbg !5736, !tbaa !2140
  %cmp21 = icmp sgt i64 %25, %26, !dbg !5737
  br i1 %cmp21, label %cond.true.22, label %cond.false.23, !dbg !5738

cond.true.22:                                     ; preds = %if.then.20
  %27 = load i64, i64* %n, align 8, !dbg !5739, !tbaa !2140
  br label %cond.end.24, !dbg !5738

cond.false.23:                                    ; preds = %if.then.20
  %28 = load i64, i64* %have, align 8, !dbg !5741, !tbaa !2140
  br label %cond.end.24, !dbg !5738

cond.end.24:                                      ; preds = %cond.false.23, %cond.true.22
  %cond25 = phi i64 [ %27, %cond.true.22 ], [ %28, %cond.false.23 ], !dbg !5738
  store i64 %cond25, i64* %n, align 8, !dbg !5743, !tbaa !2140
  %29 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5746, !tbaa !1458
  %30 = load i64, i64* %n, align 8, !dbg !5747, !tbaa !2140
  %call26 = call %struct._object* @_bufferedreader_read_fast(%struct.buffered* %29, i64 %30), !dbg !5748
  store %struct._object* %call26, %struct._object** %res, align 8, !dbg !5749, !tbaa !1458
  %31 = load %struct._object*, %struct._object** %res, align 8, !dbg !5750, !tbaa !1458
  store %struct._object* %31, %struct._object** %retval, !dbg !5751
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5751

if.end.27:                                        ; preds = %cond.end
  %32 = load i64, i64* %n, align 8, !dbg !5752, !tbaa !2140
  %call28 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %32), !dbg !5753
  store %struct._object* %call28, %struct._object** %res, align 8, !dbg !5754, !tbaa !1458
  %33 = load %struct._object*, %struct._object** %res, align 8, !dbg !5755, !tbaa !1458
  %cmp29 = icmp eq %struct._object* %33, null, !dbg !5757
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !5758

if.then.30:                                       ; preds = %if.end.27
  store %struct._object* null, %struct._object** %retval, !dbg !5759
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5759

if.end.31:                                        ; preds = %if.end.27
  %34 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5760, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %34, i32 0, i32 15, !dbg !5761
  %35 = load i8*, i8** %lock, align 8, !dbg !5761, !tbaa !1730
  %call32 = call i32 @PyThread_acquire_lock(i8* %35, i32 0), !dbg !5762
  %tobool33 = icmp ne i32 %call32, 0, !dbg !5762
  br i1 %tobool33, label %cond.true.34, label %cond.false.35, !dbg !5763

cond.true.34:                                     ; preds = %if.end.31
  br i1 true, label %land.lhs.true.38, label %if.then.40, !dbg !5764

cond.false.35:                                    ; preds = %if.end.31
  %36 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5766, !tbaa !1458
  %call36 = call i32 @_enter_buffered_busy(%struct.buffered* %36), !dbg !5768
  %tobool37 = icmp ne i32 %call36, 0, !dbg !5768
  br i1 %tobool37, label %land.lhs.true.38, label %if.then.40, !dbg !5763

land.lhs.true.38:                                 ; preds = %cond.false.35, %cond.true.34
  %call39 = call i64 @PyThread_get_thread_ident(), !dbg !5769
  %37 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5772, !tbaa !1458
  %owner = getelementptr inbounds %struct.buffered, %struct.buffered* %37, i32 0, i32 16, !dbg !5773
  store volatile i64 %call39, i64* %owner, align 8, !dbg !5774, !tbaa !3261
  br i1 true, label %if.end.45, label %if.then.40, !dbg !5775

if.then.40:                                       ; preds = %land.lhs.true.38, %cond.false.35, %cond.true.34
  br label %do.body, !dbg !5776

do.body:                                          ; preds = %if.then.40
  %38 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5777
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !5777
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1010, metadata !1450), !dbg !5779
  %39 = load %struct._object*, %struct._object** %res, align 8, !dbg !5780, !tbaa !1458
  store %struct._object* %39, %struct._object** %_py_decref_tmp, align 8, !dbg !5779, !tbaa !1458
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5781, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !5783
  %41 = load i64, i64* %ob_refcnt, align 8, !dbg !5784, !tbaa !1501
  %dec = add i64 %41, -1, !dbg !5784
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5784, !tbaa !1501
  %cmp41 = icmp ne i64 %dec, 0, !dbg !5785
  br i1 %cmp41, label %if.then.42, label %if.else.43, !dbg !5786

if.then.42:                                       ; preds = %do.body
  br label %if.end.44, !dbg !5787

if.else.43:                                       ; preds = %do.body
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5789, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !5791
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5791, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !5792
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5792, !tbaa !1511
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5793, !tbaa !1458
  call void %44(%struct._object* %45), !dbg !5794
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.43, %if.then.42
  %46 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5795
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !5795
  br label %do.cond, !dbg !5797

do.cond:                                          ; preds = %if.end.44
  br label %do.end, !dbg !5798

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !5800
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5800

if.end.45:                                        ; preds = %land.lhs.true.38
  %47 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5801, !tbaa !1458
  call void @_bufferedreader_reset_buf(%struct.buffered* %47), !dbg !5802
  %48 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5803, !tbaa !1458
  %49 = load %struct._object*, %struct._object** %res, align 8, !dbg !5804, !tbaa !1458
  %50 = bitcast %struct._object* %49 to %struct.PyBytesObject*, !dbg !5805
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %50, i32 0, i32 2, !dbg !5806
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !5807
  %51 = load i64, i64* %n, align 8, !dbg !5808, !tbaa !2140
  %call46 = call i64 @_bufferedreader_raw_read(%struct.buffered* %48, i8* %arraydecay, i64 %51), !dbg !5809
  store i64 %call46, i64* %r, align 8, !dbg !5810, !tbaa !2140
  br label %do.body.47, !dbg !5811

do.body.47:                                       ; preds = %if.end.45
  %52 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5812, !tbaa !1458
  %owner48 = getelementptr inbounds %struct.buffered, %struct.buffered* %52, i32 0, i32 16, !dbg !5815
  store volatile i64 0, i64* %owner48, align 8, !dbg !5816, !tbaa !3261
  %53 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5817, !tbaa !1458
  %lock49 = getelementptr inbounds %struct.buffered, %struct.buffered* %53, i32 0, i32 15, !dbg !5818
  %54 = load i8*, i8** %lock49, align 8, !dbg !5818, !tbaa !1730
  call void @PyThread_release_lock(i8* %54), !dbg !5819
  br label %do.cond.50, !dbg !5820

do.cond.50:                                       ; preds = %do.body.47
  br label %do.end.51, !dbg !5821

do.end.51:                                        ; preds = %do.cond.50
  %55 = load i64, i64* %r, align 8, !dbg !5823, !tbaa !2140
  %cmp52 = icmp eq i64 %55, -1, !dbg !5824
  br i1 %cmp52, label %if.then.53, label %if.end.66, !dbg !5825

if.then.53:                                       ; preds = %do.end.51
  br label %do.body.54, !dbg !5826

do.body.54:                                       ; preds = %if.then.53
  %56 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !5827
  call void @llvm.lifetime.start(i64 8, i8* %56) #1, !dbg !5827
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp55, metadata !1014, metadata !1450), !dbg !5829
  %57 = load %struct._object*, %struct._object** %res, align 8, !dbg !5830, !tbaa !1458
  store %struct._object* %57, %struct._object** %_py_decref_tmp55, align 8, !dbg !5829, !tbaa !1458
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !5831, !tbaa !1458
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 0, !dbg !5833
  %59 = load i64, i64* %ob_refcnt56, align 8, !dbg !5834, !tbaa !1501
  %dec57 = add i64 %59, -1, !dbg !5834
  store i64 %dec57, i64* %ob_refcnt56, align 8, !dbg !5834, !tbaa !1501
  %cmp58 = icmp ne i64 %dec57, 0, !dbg !5835
  br i1 %cmp58, label %if.then.59, label %if.else.60, !dbg !5836

if.then.59:                                       ; preds = %do.body.54
  br label %if.end.63, !dbg !5837

if.else.60:                                       ; preds = %do.body.54
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !5839, !tbaa !1458
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 1, !dbg !5841
  %61 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !5841, !tbaa !1509
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 4, !dbg !5842
  %62 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8, !dbg !5842, !tbaa !1511
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !5843, !tbaa !1458
  call void %62(%struct._object* %63), !dbg !5844
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.59
  %64 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !5845
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !5845
  br label %do.cond.64, !dbg !5847

do.cond.64:                                       ; preds = %if.end.63
  br label %do.end.65, !dbg !5848

do.end.65:                                        ; preds = %do.cond.64
  store %struct._object* null, %struct._object** %retval, !dbg !5850
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5850

if.end.66:                                        ; preds = %do.end.51
  %65 = load i64, i64* %r, align 8, !dbg !5851, !tbaa !2140
  %cmp67 = icmp eq i64 %65, -2, !dbg !5853
  br i1 %cmp67, label %if.then.68, label %if.end.69, !dbg !5854

if.then.68:                                       ; preds = %if.end.66
  store i64 0, i64* %r, align 8, !dbg !5855, !tbaa !2140
  br label %if.end.69, !dbg !5856

if.end.69:                                        ; preds = %if.then.68, %if.end.66
  %66 = load i64, i64* %n, align 8, !dbg !5857, !tbaa !2140
  %67 = load i64, i64* %r, align 8, !dbg !5859, !tbaa !2140
  %cmp70 = icmp sgt i64 %66, %67, !dbg !5860
  br i1 %cmp70, label %if.then.71, label %if.end.73, !dbg !5861

if.then.71:                                       ; preds = %if.end.69
  %68 = load i64, i64* %r, align 8, !dbg !5862, !tbaa !2140
  %call72 = call i32 @_PyBytes_Resize(%struct._object** %res, i64 %68), !dbg !5863
  br label %if.end.73, !dbg !5863

if.end.73:                                        ; preds = %if.then.71, %if.end.69
  %69 = load %struct._object*, %struct._object** %res, align 8, !dbg !5864, !tbaa !1458
  store %struct._object* %69, %struct._object** %retval, !dbg !5865
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5865

cleanup:                                          ; preds = %if.end.73, %do.end.65, %do.end, %if.then.30, %cond.end.24, %if.then.10, %if.then.7, %if.then.4, %if.end
  %70 = bitcast %struct._object** %res to i8*, !dbg !5866
  call void @llvm.lifetime.end(i64 8, i8* %70) #1, !dbg !5866
  %71 = bitcast i64* %r to i8*, !dbg !5866
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !5866
  %72 = bitcast i64* %have to i8*, !dbg !5866
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !5866
  %73 = bitcast i64* %n to i8*, !dbg !5866
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !5866
  %74 = load %struct._object*, %struct._object** %retval, !dbg !5866
  ret %struct._object* %74, !dbg !5866
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_readinto(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %buf = alloca %struct.bufferinfo, align 8
  %n = alloca i64, align 8
  %written = alloca i64, align 8
  %remaining = alloca i64, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1020, metadata !1450), !dbg !5867
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1021, metadata !1450), !dbg !5868
  %0 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !5869
  call void @llvm.lifetime.start(i64 80, i8* %0) #1, !dbg !5869
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %buf, metadata !1022, metadata !1450), !dbg !5870
  %1 = bitcast i64* %n to i8*, !dbg !5871
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5871
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1023, metadata !1450), !dbg !5872
  %2 = bitcast i64* %written to i8*, !dbg !5871
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5871
  call void @llvm.dbg.declare(metadata i64* %written, metadata !1024, metadata !1450), !dbg !5873
  store i64 0, i64* %written, align 8, !dbg !5873, !tbaa !2140
  %3 = bitcast i64* %remaining to i8*, !dbg !5871
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5871
  call void @llvm.dbg.declare(metadata i64* %remaining, metadata !1025, metadata !1450), !dbg !5874
  %4 = bitcast %struct._object** %res to i8*, !dbg !5875
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !5875
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1026, metadata !1450), !dbg !5876
  store %struct._object* null, %struct._object** %res, align 8, !dbg !5876, !tbaa !1458
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5877, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 2, !dbg !5879
  %6 = load i32, i32* %ok, align 4, !dbg !5879, !tbaa !1660
  %cmp = icmp sle i32 %6, 0, !dbg !5880
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !5881

if.then:                                          ; preds = %entry
  %7 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5882, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %7, i32 0, i32 3, !dbg !5886
  %8 = load i32, i32* %detached, align 4, !dbg !5886, !tbaa !2019
  %tobool = icmp ne i32 %8, 0, !dbg !5887
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !5888

if.then.1:                                        ; preds = %if.then
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5889, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !5892
  br label %if.end, !dbg !5893

if.else:                                          ; preds = %if.then
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5894, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !5897
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !5898
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5900

if.end.2:                                         ; preds = %entry
  %11 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5901, !tbaa !1458
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), %struct.bufferinfo* %buf), !dbg !5903
  %tobool3 = icmp ne i32 %call, 0, !dbg !5903
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !5904

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !5905
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5905

if.end.5:                                         ; preds = %if.end.2
  %12 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5906, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %12, i32 0, i32 4, !dbg !5907
  %13 = load i32, i32* %readable, align 4, !dbg !5907, !tbaa !2223
  %tobool6 = icmp ne i32 %13, 0, !dbg !5906
  br i1 %tobool6, label %land.lhs.true, label %cond.false, !dbg !5908

land.lhs.true:                                    ; preds = %if.end.5
  %14 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5909, !tbaa !1458
  %readable7 = getelementptr inbounds %struct.buffered, %struct.buffered* %14, i32 0, i32 4, !dbg !5911
  %15 = load i32, i32* %readable7, align 4, !dbg !5911, !tbaa !2223
  %tobool8 = icmp ne i32 %15, 0, !dbg !5912
  br i1 %tobool8, label %land.lhs.true.9, label %cond.false, !dbg !5913

land.lhs.true.9:                                  ; preds = %land.lhs.true
  %16 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5914, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %16, i32 0, i32 12, !dbg !5916
  %17 = load i64, i64* %read_end, align 8, !dbg !5916, !tbaa !3164
  %cmp10 = icmp ne i64 %17, -1, !dbg !5917
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !5918

cond.true:                                        ; preds = %land.lhs.true.9
  %18 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5919, !tbaa !1458
  %read_end11 = getelementptr inbounds %struct.buffered, %struct.buffered* %18, i32 0, i32 12, !dbg !5921
  %19 = load i64, i64* %read_end11, align 8, !dbg !5921, !tbaa !3164
  %20 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5922, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %20, i32 0, i32 10, !dbg !5923
  %21 = load i64, i64* %pos, align 8, !dbg !5923, !tbaa !2357
  %sub = sub i64 %19, %21, !dbg !5924
  br label %cond.end, !dbg !5918

cond.false:                                       ; preds = %land.lhs.true.9, %land.lhs.true, %if.end.5
  br label %cond.end, !dbg !5925

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !5918
  store i64 %cond, i64* %n, align 8, !dbg !5929, !tbaa !2140
  %22 = load i64, i64* %n, align 8, !dbg !5932, !tbaa !2140
  %cmp12 = icmp sgt i64 %22, 0, !dbg !5934
  br i1 %cmp12, label %if.then.13, label %if.end.30, !dbg !5935

if.then.13:                                       ; preds = %cond.end
  %23 = load i64, i64* %n, align 8, !dbg !5936, !tbaa !2140
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !5939
  %24 = load i64, i64* %len, align 8, !dbg !5939, !tbaa !2985
  %cmp14 = icmp sge i64 %23, %24, !dbg !5940
  br i1 %cmp14, label %if.then.15, label %if.end.23, !dbg !5941

if.then.15:                                       ; preds = %if.then.13
  %buf16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !5942
  %25 = load i8*, i8** %buf16, align 8, !dbg !5942, !tbaa !3065
  %26 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5944, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %26, i32 0, i32 9, !dbg !5945
  %27 = load i8*, i8** %buffer, align 8, !dbg !5945, !tbaa !1717
  %28 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5946, !tbaa !1458
  %pos17 = getelementptr inbounds %struct.buffered, %struct.buffered* %28, i32 0, i32 10, !dbg !5947
  %29 = load i64, i64* %pos17, align 8, !dbg !5947, !tbaa !2357
  %add.ptr = getelementptr i8, i8* %27, i64 %29, !dbg !5948
  %len18 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !5949
  %30 = load i64, i64* %len18, align 8, !dbg !5949, !tbaa !2985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %add.ptr, i64 %30, i32 1, i1 false), !dbg !5950
  %len19 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !5951
  %31 = load i64, i64* %len19, align 8, !dbg !5951, !tbaa !2985
  %32 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5952, !tbaa !1458
  %pos20 = getelementptr inbounds %struct.buffered, %struct.buffered* %32, i32 0, i32 10, !dbg !5953
  %33 = load i64, i64* %pos20, align 8, !dbg !5954, !tbaa !2357
  %add = add i64 %33, %31, !dbg !5954
  store i64 %add, i64* %pos20, align 8, !dbg !5954, !tbaa !2357
  %len21 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !5955
  %34 = load i64, i64* %len21, align 8, !dbg !5955, !tbaa !2985
  %call22 = call %struct._object* @PyLong_FromSsize_t(i64 %34), !dbg !5956
  store %struct._object* %call22, %struct._object** %res, align 8, !dbg !5957, !tbaa !1458
  br label %end_unlocked, !dbg !5958

if.end.23:                                        ; preds = %if.then.13
  %buf24 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !5959
  %35 = load i8*, i8** %buf24, align 8, !dbg !5959, !tbaa !3065
  %36 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5960, !tbaa !1458
  %buffer25 = getelementptr inbounds %struct.buffered, %struct.buffered* %36, i32 0, i32 9, !dbg !5961
  %37 = load i8*, i8** %buffer25, align 8, !dbg !5961, !tbaa !1717
  %38 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5962, !tbaa !1458
  %pos26 = getelementptr inbounds %struct.buffered, %struct.buffered* %38, i32 0, i32 10, !dbg !5963
  %39 = load i64, i64* %pos26, align 8, !dbg !5963, !tbaa !2357
  %add.ptr27 = getelementptr i8, i8* %37, i64 %39, !dbg !5964
  %40 = load i64, i64* %n, align 8, !dbg !5965, !tbaa !2140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %add.ptr27, i64 %40, i32 1, i1 false), !dbg !5966
  %41 = load i64, i64* %n, align 8, !dbg !5967, !tbaa !2140
  %42 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5968, !tbaa !1458
  %pos28 = getelementptr inbounds %struct.buffered, %struct.buffered* %42, i32 0, i32 10, !dbg !5969
  %43 = load i64, i64* %pos28, align 8, !dbg !5970, !tbaa !2357
  %add29 = add i64 %43, %41, !dbg !5970
  store i64 %add29, i64* %pos28, align 8, !dbg !5970, !tbaa !2357
  %44 = load i64, i64* %n, align 8, !dbg !5971, !tbaa !2140
  store i64 %44, i64* %written, align 8, !dbg !5972, !tbaa !2140
  br label %if.end.30, !dbg !5973

if.end.30:                                        ; preds = %if.end.23, %cond.end
  %45 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5974, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %45, i32 0, i32 15, !dbg !5976
  %46 = load i8*, i8** %lock, align 8, !dbg !5976, !tbaa !1730
  %call31 = call i32 @PyThread_acquire_lock(i8* %46, i32 0), !dbg !5977
  %tobool32 = icmp ne i32 %call31, 0, !dbg !5977
  br i1 %tobool32, label %cond.true.33, label %cond.false.34, !dbg !5978

cond.true.33:                                     ; preds = %if.end.30
  br i1 true, label %land.lhs.true.37, label %if.then.39, !dbg !5979

cond.false.34:                                    ; preds = %if.end.30
  %47 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5981, !tbaa !1458
  %call35 = call i32 @_enter_buffered_busy(%struct.buffered* %47), !dbg !5983
  %tobool36 = icmp ne i32 %call35, 0, !dbg !5983
  br i1 %tobool36, label %land.lhs.true.37, label %if.then.39, !dbg !5978

land.lhs.true.37:                                 ; preds = %cond.false.34, %cond.true.33
  %call38 = call i64 @PyThread_get_thread_ident(), !dbg !5984
  %48 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5987, !tbaa !1458
  %owner = getelementptr inbounds %struct.buffered, %struct.buffered* %48, i32 0, i32 16, !dbg !5988
  store volatile i64 %call38, i64* %owner, align 8, !dbg !5989, !tbaa !3261
  br i1 true, label %if.end.40, label %if.then.39, !dbg !5990

if.then.39:                                       ; preds = %land.lhs.true.37, %cond.false.34, %cond.true.33
  br label %end_unlocked, !dbg !5991

if.end.40:                                        ; preds = %land.lhs.true.37
  %49 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5992, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %49, i32 0, i32 5, !dbg !5993
  %50 = load i32, i32* %writable, align 4, !dbg !5993, !tbaa !2227
  %tobool41 = icmp ne i32 %50, 0, !dbg !5992
  br i1 %tobool41, label %if.then.42, label %if.end.57, !dbg !5994

if.then.42:                                       ; preds = %if.end.40
  %51 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !5995, !tbaa !1458
  %call43 = call %struct._object* @buffered_flush_and_rewind_unlocked(%struct.buffered* %51), !dbg !5996
  store %struct._object* %call43, %struct._object** %res, align 8, !dbg !5997, !tbaa !1458
  %52 = load %struct._object*, %struct._object** %res, align 8, !dbg !5998, !tbaa !1458
  %cmp44 = icmp eq %struct._object* %52, null, !dbg !6000
  br i1 %cmp44, label %if.then.45, label %if.end.46, !dbg !6001

if.then.45:                                       ; preds = %if.then.42
  br label %end, !dbg !6002

if.end.46:                                        ; preds = %if.then.42
  br label %do.body, !dbg !6003

do.body:                                          ; preds = %if.end.46
  %53 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6004
  call void @llvm.lifetime.start(i64 8, i8* %53) #1, !dbg !6004
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1027, metadata !1450), !dbg !6006
  %54 = load %struct._object*, %struct._object** %res, align 8, !dbg !6007, !tbaa !1458
  store %struct._object* %54, %struct._object** %_py_tmp, align 8, !dbg !6006, !tbaa !1458
  %55 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6008, !tbaa !1458
  %cmp47 = icmp ne %struct._object* %55, null, !dbg !6009
  br i1 %cmp47, label %if.then.48, label %if.end.54, !dbg !6010

if.then.48:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %res, align 8, !dbg !6011, !tbaa !1458
  br label %do.body.49, !dbg !6013

do.body.49:                                       ; preds = %if.then.48
  %56 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6014
  call void @llvm.lifetime.start(i64 8, i8* %56) #1, !dbg !6014
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1031, metadata !1450), !dbg !6016
  %57 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6017, !tbaa !1458
  store %struct._object* %57, %struct._object** %_py_decref_tmp, align 8, !dbg !6016, !tbaa !1458
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6018, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 0, !dbg !6020
  %59 = load i64, i64* %ob_refcnt, align 8, !dbg !6021, !tbaa !1501
  %dec = add i64 %59, -1, !dbg !6021
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6021, !tbaa !1501
  %cmp50 = icmp ne i64 %dec, 0, !dbg !6022
  br i1 %cmp50, label %if.then.51, label %if.else.52, !dbg !6023

if.then.51:                                       ; preds = %do.body.49
  br label %if.end.53, !dbg !6024

if.else.52:                                       ; preds = %do.body.49
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6026, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 1, !dbg !6028
  %61 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6028, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 4, !dbg !6029
  %62 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6029, !tbaa !1511
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6030, !tbaa !1458
  call void %62(%struct._object* %63), !dbg !6031
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.52, %if.then.51
  %64 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6032
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !6032
  br label %do.cond, !dbg !6034

do.cond:                                          ; preds = %if.end.53
  br label %do.end, !dbg !6035

do.end:                                           ; preds = %do.cond
  br label %if.end.54, !dbg !6037

if.end.54:                                        ; preds = %do.end, %do.body
  %65 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6039
  call void @llvm.lifetime.end(i64 8, i8* %65) #1, !dbg !6039
  br label %do.cond.55, !dbg !6042

do.cond.55:                                       ; preds = %if.end.54
  br label %do.end.56, !dbg !6043

do.end.56:                                        ; preds = %do.cond.55
  br label %if.end.57, !dbg !6045

if.end.57:                                        ; preds = %do.end.56, %if.end.40
  %66 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6046, !tbaa !1458
  call void @_bufferedreader_reset_buf(%struct.buffered* %66), !dbg !6047
  %67 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6048, !tbaa !1458
  %pos58 = getelementptr inbounds %struct.buffered, %struct.buffered* %67, i32 0, i32 10, !dbg !6049
  store i64 0, i64* %pos58, align 8, !dbg !6050, !tbaa !2357
  %len59 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !6051
  %68 = load i64, i64* %len59, align 8, !dbg !6051, !tbaa !2985
  %69 = load i64, i64* %written, align 8, !dbg !6053, !tbaa !2140
  %sub60 = sub i64 %68, %69, !dbg !6054
  store i64 %sub60, i64* %remaining, align 8, !dbg !6055, !tbaa !2140
  br label %for.cond, !dbg !6056

for.cond:                                         ; preds = %for.inc, %if.end.57
  %70 = load i64, i64* %remaining, align 8, !dbg !6057, !tbaa !2140
  %cmp61 = icmp sgt i64 %70, 0, !dbg !6059
  br i1 %cmp61, label %for.body, label %for.end, !dbg !6060

for.body:                                         ; preds = %for.cond
  %71 = load i64, i64* %remaining, align 8, !dbg !6061, !tbaa !2140
  %72 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6064, !tbaa !1458
  %buffer_size = getelementptr inbounds %struct.buffered, %struct.buffered* %72, i32 0, i32 17, !dbg !6065
  %73 = load i64, i64* %buffer_size, align 8, !dbg !6065, !tbaa !2219
  %cmp62 = icmp sgt i64 %71, %73, !dbg !6066
  br i1 %cmp62, label %if.then.63, label %if.else.67, !dbg !6067

if.then.63:                                       ; preds = %for.body
  %74 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6068, !tbaa !1458
  %buf64 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !6070
  %75 = load i8*, i8** %buf64, align 8, !dbg !6070, !tbaa !3065
  %76 = load i64, i64* %written, align 8, !dbg !6071, !tbaa !2140
  %add.ptr65 = getelementptr i8, i8* %75, i64 %76, !dbg !6072
  %77 = load i64, i64* %remaining, align 8, !dbg !6073, !tbaa !2140
  %call66 = call i64 @_bufferedreader_raw_read(%struct.buffered* %74, i8* %add.ptr65, i64 %77), !dbg !6074
  store i64 %call66, i64* %n, align 8, !dbg !6075, !tbaa !2140
  br label %if.end.82, !dbg !6076

if.else.67:                                       ; preds = %for.body
  %78 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6077, !tbaa !1458
  %call68 = call i64 @_bufferedreader_fill_buffer(%struct.buffered* %78), !dbg !6079
  store i64 %call68, i64* %n, align 8, !dbg !6080, !tbaa !2140
  %79 = load i64, i64* %n, align 8, !dbg !6081, !tbaa !2140
  %cmp69 = icmp sgt i64 %79, 0, !dbg !6083
  br i1 %cmp69, label %if.then.70, label %if.end.81, !dbg !6084

if.then.70:                                       ; preds = %if.else.67
  %80 = load i64, i64* %n, align 8, !dbg !6085, !tbaa !2140
  %81 = load i64, i64* %remaining, align 8, !dbg !6088, !tbaa !2140
  %cmp71 = icmp sgt i64 %80, %81, !dbg !6089
  br i1 %cmp71, label %if.then.72, label %if.end.73, !dbg !6090

if.then.72:                                       ; preds = %if.then.70
  %82 = load i64, i64* %remaining, align 8, !dbg !6091, !tbaa !2140
  store i64 %82, i64* %n, align 8, !dbg !6092, !tbaa !2140
  br label %if.end.73, !dbg !6093

if.end.73:                                        ; preds = %if.then.72, %if.then.70
  %buf74 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !6094
  %83 = load i8*, i8** %buf74, align 8, !dbg !6094, !tbaa !3065
  %84 = load i64, i64* %written, align 8, !dbg !6095, !tbaa !2140
  %add.ptr75 = getelementptr i8, i8* %83, i64 %84, !dbg !6096
  %85 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6097, !tbaa !1458
  %buffer76 = getelementptr inbounds %struct.buffered, %struct.buffered* %85, i32 0, i32 9, !dbg !6098
  %86 = load i8*, i8** %buffer76, align 8, !dbg !6098, !tbaa !1717
  %87 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6099, !tbaa !1458
  %pos77 = getelementptr inbounds %struct.buffered, %struct.buffered* %87, i32 0, i32 10, !dbg !6100
  %88 = load i64, i64* %pos77, align 8, !dbg !6100, !tbaa !2357
  %add.ptr78 = getelementptr i8, i8* %86, i64 %88, !dbg !6101
  %89 = load i64, i64* %n, align 8, !dbg !6102, !tbaa !2140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr75, i8* %add.ptr78, i64 %89, i32 1, i1 false), !dbg !6103
  %90 = load i64, i64* %n, align 8, !dbg !6104, !tbaa !2140
  %91 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6105, !tbaa !1458
  %pos79 = getelementptr inbounds %struct.buffered, %struct.buffered* %91, i32 0, i32 10, !dbg !6106
  %92 = load i64, i64* %pos79, align 8, !dbg !6107, !tbaa !2357
  %add80 = add i64 %92, %90, !dbg !6107
  store i64 %add80, i64* %pos79, align 8, !dbg !6107, !tbaa !2357
  br label %for.inc, !dbg !6108

if.end.81:                                        ; preds = %if.else.67
  br label %if.end.82

if.end.82:                                        ; preds = %if.end.81, %if.then.63
  %93 = load i64, i64* %n, align 8, !dbg !6109, !tbaa !2140
  %cmp83 = icmp eq i64 %93, 0, !dbg !6111
  br i1 %cmp83, label %if.then.87, label %lor.lhs.false, !dbg !6112

lor.lhs.false:                                    ; preds = %if.end.82
  %94 = load i64, i64* %n, align 8, !dbg !6113, !tbaa !2140
  %cmp84 = icmp eq i64 %94, -2, !dbg !6115
  br i1 %cmp84, label %land.lhs.true.85, label %if.end.88, !dbg !6116

land.lhs.true.85:                                 ; preds = %lor.lhs.false
  %95 = load i64, i64* %written, align 8, !dbg !6117, !tbaa !2140
  %cmp86 = icmp sgt i64 %95, 0, !dbg !6119
  br i1 %cmp86, label %if.then.87, label %if.end.88, !dbg !6120

if.then.87:                                       ; preds = %land.lhs.true.85, %if.end.82
  br label %for.end, !dbg !6121

if.end.88:                                        ; preds = %land.lhs.true.85, %lor.lhs.false
  %96 = load i64, i64* %n, align 8, !dbg !6122, !tbaa !2140
  %cmp89 = icmp slt i64 %96, 0, !dbg !6124
  br i1 %cmp89, label %if.then.90, label %if.end.94, !dbg !6125

if.then.90:                                       ; preds = %if.end.88
  %97 = load i64, i64* %n, align 8, !dbg !6126, !tbaa !2140
  %cmp91 = icmp eq i64 %97, -2, !dbg !6129
  br i1 %cmp91, label %if.then.92, label %if.end.93, !dbg !6130

if.then.92:                                       ; preds = %if.then.90
  %98 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6131, !tbaa !1501
  %inc = add i64 %98, 1, !dbg !6131
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6131, !tbaa !1501
  store %struct._object* @_Py_NoneStruct, %struct._object** %res, align 8, !dbg !6133, !tbaa !1458
  br label %if.end.93, !dbg !6134

if.end.93:                                        ; preds = %if.then.92, %if.then.90
  br label %end, !dbg !6135

if.end.94:                                        ; preds = %if.end.88
  br label %for.inc, !dbg !6136

for.inc:                                          ; preds = %if.end.94, %if.end.73
  %99 = load i64, i64* %n, align 8, !dbg !6137, !tbaa !2140
  %100 = load i64, i64* %written, align 8, !dbg !6138, !tbaa !2140
  %add95 = add i64 %100, %99, !dbg !6138
  store i64 %add95, i64* %written, align 8, !dbg !6138, !tbaa !2140
  %101 = load i64, i64* %n, align 8, !dbg !6139, !tbaa !2140
  %102 = load i64, i64* %remaining, align 8, !dbg !6140, !tbaa !2140
  %sub96 = sub i64 %102, %101, !dbg !6140
  store i64 %sub96, i64* %remaining, align 8, !dbg !6140, !tbaa !2140
  br label %for.cond, !dbg !6141

for.end:                                          ; preds = %if.then.87, %for.cond
  %103 = load i64, i64* %written, align 8, !dbg !6142, !tbaa !2140
  %call97 = call %struct._object* @PyLong_FromSsize_t(i64 %103), !dbg !6143
  store %struct._object* %call97, %struct._object** %res, align 8, !dbg !6144, !tbaa !1458
  br label %end, !dbg !6145

end:                                              ; preds = %for.end, %if.end.93, %if.then.45
  br label %do.body.98, !dbg !6146

do.body.98:                                       ; preds = %end
  %104 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6147, !tbaa !1458
  %owner99 = getelementptr inbounds %struct.buffered, %struct.buffered* %104, i32 0, i32 16, !dbg !6150
  store volatile i64 0, i64* %owner99, align 8, !dbg !6151, !tbaa !3261
  %105 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6152, !tbaa !1458
  %lock100 = getelementptr inbounds %struct.buffered, %struct.buffered* %105, i32 0, i32 15, !dbg !6153
  %106 = load i8*, i8** %lock100, align 8, !dbg !6153, !tbaa !1730
  call void @PyThread_release_lock(i8* %106), !dbg !6154
  br label %do.cond.101, !dbg !6155

do.cond.101:                                      ; preds = %do.body.98
  br label %do.end.102, !dbg !6156

do.end.102:                                       ; preds = %do.cond.101
  br label %end_unlocked, !dbg !6158

end_unlocked:                                     ; preds = %do.end.102, %if.then.39, %if.then.15
  call void @PyBuffer_Release(%struct.bufferinfo* %buf), !dbg !6160
  %107 = load %struct._object*, %struct._object** %res, align 8, !dbg !6161, !tbaa !1458
  store %struct._object* %107, %struct._object** %retval, !dbg !6162
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6162

cleanup:                                          ; preds = %end_unlocked, %if.then.4, %if.end
  %108 = bitcast %struct._object** %res to i8*, !dbg !6163
  call void @llvm.lifetime.end(i64 8, i8* %108) #1, !dbg !6163
  %109 = bitcast i64* %remaining to i8*, !dbg !6163
  call void @llvm.lifetime.end(i64 8, i8* %109) #1, !dbg !6163
  %110 = bitcast i64* %written to i8*, !dbg !6163
  call void @llvm.lifetime.end(i64 8, i8* %110) #1, !dbg !6163
  %111 = bitcast i64* %n to i8*, !dbg !6163
  call void @llvm.lifetime.end(i64 8, i8* %111) #1, !dbg !6163
  %112 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !6163
  call void @llvm.lifetime.end(i64 80, i8* %112) #1, !dbg !6163
  %113 = load %struct._object*, %struct._object** %retval, !dbg !6163
  ret %struct._object* %113, !dbg !6163
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_readline(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %limit = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1037, metadata !1450), !dbg !6164
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1038, metadata !1450), !dbg !6165
  %0 = bitcast i64* %limit to i8*, !dbg !6166
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6166
  call void @llvm.dbg.declare(metadata i64* %limit, metadata !1039, metadata !1450), !dbg !6167
  store i64 -1, i64* %limit, align 8, !dbg !6167, !tbaa !2140
  %1 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6168, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %1, i32 0, i32 2, !dbg !6170
  %2 = load i32, i32* %ok, align 4, !dbg !6170, !tbaa !1660
  %cmp = icmp sle i32 %2, 0, !dbg !6171
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !6172

if.then:                                          ; preds = %entry
  %3 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6173, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %3, i32 0, i32 3, !dbg !6177
  %4 = load i32, i32* %detached, align 4, !dbg !6177, !tbaa !2019
  %tobool = icmp ne i32 %4, 0, !dbg !6178
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !6179

if.then.1:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6180, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !6183
  br label %if.end, !dbg !6184

if.else:                                          ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6185, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !6188
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !6189
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6191

if.end.2:                                         ; preds = %entry
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6192, !tbaa !1458
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i32 0, i32 0), i32 (%struct._object*, i8*)* @_PyIO_ConvertSsize_t, i64* %limit), !dbg !6194
  %tobool3 = icmp ne i32 %call, 0, !dbg !6194
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !6195

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !6196
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6196

if.end.5:                                         ; preds = %if.end.2
  %8 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6197, !tbaa !1458
  %9 = load i64, i64* %limit, align 8, !dbg !6198, !tbaa !2140
  %call6 = call %struct._object* @_buffered_readline(%struct.buffered* %8, i64 %9), !dbg !6199
  store %struct._object* %call6, %struct._object** %retval, !dbg !6200
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6200

cleanup:                                          ; preds = %if.end.5, %if.then.4, %if.end
  %10 = bitcast i64* %limit to i8*, !dbg !6201
  call void @llvm.lifetime.end(i64 8, i8* %10) #1, !dbg !6201
  %11 = load %struct._object*, %struct._object** %retval, !dbg !6201
  ret %struct._object* %11, !dbg !6201
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_seek(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %target = alloca i64, align 8
  %n = alloca i64, align 8
  %whence = alloca i32, align 4
  %targetobj = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %current = alloca i64, align 8
  %avail = alloca i64, align 8
  %offset = alloca i64, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1042, metadata !1450), !dbg !6202
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1043, metadata !1450), !dbg !6203
  %0 = bitcast i64* %target to i8*, !dbg !6204
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6204
  call void @llvm.dbg.declare(metadata i64* %target, metadata !1044, metadata !1450), !dbg !6205
  %1 = bitcast i64* %n to i8*, !dbg !6204
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6204
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1045, metadata !1450), !dbg !6206
  %2 = bitcast i32* %whence to i8*, !dbg !6207
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !6207
  call void @llvm.dbg.declare(metadata i32* %whence, metadata !1046, metadata !1450), !dbg !6208
  store i32 0, i32* %whence, align 4, !dbg !6208, !tbaa !1869
  %3 = bitcast %struct._object** %targetobj to i8*, !dbg !6209
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !6209
  call void @llvm.dbg.declare(metadata %struct._object** %targetobj, metadata !1047, metadata !1450), !dbg !6210
  %4 = bitcast %struct._object** %res to i8*, !dbg !6209
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !6209
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1048, metadata !1450), !dbg !6211
  store %struct._object* null, %struct._object** %res, align 8, !dbg !6211, !tbaa !1458
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6212, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 2, !dbg !6214
  %6 = load i32, i32* %ok, align 4, !dbg !6214, !tbaa !1660
  %cmp = icmp sle i32 %6, 0, !dbg !6215
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !6216

if.then:                                          ; preds = %entry
  %7 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6217, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %7, i32 0, i32 3, !dbg !6221
  %8 = load i32, i32* %detached, align 4, !dbg !6221, !tbaa !2019
  %tobool = icmp ne i32 %8, 0, !dbg !6222
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !6223

if.then.1:                                        ; preds = %if.then
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6224, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !6227
  br label %if.end, !dbg !6228

if.else:                                          ; preds = %if.then
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6229, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !6232
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !6233
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.169, !dbg !6235

if.end.2:                                         ; preds = %entry
  %11 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6236, !tbaa !1458
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), %struct._object** %targetobj, i32* %whence), !dbg !6238
  %tobool3 = icmp ne i32 %call, 0, !dbg !6238
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !6239

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !6240
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.169, !dbg !6240

if.end.5:                                         ; preds = %if.end.2
  %12 = load i32, i32* %whence, align 4, !dbg !6242, !tbaa !1869
  %cmp6 = icmp slt i32 %12, 0, !dbg !6244
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false, !dbg !6245

lor.lhs.false:                                    ; preds = %if.end.5
  %13 = load i32, i32* %whence, align 4, !dbg !6246, !tbaa !1869
  %cmp7 = icmp sgt i32 %13, 2, !dbg !6248
  br i1 %cmp7, label %land.lhs.true, label %if.end.13, !dbg !6249

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end.5
  %14 = load i32, i32* %whence, align 4, !dbg !6250, !tbaa !1869
  %cmp8 = icmp ne i32 %14, 4, !dbg !6251
  br i1 %cmp8, label %land.lhs.true.9, label %if.end.13, !dbg !6252

land.lhs.true.9:                                  ; preds = %land.lhs.true
  %15 = load i32, i32* %whence, align 4, !dbg !6253, !tbaa !1869
  %cmp10 = icmp ne i32 %15, 3, !dbg !6254
  br i1 %cmp10, label %if.then.11, label %if.end.13, !dbg !6255

if.then.11:                                       ; preds = %land.lhs.true.9
  %16 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6256, !tbaa !1458
  %17 = load i32, i32* %whence, align 4, !dbg !6258, !tbaa !1869
  %call12 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.53, i32 0, i32 0), i32 %17), !dbg !6259
  store %struct._object* null, %struct._object** %retval, !dbg !6260
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.169, !dbg !6260

if.end.13:                                        ; preds = %land.lhs.true.9, %land.lhs.true, %lor.lhs.false
  %18 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6261, !tbaa !1458
  %fast_closed_checks = getelementptr inbounds %struct.buffered, %struct.buffered* %18, i32 0, i32 7, !dbg !6263
  %19 = load i32, i32* %fast_closed_checks, align 4, !dbg !6263, !tbaa !2249
  %tobool14 = icmp ne i32 %19, 0, !dbg !6261
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !6264

cond.true:                                        ; preds = %if.end.13
  %20 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6265, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %20, i32 0, i32 1, !dbg !6267
  %21 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6267, !tbaa !1676
  %call15 = call i32 @_PyFileIO_closed(%struct._object* %21), !dbg !6268
  %tobool16 = icmp ne i32 %call15, 0, !dbg !6268
  br i1 %tobool16, label %if.then.19, label %if.end.20, !dbg !6261

cond.false:                                       ; preds = %if.end.13
  %22 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6269, !tbaa !1458
  %call17 = call i32 @buffered_closed(%struct.buffered* %22), !dbg !6271
  %tobool18 = icmp ne i32 %call17, 0, !dbg !6271
  br i1 %tobool18, label %if.then.19, label %if.end.20, !dbg !6264

if.then.19:                                       ; preds = %cond.false, %cond.true
  %23 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6272, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i32 0, i32 0)), !dbg !6276
  store %struct._object* null, %struct._object** %retval, !dbg !6277
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.169, !dbg !6277

if.end.20:                                        ; preds = %cond.false, %cond.true
  %24 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6278, !tbaa !1458
  %raw21 = getelementptr inbounds %struct.buffered, %struct.buffered* %24, i32 0, i32 1, !dbg !6280
  %25 = load %struct._object*, %struct._object** %raw21, align 8, !dbg !6280, !tbaa !1676
  %call22 = call %struct._object* @_PyIOBase_check_seekable(%struct._object* %25, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !6281
  %cmp23 = icmp eq %struct._object* %call22, null, !dbg !6282
  br i1 %cmp23, label %if.then.24, label %if.end.25, !dbg !6283

if.then.24:                                       ; preds = %if.end.20
  store %struct._object* null, %struct._object** %retval, !dbg !6284
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.169, !dbg !6284

if.end.25:                                        ; preds = %if.end.20
  %26 = load %struct._object*, %struct._object** %targetobj, align 8, !dbg !6285, !tbaa !1458
  %27 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6286, !tbaa !1458
  %call26 = call i64 @PyNumber_AsOff_t(%struct._object* %26, %struct._object* %27), !dbg !6287
  store i64 %call26, i64* %target, align 8, !dbg !6288, !tbaa !2140
  %28 = load i64, i64* %target, align 8, !dbg !6289, !tbaa !2140
  %cmp27 = icmp eq i64 %28, -1, !dbg !6291
  br i1 %cmp27, label %land.lhs.true.28, label %if.end.32, !dbg !6292

land.lhs.true.28:                                 ; preds = %if.end.25
  %call29 = call %struct._object* @PyErr_Occurred(), !dbg !6293
  %tobool30 = icmp ne %struct._object* %call29, null, !dbg !6293
  br i1 %tobool30, label %if.then.31, label %if.end.32, !dbg !6295

if.then.31:                                       ; preds = %land.lhs.true.28
  store %struct._object* null, %struct._object** %retval, !dbg !6296
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.169, !dbg !6296

if.end.32:                                        ; preds = %land.lhs.true.28, %if.end.25
  %29 = load i32, i32* %whence, align 4, !dbg !6297, !tbaa !1869
  %cmp33 = icmp eq i32 %29, 0, !dbg !6298
  br i1 %cmp33, label %land.lhs.true.36, label %lor.lhs.false.34, !dbg !6299

lor.lhs.false.34:                                 ; preds = %if.end.32
  %30 = load i32, i32* %whence, align 4, !dbg !6300, !tbaa !1869
  %cmp35 = icmp eq i32 %30, 1, !dbg !6302
  br i1 %cmp35, label %land.lhs.true.36, label %if.end.98, !dbg !6303

land.lhs.true.36:                                 ; preds = %lor.lhs.false.34, %if.end.32
  %31 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6304, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %31, i32 0, i32 4, !dbg !6307
  %32 = load i32, i32* %readable, align 4, !dbg !6307, !tbaa !2223
  %tobool37 = icmp ne i32 %32, 0, !dbg !6308
  br i1 %tobool37, label %if.then.38, label %if.end.98, !dbg !6309

if.then.38:                                       ; preds = %land.lhs.true.36
  %33 = bitcast i64* %current to i8*, !dbg !6310
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !6310
  call void @llvm.dbg.declare(metadata i64* %current, metadata !1049, metadata !1450), !dbg !6311
  %34 = bitcast i64* %avail to i8*, !dbg !6310
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !6310
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !1052, metadata !1450), !dbg !6312
  %35 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6313, !tbaa !1458
  %abs_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %35, i32 0, i32 8, !dbg !6314
  %36 = load i64, i64* %abs_pos, align 8, !dbg !6314, !tbaa !4314
  %cmp39 = icmp ne i64 %36, -1, !dbg !6315
  br i1 %cmp39, label %cond.true.40, label %cond.false.42, !dbg !6313

cond.true.40:                                     ; preds = %if.then.38
  %37 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6316, !tbaa !1458
  %abs_pos41 = getelementptr inbounds %struct.buffered, %struct.buffered* %37, i32 0, i32 8, !dbg !6318
  %38 = load i64, i64* %abs_pos41, align 8, !dbg !6318, !tbaa !4314
  br label %cond.end, !dbg !6313

cond.false.42:                                    ; preds = %if.then.38
  %39 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6319, !tbaa !1458
  %call43 = call i64 @_buffered_raw_tell(%struct.buffered* %39), !dbg !6321
  br label %cond.end, !dbg !6313

cond.end:                                         ; preds = %cond.false.42, %cond.true.40
  %cond = phi i64 [ %38, %cond.true.40 ], [ %call43, %cond.false.42 ], !dbg !6313
  store i64 %cond, i64* %current, align 8, !dbg !6322, !tbaa !2140
  %40 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6325, !tbaa !1458
  %readable44 = getelementptr inbounds %struct.buffered, %struct.buffered* %40, i32 0, i32 4, !dbg !6326
  %41 = load i32, i32* %readable44, align 4, !dbg !6326, !tbaa !2223
  %tobool45 = icmp ne i32 %41, 0, !dbg !6325
  br i1 %tobool45, label %land.lhs.true.46, label %cond.false.53, !dbg !6327

land.lhs.true.46:                                 ; preds = %cond.end
  %42 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6328, !tbaa !1458
  %readable47 = getelementptr inbounds %struct.buffered, %struct.buffered* %42, i32 0, i32 4, !dbg !6329
  %43 = load i32, i32* %readable47, align 4, !dbg !6329, !tbaa !2223
  %tobool48 = icmp ne i32 %43, 0, !dbg !6330
  br i1 %tobool48, label %land.lhs.true.49, label %cond.false.53, !dbg !6331

land.lhs.true.49:                                 ; preds = %land.lhs.true.46
  %44 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6332, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %44, i32 0, i32 12, !dbg !6333
  %45 = load i64, i64* %read_end, align 8, !dbg !6333, !tbaa !3164
  %cmp50 = icmp ne i64 %45, -1, !dbg !6334
  br i1 %cmp50, label %cond.true.51, label %cond.false.53, !dbg !6335

cond.true.51:                                     ; preds = %land.lhs.true.49
  %46 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6336, !tbaa !1458
  %read_end52 = getelementptr inbounds %struct.buffered, %struct.buffered* %46, i32 0, i32 12, !dbg !6338
  %47 = load i64, i64* %read_end52, align 8, !dbg !6338, !tbaa !3164
  %48 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6339, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %48, i32 0, i32 10, !dbg !6340
  %49 = load i64, i64* %pos, align 8, !dbg !6340, !tbaa !2357
  %sub = sub i64 %47, %49, !dbg !6341
  br label %cond.end.54, !dbg !6335

cond.false.53:                                    ; preds = %land.lhs.true.49, %land.lhs.true.46, %cond.end
  br label %cond.end.54, !dbg !6342

cond.end.54:                                      ; preds = %cond.false.53, %cond.true.51
  %cond55 = phi i64 [ %sub, %cond.true.51 ], [ 0, %cond.false.53 ], !dbg !6335
  store i64 %cond55, i64* %avail, align 8, !dbg !6345, !tbaa !2140
  %50 = load i64, i64* %avail, align 8, !dbg !6348, !tbaa !2140
  %cmp56 = icmp sgt i64 %50, 0, !dbg !6349
  br i1 %cmp56, label %if.then.57, label %if.end.93, !dbg !6350

if.then.57:                                       ; preds = %cond.end.54
  %51 = bitcast i64* %offset to i8*, !dbg !6351
  call void @llvm.lifetime.start(i64 8, i8* %51) #1, !dbg !6351
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !1053, metadata !1450), !dbg !6352
  %52 = load i32, i32* %whence, align 4, !dbg !6353, !tbaa !1869
  %cmp58 = icmp eq i32 %52, 0, !dbg !6355
  br i1 %cmp58, label %if.then.59, label %if.else.80, !dbg !6356

if.then.59:                                       ; preds = %if.then.57
  %53 = load i64, i64* %target, align 8, !dbg !6357, !tbaa !2140
  %54 = load i64, i64* %current, align 8, !dbg !6358, !tbaa !2140
  %55 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6359, !tbaa !1458
  %readable60 = getelementptr inbounds %struct.buffered, %struct.buffered* %55, i32 0, i32 4, !dbg !6360
  %56 = load i32, i32* %readable60, align 4, !dbg !6360, !tbaa !2223
  %tobool61 = icmp ne i32 %56, 0, !dbg !6359
  br i1 %tobool61, label %land.lhs.true.62, label %lor.lhs.false.65, !dbg !6361

land.lhs.true.62:                                 ; preds = %if.then.59
  %57 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6362, !tbaa !1458
  %read_end63 = getelementptr inbounds %struct.buffered, %struct.buffered* %57, i32 0, i32 12, !dbg !6364
  %58 = load i64, i64* %read_end63, align 8, !dbg !6364, !tbaa !3164
  %cmp64 = icmp ne i64 %58, -1, !dbg !6365
  br i1 %cmp64, label %land.lhs.true.69, label %lor.lhs.false.65, !dbg !6366

lor.lhs.false.65:                                 ; preds = %land.lhs.true.62, %if.then.59
  %59 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6367, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %59, i32 0, i32 5, !dbg !6370
  %60 = load i32, i32* %writable, align 4, !dbg !6370, !tbaa !2227
  %tobool66 = icmp ne i32 %60, 0, !dbg !6371
  br i1 %tobool66, label %land.lhs.true.67, label %cond.false.75, !dbg !6372

land.lhs.true.67:                                 ; preds = %lor.lhs.false.65
  %61 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6373, !tbaa !1458
  %write_end = getelementptr inbounds %struct.buffered, %struct.buffered* %61, i32 0, i32 14, !dbg !6375
  %62 = load i64, i64* %write_end, align 8, !dbg !6375, !tbaa !3922
  %cmp68 = icmp ne i64 %62, -1, !dbg !6376
  br i1 %cmp68, label %land.lhs.true.69, label %cond.false.75, !dbg !6377

land.lhs.true.69:                                 ; preds = %land.lhs.true.67, %land.lhs.true.62
  %63 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6378, !tbaa !1458
  %raw_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %63, i32 0, i32 11, !dbg !6381
  %64 = load i64, i64* %raw_pos, align 8, !dbg !6381, !tbaa !3929
  %cmp70 = icmp sge i64 %64, 0, !dbg !6382
  br i1 %cmp70, label %cond.true.71, label %cond.false.75, !dbg !6383

cond.true.71:                                     ; preds = %land.lhs.true.69
  %65 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6384, !tbaa !1458
  %raw_pos72 = getelementptr inbounds %struct.buffered, %struct.buffered* %65, i32 0, i32 11, !dbg !6386
  %66 = load i64, i64* %raw_pos72, align 8, !dbg !6386, !tbaa !3929
  %67 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6387, !tbaa !1458
  %pos73 = getelementptr inbounds %struct.buffered, %struct.buffered* %67, i32 0, i32 10, !dbg !6388
  %68 = load i64, i64* %pos73, align 8, !dbg !6388, !tbaa !2357
  %sub74 = sub i64 %66, %68, !dbg !6389
  br label %cond.end.76, !dbg !6383

cond.false.75:                                    ; preds = %land.lhs.true.69, %land.lhs.true.67, %lor.lhs.false.65
  br label %cond.end.76, !dbg !6390

cond.end.76:                                      ; preds = %cond.false.75, %cond.true.71
  %cond77 = phi i64 [ %sub74, %cond.true.71 ], [ 0, %cond.false.75 ], !dbg !6383
  %sub78 = sub i64 %54, %cond77, !dbg !6394
  %sub79 = sub i64 %53, %sub78, !dbg !6397
  store i64 %sub79, i64* %offset, align 8, !dbg !6398, !tbaa !2140
  br label %if.end.81, !dbg !6399

if.else.80:                                       ; preds = %if.then.57
  %69 = load i64, i64* %target, align 8, !dbg !6400, !tbaa !2140
  store i64 %69, i64* %offset, align 8, !dbg !6401, !tbaa !2140
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.80, %cond.end.76
  %70 = load i64, i64* %offset, align 8, !dbg !6402, !tbaa !2140
  %71 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6404, !tbaa !1458
  %pos82 = getelementptr inbounds %struct.buffered, %struct.buffered* %71, i32 0, i32 10, !dbg !6405
  %72 = load i64, i64* %pos82, align 8, !dbg !6405, !tbaa !2357
  %sub83 = sub i64 0, %72, !dbg !6406
  %cmp84 = icmp sge i64 %70, %sub83, !dbg !6407
  br i1 %cmp84, label %land.lhs.true.85, label %if.end.92, !dbg !6408

land.lhs.true.85:                                 ; preds = %if.end.81
  %73 = load i64, i64* %offset, align 8, !dbg !6409, !tbaa !2140
  %74 = load i64, i64* %avail, align 8, !dbg !6411, !tbaa !2140
  %cmp86 = icmp sle i64 %73, %74, !dbg !6412
  br i1 %cmp86, label %if.then.87, label %if.end.92, !dbg !6413

if.then.87:                                       ; preds = %land.lhs.true.85
  %75 = load i64, i64* %offset, align 8, !dbg !6414, !tbaa !2140
  %76 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6416, !tbaa !1458
  %pos88 = getelementptr inbounds %struct.buffered, %struct.buffered* %76, i32 0, i32 10, !dbg !6417
  %77 = load i64, i64* %pos88, align 8, !dbg !6418, !tbaa !2357
  %add = add i64 %77, %75, !dbg !6418
  store i64 %add, i64* %pos88, align 8, !dbg !6418, !tbaa !2357
  %78 = load i64, i64* %current, align 8, !dbg !6419, !tbaa !2140
  %79 = load i64, i64* %avail, align 8, !dbg !6420, !tbaa !2140
  %sub89 = sub i64 %78, %79, !dbg !6421
  %80 = load i64, i64* %offset, align 8, !dbg !6422, !tbaa !2140
  %add90 = add i64 %sub89, %80, !dbg !6423
  %call91 = call %struct._object* @PyLong_FromSsize_t(i64 %add90), !dbg !6424
  store %struct._object* %call91, %struct._object** %retval, !dbg !6425
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6425

if.end.92:                                        ; preds = %land.lhs.true.85, %if.end.81
  store i32 0, i32* %cleanup.dest.slot, !dbg !6426
  br label %cleanup, !dbg !6426

cleanup:                                          ; preds = %if.end.92, %if.then.87
  %81 = bitcast i64* %offset to i8*, !dbg !6427
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !6427
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.93, !dbg !6429

if.end.93:                                        ; preds = %cleanup.cont, %cond.end.54
  store i32 0, i32* %cleanup.dest.slot, !dbg !6430
  br label %cleanup.94, !dbg !6430

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.94

cleanup.94:                                       ; preds = %NewDefault, %if.end.93
  %82 = bitcast i64* %avail to i8*, !dbg !6431
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !6431
  %83 = bitcast i64* %current to i8*, !dbg !6431
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !6431
  %cleanup.dest.96 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.94
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.96, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.97, label %NewDefault.1

cleanup.cont.97:                                  ; preds = %LeafBlock.2
  br label %if.end.98, !dbg !6432

if.end.98:                                        ; preds = %cleanup.cont.97, %land.lhs.true.36, %lor.lhs.false.34
  %84 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6433, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %84, i32 0, i32 15, !dbg !6435
  %85 = load i8*, i8** %lock, align 8, !dbg !6435, !tbaa !1730
  %call99 = call i32 @PyThread_acquire_lock(i8* %85, i32 0), !dbg !6436
  %tobool100 = icmp ne i32 %call99, 0, !dbg !6436
  br i1 %tobool100, label %cond.true.101, label %cond.false.102, !dbg !6437

cond.true.101:                                    ; preds = %if.end.98
  br i1 true, label %land.lhs.true.105, label %if.then.107, !dbg !6438

cond.false.102:                                   ; preds = %if.end.98
  %86 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6440, !tbaa !1458
  %call103 = call i32 @_enter_buffered_busy(%struct.buffered* %86), !dbg !6442
  %tobool104 = icmp ne i32 %call103, 0, !dbg !6442
  br i1 %tobool104, label %land.lhs.true.105, label %if.then.107, !dbg !6437

land.lhs.true.105:                                ; preds = %cond.false.102, %cond.true.101
  %call106 = call i64 @PyThread_get_thread_ident(), !dbg !6443
  %87 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6446, !tbaa !1458
  %owner = getelementptr inbounds %struct.buffered, %struct.buffered* %87, i32 0, i32 16, !dbg !6447
  store volatile i64 %call106, i64* %owner, align 8, !dbg !6448, !tbaa !3261
  br i1 true, label %if.end.108, label %if.then.107, !dbg !6449

if.then.107:                                      ; preds = %land.lhs.true.105, %cond.false.102, %cond.true.101
  store %struct._object* null, %struct._object** %retval, !dbg !6450
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.169, !dbg !6450

if.end.108:                                       ; preds = %land.lhs.true.105
  %88 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6451, !tbaa !1458
  %writable109 = getelementptr inbounds %struct.buffered, %struct.buffered* %88, i32 0, i32 5, !dbg !6452
  %89 = load i32, i32* %writable109, align 4, !dbg !6452, !tbaa !2227
  %tobool110 = icmp ne i32 %89, 0, !dbg !6451
  br i1 %tobool110, label %if.then.111, label %if.end.126, !dbg !6453

if.then.111:                                      ; preds = %if.end.108
  %90 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6454, !tbaa !1458
  %call112 = call %struct._object* @_bufferedwriter_flush_unlocked(%struct.buffered* %90), !dbg !6455
  store %struct._object* %call112, %struct._object** %res, align 8, !dbg !6456, !tbaa !1458
  %91 = load %struct._object*, %struct._object** %res, align 8, !dbg !6457, !tbaa !1458
  %cmp113 = icmp eq %struct._object* %91, null, !dbg !6459
  br i1 %cmp113, label %if.then.114, label %if.end.115, !dbg !6460

if.then.114:                                      ; preds = %if.then.111
  br label %end, !dbg !6461

if.end.115:                                       ; preds = %if.then.111
  br label %do.body, !dbg !6462

do.body:                                          ; preds = %if.end.115
  %92 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6463
  call void @llvm.lifetime.start(i64 8, i8* %92) #1, !dbg !6463
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1056, metadata !1450), !dbg !6465
  %93 = load %struct._object*, %struct._object** %res, align 8, !dbg !6466, !tbaa !1458
  store %struct._object* %93, %struct._object** %_py_tmp, align 8, !dbg !6465, !tbaa !1458
  %94 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6467, !tbaa !1458
  %cmp116 = icmp ne %struct._object* %94, null, !dbg !6468
  br i1 %cmp116, label %if.then.117, label %if.end.123, !dbg !6469

if.then.117:                                      ; preds = %do.body
  store %struct._object* null, %struct._object** %res, align 8, !dbg !6470, !tbaa !1458
  br label %do.body.118, !dbg !6472

do.body.118:                                      ; preds = %if.then.117
  %95 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6473
  call void @llvm.lifetime.start(i64 8, i8* %95) #1, !dbg !6473
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1060, metadata !1450), !dbg !6475
  %96 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6476, !tbaa !1458
  store %struct._object* %96, %struct._object** %_py_decref_tmp, align 8, !dbg !6475, !tbaa !1458
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6477, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 0, !dbg !6479
  %98 = load i64, i64* %ob_refcnt, align 8, !dbg !6480, !tbaa !1501
  %dec = add i64 %98, -1, !dbg !6480
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6480, !tbaa !1501
  %cmp119 = icmp ne i64 %dec, 0, !dbg !6481
  br i1 %cmp119, label %if.then.120, label %if.else.121, !dbg !6482

if.then.120:                                      ; preds = %do.body.118
  br label %if.end.122, !dbg !6483

if.else.121:                                      ; preds = %do.body.118
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6485, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 1, !dbg !6487
  %100 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6487, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %100, i32 0, i32 4, !dbg !6488
  %101 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6488, !tbaa !1511
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6489, !tbaa !1458
  call void %101(%struct._object* %102), !dbg !6490
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.121, %if.then.120
  %103 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6491
  call void @llvm.lifetime.end(i64 8, i8* %103) #1, !dbg !6491
  br label %do.cond, !dbg !6493

do.cond:                                          ; preds = %if.end.122
  br label %do.end, !dbg !6494

do.end:                                           ; preds = %do.cond
  br label %if.end.123, !dbg !6496

if.end.123:                                       ; preds = %do.end, %do.body
  %104 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6498
  call void @llvm.lifetime.end(i64 8, i8* %104) #1, !dbg !6498
  br label %do.cond.124, !dbg !6501

do.cond.124:                                      ; preds = %if.end.123
  br label %do.end.125, !dbg !6502

do.end.125:                                       ; preds = %do.cond.124
  %105 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6504, !tbaa !1458
  call void @_bufferedwriter_reset_buf(%struct.buffered* %105), !dbg !6505
  br label %if.end.126, !dbg !6506

if.end.126:                                       ; preds = %do.end.125, %if.end.108
  %106 = load i32, i32* %whence, align 4, !dbg !6507, !tbaa !1869
  %cmp127 = icmp eq i32 %106, 1, !dbg !6509
  br i1 %cmp127, label %if.then.128, label %if.end.151, !dbg !6510

if.then.128:                                      ; preds = %if.end.126
  %107 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6511, !tbaa !1458
  %readable129 = getelementptr inbounds %struct.buffered, %struct.buffered* %107, i32 0, i32 4, !dbg !6512
  %108 = load i32, i32* %readable129, align 4, !dbg !6512, !tbaa !2223
  %tobool130 = icmp ne i32 %108, 0, !dbg !6511
  br i1 %tobool130, label %land.lhs.true.131, label %lor.lhs.false.134, !dbg !6513

land.lhs.true.131:                                ; preds = %if.then.128
  %109 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6514, !tbaa !1458
  %read_end132 = getelementptr inbounds %struct.buffered, %struct.buffered* %109, i32 0, i32 12, !dbg !6516
  %110 = load i64, i64* %read_end132, align 8, !dbg !6516, !tbaa !3164
  %cmp133 = icmp ne i64 %110, -1, !dbg !6517
  br i1 %cmp133, label %land.lhs.true.140, label %lor.lhs.false.134, !dbg !6518

lor.lhs.false.134:                                ; preds = %land.lhs.true.131, %if.then.128
  %111 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6519, !tbaa !1458
  %writable135 = getelementptr inbounds %struct.buffered, %struct.buffered* %111, i32 0, i32 5, !dbg !6522
  %112 = load i32, i32* %writable135, align 4, !dbg !6522, !tbaa !2227
  %tobool136 = icmp ne i32 %112, 0, !dbg !6523
  br i1 %tobool136, label %land.lhs.true.137, label %cond.false.147, !dbg !6524

land.lhs.true.137:                                ; preds = %lor.lhs.false.134
  %113 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6525, !tbaa !1458
  %write_end138 = getelementptr inbounds %struct.buffered, %struct.buffered* %113, i32 0, i32 14, !dbg !6527
  %114 = load i64, i64* %write_end138, align 8, !dbg !6527, !tbaa !3922
  %cmp139 = icmp ne i64 %114, -1, !dbg !6528
  br i1 %cmp139, label %land.lhs.true.140, label %cond.false.147, !dbg !6529

land.lhs.true.140:                                ; preds = %land.lhs.true.137, %land.lhs.true.131
  %115 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6530, !tbaa !1458
  %raw_pos141 = getelementptr inbounds %struct.buffered, %struct.buffered* %115, i32 0, i32 11, !dbg !6533
  %116 = load i64, i64* %raw_pos141, align 8, !dbg !6533, !tbaa !3929
  %cmp142 = icmp sge i64 %116, 0, !dbg !6534
  br i1 %cmp142, label %cond.true.143, label %cond.false.147, !dbg !6535

cond.true.143:                                    ; preds = %land.lhs.true.140
  %117 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6536, !tbaa !1458
  %raw_pos144 = getelementptr inbounds %struct.buffered, %struct.buffered* %117, i32 0, i32 11, !dbg !6538
  %118 = load i64, i64* %raw_pos144, align 8, !dbg !6538, !tbaa !3929
  %119 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6539, !tbaa !1458
  %pos145 = getelementptr inbounds %struct.buffered, %struct.buffered* %119, i32 0, i32 10, !dbg !6540
  %120 = load i64, i64* %pos145, align 8, !dbg !6540, !tbaa !2357
  %sub146 = sub i64 %118, %120, !dbg !6541
  br label %cond.end.148, !dbg !6535

cond.false.147:                                   ; preds = %land.lhs.true.140, %land.lhs.true.137, %lor.lhs.false.134
  br label %cond.end.148, !dbg !6542

cond.end.148:                                     ; preds = %cond.false.147, %cond.true.143
  %cond149 = phi i64 [ %sub146, %cond.true.143 ], [ 0, %cond.false.147 ], !dbg !6535
  %121 = load i64, i64* %target, align 8, !dbg !6546, !tbaa !2140
  %sub150 = sub i64 %121, %cond149, !dbg !6546
  store i64 %sub150, i64* %target, align 8, !dbg !6546, !tbaa !2140
  br label %if.end.151, !dbg !6549

if.end.151:                                       ; preds = %cond.end.148, %if.end.126
  %122 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6550, !tbaa !1458
  %123 = load i64, i64* %target, align 8, !dbg !6551, !tbaa !2140
  %124 = load i32, i32* %whence, align 4, !dbg !6552, !tbaa !1869
  %call152 = call i64 @_buffered_raw_seek(%struct.buffered* %122, i64 %123, i32 %124), !dbg !6553
  store i64 %call152, i64* %n, align 8, !dbg !6554, !tbaa !2140
  %125 = load i64, i64* %n, align 8, !dbg !6555, !tbaa !2140
  %cmp153 = icmp eq i64 %125, -1, !dbg !6557
  br i1 %cmp153, label %if.then.154, label %if.end.155, !dbg !6558

if.then.154:                                      ; preds = %if.end.151
  br label %end, !dbg !6559

if.end.155:                                       ; preds = %if.end.151
  %126 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6560, !tbaa !1458
  %raw_pos156 = getelementptr inbounds %struct.buffered, %struct.buffered* %126, i32 0, i32 11, !dbg !6561
  store i64 -1, i64* %raw_pos156, align 8, !dbg !6562, !tbaa !3929
  %127 = load i64, i64* %n, align 8, !dbg !6563, !tbaa !2140
  %call157 = call %struct._object* @PyLong_FromSsize_t(i64 %127), !dbg !6564
  store %struct._object* %call157, %struct._object** %res, align 8, !dbg !6565, !tbaa !1458
  %128 = load %struct._object*, %struct._object** %res, align 8, !dbg !6566, !tbaa !1458
  %cmp158 = icmp ne %struct._object* %128, null, !dbg !6568
  br i1 %cmp158, label %land.lhs.true.159, label %if.end.163, !dbg !6569

land.lhs.true.159:                                ; preds = %if.end.155
  %129 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6570, !tbaa !1458
  %readable160 = getelementptr inbounds %struct.buffered, %struct.buffered* %129, i32 0, i32 4, !dbg !6572
  %130 = load i32, i32* %readable160, align 4, !dbg !6572, !tbaa !2223
  %tobool161 = icmp ne i32 %130, 0, !dbg !6573
  br i1 %tobool161, label %if.then.162, label %if.end.163, !dbg !6574

if.then.162:                                      ; preds = %land.lhs.true.159
  %131 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6575, !tbaa !1458
  call void @_bufferedreader_reset_buf(%struct.buffered* %131), !dbg !6576
  br label %if.end.163, !dbg !6576

if.end.163:                                       ; preds = %if.then.162, %land.lhs.true.159, %if.end.155
  br label %end, !dbg !6577

end:                                              ; preds = %if.end.163, %if.then.154, %if.then.114
  br label %do.body.164, !dbg !6580

do.body.164:                                      ; preds = %end
  %132 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6581, !tbaa !1458
  %owner165 = getelementptr inbounds %struct.buffered, %struct.buffered* %132, i32 0, i32 16, !dbg !6584
  store volatile i64 0, i64* %owner165, align 8, !dbg !6585, !tbaa !3261
  %133 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6586, !tbaa !1458
  %lock166 = getelementptr inbounds %struct.buffered, %struct.buffered* %133, i32 0, i32 15, !dbg !6587
  %134 = load i8*, i8** %lock166, align 8, !dbg !6587, !tbaa !1730
  call void @PyThread_release_lock(i8* %134), !dbg !6588
  br label %do.cond.167, !dbg !6589

do.cond.167:                                      ; preds = %do.body.164
  br label %do.end.168, !dbg !6590

do.end.168:                                       ; preds = %do.cond.167
  %135 = load %struct._object*, %struct._object** %res, align 8, !dbg !6592, !tbaa !1458
  store %struct._object* %135, %struct._object** %retval, !dbg !6593
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.169, !dbg !6593

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.169

cleanup.169:                                      ; preds = %NewDefault.1, %do.end.168, %if.then.107, %if.then.31, %if.then.24, %if.then.19, %if.then.11, %if.then.4, %if.end
  %136 = bitcast %struct._object** %res to i8*, !dbg !6594
  call void @llvm.lifetime.end(i64 8, i8* %136) #1, !dbg !6594
  %137 = bitcast %struct._object** %targetobj to i8*, !dbg !6594
  call void @llvm.lifetime.end(i64 8, i8* %137) #1, !dbg !6594
  %138 = bitcast i32* %whence to i8*, !dbg !6594
  call void @llvm.lifetime.end(i64 4, i8* %138) #1, !dbg !6594
  %139 = bitcast i64* %n to i8*, !dbg !6594
  call void @llvm.lifetime.end(i64 8, i8* %139) #1, !dbg !6594
  %140 = bitcast i64* %target to i8*, !dbg !6594
  call void @llvm.lifetime.end(i64 8, i8* %140) #1, !dbg !6594
  %141 = load %struct._object*, %struct._object** %retval, !dbg !6594
  ret %struct._object* %141, !dbg !6594
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_tell(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %pos = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1075, metadata !1450), !dbg !6595
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1076, metadata !1450), !dbg !6596
  %0 = bitcast i64* %pos to i8*, !dbg !6597
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6597
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !1077, metadata !1450), !dbg !6598
  %1 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6599, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %1, i32 0, i32 2, !dbg !6601
  %2 = load i32, i32* %ok, align 4, !dbg !6601, !tbaa !1660
  %cmp = icmp sle i32 %2, 0, !dbg !6602
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !6603

if.then:                                          ; preds = %entry
  %3 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6604, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %3, i32 0, i32 3, !dbg !6608
  %4 = load i32, i32* %detached, align 4, !dbg !6608, !tbaa !2019
  %tobool = icmp ne i32 %4, 0, !dbg !6609
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !6610

if.then.1:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6611, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !6614
  br label %if.end, !dbg !6615

if.else:                                          ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6616, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !6619
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !6620
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6622

if.end.2:                                         ; preds = %entry
  %7 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6623, !tbaa !1458
  %call = call i64 @_buffered_raw_tell(%struct.buffered* %7), !dbg !6624
  store i64 %call, i64* %pos, align 8, !dbg !6625, !tbaa !2140
  %8 = load i64, i64* %pos, align 8, !dbg !6626, !tbaa !2140
  %cmp3 = icmp eq i64 %8, -1, !dbg !6628
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !6629

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !6630
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6630

if.end.5:                                         ; preds = %if.end.2
  %9 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6631, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %9, i32 0, i32 4, !dbg !6632
  %10 = load i32, i32* %readable, align 4, !dbg !6632, !tbaa !2223
  %tobool6 = icmp ne i32 %10, 0, !dbg !6631
  br i1 %tobool6, label %land.lhs.true, label %lor.lhs.false, !dbg !6633

land.lhs.true:                                    ; preds = %if.end.5
  %11 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6634, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %11, i32 0, i32 12, !dbg !6636
  %12 = load i64, i64* %read_end, align 8, !dbg !6636, !tbaa !3164
  %cmp7 = icmp ne i64 %12, -1, !dbg !6637
  br i1 %cmp7, label %land.lhs.true.11, label %lor.lhs.false, !dbg !6638

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end.5
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6639, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 5, !dbg !6642
  %14 = load i32, i32* %writable, align 4, !dbg !6642, !tbaa !2227
  %tobool8 = icmp ne i32 %14, 0, !dbg !6643
  br i1 %tobool8, label %land.lhs.true.9, label %cond.false, !dbg !6644

land.lhs.true.9:                                  ; preds = %lor.lhs.false
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6645, !tbaa !1458
  %write_end = getelementptr inbounds %struct.buffered, %struct.buffered* %15, i32 0, i32 14, !dbg !6647
  %16 = load i64, i64* %write_end, align 8, !dbg !6647, !tbaa !3922
  %cmp10 = icmp ne i64 %16, -1, !dbg !6648
  br i1 %cmp10, label %land.lhs.true.11, label %cond.false, !dbg !6649

land.lhs.true.11:                                 ; preds = %land.lhs.true.9, %land.lhs.true
  %17 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6650, !tbaa !1458
  %raw_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %17, i32 0, i32 11, !dbg !6653
  %18 = load i64, i64* %raw_pos, align 8, !dbg !6653, !tbaa !3929
  %cmp12 = icmp sge i64 %18, 0, !dbg !6654
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !6655

cond.true:                                        ; preds = %land.lhs.true.11
  %19 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6656, !tbaa !1458
  %raw_pos13 = getelementptr inbounds %struct.buffered, %struct.buffered* %19, i32 0, i32 11, !dbg !6658
  %20 = load i64, i64* %raw_pos13, align 8, !dbg !6658, !tbaa !3929
  %21 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6659, !tbaa !1458
  %pos14 = getelementptr inbounds %struct.buffered, %struct.buffered* %21, i32 0, i32 10, !dbg !6660
  %22 = load i64, i64* %pos14, align 8, !dbg !6660, !tbaa !2357
  %sub = sub i64 %20, %22, !dbg !6661
  br label %cond.end, !dbg !6655

cond.false:                                       ; preds = %land.lhs.true.11, %land.lhs.true.9, %lor.lhs.false
  br label %cond.end, !dbg !6662

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !6655
  %23 = load i64, i64* %pos, align 8, !dbg !6666, !tbaa !2140
  %sub15 = sub i64 %23, %cond, !dbg !6666
  store i64 %sub15, i64* %pos, align 8, !dbg !6666, !tbaa !2140
  %24 = load i64, i64* %pos, align 8, !dbg !6669, !tbaa !2140
  %call16 = call %struct._object* @PyLong_FromSsize_t(i64 %24), !dbg !6670
  store %struct._object* %call16, %struct._object** %retval, !dbg !6671
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6671

cleanup:                                          ; preds = %cond.end, %if.then.4, %if.end
  %25 = bitcast i64* %pos to i8*, !dbg !6672
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !6672
  %26 = load %struct._object*, %struct._object** %retval, !dbg !6672
  ret %struct._object* %26, !dbg !6672
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_truncate(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %pos = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1080, metadata !1450), !dbg !6673
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1081, metadata !1450), !dbg !6674
  %0 = bitcast %struct._object** %pos to i8*, !dbg !6675
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6675
  call void @llvm.dbg.declare(metadata %struct._object** %pos, metadata !1082, metadata !1450), !dbg !6676
  store %struct._object* @_Py_NoneStruct, %struct._object** %pos, align 8, !dbg !6676, !tbaa !1458
  %1 = bitcast %struct._object** %res to i8*, !dbg !6677
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6677
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1083, metadata !1450), !dbg !6678
  store %struct._object* null, %struct._object** %res, align 8, !dbg !6678, !tbaa !1458
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6679, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 2, !dbg !6681
  %3 = load i32, i32* %ok, align 4, !dbg !6681, !tbaa !1660
  %cmp = icmp sle i32 %3, 0, !dbg !6682
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !6683

if.then:                                          ; preds = %entry
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6684, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 3, !dbg !6688
  %5 = load i32, i32* %detached, align 4, !dbg !6688, !tbaa !2019
  %tobool = icmp ne i32 %5, 0, !dbg !6689
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !6690

if.then.1:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6691, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !6694
  br label %if.end, !dbg !6695

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6696, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !6699
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !6700
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6702

if.end.2:                                         ; preds = %entry
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6703, !tbaa !1458
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), %struct._object** %pos), !dbg !6705
  %tobool3 = icmp ne i32 %call, 0, !dbg !6705
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !6706

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !6707
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6707

if.end.5:                                         ; preds = %if.end.2
  %9 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6709, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %9, i32 0, i32 15, !dbg !6711
  %10 = load i8*, i8** %lock, align 8, !dbg !6711, !tbaa !1730
  %call6 = call i32 @PyThread_acquire_lock(i8* %10, i32 0), !dbg !6712
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6712
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !6713

cond.true:                                        ; preds = %if.end.5
  br i1 true, label %land.lhs.true, label %if.then.11, !dbg !6714

cond.false:                                       ; preds = %if.end.5
  %11 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6716, !tbaa !1458
  %call8 = call i32 @_enter_buffered_busy(%struct.buffered* %11), !dbg !6718
  %tobool9 = icmp ne i32 %call8, 0, !dbg !6718
  br i1 %tobool9, label %land.lhs.true, label %if.then.11, !dbg !6713

land.lhs.true:                                    ; preds = %cond.false, %cond.true
  %call10 = call i64 @PyThread_get_thread_ident(), !dbg !6719
  %12 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6722, !tbaa !1458
  %owner = getelementptr inbounds %struct.buffered, %struct.buffered* %12, i32 0, i32 16, !dbg !6723
  store volatile i64 %call10, i64* %owner, align 8, !dbg !6724, !tbaa !3261
  br i1 true, label %if.end.12, label %if.then.11, !dbg !6725

if.then.11:                                       ; preds = %land.lhs.true, %cond.false, %cond.true
  store %struct._object* null, %struct._object** %retval, !dbg !6726
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6726

if.end.12:                                        ; preds = %land.lhs.true
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6727, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 5, !dbg !6728
  %14 = load i32, i32* %writable, align 4, !dbg !6728, !tbaa !2227
  %tobool13 = icmp ne i32 %14, 0, !dbg !6727
  br i1 %tobool13, label %if.then.14, label %if.end.29, !dbg !6729

if.then.14:                                       ; preds = %if.end.12
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6730, !tbaa !1458
  %call15 = call %struct._object* @buffered_flush_and_rewind_unlocked(%struct.buffered* %15), !dbg !6731
  store %struct._object* %call15, %struct._object** %res, align 8, !dbg !6732, !tbaa !1458
  %16 = load %struct._object*, %struct._object** %res, align 8, !dbg !6733, !tbaa !1458
  %cmp16 = icmp eq %struct._object* %16, null, !dbg !6735
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !6736

if.then.17:                                       ; preds = %if.then.14
  br label %end, !dbg !6737

if.end.18:                                        ; preds = %if.then.14
  br label %do.body, !dbg !6738

do.body:                                          ; preds = %if.end.18
  %17 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6739
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !6739
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1084, metadata !1450), !dbg !6741
  %18 = load %struct._object*, %struct._object** %res, align 8, !dbg !6742, !tbaa !1458
  store %struct._object* %18, %struct._object** %_py_tmp, align 8, !dbg !6741, !tbaa !1458
  %19 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6743, !tbaa !1458
  %cmp19 = icmp ne %struct._object* %19, null, !dbg !6744
  br i1 %cmp19, label %if.then.20, label %if.end.26, !dbg !6745

if.then.20:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %res, align 8, !dbg !6746, !tbaa !1458
  br label %do.body.21, !dbg !6748

do.body.21:                                       ; preds = %if.then.20
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6749
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !6749
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1088, metadata !1450), !dbg !6751
  %21 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6752, !tbaa !1458
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !6751, !tbaa !1458
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6753, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !6755
  %23 = load i64, i64* %ob_refcnt, align 8, !dbg !6756, !tbaa !1501
  %dec = add i64 %23, -1, !dbg !6756
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6756, !tbaa !1501
  %cmp22 = icmp ne i64 %dec, 0, !dbg !6757
  br i1 %cmp22, label %if.then.23, label %if.else.24, !dbg !6758

if.then.23:                                       ; preds = %do.body.21
  br label %if.end.25, !dbg !6759

if.else.24:                                       ; preds = %do.body.21
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6761, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !6763
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6763, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !6764
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6764, !tbaa !1511
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6765, !tbaa !1458
  call void %26(%struct._object* %27), !dbg !6766
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.24, %if.then.23
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6767
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !6767
  br label %do.cond, !dbg !6769

do.cond:                                          ; preds = %if.end.25
  br label %do.end, !dbg !6770

do.end:                                           ; preds = %do.cond
  br label %if.end.26, !dbg !6772

if.end.26:                                        ; preds = %do.end, %do.body
  %29 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6774
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !6774
  br label %do.cond.27, !dbg !6777

do.cond.27:                                       ; preds = %if.end.26
  br label %do.end.28, !dbg !6778

do.end.28:                                        ; preds = %do.cond.27
  br label %if.end.29, !dbg !6780

if.end.29:                                        ; preds = %do.end.28, %if.end.12
  %30 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6781, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %30, i32 0, i32 1, !dbg !6782
  %31 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6782, !tbaa !1676
  %32 = load %struct._object*, %struct._object** @_PyIO_str_truncate, align 8, !dbg !6783, !tbaa !1458
  %33 = load %struct._object*, %struct._object** %pos, align 8, !dbg !6784, !tbaa !1458
  %call30 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %31, %struct._object* %32, %struct._object* %33, i8* null), !dbg !6785
  store %struct._object* %call30, %struct._object** %res, align 8, !dbg !6786, !tbaa !1458
  %34 = load %struct._object*, %struct._object** %res, align 8, !dbg !6787, !tbaa !1458
  %cmp31 = icmp eq %struct._object* %34, null, !dbg !6789
  br i1 %cmp31, label %if.then.32, label %if.end.33, !dbg !6790

if.then.32:                                       ; preds = %if.end.29
  br label %end, !dbg !6791

if.end.33:                                        ; preds = %if.end.29
  %35 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6792, !tbaa !1458
  %call34 = call i64 @_buffered_raw_tell(%struct.buffered* %35), !dbg !6794
  %cmp35 = icmp eq i64 %call34, -1, !dbg !6795
  br i1 %cmp35, label %if.then.36, label %if.end.37, !dbg !6796

if.then.36:                                       ; preds = %if.end.33
  call void @PyErr_Clear(), !dbg !6797
  br label %if.end.37, !dbg !6797

if.end.37:                                        ; preds = %if.then.36, %if.end.33
  br label %end, !dbg !6798

end:                                              ; preds = %if.end.37, %if.then.32, %if.then.17
  br label %do.body.38, !dbg !6800

do.body.38:                                       ; preds = %end
  %36 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6801, !tbaa !1458
  %owner39 = getelementptr inbounds %struct.buffered, %struct.buffered* %36, i32 0, i32 16, !dbg !6804
  store volatile i64 0, i64* %owner39, align 8, !dbg !6805, !tbaa !3261
  %37 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6806, !tbaa !1458
  %lock40 = getelementptr inbounds %struct.buffered, %struct.buffered* %37, i32 0, i32 15, !dbg !6807
  %38 = load i8*, i8** %lock40, align 8, !dbg !6807, !tbaa !1730
  call void @PyThread_release_lock(i8* %38), !dbg !6808
  br label %do.cond.41, !dbg !6809

do.cond.41:                                       ; preds = %do.body.38
  br label %do.end.42, !dbg !6810

do.end.42:                                        ; preds = %do.cond.41
  %39 = load %struct._object*, %struct._object** %res, align 8, !dbg !6812, !tbaa !1458
  store %struct._object* %39, %struct._object** %retval, !dbg !6813
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6813

cleanup:                                          ; preds = %do.end.42, %if.then.11, %if.then.4, %if.end
  %40 = bitcast %struct._object** %res to i8*, !dbg !6814
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !6814
  %41 = bitcast %struct._object** %pos to i8*, !dbg !6814
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !6814
  %42 = load %struct._object*, %struct._object** %retval, !dbg !6814
  ret %struct._object* %42, !dbg !6814
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_sizeof(%struct.buffered* %self, i8* %unused) #0 {
entry:
  %self.addr = alloca %struct.buffered*, align 8
  %unused.addr = alloca i8*, align 8
  %res = alloca i64, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1096, metadata !1450), !dbg !6815
  store i8* %unused, i8** %unused.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !1097, metadata !1450), !dbg !6816
  %0 = bitcast i64* %res to i8*, !dbg !6817
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6817
  call void @llvm.dbg.declare(metadata i64* %res, metadata !1098, metadata !1450), !dbg !6818
  store i64 152, i64* %res, align 8, !dbg !6819, !tbaa !2140
  %1 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6820, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %1, i32 0, i32 9, !dbg !6822
  %2 = load i8*, i8** %buffer, align 8, !dbg !6822, !tbaa !1717
  %tobool = icmp ne i8* %2, null, !dbg !6820
  br i1 %tobool, label %if.then, label %if.end, !dbg !6823

if.then:                                          ; preds = %entry
  %3 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6824, !tbaa !1458
  %buffer_size = getelementptr inbounds %struct.buffered, %struct.buffered* %3, i32 0, i32 17, !dbg !6825
  %4 = load i64, i64* %buffer_size, align 8, !dbg !6825, !tbaa !2219
  %5 = load i64, i64* %res, align 8, !dbg !6826, !tbaa !2140
  %add = add i64 %5, %4, !dbg !6826
  store i64 %add, i64* %res, align 8, !dbg !6826, !tbaa !2140
  br label %if.end, !dbg !6827

if.end:                                           ; preds = %if.then, %entry
  %6 = load i64, i64* %res, align 8, !dbg !6828, !tbaa !2140
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %6), !dbg !6829
  %7 = bitcast i64* %res to i8*, !dbg !6830
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !6830
  ret %struct._object* %call, !dbg !6831
}

declare void @PyException_SetContext(%struct._object*, %struct._object*) #3

declare i32 @_PyIO_ConvertSsize_t(%struct._object*, i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_bufferedreader_read_all(%struct.buffered* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %current_size = alloca i64, align 8
  %res = alloca %struct._object*, align 8
  %data = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %chunks = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp66 = alloca %struct._object*, align 8
  %_py_decref_tmp71 = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp129 = alloca %struct._object*, align 8
  %_py_xdecref_tmp145 = alloca %struct._object*, align 8
  %_py_decref_tmp150 = alloca %struct._object*, align 8
  %_py_xdecref_tmp166 = alloca %struct._object*, align 8
  %_py_decref_tmp171 = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !904, metadata !1450), !dbg !6832
  %0 = bitcast i64* %current_size to i8*, !dbg !6833
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6833
  call void @llvm.dbg.declare(metadata i64* %current_size, metadata !905, metadata !1450), !dbg !6834
  %1 = bitcast %struct._object** %res to i8*, !dbg !6835
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6835
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !906, metadata !1450), !dbg !6836
  store %struct._object* null, %struct._object** %res, align 8, !dbg !6836, !tbaa !1458
  %2 = bitcast %struct._object** %data to i8*, !dbg !6835
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6835
  call void @llvm.dbg.declare(metadata %struct._object** %data, metadata !907, metadata !1450), !dbg !6837
  store %struct._object* null, %struct._object** %data, align 8, !dbg !6837, !tbaa !1458
  %3 = bitcast %struct._object** %tmp to i8*, !dbg !6835
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !6835
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !908, metadata !1450), !dbg !6838
  store %struct._object* null, %struct._object** %tmp, align 8, !dbg !6838, !tbaa !1458
  %4 = bitcast %struct._object** %chunks to i8*, !dbg !6835
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !6835
  call void @llvm.dbg.declare(metadata %struct._object** %chunks, metadata !909, metadata !1450), !dbg !6839
  store %struct._object* null, %struct._object** %chunks, align 8, !dbg !6839, !tbaa !1458
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6840, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 4, !dbg !6841
  %6 = load i32, i32* %readable, align 4, !dbg !6841, !tbaa !2223
  %tobool = icmp ne i32 %6, 0, !dbg !6840
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !6842

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6843, !tbaa !1458
  %readable2 = getelementptr inbounds %struct.buffered, %struct.buffered* %7, i32 0, i32 4, !dbg !6845
  %8 = load i32, i32* %readable2, align 4, !dbg !6845, !tbaa !2223
  %tobool3 = icmp ne i32 %8, 0, !dbg !6846
  br i1 %tobool3, label %land.lhs.true.4, label %cond.false, !dbg !6847

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %9 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6848, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %9, i32 0, i32 12, !dbg !6850
  %10 = load i64, i64* %read_end, align 8, !dbg !6850, !tbaa !3164
  %cmp = icmp ne i64 %10, -1, !dbg !6851
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6852

cond.true:                                        ; preds = %land.lhs.true.4
  %11 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6853, !tbaa !1458
  %read_end5 = getelementptr inbounds %struct.buffered, %struct.buffered* %11, i32 0, i32 12, !dbg !6855
  %12 = load i64, i64* %read_end5, align 8, !dbg !6855, !tbaa !3164
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6856, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 10, !dbg !6857
  %14 = load i64, i64* %pos, align 8, !dbg !6857, !tbaa !2357
  %sub = sub i64 %12, %14, !dbg !6858
  br label %cond.end, !dbg !6852

cond.false:                                       ; preds = %land.lhs.true.4, %land.lhs.true, %entry
  br label %cond.end, !dbg !6859

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !6852
  store i64 %cond, i64* %current_size, align 8, !dbg !6863, !tbaa !2140
  %15 = load i64, i64* %current_size, align 8, !dbg !6866, !tbaa !2140
  %tobool6 = icmp ne i64 %15, 0, !dbg !6866
  br i1 %tobool6, label %if.then, label %if.end.11, !dbg !6868

if.then:                                          ; preds = %cond.end
  %16 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6869, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %16, i32 0, i32 9, !dbg !6871
  %17 = load i8*, i8** %buffer, align 8, !dbg !6871, !tbaa !1717
  %18 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6872, !tbaa !1458
  %pos7 = getelementptr inbounds %struct.buffered, %struct.buffered* %18, i32 0, i32 10, !dbg !6873
  %19 = load i64, i64* %pos7, align 8, !dbg !6873, !tbaa !2357
  %add.ptr = getelementptr i8, i8* %17, i64 %19, !dbg !6874
  %20 = load i64, i64* %current_size, align 8, !dbg !6875, !tbaa !2140
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* %add.ptr, i64 %20), !dbg !6876
  store %struct._object* %call, %struct._object** %data, align 8, !dbg !6877, !tbaa !1458
  %21 = load %struct._object*, %struct._object** %data, align 8, !dbg !6878, !tbaa !1458
  %cmp8 = icmp eq %struct._object* %21, null, !dbg !6880
  br i1 %cmp8, label %if.then.9, label %if.end, !dbg !6881

if.then.9:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !6882
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.185, !dbg !6882

if.end:                                           ; preds = %if.then
  %22 = load i64, i64* %current_size, align 8, !dbg !6883, !tbaa !2140
  %23 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6884, !tbaa !1458
  %pos10 = getelementptr inbounds %struct.buffered, %struct.buffered* %23, i32 0, i32 10, !dbg !6885
  %24 = load i64, i64* %pos10, align 8, !dbg !6886, !tbaa !2357
  %add = add i64 %24, %22, !dbg !6886
  store i64 %add, i64* %pos10, align 8, !dbg !6886, !tbaa !2357
  br label %if.end.11, !dbg !6887

if.end.11:                                        ; preds = %if.end, %cond.end
  %25 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6888, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %25, i32 0, i32 5, !dbg !6889
  %26 = load i32, i32* %writable, align 4, !dbg !6889, !tbaa !2227
  %tobool12 = icmp ne i32 %26, 0, !dbg !6888
  br i1 %tobool12, label %if.then.13, label %if.end.29, !dbg !6890

if.then.13:                                       ; preds = %if.end.11
  %27 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6891, !tbaa !1458
  %call14 = call %struct._object* @buffered_flush_and_rewind_unlocked(%struct.buffered* %27), !dbg !6892
  store %struct._object* %call14, %struct._object** %tmp, align 8, !dbg !6893, !tbaa !1458
  %28 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6894, !tbaa !1458
  %cmp15 = icmp eq %struct._object* %28, null, !dbg !6896
  br i1 %cmp15, label %if.then.16, label %if.end.17, !dbg !6897

if.then.16:                                       ; preds = %if.then.13
  br label %cleanup, !dbg !6898

if.end.17:                                        ; preds = %if.then.13
  br label %do.body, !dbg !6899

do.body:                                          ; preds = %if.end.17
  %29 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6900
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !6900
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !910, metadata !1450), !dbg !6902
  %30 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6903, !tbaa !1458
  store %struct._object* %30, %struct._object** %_py_tmp, align 8, !dbg !6902, !tbaa !1458
  %31 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6904, !tbaa !1458
  %cmp19 = icmp ne %struct._object* %31, null, !dbg !6905
  br i1 %cmp19, label %if.then.20, label %if.end.26, !dbg !6906

if.then.20:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %tmp, align 8, !dbg !6907, !tbaa !1458
  br label %do.body.21, !dbg !6909

do.body.21:                                       ; preds = %if.then.20
  %32 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6910
  call void @llvm.lifetime.start(i64 8, i8* %32) #1, !dbg !6910
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !914, metadata !1450), !dbg !6912
  %33 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6913, !tbaa !1458
  store %struct._object* %33, %struct._object** %_py_decref_tmp, align 8, !dbg !6912, !tbaa !1458
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6914, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !6916
  %35 = load i64, i64* %ob_refcnt, align 8, !dbg !6917, !tbaa !1501
  %dec = add i64 %35, -1, !dbg !6917
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6917, !tbaa !1501
  %cmp23 = icmp ne i64 %dec, 0, !dbg !6918
  br i1 %cmp23, label %if.then.24, label %if.else, !dbg !6919

if.then.24:                                       ; preds = %do.body.21
  br label %if.end.25, !dbg !6920

if.else:                                          ; preds = %do.body.21
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6922, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !6924
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6924, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4, !dbg !6925
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6925, !tbaa !1511
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6926, !tbaa !1458
  call void %38(%struct._object* %39), !dbg !6927
  br label %if.end.25

if.end.25:                                        ; preds = %if.else, %if.then.24
  %40 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6928
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !6928
  br label %do.cond, !dbg !6930

do.cond:                                          ; preds = %if.end.25
  br label %do.end, !dbg !6931

do.end:                                           ; preds = %do.cond
  br label %if.end.26, !dbg !6933

if.end.26:                                        ; preds = %do.end, %do.body
  %41 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6935
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !6935
  br label %do.cond.27, !dbg !6938

do.cond.27:                                       ; preds = %if.end.26
  br label %do.end.28, !dbg !6939

do.end.28:                                        ; preds = %do.cond.27
  br label %if.end.29, !dbg !6941

if.end.29:                                        ; preds = %do.end.28, %if.end.11
  %42 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6942, !tbaa !1458
  call void @_bufferedreader_reset_buf(%struct.buffered* %42), !dbg !6943
  %43 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6944, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %43, i32 0, i32 1, !dbg !6946
  %44 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6946, !tbaa !1676
  %45 = load %struct._object*, %struct._object** @_PyIO_str_readall, align 8, !dbg !6947, !tbaa !1458
  %call30 = call i32 @PyObject_HasAttr(%struct._object* %44, %struct._object* %45), !dbg !6948
  %tobool31 = icmp ne i32 %call30, 0, !dbg !6948
  br i1 %tobool31, label %if.then.32, label %if.end.53, !dbg !6949

if.then.32:                                       ; preds = %if.end.29
  %46 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !6950, !tbaa !1458
  %raw33 = getelementptr inbounds %struct.buffered, %struct.buffered* %46, i32 0, i32 1, !dbg !6952
  %47 = load %struct._object*, %struct._object** %raw33, align 8, !dbg !6952, !tbaa !1676
  %48 = load %struct._object*, %struct._object** @_PyIO_str_readall, align 8, !dbg !6953, !tbaa !1458
  %call34 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %47, %struct._object* %48, i8* null), !dbg !6954
  store %struct._object* %call34, %struct._object** %tmp, align 8, !dbg !6955, !tbaa !1458
  %49 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6956, !tbaa !1458
  %cmp35 = icmp eq %struct._object* %49, null, !dbg !6958
  br i1 %cmp35, label %if.then.36, label %if.end.37, !dbg !6959

if.then.36:                                       ; preds = %if.then.32
  br label %cleanup, !dbg !6960

if.end.37:                                        ; preds = %if.then.32
  %50 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6961, !tbaa !1458
  %cmp38 = icmp ne %struct._object* %50, @_Py_NoneStruct, !dbg !6963
  br i1 %cmp38, label %land.lhs.true.39, label %if.end.43, !dbg !6964

land.lhs.true.39:                                 ; preds = %if.end.37
  %51 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6965, !tbaa !1458
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1, !dbg !6967
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !6967, !tbaa !1509
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 19, !dbg !6968
  %53 = load i64, i64* %tp_flags, align 8, !dbg !6968, !tbaa !2060
  %and = and i64 %53, 134217728, !dbg !6969
  %cmp41 = icmp ne i64 %and, 0, !dbg !6970
  br i1 %cmp41, label %if.end.43, label %if.then.42, !dbg !6971

if.then.42:                                       ; preds = %land.lhs.true.39
  %54 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6972, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %54, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i32 0, i32 0)), !dbg !6974
  br label %cleanup, !dbg !6975

if.end.43:                                        ; preds = %land.lhs.true.39, %if.end.37
  %55 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6976, !tbaa !1458
  %cmp44 = icmp eq %struct._object* %55, @_Py_NoneStruct, !dbg !6978
  br i1 %cmp44, label %if.then.45, label %if.else.49, !dbg !6979

if.then.45:                                       ; preds = %if.end.43
  %56 = load i64, i64* %current_size, align 8, !dbg !6980, !tbaa !2140
  %cmp46 = icmp eq i64 %56, 0, !dbg !6983
  br i1 %cmp46, label %if.then.47, label %if.else.48, !dbg !6984

if.then.47:                                       ; preds = %if.then.45
  store %struct._object* @_Py_NoneStruct, %struct._object** %res, align 8, !dbg !6985, !tbaa !1458
  br label %cleanup, !dbg !6987

if.else.48:                                       ; preds = %if.then.45
  %57 = load %struct._object*, %struct._object** %data, align 8, !dbg !6988, !tbaa !1458
  store %struct._object* %57, %struct._object** %res, align 8, !dbg !6990, !tbaa !1458
  br label %cleanup, !dbg !6991

if.else.49:                                       ; preds = %if.end.43
  %58 = load i64, i64* %current_size, align 8, !dbg !6992, !tbaa !2140
  %tobool50 = icmp ne i64 %58, 0, !dbg !6992
  br i1 %tobool50, label %if.then.51, label %if.else.52, !dbg !6994

if.then.51:                                       ; preds = %if.else.49
  %59 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6995, !tbaa !1458
  call void @PyBytes_Concat(%struct._object** %data, %struct._object* %59), !dbg !6997
  %60 = load %struct._object*, %struct._object** %data, align 8, !dbg !6998, !tbaa !1458
  store %struct._object* %60, %struct._object** %res, align 8, !dbg !6999, !tbaa !1458
  br label %cleanup, !dbg !7000

if.else.52:                                       ; preds = %if.else.49
  %61 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7001, !tbaa !1458
  store %struct._object* %61, %struct._object** %res, align 8, !dbg !7003, !tbaa !1458
  br label %cleanup, !dbg !7004

if.end.53:                                        ; preds = %if.end.29
  %call54 = call %struct._object* @PyList_New(i64 0), !dbg !7005
  store %struct._object* %call54, %struct._object** %chunks, align 8, !dbg !7006, !tbaa !1458
  %62 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7007, !tbaa !1458
  %cmp55 = icmp eq %struct._object* %62, null, !dbg !7009
  br i1 %cmp55, label %if.then.56, label %if.end.57, !dbg !7010

if.then.56:                                       ; preds = %if.end.53
  br label %cleanup, !dbg !7011

if.end.57:                                        ; preds = %if.end.53
  br label %while.cond, !dbg !7012

while.cond:                                       ; preds = %if.end.114, %if.end.57
  br label %while.body, !dbg !7013

while.body:                                       ; preds = %while.cond
  %63 = load %struct._object*, %struct._object** %data, align 8, !dbg !7015, !tbaa !1458
  %tobool58 = icmp ne %struct._object* %63, null, !dbg !7015
  br i1 %tobool58, label %if.then.59, label %if.end.85, !dbg !7016

if.then.59:                                       ; preds = %while.body
  %64 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7017, !tbaa !1458
  %65 = load %struct._object*, %struct._object** %data, align 8, !dbg !7019, !tbaa !1458
  %call60 = call i32 @PyList_Append(%struct._object* %64, %struct._object* %65), !dbg !7020
  %cmp61 = icmp slt i32 %call60, 0, !dbg !7021
  br i1 %cmp61, label %if.then.62, label %if.end.63, !dbg !7022

if.then.62:                                       ; preds = %if.then.59
  br label %cleanup, !dbg !7023

if.end.63:                                        ; preds = %if.then.59
  br label %do.body.64, !dbg !7024

do.body.64:                                       ; preds = %if.end.63
  %66 = bitcast %struct._object** %_py_tmp66 to i8*, !dbg !7025
  call void @llvm.lifetime.start(i64 8, i8* %66) #1, !dbg !7025
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp66, metadata !918, metadata !1450), !dbg !7027
  %67 = load %struct._object*, %struct._object** %data, align 8, !dbg !7028, !tbaa !1458
  store %struct._object* %67, %struct._object** %_py_tmp66, align 8, !dbg !7027, !tbaa !1458
  %68 = load %struct._object*, %struct._object** %_py_tmp66, align 8, !dbg !7029, !tbaa !1458
  %cmp67 = icmp ne %struct._object* %68, null, !dbg !7030
  br i1 %cmp67, label %if.then.68, label %if.end.82, !dbg !7031

if.then.68:                                       ; preds = %do.body.64
  store %struct._object* null, %struct._object** %data, align 8, !dbg !7032, !tbaa !1458
  br label %do.body.69, !dbg !7034

do.body.69:                                       ; preds = %if.then.68
  %69 = bitcast %struct._object** %_py_decref_tmp71 to i8*, !dbg !7035
  call void @llvm.lifetime.start(i64 8, i8* %69) #1, !dbg !7035
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp71, metadata !923, metadata !1450), !dbg !7037
  %70 = load %struct._object*, %struct._object** %_py_tmp66, align 8, !dbg !7038, !tbaa !1458
  store %struct._object* %70, %struct._object** %_py_decref_tmp71, align 8, !dbg !7037, !tbaa !1458
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !7039, !tbaa !1458
  %ob_refcnt72 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0, !dbg !7041
  %72 = load i64, i64* %ob_refcnt72, align 8, !dbg !7042, !tbaa !1501
  %dec73 = add i64 %72, -1, !dbg !7042
  store i64 %dec73, i64* %ob_refcnt72, align 8, !dbg !7042, !tbaa !1501
  %cmp74 = icmp ne i64 %dec73, 0, !dbg !7043
  br i1 %cmp74, label %if.then.75, label %if.else.76, !dbg !7044

if.then.75:                                       ; preds = %do.body.69
  br label %if.end.79, !dbg !7045

if.else.76:                                       ; preds = %do.body.69
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !7047, !tbaa !1458
  %ob_type77 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1, !dbg !7049
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type77, align 8, !dbg !7049, !tbaa !1509
  %tp_dealloc78 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4, !dbg !7050
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc78, align 8, !dbg !7050, !tbaa !1511
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !7051, !tbaa !1458
  call void %75(%struct._object* %76), !dbg !7052
  br label %if.end.79

if.end.79:                                        ; preds = %if.else.76, %if.then.75
  %77 = bitcast %struct._object** %_py_decref_tmp71 to i8*, !dbg !7053
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !7053
  br label %do.cond.80, !dbg !7055

do.cond.80:                                       ; preds = %if.end.79
  br label %do.end.81, !dbg !7056

do.end.81:                                        ; preds = %do.cond.80
  br label %if.end.82, !dbg !7058

if.end.82:                                        ; preds = %do.end.81, %do.body.64
  %78 = bitcast %struct._object** %_py_tmp66 to i8*, !dbg !7060
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !7060
  br label %do.cond.83, !dbg !7063

do.cond.83:                                       ; preds = %if.end.82
  br label %do.end.84, !dbg !7064

do.end.84:                                        ; preds = %do.cond.83
  br label %if.end.85, !dbg !7066

if.end.85:                                        ; preds = %do.end.84, %while.body
  %79 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7067, !tbaa !1458
  %raw86 = getelementptr inbounds %struct.buffered, %struct.buffered* %79, i32 0, i32 1, !dbg !7068
  %80 = load %struct._object*, %struct._object** %raw86, align 8, !dbg !7068, !tbaa !1676
  %81 = load %struct._object*, %struct._object** @_PyIO_str_read, align 8, !dbg !7069, !tbaa !1458
  %call87 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %80, %struct._object* %81, i8* null), !dbg !7070
  store %struct._object* %call87, %struct._object** %data, align 8, !dbg !7071, !tbaa !1458
  %82 = load %struct._object*, %struct._object** %data, align 8, !dbg !7072, !tbaa !1458
  %cmp88 = icmp eq %struct._object* %82, null, !dbg !7074
  br i1 %cmp88, label %if.then.89, label %if.end.90, !dbg !7075

if.then.89:                                       ; preds = %if.end.85
  br label %cleanup, !dbg !7076

if.end.90:                                        ; preds = %if.end.85
  %83 = load %struct._object*, %struct._object** %data, align 8, !dbg !7077, !tbaa !1458
  %cmp91 = icmp ne %struct._object* %83, @_Py_NoneStruct, !dbg !7079
  br i1 %cmp91, label %land.lhs.true.92, label %if.end.98, !dbg !7080

land.lhs.true.92:                                 ; preds = %if.end.90
  %84 = load %struct._object*, %struct._object** %data, align 8, !dbg !7081, !tbaa !1458
  %ob_type93 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1, !dbg !7083
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type93, align 8, !dbg !7083, !tbaa !1509
  %tp_flags94 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 19, !dbg !7084
  %86 = load i64, i64* %tp_flags94, align 8, !dbg !7084, !tbaa !2060
  %and95 = and i64 %86, 134217728, !dbg !7085
  %cmp96 = icmp ne i64 %and95, 0, !dbg !7086
  br i1 %cmp96, label %if.end.98, label %if.then.97, !dbg !7087

if.then.97:                                       ; preds = %land.lhs.true.92
  %87 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7088, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %87, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i32 0, i32 0)), !dbg !7090
  br label %cleanup, !dbg !7091

if.end.98:                                        ; preds = %land.lhs.true.92, %if.end.90
  %88 = load %struct._object*, %struct._object** %data, align 8, !dbg !7092, !tbaa !1458
  %cmp99 = icmp eq %struct._object* %88, @_Py_NoneStruct, !dbg !7094
  br i1 %cmp99, label %if.then.101, label %lor.lhs.false, !dbg !7095

lor.lhs.false:                                    ; preds = %if.end.98
  %89 = load %struct._object*, %struct._object** %data, align 8, !dbg !7096, !tbaa !1458
  %90 = bitcast %struct._object* %89 to %struct.PyVarObject*, !dbg !7098
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %90, i32 0, i32 1, !dbg !7099
  %91 = load i64, i64* %ob_size, align 8, !dbg !7099, !tbaa !2102
  %cmp100 = icmp eq i64 %91, 0, !dbg !7100
  br i1 %cmp100, label %if.then.101, label %if.end.106, !dbg !7101

if.then.101:                                      ; preds = %lor.lhs.false, %if.end.98
  %92 = load i64, i64* %current_size, align 8, !dbg !7102, !tbaa !2140
  %cmp102 = icmp eq i64 %92, 0, !dbg !7105
  br i1 %cmp102, label %if.then.103, label %if.else.104, !dbg !7106

if.then.103:                                      ; preds = %if.then.101
  %93 = load %struct._object*, %struct._object** %data, align 8, !dbg !7107, !tbaa !1458
  store %struct._object* %93, %struct._object** %res, align 8, !dbg !7109, !tbaa !1458
  br label %cleanup, !dbg !7110

if.else.104:                                      ; preds = %if.then.101
  %94 = load %struct._object*, %struct._object** @_PyIO_empty_bytes, align 8, !dbg !7111, !tbaa !1458
  %95 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7113, !tbaa !1458
  %call105 = call %struct._object* @_PyBytes_Join(%struct._object* %94, %struct._object* %95), !dbg !7114
  store %struct._object* %call105, %struct._object** %tmp, align 8, !dbg !7115, !tbaa !1458
  %96 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7116, !tbaa !1458
  store %struct._object* %96, %struct._object** %res, align 8, !dbg !7117, !tbaa !1458
  br label %cleanup, !dbg !7118

if.end.106:                                       ; preds = %lor.lhs.false
  %97 = load %struct._object*, %struct._object** %data, align 8, !dbg !7119, !tbaa !1458
  %98 = bitcast %struct._object* %97 to %struct.PyVarObject*, !dbg !7120
  %ob_size107 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %98, i32 0, i32 1, !dbg !7121
  %99 = load i64, i64* %ob_size107, align 8, !dbg !7121, !tbaa !2102
  %100 = load i64, i64* %current_size, align 8, !dbg !7122, !tbaa !2140
  %add108 = add i64 %100, %99, !dbg !7122
  store i64 %add108, i64* %current_size, align 8, !dbg !7122, !tbaa !2140
  %101 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7123, !tbaa !1458
  %abs_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %101, i32 0, i32 8, !dbg !7125
  %102 = load i64, i64* %abs_pos, align 8, !dbg !7125, !tbaa !4314
  %cmp109 = icmp ne i64 %102, -1, !dbg !7126
  br i1 %cmp109, label %if.then.110, label %if.end.114, !dbg !7127

if.then.110:                                      ; preds = %if.end.106
  %103 = load %struct._object*, %struct._object** %data, align 8, !dbg !7128, !tbaa !1458
  %104 = bitcast %struct._object* %103 to %struct.PyVarObject*, !dbg !7129
  %ob_size111 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %104, i32 0, i32 1, !dbg !7130
  %105 = load i64, i64* %ob_size111, align 8, !dbg !7130, !tbaa !2102
  %106 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7131, !tbaa !1458
  %abs_pos112 = getelementptr inbounds %struct.buffered, %struct.buffered* %106, i32 0, i32 8, !dbg !7132
  %107 = load i64, i64* %abs_pos112, align 8, !dbg !7133, !tbaa !4314
  %add113 = add i64 %107, %105, !dbg !7133
  store i64 %add113, i64* %abs_pos112, align 8, !dbg !7133, !tbaa !4314
  br label %if.end.114, !dbg !7131

if.end.114:                                       ; preds = %if.then.110, %if.end.106
  br label %while.cond, !dbg !7012

cleanup:                                          ; preds = %if.else.104, %if.then.103, %if.then.97, %if.then.89, %if.then.62, %if.then.56, %if.else.52, %if.then.51, %if.else.48, %if.then.47, %if.then.42, %if.then.36, %if.then.16
  br label %do.body.115, !dbg !7134

do.body.115:                                      ; preds = %cleanup
  %108 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !7135
  call void @llvm.lifetime.start(i64 8, i8* %108) #1, !dbg !7135
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !927, metadata !1450), !dbg !7137
  %109 = load %struct._object*, %struct._object** %res, align 8, !dbg !7138, !tbaa !1458
  store %struct._object* %109, %struct._object** %_py_xincref_tmp, align 8, !dbg !7137, !tbaa !1458
  %110 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !7139, !tbaa !1458
  %cmp117 = icmp ne %struct._object* %110, null, !dbg !7141
  br i1 %cmp117, label %if.then.118, label %if.end.120, !dbg !7142

if.then.118:                                      ; preds = %do.body.115
  %111 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !7143, !tbaa !1458
  %ob_refcnt119 = getelementptr inbounds %struct._object, %struct._object* %111, i32 0, i32 0, !dbg !7145
  %112 = load i64, i64* %ob_refcnt119, align 8, !dbg !7146, !tbaa !1501
  %inc = add i64 %112, 1, !dbg !7146
  store i64 %inc, i64* %ob_refcnt119, align 8, !dbg !7146, !tbaa !1501
  br label %if.end.120, !dbg !7147

if.end.120:                                       ; preds = %if.then.118, %do.body.115
  %113 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !7148
  call void @llvm.lifetime.end(i64 8, i8* %113) #1, !dbg !7148
  br label %do.cond.121, !dbg !7150

do.cond.121:                                      ; preds = %if.end.120
  br label %do.end.122, !dbg !7151

do.end.122:                                       ; preds = %do.cond.121
  br label %do.body.123, !dbg !7153

do.body.123:                                      ; preds = %do.end.122
  %114 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7154
  call void @llvm.lifetime.start(i64 8, i8* %114) #1, !dbg !7154
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !929, metadata !1450), !dbg !7156
  %115 = load %struct._object*, %struct._object** %data, align 8, !dbg !7157, !tbaa !1458
  store %struct._object* %115, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7156, !tbaa !1458
  %116 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7158, !tbaa !1458
  %cmp125 = icmp ne %struct._object* %116, null, !dbg !7159
  br i1 %cmp125, label %if.then.126, label %if.end.140, !dbg !7160

if.then.126:                                      ; preds = %do.body.123
  br label %do.body.127, !dbg !7161

do.body.127:                                      ; preds = %if.then.126
  %117 = bitcast %struct._object** %_py_decref_tmp129 to i8*, !dbg !7163
  call void @llvm.lifetime.start(i64 8, i8* %117) #1, !dbg !7163
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp129, metadata !931, metadata !1450), !dbg !7165
  %118 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7166, !tbaa !1458
  store %struct._object* %118, %struct._object** %_py_decref_tmp129, align 8, !dbg !7165, !tbaa !1458
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp129, align 8, !dbg !7167, !tbaa !1458
  %ob_refcnt130 = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 0, !dbg !7169
  %120 = load i64, i64* %ob_refcnt130, align 8, !dbg !7170, !tbaa !1501
  %dec131 = add i64 %120, -1, !dbg !7170
  store i64 %dec131, i64* %ob_refcnt130, align 8, !dbg !7170, !tbaa !1501
  %cmp132 = icmp ne i64 %dec131, 0, !dbg !7171
  br i1 %cmp132, label %if.then.133, label %if.else.134, !dbg !7172

if.then.133:                                      ; preds = %do.body.127
  br label %if.end.137, !dbg !7173

if.else.134:                                      ; preds = %do.body.127
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp129, align 8, !dbg !7175, !tbaa !1458
  %ob_type135 = getelementptr inbounds %struct._object, %struct._object* %121, i32 0, i32 1, !dbg !7177
  %122 = load %struct._typeobject*, %struct._typeobject** %ob_type135, align 8, !dbg !7177, !tbaa !1509
  %tp_dealloc136 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %122, i32 0, i32 4, !dbg !7178
  %123 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc136, align 8, !dbg !7178, !tbaa !1511
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp129, align 8, !dbg !7179, !tbaa !1458
  call void %123(%struct._object* %124), !dbg !7180
  br label %if.end.137

if.end.137:                                       ; preds = %if.else.134, %if.then.133
  %125 = bitcast %struct._object** %_py_decref_tmp129 to i8*, !dbg !7181
  call void @llvm.lifetime.end(i64 8, i8* %125) #1, !dbg !7181
  br label %do.cond.138, !dbg !7183

do.cond.138:                                      ; preds = %if.end.137
  br label %do.end.139, !dbg !7184

do.end.139:                                       ; preds = %do.cond.138
  br label %if.end.140, !dbg !7186

if.end.140:                                       ; preds = %do.end.139, %do.body.123
  %126 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7188
  call void @llvm.lifetime.end(i64 8, i8* %126) #1, !dbg !7188
  br label %do.cond.141, !dbg !7190

do.cond.141:                                      ; preds = %if.end.140
  br label %do.end.142, !dbg !7191

do.end.142:                                       ; preds = %do.cond.141
  br label %do.body.143, !dbg !7193

do.body.143:                                      ; preds = %do.end.142
  %127 = bitcast %struct._object** %_py_xdecref_tmp145 to i8*, !dbg !7194
  call void @llvm.lifetime.start(i64 8, i8* %127) #1, !dbg !7194
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp145, metadata !934, metadata !1450), !dbg !7196
  %128 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7197, !tbaa !1458
  store %struct._object* %128, %struct._object** %_py_xdecref_tmp145, align 8, !dbg !7196, !tbaa !1458
  %129 = load %struct._object*, %struct._object** %_py_xdecref_tmp145, align 8, !dbg !7198, !tbaa !1458
  %cmp146 = icmp ne %struct._object* %129, null, !dbg !7199
  br i1 %cmp146, label %if.then.147, label %if.end.161, !dbg !7200

if.then.147:                                      ; preds = %do.body.143
  br label %do.body.148, !dbg !7201

do.body.148:                                      ; preds = %if.then.147
  %130 = bitcast %struct._object** %_py_decref_tmp150 to i8*, !dbg !7203
  call void @llvm.lifetime.start(i64 8, i8* %130) #1, !dbg !7203
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp150, metadata !936, metadata !1450), !dbg !7205
  %131 = load %struct._object*, %struct._object** %_py_xdecref_tmp145, align 8, !dbg !7206, !tbaa !1458
  store %struct._object* %131, %struct._object** %_py_decref_tmp150, align 8, !dbg !7205, !tbaa !1458
  %132 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !7207, !tbaa !1458
  %ob_refcnt151 = getelementptr inbounds %struct._object, %struct._object* %132, i32 0, i32 0, !dbg !7209
  %133 = load i64, i64* %ob_refcnt151, align 8, !dbg !7210, !tbaa !1501
  %dec152 = add i64 %133, -1, !dbg !7210
  store i64 %dec152, i64* %ob_refcnt151, align 8, !dbg !7210, !tbaa !1501
  %cmp153 = icmp ne i64 %dec152, 0, !dbg !7211
  br i1 %cmp153, label %if.then.154, label %if.else.155, !dbg !7212

if.then.154:                                      ; preds = %do.body.148
  br label %if.end.158, !dbg !7213

if.else.155:                                      ; preds = %do.body.148
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !7215, !tbaa !1458
  %ob_type156 = getelementptr inbounds %struct._object, %struct._object* %134, i32 0, i32 1, !dbg !7217
  %135 = load %struct._typeobject*, %struct._typeobject** %ob_type156, align 8, !dbg !7217, !tbaa !1509
  %tp_dealloc157 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %135, i32 0, i32 4, !dbg !7218
  %136 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc157, align 8, !dbg !7218, !tbaa !1511
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !7219, !tbaa !1458
  call void %136(%struct._object* %137), !dbg !7220
  br label %if.end.158

if.end.158:                                       ; preds = %if.else.155, %if.then.154
  %138 = bitcast %struct._object** %_py_decref_tmp150 to i8*, !dbg !7221
  call void @llvm.lifetime.end(i64 8, i8* %138) #1, !dbg !7221
  br label %do.cond.159, !dbg !7223

do.cond.159:                                      ; preds = %if.end.158
  br label %do.end.160, !dbg !7224

do.end.160:                                       ; preds = %do.cond.159
  br label %if.end.161, !dbg !7226

if.end.161:                                       ; preds = %do.end.160, %do.body.143
  %139 = bitcast %struct._object** %_py_xdecref_tmp145 to i8*, !dbg !7228
  call void @llvm.lifetime.end(i64 8, i8* %139) #1, !dbg !7228
  br label %do.cond.162, !dbg !7229

do.cond.162:                                      ; preds = %if.end.161
  br label %do.end.163, !dbg !7230

do.end.163:                                       ; preds = %do.cond.162
  br label %do.body.164, !dbg !7232

do.body.164:                                      ; preds = %do.end.163
  %140 = bitcast %struct._object** %_py_xdecref_tmp166 to i8*, !dbg !7233
  call void @llvm.lifetime.start(i64 8, i8* %140) #1, !dbg !7233
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp166, metadata !939, metadata !1450), !dbg !7235
  %141 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7236, !tbaa !1458
  store %struct._object* %141, %struct._object** %_py_xdecref_tmp166, align 8, !dbg !7235, !tbaa !1458
  %142 = load %struct._object*, %struct._object** %_py_xdecref_tmp166, align 8, !dbg !7237, !tbaa !1458
  %cmp167 = icmp ne %struct._object* %142, null, !dbg !7238
  br i1 %cmp167, label %if.then.168, label %if.end.182, !dbg !7239

if.then.168:                                      ; preds = %do.body.164
  br label %do.body.169, !dbg !7240

do.body.169:                                      ; preds = %if.then.168
  %143 = bitcast %struct._object** %_py_decref_tmp171 to i8*, !dbg !7242
  call void @llvm.lifetime.start(i64 8, i8* %143) #1, !dbg !7242
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp171, metadata !941, metadata !1450), !dbg !7244
  %144 = load %struct._object*, %struct._object** %_py_xdecref_tmp166, align 8, !dbg !7245, !tbaa !1458
  store %struct._object* %144, %struct._object** %_py_decref_tmp171, align 8, !dbg !7244, !tbaa !1458
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp171, align 8, !dbg !7246, !tbaa !1458
  %ob_refcnt172 = getelementptr inbounds %struct._object, %struct._object* %145, i32 0, i32 0, !dbg !7248
  %146 = load i64, i64* %ob_refcnt172, align 8, !dbg !7249, !tbaa !1501
  %dec173 = add i64 %146, -1, !dbg !7249
  store i64 %dec173, i64* %ob_refcnt172, align 8, !dbg !7249, !tbaa !1501
  %cmp174 = icmp ne i64 %dec173, 0, !dbg !7250
  br i1 %cmp174, label %if.then.175, label %if.else.176, !dbg !7251

if.then.175:                                      ; preds = %do.body.169
  br label %if.end.179, !dbg !7252

if.else.176:                                      ; preds = %do.body.169
  %147 = load %struct._object*, %struct._object** %_py_decref_tmp171, align 8, !dbg !7254, !tbaa !1458
  %ob_type177 = getelementptr inbounds %struct._object, %struct._object* %147, i32 0, i32 1, !dbg !7256
  %148 = load %struct._typeobject*, %struct._typeobject** %ob_type177, align 8, !dbg !7256, !tbaa !1509
  %tp_dealloc178 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %148, i32 0, i32 4, !dbg !7257
  %149 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc178, align 8, !dbg !7257, !tbaa !1511
  %150 = load %struct._object*, %struct._object** %_py_decref_tmp171, align 8, !dbg !7258, !tbaa !1458
  call void %149(%struct._object* %150), !dbg !7259
  br label %if.end.179

if.end.179:                                       ; preds = %if.else.176, %if.then.175
  %151 = bitcast %struct._object** %_py_decref_tmp171 to i8*, !dbg !7260
  call void @llvm.lifetime.end(i64 8, i8* %151) #1, !dbg !7260
  br label %do.cond.180, !dbg !7262

do.cond.180:                                      ; preds = %if.end.179
  br label %do.end.181, !dbg !7263

do.end.181:                                       ; preds = %do.cond.180
  br label %if.end.182, !dbg !7265

if.end.182:                                       ; preds = %do.end.181, %do.body.164
  %152 = bitcast %struct._object** %_py_xdecref_tmp166 to i8*, !dbg !7267
  call void @llvm.lifetime.end(i64 8, i8* %152) #1, !dbg !7267
  br label %do.cond.183, !dbg !7268

do.cond.183:                                      ; preds = %if.end.182
  br label %do.end.184, !dbg !7269

do.end.184:                                       ; preds = %do.cond.183
  %153 = load %struct._object*, %struct._object** %res, align 8, !dbg !7271, !tbaa !1458
  store %struct._object* %153, %struct._object** %retval, !dbg !7272
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.185, !dbg !7272

cleanup.185:                                      ; preds = %do.end.184, %if.then.9
  %154 = bitcast %struct._object** %chunks to i8*, !dbg !7273
  call void @llvm.lifetime.end(i64 8, i8* %154) #1, !dbg !7273
  %155 = bitcast %struct._object** %tmp to i8*, !dbg !7273
  call void @llvm.lifetime.end(i64 8, i8* %155) #1, !dbg !7273
  %156 = bitcast %struct._object** %data to i8*, !dbg !7273
  call void @llvm.lifetime.end(i64 8, i8* %156) #1, !dbg !7273
  %157 = bitcast %struct._object** %res to i8*, !dbg !7273
  call void @llvm.lifetime.end(i64 8, i8* %157) #1, !dbg !7273
  %158 = bitcast i64* %current_size to i8*, !dbg !7273
  call void @llvm.lifetime.end(i64 8, i8* %158) #1, !dbg !7273
  %159 = load %struct._object*, %struct._object** %retval, !dbg !7273
  ret %struct._object* %159, !dbg !7273
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_bufferedreader_read_fast(%struct.buffered* %self, i64 %n) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %n.addr = alloca i64, align 8
  %current_size = alloca i64, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !946, metadata !1450), !dbg !7274
  store i64 %n, i64* %n.addr, align 8, !tbaa !2140
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !947, metadata !1450), !dbg !7275
  %0 = bitcast i64* %current_size to i8*, !dbg !7276
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7276
  call void @llvm.dbg.declare(metadata i64* %current_size, metadata !948, metadata !1450), !dbg !7277
  %1 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7278, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %1, i32 0, i32 4, !dbg !7279
  %2 = load i32, i32* %readable, align 4, !dbg !7279, !tbaa !2223
  %tobool = icmp ne i32 %2, 0, !dbg !7278
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !7280

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7281, !tbaa !1458
  %readable1 = getelementptr inbounds %struct.buffered, %struct.buffered* %3, i32 0, i32 4, !dbg !7283
  %4 = load i32, i32* %readable1, align 4, !dbg !7283, !tbaa !2223
  %tobool2 = icmp ne i32 %4, 0, !dbg !7284
  br i1 %tobool2, label %land.lhs.true.3, label %cond.false, !dbg !7285

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7286, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 12, !dbg !7288
  %6 = load i64, i64* %read_end, align 8, !dbg !7288, !tbaa !3164
  %cmp = icmp ne i64 %6, -1, !dbg !7289
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7290

cond.true:                                        ; preds = %land.lhs.true.3
  %7 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7291, !tbaa !1458
  %read_end4 = getelementptr inbounds %struct.buffered, %struct.buffered* %7, i32 0, i32 12, !dbg !7293
  %8 = load i64, i64* %read_end4, align 8, !dbg !7293, !tbaa !3164
  %9 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7294, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %9, i32 0, i32 10, !dbg !7295
  %10 = load i64, i64* %pos, align 8, !dbg !7295, !tbaa !2357
  %sub = sub i64 %8, %10, !dbg !7296
  br label %cond.end, !dbg !7290

cond.false:                                       ; preds = %land.lhs.true.3, %land.lhs.true, %entry
  br label %cond.end, !dbg !7297

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !7290
  store i64 %cond, i64* %current_size, align 8, !dbg !7301, !tbaa !2140
  %11 = load i64, i64* %n.addr, align 8, !dbg !7304, !tbaa !2140
  %12 = load i64, i64* %current_size, align 8, !dbg !7305, !tbaa !2140
  %cmp5 = icmp sle i64 %11, %12, !dbg !7306
  br i1 %cmp5, label %if.then, label %if.end.10, !dbg !7307

if.then:                                          ; preds = %cond.end
  %13 = bitcast %struct._object** %res to i8*, !dbg !7308
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !7308
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !949, metadata !1450), !dbg !7309
  %14 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7310, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %14, i32 0, i32 9, !dbg !7311
  %15 = load i8*, i8** %buffer, align 8, !dbg !7311, !tbaa !1717
  %16 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7312, !tbaa !1458
  %pos6 = getelementptr inbounds %struct.buffered, %struct.buffered* %16, i32 0, i32 10, !dbg !7313
  %17 = load i64, i64* %pos6, align 8, !dbg !7313, !tbaa !2357
  %add.ptr = getelementptr i8, i8* %15, i64 %17, !dbg !7314
  %18 = load i64, i64* %n.addr, align 8, !dbg !7315, !tbaa !2140
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* %add.ptr, i64 %18), !dbg !7316
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !7309, !tbaa !1458
  %19 = load %struct._object*, %struct._object** %res, align 8, !dbg !7317, !tbaa !1458
  %cmp7 = icmp ne %struct._object* %19, null, !dbg !7319
  br i1 %cmp7, label %if.then.8, label %if.end, !dbg !7320

if.then.8:                                        ; preds = %if.then
  %20 = load i64, i64* %n.addr, align 8, !dbg !7321, !tbaa !2140
  %21 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7322, !tbaa !1458
  %pos9 = getelementptr inbounds %struct.buffered, %struct.buffered* %21, i32 0, i32 10, !dbg !7323
  %22 = load i64, i64* %pos9, align 8, !dbg !7324, !tbaa !2357
  %add = add i64 %22, %20, !dbg !7324
  store i64 %add, i64* %pos9, align 8, !dbg !7324, !tbaa !2357
  br label %if.end, !dbg !7322

if.end:                                           ; preds = %if.then.8, %if.then
  %23 = load %struct._object*, %struct._object** %res, align 8, !dbg !7325, !tbaa !1458
  store %struct._object* %23, %struct._object** %retval, !dbg !7326
  store i32 1, i32* %cleanup.dest.slot
  %24 = bitcast %struct._object** %res to i8*, !dbg !7327
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !7327
  br label %cleanup

if.end.10:                                        ; preds = %cond.end
  %25 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7328, !tbaa !1501
  %inc = add i64 %25, 1, !dbg !7328
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7328, !tbaa !1501
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !7329
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7329

cleanup:                                          ; preds = %if.end.10, %if.end
  %26 = bitcast i64* %current_size to i8*, !dbg !7330
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !7330
  %27 = load %struct._object*, %struct._object** %retval, !dbg !7330
  ret %struct._object* %27, !dbg !7330
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_bufferedreader_read_generic(%struct.buffered* %self, i64 %n) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %n.addr = alloca i64, align 8
  %res = alloca %struct._object*, align 8
  %current_size = alloca i64, align 8
  %remaining = alloca i64, align 8
  %written = alloca i64, align 8
  %out = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %r = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %r28 = alloca i64, align 8
  %_py_decref_tmp57 = alloca %struct._object*, align 8
  %r82 = alloca i64, align 8
  %_py_decref_tmp101 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp147 = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !954, metadata !1450), !dbg !7331
  store i64 %n, i64* %n.addr, align 8, !tbaa !2140
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !955, metadata !1450), !dbg !7332
  %0 = bitcast %struct._object** %res to i8*, !dbg !7333
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7333
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !956, metadata !1450), !dbg !7334
  store %struct._object* null, %struct._object** %res, align 8, !dbg !7334, !tbaa !1458
  %1 = bitcast i64* %current_size to i8*, !dbg !7335
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7335
  call void @llvm.dbg.declare(metadata i64* %current_size, metadata !957, metadata !1450), !dbg !7336
  %2 = bitcast i64* %remaining to i8*, !dbg !7335
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7335
  call void @llvm.dbg.declare(metadata i64* %remaining, metadata !958, metadata !1450), !dbg !7337
  %3 = bitcast i64* %written to i8*, !dbg !7335
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !7335
  call void @llvm.dbg.declare(metadata i64* %written, metadata !959, metadata !1450), !dbg !7338
  %4 = bitcast i8** %out to i8*, !dbg !7339
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !7339
  call void @llvm.dbg.declare(metadata i8** %out, metadata !960, metadata !1450), !dbg !7340
  %5 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7341, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %5, i32 0, i32 4, !dbg !7342
  %6 = load i32, i32* %readable, align 4, !dbg !7342, !tbaa !2223
  %tobool = icmp ne i32 %6, 0, !dbg !7341
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !7343

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7344, !tbaa !1458
  %readable1 = getelementptr inbounds %struct.buffered, %struct.buffered* %7, i32 0, i32 4, !dbg !7346
  %8 = load i32, i32* %readable1, align 4, !dbg !7346, !tbaa !2223
  %tobool2 = icmp ne i32 %8, 0, !dbg !7347
  br i1 %tobool2, label %land.lhs.true.3, label %cond.false, !dbg !7348

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %9 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7349, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %9, i32 0, i32 12, !dbg !7351
  %10 = load i64, i64* %read_end, align 8, !dbg !7351, !tbaa !3164
  %cmp = icmp ne i64 %10, -1, !dbg !7352
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7353

cond.true:                                        ; preds = %land.lhs.true.3
  %11 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7354, !tbaa !1458
  %read_end4 = getelementptr inbounds %struct.buffered, %struct.buffered* %11, i32 0, i32 12, !dbg !7356
  %12 = load i64, i64* %read_end4, align 8, !dbg !7356, !tbaa !3164
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7357, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 10, !dbg !7358
  %14 = load i64, i64* %pos, align 8, !dbg !7358, !tbaa !2357
  %sub = sub i64 %12, %14, !dbg !7359
  br label %cond.end, !dbg !7353

cond.false:                                       ; preds = %land.lhs.true.3, %land.lhs.true, %entry
  br label %cond.end, !dbg !7360

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !7353
  store i64 %cond, i64* %current_size, align 8, !dbg !7364, !tbaa !2140
  %15 = load i64, i64* %n.addr, align 8, !dbg !7367, !tbaa !2140
  %16 = load i64, i64* %current_size, align 8, !dbg !7369, !tbaa !2140
  %cmp5 = icmp sle i64 %15, %16, !dbg !7370
  br i1 %cmp5, label %if.then, label %if.end, !dbg !7371

if.then:                                          ; preds = %cond.end
  %17 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7372, !tbaa !1458
  %18 = load i64, i64* %n.addr, align 8, !dbg !7373, !tbaa !2140
  %call = call %struct._object* @_bufferedreader_read_fast(%struct.buffered* %17, i64 %18), !dbg !7374
  store %struct._object* %call, %struct._object** %retval, !dbg !7375
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.161, !dbg !7375

if.end:                                           ; preds = %cond.end
  %19 = load i64, i64* %n.addr, align 8, !dbg !7376, !tbaa !2140
  %call6 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %19), !dbg !7377
  store %struct._object* %call6, %struct._object** %res, align 8, !dbg !7378, !tbaa !1458
  %20 = load %struct._object*, %struct._object** %res, align 8, !dbg !7379, !tbaa !1458
  %cmp7 = icmp eq %struct._object* %20, null, !dbg !7381
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !7382

if.then.8:                                        ; preds = %if.end
  br label %error, !dbg !7383

if.end.9:                                         ; preds = %if.end
  %21 = load %struct._object*, %struct._object** %res, align 8, !dbg !7384, !tbaa !1458
  %22 = bitcast %struct._object* %21 to %struct.PyBytesObject*, !dbg !7385
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %22, i32 0, i32 2, !dbg !7386
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !7387
  store i8* %arraydecay, i8** %out, align 8, !dbg !7388, !tbaa !1458
  %23 = load i64, i64* %n.addr, align 8, !dbg !7389, !tbaa !2140
  store i64 %23, i64* %remaining, align 8, !dbg !7390, !tbaa !2140
  store i64 0, i64* %written, align 8, !dbg !7391, !tbaa !2140
  %24 = load i64, i64* %current_size, align 8, !dbg !7392, !tbaa !2140
  %cmp10 = icmp sgt i64 %24, 0, !dbg !7394
  br i1 %cmp10, label %if.then.11, label %if.end.16, !dbg !7395

if.then.11:                                       ; preds = %if.end.9
  %25 = load i8*, i8** %out, align 8, !dbg !7396, !tbaa !1458
  %26 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7398, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %26, i32 0, i32 9, !dbg !7399
  %27 = load i8*, i8** %buffer, align 8, !dbg !7399, !tbaa !1717
  %28 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7400, !tbaa !1458
  %pos12 = getelementptr inbounds %struct.buffered, %struct.buffered* %28, i32 0, i32 10, !dbg !7401
  %29 = load i64, i64* %pos12, align 8, !dbg !7401, !tbaa !2357
  %add.ptr = getelementptr i8, i8* %27, i64 %29, !dbg !7402
  %30 = load i64, i64* %current_size, align 8, !dbg !7403, !tbaa !2140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %add.ptr, i64 %30, i32 1, i1 false), !dbg !7404
  %31 = load i64, i64* %current_size, align 8, !dbg !7405, !tbaa !2140
  %32 = load i64, i64* %remaining, align 8, !dbg !7406, !tbaa !2140
  %sub13 = sub i64 %32, %31, !dbg !7406
  store i64 %sub13, i64* %remaining, align 8, !dbg !7406, !tbaa !2140
  %33 = load i64, i64* %current_size, align 8, !dbg !7407, !tbaa !2140
  %34 = load i64, i64* %written, align 8, !dbg !7408, !tbaa !2140
  %add = add i64 %34, %33, !dbg !7408
  store i64 %add, i64* %written, align 8, !dbg !7408, !tbaa !2140
  %35 = load i64, i64* %current_size, align 8, !dbg !7409, !tbaa !2140
  %36 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7410, !tbaa !1458
  %pos14 = getelementptr inbounds %struct.buffered, %struct.buffered* %36, i32 0, i32 10, !dbg !7411
  %37 = load i64, i64* %pos14, align 8, !dbg !7412, !tbaa !2357
  %add15 = add i64 %37, %35, !dbg !7412
  store i64 %add15, i64* %pos14, align 8, !dbg !7412, !tbaa !2357
  br label %if.end.16, !dbg !7413

if.end.16:                                        ; preds = %if.then.11, %if.end.9
  %38 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7414, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %38, i32 0, i32 5, !dbg !7415
  %39 = load i32, i32* %writable, align 4, !dbg !7415, !tbaa !2227
  %tobool17 = icmp ne i32 %39, 0, !dbg !7414
  br i1 %tobool17, label %if.then.18, label %if.end.26, !dbg !7416

if.then.18:                                       ; preds = %if.end.16
  %40 = bitcast %struct._object** %r to i8*, !dbg !7417
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !7417
  call void @llvm.dbg.declare(metadata %struct._object** %r, metadata !961, metadata !1450), !dbg !7418
  %41 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7419, !tbaa !1458
  %call19 = call %struct._object* @buffered_flush_and_rewind_unlocked(%struct.buffered* %41), !dbg !7420
  store %struct._object* %call19, %struct._object** %r, align 8, !dbg !7418, !tbaa !1458
  %42 = load %struct._object*, %struct._object** %r, align 8, !dbg !7421, !tbaa !1458
  %cmp20 = icmp eq %struct._object* %42, null, !dbg !7423
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !7424

if.then.21:                                       ; preds = %if.then.18
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7425

if.end.22:                                        ; preds = %if.then.18
  br label %do.body, !dbg !7426

do.body:                                          ; preds = %if.end.22
  %43 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7427
  call void @llvm.lifetime.start(i64 8, i8* %43) #1, !dbg !7427
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !964, metadata !1450), !dbg !7429
  %44 = load %struct._object*, %struct._object** %r, align 8, !dbg !7430, !tbaa !1458
  store %struct._object* %44, %struct._object** %_py_decref_tmp, align 8, !dbg !7429, !tbaa !1458
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7431, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0, !dbg !7433
  %46 = load i64, i64* %ob_refcnt, align 8, !dbg !7434, !tbaa !1501
  %dec = add i64 %46, -1, !dbg !7434
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7434, !tbaa !1501
  %cmp23 = icmp ne i64 %dec, 0, !dbg !7435
  br i1 %cmp23, label %if.then.24, label %if.else, !dbg !7436

if.then.24:                                       ; preds = %do.body
  br label %if.end.25, !dbg !7437

if.else:                                          ; preds = %do.body
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7439, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1, !dbg !7441
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7441, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4, !dbg !7442
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7442, !tbaa !1511
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7443, !tbaa !1458
  call void %49(%struct._object* %50), !dbg !7444
  br label %if.end.25

if.end.25:                                        ; preds = %if.else, %if.then.24
  %51 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7445
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !7445
  br label %do.cond, !dbg !7447

do.cond:                                          ; preds = %if.end.25
  br label %do.end, !dbg !7448

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !7450
  br label %cleanup, !dbg !7450

cleanup:                                          ; preds = %do.end, %if.then.21
  %52 = bitcast %struct._object** %r to i8*, !dbg !7451
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !7451
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %error, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.26, !dbg !7453

if.end.26:                                        ; preds = %cleanup.cont, %if.end.16
  %53 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7454, !tbaa !1458
  call void @_bufferedreader_reset_buf(%struct.buffered* %53), !dbg !7455
  br label %while.cond, !dbg !7456

while.cond:                                       ; preds = %cleanup.cont.73, %if.end.26
  %54 = load i64, i64* %remaining, align 8, !dbg !7457, !tbaa !2140
  %cmp27 = icmp sgt i64 %54, 0, !dbg !7459
  br i1 %cmp27, label %while.body, label %while.end, !dbg !7456

while.body:                                       ; preds = %while.cond
  %55 = bitcast i64* %r28 to i8*, !dbg !7460
  call void @llvm.lifetime.start(i64 8, i8* %55) #1, !dbg !7460
  call void @llvm.dbg.declare(metadata i64* %r28, metadata !966, metadata !1450), !dbg !7461
  %56 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7462, !tbaa !1458
  %buffer_mask = getelementptr inbounds %struct.buffered, %struct.buffered* %56, i32 0, i32 18, !dbg !7463
  %57 = load i64, i64* %buffer_mask, align 8, !dbg !7463, !tbaa !7464
  %tobool29 = icmp ne i64 %57, 0, !dbg !7462
  br i1 %tobool29, label %cond.true.30, label %cond.false.32, !dbg !7462

cond.true.30:                                     ; preds = %while.body
  %58 = load i64, i64* %remaining, align 8, !dbg !7465, !tbaa !2140
  %59 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7467, !tbaa !1458
  %buffer_mask31 = getelementptr inbounds %struct.buffered, %struct.buffered* %59, i32 0, i32 18, !dbg !7468
  %60 = load i64, i64* %buffer_mask31, align 8, !dbg !7468, !tbaa !7464
  %neg = xor i64 %60, -1, !dbg !7469
  %and = and i64 %58, %neg, !dbg !7470
  br label %cond.end.34, !dbg !7462

cond.false.32:                                    ; preds = %while.body
  %61 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7471, !tbaa !1458
  %buffer_size = getelementptr inbounds %struct.buffered, %struct.buffered* %61, i32 0, i32 17, !dbg !7473
  %62 = load i64, i64* %buffer_size, align 8, !dbg !7473, !tbaa !2219
  %63 = load i64, i64* %remaining, align 8, !dbg !7474, !tbaa !2140
  %64 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7475, !tbaa !1458
  %buffer_size33 = getelementptr inbounds %struct.buffered, %struct.buffered* %64, i32 0, i32 17, !dbg !7476
  %65 = load i64, i64* %buffer_size33, align 8, !dbg !7476, !tbaa !2219
  %div = sdiv i64 %63, %65, !dbg !7477
  %mul = mul i64 %62, %div, !dbg !7478
  br label %cond.end.34, !dbg !7462

cond.end.34:                                      ; preds = %cond.false.32, %cond.true.30
  %cond35 = phi i64 [ %and, %cond.true.30 ], [ %mul, %cond.false.32 ], !dbg !7462
  store i64 %cond35, i64* %r28, align 8, !dbg !7479, !tbaa !2140
  %66 = load i64, i64* %r28, align 8, !dbg !7482, !tbaa !2140
  %cmp36 = icmp eq i64 %66, 0, !dbg !7484
  br i1 %cmp36, label %if.then.37, label %if.end.38, !dbg !7485

if.then.37:                                       ; preds = %cond.end.34
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.71, !dbg !7486

if.end.38:                                        ; preds = %cond.end.34
  %67 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7487, !tbaa !1458
  %68 = load i8*, i8** %out, align 8, !dbg !7488, !tbaa !1458
  %69 = load i64, i64* %written, align 8, !dbg !7489, !tbaa !2140
  %add.ptr39 = getelementptr i8, i8* %68, i64 %69, !dbg !7490
  %70 = load i64, i64* %r28, align 8, !dbg !7491, !tbaa !2140
  %call40 = call i64 @_bufferedreader_raw_read(%struct.buffered* %67, i8* %add.ptr39, i64 %70), !dbg !7492
  store i64 %call40, i64* %r28, align 8, !dbg !7493, !tbaa !2140
  %71 = load i64, i64* %r28, align 8, !dbg !7494, !tbaa !2140
  %cmp41 = icmp eq i64 %71, -1, !dbg !7496
  br i1 %cmp41, label %if.then.42, label %if.end.43, !dbg !7497

if.then.42:                                       ; preds = %if.end.38
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.71, !dbg !7498

if.end.43:                                        ; preds = %if.end.38
  %72 = load i64, i64* %r28, align 8, !dbg !7499, !tbaa !2140
  %cmp44 = icmp eq i64 %72, 0, !dbg !7500
  br i1 %cmp44, label %if.then.46, label %lor.lhs.false, !dbg !7501

lor.lhs.false:                                    ; preds = %if.end.43
  %73 = load i64, i64* %r28, align 8, !dbg !7502, !tbaa !2140
  %cmp45 = icmp eq i64 %73, -2, !dbg !7504
  br i1 %cmp45, label %if.then.46, label %if.end.68, !dbg !7505

if.then.46:                                       ; preds = %lor.lhs.false, %if.end.43
  %74 = load i64, i64* %r28, align 8, !dbg !7506, !tbaa !2140
  %cmp47 = icmp eq i64 %74, 0, !dbg !7508
  br i1 %cmp47, label %if.then.50, label %lor.lhs.false.48, !dbg !7509

lor.lhs.false.48:                                 ; preds = %if.then.46
  %75 = load i64, i64* %written, align 8, !dbg !7510, !tbaa !2140
  %cmp49 = icmp sgt i64 %75, 0, !dbg !7512
  br i1 %cmp49, label %if.then.50, label %if.end.55, !dbg !7513

if.then.50:                                       ; preds = %lor.lhs.false.48, %if.then.46
  %76 = load i64, i64* %written, align 8, !dbg !7514, !tbaa !2140
  %call51 = call i32 @_PyBytes_Resize(%struct._object** %res, i64 %76), !dbg !7517
  %tobool52 = icmp ne i32 %call51, 0, !dbg !7517
  br i1 %tobool52, label %if.then.53, label %if.end.54, !dbg !7518

if.then.53:                                       ; preds = %if.then.50
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.71, !dbg !7519

if.end.54:                                        ; preds = %if.then.50
  %77 = load %struct._object*, %struct._object** %res, align 8, !dbg !7520, !tbaa !1458
  store %struct._object* %77, %struct._object** %retval, !dbg !7521
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.71, !dbg !7521

if.end.55:                                        ; preds = %lor.lhs.false.48
  br label %do.body.56, !dbg !7522

do.body.56:                                       ; preds = %if.end.55
  %78 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !7523
  call void @llvm.lifetime.start(i64 8, i8* %78) #1, !dbg !7523
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp57, metadata !968, metadata !1450), !dbg !7525
  %79 = load %struct._object*, %struct._object** %res, align 8, !dbg !7526, !tbaa !1458
  store %struct._object* %79, %struct._object** %_py_decref_tmp57, align 8, !dbg !7525, !tbaa !1458
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !7527, !tbaa !1458
  %ob_refcnt58 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0, !dbg !7529
  %81 = load i64, i64* %ob_refcnt58, align 8, !dbg !7530, !tbaa !1501
  %dec59 = add i64 %81, -1, !dbg !7530
  store i64 %dec59, i64* %ob_refcnt58, align 8, !dbg !7530, !tbaa !1501
  %cmp60 = icmp ne i64 %dec59, 0, !dbg !7531
  br i1 %cmp60, label %if.then.61, label %if.else.62, !dbg !7532

if.then.61:                                       ; preds = %do.body.56
  br label %if.end.65, !dbg !7533

if.else.62:                                       ; preds = %do.body.56
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !7535, !tbaa !1458
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1, !dbg !7537
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !7537, !tbaa !1509
  %tp_dealloc64 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4, !dbg !7538
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc64, align 8, !dbg !7538, !tbaa !1511
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !7539, !tbaa !1458
  call void %84(%struct._object* %85), !dbg !7540
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.62, %if.then.61
  %86 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !7541
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !7541
  br label %do.cond.66, !dbg !7543

do.cond.66:                                       ; preds = %if.end.65
  br label %do.end.67, !dbg !7544

do.end.67:                                        ; preds = %do.cond.66
  %87 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7546, !tbaa !1501
  %inc = add i64 %87, 1, !dbg !7546
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7546, !tbaa !1501
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !7547
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.71, !dbg !7547

if.end.68:                                        ; preds = %lor.lhs.false
  %88 = load i64, i64* %r28, align 8, !dbg !7548, !tbaa !2140
  %89 = load i64, i64* %remaining, align 8, !dbg !7549, !tbaa !2140
  %sub69 = sub i64 %89, %88, !dbg !7549
  store i64 %sub69, i64* %remaining, align 8, !dbg !7549, !tbaa !2140
  %90 = load i64, i64* %r28, align 8, !dbg !7550, !tbaa !2140
  %91 = load i64, i64* %written, align 8, !dbg !7551, !tbaa !2140
  %add70 = add i64 %91, %90, !dbg !7551
  store i64 %add70, i64* %written, align 8, !dbg !7551, !tbaa !2140
  store i32 0, i32* %cleanup.dest.slot, !dbg !7552
  br label %cleanup.71, !dbg !7552

cleanup.71:                                       ; preds = %if.end.68, %do.end.67, %if.end.54, %if.then.53, %if.then.42, %if.then.37
  %92 = bitcast i64* %r28 to i8*, !dbg !7553
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !7553
  %cleanup.dest.72 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.12

NodeBlock.12:                                     ; preds = %cleanup.71
  %Pivot.13 = icmp slt i32 %cleanup.dest.72, 2
  br i1 %Pivot.13, label %LeafBlock.4, label %NodeBlock.10

NodeBlock.10:                                     ; preds = %NodeBlock.12
  %Pivot.11 = icmp slt i32 %cleanup.dest.72, 6
  br i1 %Pivot.11, label %LeafBlock.6, label %LeafBlock.8

LeafBlock.8:                                      ; preds = %NodeBlock.10
  %SwitchLeaf9 = icmp eq i32 %cleanup.dest.72, 6
  br i1 %SwitchLeaf9, label %while.end, label %NewDefault.3

LeafBlock.6:                                      ; preds = %NodeBlock.10
  %SwitchLeaf7 = icmp eq i32 %cleanup.dest.72, 2
  br i1 %SwitchLeaf7, label %error, label %NewDefault.3

LeafBlock.4:                                      ; preds = %NodeBlock.12
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.72, 0
  br i1 %SwitchLeaf5, label %cleanup.cont.73, label %NewDefault.3

cleanup.cont.73:                                  ; preds = %LeafBlock.4
  br label %while.cond, !dbg !7456

while.end:                                        ; preds = %LeafBlock.8, %while.cond
  %93 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7554, !tbaa !1458
  %pos74 = getelementptr inbounds %struct.buffered, %struct.buffered* %93, i32 0, i32 10, !dbg !7555
  store i64 0, i64* %pos74, align 8, !dbg !7556, !tbaa !2357
  %94 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7557, !tbaa !1458
  %raw_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %94, i32 0, i32 11, !dbg !7558
  store i64 0, i64* %raw_pos, align 8, !dbg !7559, !tbaa !3929
  %95 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7560, !tbaa !1458
  %read_end75 = getelementptr inbounds %struct.buffered, %struct.buffered* %95, i32 0, i32 12, !dbg !7561
  store i64 0, i64* %read_end75, align 8, !dbg !7562, !tbaa !3164
  br label %while.cond.76, !dbg !7563

while.cond.76:                                    ; preds = %cleanup.cont.141, %while.end
  %96 = load i64, i64* %remaining, align 8, !dbg !7564, !tbaa !2140
  %cmp77 = icmp sgt i64 %96, 0, !dbg !7566
  br i1 %cmp77, label %land.rhs, label %land.end, !dbg !7567

land.rhs:                                         ; preds = %while.cond.76
  %97 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7568, !tbaa !1458
  %read_end78 = getelementptr inbounds %struct.buffered, %struct.buffered* %97, i32 0, i32 12, !dbg !7569
  %98 = load i64, i64* %read_end78, align 8, !dbg !7569, !tbaa !3164
  %99 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7570, !tbaa !1458
  %buffer_size79 = getelementptr inbounds %struct.buffered, %struct.buffered* %99, i32 0, i32 17, !dbg !7571
  %100 = load i64, i64* %buffer_size79, align 8, !dbg !7571, !tbaa !2219
  %cmp80 = icmp slt i64 %98, %100, !dbg !7572
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.76
  %101 = phi i1 [ false, %while.cond.76 ], [ %cmp80, %land.rhs ]
  br i1 %101, label %while.body.81, label %while.end.142, !dbg !7573

while.body.81:                                    ; preds = %land.end
  %102 = bitcast i64* %r82 to i8*, !dbg !7574
  call void @llvm.lifetime.start(i64 8, i8* %102) #1, !dbg !7574
  call void @llvm.dbg.declare(metadata i64* %r82, metadata !972, metadata !1450), !dbg !7575
  %103 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7576, !tbaa !1458
  %call83 = call i64 @_bufferedreader_fill_buffer(%struct.buffered* %103), !dbg !7577
  store i64 %call83, i64* %r82, align 8, !dbg !7575, !tbaa !2140
  %104 = load i64, i64* %r82, align 8, !dbg !7578, !tbaa !2140
  %cmp84 = icmp eq i64 %104, -1, !dbg !7580
  br i1 %cmp84, label %if.then.85, label %if.end.86, !dbg !7581

if.then.85:                                       ; preds = %while.body.81
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.139, !dbg !7582

if.end.86:                                        ; preds = %while.body.81
  %105 = load i64, i64* %r82, align 8, !dbg !7583, !tbaa !2140
  %cmp87 = icmp eq i64 %105, 0, !dbg !7584
  br i1 %cmp87, label %if.then.90, label %lor.lhs.false.88, !dbg !7585

lor.lhs.false.88:                                 ; preds = %if.end.86
  %106 = load i64, i64* %r82, align 8, !dbg !7586, !tbaa !2140
  %cmp89 = icmp eq i64 %106, -2, !dbg !7588
  br i1 %cmp89, label %if.then.90, label %if.end.113, !dbg !7589

if.then.90:                                       ; preds = %lor.lhs.false.88, %if.end.86
  %107 = load i64, i64* %r82, align 8, !dbg !7590, !tbaa !2140
  %cmp91 = icmp eq i64 %107, 0, !dbg !7592
  br i1 %cmp91, label %if.then.94, label %lor.lhs.false.92, !dbg !7593

lor.lhs.false.92:                                 ; preds = %if.then.90
  %108 = load i64, i64* %written, align 8, !dbg !7594, !tbaa !2140
  %cmp93 = icmp sgt i64 %108, 0, !dbg !7596
  br i1 %cmp93, label %if.then.94, label %if.end.99, !dbg !7597

if.then.94:                                       ; preds = %lor.lhs.false.92, %if.then.90
  %109 = load i64, i64* %written, align 8, !dbg !7598, !tbaa !2140
  %call95 = call i32 @_PyBytes_Resize(%struct._object** %res, i64 %109), !dbg !7601
  %tobool96 = icmp ne i32 %call95, 0, !dbg !7601
  br i1 %tobool96, label %if.then.97, label %if.end.98, !dbg !7602

if.then.97:                                       ; preds = %if.then.94
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.139, !dbg !7603

if.end.98:                                        ; preds = %if.then.94
  %110 = load %struct._object*, %struct._object** %res, align 8, !dbg !7604, !tbaa !1458
  store %struct._object* %110, %struct._object** %retval, !dbg !7605
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.139, !dbg !7605

if.end.99:                                        ; preds = %lor.lhs.false.92
  br label %do.body.100, !dbg !7606

do.body.100:                                      ; preds = %if.end.99
  %111 = bitcast %struct._object** %_py_decref_tmp101 to i8*, !dbg !7607
  call void @llvm.lifetime.start(i64 8, i8* %111) #1, !dbg !7607
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp101, metadata !974, metadata !1450), !dbg !7609
  %112 = load %struct._object*, %struct._object** %res, align 8, !dbg !7610, !tbaa !1458
  store %struct._object* %112, %struct._object** %_py_decref_tmp101, align 8, !dbg !7609, !tbaa !1458
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8, !dbg !7611, !tbaa !1458
  %ob_refcnt102 = getelementptr inbounds %struct._object, %struct._object* %113, i32 0, i32 0, !dbg !7613
  %114 = load i64, i64* %ob_refcnt102, align 8, !dbg !7614, !tbaa !1501
  %dec103 = add i64 %114, -1, !dbg !7614
  store i64 %dec103, i64* %ob_refcnt102, align 8, !dbg !7614, !tbaa !1501
  %cmp104 = icmp ne i64 %dec103, 0, !dbg !7615
  br i1 %cmp104, label %if.then.105, label %if.else.106, !dbg !7616

if.then.105:                                      ; preds = %do.body.100
  br label %if.end.109, !dbg !7617

if.else.106:                                      ; preds = %do.body.100
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8, !dbg !7619, !tbaa !1458
  %ob_type107 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 1, !dbg !7621
  %116 = load %struct._typeobject*, %struct._typeobject** %ob_type107, align 8, !dbg !7621, !tbaa !1509
  %tp_dealloc108 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %116, i32 0, i32 4, !dbg !7622
  %117 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc108, align 8, !dbg !7622, !tbaa !1511
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8, !dbg !7623, !tbaa !1458
  call void %117(%struct._object* %118), !dbg !7624
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.106, %if.then.105
  %119 = bitcast %struct._object** %_py_decref_tmp101 to i8*, !dbg !7625
  call void @llvm.lifetime.end(i64 8, i8* %119) #1, !dbg !7625
  br label %do.cond.110, !dbg !7627

do.cond.110:                                      ; preds = %if.end.109
  br label %do.end.111, !dbg !7628

do.end.111:                                       ; preds = %do.cond.110
  %120 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7630, !tbaa !1501
  %inc112 = add i64 %120, 1, !dbg !7630
  store i64 %inc112, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7630, !tbaa !1501
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !7631
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.139, !dbg !7631

if.end.113:                                       ; preds = %lor.lhs.false.88
  %121 = load i64, i64* %remaining, align 8, !dbg !7632, !tbaa !2140
  %122 = load i64, i64* %r82, align 8, !dbg !7634, !tbaa !2140
  %cmp114 = icmp sgt i64 %121, %122, !dbg !7635
  br i1 %cmp114, label %if.then.115, label %if.else.124, !dbg !7636

if.then.115:                                      ; preds = %if.end.113
  %123 = load i8*, i8** %out, align 8, !dbg !7637, !tbaa !1458
  %124 = load i64, i64* %written, align 8, !dbg !7639, !tbaa !2140
  %add.ptr116 = getelementptr i8, i8* %123, i64 %124, !dbg !7640
  %125 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7641, !tbaa !1458
  %buffer117 = getelementptr inbounds %struct.buffered, %struct.buffered* %125, i32 0, i32 9, !dbg !7642
  %126 = load i8*, i8** %buffer117, align 8, !dbg !7642, !tbaa !1717
  %127 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7643, !tbaa !1458
  %pos118 = getelementptr inbounds %struct.buffered, %struct.buffered* %127, i32 0, i32 10, !dbg !7644
  %128 = load i64, i64* %pos118, align 8, !dbg !7644, !tbaa !2357
  %add.ptr119 = getelementptr i8, i8* %126, i64 %128, !dbg !7645
  %129 = load i64, i64* %r82, align 8, !dbg !7646, !tbaa !2140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr116, i8* %add.ptr119, i64 %129, i32 1, i1 false), !dbg !7647
  %130 = load i64, i64* %r82, align 8, !dbg !7648, !tbaa !2140
  %131 = load i64, i64* %written, align 8, !dbg !7649, !tbaa !2140
  %add120 = add i64 %131, %130, !dbg !7649
  store i64 %add120, i64* %written, align 8, !dbg !7649, !tbaa !2140
  %132 = load i64, i64* %r82, align 8, !dbg !7650, !tbaa !2140
  %133 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7651, !tbaa !1458
  %pos121 = getelementptr inbounds %struct.buffered, %struct.buffered* %133, i32 0, i32 10, !dbg !7652
  %134 = load i64, i64* %pos121, align 8, !dbg !7653, !tbaa !2357
  %add122 = add i64 %134, %132, !dbg !7653
  store i64 %add122, i64* %pos121, align 8, !dbg !7653, !tbaa !2357
  %135 = load i64, i64* %r82, align 8, !dbg !7654, !tbaa !2140
  %136 = load i64, i64* %remaining, align 8, !dbg !7655, !tbaa !2140
  %sub123 = sub i64 %136, %135, !dbg !7655
  store i64 %sub123, i64* %remaining, align 8, !dbg !7655, !tbaa !2140
  br label %if.end.135, !dbg !7656

if.else.124:                                      ; preds = %if.end.113
  %137 = load i64, i64* %remaining, align 8, !dbg !7657, !tbaa !2140
  %cmp125 = icmp sgt i64 %137, 0, !dbg !7659
  br i1 %cmp125, label %if.then.126, label %if.end.134, !dbg !7660

if.then.126:                                      ; preds = %if.else.124
  %138 = load i8*, i8** %out, align 8, !dbg !7661, !tbaa !1458
  %139 = load i64, i64* %written, align 8, !dbg !7663, !tbaa !2140
  %add.ptr127 = getelementptr i8, i8* %138, i64 %139, !dbg !7664
  %140 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7665, !tbaa !1458
  %buffer128 = getelementptr inbounds %struct.buffered, %struct.buffered* %140, i32 0, i32 9, !dbg !7666
  %141 = load i8*, i8** %buffer128, align 8, !dbg !7666, !tbaa !1717
  %142 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7667, !tbaa !1458
  %pos129 = getelementptr inbounds %struct.buffered, %struct.buffered* %142, i32 0, i32 10, !dbg !7668
  %143 = load i64, i64* %pos129, align 8, !dbg !7668, !tbaa !2357
  %add.ptr130 = getelementptr i8, i8* %141, i64 %143, !dbg !7669
  %144 = load i64, i64* %remaining, align 8, !dbg !7670, !tbaa !2140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr127, i8* %add.ptr130, i64 %144, i32 1, i1 false), !dbg !7671
  %145 = load i64, i64* %remaining, align 8, !dbg !7672, !tbaa !2140
  %146 = load i64, i64* %written, align 8, !dbg !7673, !tbaa !2140
  %add131 = add i64 %146, %145, !dbg !7673
  store i64 %add131, i64* %written, align 8, !dbg !7673, !tbaa !2140
  %147 = load i64, i64* %remaining, align 8, !dbg !7674, !tbaa !2140
  %148 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7675, !tbaa !1458
  %pos132 = getelementptr inbounds %struct.buffered, %struct.buffered* %148, i32 0, i32 10, !dbg !7676
  %149 = load i64, i64* %pos132, align 8, !dbg !7677, !tbaa !2357
  %add133 = add i64 %149, %147, !dbg !7677
  store i64 %add133, i64* %pos132, align 8, !dbg !7677, !tbaa !2357
  store i64 0, i64* %remaining, align 8, !dbg !7678, !tbaa !2140
  br label %if.end.134, !dbg !7679

if.end.134:                                       ; preds = %if.then.126, %if.else.124
  br label %if.end.135

if.end.135:                                       ; preds = %if.end.134, %if.then.115
  %150 = load i64, i64* %remaining, align 8, !dbg !7680, !tbaa !2140
  %cmp136 = icmp eq i64 %150, 0, !dbg !7682
  br i1 %cmp136, label %if.then.137, label %if.end.138, !dbg !7683

if.then.137:                                      ; preds = %if.end.135
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.139, !dbg !7684

if.end.138:                                       ; preds = %if.end.135
  store i32 0, i32* %cleanup.dest.slot, !dbg !7685
  br label %cleanup.139, !dbg !7685

cleanup.139:                                      ; preds = %if.end.138, %if.then.137, %do.end.111, %if.end.98, %if.then.97, %if.then.85
  %151 = bitcast i64* %r82 to i8*, !dbg !7686
  call void @llvm.lifetime.end(i64 8, i8* %151) #1, !dbg !7686
  %cleanup.dest.140 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.23

NodeBlock.23:                                     ; preds = %cleanup.139
  %Pivot.24 = icmp slt i32 %cleanup.dest.140, 2
  br i1 %Pivot.24, label %LeafBlock.15, label %NodeBlock.21

NodeBlock.21:                                     ; preds = %NodeBlock.23
  %Pivot.22 = icmp slt i32 %cleanup.dest.140, 10
  br i1 %Pivot.22, label %LeafBlock.17, label %LeafBlock.19

LeafBlock.19:                                     ; preds = %NodeBlock.21
  %SwitchLeaf20 = icmp eq i32 %cleanup.dest.140, 10
  br i1 %SwitchLeaf20, label %while.end.142, label %NewDefault.14

LeafBlock.17:                                     ; preds = %NodeBlock.21
  %SwitchLeaf18 = icmp eq i32 %cleanup.dest.140, 2
  br i1 %SwitchLeaf18, label %error, label %NewDefault.14

LeafBlock.15:                                     ; preds = %NodeBlock.23
  %SwitchLeaf16 = icmp eq i32 %cleanup.dest.140, 0
  br i1 %SwitchLeaf16, label %cleanup.cont.141, label %NewDefault.14

cleanup.cont.141:                                 ; preds = %LeafBlock.15
  br label %while.cond.76, !dbg !7563

while.end.142:                                    ; preds = %LeafBlock.19, %land.end
  %152 = load %struct._object*, %struct._object** %res, align 8, !dbg !7687, !tbaa !1458
  store %struct._object* %152, %struct._object** %retval, !dbg !7688
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.161, !dbg !7688

error:                                            ; preds = %LeafBlock.17, %LeafBlock.6, %LeafBlock.1, %if.then.8
  br label %do.body.143, !dbg !7689

do.body.143:                                      ; preds = %error
  %153 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7690
  call void @llvm.lifetime.start(i64 8, i8* %153) #1, !dbg !7690
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !978, metadata !1450), !dbg !7692
  %154 = load %struct._object*, %struct._object** %res, align 8, !dbg !7693, !tbaa !1458
  store %struct._object* %154, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7692, !tbaa !1458
  %155 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7694, !tbaa !1458
  %cmp144 = icmp ne %struct._object* %155, null, !dbg !7695
  br i1 %cmp144, label %if.then.145, label %if.end.158, !dbg !7696

if.then.145:                                      ; preds = %do.body.143
  br label %do.body.146, !dbg !7697

do.body.146:                                      ; preds = %if.then.145
  %156 = bitcast %struct._object** %_py_decref_tmp147 to i8*, !dbg !7699
  call void @llvm.lifetime.start(i64 8, i8* %156) #1, !dbg !7699
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp147, metadata !980, metadata !1450), !dbg !7701
  %157 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7702, !tbaa !1458
  store %struct._object* %157, %struct._object** %_py_decref_tmp147, align 8, !dbg !7701, !tbaa !1458
  %158 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !7703, !tbaa !1458
  %ob_refcnt148 = getelementptr inbounds %struct._object, %struct._object* %158, i32 0, i32 0, !dbg !7705
  %159 = load i64, i64* %ob_refcnt148, align 8, !dbg !7706, !tbaa !1501
  %dec149 = add i64 %159, -1, !dbg !7706
  store i64 %dec149, i64* %ob_refcnt148, align 8, !dbg !7706, !tbaa !1501
  %cmp150 = icmp ne i64 %dec149, 0, !dbg !7707
  br i1 %cmp150, label %if.then.151, label %if.else.152, !dbg !7708

if.then.151:                                      ; preds = %do.body.146
  br label %if.end.155, !dbg !7709

if.else.152:                                      ; preds = %do.body.146
  %160 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !7711, !tbaa !1458
  %ob_type153 = getelementptr inbounds %struct._object, %struct._object* %160, i32 0, i32 1, !dbg !7713
  %161 = load %struct._typeobject*, %struct._typeobject** %ob_type153, align 8, !dbg !7713, !tbaa !1509
  %tp_dealloc154 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %161, i32 0, i32 4, !dbg !7714
  %162 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc154, align 8, !dbg !7714, !tbaa !1511
  %163 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !7715, !tbaa !1458
  call void %162(%struct._object* %163), !dbg !7716
  br label %if.end.155

if.end.155:                                       ; preds = %if.else.152, %if.then.151
  %164 = bitcast %struct._object** %_py_decref_tmp147 to i8*, !dbg !7717
  call void @llvm.lifetime.end(i64 8, i8* %164) #1, !dbg !7717
  br label %do.cond.156, !dbg !7719

do.cond.156:                                      ; preds = %if.end.155
  br label %do.end.157, !dbg !7720

do.end.157:                                       ; preds = %do.cond.156
  br label %if.end.158, !dbg !7722

if.end.158:                                       ; preds = %do.end.157, %do.body.143
  %165 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7724
  call void @llvm.lifetime.end(i64 8, i8* %165) #1, !dbg !7724
  br label %do.cond.159, !dbg !7726

do.cond.159:                                      ; preds = %if.end.158
  br label %do.end.160, !dbg !7727

do.end.160:                                       ; preds = %do.cond.159
  store %struct._object* null, %struct._object** %retval, !dbg !7729
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.161, !dbg !7729

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.161

NewDefault.3:                                     ; preds = %LeafBlock.8, %LeafBlock.6, %LeafBlock.4
  br label %cleanup.161

NewDefault.14:                                    ; preds = %LeafBlock.19, %LeafBlock.17, %LeafBlock.15
  br label %cleanup.161

cleanup.161:                                      ; preds = %NewDefault.14, %NewDefault.3, %NewDefault, %do.end.160, %while.end.142, %if.then
  %166 = bitcast i8** %out to i8*, !dbg !7730
  call void @llvm.lifetime.end(i64 8, i8* %166) #1, !dbg !7730
  %167 = bitcast i64* %written to i8*, !dbg !7730
  call void @llvm.lifetime.end(i64 8, i8* %167) #1, !dbg !7730
  %168 = bitcast i64* %remaining to i8*, !dbg !7730
  call void @llvm.lifetime.end(i64 8, i8* %168) #1, !dbg !7730
  %169 = bitcast i64* %current_size to i8*, !dbg !7730
  call void @llvm.lifetime.end(i64 8, i8* %169) #1, !dbg !7730
  %170 = bitcast %struct._object** %res to i8*, !dbg !7730
  call void @llvm.lifetime.end(i64 8, i8* %170) #1, !dbg !7730
  %171 = load %struct._object*, %struct._object** %retval, !dbg !7730
  ret %struct._object* %171, !dbg !7730
}

declare i32 @PyObject_HasAttr(%struct._object*, %struct._object*) #3

declare void @PyBytes_Concat(%struct._object**, %struct._object*) #3

declare i32 @_PyBytes_Resize(%struct._object**, i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_bufferedreader_peek_unlocked(%struct.buffered* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %have = alloca i64, align 8
  %r = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !999, metadata !1450), !dbg !7731
  %0 = bitcast i64* %have to i8*, !dbg !7732
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7732
  call void @llvm.dbg.declare(metadata i64* %have, metadata !1000, metadata !1450), !dbg !7733
  %1 = bitcast i64* %r to i8*, !dbg !7732
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7732
  call void @llvm.dbg.declare(metadata i64* %r, metadata !1001, metadata !1450), !dbg !7734
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7735, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 4, !dbg !7736
  %3 = load i32, i32* %readable, align 4, !dbg !7736, !tbaa !2223
  %tobool = icmp ne i32 %3, 0, !dbg !7735
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !7737

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7738, !tbaa !1458
  %readable1 = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 4, !dbg !7740
  %5 = load i32, i32* %readable1, align 4, !dbg !7740, !tbaa !2223
  %tobool2 = icmp ne i32 %5, 0, !dbg !7741
  br i1 %tobool2, label %land.lhs.true.3, label %cond.false, !dbg !7742

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7743, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 12, !dbg !7745
  %7 = load i64, i64* %read_end, align 8, !dbg !7745, !tbaa !3164
  %cmp = icmp ne i64 %7, -1, !dbg !7746
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7747

cond.true:                                        ; preds = %land.lhs.true.3
  %8 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7748, !tbaa !1458
  %read_end4 = getelementptr inbounds %struct.buffered, %struct.buffered* %8, i32 0, i32 12, !dbg !7750
  %9 = load i64, i64* %read_end4, align 8, !dbg !7750, !tbaa !3164
  %10 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7751, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %10, i32 0, i32 10, !dbg !7752
  %11 = load i64, i64* %pos, align 8, !dbg !7752, !tbaa !2357
  %sub = sub i64 %9, %11, !dbg !7753
  br label %cond.end, !dbg !7747

cond.false:                                       ; preds = %land.lhs.true.3, %land.lhs.true, %entry
  br label %cond.end, !dbg !7754

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !7747
  store i64 %cond, i64* %have, align 8, !dbg !7758, !tbaa !2140
  %12 = load i64, i64* %have, align 8, !dbg !7761, !tbaa !2140
  %cmp5 = icmp sgt i64 %12, 0, !dbg !7763
  br i1 %cmp5, label %if.then, label %if.end, !dbg !7764

if.then:                                          ; preds = %cond.end
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7765, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 9, !dbg !7767
  %14 = load i8*, i8** %buffer, align 8, !dbg !7767, !tbaa !1717
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7768, !tbaa !1458
  %pos6 = getelementptr inbounds %struct.buffered, %struct.buffered* %15, i32 0, i32 10, !dbg !7769
  %16 = load i64, i64* %pos6, align 8, !dbg !7769, !tbaa !2357
  %add.ptr = getelementptr i8, i8* %14, i64 %16, !dbg !7770
  %17 = load i64, i64* %have, align 8, !dbg !7771, !tbaa !2140
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* %add.ptr, i64 %17), !dbg !7772
  store %struct._object* %call, %struct._object** %retval, !dbg !7773
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7773

if.end:                                           ; preds = %cond.end
  %18 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7774, !tbaa !1458
  call void @_bufferedreader_reset_buf(%struct.buffered* %18), !dbg !7775
  %19 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7776, !tbaa !1458
  %call7 = call i64 @_bufferedreader_fill_buffer(%struct.buffered* %19), !dbg !7777
  store i64 %call7, i64* %r, align 8, !dbg !7778, !tbaa !2140
  %20 = load i64, i64* %r, align 8, !dbg !7779, !tbaa !2140
  %cmp8 = icmp eq i64 %20, -1, !dbg !7781
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !7782

if.then.9:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !7783
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7783

if.end.10:                                        ; preds = %if.end
  %21 = load i64, i64* %r, align 8, !dbg !7784, !tbaa !2140
  %cmp11 = icmp eq i64 %21, -2, !dbg !7786
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !7787

if.then.12:                                       ; preds = %if.end.10
  store i64 0, i64* %r, align 8, !dbg !7788, !tbaa !2140
  br label %if.end.13, !dbg !7789

if.end.13:                                        ; preds = %if.then.12, %if.end.10
  %22 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7790, !tbaa !1458
  %pos14 = getelementptr inbounds %struct.buffered, %struct.buffered* %22, i32 0, i32 10, !dbg !7791
  store i64 0, i64* %pos14, align 8, !dbg !7792, !tbaa !2357
  %23 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7793, !tbaa !1458
  %buffer15 = getelementptr inbounds %struct.buffered, %struct.buffered* %23, i32 0, i32 9, !dbg !7794
  %24 = load i8*, i8** %buffer15, align 8, !dbg !7794, !tbaa !1717
  %25 = load i64, i64* %r, align 8, !dbg !7795, !tbaa !2140
  %call16 = call %struct._object* @PyBytes_FromStringAndSize(i8* %24, i64 %25), !dbg !7796
  store %struct._object* %call16, %struct._object** %retval, !dbg !7797
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7797

cleanup:                                          ; preds = %if.end.13, %if.then.9, %if.then
  %26 = bitcast i64* %r to i8*, !dbg !7798
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !7798
  %27 = bitcast i64* %have to i8*, !dbg !7798
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !7798
  %28 = load %struct._object*, %struct._object** %retval, !dbg !7798
  ret %struct._object* %28, !dbg !7798
}

declare %struct._object* @_PyIOBase_check_seekable(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i64 @_buffered_raw_tell(%struct.buffered* %self) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %n = alloca i64, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1068, metadata !1450), !dbg !7799
  %0 = bitcast i64* %n to i8*, !dbg !7800
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7800
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1069, metadata !1450), !dbg !7801
  %1 = bitcast %struct._object** %res to i8*, !dbg !7802
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7802
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1070, metadata !1450), !dbg !7803
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7804, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 1, !dbg !7805
  %3 = load %struct._object*, %struct._object** %raw, align 8, !dbg !7805, !tbaa !1676
  %4 = load %struct._object*, %struct._object** @_PyIO_str_tell, align 8, !dbg !7806, !tbaa !1458
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %3, %struct._object* %4, i8* null), !dbg !7807
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !7808, !tbaa !1458
  %5 = load %struct._object*, %struct._object** %res, align 8, !dbg !7809, !tbaa !1458
  %cmp = icmp eq %struct._object* %5, null, !dbg !7811
  br i1 %cmp, label %if.then, label %if.end, !dbg !7812

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, !dbg !7813
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7813

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %res, align 8, !dbg !7814, !tbaa !1458
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7815, !tbaa !1458
  %call1 = call i64 @PyNumber_AsOff_t(%struct._object* %6, %struct._object* %7), !dbg !7816
  store i64 %call1, i64* %n, align 8, !dbg !7817, !tbaa !2140
  br label %do.body, !dbg !7818

do.body:                                          ; preds = %if.end
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7819
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !7819
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1071, metadata !1450), !dbg !7821
  %9 = load %struct._object*, %struct._object** %res, align 8, !dbg !7822, !tbaa !1458
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !7821, !tbaa !1458
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7823, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !7825
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !7826, !tbaa !1501
  %dec = add i64 %11, -1, !dbg !7826
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7826, !tbaa !1501
  %cmp2 = icmp ne i64 %dec, 0, !dbg !7827
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !7828

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !7829

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7831, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !7833
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7833, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !7834
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7834, !tbaa !1511
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7835, !tbaa !1458
  call void %14(%struct._object* %15), !dbg !7836
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7837
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !7837
  br label %do.cond, !dbg !7839

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !7840

do.end:                                           ; preds = %do.cond
  %17 = load i64, i64* %n, align 8, !dbg !7842, !tbaa !2140
  %cmp5 = icmp slt i64 %17, 0, !dbg !7844
  br i1 %cmp5, label %if.then.6, label %if.end.11, !dbg !7845

if.then.6:                                        ; preds = %do.end
  %call7 = call %struct._object* @PyErr_Occurred(), !dbg !7846
  %tobool = icmp ne %struct._object* %call7, null, !dbg !7846
  br i1 %tobool, label %if.end.10, label %if.then.8, !dbg !7849

if.then.8:                                        ; preds = %if.then.6
  %18 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !7850, !tbaa !1458
  %19 = load i64, i64* %n, align 8, !dbg !7851, !tbaa !2140
  %call9 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %18, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i32 0, i32 0), i64 %19), !dbg !7852
  br label %if.end.10, !dbg !7852

if.end.10:                                        ; preds = %if.then.8, %if.then.6
  store i64 -1, i64* %retval, !dbg !7853
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7853

if.end.11:                                        ; preds = %do.end
  %20 = load i64, i64* %n, align 8, !dbg !7854, !tbaa !2140
  %21 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7855, !tbaa !1458
  %abs_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %21, i32 0, i32 8, !dbg !7856
  store i64 %20, i64* %abs_pos, align 8, !dbg !7857, !tbaa !4314
  %22 = load i64, i64* %n, align 8, !dbg !7858, !tbaa !2140
  store i64 %22, i64* %retval, !dbg !7859
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7859

cleanup:                                          ; preds = %if.end.11, %if.end.10, %if.then
  %23 = bitcast %struct._object** %res to i8*, !dbg !7860
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !7860
  %24 = bitcast i64* %n to i8*, !dbg !7860
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !7860
  %25 = load i64, i64* %retval, !dbg !7860
  ret i64 %25, !dbg !7860
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_closed_get(%struct.buffered* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1101, metadata !1450), !dbg !7861
  store i8* %context, i8** %context.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1102, metadata !1450), !dbg !7862
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7863, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 2, !dbg !7865
  %1 = load i32, i32* %ok, align 4, !dbg !7865, !tbaa !1660
  %cmp = icmp sle i32 %1, 0, !dbg !7866
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !7867

if.then:                                          ; preds = %entry
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7868, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 3, !dbg !7872
  %3 = load i32, i32* %detached, align 4, !dbg !7872, !tbaa !2019
  %tobool = icmp ne i32 %3, 0, !dbg !7873
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !7874

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7875, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !7878
  br label %if.end, !dbg !7879

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7880, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !7883
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !7884
  br label %return, !dbg !7884

if.end.2:                                         ; preds = %entry
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7886, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 1, !dbg !7887
  %7 = load %struct._object*, %struct._object** %raw, align 8, !dbg !7887, !tbaa !1676
  %8 = load %struct._object*, %struct._object** @_PyIO_str_closed, align 8, !dbg !7888, !tbaa !1458
  %call = call %struct._object* @PyObject_GetAttr(%struct._object* %7, %struct._object* %8), !dbg !7889
  store %struct._object* %call, %struct._object** %retval, !dbg !7890
  br label %return, !dbg !7890

return:                                           ; preds = %if.end.2, %if.end
  %9 = load %struct._object*, %struct._object** %retval, !dbg !7891
  ret %struct._object* %9, !dbg !7891
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_name_get(%struct.buffered* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1105, metadata !1450), !dbg !7892
  store i8* %context, i8** %context.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1106, metadata !1450), !dbg !7893
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7894, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 2, !dbg !7896
  %1 = load i32, i32* %ok, align 4, !dbg !7896, !tbaa !1660
  %cmp = icmp sle i32 %1, 0, !dbg !7897
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !7898

if.then:                                          ; preds = %entry
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7899, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 3, !dbg !7903
  %3 = load i32, i32* %detached, align 4, !dbg !7903, !tbaa !2019
  %tobool = icmp ne i32 %3, 0, !dbg !7904
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !7905

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7906, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !7909
  br label %if.end, !dbg !7910

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7911, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !7914
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !7915
  br label %return, !dbg !7915

if.end.2:                                         ; preds = %entry
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7917, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 1, !dbg !7918
  %7 = load %struct._object*, %struct._object** %raw, align 8, !dbg !7918, !tbaa !1676
  %call = call %struct._object* @_PyObject_GetAttrId(%struct._object* %7, %struct._Py_Identifier* @PyId_name), !dbg !7919
  store %struct._object* %call, %struct._object** %retval, !dbg !7920
  br label %return, !dbg !7920

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !7921
  ret %struct._object* %8, !dbg !7921
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_mode_get(%struct.buffered* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1109, metadata !1450), !dbg !7922
  store i8* %context, i8** %context.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1110, metadata !1450), !dbg !7923
  %0 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7924, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %0, i32 0, i32 2, !dbg !7926
  %1 = load i32, i32* %ok, align 4, !dbg !7926, !tbaa !1660
  %cmp = icmp sle i32 %1, 0, !dbg !7927
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !7928

if.then:                                          ; preds = %entry
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7929, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %2, i32 0, i32 3, !dbg !7933
  %3 = load i32, i32* %detached, align 4, !dbg !7933, !tbaa !2019
  %tobool = icmp ne i32 %3, 0, !dbg !7934
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !7935

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7936, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !7939
  br label %if.end, !dbg !7940

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7941, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !7944
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !7945
  br label %return, !dbg !7945

if.end.2:                                         ; preds = %entry
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7947, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 1, !dbg !7948
  %7 = load %struct._object*, %struct._object** %raw, align 8, !dbg !7948, !tbaa !1676
  %call = call %struct._object* @_PyObject_GetAttrId(%struct._object* %7, %struct._Py_Identifier* @PyId_mode), !dbg !7949
  store %struct._object* %call, %struct._object** %retval, !dbg !7950
  br label %return, !dbg !7950

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !7951
  ret %struct._object* %8, !dbg !7951
}

declare i32 @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object*, %struct._object*, i8*, i8**, ...) #3

declare %struct._object* @_PyIOBase_check_readable(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_buffered_init(%struct.buffered* %self) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.buffered*, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1132, metadata !1450), !dbg !7952
  %0 = bitcast i64* %n to i8*, !dbg !7953
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7953
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1133, metadata !1450), !dbg !7954
  %1 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7955, !tbaa !1458
  %buffer_size = getelementptr inbounds %struct.buffered, %struct.buffered* %1, i32 0, i32 17, !dbg !7957
  %2 = load i64, i64* %buffer_size, align 8, !dbg !7957, !tbaa !2219
  %cmp = icmp sle i64 %2, 0, !dbg !7958
  br i1 %cmp, label %if.then, label %if.end, !dbg !7959

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7960, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.62, i32 0, i32 0)), !dbg !7962
  store i32 -1, i32* %retval, !dbg !7963
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7963

if.end:                                           ; preds = %entry
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7964, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %4, i32 0, i32 9, !dbg !7966
  %5 = load i8*, i8** %buffer, align 8, !dbg !7966, !tbaa !1717
  %tobool = icmp ne i8* %5, null, !dbg !7964
  br i1 %tobool, label %if.then.1, label %if.end.3, !dbg !7967

if.then.1:                                        ; preds = %if.end
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7968, !tbaa !1458
  %buffer2 = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 9, !dbg !7969
  %7 = load i8*, i8** %buffer2, align 8, !dbg !7969, !tbaa !1717
  call void @PyMem_Free(i8* %7), !dbg !7970
  br label %if.end.3, !dbg !7970

if.end.3:                                         ; preds = %if.then.1, %if.end
  %8 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7971, !tbaa !1458
  %buffer_size4 = getelementptr inbounds %struct.buffered, %struct.buffered* %8, i32 0, i32 17, !dbg !7972
  %9 = load i64, i64* %buffer_size4, align 8, !dbg !7972, !tbaa !2219
  %call = call i8* @PyMem_Malloc(i64 %9), !dbg !7973
  %10 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7974, !tbaa !1458
  %buffer5 = getelementptr inbounds %struct.buffered, %struct.buffered* %10, i32 0, i32 9, !dbg !7975
  store i8* %call, i8** %buffer5, align 8, !dbg !7976, !tbaa !1717
  %11 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7977, !tbaa !1458
  %buffer6 = getelementptr inbounds %struct.buffered, %struct.buffered* %11, i32 0, i32 9, !dbg !7979
  %12 = load i8*, i8** %buffer6, align 8, !dbg !7979, !tbaa !1717
  %cmp7 = icmp eq i8* %12, null, !dbg !7980
  br i1 %cmp7, label %if.then.8, label %if.end.10, !dbg !7981

if.then.8:                                        ; preds = %if.end.3
  %call9 = call %struct._object* @PyErr_NoMemory(), !dbg !7982
  store i32 -1, i32* %retval, !dbg !7984
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7984

if.end.10:                                        ; preds = %if.end.3
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7985, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 15, !dbg !7987
  %14 = load i8*, i8** %lock, align 8, !dbg !7987, !tbaa !1730
  %tobool11 = icmp ne i8* %14, null, !dbg !7985
  br i1 %tobool11, label %if.then.12, label %if.end.14, !dbg !7988

if.then.12:                                       ; preds = %if.end.10
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7989, !tbaa !1458
  %lock13 = getelementptr inbounds %struct.buffered, %struct.buffered* %15, i32 0, i32 15, !dbg !7990
  %16 = load i8*, i8** %lock13, align 8, !dbg !7990, !tbaa !1730
  call void @PyThread_free_lock(i8* %16), !dbg !7991
  br label %if.end.14, !dbg !7991

if.end.14:                                        ; preds = %if.then.12, %if.end.10
  %call15 = call i8* @PyThread_allocate_lock(), !dbg !7992
  %17 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7993, !tbaa !1458
  %lock16 = getelementptr inbounds %struct.buffered, %struct.buffered* %17, i32 0, i32 15, !dbg !7994
  store i8* %call15, i8** %lock16, align 8, !dbg !7995, !tbaa !1730
  %18 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !7996, !tbaa !1458
  %lock17 = getelementptr inbounds %struct.buffered, %struct.buffered* %18, i32 0, i32 15, !dbg !7998
  %19 = load i8*, i8** %lock17, align 8, !dbg !7998, !tbaa !1730
  %cmp18 = icmp eq i8* %19, null, !dbg !7999
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !8000

if.then.19:                                       ; preds = %if.end.14
  %20 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !8001, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %20, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.63, i32 0, i32 0)), !dbg !8003
  store i32 -1, i32* %retval, !dbg !8004
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8004

if.end.20:                                        ; preds = %if.end.14
  %21 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8005, !tbaa !1458
  %owner = getelementptr inbounds %struct.buffered, %struct.buffered* %21, i32 0, i32 16, !dbg !8006
  store volatile i64 0, i64* %owner, align 8, !dbg !8007, !tbaa !3261
  %22 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8008, !tbaa !1458
  %buffer_size21 = getelementptr inbounds %struct.buffered, %struct.buffered* %22, i32 0, i32 17, !dbg !8010
  %23 = load i64, i64* %buffer_size21, align 8, !dbg !8010, !tbaa !2219
  %sub = sub i64 %23, 1, !dbg !8011
  store i64 %sub, i64* %n, align 8, !dbg !8012, !tbaa !2140
  br label %for.cond, !dbg !8013

for.cond:                                         ; preds = %for.inc, %if.end.20
  %24 = load i64, i64* %n, align 8, !dbg !8014, !tbaa !2140
  %and = and i64 %24, 1, !dbg !8018
  %tobool22 = icmp ne i64 %and, 0, !dbg !8019
  br i1 %tobool22, label %for.body, label %for.end, !dbg !8019

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !8020

for.inc:                                          ; preds = %for.body
  %25 = load i64, i64* %n, align 8, !dbg !8022, !tbaa !2140
  %shr = ashr i64 %25, 1, !dbg !8022
  store i64 %shr, i64* %n, align 8, !dbg !8022, !tbaa !2140
  br label %for.cond, !dbg !8024

for.end:                                          ; preds = %for.cond
  %26 = load i64, i64* %n, align 8, !dbg !8025, !tbaa !2140
  %cmp23 = icmp eq i64 %26, 0, !dbg !8027
  br i1 %cmp23, label %if.then.24, label %if.else, !dbg !8028

if.then.24:                                       ; preds = %for.end
  %27 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8029, !tbaa !1458
  %buffer_size25 = getelementptr inbounds %struct.buffered, %struct.buffered* %27, i32 0, i32 17, !dbg !8030
  %28 = load i64, i64* %buffer_size25, align 8, !dbg !8030, !tbaa !2219
  %sub26 = sub i64 %28, 1, !dbg !8031
  %29 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8032, !tbaa !1458
  %buffer_mask = getelementptr inbounds %struct.buffered, %struct.buffered* %29, i32 0, i32 18, !dbg !8033
  store i64 %sub26, i64* %buffer_mask, align 8, !dbg !8034, !tbaa !7464
  br label %if.end.28, !dbg !8032

if.else:                                          ; preds = %for.end
  %30 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8035, !tbaa !1458
  %buffer_mask27 = getelementptr inbounds %struct.buffered, %struct.buffered* %30, i32 0, i32 18, !dbg !8036
  store i64 0, i64* %buffer_mask27, align 8, !dbg !8037, !tbaa !7464
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.24
  %31 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8038, !tbaa !1458
  %call29 = call i64 @_buffered_raw_tell(%struct.buffered* %31), !dbg !8040
  %cmp30 = icmp eq i64 %call29, -1, !dbg !8041
  br i1 %cmp30, label %if.then.31, label %if.end.32, !dbg !8042

if.then.31:                                       ; preds = %if.end.28
  call void @PyErr_Clear(), !dbg !8043
  br label %if.end.32, !dbg !8043

if.end.32:                                        ; preds = %if.then.31, %if.end.28
  store i32 0, i32* %retval, !dbg !8044
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8044

cleanup:                                          ; preds = %if.end.32, %if.then.19, %if.then.8, %if.then
  %32 = bitcast i64* %n to i8*, !dbg !8045
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !8045
  %33 = load i32, i32* %retval, !dbg !8045
  ret i32 %33, !dbg !8045
}

declare i8* @PyMem_Malloc(i64) #3

declare %struct._object* @PyErr_NoMemory() #3

declare i8* @PyThread_allocate_lock() #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferedwriter_write(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %buf = alloca %struct.bufferinfo, align 8
  %written = alloca i64, align 8
  %avail = alloca i64, align 8
  %remaining = alloca i64, align 8
  %offset = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %w = alloca i64*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1136, metadata !1450), !dbg !8046
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1137, metadata !1450), !dbg !8047
  %0 = bitcast %struct._object** %res to i8*, !dbg !8048
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8048
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1138, metadata !1450), !dbg !8049
  store %struct._object* null, %struct._object** %res, align 8, !dbg !8049, !tbaa !1458
  %1 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !8050
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !8050
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %buf, metadata !1139, metadata !1450), !dbg !8051
  %2 = bitcast i64* %written to i8*, !dbg !8052
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8052
  call void @llvm.dbg.declare(metadata i64* %written, metadata !1140, metadata !1450), !dbg !8053
  %3 = bitcast i64* %avail to i8*, !dbg !8052
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8052
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !1141, metadata !1450), !dbg !8054
  %4 = bitcast i64* %remaining to i8*, !dbg !8052
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !8052
  call void @llvm.dbg.declare(metadata i64* %remaining, metadata !1142, metadata !1450), !dbg !8055
  %5 = bitcast i64* %offset to i8*, !dbg !8056
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !8056
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !1143, metadata !1450), !dbg !8057
  %6 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8058, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %6, i32 0, i32 2, !dbg !8060
  %7 = load i32, i32* %ok, align 4, !dbg !8060, !tbaa !1660
  %cmp = icmp sle i32 %7, 0, !dbg !8061
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !8062

if.then:                                          ; preds = %entry
  %8 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8063, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %8, i32 0, i32 3, !dbg !8067
  %9 = load i32, i32* %detached, align 4, !dbg !8067, !tbaa !2019
  %tobool = icmp ne i32 %9, 0, !dbg !8068
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !8069

if.then.1:                                        ; preds = %if.then
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8070, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !8073
  br label %if.end, !dbg !8074

if.else:                                          ; preds = %if.then
  %11 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8075, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !8078
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !8079
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.262, !dbg !8081

if.end.2:                                         ; preds = %entry
  %12 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8082, !tbaa !1458
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0), %struct.bufferinfo* %buf), !dbg !8084
  %tobool3 = icmp ne i32 %call, 0, !dbg !8084
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !8085

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !8086
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.262, !dbg !8086

if.end.5:                                         ; preds = %if.end.2
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8088, !tbaa !1458
  %fast_closed_checks = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 7, !dbg !8090
  %14 = load i32, i32* %fast_closed_checks, align 4, !dbg !8090, !tbaa !2249
  %tobool6 = icmp ne i32 %14, 0, !dbg !8088
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !8091

cond.true:                                        ; preds = %if.end.5
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8092, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %15, i32 0, i32 1, !dbg !8094
  %16 = load %struct._object*, %struct._object** %raw, align 8, !dbg !8094, !tbaa !1676
  %call7 = call i32 @_PyFileIO_closed(%struct._object* %16), !dbg !8095
  %tobool8 = icmp ne i32 %call7, 0, !dbg !8095
  br i1 %tobool8, label %if.then.11, label %if.end.12, !dbg !8088

cond.false:                                       ; preds = %if.end.5
  %17 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8096, !tbaa !1458
  %call9 = call i32 @buffered_closed(%struct.buffered* %17), !dbg !8098
  %tobool10 = icmp ne i32 %call9, 0, !dbg !8098
  br i1 %tobool10, label %if.then.11, label %if.end.12, !dbg !8091

if.then.11:                                       ; preds = %cond.false, %cond.true
  %18 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8099, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %18, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i32 0, i32 0)), !dbg !8101
  call void @PyBuffer_Release(%struct.bufferinfo* %buf), !dbg !8102
  store %struct._object* null, %struct._object** %retval, !dbg !8103
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.262, !dbg !8103

if.end.12:                                        ; preds = %cond.false, %cond.true
  %19 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8104, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %19, i32 0, i32 15, !dbg !8106
  %20 = load i8*, i8** %lock, align 8, !dbg !8106, !tbaa !1730
  %call13 = call i32 @PyThread_acquire_lock(i8* %20, i32 0), !dbg !8107
  %tobool14 = icmp ne i32 %call13, 0, !dbg !8107
  br i1 %tobool14, label %cond.true.15, label %cond.false.16, !dbg !8108

cond.true.15:                                     ; preds = %if.end.12
  br i1 true, label %land.lhs.true, label %if.then.20, !dbg !8109

cond.false.16:                                    ; preds = %if.end.12
  %21 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8111, !tbaa !1458
  %call17 = call i32 @_enter_buffered_busy(%struct.buffered* %21), !dbg !8113
  %tobool18 = icmp ne i32 %call17, 0, !dbg !8113
  br i1 %tobool18, label %land.lhs.true, label %if.then.20, !dbg !8108

land.lhs.true:                                    ; preds = %cond.false.16, %cond.true.15
  %call19 = call i64 @PyThread_get_thread_ident(), !dbg !8114
  %22 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8117, !tbaa !1458
  %owner = getelementptr inbounds %struct.buffered, %struct.buffered* %22, i32 0, i32 16, !dbg !8118
  store volatile i64 %call19, i64* %owner, align 8, !dbg !8119, !tbaa !3261
  br i1 true, label %if.end.21, label %if.then.20, !dbg !8120

if.then.20:                                       ; preds = %land.lhs.true, %cond.false.16, %cond.true.15
  call void @PyBuffer_Release(%struct.bufferinfo* %buf), !dbg !8121
  store %struct._object* null, %struct._object** %retval, !dbg !8123
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.262, !dbg !8123

if.end.21:                                        ; preds = %land.lhs.true
  %23 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8124, !tbaa !1458
  %readable = getelementptr inbounds %struct.buffered, %struct.buffered* %23, i32 0, i32 4, !dbg !8126
  %24 = load i32, i32* %readable, align 4, !dbg !8126, !tbaa !2223
  %tobool22 = icmp ne i32 %24, 0, !dbg !8124
  br i1 %tobool22, label %land.lhs.true.23, label %land.lhs.true.25, !dbg !8127

land.lhs.true.23:                                 ; preds = %if.end.21
  %25 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8128, !tbaa !1458
  %read_end = getelementptr inbounds %struct.buffered, %struct.buffered* %25, i32 0, i32 12, !dbg !8130
  %26 = load i64, i64* %read_end, align 8, !dbg !8130, !tbaa !3164
  %cmp24 = icmp ne i64 %26, -1, !dbg !8131
  br i1 %cmp24, label %if.end.30, label %land.lhs.true.25, !dbg !8132

land.lhs.true.25:                                 ; preds = %land.lhs.true.23, %if.end.21
  %27 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8133, !tbaa !1458
  %writable = getelementptr inbounds %struct.buffered, %struct.buffered* %27, i32 0, i32 5, !dbg !8136
  %28 = load i32, i32* %writable, align 4, !dbg !8136, !tbaa !2227
  %tobool26 = icmp ne i32 %28, 0, !dbg !8137
  br i1 %tobool26, label %land.lhs.true.27, label %if.then.29, !dbg !8138

land.lhs.true.27:                                 ; preds = %land.lhs.true.25
  %29 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8139, !tbaa !1458
  %write_end = getelementptr inbounds %struct.buffered, %struct.buffered* %29, i32 0, i32 14, !dbg !8141
  %30 = load i64, i64* %write_end, align 8, !dbg !8141, !tbaa !3922
  %cmp28 = icmp ne i64 %30, -1, !dbg !8142
  br i1 %cmp28, label %if.end.30, label %if.then.29, !dbg !8143

if.then.29:                                       ; preds = %land.lhs.true.27, %land.lhs.true.25
  %31 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8144, !tbaa !1458
  %pos = getelementptr inbounds %struct.buffered, %struct.buffered* %31, i32 0, i32 10, !dbg !8146
  store i64 0, i64* %pos, align 8, !dbg !8147, !tbaa !2357
  %32 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8148, !tbaa !1458
  %raw_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %32, i32 0, i32 11, !dbg !8149
  store i64 0, i64* %raw_pos, align 8, !dbg !8150, !tbaa !3929
  br label %if.end.30, !dbg !8151

if.end.30:                                        ; preds = %if.then.29, %land.lhs.true.27, %land.lhs.true.23
  %33 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8152, !tbaa !1458
  %buffer_size = getelementptr inbounds %struct.buffered, %struct.buffered* %33, i32 0, i32 17, !dbg !8153
  %34 = load i64, i64* %buffer_size, align 8, !dbg !8153, !tbaa !2219
  %35 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8154, !tbaa !1458
  %pos31 = getelementptr inbounds %struct.buffered, %struct.buffered* %35, i32 0, i32 10, !dbg !8155
  %36 = load i64, i64* %pos31, align 8, !dbg !8155, !tbaa !2357
  %sub = sub i64 %34, %36, !dbg !8156
  store i64 %sub, i64* %avail, align 8, !dbg !8157, !tbaa !2140
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !8158
  %37 = load i64, i64* %len, align 8, !dbg !8158, !tbaa !2985
  %38 = load i64, i64* %avail, align 8, !dbg !8160, !tbaa !2140
  %cmp32 = icmp sle i64 %37, %38, !dbg !8161
  br i1 %cmp32, label %if.then.33, label %if.end.72, !dbg !8162

if.then.33:                                       ; preds = %if.end.30
  %39 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8163, !tbaa !1458
  %buffer = getelementptr inbounds %struct.buffered, %struct.buffered* %39, i32 0, i32 9, !dbg !8165
  %40 = load i8*, i8** %buffer, align 8, !dbg !8165, !tbaa !1717
  %41 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8166, !tbaa !1458
  %pos34 = getelementptr inbounds %struct.buffered, %struct.buffered* %41, i32 0, i32 10, !dbg !8167
  %42 = load i64, i64* %pos34, align 8, !dbg !8167, !tbaa !2357
  %add.ptr = getelementptr i8, i8* %40, i64 %42, !dbg !8168
  %buf35 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !8169
  %43 = load i8*, i8** %buf35, align 8, !dbg !8169, !tbaa !3065
  %len36 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !8170
  %44 = load i64, i64* %len36, align 8, !dbg !8170, !tbaa !2985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %43, i64 %44, i32 1, i1 false), !dbg !8171
  %45 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8172, !tbaa !1458
  %writable37 = getelementptr inbounds %struct.buffered, %struct.buffered* %45, i32 0, i32 5, !dbg !8174
  %46 = load i32, i32* %writable37, align 4, !dbg !8174, !tbaa !2227
  %tobool38 = icmp ne i32 %46, 0, !dbg !8172
  br i1 %tobool38, label %land.lhs.true.39, label %if.then.44, !dbg !8175

land.lhs.true.39:                                 ; preds = %if.then.33
  %47 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8176, !tbaa !1458
  %write_end40 = getelementptr inbounds %struct.buffered, %struct.buffered* %47, i32 0, i32 14, !dbg !8178
  %48 = load i64, i64* %write_end40, align 8, !dbg !8178, !tbaa !3922
  %cmp41 = icmp ne i64 %48, -1, !dbg !8179
  br i1 %cmp41, label %lor.lhs.false, label %if.then.44, !dbg !8180

lor.lhs.false:                                    ; preds = %land.lhs.true.39
  %49 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8181, !tbaa !1458
  %write_pos = getelementptr inbounds %struct.buffered, %struct.buffered* %49, i32 0, i32 13, !dbg !8183
  %50 = load i64, i64* %write_pos, align 8, !dbg !8183, !tbaa !4037
  %51 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8184, !tbaa !1458
  %pos42 = getelementptr inbounds %struct.buffered, %struct.buffered* %51, i32 0, i32 10, !dbg !8185
  %52 = load i64, i64* %pos42, align 8, !dbg !8185, !tbaa !2357
  %cmp43 = icmp sgt i64 %50, %52, !dbg !8186
  br i1 %cmp43, label %if.then.44, label %if.end.47, !dbg !8187

if.then.44:                                       ; preds = %lor.lhs.false, %land.lhs.true.39, %if.then.33
  %53 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8188, !tbaa !1458
  %pos45 = getelementptr inbounds %struct.buffered, %struct.buffered* %53, i32 0, i32 10, !dbg !8190
  %54 = load i64, i64* %pos45, align 8, !dbg !8190, !tbaa !2357
  %55 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8191, !tbaa !1458
  %write_pos46 = getelementptr inbounds %struct.buffered, %struct.buffered* %55, i32 0, i32 13, !dbg !8192
  store i64 %54, i64* %write_pos46, align 8, !dbg !8193, !tbaa !4037
  br label %if.end.47, !dbg !8194

if.end.47:                                        ; preds = %if.then.44, %lor.lhs.false
  br label %do.body, !dbg !8195

do.body:                                          ; preds = %if.end.47
  %56 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8196, !tbaa !1458
  %pos48 = getelementptr inbounds %struct.buffered, %struct.buffered* %56, i32 0, i32 10, !dbg !8199
  %57 = load i64, i64* %pos48, align 8, !dbg !8199, !tbaa !2357
  %len49 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !8200
  %58 = load i64, i64* %len49, align 8, !dbg !8200, !tbaa !2985
  %add = add i64 %57, %58, !dbg !8201
  %59 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8202, !tbaa !1458
  %pos50 = getelementptr inbounds %struct.buffered, %struct.buffered* %59, i32 0, i32 10, !dbg !8203
  store i64 %add, i64* %pos50, align 8, !dbg !8204, !tbaa !2357
  %60 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8205, !tbaa !1458
  %readable51 = getelementptr inbounds %struct.buffered, %struct.buffered* %60, i32 0, i32 4, !dbg !8207
  %61 = load i32, i32* %readable51, align 4, !dbg !8207, !tbaa !2223
  %tobool52 = icmp ne i32 %61, 0, !dbg !8205
  br i1 %tobool52, label %land.lhs.true.53, label %if.end.63, !dbg !8208

land.lhs.true.53:                                 ; preds = %do.body
  %62 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8209, !tbaa !1458
  %read_end54 = getelementptr inbounds %struct.buffered, %struct.buffered* %62, i32 0, i32 12, !dbg !8211
  %63 = load i64, i64* %read_end54, align 8, !dbg !8211, !tbaa !3164
  %cmp55 = icmp ne i64 %63, -1, !dbg !8212
  br i1 %cmp55, label %land.lhs.true.56, label %if.end.63, !dbg !8213

land.lhs.true.56:                                 ; preds = %land.lhs.true.53
  %64 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8214, !tbaa !1458
  %read_end57 = getelementptr inbounds %struct.buffered, %struct.buffered* %64, i32 0, i32 12, !dbg !8216
  %65 = load i64, i64* %read_end57, align 8, !dbg !8216, !tbaa !3164
  %66 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8217, !tbaa !1458
  %pos58 = getelementptr inbounds %struct.buffered, %struct.buffered* %66, i32 0, i32 10, !dbg !8218
  %67 = load i64, i64* %pos58, align 8, !dbg !8218, !tbaa !2357
  %cmp59 = icmp slt i64 %65, %67, !dbg !8219
  br i1 %cmp59, label %if.then.60, label %if.end.63, !dbg !8220

if.then.60:                                       ; preds = %land.lhs.true.56
  %68 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8221, !tbaa !1458
  %pos61 = getelementptr inbounds %struct.buffered, %struct.buffered* %68, i32 0, i32 10, !dbg !8223
  %69 = load i64, i64* %pos61, align 8, !dbg !8223, !tbaa !2357
  %70 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8224, !tbaa !1458
  %read_end62 = getelementptr inbounds %struct.buffered, %struct.buffered* %70, i32 0, i32 12, !dbg !8225
  store i64 %69, i64* %read_end62, align 8, !dbg !8226, !tbaa !3164
  br label %if.end.63, !dbg !8224

if.end.63:                                        ; preds = %if.then.60, %land.lhs.true.56, %land.lhs.true.53, %do.body
  br label %do.cond, !dbg !8227

do.cond:                                          ; preds = %if.end.63
  br label %do.end, !dbg !8232

do.end:                                           ; preds = %do.cond
  %71 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8234, !tbaa !1458
  %pos64 = getelementptr inbounds %struct.buffered, %struct.buffered* %71, i32 0, i32 10, !dbg !8236
  %72 = load i64, i64* %pos64, align 8, !dbg !8236, !tbaa !2357
  %73 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8237, !tbaa !1458
  %write_end65 = getelementptr inbounds %struct.buffered, %struct.buffered* %73, i32 0, i32 14, !dbg !8238
  %74 = load i64, i64* %write_end65, align 8, !dbg !8238, !tbaa !3922
  %cmp66 = icmp sgt i64 %72, %74, !dbg !8239
  br i1 %cmp66, label %if.then.67, label %if.end.70, !dbg !8240

if.then.67:                                       ; preds = %do.end
  %75 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8241, !tbaa !1458
  %pos68 = getelementptr inbounds %struct.buffered, %struct.buffered* %75, i32 0, i32 10, !dbg !8242
  %76 = load i64, i64* %pos68, align 8, !dbg !8242, !tbaa !2357
  %77 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8243, !tbaa !1458
  %write_end69 = getelementptr inbounds %struct.buffered, %struct.buffered* %77, i32 0, i32 14, !dbg !8244
  store i64 %76, i64* %write_end69, align 8, !dbg !8245, !tbaa !3922
  br label %if.end.70, !dbg !8243

if.end.70:                                        ; preds = %if.then.67, %do.end
  %len71 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !8246
  %78 = load i64, i64* %len71, align 8, !dbg !8246, !tbaa !2985
  store i64 %78, i64* %written, align 8, !dbg !8247, !tbaa !2140
  br label %end, !dbg !8248

if.end.72:                                        ; preds = %if.end.30
  %79 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8249, !tbaa !1458
  %call73 = call %struct._object* @_bufferedwriter_flush_unlocked(%struct.buffered* %79), !dbg !8250
  store %struct._object* %call73, %struct._object** %res, align 8, !dbg !8251, !tbaa !1458
  %80 = load %struct._object*, %struct._object** %res, align 8, !dbg !8252, !tbaa !1458
  %cmp74 = icmp eq %struct._object* %80, null, !dbg !8253
  br i1 %cmp74, label %if.then.75, label %if.end.128, !dbg !8254

if.then.75:                                       ; preds = %if.end.72
  %81 = bitcast i64** %w to i8*, !dbg !8255
  call void @llvm.lifetime.start(i64 8, i8* %81) #1, !dbg !8255
  call void @llvm.dbg.declare(metadata i64** %w, metadata !1144, metadata !1450), !dbg !8256
  %call76 = call i64* @_buffered_check_blocking_error(), !dbg !8257
  store i64* %call76, i64** %w, align 8, !dbg !8256, !tbaa !1458
  %82 = load i64*, i64** %w, align 8, !dbg !8258, !tbaa !1458
  %cmp77 = icmp eq i64* %82, null, !dbg !8260
  br i1 %cmp77, label %if.then.78, label %if.end.79, !dbg !8261

if.then.78:                                       ; preds = %if.then.75
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8262

if.end.79:                                        ; preds = %if.then.75
  %83 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8263, !tbaa !1458
  %readable80 = getelementptr inbounds %struct.buffered, %struct.buffered* %83, i32 0, i32 4, !dbg !8265
  %84 = load i32, i32* %readable80, align 4, !dbg !8265, !tbaa !2223
  %tobool81 = icmp ne i32 %84, 0, !dbg !8263
  br i1 %tobool81, label %if.then.82, label %if.end.83, !dbg !8266

if.then.82:                                       ; preds = %if.end.79
  %85 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8267, !tbaa !1458
  call void @_bufferedreader_reset_buf(%struct.buffered* %85), !dbg !8268
  br label %if.end.83, !dbg !8268

if.end.83:                                        ; preds = %if.then.82, %if.end.79
  %86 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8269, !tbaa !1458
  %buffer84 = getelementptr inbounds %struct.buffered, %struct.buffered* %86, i32 0, i32 9, !dbg !8270
  %87 = load i8*, i8** %buffer84, align 8, !dbg !8270, !tbaa !1717
  %88 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8271, !tbaa !1458
  %buffer85 = getelementptr inbounds %struct.buffered, %struct.buffered* %88, i32 0, i32 9, !dbg !8272
  %89 = load i8*, i8** %buffer85, align 8, !dbg !8272, !tbaa !1717
  %90 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8273, !tbaa !1458
  %write_pos86 = getelementptr inbounds %struct.buffered, %struct.buffered* %90, i32 0, i32 13, !dbg !8274
  %91 = load i64, i64* %write_pos86, align 8, !dbg !8274, !tbaa !4037
  %add.ptr87 = getelementptr i8, i8* %89, i64 %91, !dbg !8275
  %92 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8276, !tbaa !1458
  %write_end88 = getelementptr inbounds %struct.buffered, %struct.buffered* %92, i32 0, i32 14, !dbg !8277
  %93 = load i64, i64* %write_end88, align 8, !dbg !8277, !tbaa !3922
  %94 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8278, !tbaa !1458
  %write_pos89 = getelementptr inbounds %struct.buffered, %struct.buffered* %94, i32 0, i32 13, !dbg !8279
  %95 = load i64, i64* %write_pos89, align 8, !dbg !8279, !tbaa !4037
  %sub90 = sub i64 %93, %95, !dbg !8280
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %87, i8* %add.ptr87, i64 %sub90, i32 1, i1 false), !dbg !8281
  %96 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8282, !tbaa !1458
  %write_pos91 = getelementptr inbounds %struct.buffered, %struct.buffered* %96, i32 0, i32 13, !dbg !8283
  %97 = load i64, i64* %write_pos91, align 8, !dbg !8283, !tbaa !4037
  %98 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8284, !tbaa !1458
  %write_end92 = getelementptr inbounds %struct.buffered, %struct.buffered* %98, i32 0, i32 14, !dbg !8285
  %99 = load i64, i64* %write_end92, align 8, !dbg !8286, !tbaa !3922
  %sub93 = sub i64 %99, %97, !dbg !8286
  store i64 %sub93, i64* %write_end92, align 8, !dbg !8286, !tbaa !3922
  %100 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8287, !tbaa !1458
  %write_pos94 = getelementptr inbounds %struct.buffered, %struct.buffered* %100, i32 0, i32 13, !dbg !8288
  %101 = load i64, i64* %write_pos94, align 8, !dbg !8288, !tbaa !4037
  %102 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8289, !tbaa !1458
  %raw_pos95 = getelementptr inbounds %struct.buffered, %struct.buffered* %102, i32 0, i32 11, !dbg !8290
  %103 = load i64, i64* %raw_pos95, align 8, !dbg !8291, !tbaa !3929
  %sub96 = sub i64 %103, %101, !dbg !8291
  store i64 %sub96, i64* %raw_pos95, align 8, !dbg !8291, !tbaa !3929
  %104 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8292, !tbaa !1458
  %write_pos97 = getelementptr inbounds %struct.buffered, %struct.buffered* %104, i32 0, i32 13, !dbg !8293
  %105 = load i64, i64* %write_pos97, align 8, !dbg !8293, !tbaa !4037
  %106 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8294, !tbaa !1458
  %pos98 = getelementptr inbounds %struct.buffered, %struct.buffered* %106, i32 0, i32 10, !dbg !8295
  %107 = load i64, i64* %pos98, align 8, !dbg !8296, !tbaa !2357
  %sub99 = sub i64 %107, %105, !dbg !8296
  store i64 %sub99, i64* %pos98, align 8, !dbg !8296, !tbaa !2357
  %108 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8297, !tbaa !1458
  %write_pos100 = getelementptr inbounds %struct.buffered, %struct.buffered* %108, i32 0, i32 13, !dbg !8298
  store i64 0, i64* %write_pos100, align 8, !dbg !8299, !tbaa !4037
  %109 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8300, !tbaa !1458
  %buffer_size101 = getelementptr inbounds %struct.buffered, %struct.buffered* %109, i32 0, i32 17, !dbg !8301
  %110 = load i64, i64* %buffer_size101, align 8, !dbg !8301, !tbaa !2219
  %111 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8302, !tbaa !1458
  %write_end102 = getelementptr inbounds %struct.buffered, %struct.buffered* %111, i32 0, i32 14, !dbg !8303
  %112 = load i64, i64* %write_end102, align 8, !dbg !8303, !tbaa !3922
  %sub103 = sub i64 %110, %112, !dbg !8304
  store i64 %sub103, i64* %avail, align 8, !dbg !8305, !tbaa !2140
  %len104 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !8306
  %113 = load i64, i64* %len104, align 8, !dbg !8306, !tbaa !2985
  %114 = load i64, i64* %avail, align 8, !dbg !8308, !tbaa !2140
  %cmp105 = icmp sle i64 %113, %114, !dbg !8309
  br i1 %cmp105, label %if.then.106, label %if.end.119, !dbg !8310

if.then.106:                                      ; preds = %if.end.83
  call void @PyErr_Clear(), !dbg !8311
  %115 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8313, !tbaa !1458
  %buffer107 = getelementptr inbounds %struct.buffered, %struct.buffered* %115, i32 0, i32 9, !dbg !8314
  %116 = load i8*, i8** %buffer107, align 8, !dbg !8314, !tbaa !1717
  %117 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8315, !tbaa !1458
  %write_end108 = getelementptr inbounds %struct.buffered, %struct.buffered* %117, i32 0, i32 14, !dbg !8316
  %118 = load i64, i64* %write_end108, align 8, !dbg !8316, !tbaa !3922
  %add.ptr109 = getelementptr i8, i8* %116, i64 %118, !dbg !8317
  %buf110 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !8318
  %119 = load i8*, i8** %buf110, align 8, !dbg !8318, !tbaa !3065
  %len111 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !8319
  %120 = load i64, i64* %len111, align 8, !dbg !8319, !tbaa !2985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr109, i8* %119, i64 %120, i32 1, i1 false), !dbg !8320
  %len112 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !8321
  %121 = load i64, i64* %len112, align 8, !dbg !8321, !tbaa !2985
  %122 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8322, !tbaa !1458
  %write_end113 = getelementptr inbounds %struct.buffered, %struct.buffered* %122, i32 0, i32 14, !dbg !8323
  %123 = load i64, i64* %write_end113, align 8, !dbg !8324, !tbaa !3922
  %add114 = add i64 %123, %121, !dbg !8324
  store i64 %add114, i64* %write_end113, align 8, !dbg !8324, !tbaa !3922
  %len115 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !8325
  %124 = load i64, i64* %len115, align 8, !dbg !8325, !tbaa !2985
  %125 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8326, !tbaa !1458
  %pos116 = getelementptr inbounds %struct.buffered, %struct.buffered* %125, i32 0, i32 10, !dbg !8327
  %126 = load i64, i64* %pos116, align 8, !dbg !8328, !tbaa !2357
  %add117 = add i64 %126, %124, !dbg !8328
  store i64 %add117, i64* %pos116, align 8, !dbg !8328, !tbaa !2357
  %len118 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !8329
  %127 = load i64, i64* %len118, align 8, !dbg !8329, !tbaa !2985
  store i64 %127, i64* %written, align 8, !dbg !8330, !tbaa !2140
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8331

if.end.119:                                       ; preds = %if.end.83
  %128 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8332, !tbaa !1458
  %buffer120 = getelementptr inbounds %struct.buffered, %struct.buffered* %128, i32 0, i32 9, !dbg !8333
  %129 = load i8*, i8** %buffer120, align 8, !dbg !8333, !tbaa !1717
  %130 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8334, !tbaa !1458
  %write_end121 = getelementptr inbounds %struct.buffered, %struct.buffered* %130, i32 0, i32 14, !dbg !8335
  %131 = load i64, i64* %write_end121, align 8, !dbg !8335, !tbaa !3922
  %add.ptr122 = getelementptr i8, i8* %129, i64 %131, !dbg !8336
  %buf123 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !8337
  %132 = load i8*, i8** %buf123, align 8, !dbg !8337, !tbaa !3065
  %133 = load i64, i64* %avail, align 8, !dbg !8338, !tbaa !2140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr122, i8* %132, i64 %133, i32 1, i1 false), !dbg !8339
  %134 = load i64, i64* %avail, align 8, !dbg !8340, !tbaa !2140
  %135 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8341, !tbaa !1458
  %write_end124 = getelementptr inbounds %struct.buffered, %struct.buffered* %135, i32 0, i32 14, !dbg !8342
  %136 = load i64, i64* %write_end124, align 8, !dbg !8343, !tbaa !3922
  %add125 = add i64 %136, %134, !dbg !8343
  store i64 %add125, i64* %write_end124, align 8, !dbg !8343, !tbaa !3922
  %137 = load i64, i64* %avail, align 8, !dbg !8344, !tbaa !2140
  %138 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8345, !tbaa !1458
  %pos126 = getelementptr inbounds %struct.buffered, %struct.buffered* %138, i32 0, i32 10, !dbg !8346
  %139 = load i64, i64* %pos126, align 8, !dbg !8347, !tbaa !2357
  %add127 = add i64 %139, %137, !dbg !8347
  store i64 %add127, i64* %pos126, align 8, !dbg !8347, !tbaa !2357
  %140 = load i64, i64* %avail, align 8, !dbg !8348, !tbaa !2140
  call void @_set_BlockingIOError(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i32 0, i32 0), i64 %140), !dbg !8349
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8350

cleanup:                                          ; preds = %if.end.119, %if.then.106, %if.then.78
  %141 = bitcast i64** %w to i8*, !dbg !8351
  call void @llvm.lifetime.end(i64 8, i8* %141) #1, !dbg !8351
  %cleanup.dest255 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest255, 5
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest255, 5
  br i1 %SwitchLeaf2, label %error, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest255, 4
  br i1 %SwitchLeaf, label %end, label %NewDefault

if.end.128:                                       ; preds = %if.end.72
  br label %do.body.129, !dbg !8352

do.body.129:                                      ; preds = %if.end.128
  %142 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8353
  call void @llvm.lifetime.start(i64 8, i8* %142) #1, !dbg !8353
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1147, metadata !1450), !dbg !8355
  %143 = load %struct._object*, %struct._object** %res, align 8, !dbg !8356, !tbaa !1458
  store %struct._object* %143, %struct._object** %_py_tmp, align 8, !dbg !8355, !tbaa !1458
  %144 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !8357, !tbaa !1458
  %cmp130 = icmp ne %struct._object* %144, null, !dbg !8358
  br i1 %cmp130, label %if.then.131, label %if.end.139, !dbg !8359

if.then.131:                                      ; preds = %do.body.129
  store %struct._object* null, %struct._object** %res, align 8, !dbg !8360, !tbaa !1458
  br label %do.body.132, !dbg !8362

do.body.132:                                      ; preds = %if.then.131
  %145 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8363
  call void @llvm.lifetime.start(i64 8, i8* %145) #1, !dbg !8363
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1149, metadata !1450), !dbg !8365
  %146 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !8366, !tbaa !1458
  store %struct._object* %146, %struct._object** %_py_decref_tmp, align 8, !dbg !8365, !tbaa !1458
  %147 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8367, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %147, i32 0, i32 0, !dbg !8369
  %148 = load i64, i64* %ob_refcnt, align 8, !dbg !8370, !tbaa !1501
  %dec = add i64 %148, -1, !dbg !8370
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8370, !tbaa !1501
  %cmp133 = icmp ne i64 %dec, 0, !dbg !8371
  br i1 %cmp133, label %if.then.134, label %if.else.135, !dbg !8372

if.then.134:                                      ; preds = %do.body.132
  br label %if.end.136, !dbg !8373

if.else.135:                                      ; preds = %do.body.132
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8375, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %149, i32 0, i32 1, !dbg !8377
  %150 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8377, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %150, i32 0, i32 4, !dbg !8378
  %151 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8378, !tbaa !1511
  %152 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8379, !tbaa !1458
  call void %151(%struct._object* %152), !dbg !8380
  br label %if.end.136

if.end.136:                                       ; preds = %if.else.135, %if.then.134
  %153 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8381
  call void @llvm.lifetime.end(i64 8, i8* %153) #1, !dbg !8381
  br label %do.cond.137, !dbg !8383

do.cond.137:                                      ; preds = %if.end.136
  br label %do.end.138, !dbg !8384

do.end.138:                                       ; preds = %do.cond.137
  br label %if.end.139, !dbg !8386

if.end.139:                                       ; preds = %do.end.138, %do.body.129
  %154 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8388
  call void @llvm.lifetime.end(i64 8, i8* %154) #1, !dbg !8388
  br label %do.cond.140, !dbg !8391

do.cond.140:                                      ; preds = %if.end.139
  br label %do.end.141, !dbg !8392

do.end.141:                                       ; preds = %do.cond.140
  %155 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8394, !tbaa !1458
  %readable142 = getelementptr inbounds %struct.buffered, %struct.buffered* %155, i32 0, i32 4, !dbg !8395
  %156 = load i32, i32* %readable142, align 4, !dbg !8395, !tbaa !2223
  %tobool143 = icmp ne i32 %156, 0, !dbg !8394
  br i1 %tobool143, label %land.lhs.true.144, label %lor.lhs.false.147, !dbg !8396

land.lhs.true.144:                                ; preds = %do.end.141
  %157 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8397, !tbaa !1458
  %read_end145 = getelementptr inbounds %struct.buffered, %struct.buffered* %157, i32 0, i32 12, !dbg !8399
  %158 = load i64, i64* %read_end145, align 8, !dbg !8399, !tbaa !3164
  %cmp146 = icmp ne i64 %158, -1, !dbg !8400
  br i1 %cmp146, label %land.lhs.true.153, label %lor.lhs.false.147, !dbg !8401

lor.lhs.false.147:                                ; preds = %land.lhs.true.144, %do.end.141
  %159 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8402, !tbaa !1458
  %writable148 = getelementptr inbounds %struct.buffered, %struct.buffered* %159, i32 0, i32 5, !dbg !8405
  %160 = load i32, i32* %writable148, align 4, !dbg !8405, !tbaa !2227
  %tobool149 = icmp ne i32 %160, 0, !dbg !8406
  br i1 %tobool149, label %land.lhs.true.150, label %cond.false.160, !dbg !8407

land.lhs.true.150:                                ; preds = %lor.lhs.false.147
  %161 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8408, !tbaa !1458
  %write_end151 = getelementptr inbounds %struct.buffered, %struct.buffered* %161, i32 0, i32 14, !dbg !8410
  %162 = load i64, i64* %write_end151, align 8, !dbg !8410, !tbaa !3922
  %cmp152 = icmp ne i64 %162, -1, !dbg !8411
  br i1 %cmp152, label %land.lhs.true.153, label %cond.false.160, !dbg !8412

land.lhs.true.153:                                ; preds = %land.lhs.true.150, %land.lhs.true.144
  %163 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8413, !tbaa !1458
  %raw_pos154 = getelementptr inbounds %struct.buffered, %struct.buffered* %163, i32 0, i32 11, !dbg !8415
  %164 = load i64, i64* %raw_pos154, align 8, !dbg !8415, !tbaa !3929
  %cmp155 = icmp sge i64 %164, 0, !dbg !8416
  br i1 %cmp155, label %cond.true.156, label %cond.false.160, !dbg !8417

cond.true.156:                                    ; preds = %land.lhs.true.153
  %165 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8418, !tbaa !1458
  %raw_pos157 = getelementptr inbounds %struct.buffered, %struct.buffered* %165, i32 0, i32 11, !dbg !8420
  %166 = load i64, i64* %raw_pos157, align 8, !dbg !8420, !tbaa !3929
  %167 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8421, !tbaa !1458
  %pos158 = getelementptr inbounds %struct.buffered, %struct.buffered* %167, i32 0, i32 10, !dbg !8422
  %168 = load i64, i64* %pos158, align 8, !dbg !8422, !tbaa !2357
  %sub159 = sub i64 %166, %168, !dbg !8423
  br label %cond.end, !dbg !8417

cond.false.160:                                   ; preds = %land.lhs.true.153, %land.lhs.true.150, %lor.lhs.false.147
  br label %cond.end, !dbg !8424

cond.end:                                         ; preds = %cond.false.160, %cond.true.156
  %cond = phi i64 [ %sub159, %cond.true.156 ], [ 0, %cond.false.160 ], !dbg !8417
  store i64 %cond, i64* %offset, align 8, !dbg !8428, !tbaa !2140
  %169 = load i64, i64* %offset, align 8, !dbg !8431, !tbaa !2140
  %cmp161 = icmp ne i64 %169, 0, !dbg !8433
  br i1 %cmp161, label %if.then.162, label %if.end.170, !dbg !8434

if.then.162:                                      ; preds = %cond.end
  %170 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8435, !tbaa !1458
  %171 = load i64, i64* %offset, align 8, !dbg !8438, !tbaa !2140
  %sub163 = sub i64 0, %171, !dbg !8439
  %call164 = call i64 @_buffered_raw_seek(%struct.buffered* %170, i64 %sub163, i32 1), !dbg !8440
  %cmp165 = icmp slt i64 %call164, 0, !dbg !8441
  br i1 %cmp165, label %if.then.166, label %if.end.167, !dbg !8442

if.then.166:                                      ; preds = %if.then.162
  br label %error, !dbg !8443

if.end.167:                                       ; preds = %if.then.162
  %172 = load i64, i64* %offset, align 8, !dbg !8444, !tbaa !2140
  %173 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8445, !tbaa !1458
  %raw_pos168 = getelementptr inbounds %struct.buffered, %struct.buffered* %173, i32 0, i32 11, !dbg !8446
  %174 = load i64, i64* %raw_pos168, align 8, !dbg !8447, !tbaa !3929
  %sub169 = sub i64 %174, %172, !dbg !8447
  store i64 %sub169, i64* %raw_pos168, align 8, !dbg !8447, !tbaa !3929
  br label %if.end.170, !dbg !8448

if.end.170:                                       ; preds = %if.end.167, %cond.end
  %len171 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !8449
  %175 = load i64, i64* %len171, align 8, !dbg !8449, !tbaa !2985
  store i64 %175, i64* %remaining, align 8, !dbg !8450, !tbaa !2140
  store i64 0, i64* %written, align 8, !dbg !8451, !tbaa !2140
  br label %while.cond, !dbg !8452

while.cond:                                       ; preds = %cleanup.cont, %if.end.170
  %176 = load i64, i64* %remaining, align 8, !dbg !8453, !tbaa !2140
  %177 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8455, !tbaa !1458
  %buffer_size172 = getelementptr inbounds %struct.buffered, %struct.buffered* %177, i32 0, i32 17, !dbg !8456
  %178 = load i64, i64* %buffer_size172, align 8, !dbg !8456, !tbaa !2219
  %cmp173 = icmp sgt i64 %176, %178, !dbg !8457
  br i1 %cmp173, label %while.body, label %while.end, !dbg !8452

while.body:                                       ; preds = %while.cond
  %179 = bitcast i64* %n to i8*, !dbg !8458
  call void @llvm.lifetime.start(i64 8, i8* %179) #1, !dbg !8458
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1153, metadata !1450), !dbg !8459
  %180 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8460, !tbaa !1458
  %buf174 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !8461
  %181 = load i8*, i8** %buf174, align 8, !dbg !8461, !tbaa !3065
  %182 = load i64, i64* %written, align 8, !dbg !8462, !tbaa !2140
  %add.ptr175 = getelementptr i8, i8* %181, i64 %182, !dbg !8463
  %len176 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 2, !dbg !8464
  %183 = load i64, i64* %len176, align 8, !dbg !8464, !tbaa !2985
  %184 = load i64, i64* %written, align 8, !dbg !8465, !tbaa !2140
  %sub177 = sub i64 %183, %184, !dbg !8466
  %call178 = call i64 @_bufferedwriter_raw_write(%struct.buffered* %180, i8* %add.ptr175, i64 %sub177), !dbg !8467
  store i64 %call178, i64* %n, align 8, !dbg !8459, !tbaa !2140
  %185 = load i64, i64* %n, align 8, !dbg !8468, !tbaa !2140
  %cmp179 = icmp eq i64 %185, -1, !dbg !8470
  br i1 %cmp179, label %if.then.180, label %if.else.181, !dbg !8471

if.then.180:                                      ; preds = %while.body
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.223, !dbg !8472

if.else.181:                                      ; preds = %while.body
  %186 = load i64, i64* %n, align 8, !dbg !8474, !tbaa !2140
  %cmp182 = icmp eq i64 %186, -2, !dbg !8476
  br i1 %cmp182, label %if.then.183, label %if.end.215, !dbg !8477

if.then.183:                                      ; preds = %if.else.181
  %187 = load i64, i64* %remaining, align 8, !dbg !8478, !tbaa !2140
  %188 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8481, !tbaa !1458
  %buffer_size184 = getelementptr inbounds %struct.buffered, %struct.buffered* %188, i32 0, i32 17, !dbg !8482
  %189 = load i64, i64* %buffer_size184, align 8, !dbg !8482, !tbaa !2219
  %cmp185 = icmp sgt i64 %187, %189, !dbg !8483
  br i1 %cmp185, label %if.then.186, label %if.end.214, !dbg !8484

if.then.186:                                      ; preds = %if.then.183
  %190 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8485, !tbaa !1458
  %buffer187 = getelementptr inbounds %struct.buffered, %struct.buffered* %190, i32 0, i32 9, !dbg !8487
  %191 = load i8*, i8** %buffer187, align 8, !dbg !8487, !tbaa !1717
  %buf188 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !8488
  %192 = load i8*, i8** %buf188, align 8, !dbg !8488, !tbaa !3065
  %193 = load i64, i64* %written, align 8, !dbg !8489, !tbaa !2140
  %add.ptr189 = getelementptr i8, i8* %192, i64 %193, !dbg !8490
  %194 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8491, !tbaa !1458
  %buffer_size190 = getelementptr inbounds %struct.buffered, %struct.buffered* %194, i32 0, i32 17, !dbg !8492
  %195 = load i64, i64* %buffer_size190, align 8, !dbg !8492, !tbaa !2219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %191, i8* %add.ptr189, i64 %195, i32 1, i1 false), !dbg !8493
  %196 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8494, !tbaa !1458
  %raw_pos191 = getelementptr inbounds %struct.buffered, %struct.buffered* %196, i32 0, i32 11, !dbg !8495
  store i64 0, i64* %raw_pos191, align 8, !dbg !8496, !tbaa !3929
  br label %do.body.192, !dbg !8497

do.body.192:                                      ; preds = %if.then.186
  %197 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8498, !tbaa !1458
  %buffer_size193 = getelementptr inbounds %struct.buffered, %struct.buffered* %197, i32 0, i32 17, !dbg !8501
  %198 = load i64, i64* %buffer_size193, align 8, !dbg !8501, !tbaa !2219
  %199 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8502, !tbaa !1458
  %pos194 = getelementptr inbounds %struct.buffered, %struct.buffered* %199, i32 0, i32 10, !dbg !8503
  store i64 %198, i64* %pos194, align 8, !dbg !8504, !tbaa !2357
  %200 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8505, !tbaa !1458
  %readable195 = getelementptr inbounds %struct.buffered, %struct.buffered* %200, i32 0, i32 4, !dbg !8507
  %201 = load i32, i32* %readable195, align 4, !dbg !8507, !tbaa !2223
  %tobool196 = icmp ne i32 %201, 0, !dbg !8505
  br i1 %tobool196, label %land.lhs.true.197, label %if.end.207, !dbg !8508

land.lhs.true.197:                                ; preds = %do.body.192
  %202 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8509, !tbaa !1458
  %read_end198 = getelementptr inbounds %struct.buffered, %struct.buffered* %202, i32 0, i32 12, !dbg !8511
  %203 = load i64, i64* %read_end198, align 8, !dbg !8511, !tbaa !3164
  %cmp199 = icmp ne i64 %203, -1, !dbg !8512
  br i1 %cmp199, label %land.lhs.true.200, label %if.end.207, !dbg !8513

land.lhs.true.200:                                ; preds = %land.lhs.true.197
  %204 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8514, !tbaa !1458
  %read_end201 = getelementptr inbounds %struct.buffered, %struct.buffered* %204, i32 0, i32 12, !dbg !8516
  %205 = load i64, i64* %read_end201, align 8, !dbg !8516, !tbaa !3164
  %206 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8517, !tbaa !1458
  %pos202 = getelementptr inbounds %struct.buffered, %struct.buffered* %206, i32 0, i32 10, !dbg !8518
  %207 = load i64, i64* %pos202, align 8, !dbg !8518, !tbaa !2357
  %cmp203 = icmp slt i64 %205, %207, !dbg !8519
  br i1 %cmp203, label %if.then.204, label %if.end.207, !dbg !8520

if.then.204:                                      ; preds = %land.lhs.true.200
  %208 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8521, !tbaa !1458
  %pos205 = getelementptr inbounds %struct.buffered, %struct.buffered* %208, i32 0, i32 10, !dbg !8523
  %209 = load i64, i64* %pos205, align 8, !dbg !8523, !tbaa !2357
  %210 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8524, !tbaa !1458
  %read_end206 = getelementptr inbounds %struct.buffered, %struct.buffered* %210, i32 0, i32 12, !dbg !8525
  store i64 %209, i64* %read_end206, align 8, !dbg !8526, !tbaa !3164
  br label %if.end.207, !dbg !8524

if.end.207:                                       ; preds = %if.then.204, %land.lhs.true.200, %land.lhs.true.197, %do.body.192
  br label %do.cond.208, !dbg !8527

do.cond.208:                                      ; preds = %if.end.207
  br label %do.end.209, !dbg !8532

do.end.209:                                       ; preds = %do.cond.208
  %211 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8534, !tbaa !1458
  %buffer_size210 = getelementptr inbounds %struct.buffered, %struct.buffered* %211, i32 0, i32 17, !dbg !8535
  %212 = load i64, i64* %buffer_size210, align 8, !dbg !8535, !tbaa !2219
  %213 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8536, !tbaa !1458
  %write_end211 = getelementptr inbounds %struct.buffered, %struct.buffered* %213, i32 0, i32 14, !dbg !8537
  store i64 %212, i64* %write_end211, align 8, !dbg !8538, !tbaa !3922
  %214 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8539, !tbaa !1458
  %buffer_size212 = getelementptr inbounds %struct.buffered, %struct.buffered* %214, i32 0, i32 17, !dbg !8540
  %215 = load i64, i64* %buffer_size212, align 8, !dbg !8540, !tbaa !2219
  %216 = load i64, i64* %written, align 8, !dbg !8541, !tbaa !2140
  %add213 = add i64 %216, %215, !dbg !8541
  store i64 %add213, i64* %written, align 8, !dbg !8541, !tbaa !2140
  %217 = load i64, i64* %written, align 8, !dbg !8542, !tbaa !2140
  call void @_set_BlockingIOError(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i32 0, i32 0), i64 %217), !dbg !8543
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.223, !dbg !8544

if.end.214:                                       ; preds = %if.then.183
  call void @PyErr_Clear(), !dbg !8545
  store i32 11, i32* %cleanup.dest.slot
  br label %cleanup.223, !dbg !8546

if.end.215:                                       ; preds = %if.else.181
  br label %if.end.216

if.end.216:                                       ; preds = %if.end.215
  %218 = load i64, i64* %n, align 8, !dbg !8547, !tbaa !2140
  %219 = load i64, i64* %written, align 8, !dbg !8548, !tbaa !2140
  %add217 = add i64 %219, %218, !dbg !8548
  store i64 %add217, i64* %written, align 8, !dbg !8548, !tbaa !2140
  %220 = load i64, i64* %n, align 8, !dbg !8549, !tbaa !2140
  %221 = load i64, i64* %remaining, align 8, !dbg !8550, !tbaa !2140
  %sub218 = sub i64 %221, %220, !dbg !8550
  store i64 %sub218, i64* %remaining, align 8, !dbg !8550, !tbaa !2140
  %call219 = call i32 @PyErr_CheckSignals(), !dbg !8551
  %cmp220 = icmp slt i32 %call219, 0, !dbg !8553
  br i1 %cmp220, label %if.then.221, label %if.end.222, !dbg !8554

if.then.221:                                      ; preds = %if.end.216
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.223, !dbg !8555

if.end.222:                                       ; preds = %if.end.216
  store i32 0, i32* %cleanup.dest.slot, !dbg !8556
  br label %cleanup.223, !dbg !8556

cleanup.223:                                      ; preds = %if.end.222, %if.then.221, %if.end.214, %do.end.209, %if.then.180
  %222 = bitcast i64* %n to i8*, !dbg !8557
  call void @llvm.lifetime.end(i64 8, i8* %222) #1, !dbg !8557
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.12

NodeBlock.12:                                     ; preds = %cleanup.223
  %Pivot.13 = icmp slt i32 %cleanup.dest, 5
  br i1 %Pivot.13, label %LeafBlock.4, label %NodeBlock.10

NodeBlock.10:                                     ; preds = %NodeBlock.12
  %Pivot.11 = icmp slt i32 %cleanup.dest, 11
  br i1 %Pivot.11, label %LeafBlock.6, label %LeafBlock.8

LeafBlock.8:                                      ; preds = %NodeBlock.10
  %SwitchLeaf9 = icmp eq i32 %cleanup.dest, 11
  br i1 %SwitchLeaf9, label %while.end, label %NewDefault.3

LeafBlock.6:                                      ; preds = %NodeBlock.10
  %SwitchLeaf7 = icmp eq i32 %cleanup.dest, 5
  br i1 %SwitchLeaf7, label %error, label %NewDefault.3

LeafBlock.4:                                      ; preds = %NodeBlock.12
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf5, label %cleanup.cont, label %NewDefault.3

cleanup.cont:                                     ; preds = %LeafBlock.4
  br label %while.cond, !dbg !8452

while.end:                                        ; preds = %LeafBlock.8, %while.cond
  %223 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8558, !tbaa !1458
  %readable224 = getelementptr inbounds %struct.buffered, %struct.buffered* %223, i32 0, i32 4, !dbg !8560
  %224 = load i32, i32* %readable224, align 4, !dbg !8560, !tbaa !2223
  %tobool225 = icmp ne i32 %224, 0, !dbg !8558
  br i1 %tobool225, label %if.then.226, label %if.end.227, !dbg !8561

if.then.226:                                      ; preds = %while.end
  %225 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8562, !tbaa !1458
  call void @_bufferedreader_reset_buf(%struct.buffered* %225), !dbg !8563
  br label %if.end.227, !dbg !8563

if.end.227:                                       ; preds = %if.then.226, %while.end
  %226 = load i64, i64* %remaining, align 8, !dbg !8564, !tbaa !2140
  %cmp228 = icmp sgt i64 %226, 0, !dbg !8566
  br i1 %cmp228, label %if.then.229, label %if.end.234, !dbg !8567

if.then.229:                                      ; preds = %if.end.227
  %227 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8568, !tbaa !1458
  %buffer230 = getelementptr inbounds %struct.buffered, %struct.buffered* %227, i32 0, i32 9, !dbg !8570
  %228 = load i8*, i8** %buffer230, align 8, !dbg !8570, !tbaa !1717
  %buf231 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buf, i32 0, i32 0, !dbg !8571
  %229 = load i8*, i8** %buf231, align 8, !dbg !8571, !tbaa !3065
  %230 = load i64, i64* %written, align 8, !dbg !8572, !tbaa !2140
  %add.ptr232 = getelementptr i8, i8* %229, i64 %230, !dbg !8573
  %231 = load i64, i64* %remaining, align 8, !dbg !8574, !tbaa !2140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %228, i8* %add.ptr232, i64 %231, i32 1, i1 false), !dbg !8575
  %232 = load i64, i64* %remaining, align 8, !dbg !8576, !tbaa !2140
  %233 = load i64, i64* %written, align 8, !dbg !8577, !tbaa !2140
  %add233 = add i64 %233, %232, !dbg !8577
  store i64 %add233, i64* %written, align 8, !dbg !8577, !tbaa !2140
  br label %if.end.234, !dbg !8578

if.end.234:                                       ; preds = %if.then.229, %if.end.227
  %234 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8579, !tbaa !1458
  %write_pos235 = getelementptr inbounds %struct.buffered, %struct.buffered* %234, i32 0, i32 13, !dbg !8580
  store i64 0, i64* %write_pos235, align 8, !dbg !8581, !tbaa !4037
  %235 = load i64, i64* %remaining, align 8, !dbg !8582, !tbaa !2140
  %236 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8583, !tbaa !1458
  %write_end236 = getelementptr inbounds %struct.buffered, %struct.buffered* %236, i32 0, i32 14, !dbg !8584
  store i64 %235, i64* %write_end236, align 8, !dbg !8585, !tbaa !3922
  br label %do.body.237, !dbg !8586

do.body.237:                                      ; preds = %if.end.234
  %237 = load i64, i64* %remaining, align 8, !dbg !8587, !tbaa !2140
  %238 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8590, !tbaa !1458
  %pos238 = getelementptr inbounds %struct.buffered, %struct.buffered* %238, i32 0, i32 10, !dbg !8591
  store i64 %237, i64* %pos238, align 8, !dbg !8592, !tbaa !2357
  %239 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8593, !tbaa !1458
  %readable239 = getelementptr inbounds %struct.buffered, %struct.buffered* %239, i32 0, i32 4, !dbg !8595
  %240 = load i32, i32* %readable239, align 4, !dbg !8595, !tbaa !2223
  %tobool240 = icmp ne i32 %240, 0, !dbg !8593
  br i1 %tobool240, label %land.lhs.true.241, label %if.end.251, !dbg !8596

land.lhs.true.241:                                ; preds = %do.body.237
  %241 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8597, !tbaa !1458
  %read_end242 = getelementptr inbounds %struct.buffered, %struct.buffered* %241, i32 0, i32 12, !dbg !8599
  %242 = load i64, i64* %read_end242, align 8, !dbg !8599, !tbaa !3164
  %cmp243 = icmp ne i64 %242, -1, !dbg !8600
  br i1 %cmp243, label %land.lhs.true.244, label %if.end.251, !dbg !8601

land.lhs.true.244:                                ; preds = %land.lhs.true.241
  %243 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8602, !tbaa !1458
  %read_end245 = getelementptr inbounds %struct.buffered, %struct.buffered* %243, i32 0, i32 12, !dbg !8604
  %244 = load i64, i64* %read_end245, align 8, !dbg !8604, !tbaa !3164
  %245 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8605, !tbaa !1458
  %pos246 = getelementptr inbounds %struct.buffered, %struct.buffered* %245, i32 0, i32 10, !dbg !8606
  %246 = load i64, i64* %pos246, align 8, !dbg !8606, !tbaa !2357
  %cmp247 = icmp slt i64 %244, %246, !dbg !8607
  br i1 %cmp247, label %if.then.248, label %if.end.251, !dbg !8608

if.then.248:                                      ; preds = %land.lhs.true.244
  %247 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8609, !tbaa !1458
  %pos249 = getelementptr inbounds %struct.buffered, %struct.buffered* %247, i32 0, i32 10, !dbg !8611
  %248 = load i64, i64* %pos249, align 8, !dbg !8611, !tbaa !2357
  %249 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8612, !tbaa !1458
  %read_end250 = getelementptr inbounds %struct.buffered, %struct.buffered* %249, i32 0, i32 12, !dbg !8613
  store i64 %248, i64* %read_end250, align 8, !dbg !8614, !tbaa !3164
  br label %if.end.251, !dbg !8612

if.end.251:                                       ; preds = %if.then.248, %land.lhs.true.244, %land.lhs.true.241, %do.body.237
  br label %do.cond.252, !dbg !8615

do.cond.252:                                      ; preds = %if.end.251
  br label %do.end.253, !dbg !8620

do.end.253:                                       ; preds = %do.cond.252
  %250 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8622, !tbaa !1458
  %raw_pos254 = getelementptr inbounds %struct.buffered, %struct.buffered* %250, i32 0, i32 11, !dbg !8623
  store i64 0, i64* %raw_pos254, align 8, !dbg !8624, !tbaa !3929
  br label %end, !dbg !8622

end:                                              ; preds = %LeafBlock, %do.end.253, %if.end.70
  %251 = load i64, i64* %written, align 8, !dbg !8625, !tbaa !2140
  %call256 = call %struct._object* @PyLong_FromSsize_t(i64 %251), !dbg !8626
  store %struct._object* %call256, %struct._object** %res, align 8, !dbg !8627, !tbaa !1458
  br label %error, !dbg !8628

error:                                            ; preds = %LeafBlock.6, %LeafBlock.1, %end, %if.then.166
  br label %do.body.257, !dbg !8629

do.body.257:                                      ; preds = %error
  %252 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8630, !tbaa !1458
  %owner258 = getelementptr inbounds %struct.buffered, %struct.buffered* %252, i32 0, i32 16, !dbg !8633
  store volatile i64 0, i64* %owner258, align 8, !dbg !8634, !tbaa !3261
  %253 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8635, !tbaa !1458
  %lock259 = getelementptr inbounds %struct.buffered, %struct.buffered* %253, i32 0, i32 15, !dbg !8636
  %254 = load i8*, i8** %lock259, align 8, !dbg !8636, !tbaa !1730
  call void @PyThread_release_lock(i8* %254), !dbg !8637
  br label %do.cond.260, !dbg !8638

do.cond.260:                                      ; preds = %do.body.257
  br label %do.end.261, !dbg !8639

do.end.261:                                       ; preds = %do.cond.260
  call void @PyBuffer_Release(%struct.bufferinfo* %buf), !dbg !8641
  %255 = load %struct._object*, %struct._object** %res, align 8, !dbg !8642, !tbaa !1458
  store %struct._object* %255, %struct._object** %retval, !dbg !8643
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.262, !dbg !8643

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.262

NewDefault.3:                                     ; preds = %LeafBlock.8, %LeafBlock.6, %LeafBlock.4
  br label %cleanup.262

cleanup.262:                                      ; preds = %NewDefault.3, %NewDefault, %do.end.261, %if.then.20, %if.then.11, %if.then.4, %if.end
  %256 = bitcast i64* %offset to i8*, !dbg !8644
  call void @llvm.lifetime.end(i64 8, i8* %256) #1, !dbg !8644
  %257 = bitcast i64* %remaining to i8*, !dbg !8644
  call void @llvm.lifetime.end(i64 8, i8* %257) #1, !dbg !8644
  %258 = bitcast i64* %avail to i8*, !dbg !8644
  call void @llvm.lifetime.end(i64 8, i8* %258) #1, !dbg !8644
  %259 = bitcast i64* %written to i8*, !dbg !8644
  call void @llvm.lifetime.end(i64 8, i8* %259) #1, !dbg !8644
  %260 = bitcast %struct.bufferinfo* %buf to i8*, !dbg !8644
  call void @llvm.lifetime.end(i64 80, i8* %260) #1, !dbg !8644
  %261 = bitcast %struct._object** %res to i8*, !dbg !8644
  call void @llvm.lifetime.end(i64 8, i8* %261) #1, !dbg !8644
  %262 = load %struct._object*, %struct._object** %retval, !dbg !8644
  ret %struct._object* %262, !dbg !8644
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @buffered_flush(%struct.buffered* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %args.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1165, metadata !1450), !dbg !8645
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1166, metadata !1450), !dbg !8646
  %0 = bitcast %struct._object** %res to i8*, !dbg !8647
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8647
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1167, metadata !1450), !dbg !8648
  %1 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8649, !tbaa !1458
  %ok = getelementptr inbounds %struct.buffered, %struct.buffered* %1, i32 0, i32 2, !dbg !8651
  %2 = load i32, i32* %ok, align 4, !dbg !8651, !tbaa !1660
  %cmp = icmp sle i32 %2, 0, !dbg !8652
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !8653

if.then:                                          ; preds = %entry
  %3 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8654, !tbaa !1458
  %detached = getelementptr inbounds %struct.buffered, %struct.buffered* %3, i32 0, i32 3, !dbg !8658
  %4 = load i32, i32* %detached, align 4, !dbg !8658, !tbaa !2019
  %tobool = icmp ne i32 %4, 0, !dbg !8659
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !8660

if.then.1:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8661, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0)), !dbg !8664
  br label %if.end, !dbg !8665

if.else:                                          ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8666, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !8669
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !8670
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8672

if.end.2:                                         ; preds = %entry
  %7 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8673, !tbaa !1458
  %fast_closed_checks = getelementptr inbounds %struct.buffered, %struct.buffered* %7, i32 0, i32 7, !dbg !8675
  %8 = load i32, i32* %fast_closed_checks, align 4, !dbg !8675, !tbaa !2249
  %tobool3 = icmp ne i32 %8, 0, !dbg !8673
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !8676

cond.true:                                        ; preds = %if.end.2
  %9 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8677, !tbaa !1458
  %raw = getelementptr inbounds %struct.buffered, %struct.buffered* %9, i32 0, i32 1, !dbg !8679
  %10 = load %struct._object*, %struct._object** %raw, align 8, !dbg !8679, !tbaa !1676
  %call = call i32 @_PyFileIO_closed(%struct._object* %10), !dbg !8680
  %tobool4 = icmp ne i32 %call, 0, !dbg !8680
  br i1 %tobool4, label %if.then.7, label %if.end.8, !dbg !8673

cond.false:                                       ; preds = %if.end.2
  %11 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8681, !tbaa !1458
  %call5 = call i32 @buffered_closed(%struct.buffered* %11), !dbg !8683
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8683
  br i1 %tobool6, label %if.then.7, label %if.end.8, !dbg !8676

if.then.7:                                        ; preds = %cond.false, %cond.true
  %12 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8684, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.66, i32 0, i32 0)), !dbg !8688
  store %struct._object* null, %struct._object** %retval, !dbg !8689
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8689

if.end.8:                                         ; preds = %cond.false, %cond.true
  %13 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8690, !tbaa !1458
  %lock = getelementptr inbounds %struct.buffered, %struct.buffered* %13, i32 0, i32 15, !dbg !8692
  %14 = load i8*, i8** %lock, align 8, !dbg !8692, !tbaa !1730
  %call9 = call i32 @PyThread_acquire_lock(i8* %14, i32 0), !dbg !8693
  %tobool10 = icmp ne i32 %call9, 0, !dbg !8693
  br i1 %tobool10, label %cond.true.11, label %cond.false.12, !dbg !8694

cond.true.11:                                     ; preds = %if.end.8
  br i1 true, label %land.lhs.true, label %if.then.16, !dbg !8695

cond.false.12:                                    ; preds = %if.end.8
  %15 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8697, !tbaa !1458
  %call13 = call i32 @_enter_buffered_busy(%struct.buffered* %15), !dbg !8699
  %tobool14 = icmp ne i32 %call13, 0, !dbg !8699
  br i1 %tobool14, label %land.lhs.true, label %if.then.16, !dbg !8694

land.lhs.true:                                    ; preds = %cond.false.12, %cond.true.11
  %call15 = call i64 @PyThread_get_thread_ident(), !dbg !8700
  %16 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8703, !tbaa !1458
  %owner = getelementptr inbounds %struct.buffered, %struct.buffered* %16, i32 0, i32 16, !dbg !8704
  store volatile i64 %call15, i64* %owner, align 8, !dbg !8705, !tbaa !3261
  br i1 true, label %if.end.17, label %if.then.16, !dbg !8706

if.then.16:                                       ; preds = %land.lhs.true, %cond.false.12, %cond.true.11
  store %struct._object* null, %struct._object** %retval, !dbg !8707
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8707

if.end.17:                                        ; preds = %land.lhs.true
  %17 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8708, !tbaa !1458
  %call18 = call %struct._object* @buffered_flush_and_rewind_unlocked(%struct.buffered* %17), !dbg !8709
  store %struct._object* %call18, %struct._object** %res, align 8, !dbg !8710, !tbaa !1458
  br label %do.body, !dbg !8711

do.body:                                          ; preds = %if.end.17
  %18 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8712, !tbaa !1458
  %owner19 = getelementptr inbounds %struct.buffered, %struct.buffered* %18, i32 0, i32 16, !dbg !8715
  store volatile i64 0, i64* %owner19, align 8, !dbg !8716, !tbaa !3261
  %19 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8717, !tbaa !1458
  %lock20 = getelementptr inbounds %struct.buffered, %struct.buffered* %19, i32 0, i32 15, !dbg !8718
  %20 = load i8*, i8** %lock20, align 8, !dbg !8718, !tbaa !1730
  call void @PyThread_release_lock(i8* %20), !dbg !8719
  br label %do.cond, !dbg !8720

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !8721

do.end:                                           ; preds = %do.cond
  %21 = load %struct._object*, %struct._object** %res, align 8, !dbg !8723, !tbaa !1458
  store %struct._object* %21, %struct._object** %retval, !dbg !8724
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8724

cleanup:                                          ; preds = %do.end, %if.then.16, %if.then.7, %if.end
  %22 = bitcast %struct._object** %res to i8*, !dbg !8725
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !8725
  %23 = load %struct._object*, %struct._object** %retval, !dbg !8725
  ret %struct._object* %23, !dbg !8725
}

; Function Attrs: nounwind uwtable
define internal i64* @_buffered_check_blocking_error() #0 {
entry:
  %retval = alloca i64*, align 8
  %t = alloca %struct._object*, align 8
  %v = alloca %struct._object*, align 8
  %tb = alloca %struct._object*, align 8
  %err = alloca %struct.PyOSErrorObject*, align 8
  %cleanup.dest.slot = alloca i32
  %0 = bitcast %struct._object** %t to i8*, !dbg !8726
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8726
  call void @llvm.dbg.declare(metadata %struct._object** %t, metadata !1159, metadata !1450), !dbg !8727
  %1 = bitcast %struct._object** %v to i8*, !dbg !8726
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8726
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !1160, metadata !1450), !dbg !8728
  %2 = bitcast %struct._object** %tb to i8*, !dbg !8726
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8726
  call void @llvm.dbg.declare(metadata %struct._object** %tb, metadata !1161, metadata !1450), !dbg !8729
  %3 = bitcast %struct.PyOSErrorObject** %err to i8*, !dbg !8730
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8730
  call void @llvm.dbg.declare(metadata %struct.PyOSErrorObject** %err, metadata !1162, metadata !1450), !dbg !8731
  call void @PyErr_Fetch(%struct._object** %t, %struct._object** %v, %struct._object** %tb), !dbg !8732
  %4 = load %struct._object*, %struct._object** %v, align 8, !dbg !8733, !tbaa !1458
  %cmp = icmp eq %struct._object* %4, null, !dbg !8735
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8736

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct._object*, %struct._object** %v, align 8, !dbg !8737, !tbaa !1458
  %6 = load %struct._object*, %struct._object** @PyExc_BlockingIOError, align 8, !dbg !8739, !tbaa !1458
  %call = call i32 @PyErr_GivenExceptionMatches(%struct._object* %5, %struct._object* %6), !dbg !8740
  %tobool = icmp ne i32 %call, 0, !dbg !8740
  br i1 %tobool, label %if.end, label %if.then, !dbg !8741

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct._object*, %struct._object** %t, align 8, !dbg !8742, !tbaa !1458
  %8 = load %struct._object*, %struct._object** %v, align 8, !dbg !8744, !tbaa !1458
  %9 = load %struct._object*, %struct._object** %tb, align 8, !dbg !8745, !tbaa !1458
  call void @PyErr_Restore(%struct._object* %7, %struct._object* %8, %struct._object* %9), !dbg !8746
  store i64* null, i64** %retval, !dbg !8747
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8747

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct._object*, %struct._object** %v, align 8, !dbg !8748, !tbaa !1458
  %11 = bitcast %struct._object* %10 to %struct.PyOSErrorObject*, !dbg !8749
  store %struct.PyOSErrorObject* %11, %struct.PyOSErrorObject** %err, align 8, !dbg !8750, !tbaa !1458
  %12 = load %struct._object*, %struct._object** %t, align 8, !dbg !8751, !tbaa !1458
  %13 = load %struct._object*, %struct._object** %v, align 8, !dbg !8752, !tbaa !1458
  %14 = load %struct._object*, %struct._object** %tb, align 8, !dbg !8753, !tbaa !1458
  call void @PyErr_Restore(%struct._object* %12, %struct._object* %13, %struct._object* %14), !dbg !8754
  %15 = load %struct.PyOSErrorObject*, %struct.PyOSErrorObject** %err, align 8, !dbg !8755, !tbaa !1458
  %written = getelementptr inbounds %struct.PyOSErrorObject, %struct.PyOSErrorObject* %15, i32 0, i32 11, !dbg !8756
  store i64* %written, i64** %retval, !dbg !8757
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8757

cleanup:                                          ; preds = %if.end, %if.then
  %16 = bitcast %struct.PyOSErrorObject** %err to i8*, !dbg !8758
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !8758
  %17 = bitcast %struct._object** %tb to i8*, !dbg !8758
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !8758
  %18 = bitcast %struct._object** %v to i8*, !dbg !8758
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !8758
  %19 = bitcast %struct._object** %t to i8*, !dbg !8758
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !8758
  %20 = load i64*, i64** %retval, !dbg !8758
  ret i64* %20, !dbg !8758
}

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare i32 @PyErr_GivenExceptionMatches(%struct._object*, %struct._object*) #3

declare %struct._object* @_PyIOBase_check_writable(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferedrwpair_read(%struct.rwpair* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.rwpair*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1254, metadata !1450), !dbg !8759
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1255, metadata !1450), !dbg !8760
  %0 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8761, !tbaa !1458
  %reader = getelementptr inbounds %struct.rwpair, %struct.rwpair* %0, i32 0, i32 1, !dbg !8762
  %1 = load %struct.buffered*, %struct.buffered** %reader, align 8, !dbg !8762, !tbaa !2430
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8763, !tbaa !1458
  %call = call %struct._object* @_forward_call(%struct.buffered* %1, %struct._Py_Identifier* @PyId_read, %struct._object* %2), !dbg !8764
  ret %struct._object* %call, !dbg !8765
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferedrwpair_peek(%struct.rwpair* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.rwpair*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1277, metadata !1450), !dbg !8766
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1278, metadata !1450), !dbg !8767
  %0 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8768, !tbaa !1458
  %reader = getelementptr inbounds %struct.rwpair, %struct.rwpair* %0, i32 0, i32 1, !dbg !8769
  %1 = load %struct.buffered*, %struct.buffered** %reader, align 8, !dbg !8769, !tbaa !2430
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8770, !tbaa !1458
  %call = call %struct._object* @_forward_call(%struct.buffered* %1, %struct._Py_Identifier* @PyId_peek, %struct._object* %2), !dbg !8771
  ret %struct._object* %call, !dbg !8772
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferedrwpair_read1(%struct.rwpair* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.rwpair*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1281, metadata !1450), !dbg !8773
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1282, metadata !1450), !dbg !8774
  %0 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8775, !tbaa !1458
  %reader = getelementptr inbounds %struct.rwpair, %struct.rwpair* %0, i32 0, i32 1, !dbg !8776
  %1 = load %struct.buffered*, %struct.buffered** %reader, align 8, !dbg !8776, !tbaa !2430
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8777, !tbaa !1458
  %call = call %struct._object* @_forward_call(%struct.buffered* %1, %struct._Py_Identifier* @PyId_read1, %struct._object* %2), !dbg !8778
  ret %struct._object* %call, !dbg !8779
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferedrwpair_readinto(%struct.rwpair* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.rwpair*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1285, metadata !1450), !dbg !8780
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1286, metadata !1450), !dbg !8781
  %0 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8782, !tbaa !1458
  %reader = getelementptr inbounds %struct.rwpair, %struct.rwpair* %0, i32 0, i32 1, !dbg !8783
  %1 = load %struct.buffered*, %struct.buffered** %reader, align 8, !dbg !8783, !tbaa !2430
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8784, !tbaa !1458
  %call = call %struct._object* @_forward_call(%struct.buffered* %1, %struct._Py_Identifier* @PyId_readinto, %struct._object* %2), !dbg !8785
  ret %struct._object* %call, !dbg !8786
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferedrwpair_write(%struct.rwpair* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.rwpair*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1289, metadata !1450), !dbg !8787
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1290, metadata !1450), !dbg !8788
  %0 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8789, !tbaa !1458
  %writer = getelementptr inbounds %struct.rwpair, %struct.rwpair* %0, i32 0, i32 2, !dbg !8790
  %1 = load %struct.buffered*, %struct.buffered** %writer, align 8, !dbg !8790, !tbaa !2476
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8791, !tbaa !1458
  %call = call %struct._object* @_forward_call(%struct.buffered* %1, %struct._Py_Identifier* @PyId_write, %struct._object* %2), !dbg !8792
  ret %struct._object* %call, !dbg !8793
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferedrwpair_flush(%struct.rwpair* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.rwpair*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1293, metadata !1450), !dbg !8794
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1294, metadata !1450), !dbg !8795
  %0 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8796, !tbaa !1458
  %writer = getelementptr inbounds %struct.rwpair, %struct.rwpair* %0, i32 0, i32 2, !dbg !8797
  %1 = load %struct.buffered*, %struct.buffered** %writer, align 8, !dbg !8797, !tbaa !2476
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8798, !tbaa !1458
  %call = call %struct._object* @_forward_call(%struct.buffered* %1, %struct._Py_Identifier* @PyId_flush, %struct._object* %2), !dbg !8799
  ret %struct._object* %call, !dbg !8800
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferedrwpair_readable(%struct.rwpair* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.rwpair*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1297, metadata !1450), !dbg !8801
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1298, metadata !1450), !dbg !8802
  %0 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8803, !tbaa !1458
  %reader = getelementptr inbounds %struct.rwpair, %struct.rwpair* %0, i32 0, i32 1, !dbg !8804
  %1 = load %struct.buffered*, %struct.buffered** %reader, align 8, !dbg !8804, !tbaa !2430
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8805, !tbaa !1458
  %call = call %struct._object* @_forward_call(%struct.buffered* %1, %struct._Py_Identifier* @PyId_readable, %struct._object* %2), !dbg !8806
  ret %struct._object* %call, !dbg !8807
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferedrwpair_writable(%struct.rwpair* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.rwpair*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1301, metadata !1450), !dbg !8808
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1302, metadata !1450), !dbg !8809
  %0 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8810, !tbaa !1458
  %writer = getelementptr inbounds %struct.rwpair, %struct.rwpair* %0, i32 0, i32 2, !dbg !8811
  %1 = load %struct.buffered*, %struct.buffered** %writer, align 8, !dbg !8811, !tbaa !2476
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8812, !tbaa !1458
  %call = call %struct._object* @_forward_call(%struct.buffered* %1, %struct._Py_Identifier* @PyId_writable, %struct._object* %2), !dbg !8813
  ret %struct._object* %call, !dbg !8814
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferedrwpair_close(%struct.rwpair* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.rwpair*, align 8
  %args.addr = alloca %struct._object*, align 8
  %ret = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1305, metadata !1450), !dbg !8815
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1306, metadata !1450), !dbg !8816
  %0 = bitcast %struct._object** %ret to i8*, !dbg !8817
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8817
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !1307, metadata !1450), !dbg !8818
  %1 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8819, !tbaa !1458
  %writer = getelementptr inbounds %struct.rwpair, %struct.rwpair* %1, i32 0, i32 2, !dbg !8820
  %2 = load %struct.buffered*, %struct.buffered** %writer, align 8, !dbg !8820, !tbaa !2476
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8821, !tbaa !1458
  %call = call %struct._object* @_forward_call(%struct.buffered* %2, %struct._Py_Identifier* @PyId_close, %struct._object* %3), !dbg !8822
  store %struct._object* %call, %struct._object** %ret, align 8, !dbg !8818, !tbaa !1458
  %4 = load %struct._object*, %struct._object** %ret, align 8, !dbg !8823, !tbaa !1458
  %cmp = icmp eq %struct._object* %4, null, !dbg !8825
  br i1 %cmp, label %if.then, label %if.end, !dbg !8826

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8827
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8827

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !8828

do.body:                                          ; preds = %if.end
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8829
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !8829
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1308, metadata !1450), !dbg !8831
  %6 = load %struct._object*, %struct._object** %ret, align 8, !dbg !8832, !tbaa !1458
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !8831, !tbaa !1458
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8833, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !8835
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !8836, !tbaa !1501
  %dec = add i64 %8, -1, !dbg !8836
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8836, !tbaa !1501
  %cmp1 = icmp ne i64 %dec, 0, !dbg !8837
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !8838

if.then.2:                                        ; preds = %do.body
  br label %if.end.3, !dbg !8839

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8841, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !8843
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8843, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !8844
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8844, !tbaa !1511
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8845, !tbaa !1458
  call void %11(%struct._object* %12), !dbg !8846
  br label %if.end.3

if.end.3:                                         ; preds = %if.else, %if.then.2
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8847
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !8847
  br label %do.cond, !dbg !8849

do.cond:                                          ; preds = %if.end.3
  br label %do.end, !dbg !8850

do.end:                                           ; preds = %do.cond
  %14 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8852, !tbaa !1458
  %reader = getelementptr inbounds %struct.rwpair, %struct.rwpair* %14, i32 0, i32 1, !dbg !8853
  %15 = load %struct.buffered*, %struct.buffered** %reader, align 8, !dbg !8853, !tbaa !2430
  %16 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8854, !tbaa !1458
  %call4 = call %struct._object* @_forward_call(%struct.buffered* %15, %struct._Py_Identifier* @PyId_close, %struct._object* %16), !dbg !8855
  store %struct._object* %call4, %struct._object** %retval, !dbg !8856
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8856

cleanup:                                          ; preds = %do.end, %if.then
  %17 = bitcast %struct._object** %ret to i8*, !dbg !8857
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !8857
  %18 = load %struct._object*, %struct._object** %retval, !dbg !8857
  ret %struct._object* %18, !dbg !8857
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferedrwpair_isatty(%struct.rwpair* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.rwpair*, align 8
  %args.addr = alloca %struct._object*, align 8
  %ret = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1312, metadata !1450), !dbg !8858
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1313, metadata !1450), !dbg !8859
  %0 = bitcast %struct._object** %ret to i8*, !dbg !8860
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8860
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !1314, metadata !1450), !dbg !8861
  %1 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8862, !tbaa !1458
  %writer = getelementptr inbounds %struct.rwpair, %struct.rwpair* %1, i32 0, i32 2, !dbg !8863
  %2 = load %struct.buffered*, %struct.buffered** %writer, align 8, !dbg !8863, !tbaa !2476
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8864, !tbaa !1458
  %call = call %struct._object* @_forward_call(%struct.buffered* %2, %struct._Py_Identifier* @PyId_isatty, %struct._object* %3), !dbg !8865
  store %struct._object* %call, %struct._object** %ret, align 8, !dbg !8861, !tbaa !1458
  %4 = load %struct._object*, %struct._object** %ret, align 8, !dbg !8866, !tbaa !1458
  %cmp = icmp ne %struct._object* %4, getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), !dbg !8868
  br i1 %cmp, label %if.then, label %if.end, !dbg !8869

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** %ret, align 8, !dbg !8870, !tbaa !1458
  store %struct._object* %5, %struct._object** %retval, !dbg !8872
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8872

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !8873

do.body:                                          ; preds = %if.end
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8874
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !8874
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1315, metadata !1450), !dbg !8876
  %7 = load %struct._object*, %struct._object** %ret, align 8, !dbg !8877, !tbaa !1458
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !8876, !tbaa !1458
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8878, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !8880
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !8881, !tbaa !1501
  %dec = add i64 %9, -1, !dbg !8881
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8881, !tbaa !1501
  %cmp1 = icmp ne i64 %dec, 0, !dbg !8882
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !8883

if.then.2:                                        ; preds = %do.body
  br label %if.end.3, !dbg !8884

if.else:                                          ; preds = %do.body
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8886, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !8888
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8888, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !8889
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8889, !tbaa !1511
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8890, !tbaa !1458
  call void %12(%struct._object* %13), !dbg !8891
  br label %if.end.3

if.end.3:                                         ; preds = %if.else, %if.then.2
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8892
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !8892
  br label %do.cond, !dbg !8894

do.cond:                                          ; preds = %if.end.3
  br label %do.end, !dbg !8895

do.end:                                           ; preds = %do.cond
  %15 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8897, !tbaa !1458
  %reader = getelementptr inbounds %struct.rwpair, %struct.rwpair* %15, i32 0, i32 1, !dbg !8898
  %16 = load %struct.buffered*, %struct.buffered** %reader, align 8, !dbg !8898, !tbaa !2430
  %17 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8899, !tbaa !1458
  %call4 = call %struct._object* @_forward_call(%struct.buffered* %16, %struct._Py_Identifier* @PyId_isatty, %struct._object* %17), !dbg !8900
  store %struct._object* %call4, %struct._object** %retval, !dbg !8901
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8901

cleanup:                                          ; preds = %do.end, %if.then
  %18 = bitcast %struct._object** %ret to i8*, !dbg !8902
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !8902
  %19 = load %struct._object*, %struct._object** %retval, !dbg !8902
  ret %struct._object* %19, !dbg !8902
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_forward_call(%struct.buffered* %self, %struct._Py_Identifier* %name, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.buffered*, align 8
  %name.addr = alloca %struct._Py_Identifier*, align 8
  %args.addr = alloca %struct._object*, align 8
  %func = alloca %struct._object*, align 8
  %ret = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.buffered* %self, %struct.buffered** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.buffered** %self.addr, metadata !1268, metadata !1450), !dbg !8903
  store %struct._Py_Identifier* %name, %struct._Py_Identifier** %name.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._Py_Identifier** %name.addr, metadata !1269, metadata !1450), !dbg !8904
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1270, metadata !1450), !dbg !8905
  %0 = bitcast %struct._object** %func to i8*, !dbg !8906
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8906
  call void @llvm.dbg.declare(metadata %struct._object** %func, metadata !1271, metadata !1450), !dbg !8907
  %1 = bitcast %struct._object** %ret to i8*, !dbg !8906
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8906
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !1272, metadata !1450), !dbg !8908
  %2 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8909, !tbaa !1458
  %cmp = icmp eq %struct.buffered* %2, null, !dbg !8911
  br i1 %cmp, label %if.then, label %if.end, !dbg !8912

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8913, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i32 0, i32 0)), !dbg !8915
  store %struct._object* null, %struct._object** %retval, !dbg !8916
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8916

if.end:                                           ; preds = %entry
  %4 = load %struct.buffered*, %struct.buffered** %self.addr, align 8, !dbg !8917, !tbaa !1458
  %5 = bitcast %struct.buffered* %4 to %struct._object*, !dbg !8918
  %6 = load %struct._Py_Identifier*, %struct._Py_Identifier** %name.addr, align 8, !dbg !8919, !tbaa !1458
  %call = call %struct._object* @_PyObject_GetAttrId(%struct._object* %5, %struct._Py_Identifier* %6), !dbg !8920
  store %struct._object* %call, %struct._object** %func, align 8, !dbg !8921, !tbaa !1458
  %7 = load %struct._object*, %struct._object** %func, align 8, !dbg !8922, !tbaa !1458
  %cmp1 = icmp eq %struct._object* %7, null, !dbg !8924
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !8925

if.then.2:                                        ; preds = %if.end
  %8 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !8926, !tbaa !1458
  %9 = load %struct._Py_Identifier*, %struct._Py_Identifier** %name.addr, align 8, !dbg !8928, !tbaa !1458
  %string = getelementptr inbounds %struct._Py_Identifier, %struct._Py_Identifier* %9, i32 0, i32 1, !dbg !8929
  %10 = load i8*, i8** %string, align 8, !dbg !8929, !tbaa !8930
  call void @PyErr_SetString(%struct._object* %8, i8* %10), !dbg !8932
  store %struct._object* null, %struct._object** %retval, !dbg !8933
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8933

if.end.3:                                         ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %func, align 8, !dbg !8934, !tbaa !1458
  %12 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8935, !tbaa !1458
  %call4 = call %struct._object* @PyObject_CallObject(%struct._object* %11, %struct._object* %12), !dbg !8936
  store %struct._object* %call4, %struct._object** %ret, align 8, !dbg !8937, !tbaa !1458
  br label %do.body, !dbg !8938

do.body:                                          ; preds = %if.end.3
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8939
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !8939
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1273, metadata !1450), !dbg !8941
  %14 = load %struct._object*, %struct._object** %func, align 8, !dbg !8942, !tbaa !1458
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !8941, !tbaa !1458
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8943, !tbaa !1458
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !8945
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !8946, !tbaa !1501
  %dec = add i64 %16, -1, !dbg !8946
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8946, !tbaa !1501
  %cmp5 = icmp ne i64 %dec, 0, !dbg !8947
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !8948

if.then.6:                                        ; preds = %do.body
  br label %if.end.7, !dbg !8949

if.else:                                          ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8951, !tbaa !1458
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !8953
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8953, !tbaa !1509
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !8954
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8954, !tbaa !1511
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8955, !tbaa !1458
  call void %19(%struct._object* %20), !dbg !8956
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8957
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !8957
  br label %do.cond, !dbg !8959

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !8960

do.end:                                           ; preds = %do.cond
  %22 = load %struct._object*, %struct._object** %ret, align 8, !dbg !8962, !tbaa !1458
  store %struct._object* %22, %struct._object** %retval, !dbg !8963
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8963

cleanup:                                          ; preds = %do.end, %if.then.2, %if.then
  %23 = bitcast %struct._object** %ret to i8*, !dbg !8964
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !8964
  %24 = bitcast %struct._object** %func to i8*, !dbg !8964
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !8964
  %25 = load %struct._object*, %struct._object** %retval, !dbg !8964
  ret %struct._object* %25, !dbg !8964
}

declare %struct._object* @PyObject_CallObject(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @bufferedrwpair_closed_get(%struct.rwpair* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.rwpair*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.rwpair* %self, %struct.rwpair** %self.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata %struct.rwpair** %self.addr, metadata !1321, metadata !1450), !dbg !8965
  store i8* %context, i8** %context.addr, align 8, !tbaa !1458
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1322, metadata !1450), !dbg !8966
  %0 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8967, !tbaa !1458
  %writer = getelementptr inbounds %struct.rwpair, %struct.rwpair* %0, i32 0, i32 2, !dbg !8969
  %1 = load %struct.buffered*, %struct.buffered** %writer, align 8, !dbg !8969, !tbaa !2476
  %cmp = icmp eq %struct.buffered* %1, null, !dbg !8970
  br i1 %cmp, label %if.then, label %if.end, !dbg !8971

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !8972, !tbaa !1458
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.68, i32 0, i32 0)), !dbg !8974
  store %struct._object* null, %struct._object** %retval, !dbg !8975
  br label %return, !dbg !8975

if.end:                                           ; preds = %entry
  %3 = load %struct.rwpair*, %struct.rwpair** %self.addr, align 8, !dbg !8976, !tbaa !1458
  %writer1 = getelementptr inbounds %struct.rwpair, %struct.rwpair* %3, i32 0, i32 2, !dbg !8977
  %4 = load %struct.buffered*, %struct.buffered** %writer1, align 8, !dbg !8977, !tbaa !2476
  %5 = bitcast %struct.buffered* %4 to %struct._object*, !dbg !8978
  %6 = load %struct._object*, %struct._object** @_PyIO_str_closed, align 8, !dbg !8979, !tbaa !1458
  %call = call %struct._object* @PyObject_GetAttr(%struct._object* %5, %struct._object* %6), !dbg !8980
  store %struct._object* %call, %struct._object** %retval, !dbg !8981
  br label %return, !dbg !8981

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct._object*, %struct._object** %retval, !dbg !8982
  ret %struct._object* %7, !dbg !8982
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1446, !1447}
!llvm.ident = !{!1448}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !424, globals: !1355)
!1 = !DIFile(filename: "bufferedio.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{}
!3 = !{!4, !5, !45, !368, !369, !377, !101, !17, !59, !391, !392}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyEnvironmentErrorObject", file: !7, line: 69, baseType: !8)
!7 = !DIFile(filename: "Include/pyerrors.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyOSErrorObject", file: !7, line: 61, baseType: !9)
!9 = !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 51, size: 832, align: 64, elements: !10)
!10 = !{!11, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !9, file: !7, line: 52, baseType: !12, size: 128, align: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !13, line: 109, baseType: !14)
!13 = !DIFile(filename: "Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!14 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !13, line: 105, size: 128, align: 64, elements: !15)
!15 = !{!16, !24}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !14, file: !13, line: 107, baseType: !17, size: 64, align: 64)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !18, line: 177, baseType: !19)
!18 = !DIFile(filename: "Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!19 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !20, line: 102, baseType: !21)
!20 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !22, line: 181, baseType: !23)
!22 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!23 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !14, file: !13, line: 108, baseType: !25, size: 64, align: 64, offset: 64)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64, align: 64)
!26 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !13, line: 334, size: 3200, align: 64, elements: !27)
!27 = !{!28, !34, !38, !39, !40, !46, !109, !114, !119, !120, !125, !177, !208, !220, !226, !227, !228, !230, !232, !263, !264, !265, !274, !275, !280, !281, !283, !285, !295, !305, !323, !324, !325, !327, !329, !330, !332, !337, !342, !347, !348, !349, !350, !351, !352, !353, !354, !356}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !26, file: !13, line: 335, baseType: !29, size: 192, align: 64)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !13, line: 114, baseType: !30)
!30 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 111, size: 192, align: 64, elements: !31)
!31 = !{!32, !33}
!32 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !30, file: !13, line: 112, baseType: !12, size: 128, align: 64)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !30, file: !13, line: 113, baseType: !17, size: 64, align: 64, offset: 128)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !26, file: !13, line: 336, baseType: !35, size: 64, align: 64, offset: 192)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!36 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!37 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !26, file: !13, line: 337, baseType: !17, size: 64, align: 64, offset: 256)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !26, file: !13, line: 337, baseType: !17, size: 64, align: 64, offset: 320)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !26, file: !13, line: 341, baseType: !41, size: 64, align: 64, offset: 384)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !13, line: 308, baseType: !42)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64, align: 64)
!43 = !DISubroutineType(types: !44)
!44 = !{null, !45}
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !26, file: !13, line: 342, baseType: !47, size: 64, align: 64, offset: 448)
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !13, line: 314, baseType: !48)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64, align: 64)
!49 = !DISubroutineType(types: !50)
!50 = !{!51, !45, !52, !51}
!51 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64, align: 64)
!53 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !20, line: 48, baseType: !54)
!54 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !55, line: 246, size: 1728, align: 64, elements: !56)
!55 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!56 = !{!57, !58, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !78, !79, !80, !81, !83, !85, !87, !91, !94, !96, !97, !98, !99, !100, !104, !105}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !54, file: !55, line: 247, baseType: !51, size: 32, align: 32)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !54, file: !55, line: 252, baseType: !59, size: 64, align: 64, offset: 64)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64, align: 64)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !54, file: !55, line: 253, baseType: !59, size: 64, align: 64, offset: 128)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !54, file: !55, line: 254, baseType: !59, size: 64, align: 64, offset: 192)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !54, file: !55, line: 255, baseType: !59, size: 64, align: 64, offset: 256)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !54, file: !55, line: 256, baseType: !59, size: 64, align: 64, offset: 320)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !54, file: !55, line: 257, baseType: !59, size: 64, align: 64, offset: 384)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !54, file: !55, line: 258, baseType: !59, size: 64, align: 64, offset: 448)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !54, file: !55, line: 259, baseType: !59, size: 64, align: 64, offset: 512)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !54, file: !55, line: 261, baseType: !59, size: 64, align: 64, offset: 576)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !54, file: !55, line: 262, baseType: !59, size: 64, align: 64, offset: 640)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !54, file: !55, line: 263, baseType: !59, size: 64, align: 64, offset: 704)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !54, file: !55, line: 265, baseType: !71, size: 64, align: 64, offset: 768)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64, align: 64)
!72 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !55, line: 161, size: 192, align: 64, elements: !73)
!73 = !{!74, !75, !77}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !72, file: !55, line: 162, baseType: !71, size: 64, align: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !72, file: !55, line: 163, baseType: !76, size: 64, align: 64, offset: 64)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64, align: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !72, file: !55, line: 167, baseType: !51, size: 32, align: 32, offset: 128)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !54, file: !55, line: 267, baseType: !76, size: 64, align: 64, offset: 832)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !54, file: !55, line: 269, baseType: !51, size: 32, align: 32, offset: 896)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !54, file: !55, line: 273, baseType: !51, size: 32, align: 32, offset: 928)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !54, file: !55, line: 275, baseType: !82, size: 64, align: 64, offset: 960)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !22, line: 140, baseType: !23)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !54, file: !55, line: 279, baseType: !84, size: 16, align: 16, offset: 1024)
!84 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !54, file: !55, line: 280, baseType: !86, size: 8, align: 8, offset: 1040)
!86 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !54, file: !55, line: 281, baseType: !88, size: 8, align: 8, offset: 1048)
!88 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 8, align: 8, elements: !89)
!89 = !{!90}
!90 = !DISubrange(count: 1)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !54, file: !55, line: 285, baseType: !92, size: 64, align: 64, offset: 1088)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64, align: 64)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !55, line: 155, baseType: null)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !54, file: !55, line: 294, baseType: !95, size: 64, align: 64, offset: 1152)
!95 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !22, line: 141, baseType: !23)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !54, file: !55, line: 303, baseType: !4, size: 64, align: 64, offset: 1216)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !54, file: !55, line: 304, baseType: !4, size: 64, align: 64, offset: 1280)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !54, file: !55, line: 305, baseType: !4, size: 64, align: 64, offset: 1344)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !54, file: !55, line: 306, baseType: !4, size: 64, align: 64, offset: 1408)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !54, file: !55, line: 307, baseType: !101, size: 64, align: 64, offset: 1472)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !102, line: 62, baseType: !103)
!102 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!103 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !54, file: !55, line: 309, baseType: !51, size: 32, align: 32, offset: 1536)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !54, file: !55, line: 311, baseType: !106, size: 160, align: 8, offset: 1568)
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 160, align: 8, elements: !107)
!107 = !{!108}
!108 = !DISubrange(count: 20)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !26, file: !13, line: 343, baseType: !110, size: 64, align: 64, offset: 512)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !13, line: 316, baseType: !111)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64, align: 64)
!112 = !DISubroutineType(types: !113)
!113 = !{!45, !45, !59}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !26, file: !13, line: 344, baseType: !115, size: 64, align: 64, offset: 576)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !13, line: 318, baseType: !116)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64, align: 64)
!117 = !DISubroutineType(types: !118)
!118 = !{!51, !45, !59, !45}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !26, file: !13, line: 345, baseType: !4, size: 64, align: 64, offset: 640)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !26, file: !13, line: 346, baseType: !121, size: 64, align: 64, offset: 704)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !13, line: 320, baseType: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64)
!123 = !DISubroutineType(types: !124)
!124 = !{!45, !45}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !26, file: !13, line: 350, baseType: !126, size: 64, align: 64, offset: 768)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64, align: 64)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !13, line: 278, baseType: !128)
!128 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 236, size: 2176, align: 64, elements: !129)
!129 = !{!130, !135, !136, !137, !138, !139, !144, !146, !147, !148, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !128, file: !13, line: 241, baseType: !131, size: 64, align: 64)
!131 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !13, line: 166, baseType: !132)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64, align: 64)
!133 = !DISubroutineType(types: !134)
!134 = !{!45, !45, !45}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !128, file: !13, line: 242, baseType: !131, size: 64, align: 64, offset: 64)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !128, file: !13, line: 243, baseType: !131, size: 64, align: 64, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !128, file: !13, line: 244, baseType: !131, size: 64, align: 64, offset: 192)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !128, file: !13, line: 245, baseType: !131, size: 64, align: 64, offset: 256)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !128, file: !13, line: 246, baseType: !140, size: 64, align: 64, offset: 320)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !13, line: 167, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64, align: 64)
!142 = !DISubroutineType(types: !143)
!143 = !{!45, !45, !45, !45}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !128, file: !13, line: 247, baseType: !145, size: 64, align: 64, offset: 384)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !13, line: 165, baseType: !122)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !128, file: !13, line: 248, baseType: !145, size: 64, align: 64, offset: 448)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !128, file: !13, line: 249, baseType: !145, size: 64, align: 64, offset: 512)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !128, file: !13, line: 250, baseType: !149, size: 64, align: 64, offset: 576)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !13, line: 168, baseType: !150)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64, align: 64)
!151 = !DISubroutineType(types: !152)
!152 = !{!51, !45}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !128, file: !13, line: 251, baseType: !145, size: 64, align: 64, offset: 640)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !128, file: !13, line: 252, baseType: !131, size: 64, align: 64, offset: 704)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !128, file: !13, line: 253, baseType: !131, size: 64, align: 64, offset: 768)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !128, file: !13, line: 254, baseType: !131, size: 64, align: 64, offset: 832)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !128, file: !13, line: 255, baseType: !131, size: 64, align: 64, offset: 896)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !128, file: !13, line: 256, baseType: !131, size: 64, align: 64, offset: 960)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !128, file: !13, line: 257, baseType: !145, size: 64, align: 64, offset: 1024)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !128, file: !13, line: 258, baseType: !4, size: 64, align: 64, offset: 1088)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !128, file: !13, line: 259, baseType: !145, size: 64, align: 64, offset: 1152)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !128, file: !13, line: 261, baseType: !131, size: 64, align: 64, offset: 1216)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !128, file: !13, line: 262, baseType: !131, size: 64, align: 64, offset: 1280)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !128, file: !13, line: 263, baseType: !131, size: 64, align: 64, offset: 1344)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !128, file: !13, line: 264, baseType: !131, size: 64, align: 64, offset: 1408)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !128, file: !13, line: 265, baseType: !140, size: 64, align: 64, offset: 1472)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !128, file: !13, line: 266, baseType: !131, size: 64, align: 64, offset: 1536)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !128, file: !13, line: 267, baseType: !131, size: 64, align: 64, offset: 1600)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !128, file: !13, line: 268, baseType: !131, size: 64, align: 64, offset: 1664)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !128, file: !13, line: 269, baseType: !131, size: 64, align: 64, offset: 1728)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !128, file: !13, line: 270, baseType: !131, size: 64, align: 64, offset: 1792)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !128, file: !13, line: 272, baseType: !131, size: 64, align: 64, offset: 1856)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !128, file: !13, line: 273, baseType: !131, size: 64, align: 64, offset: 1920)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !128, file: !13, line: 274, baseType: !131, size: 64, align: 64, offset: 1984)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !128, file: !13, line: 275, baseType: !131, size: 64, align: 64, offset: 2048)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !128, file: !13, line: 277, baseType: !145, size: 64, align: 64, offset: 2112)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !26, file: !13, line: 351, baseType: !178, size: 64, align: 64, offset: 832)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !13, line: 292, baseType: !180)
!180 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 280, size: 640, align: 64, elements: !181)
!181 = !{!182, !187, !188, !193, !194, !195, !200, !201, !206, !207}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !180, file: !13, line: 281, baseType: !183, size: 64, align: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !13, line: 169, baseType: !184)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = !DISubroutineType(types: !186)
!186 = !{!17, !45}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !180, file: !13, line: 282, baseType: !131, size: 64, align: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !180, file: !13, line: 283, baseType: !189, size: 64, align: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !13, line: 170, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!45, !45, !17}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !180, file: !13, line: 284, baseType: !189, size: 64, align: 64, offset: 192)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !180, file: !13, line: 285, baseType: !4, size: 64, align: 64, offset: 256)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !180, file: !13, line: 286, baseType: !196, size: 64, align: 64, offset: 320)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !13, line: 172, baseType: !197)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64, align: 64)
!198 = !DISubroutineType(types: !199)
!199 = !{!51, !45, !17, !45}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !180, file: !13, line: 287, baseType: !4, size: 64, align: 64, offset: 384)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !180, file: !13, line: 288, baseType: !202, size: 64, align: 64, offset: 448)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !13, line: 231, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64, align: 64)
!204 = !DISubroutineType(types: !205)
!205 = !{!51, !45, !45}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !180, file: !13, line: 290, baseType: !131, size: 64, align: 64, offset: 512)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !180, file: !13, line: 291, baseType: !189, size: 64, align: 64, offset: 576)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !26, file: !13, line: 352, baseType: !209, size: 64, align: 64, offset: 896)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !13, line: 298, baseType: !211)
!211 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 294, size: 192, align: 64, elements: !212)
!212 = !{!213, !214, !215}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !211, file: !13, line: 295, baseType: !183, size: 64, align: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !211, file: !13, line: 296, baseType: !131, size: 64, align: 64, offset: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !211, file: !13, line: 297, baseType: !216, size: 64, align: 64, offset: 128)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !13, line: 174, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64, align: 64)
!218 = !DISubroutineType(types: !219)
!219 = !{!51, !45, !45, !45}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !26, file: !13, line: 356, baseType: !221, size: 64, align: 64, offset: 960)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !13, line: 321, baseType: !222)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64, align: 64)
!223 = !DISubroutineType(types: !224)
!224 = !{!225, !45}
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !18, line: 186, baseType: !17)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !26, file: !13, line: 357, baseType: !140, size: 64, align: 64, offset: 1024)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !26, file: !13, line: 358, baseType: !121, size: 64, align: 64, offset: 1088)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !26, file: !13, line: 359, baseType: !229, size: 64, align: 64, offset: 1152)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !13, line: 317, baseType: !132)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !26, file: !13, line: 360, baseType: !231, size: 64, align: 64, offset: 1216)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !13, line: 319, baseType: !217)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !26, file: !13, line: 363, baseType: !233, size: 64, align: 64, offset: 1280)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64, align: 64)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !13, line: 304, baseType: !235)
!235 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 301, size: 128, align: 64, elements: !236)
!236 = !{!237, !258}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !235, file: !13, line: 302, baseType: !238, size: 64, align: 64)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !13, line: 193, baseType: !239)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!51, !45, !242, !51}
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64, align: 64)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !13, line: 191, baseType: !244)
!244 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !13, line: 178, size: 640, align: 64, elements: !245)
!245 = !{!246, !247, !248, !249, !250, !251, !252, !253, !255, !256, !257}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !244, file: !13, line: 179, baseType: !4, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !244, file: !13, line: 180, baseType: !45, size: 64, align: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !244, file: !13, line: 181, baseType: !17, size: 64, align: 64, offset: 128)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !244, file: !13, line: 182, baseType: !17, size: 64, align: 64, offset: 192)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !244, file: !13, line: 184, baseType: !51, size: 32, align: 32, offset: 256)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !244, file: !13, line: 185, baseType: !51, size: 32, align: 32, offset: 288)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !244, file: !13, line: 186, baseType: !59, size: 64, align: 64, offset: 320)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !244, file: !13, line: 187, baseType: !254, size: 64, align: 64, offset: 384)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !244, file: !13, line: 188, baseType: !254, size: 64, align: 64, offset: 448)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !244, file: !13, line: 189, baseType: !254, size: 64, align: 64, offset: 512)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !244, file: !13, line: 190, baseType: !4, size: 64, align: 64, offset: 576)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !235, file: !13, line: 303, baseType: !259, size: 64, align: 64, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !13, line: 194, baseType: !260)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64, align: 64)
!261 = !DISubroutineType(types: !262)
!262 = !{null, !45, !242}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !26, file: !13, line: 366, baseType: !103, size: 64, align: 64, offset: 1344)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !26, file: !13, line: 368, baseType: !35, size: 64, align: 64, offset: 1408)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !26, file: !13, line: 372, baseType: !266, size: 64, align: 64, offset: 1472)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !13, line: 233, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64, align: 64)
!268 = !DISubroutineType(types: !269)
!269 = !{!51, !45, !270, !4}
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !13, line: 232, baseType: !271)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64, align: 64)
!272 = !DISubroutineType(types: !273)
!273 = !{!51, !45, !4}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !26, file: !13, line: 375, baseType: !149, size: 64, align: 64, offset: 1536)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !26, file: !13, line: 379, baseType: !276, size: 64, align: 64, offset: 1600)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !13, line: 322, baseType: !277)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!278 = !DISubroutineType(types: !279)
!279 = !{!45, !45, !45, !51}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !26, file: !13, line: 382, baseType: !17, size: 64, align: 64, offset: 1664)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !26, file: !13, line: 385, baseType: !282, size: 64, align: 64, offset: 1728)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !13, line: 323, baseType: !122)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !26, file: !13, line: 386, baseType: !284, size: 64, align: 64, offset: 1792)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !13, line: 324, baseType: !122)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !26, file: !13, line: 389, baseType: !286, size: 64, align: 64, offset: 1856)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64, align: 64)
!287 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !288, line: 40, size: 256, align: 64, elements: !289)
!288 = !DIFile(filename: "Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!289 = !{!290, !291, !293, !294}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !287, file: !288, line: 41, baseType: !35, size: 64, align: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !287, file: !288, line: 42, baseType: !292, size: 64, align: 64, offset: 64)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !288, line: 18, baseType: !132)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !287, file: !288, line: 43, baseType: !51, size: 32, align: 32, offset: 128)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !287, file: !288, line: 45, baseType: !35, size: 64, align: 64, offset: 192)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !26, file: !13, line: 390, baseType: !296, size: 64, align: 64, offset: 1920)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64, align: 64)
!297 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !298, line: 18, size: 320, align: 64, elements: !299)
!298 = !DIFile(filename: "Include/structmember.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!299 = !{!300, !301, !302, !303, !304}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !297, file: !298, line: 19, baseType: !59, size: 64, align: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !297, file: !298, line: 20, baseType: !51, size: 32, align: 32, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !297, file: !298, line: 21, baseType: !17, size: 64, align: 64, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !297, file: !298, line: 22, baseType: !51, size: 32, align: 32, offset: 192)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !297, file: !298, line: 23, baseType: !59, size: 64, align: 64, offset: 256)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !26, file: !13, line: 391, baseType: !306, size: 64, align: 64, offset: 1984)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64, align: 64)
!307 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !308, line: 11, size: 320, align: 64, elements: !309)
!308 = !DIFile(filename: "Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!309 = !{!310, !311, !316, !321, !322}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !307, file: !308, line: 12, baseType: !59, size: 64, align: 64)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !307, file: !308, line: 13, baseType: !312, size: 64, align: 64, offset: 64)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !308, line: 8, baseType: !313)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64, align: 64)
!314 = !DISubroutineType(types: !315)
!315 = !{!45, !45, !4}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !307, file: !308, line: 14, baseType: !317, size: 64, align: 64, offset: 128)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !308, line: 9, baseType: !318)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64, align: 64)
!319 = !DISubroutineType(types: !320)
!320 = !{!51, !45, !45, !4}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !307, file: !308, line: 15, baseType: !59, size: 64, align: 64, offset: 192)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !307, file: !308, line: 16, baseType: !4, size: 64, align: 64, offset: 256)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !26, file: !13, line: 392, baseType: !25, size: 64, align: 64, offset: 2048)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !26, file: !13, line: 393, baseType: !45, size: 64, align: 64, offset: 2112)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !26, file: !13, line: 394, baseType: !326, size: 64, align: 64, offset: 2176)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !13, line: 325, baseType: !141)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !26, file: !13, line: 395, baseType: !328, size: 64, align: 64, offset: 2240)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !13, line: 326, baseType: !217)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !26, file: !13, line: 396, baseType: !17, size: 64, align: 64, offset: 2304)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !26, file: !13, line: 397, baseType: !331, size: 64, align: 64, offset: 2368)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !13, line: 327, baseType: !217)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !26, file: !13, line: 398, baseType: !333, size: 64, align: 64, offset: 2432)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !13, line: 329, baseType: !334)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64, align: 64)
!335 = !DISubroutineType(types: !336)
!336 = !{!45, !25, !17}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !26, file: !13, line: 399, baseType: !338, size: 64, align: 64, offset: 2496)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !13, line: 328, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64, align: 64)
!340 = !DISubroutineType(types: !341)
!341 = !{!45, !25, !45, !45}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !26, file: !13, line: 400, baseType: !343, size: 64, align: 64, offset: 2560)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !13, line: 307, baseType: !344)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64, align: 64)
!345 = !DISubroutineType(types: !346)
!346 = !{null, !4}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !26, file: !13, line: 401, baseType: !149, size: 64, align: 64, offset: 2624)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !26, file: !13, line: 402, baseType: !45, size: 64, align: 64, offset: 2688)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !26, file: !13, line: 403, baseType: !45, size: 64, align: 64, offset: 2752)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !26, file: !13, line: 404, baseType: !45, size: 64, align: 64, offset: 2816)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !26, file: !13, line: 405, baseType: !45, size: 64, align: 64, offset: 2880)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !26, file: !13, line: 406, baseType: !45, size: 64, align: 64, offset: 2944)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !26, file: !13, line: 407, baseType: !41, size: 64, align: 64, offset: 3008)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !26, file: !13, line: 410, baseType: !355, size: 32, align: 32, offset: 3072)
!355 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !26, file: !13, line: 412, baseType: !41, size: 64, align: 64, offset: 3136)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !9, file: !7, line: 52, baseType: !45, size: 64, align: 64, offset: 128)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !9, file: !7, line: 52, baseType: !45, size: 64, align: 64, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "traceback", scope: !9, file: !7, line: 52, baseType: !45, size: 64, align: 64, offset: 256)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !9, file: !7, line: 52, baseType: !45, size: 64, align: 64, offset: 320)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "cause", scope: !9, file: !7, line: 52, baseType: !45, size: 64, align: 64, offset: 384)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_context", scope: !9, file: !7, line: 52, baseType: !37, size: 8, align: 8, offset: 448)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "myerrno", scope: !9, file: !7, line: 53, baseType: !45, size: 64, align: 64, offset: 512)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "strerror", scope: !9, file: !7, line: 54, baseType: !45, size: 64, align: 64, offset: 576)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !9, file: !7, line: 55, baseType: !45, size: 64, align: 64, offset: 640)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "filename2", scope: !9, file: !7, line: 56, baseType: !45, size: 64, align: 64, offset: 704)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !9, file: !7, line: 60, baseType: !17, size: 64, align: 64, offset: 768)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64, align: 64)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64, align: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !371, line: 41, baseType: !372)
!371 = !DIFile(filename: "Include/bytesobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!372 = !DICompositeType(tag: DW_TAG_structure_type, file: !371, line: 31, size: 320, align: 64, elements: !373)
!373 = !{!374, !375, !376}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !372, file: !371, line: 32, baseType: !29, size: 192, align: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !372, file: !371, line: 33, baseType: !225, size: 64, align: 64, offset: 192)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !372, file: !371, line: 34, baseType: !88, size: 8, align: 8, offset: 256)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64, align: 64)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGC_Head", file: !379, line: 253, baseType: !380)
!379 = !DIFile(filename: "Include/objimpl.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!380 = !DICompositeType(tag: DW_TAG_union_type, name: "_gc_head", file: !379, line: 246, size: 192, align: 64, elements: !381)
!381 = !{!382, !389}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !380, file: !379, line: 251, baseType: !383, size: 192, align: 64)
!383 = !DICompositeType(tag: DW_TAG_structure_type, scope: !380, file: !379, line: 247, size: 192, align: 64, elements: !384)
!384 = !{!385, !387, !388}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "gc_next", scope: !383, file: !379, line: 248, baseType: !386, size: 64, align: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64, align: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "gc_prev", scope: !383, file: !379, line: 249, baseType: !386, size: 64, align: 64, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "gc_refs", scope: !383, file: !379, line: 250, baseType: !17, size: 64, align: 64, offset: 128)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !380, file: !379, line: 252, baseType: !390, size: 64, align: 64)
!390 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64, align: 64)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64, align: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "buffered", file: !394, line: 271, baseType: !395)
!394 = !DIFile(filename: "./Modules/_io/bufferedio.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!395 = !DICompositeType(tag: DW_TAG_structure_type, file: !394, line: 227, size: 1216, align: 64, elements: !396)
!396 = !{!397, !398, !399, !400, !401, !402, !403, !404, !405, !409, !410, !411, !412, !413, !414, !415, !418, !420, !421, !422, !423}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !395, file: !394, line: 228, baseType: !12, size: 128, align: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !395, file: !394, line: 230, baseType: !45, size: 64, align: 64, offset: 128)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !395, file: !394, line: 231, baseType: !51, size: 32, align: 32, offset: 192)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "detached", scope: !395, file: !394, line: 232, baseType: !51, size: 32, align: 32, offset: 224)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "readable", scope: !395, file: !394, line: 233, baseType: !51, size: 32, align: 32, offset: 256)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !395, file: !394, line: 234, baseType: !51, size: 32, align: 32, offset: 288)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "finalizing", scope: !395, file: !394, line: 235, baseType: !37, size: 8, align: 8, offset: 320)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "fast_closed_checks", scope: !395, file: !394, line: 239, baseType: !51, size: 32, align: 32, offset: 352)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "abs_pos", scope: !395, file: !394, line: 242, baseType: !406, size: 64, align: 64, offset: 384)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_off_t", file: !407, line: 94, baseType: !408)
!407 = !DIFile(filename: "./Modules/_io/_iomodule.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!408 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !20, line: 92, baseType: !95)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !395, file: !394, line: 245, baseType: !59, size: 64, align: 64, offset: 448)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !395, file: !394, line: 247, baseType: !406, size: 64, align: 64, offset: 512)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pos", scope: !395, file: !394, line: 249, baseType: !406, size: 64, align: 64, offset: 576)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "read_end", scope: !395, file: !394, line: 253, baseType: !406, size: 64, align: 64, offset: 640)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "write_pos", scope: !395, file: !394, line: 256, baseType: !406, size: 64, align: 64, offset: 704)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !395, file: !394, line: 259, baseType: !406, size: 64, align: 64, offset: 768)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !395, file: !394, line: 262, baseType: !416, size: 64, align: 64, offset: 832)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyThread_type_lock", file: !417, line: 5, baseType: !4)
!417 = !DIFile(filename: "Include/pythread.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!418 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !395, file: !394, line: 263, baseType: !419, size: 64, align: 64, offset: 896)
!419 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !23)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !395, file: !394, line: 266, baseType: !17, size: 64, align: 64, offset: 960)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_mask", scope: !395, file: !394, line: 267, baseType: !17, size: 64, align: 64, offset: 1024)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !395, file: !394, line: 269, baseType: !45, size: 64, align: 64, offset: 1088)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "weakreflist", scope: !395, file: !394, line: 270, baseType: !45, size: 64, align: 64, offset: 1152)
!424 = !{!425, !444, !447, !460, !464, !468, !485, !489, !508, !519, !534, !551, !568, !638, !645, !708, !717, !723, !743, !755, !758, !779, !782, !790, !807, !817, !821, !858, !862, !866, !870, !874, !878, !888, !892, !902, !944, !952, !983, !997, !1002, !1018, !1035, !1040, !1064, !1073, !1078, !1092, !1099, !1103, !1107, !1111, !1130, !1134, !1155, !1163, !1168, !1182, !1216, !1227, !1250, !1256, !1275, !1279, !1283, !1287, !1291, !1295, !1299, !1303, !1310, !1317, !1323, !1341}
!425 = !DISubprogram(name: "_PyIO_trap_eintr", scope: !394, file: !394, line: 805, type: !426, isLocal: false, isDefinition: true, scopeLine: 806, flags: DIFlagPrototyped, isOptimized: true, function: i32 ()* @_PyIO_trap_eintr, variables: !428)
!426 = !DISubroutineType(types: !427)
!427 = !{!51}
!428 = !{!429, !430, !431, !432, !433, !437, !439, !441}
!429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "typ", scope: !425, file: !394, line: 808, type: !45)
!430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !425, file: !394, line: 808, type: !45)
!431 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tb", scope: !425, file: !394, line: 808, type: !45)
!432 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "env_err", scope: !425, file: !394, line: 809, type: !5)
!433 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !434, file: !394, line: 823, type: !45)
!434 = distinct !DILexicalBlock(scope: !435, file: !394, line: 823, column: 12)
!435 = distinct !DILexicalBlock(scope: !436, file: !394, line: 822, column: 71)
!436 = distinct !DILexicalBlock(scope: !425, file: !394, line: 821, column: 9)
!437 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !438, file: !394, line: 824, type: !45)
!438 = distinct !DILexicalBlock(scope: !435, file: !394, line: 824, column: 12)
!439 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !440, file: !394, line: 825, type: !45)
!440 = distinct !DILexicalBlock(scope: !435, file: !394, line: 825, column: 12)
!441 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !442, file: !394, line: 825, type: !45)
!442 = distinct !DILexicalBlock(scope: !443, file: !394, line: 825, column: 98)
!443 = distinct !DILexicalBlock(scope: !440, file: !394, line: 825, column: 64)
!444 = !DISubprogram(name: "bufferediobase_detach", scope: !394, file: !394, line: 107, type: !123, isLocal: true, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @bufferediobase_detach, variables: !445)
!445 = !{!446}
!446 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !444, file: !394, line: 107, type: !45)
!447 = !DISubprogram(name: "bufferediobase_unsupported", scope: !394, file: !394, line: 92, type: !448, isLocal: true, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*)* @bufferediobase_unsupported, variables: !450)
!448 = !DISubroutineType(types: !449)
!449 = !{!45, !35}
!450 = !{!451, !452}
!451 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "message", arg: 1, scope: !447, file: !394, line: 92, type: !35)
!452 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !447, file: !394, line: 94, type: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64, align: 64)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyIO_State", file: !407, line: 135, baseType: !455)
!455 = !DICompositeType(tag: DW_TAG_structure_type, file: !407, line: 130, size: 192, align: 64, elements: !456)
!456 = !{!457, !458, !459}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !455, file: !407, line: 131, baseType: !51, size: 32, align: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "locale_module", scope: !455, file: !407, line: 132, baseType: !45, size: 64, align: 64, offset: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported_operation", scope: !455, file: !407, line: 134, baseType: !45, size: 64, align: 64, offset: 128)
!460 = !DISubprogram(name: "bufferediobase_read", scope: !394, file: !394, line: 131, type: !133, isLocal: true, isDefinition: true, scopeLine: 132, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @bufferediobase_read, variables: !461)
!461 = !{!462, !463}
!462 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !460, file: !394, line: 131, type: !45)
!463 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !460, file: !394, line: 131, type: !45)
!464 = !DISubprogram(name: "bufferediobase_read1", scope: !394, file: !394, line: 144, type: !133, isLocal: true, isDefinition: true, scopeLine: 145, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @bufferediobase_read1, variables: !465)
!465 = !{!466, !467}
!466 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !464, file: !394, line: 144, type: !45)
!467 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !464, file: !394, line: 144, type: !45)
!468 = !DISubprogram(name: "bufferediobase_readinto", scope: !394, file: !394, line: 50, type: !133, isLocal: true, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @bufferediobase_readinto, variables: !469)
!469 = !{!470, !471, !472, !473, !474, !475, !479, !483}
!470 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !468, file: !394, line: 50, type: !45)
!471 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !468, file: !394, line: 50, type: !45)
!472 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !468, file: !394, line: 52, type: !243)
!473 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !468, file: !394, line: 53, type: !17)
!474 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !468, file: !394, line: 54, type: !45)
!475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !476, file: !394, line: 65, type: !45)
!476 = distinct !DILexicalBlock(scope: !477, file: !394, line: 65, column: 12)
!477 = distinct !DILexicalBlock(scope: !478, file: !394, line: 64, column: 79)
!478 = distinct !DILexicalBlock(scope: !468, file: !394, line: 64, column: 9)
!479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !480, file: !394, line: 76, type: !45)
!480 = distinct !DILexicalBlock(scope: !481, file: !394, line: 76, column: 12)
!481 = distinct !DILexicalBlock(scope: !482, file: !394, line: 71, column: 24)
!482 = distinct !DILexicalBlock(scope: !468, file: !394, line: 71, column: 9)
!483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !484, file: !394, line: 82, type: !45)
!484 = distinct !DILexicalBlock(scope: !468, file: !394, line: 82, column: 8)
!485 = !DISubprogram(name: "bufferediobase_write", scope: !394, file: !394, line: 159, type: !133, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @bufferediobase_write, variables: !486)
!486 = !{!487, !488}
!487 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !485, file: !394, line: 159, type: !45)
!488 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !485, file: !394, line: 159, type: !45)
!489 = !DISubprogram(name: "buffered_dealloc", scope: !394, file: !394, line: 397, type: !490, isLocal: true, isDefinition: true, scopeLine: 398, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.buffered*)* @buffered_dealloc, variables: !492)
!490 = !DISubroutineType(types: !491)
!491 = !{null, !392}
!492 = !{!493, !494, !496, !498, !502, !504}
!493 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !489, file: !394, line: 397, type: !392)
!494 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !495, file: !394, line: 402, type: !377)
!495 = distinct !DILexicalBlock(scope: !489, file: !394, line: 402, column: 8)
!496 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !497, file: !394, line: 406, type: !45)
!497 = distinct !DILexicalBlock(scope: !489, file: !394, line: 406, column: 8)
!498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !499, file: !394, line: 406, type: !45)
!499 = distinct !DILexicalBlock(scope: !500, file: !394, line: 406, column: 113)
!500 = distinct !DILexicalBlock(scope: !501, file: !394, line: 406, column: 82)
!501 = distinct !DILexicalBlock(scope: !497, file: !394, line: 406, column: 59)
!502 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !503, file: !394, line: 417, type: !45)
!503 = distinct !DILexicalBlock(scope: !489, file: !394, line: 417, column: 8)
!504 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !505, file: !394, line: 417, type: !45)
!505 = distinct !DILexicalBlock(scope: !506, file: !394, line: 417, column: 115)
!506 = distinct !DILexicalBlock(scope: !507, file: !394, line: 417, column: 83)
!507 = distinct !DILexicalBlock(scope: !503, file: !394, line: 417, column: 60)
!508 = !DISubprogram(name: "buffered_repr", scope: !394, file: !394, line: 1367, type: !509, isLocal: true, isDefinition: true, scopeLine: 1368, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*)* @buffered_repr, variables: !511)
!509 = !DISubroutineType(types: !510)
!510 = !{!45, !392}
!511 = !{!512, !513, !514, !515}
!512 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !508, file: !394, line: 1367, type: !392)
!513 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nameobj", scope: !508, file: !394, line: 1369, type: !45)
!514 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !508, file: !394, line: 1369, type: !45)
!515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !516, file: !394, line: 1382, type: !45)
!516 = distinct !DILexicalBlock(scope: !517, file: !394, line: 1382, column: 12)
!517 = distinct !DILexicalBlock(scope: !518, file: !394, line: 1379, column: 10)
!518 = distinct !DILexicalBlock(scope: !508, file: !394, line: 1372, column: 9)
!519 = !DISubprogram(name: "buffered_traverse", scope: !394, file: !394, line: 433, type: !520, isLocal: true, isDefinition: true, scopeLine: 434, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.buffered*, i32 (%struct._object*, i8*)*, i8*)* @buffered_traverse, variables: !522)
!520 = !DISubroutineType(types: !521)
!521 = !{!51, !392, !270, !4}
!522 = !{!523, !524, !525, !526, !530}
!523 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !519, file: !394, line: 433, type: !392)
!524 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !519, file: !394, line: 433, type: !270)
!525 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !519, file: !394, line: 433, type: !4)
!526 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !527, file: !394, line: 435, type: !51)
!527 = distinct !DILexicalBlock(scope: !528, file: !394, line: 435, column: 25)
!528 = distinct !DILexicalBlock(scope: !529, file: !394, line: 435, column: 14)
!529 = distinct !DILexicalBlock(scope: !519, file: !394, line: 435, column: 8)
!530 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !531, file: !394, line: 436, type: !51)
!531 = distinct !DILexicalBlock(scope: !532, file: !394, line: 436, column: 26)
!532 = distinct !DILexicalBlock(scope: !533, file: !394, line: 436, column: 14)
!533 = distinct !DILexicalBlock(scope: !519, file: !394, line: 436, column: 8)
!534 = !DISubprogram(name: "buffered_clear", scope: !394, file: !394, line: 441, type: !535, isLocal: true, isDefinition: true, scopeLine: 442, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.buffered*)* @buffered_clear, variables: !537)
!535 = !DISubroutineType(types: !536)
!536 = !{!51, !392}
!537 = !{!538, !539, !541, !545, !547}
!538 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !534, file: !394, line: 441, type: !392)
!539 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !540, file: !394, line: 444, type: !45)
!540 = distinct !DILexicalBlock(scope: !534, file: !394, line: 444, column: 8)
!541 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !542, file: !394, line: 444, type: !45)
!542 = distinct !DILexicalBlock(scope: !543, file: !394, line: 444, column: 113)
!543 = distinct !DILexicalBlock(scope: !544, file: !394, line: 444, column: 82)
!544 = distinct !DILexicalBlock(scope: !540, file: !394, line: 444, column: 59)
!545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !546, file: !394, line: 445, type: !45)
!546 = distinct !DILexicalBlock(scope: !534, file: !394, line: 445, column: 8)
!547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !548, file: !394, line: 445, type: !45)
!548 = distinct !DILexicalBlock(scope: !549, file: !394, line: 445, column: 115)
!549 = distinct !DILexicalBlock(scope: !550, file: !394, line: 445, column: 83)
!550 = distinct !DILexicalBlock(scope: !546, file: !394, line: 445, column: 60)
!551 = !DISubprogram(name: "buffered_iternext", scope: !394, file: !394, line: 1329, type: !509, isLocal: true, isDefinition: true, scopeLine: 1330, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*)* @buffered_iternext, variables: !552)
!552 = !{!553, !554, !555, !558, !564}
!553 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !551, file: !394, line: 1329, type: !392)
!554 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "line", scope: !551, file: !394, line: 1331, type: !45)
!555 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tp", scope: !551, file: !394, line: 1332, type: !556)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64, align: 64)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !13, line: 422, baseType: !26)
!558 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !559, file: !394, line: 1349, type: !45)
!559 = distinct !DILexicalBlock(scope: !560, file: !394, line: 1349, column: 16)
!560 = distinct !DILexicalBlock(scope: !561, file: !394, line: 1345, column: 91)
!561 = distinct !DILexicalBlock(scope: !562, file: !394, line: 1345, column: 13)
!562 = distinct !DILexicalBlock(scope: !563, file: !394, line: 1342, column: 10)
!563 = distinct !DILexicalBlock(scope: !551, file: !394, line: 1337, column: 9)
!564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !565, file: !394, line: 1359, type: !45)
!565 = distinct !DILexicalBlock(scope: !566, file: !394, line: 1359, column: 12)
!566 = distinct !DILexicalBlock(scope: !567, file: !394, line: 1357, column: 64)
!567 = distinct !DILexicalBlock(scope: !551, file: !394, line: 1357, column: 9)
!568 = !DISubprogram(name: "_buffered_readline", scope: !394, file: !394, line: 1068, type: !569, isLocal: true, isDefinition: true, scopeLine: 1069, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, i64)* @_buffered_readline, variables: !571)
!569 = !DISubroutineType(types: !570)
!570 = !{!45, !392, !17}
!571 = !{!572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !587, !591, !593, !597, !600, !602, !609, !613, !615, !619, !623, !627, !629, !633, !635}
!572 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !568, file: !394, line: 1068, type: !392)
!573 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "limit", arg: 2, scope: !568, file: !394, line: 1068, type: !17)
!574 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !568, file: !394, line: 1070, type: !45)
!575 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chunks", scope: !568, file: !394, line: 1071, type: !45)
!576 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !568, file: !394, line: 1072, type: !17)
!577 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "written", scope: !568, file: !394, line: 1072, type: !17)
!578 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !568, file: !394, line: 1073, type: !35)
!579 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !568, file: !394, line: 1073, type: !35)
!580 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "end", scope: !568, file: !394, line: 1073, type: !35)
!581 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !582, file: !394, line: 1110, type: !45)
!582 = distinct !DILexicalBlock(scope: !583, file: !394, line: 1110, column: 16)
!583 = distinct !DILexicalBlock(scope: !584, file: !394, line: 1109, column: 45)
!584 = distinct !DILexicalBlock(scope: !585, file: !394, line: 1109, column: 13)
!585 = distinct !DILexicalBlock(scope: !586, file: !394, line: 1105, column: 16)
!586 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1105, column: 9)
!587 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !588, file: !394, line: 1110, type: !45)
!588 = distinct !DILexicalBlock(scope: !589, file: !394, line: 1110, column: 109)
!589 = distinct !DILexicalBlock(scope: !590, file: !394, line: 1110, column: 84)
!590 = distinct !DILexicalBlock(scope: !582, file: !394, line: 1110, column: 61)
!591 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !592, file: !394, line: 1113, type: !45)
!592 = distinct !DILexicalBlock(scope: !585, file: !394, line: 1113, column: 12)
!593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !594, file: !394, line: 1113, type: !45)
!594 = distinct !DILexicalBlock(scope: !595, file: !394, line: 1113, column: 105)
!595 = distinct !DILexicalBlock(scope: !596, file: !394, line: 1113, column: 80)
!596 = distinct !DILexicalBlock(scope: !592, file: !394, line: 1113, column: 57)
!597 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !598, file: !394, line: 1120, type: !45)
!598 = distinct !DILexicalBlock(scope: !599, file: !394, line: 1119, column: 25)
!599 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1119, column: 9)
!600 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !601, file: !394, line: 1123, type: !45)
!601 = distinct !DILexicalBlock(scope: !598, file: !394, line: 1123, column: 12)
!602 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !603, file: !394, line: 1155, type: !45)
!603 = distinct !DILexicalBlock(scope: !604, file: !394, line: 1155, column: 16)
!604 = distinct !DILexicalBlock(scope: !605, file: !394, line: 1154, column: 45)
!605 = distinct !DILexicalBlock(scope: !606, file: !394, line: 1154, column: 13)
!606 = distinct !DILexicalBlock(scope: !607, file: !394, line: 1126, column: 14)
!607 = distinct !DILexicalBlock(scope: !608, file: !394, line: 1126, column: 5)
!608 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1126, column: 5)
!609 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !610, file: !394, line: 1155, type: !45)
!610 = distinct !DILexicalBlock(scope: !611, file: !394, line: 1155, column: 109)
!611 = distinct !DILexicalBlock(scope: !612, file: !394, line: 1155, column: 84)
!612 = distinct !DILexicalBlock(scope: !603, file: !394, line: 1155, column: 61)
!613 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !614, file: !394, line: 1158, type: !45)
!614 = distinct !DILexicalBlock(scope: !606, file: !394, line: 1158, column: 12)
!615 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !616, file: !394, line: 1158, type: !45)
!616 = distinct !DILexicalBlock(scope: !617, file: !394, line: 1158, column: 105)
!617 = distinct !DILexicalBlock(scope: !618, file: !394, line: 1158, column: 80)
!618 = distinct !DILexicalBlock(scope: !614, file: !394, line: 1158, column: 57)
!619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !620, file: !394, line: 1165, type: !45)
!620 = distinct !DILexicalBlock(scope: !621, file: !394, line: 1165, column: 12)
!621 = distinct !DILexicalBlock(scope: !622, file: !394, line: 1164, column: 62)
!622 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1164, column: 9)
!623 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !624, file: !394, line: 1165, type: !45)
!624 = distinct !DILexicalBlock(scope: !625, file: !394, line: 1165, column: 105)
!625 = distinct !DILexicalBlock(scope: !626, file: !394, line: 1165, column: 80)
!626 = distinct !DILexicalBlock(scope: !620, file: !394, line: 1165, column: 57)
!627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !628, file: !394, line: 1168, type: !45)
!628 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1168, column: 8)
!629 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !630, file: !394, line: 1168, type: !45)
!630 = distinct !DILexicalBlock(scope: !631, file: !394, line: 1168, column: 101)
!631 = distinct !DILexicalBlock(scope: !632, file: !394, line: 1168, column: 76)
!632 = distinct !DILexicalBlock(scope: !628, file: !394, line: 1168, column: 53)
!633 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !634, file: !394, line: 1174, type: !45)
!634 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1174, column: 8)
!635 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !636, file: !394, line: 1174, type: !45)
!636 = distinct !DILexicalBlock(scope: !637, file: !394, line: 1174, column: 98)
!637 = distinct !DILexicalBlock(scope: !634, file: !394, line: 1174, column: 64)
!638 = !DISubprogram(name: "buffered_closed", scope: !394, file: !394, line: 482, type: !535, isLocal: true, isDefinition: true, scopeLine: 483, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.buffered*)* @buffered_closed, variables: !639)
!639 = !{!640, !641, !642, !643}
!640 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !638, file: !394, line: 482, type: !392)
!641 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "closed", scope: !638, file: !394, line: 484, type: !51)
!642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !638, file: !394, line: 485, type: !45)
!643 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !644, file: !394, line: 491, type: !45)
!644 = distinct !DILexicalBlock(scope: !638, file: !394, line: 491, column: 8)
!645 = !DISubprogram(name: "_enter_buffered_busy", scope: !394, file: !394, line: 301, type: !535, isLocal: true, isDefinition: true, scopeLine: 302, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.buffered*)* @_enter_buffered_busy, variables: !646)
!646 = !{!647, !648}
!647 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !645, file: !394, line: 301, type: !392)
!648 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !649, file: !394, line: 308, type: !650)
!649 = distinct !DILexicalBlock(scope: !645, file: !394, line: 308, column: 5)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64, align: 64)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyThreadState", file: !652, line: 139, baseType: !653)
!652 = !DIFile(filename: "Include/pystate.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!653 = !DICompositeType(tag: DW_TAG_structure_type, name: "_ts", file: !652, line: 69, size: 1536, align: 64, elements: !654)
!654 = !{!655, !657, !658, !678, !681, !682, !683, !684, !685, !686, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !653, file: !652, line: 72, baseType: !656, size: 64, align: 64)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64, align: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !653, file: !652, line: 73, baseType: !656, size: 64, align: 64, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "interp", scope: !653, file: !652, line: 74, baseType: !659, size: 64, align: 64, offset: 128)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64, align: 64)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyInterpreterState", file: !652, line: 44, baseType: !661)
!661 = !DICompositeType(tag: DW_TAG_structure_type, name: "_is", file: !652, line: 19, size: 832, align: 64, elements: !662)
!662 = !{!663, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !661, file: !652, line: 21, baseType: !664, size: 64, align: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64, align: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "tstate_head", scope: !661, file: !652, line: 22, baseType: !656, size: 64, align: 64, offset: 64)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !661, file: !652, line: 24, baseType: !45, size: 64, align: 64, offset: 128)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "modules_by_index", scope: !661, file: !652, line: 25, baseType: !45, size: 64, align: 64, offset: 192)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "sysdict", scope: !661, file: !652, line: 26, baseType: !45, size: 64, align: 64, offset: 256)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "builtins", scope: !661, file: !652, line: 27, baseType: !45, size: 64, align: 64, offset: 320)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "importlib", scope: !661, file: !652, line: 28, baseType: !45, size: 64, align: 64, offset: 384)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "codec_search_path", scope: !661, file: !652, line: 30, baseType: !45, size: 64, align: 64, offset: 448)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "codec_search_cache", scope: !661, file: !652, line: 31, baseType: !45, size: 64, align: 64, offset: 512)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "codec_error_registry", scope: !661, file: !652, line: 32, baseType: !45, size: 64, align: 64, offset: 576)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "codecs_initialized", scope: !661, file: !652, line: 33, baseType: !51, size: 32, align: 32, offset: 640)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fscodec_initialized", scope: !661, file: !652, line: 34, baseType: !51, size: 32, align: 32, offset: 672)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "dlopenflags", scope: !661, file: !652, line: 37, baseType: !51, size: 32, align: 32, offset: 704)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "builtins_copy", scope: !661, file: !652, line: 43, baseType: !45, size: 64, align: 64, offset: 768)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !653, file: !652, line: 76, baseType: !679, size: 64, align: 64, offset: 192)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64, align: 64)
!680 = !DICompositeType(tag: DW_TAG_structure_type, name: "_frame", file: !652, line: 50, flags: DIFlagFwdDecl)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_depth", scope: !653, file: !652, line: 77, baseType: !51, size: 32, align: 32, offset: 256)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "overflowed", scope: !653, file: !652, line: 78, baseType: !37, size: 8, align: 8, offset: 288)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_critical", scope: !653, file: !652, line: 80, baseType: !37, size: 8, align: 8, offset: 296)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "tracing", scope: !653, file: !652, line: 85, baseType: !51, size: 32, align: 32, offset: 320)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "use_tracing", scope: !653, file: !652, line: 86, baseType: !51, size: 32, align: 32, offset: 352)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "c_profilefunc", scope: !653, file: !652, line: 88, baseType: !687, size: 64, align: 64, offset: 384)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_tracefunc", file: !652, line: 54, baseType: !688)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64, align: 64)
!689 = !DISubroutineType(types: !690)
!690 = !{!51, !45, !679, !51, !45}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "c_tracefunc", scope: !653, file: !652, line: 89, baseType: !687, size: 64, align: 64, offset: 448)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "c_profileobj", scope: !653, file: !652, line: 90, baseType: !45, size: 64, align: 64, offset: 512)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "c_traceobj", scope: !653, file: !652, line: 91, baseType: !45, size: 64, align: 64, offset: 576)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_type", scope: !653, file: !652, line: 93, baseType: !45, size: 64, align: 64, offset: 640)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_value", scope: !653, file: !652, line: 94, baseType: !45, size: 64, align: 64, offset: 704)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_traceback", scope: !653, file: !652, line: 95, baseType: !45, size: 64, align: 64, offset: 768)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "exc_type", scope: !653, file: !652, line: 97, baseType: !45, size: 64, align: 64, offset: 832)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "exc_value", scope: !653, file: !652, line: 98, baseType: !45, size: 64, align: 64, offset: 896)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "exc_traceback", scope: !653, file: !652, line: 99, baseType: !45, size: 64, align: 64, offset: 960)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !653, file: !652, line: 101, baseType: !45, size: 64, align: 64, offset: 1024)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "gilstate_counter", scope: !653, file: !652, line: 103, baseType: !51, size: 32, align: 32, offset: 1088)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "async_exc", scope: !653, file: !652, line: 105, baseType: !45, size: 64, align: 64, offset: 1152)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "thread_id", scope: !653, file: !652, line: 106, baseType: !23, size: 64, align: 64, offset: 1216)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_nesting", scope: !653, file: !652, line: 108, baseType: !51, size: 32, align: 32, offset: 1280)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_later", scope: !653, file: !652, line: 109, baseType: !45, size: 64, align: 64, offset: 1344)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete", scope: !653, file: !652, line: 134, baseType: !344, size: 64, align: 64, offset: 1408)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete_data", scope: !653, file: !652, line: 135, baseType: !4, size: 64, align: 64, offset: 1472)
!708 = !DISubprogram(name: "buffered_flush_and_rewind_unlocked", scope: !394, file: !394, line: 838, type: !509, isLocal: true, isDefinition: true, scopeLine: 839, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*)* @buffered_flush_and_rewind_unlocked, variables: !709)
!709 = !{!710, !711, !712, !714}
!710 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !708, file: !394, line: 838, type: !392)
!711 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !708, file: !394, line: 840, type: !45)
!712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !713, file: !394, line: 845, type: !45)
!713 = distinct !DILexicalBlock(scope: !708, file: !394, line: 845, column: 8)
!714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !715, file: !394, line: 850, type: !406)
!715 = distinct !DILexicalBlock(scope: !716, file: !394, line: 847, column: 25)
!716 = distinct !DILexicalBlock(scope: !708, file: !394, line: 847, column: 9)
!717 = !DISubprogram(name: "_bufferedwriter_flush_unlocked", scope: !394, file: !394, line: 1933, type: !509, isLocal: true, isDefinition: true, scopeLine: 1934, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*)* @_bufferedwriter_flush_unlocked, variables: !718)
!718 = !{!719, !720, !721, !722}
!719 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !717, file: !394, line: 1933, type: !392)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "written", scope: !717, file: !394, line: 1935, type: !17)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !717, file: !394, line: 1936, type: !406)
!722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rewind", scope: !717, file: !394, line: 1936, type: !406)
!723 = !DISubprogram(name: "_bufferedwriter_raw_write", scope: !394, file: !394, line: 1884, type: !724, isLocal: true, isDefinition: true, scopeLine: 1885, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.buffered*, i8*, i64)* @_bufferedwriter_raw_write, variables: !726)
!724 = !DISubroutineType(types: !725)
!725 = !{!17, !392, !59, !17}
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !737, !741}
!727 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !723, file: !394, line: 1884, type: !392)
!728 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !723, file: !394, line: 1884, type: !59)
!729 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 3, scope: !723, file: !394, line: 1884, type: !17)
!730 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !723, file: !394, line: 1886, type: !243)
!731 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "memobj", scope: !723, file: !394, line: 1887, type: !45)
!732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !723, file: !394, line: 1887, type: !45)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !723, file: !394, line: 1888, type: !17)
!734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errnum", scope: !723, file: !394, line: 1889, type: !51)
!735 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !736, file: !394, line: 1906, type: !45)
!736 = distinct !DILexicalBlock(scope: !723, file: !394, line: 1906, column: 8)
!737 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !738, file: !394, line: 1913, type: !45)
!738 = distinct !DILexicalBlock(scope: !739, file: !394, line: 1913, column: 12)
!739 = distinct !DILexicalBlock(scope: !740, file: !394, line: 1909, column: 35)
!740 = distinct !DILexicalBlock(scope: !723, file: !394, line: 1909, column: 9)
!741 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !742, file: !394, line: 1918, type: !45)
!742 = distinct !DILexicalBlock(scope: !723, file: !394, line: 1918, column: 8)
!743 = !DISubprogram(name: "_set_BlockingIOError", scope: !394, file: !394, line: 673, type: !744, isLocal: true, isDefinition: true, scopeLine: 674, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i64)* @_set_BlockingIOError, variables: !746)
!744 = !DISubroutineType(types: !745)
!745 = !{null, !59, !17}
!746 = !{!747, !748, !749, !750, !752}
!747 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "msg", arg: 1, scope: !743, file: !394, line: 673, type: !59)
!748 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "written", arg: 2, scope: !743, file: !394, line: 673, type: !17)
!749 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !743, file: !394, line: 675, type: !45)
!750 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !751, file: !394, line: 685, type: !45)
!751 = distinct !DILexicalBlock(scope: !743, file: !394, line: 685, column: 8)
!752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !753, file: !394, line: 685, type: !45)
!753 = distinct !DILexicalBlock(scope: !754, file: !394, line: 685, column: 95)
!754 = distinct !DILexicalBlock(scope: !751, file: !394, line: 685, column: 61)
!755 = !DISubprogram(name: "_bufferedwriter_reset_buf", scope: !394, file: !394, line: 1840, type: !490, isLocal: true, isDefinition: true, scopeLine: 1841, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.buffered*)* @_bufferedwriter_reset_buf, variables: !756)
!756 = !{!757}
!757 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !755, file: !394, line: 1840, type: !392)
!758 = !DISubprogram(name: "_buffered_raw_seek", scope: !394, file: !394, line: 729, type: !759, isLocal: true, isDefinition: true, scopeLine: 730, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.buffered*, i64, i32)* @_buffered_raw_seek, variables: !761)
!759 = !DISubroutineType(types: !760)
!760 = !{!406, !392, !406, !51}
!761 = !{!762, !763, !764, !765, !766, !767, !768, !769, !773, !775, !777}
!762 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !758, file: !394, line: 729, type: !392)
!763 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "target", arg: 2, scope: !758, file: !394, line: 729, type: !406)
!764 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "whence", arg: 3, scope: !758, file: !394, line: 729, type: !51)
!765 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !758, file: !394, line: 731, type: !45)
!766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "posobj", scope: !758, file: !394, line: 731, type: !45)
!767 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "whenceobj", scope: !758, file: !394, line: 731, type: !45)
!768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !758, file: !394, line: 732, type: !406)
!769 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !770, file: !394, line: 739, type: !45)
!770 = distinct !DILexicalBlock(scope: !771, file: !394, line: 739, column: 12)
!771 = distinct !DILexicalBlock(scope: !772, file: !394, line: 738, column: 34)
!772 = distinct !DILexicalBlock(scope: !758, file: !394, line: 738, column: 9)
!773 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !774, file: !394, line: 744, type: !45)
!774 = distinct !DILexicalBlock(scope: !758, file: !394, line: 744, column: 8)
!775 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !776, file: !394, line: 745, type: !45)
!776 = distinct !DILexicalBlock(scope: !758, file: !394, line: 745, column: 8)
!777 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !778, file: !394, line: 749, type: !45)
!778 = distinct !DILexicalBlock(scope: !758, file: !394, line: 749, column: 8)
!779 = !DISubprogram(name: "_bufferedreader_reset_buf", scope: !394, file: !394, line: 1394, type: !490, isLocal: true, isDefinition: true, scopeLine: 1395, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.buffered*)* @_bufferedreader_reset_buf, variables: !780)
!780 = !{!781}
!781 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !779, file: !394, line: 1394, type: !392)
!782 = !DISubprogram(name: "_bufferedreader_fill_buffer", scope: !394, file: !394, line: 1477, type: !783, isLocal: true, isDefinition: true, scopeLine: 1478, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.buffered*)* @_bufferedreader_fill_buffer, variables: !785)
!783 = !DISubroutineType(types: !784)
!784 = !{!17, !392}
!785 = !{!786, !787, !788, !789}
!786 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !782, file: !394, line: 1477, type: !392)
!787 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !782, file: !394, line: 1479, type: !17)
!788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !782, file: !394, line: 1479, type: !17)
!789 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !782, file: !394, line: 1479, type: !17)
!790 = !DISubprogram(name: "_bufferedreader_raw_read", scope: !394, file: !394, line: 1436, type: !724, isLocal: true, isDefinition: true, scopeLine: 1437, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.buffered*, i8*, i64)* @_bufferedreader_raw_read, variables: !791)
!791 = !{!792, !793, !794, !795, !796, !797, !798, !799, !801, !805}
!792 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !790, file: !394, line: 1436, type: !392)
!793 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !790, file: !394, line: 1436, type: !59)
!794 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 3, scope: !790, file: !394, line: 1436, type: !17)
!795 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !790, file: !394, line: 1438, type: !243)
!796 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "memobj", scope: !790, file: !394, line: 1439, type: !45)
!797 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !790, file: !394, line: 1439, type: !45)
!798 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !790, file: !394, line: 1440, type: !17)
!799 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !800, file: !394, line: 1455, type: !45)
!800 = distinct !DILexicalBlock(scope: !790, file: !394, line: 1455, column: 8)
!801 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !802, file: !394, line: 1460, type: !45)
!802 = distinct !DILexicalBlock(scope: !803, file: !394, line: 1460, column: 12)
!803 = distinct !DILexicalBlock(scope: !804, file: !394, line: 1458, column: 35)
!804 = distinct !DILexicalBlock(scope: !790, file: !394, line: 1458, column: 9)
!805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !806, file: !394, line: 1464, type: !45)
!806 = distinct !DILexicalBlock(scope: !790, file: !394, line: 1464, column: 8)
!807 = !DISubprogram(name: "buffered_detach", scope: !394, file: !394, line: 569, type: !808, isLocal: true, isDefinition: true, scopeLine: 570, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_detach, variables: !810)
!808 = !DISubroutineType(types: !809)
!809 = !{!45, !392, !45}
!810 = !{!811, !812, !813, !814, !815}
!811 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !807, file: !394, line: 569, type: !392)
!812 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !807, file: !394, line: 569, type: !45)
!813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "raw", scope: !807, file: !394, line: 571, type: !45)
!814 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !807, file: !394, line: 571, type: !45)
!815 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !816, file: !394, line: 576, type: !45)
!816 = distinct !DILexicalBlock(scope: !807, file: !394, line: 576, column: 8)
!817 = !DISubprogram(name: "buffered_simple_flush", scope: !394, file: !394, line: 475, type: !808, isLocal: true, isDefinition: true, scopeLine: 476, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_simple_flush, variables: !818)
!818 = !{!819, !820}
!819 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !817, file: !394, line: 475, type: !392)
!820 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !817, file: !394, line: 475, type: !45)
!821 = !DISubprogram(name: "buffered_close", scope: !394, file: !394, line: 503, type: !808, isLocal: true, isDefinition: true, scopeLine: 504, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_close, variables: !822)
!822 = !{!823, !824, !825, !826, !827, !828, !829, !830, !833, !836, !839, !845, !849, !851, !853, !855}
!823 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !821, file: !394, line: 503, type: !392)
!824 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !821, file: !394, line: 503, type: !45)
!825 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !821, file: !394, line: 505, type: !45)
!826 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exc", scope: !821, file: !394, line: 505, type: !45)
!827 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !821, file: !394, line: 505, type: !45)
!828 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tb", scope: !821, file: !394, line: 505, type: !45)
!829 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !821, file: !394, line: 506, type: !51)
!830 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !831, file: !394, line: 522, type: !45)
!831 = distinct !DILexicalBlock(scope: !832, file: !394, line: 521, column: 27)
!832 = distinct !DILexicalBlock(scope: !821, file: !394, line: 521, column: 9)
!833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !834, file: !394, line: 524, type: !45)
!834 = distinct !DILexicalBlock(scope: !835, file: !394, line: 524, column: 16)
!835 = distinct !DILexicalBlock(scope: !831, file: !394, line: 523, column: 13)
!836 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !837, file: !394, line: 536, type: !45)
!837 = distinct !DILexicalBlock(scope: !838, file: !394, line: 536, column: 12)
!838 = distinct !DILexicalBlock(scope: !821, file: !394, line: 533, column: 9)
!839 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !840, file: !394, line: 547, type: !45)
!840 = distinct !DILexicalBlock(scope: !841, file: !394, line: 547, column: 16)
!841 = distinct !DILexicalBlock(scope: !842, file: !394, line: 546, column: 32)
!842 = distinct !DILexicalBlock(scope: !843, file: !394, line: 546, column: 13)
!843 = distinct !DILexicalBlock(scope: !844, file: !394, line: 545, column: 28)
!844 = distinct !DILexicalBlock(scope: !821, file: !394, line: 545, column: 9)
!845 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !846, file: !394, line: 547, type: !45)
!846 = distinct !DILexicalBlock(scope: !847, file: !394, line: 547, column: 109)
!847 = distinct !DILexicalBlock(scope: !848, file: !394, line: 547, column: 84)
!848 = distinct !DILexicalBlock(scope: !840, file: !394, line: 547, column: 61)
!849 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val2", scope: !850, file: !394, line: 551, type: !45)
!850 = distinct !DILexicalBlock(scope: !842, file: !394, line: 550, column: 14)
!851 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !852, file: !394, line: 552, type: !45)
!852 = distinct !DILexicalBlock(scope: !850, file: !394, line: 552, column: 16)
!853 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !854, file: !394, line: 553, type: !45)
!854 = distinct !DILexicalBlock(scope: !850, file: !394, line: 553, column: 16)
!855 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !856, file: !394, line: 553, type: !45)
!856 = distinct !DILexicalBlock(scope: !857, file: !394, line: 553, column: 102)
!857 = distinct !DILexicalBlock(scope: !854, file: !394, line: 553, column: 68)
!858 = !DISubprogram(name: "buffered_seekable", scope: !394, file: !394, line: 587, type: !808, isLocal: true, isDefinition: true, scopeLine: 588, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_seekable, variables: !859)
!859 = !{!860, !861}
!860 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !858, file: !394, line: 587, type: !392)
!861 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !858, file: !394, line: 587, type: !45)
!862 = !DISubprogram(name: "buffered_readable", scope: !394, file: !394, line: 594, type: !808, isLocal: true, isDefinition: true, scopeLine: 595, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_readable, variables: !863)
!863 = !{!864, !865}
!864 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !862, file: !394, line: 594, type: !392)
!865 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !862, file: !394, line: 594, type: !45)
!866 = !DISubprogram(name: "buffered_writable", scope: !394, file: !394, line: 601, type: !808, isLocal: true, isDefinition: true, scopeLine: 602, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_writable, variables: !867)
!867 = !{!868, !869}
!868 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !866, file: !394, line: 601, type: !392)
!869 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !866, file: !394, line: 601, type: !45)
!870 = !DISubprogram(name: "buffered_fileno", scope: !394, file: !394, line: 624, type: !808, isLocal: true, isDefinition: true, scopeLine: 625, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_fileno, variables: !871)
!871 = !{!872, !873}
!872 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !870, file: !394, line: 624, type: !392)
!873 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !870, file: !394, line: 624, type: !45)
!874 = !DISubprogram(name: "buffered_isatty", scope: !394, file: !394, line: 631, type: !808, isLocal: true, isDefinition: true, scopeLine: 632, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_isatty, variables: !875)
!875 = !{!876, !877}
!876 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !874, file: !394, line: 631, type: !392)
!877 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !874, file: !394, line: 631, type: !45)
!878 = !DISubprogram(name: "buffered_dealloc_warn", scope: !394, file: !394, line: 453, type: !808, isLocal: true, isDefinition: true, scopeLine: 454, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_dealloc_warn, variables: !879)
!879 = !{!880, !881, !882, !885}
!880 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !878, file: !394, line: 453, type: !392)
!881 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "source", arg: 2, scope: !878, file: !394, line: 453, type: !45)
!882 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !883, file: !394, line: 456, type: !45)
!883 = distinct !DILexicalBlock(scope: !884, file: !394, line: 455, column: 32)
!884 = distinct !DILexicalBlock(scope: !878, file: !394, line: 455, column: 9)
!885 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !886, file: !394, line: 459, type: !45)
!886 = distinct !DILexicalBlock(scope: !887, file: !394, line: 459, column: 16)
!887 = distinct !DILexicalBlock(scope: !883, file: !394, line: 458, column: 13)
!888 = !DISubprogram(name: "buffered_getstate", scope: !394, file: !394, line: 640, type: !808, isLocal: true, isDefinition: true, scopeLine: 641, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_getstate, variables: !889)
!889 = !{!890, !891}
!890 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !888, file: !394, line: 640, type: !392)
!891 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !888, file: !394, line: 640, type: !45)
!892 = !DISubprogram(name: "buffered_read", scope: !394, file: !394, line: 903, type: !808, isLocal: true, isDefinition: true, scopeLine: 904, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_read, variables: !893)
!893 = !{!894, !895, !896, !897, !898}
!894 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !892, file: !394, line: 903, type: !392)
!895 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !892, file: !394, line: 903, type: !45)
!896 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !892, file: !394, line: 905, type: !17)
!897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !892, file: !394, line: 906, type: !45)
!898 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !899, file: !394, line: 930, type: !45)
!899 = distinct !DILexicalBlock(scope: !900, file: !394, line: 930, column: 12)
!900 = distinct !DILexicalBlock(scope: !901, file: !394, line: 926, column: 10)
!901 = distinct !DILexicalBlock(scope: !892, file: !394, line: 920, column: 9)
!902 = !DISubprogram(name: "_bufferedreader_read_all", scope: !394, file: !394, line: 1494, type: !509, isLocal: true, isDefinition: true, scopeLine: 1495, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*)* @_bufferedreader_read_all, variables: !903)
!903 = !{!904, !905, !906, !907, !908, !909, !910, !914, !918, !923, !927, !929, !931, !934, !936, !939, !941}
!904 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !902, file: !394, line: 1494, type: !392)
!905 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "current_size", scope: !902, file: !394, line: 1496, type: !17)
!906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !902, file: !394, line: 1497, type: !45)
!907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !902, file: !394, line: 1497, type: !45)
!908 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !902, file: !394, line: 1497, type: !45)
!909 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chunks", scope: !902, file: !394, line: 1497, type: !45)
!910 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !911, file: !394, line: 1513, type: !45)
!911 = distinct !DILexicalBlock(scope: !912, file: !394, line: 1513, column: 12)
!912 = distinct !DILexicalBlock(scope: !913, file: !394, line: 1509, column: 25)
!913 = distinct !DILexicalBlock(scope: !902, file: !394, line: 1509, column: 9)
!914 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !915, file: !394, line: 1513, type: !45)
!915 = distinct !DILexicalBlock(scope: !916, file: !394, line: 1513, column: 105)
!916 = distinct !DILexicalBlock(scope: !917, file: !394, line: 1513, column: 80)
!917 = distinct !DILexicalBlock(scope: !911, file: !394, line: 1513, column: 57)
!918 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !919, file: !394, line: 1553, type: !45)
!919 = distinct !DILexicalBlock(scope: !920, file: !394, line: 1553, column: 16)
!920 = distinct !DILexicalBlock(scope: !921, file: !394, line: 1550, column: 19)
!921 = distinct !DILexicalBlock(scope: !922, file: !394, line: 1550, column: 13)
!922 = distinct !DILexicalBlock(scope: !902, file: !394, line: 1549, column: 15)
!923 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !924, file: !394, line: 1553, type: !45)
!924 = distinct !DILexicalBlock(scope: !925, file: !394, line: 1553, column: 111)
!925 = distinct !DILexicalBlock(scope: !926, file: !394, line: 1553, column: 85)
!926 = distinct !DILexicalBlock(scope: !919, file: !394, line: 1553, column: 62)
!927 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !928, file: !394, line: 1581, type: !45)
!928 = distinct !DILexicalBlock(scope: !902, file: !394, line: 1581, column: 8)
!929 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !930, file: !394, line: 1582, type: !45)
!930 = distinct !DILexicalBlock(scope: !902, file: !394, line: 1582, column: 8)
!931 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !932, file: !394, line: 1582, type: !45)
!932 = distinct !DILexicalBlock(scope: !933, file: !394, line: 1582, column: 96)
!933 = distinct !DILexicalBlock(scope: !930, file: !394, line: 1582, column: 62)
!934 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !935, file: !394, line: 1583, type: !45)
!935 = distinct !DILexicalBlock(scope: !902, file: !394, line: 1583, column: 8)
!936 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !937, file: !394, line: 1583, type: !45)
!937 = distinct !DILexicalBlock(scope: !938, file: !394, line: 1583, column: 95)
!938 = distinct !DILexicalBlock(scope: !935, file: !394, line: 1583, column: 61)
!939 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !940, file: !394, line: 1584, type: !45)
!940 = distinct !DILexicalBlock(scope: !902, file: !394, line: 1584, column: 8)
!941 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !942, file: !394, line: 1584, type: !45)
!942 = distinct !DILexicalBlock(scope: !943, file: !394, line: 1584, column: 98)
!943 = distinct !DILexicalBlock(scope: !940, file: !394, line: 1584, column: 64)
!944 = !DISubprogram(name: "_bufferedreader_read_fast", scope: !394, file: !394, line: 1591, type: !569, isLocal: true, isDefinition: true, scopeLine: 1592, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, i64)* @_bufferedreader_read_fast, variables: !945)
!945 = !{!946, !947, !948, !949}
!946 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !944, file: !394, line: 1591, type: !392)
!947 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 2, scope: !944, file: !394, line: 1591, type: !17)
!948 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "current_size", scope: !944, file: !394, line: 1593, type: !17)
!949 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !950, file: !394, line: 1598, type: !45)
!950 = distinct !DILexicalBlock(scope: !951, file: !394, line: 1596, column: 28)
!951 = distinct !DILexicalBlock(scope: !944, file: !394, line: 1596, column: 9)
!952 = !DISubprogram(name: "_bufferedreader_read_generic", scope: !394, file: !394, line: 1610, type: !569, isLocal: true, isDefinition: true, scopeLine: 1611, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, i64)* @_bufferedreader_read_generic, variables: !953)
!953 = !{!954, !955, !956, !957, !958, !959, !960, !961, !964, !966, !968, !972, !974, !978, !980}
!954 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !952, file: !394, line: 1610, type: !392)
!955 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 2, scope: !952, file: !394, line: 1610, type: !17)
!956 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !952, file: !394, line: 1612, type: !45)
!957 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "current_size", scope: !952, file: !394, line: 1613, type: !17)
!958 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "remaining", scope: !952, file: !394, line: 1613, type: !17)
!959 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "written", scope: !952, file: !394, line: 1613, type: !17)
!960 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !952, file: !394, line: 1614, type: !59)
!961 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !962, file: !394, line: 1634, type: !45)
!962 = distinct !DILexicalBlock(scope: !963, file: !394, line: 1633, column: 25)
!963 = distinct !DILexicalBlock(scope: !952, file: !394, line: 1633, column: 9)
!964 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !965, file: !394, line: 1637, type: !45)
!965 = distinct !DILexicalBlock(scope: !962, file: !394, line: 1637, column: 12)
!966 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !967, file: !394, line: 1643, type: !17)
!967 = distinct !DILexicalBlock(scope: !952, file: !394, line: 1640, column: 27)
!968 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !969, file: !394, line: 1656, type: !45)
!969 = distinct !DILexicalBlock(scope: !970, file: !394, line: 1656, column: 16)
!970 = distinct !DILexicalBlock(scope: !971, file: !394, line: 1649, column: 32)
!971 = distinct !DILexicalBlock(scope: !967, file: !394, line: 1649, column: 13)
!972 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !973, file: !394, line: 1671, type: !17)
!973 = distinct !DILexicalBlock(scope: !952, file: !394, line: 1670, column: 65)
!974 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !975, file: !394, line: 1681, type: !45)
!975 = distinct !DILexicalBlock(scope: !976, file: !394, line: 1681, column: 16)
!976 = distinct !DILexicalBlock(scope: !977, file: !394, line: 1674, column: 32)
!977 = distinct !DILexicalBlock(scope: !973, file: !394, line: 1674, column: 13)
!978 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !979, file: !394, line: 1704, type: !45)
!979 = distinct !DILexicalBlock(scope: !952, file: !394, line: 1704, column: 8)
!980 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !981, file: !394, line: 1704, type: !45)
!981 = distinct !DILexicalBlock(scope: !982, file: !394, line: 1704, column: 95)
!982 = distinct !DILexicalBlock(scope: !979, file: !394, line: 1704, column: 61)
!983 = !DISubprogram(name: "buffered_peek", scope: !394, file: !394, line: 876, type: !808, isLocal: true, isDefinition: true, scopeLine: 877, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_peek, variables: !984)
!984 = !{!985, !986, !987, !988, !989, !993}
!985 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !983, file: !394, line: 876, type: !392)
!986 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !983, file: !394, line: 876, type: !45)
!987 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !983, file: !394, line: 878, type: !17)
!988 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !983, file: !394, line: 879, type: !45)
!989 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !990, file: !394, line: 893, type: !45)
!990 = distinct !DILexicalBlock(scope: !991, file: !394, line: 893, column: 12)
!991 = distinct !DILexicalBlock(scope: !992, file: !394, line: 889, column: 25)
!992 = distinct !DILexicalBlock(scope: !983, file: !394, line: 889, column: 9)
!993 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !994, file: !394, line: 893, type: !45)
!994 = distinct !DILexicalBlock(scope: !995, file: !394, line: 893, column: 105)
!995 = distinct !DILexicalBlock(scope: !996, file: !394, line: 893, column: 80)
!996 = distinct !DILexicalBlock(scope: !990, file: !394, line: 893, column: 57)
!997 = !DISubprogram(name: "_bufferedreader_peek_unlocked", scope: !394, file: !394, line: 1709, type: !509, isLocal: true, isDefinition: true, scopeLine: 1710, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*)* @_bufferedreader_peek_unlocked, variables: !998)
!998 = !{!999, !1000, !1001}
!999 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !997, file: !394, line: 1709, type: !392)
!1000 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "have", scope: !997, file: !394, line: 1711, type: !17)
!1001 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !997, file: !394, line: 1711, type: !17)
!1002 = !DISubprogram(name: "buffered_read1", scope: !394, file: !394, line: 941, type: !808, isLocal: true, isDefinition: true, scopeLine: 942, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_read1, variables: !1003)
!1003 = !{!1004, !1005, !1006, !1007, !1008, !1009, !1010, !1014}
!1004 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1002, file: !394, line: 941, type: !392)
!1005 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1002, file: !394, line: 941, type: !45)
!1006 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1002, file: !394, line: 943, type: !17)
!1007 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "have", scope: !1002, file: !394, line: 943, type: !17)
!1008 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1002, file: !394, line: 943, type: !17)
!1009 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1002, file: !394, line: 944, type: !45)
!1010 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1011, file: !394, line: 973, type: !45)
!1011 = distinct !DILexicalBlock(scope: !1012, file: !394, line: 973, column: 12)
!1012 = distinct !DILexicalBlock(scope: !1013, file: !394, line: 972, column: 137)
!1013 = distinct !DILexicalBlock(scope: !1002, file: !394, line: 972, column: 9)
!1014 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1015, file: !394, line: 980, type: !45)
!1015 = distinct !DILexicalBlock(scope: !1016, file: !394, line: 980, column: 12)
!1016 = distinct !DILexicalBlock(scope: !1017, file: !394, line: 979, column: 18)
!1017 = distinct !DILexicalBlock(scope: !1002, file: !394, line: 979, column: 9)
!1018 = !DISubprogram(name: "buffered_readinto", scope: !394, file: !394, line: 991, type: !808, isLocal: true, isDefinition: true, scopeLine: 992, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_readinto, variables: !1019)
!1019 = !{!1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1031}
!1020 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1018, file: !394, line: 991, type: !392)
!1021 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1018, file: !394, line: 991, type: !45)
!1022 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1018, file: !394, line: 993, type: !243)
!1023 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1018, file: !394, line: 994, type: !17)
!1024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "written", scope: !1018, file: !394, line: 994, type: !17)
!1025 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "remaining", scope: !1018, file: !394, line: 994, type: !17)
!1026 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1018, file: !394, line: 995, type: !45)
!1027 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1028, file: !394, line: 1022, type: !45)
!1028 = distinct !DILexicalBlock(scope: !1029, file: !394, line: 1022, column: 12)
!1029 = distinct !DILexicalBlock(scope: !1030, file: !394, line: 1018, column: 25)
!1030 = distinct !DILexicalBlock(scope: !1018, file: !394, line: 1018, column: 9)
!1031 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1032, file: !394, line: 1022, type: !45)
!1032 = distinct !DILexicalBlock(scope: !1033, file: !394, line: 1022, column: 105)
!1033 = distinct !DILexicalBlock(scope: !1034, file: !394, line: 1022, column: 80)
!1034 = distinct !DILexicalBlock(scope: !1028, file: !394, line: 1022, column: 57)
!1035 = !DISubprogram(name: "buffered_readline", scope: !394, file: !394, line: 1179, type: !808, isLocal: true, isDefinition: true, scopeLine: 1180, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_readline, variables: !1036)
!1036 = !{!1037, !1038, !1039}
!1037 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1035, file: !394, line: 1179, type: !392)
!1038 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1035, file: !394, line: 1179, type: !45)
!1039 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "limit", scope: !1035, file: !394, line: 1181, type: !17)
!1040 = !DISubprogram(name: "buffered_seek", scope: !394, file: !394, line: 1205, type: !808, isLocal: true, isDefinition: true, scopeLine: 1206, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_seek, variables: !1041)
!1041 = !{!1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1052, !1053, !1056, !1060}
!1042 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1040, file: !394, line: 1205, type: !392)
!1043 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1040, file: !394, line: 1205, type: !45)
!1044 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "target", scope: !1040, file: !394, line: 1207, type: !406)
!1045 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1040, file: !394, line: 1207, type: !406)
!1046 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "whence", scope: !1040, file: !394, line: 1208, type: !51)
!1047 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "targetobj", scope: !1040, file: !394, line: 1209, type: !45)
!1048 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1040, file: !394, line: 1209, type: !45)
!1049 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "current", scope: !1050, file: !394, line: 1246, type: !406)
!1050 = distinct !DILexicalBlock(scope: !1051, file: !394, line: 1245, column: 61)
!1051 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1245, column: 9)
!1052 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "avail", scope: !1050, file: !394, line: 1246, type: !406)
!1053 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !1054, file: !394, line: 1256, type: !406)
!1054 = distinct !DILexicalBlock(scope: !1055, file: !394, line: 1255, column: 24)
!1055 = distinct !DILexicalBlock(scope: !1050, file: !394, line: 1255, column: 13)
!1056 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1057, file: !394, line: 1276, type: !45)
!1057 = distinct !DILexicalBlock(scope: !1058, file: !394, line: 1276, column: 12)
!1058 = distinct !DILexicalBlock(scope: !1059, file: !394, line: 1272, column: 25)
!1059 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1272, column: 9)
!1060 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1061, file: !394, line: 1276, type: !45)
!1061 = distinct !DILexicalBlock(scope: !1062, file: !394, line: 1276, column: 105)
!1062 = distinct !DILexicalBlock(scope: !1063, file: !394, line: 1276, column: 80)
!1063 = distinct !DILexicalBlock(scope: !1057, file: !394, line: 1276, column: 57)
!1064 = !DISubprogram(name: "_buffered_raw_tell", scope: !394, file: !394, line: 708, type: !1065, isLocal: true, isDefinition: true, scopeLine: 709, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.buffered*)* @_buffered_raw_tell, variables: !1067)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!406, !392}
!1067 = !{!1068, !1069, !1070, !1071}
!1068 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1064, file: !394, line: 708, type: !392)
!1069 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1064, file: !394, line: 710, type: !406)
!1070 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1064, file: !394, line: 711, type: !45)
!1071 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1072, file: !394, line: 716, type: !45)
!1072 = distinct !DILexicalBlock(scope: !1064, file: !394, line: 716, column: 8)
!1073 = !DISubprogram(name: "buffered_tell", scope: !394, file: !394, line: 1191, type: !808, isLocal: true, isDefinition: true, scopeLine: 1192, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_tell, variables: !1074)
!1074 = !{!1075, !1076, !1077}
!1075 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1073, file: !394, line: 1191, type: !392)
!1076 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1073, file: !394, line: 1191, type: !45)
!1077 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !1073, file: !394, line: 1193, type: !406)
!1078 = !DISubprogram(name: "buffered_truncate", scope: !394, file: !394, line: 1297, type: !808, isLocal: true, isDefinition: true, scopeLine: 1298, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_truncate, variables: !1079)
!1079 = !{!1080, !1081, !1082, !1083, !1084, !1088}
!1080 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1078, file: !394, line: 1297, type: !392)
!1081 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1078, file: !394, line: 1297, type: !45)
!1082 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !1078, file: !394, line: 1299, type: !45)
!1083 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1078, file: !394, line: 1300, type: !45)
!1084 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1085, file: !394, line: 1314, type: !45)
!1085 = distinct !DILexicalBlock(scope: !1086, file: !394, line: 1314, column: 12)
!1086 = distinct !DILexicalBlock(scope: !1087, file: !394, line: 1310, column: 25)
!1087 = distinct !DILexicalBlock(scope: !1078, file: !394, line: 1310, column: 9)
!1088 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1089, file: !394, line: 1314, type: !45)
!1089 = distinct !DILexicalBlock(scope: !1090, file: !394, line: 1314, column: 105)
!1090 = distinct !DILexicalBlock(scope: !1091, file: !394, line: 1314, column: 80)
!1091 = distinct !DILexicalBlock(scope: !1085, file: !394, line: 1314, column: 57)
!1092 = !DISubprogram(name: "buffered_sizeof", scope: !394, file: !394, line: 422, type: !1093, isLocal: true, isDefinition: true, scopeLine: 423, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, i8*)* @buffered_sizeof, variables: !1095)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!45, !392, !4}
!1095 = !{!1096, !1097, !1098}
!1096 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1092, file: !394, line: 422, type: !392)
!1097 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unused", arg: 2, scope: !1092, file: !394, line: 422, type: !4)
!1098 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1092, file: !394, line: 424, type: !17)
!1099 = !DISubprogram(name: "buffered_closed_get", scope: !394, file: !394, line: 496, type: !1093, isLocal: true, isDefinition: true, scopeLine: 497, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, i8*)* @buffered_closed_get, variables: !1100)
!1100 = !{!1101, !1102}
!1101 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1099, file: !394, line: 496, type: !392)
!1102 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1099, file: !394, line: 496, type: !4)
!1103 = !DISubprogram(name: "buffered_name_get", scope: !394, file: !394, line: 608, type: !1093, isLocal: true, isDefinition: true, scopeLine: 609, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, i8*)* @buffered_name_get, variables: !1104)
!1104 = !{!1105, !1106}
!1105 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1103, file: !394, line: 608, type: !392)
!1106 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1103, file: !394, line: 608, type: !4)
!1107 = !DISubprogram(name: "buffered_mode_get", scope: !394, file: !394, line: 615, type: !1093, isLocal: true, isDefinition: true, scopeLine: 616, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, i8*)* @buffered_mode_get, variables: !1108)
!1108 = !{!1109, !1110}
!1109 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1107, file: !394, line: 615, type: !392)
!1110 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1107, file: !394, line: 615, type: !4)
!1111 = !DISubprogram(name: "bufferedreader_init", scope: !394, file: !394, line: 1400, type: !1112, isLocal: true, isDefinition: true, scopeLine: 1401, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.buffered*, %struct._object*, %struct._object*)* @bufferedreader_init, variables: !1114)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!51, !392, !45, !45}
!1114 = !{!1115, !1116, !1117, !1118, !1122, !1123, !1124, !1126}
!1115 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1111, file: !394, line: 1400, type: !392)
!1116 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1111, file: !394, line: 1400, type: !45)
!1117 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1111, file: !394, line: 1400, type: !45)
!1118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !1111, file: !394, line: 1402, type: !1119)
!1119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !59, size: 192, align: 64, elements: !1120)
!1120 = !{!1121}
!1121 = !DISubrange(count: 3)
!1122 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer_size", scope: !1111, file: !394, line: 1403, type: !17)
!1123 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "raw", scope: !1111, file: !394, line: 1404, type: !45)
!1124 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1125, file: !394, line: 1417, type: !45)
!1125 = distinct !DILexicalBlock(scope: !1111, file: !394, line: 1417, column: 8)
!1126 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1127, file: !394, line: 1417, type: !45)
!1127 = distinct !DILexicalBlock(scope: !1128, file: !394, line: 1417, column: 113)
!1128 = distinct !DILexicalBlock(scope: !1129, file: !394, line: 1417, column: 82)
!1129 = distinct !DILexicalBlock(scope: !1125, file: !394, line: 1417, column: 59)
!1130 = !DISubprogram(name: "_buffered_init", scope: !394, file: !394, line: 762, type: !535, isLocal: true, isDefinition: true, scopeLine: 763, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.buffered*)* @_buffered_init, variables: !1131)
!1131 = !{!1132, !1133}
!1132 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1130, file: !394, line: 762, type: !392)
!1133 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1130, file: !394, line: 764, type: !17)
!1134 = !DISubprogram(name: "bufferedwriter_write", scope: !394, file: !394, line: 1982, type: !808, isLocal: true, isDefinition: true, scopeLine: 1983, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @bufferedwriter_write, variables: !1135)
!1135 = !{!1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1147, !1149, !1153}
!1136 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1134, file: !394, line: 1982, type: !392)
!1137 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1134, file: !394, line: 1982, type: !45)
!1138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1134, file: !394, line: 1984, type: !45)
!1139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1134, file: !394, line: 1985, type: !243)
!1140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "written", scope: !1134, file: !394, line: 1986, type: !17)
!1141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "avail", scope: !1134, file: !394, line: 1986, type: !17)
!1142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "remaining", scope: !1134, file: !394, line: 1986, type: !17)
!1143 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !1134, file: !394, line: 1987, type: !406)
!1144 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w", scope: !1145, file: !394, line: 2026, type: !254)
!1145 = distinct !DILexicalBlock(scope: !1146, file: !394, line: 2025, column: 28)
!1146 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 2025, column: 9)
!1147 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1148, file: !394, line: 2062, type: !45)
!1148 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 2062, column: 8)
!1149 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1150, file: !394, line: 2062, type: !45)
!1150 = distinct !DILexicalBlock(scope: !1151, file: !394, line: 2062, column: 101)
!1151 = distinct !DILexicalBlock(scope: !1152, file: !394, line: 2062, column: 76)
!1152 = distinct !DILexicalBlock(scope: !1148, file: !394, line: 2062, column: 53)
!1153 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1154, file: !394, line: 2081, type: !17)
!1154 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 2080, column: 43)
!1155 = !DISubprogram(name: "_buffered_check_blocking_error", scope: !394, file: !394, line: 691, type: !1156, isLocal: true, isDefinition: true, scopeLine: 692, flags: DIFlagPrototyped, isOptimized: true, function: i64* ()* @_buffered_check_blocking_error, variables: !1158)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!254}
!1158 = !{!1159, !1160, !1161, !1162}
!1159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !1155, file: !394, line: 693, type: !45)
!1160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1155, file: !394, line: 693, type: !45)
!1161 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tb", scope: !1155, file: !394, line: 693, type: !45)
!1162 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !1155, file: !394, line: 694, type: !391)
!1163 = !DISubprogram(name: "buffered_flush", scope: !394, file: !394, line: 860, type: !808, isLocal: true, isDefinition: true, scopeLine: 861, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._object*)* @buffered_flush, variables: !1164)
!1164 = !{!1165, !1166, !1167}
!1165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1163, file: !394, line: 860, type: !392)
!1166 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1163, file: !394, line: 860, type: !45)
!1167 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1163, file: !394, line: 862, type: !45)
!1168 = !DISubprogram(name: "bufferedwriter_init", scope: !394, file: !394, line: 1847, type: !1112, isLocal: true, isDefinition: true, scopeLine: 1848, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.buffered*, %struct._object*, %struct._object*)* @bufferedwriter_init, variables: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1174, !1175, !1176, !1178}
!1170 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1168, file: !394, line: 1847, type: !392)
!1171 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1168, file: !394, line: 1847, type: !45)
!1172 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1168, file: !394, line: 1847, type: !45)
!1173 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !1168, file: !394, line: 1849, type: !1119)
!1174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer_size", scope: !1168, file: !394, line: 1850, type: !17)
!1175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "raw", scope: !1168, file: !394, line: 1851, type: !45)
!1176 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1177, file: !394, line: 1864, type: !45)
!1177 = distinct !DILexicalBlock(scope: !1168, file: !394, line: 1864, column: 8)
!1178 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1179, file: !394, line: 1864, type: !45)
!1179 = distinct !DILexicalBlock(scope: !1180, file: !394, line: 1864, column: 113)
!1180 = distinct !DILexicalBlock(scope: !1181, file: !394, line: 1864, column: 82)
!1181 = distinct !DILexicalBlock(scope: !1177, file: !394, line: 1864, column: 59)
!1182 = !DISubprogram(name: "bufferedrwpair_dealloc", scope: !394, file: !394, line: 2296, type: !1183, isLocal: true, isDefinition: true, scopeLine: 2297, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.rwpair*)* @bufferedrwpair_dealloc, variables: !1194)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{null, !1185}
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwpair", file: !394, line: 2246, baseType: !1187)
!1187 = !DICompositeType(tag: DW_TAG_structure_type, file: !394, line: 2240, size: 384, align: 64, elements: !1188)
!1188 = !{!1189, !1190, !1191, !1192, !1193}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1187, file: !394, line: 2241, baseType: !12, size: 128, align: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "reader", scope: !1187, file: !394, line: 2242, baseType: !392, size: 64, align: 64, offset: 128)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !1187, file: !394, line: 2243, baseType: !392, size: 64, align: 64, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !1187, file: !394, line: 2244, baseType: !45, size: 64, align: 64, offset: 256)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "weakreflist", scope: !1187, file: !394, line: 2245, baseType: !45, size: 64, align: 64, offset: 320)
!1194 = !{!1195, !1196, !1198, !1200, !1204, !1206, !1210, !1212}
!1195 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1182, file: !394, line: 2296, type: !1185)
!1196 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !1197, file: !394, line: 2298, type: !377)
!1197 = distinct !DILexicalBlock(scope: !1182, file: !394, line: 2298, column: 8)
!1198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1199, file: !394, line: 2299, type: !45)
!1199 = distinct !DILexicalBlock(scope: !1182, file: !394, line: 2299, column: 8)
!1200 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1201, file: !394, line: 2299, type: !45)
!1201 = distinct !DILexicalBlock(scope: !1202, file: !394, line: 2299, column: 119)
!1202 = distinct !DILexicalBlock(scope: !1203, file: !394, line: 2299, column: 85)
!1203 = distinct !DILexicalBlock(scope: !1199, file: !394, line: 2299, column: 62)
!1204 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1205, file: !394, line: 2300, type: !45)
!1205 = distinct !DILexicalBlock(scope: !1182, file: !394, line: 2300, column: 8)
!1206 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1207, file: !394, line: 2300, type: !45)
!1207 = distinct !DILexicalBlock(scope: !1208, file: !394, line: 2300, column: 119)
!1208 = distinct !DILexicalBlock(scope: !1209, file: !394, line: 2300, column: 85)
!1209 = distinct !DILexicalBlock(scope: !1205, file: !394, line: 2300, column: 62)
!1210 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1211, file: !394, line: 2301, type: !45)
!1211 = distinct !DILexicalBlock(scope: !1182, file: !394, line: 2301, column: 8)
!1212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1213, file: !394, line: 2301, type: !45)
!1213 = distinct !DILexicalBlock(scope: !1214, file: !394, line: 2301, column: 115)
!1214 = distinct !DILexicalBlock(scope: !1215, file: !394, line: 2301, column: 83)
!1215 = distinct !DILexicalBlock(scope: !1211, file: !394, line: 2301, column: 60)
!1216 = !DISubprogram(name: "bufferedrwpair_traverse", scope: !394, file: !394, line: 2280, type: !1217, isLocal: true, isDefinition: true, scopeLine: 2281, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.rwpair*, i32 (%struct._object*, i8*)*, i8*)* @bufferedrwpair_traverse, variables: !1219)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!51, !1185, !270, !4}
!1219 = !{!1220, !1221, !1222, !1223}
!1220 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1216, file: !394, line: 2280, type: !1185)
!1221 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1216, file: !394, line: 2280, type: !270)
!1222 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1216, file: !394, line: 2280, type: !4)
!1223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1224, file: !394, line: 2282, type: !51)
!1224 = distinct !DILexicalBlock(scope: !1225, file: !394, line: 2282, column: 26)
!1225 = distinct !DILexicalBlock(scope: !1226, file: !394, line: 2282, column: 14)
!1226 = distinct !DILexicalBlock(scope: !1216, file: !394, line: 2282, column: 8)
!1227 = !DISubprogram(name: "bufferedrwpair_clear", scope: !394, file: !394, line: 2287, type: !1228, isLocal: true, isDefinition: true, scopeLine: 2288, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.rwpair*)* @bufferedrwpair_clear, variables: !1230)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!51, !1185}
!1230 = !{!1231, !1232, !1234, !1238, !1240, !1244, !1246}
!1231 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1227, file: !394, line: 2287, type: !1185)
!1232 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1233, file: !394, line: 2289, type: !45)
!1233 = distinct !DILexicalBlock(scope: !1227, file: !394, line: 2289, column: 8)
!1234 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1235, file: !394, line: 2289, type: !45)
!1235 = distinct !DILexicalBlock(scope: !1236, file: !394, line: 2289, column: 119)
!1236 = distinct !DILexicalBlock(scope: !1237, file: !394, line: 2289, column: 85)
!1237 = distinct !DILexicalBlock(scope: !1233, file: !394, line: 2289, column: 62)
!1238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1239, file: !394, line: 2290, type: !45)
!1239 = distinct !DILexicalBlock(scope: !1227, file: !394, line: 2290, column: 8)
!1240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1241, file: !394, line: 2290, type: !45)
!1241 = distinct !DILexicalBlock(scope: !1242, file: !394, line: 2290, column: 119)
!1242 = distinct !DILexicalBlock(scope: !1243, file: !394, line: 2290, column: 85)
!1243 = distinct !DILexicalBlock(scope: !1239, file: !394, line: 2290, column: 62)
!1244 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1245, file: !394, line: 2291, type: !45)
!1245 = distinct !DILexicalBlock(scope: !1227, file: !394, line: 2291, column: 8)
!1246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1247, file: !394, line: 2291, type: !45)
!1247 = distinct !DILexicalBlock(scope: !1248, file: !394, line: 2291, column: 115)
!1248 = distinct !DILexicalBlock(scope: !1249, file: !394, line: 2291, column: 83)
!1249 = distinct !DILexicalBlock(scope: !1245, file: !394, line: 2291, column: 60)
!1250 = !DISubprogram(name: "bufferedrwpair_read", scope: !394, file: !394, line: 2327, type: !1251, isLocal: true, isDefinition: true, scopeLine: 2328, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_read, variables: !1253)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!45, !1185, !45}
!1253 = !{!1254, !1255}
!1254 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1250, file: !394, line: 2327, type: !1185)
!1255 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1250, file: !394, line: 2327, type: !45)
!1256 = !DISubprogram(name: "_forward_call", scope: !394, file: !394, line: 2306, type: !1257, isLocal: true, isDefinition: true, scopeLine: 2307, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.buffered*, %struct._Py_Identifier*, %struct._object*)* @_forward_call, variables: !1267)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!45, !392, !1259, !45}
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64, align: 64)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_Identifier", file: !13, line: 144, baseType: !1261)
!1261 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_Identifier", file: !13, line: 140, size: 192, align: 64, elements: !1262)
!1262 = !{!1263, !1265, !1266}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1261, file: !13, line: 141, baseType: !1264, size: 64, align: 64)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64, align: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1261, file: !13, line: 142, baseType: !35, size: 64, align: 64, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1261, file: !13, line: 143, baseType: !45, size: 64, align: 64, offset: 128)
!1267 = !{!1268, !1269, !1270, !1271, !1272, !1273}
!1268 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1256, file: !394, line: 2306, type: !392)
!1269 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 2, scope: !1256, file: !394, line: 2306, type: !1259)
!1270 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 3, scope: !1256, file: !394, line: 2306, type: !45)
!1271 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "func", scope: !1256, file: !394, line: 2308, type: !45)
!1272 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1256, file: !394, line: 2308, type: !45)
!1273 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1274, file: !394, line: 2322, type: !45)
!1274 = distinct !DILexicalBlock(scope: !1256, file: !394, line: 2322, column: 8)
!1275 = !DISubprogram(name: "bufferedrwpair_peek", scope: !394, file: !394, line: 2333, type: !1251, isLocal: true, isDefinition: true, scopeLine: 2334, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_peek, variables: !1276)
!1276 = !{!1277, !1278}
!1277 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1275, file: !394, line: 2333, type: !1185)
!1278 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1275, file: !394, line: 2333, type: !45)
!1279 = !DISubprogram(name: "bufferedrwpair_read1", scope: !394, file: !394, line: 2339, type: !1251, isLocal: true, isDefinition: true, scopeLine: 2340, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_read1, variables: !1280)
!1280 = !{!1281, !1282}
!1281 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1279, file: !394, line: 2339, type: !1185)
!1282 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1279, file: !394, line: 2339, type: !45)
!1283 = !DISubprogram(name: "bufferedrwpair_readinto", scope: !394, file: !394, line: 2345, type: !1251, isLocal: true, isDefinition: true, scopeLine: 2346, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_readinto, variables: !1284)
!1284 = !{!1285, !1286}
!1285 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1283, file: !394, line: 2345, type: !1185)
!1286 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1283, file: !394, line: 2345, type: !45)
!1287 = !DISubprogram(name: "bufferedrwpair_write", scope: !394, file: !394, line: 2351, type: !1251, isLocal: true, isDefinition: true, scopeLine: 2352, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_write, variables: !1288)
!1288 = !{!1289, !1290}
!1289 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1287, file: !394, line: 2351, type: !1185)
!1290 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1287, file: !394, line: 2351, type: !45)
!1291 = !DISubprogram(name: "bufferedrwpair_flush", scope: !394, file: !394, line: 2357, type: !1251, isLocal: true, isDefinition: true, scopeLine: 2358, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_flush, variables: !1292)
!1292 = !{!1293, !1294}
!1293 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1291, file: !394, line: 2357, type: !1185)
!1294 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1291, file: !394, line: 2357, type: !45)
!1295 = !DISubprogram(name: "bufferedrwpair_readable", scope: !394, file: !394, line: 2363, type: !1251, isLocal: true, isDefinition: true, scopeLine: 2364, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_readable, variables: !1296)
!1296 = !{!1297, !1298}
!1297 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1295, file: !394, line: 2363, type: !1185)
!1298 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1295, file: !394, line: 2363, type: !45)
!1299 = !DISubprogram(name: "bufferedrwpair_writable", scope: !394, file: !394, line: 2369, type: !1251, isLocal: true, isDefinition: true, scopeLine: 2370, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_writable, variables: !1300)
!1300 = !{!1301, !1302}
!1301 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1299, file: !394, line: 2369, type: !1185)
!1302 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1299, file: !394, line: 2369, type: !45)
!1303 = !DISubprogram(name: "bufferedrwpair_close", scope: !394, file: !394, line: 2375, type: !1251, isLocal: true, isDefinition: true, scopeLine: 2376, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_close, variables: !1304)
!1304 = !{!1305, !1306, !1307, !1308}
!1305 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1303, file: !394, line: 2375, type: !1185)
!1306 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1303, file: !394, line: 2375, type: !45)
!1307 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1303, file: !394, line: 2377, type: !45)
!1308 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1309, file: !394, line: 2380, type: !45)
!1309 = distinct !DILexicalBlock(scope: !1303, file: !394, line: 2380, column: 8)
!1310 = !DISubprogram(name: "bufferedrwpair_isatty", scope: !394, file: !394, line: 2386, type: !1251, isLocal: true, isDefinition: true, scopeLine: 2387, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.rwpair*, %struct._object*)* @bufferedrwpair_isatty, variables: !1311)
!1311 = !{!1312, !1313, !1314, !1315}
!1312 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1310, file: !394, line: 2386, type: !1185)
!1313 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1310, file: !394, line: 2386, type: !45)
!1314 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1310, file: !394, line: 2388, type: !45)
!1315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1316, file: !394, line: 2394, type: !45)
!1316 = distinct !DILexicalBlock(scope: !1310, file: !394, line: 2394, column: 8)
!1317 = !DISubprogram(name: "bufferedrwpair_closed_get", scope: !394, file: !394, line: 2400, type: !1318, isLocal: true, isDefinition: true, scopeLine: 2401, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.rwpair*, i8*)* @bufferedrwpair_closed_get, variables: !1320)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!45, !1185, !4}
!1320 = !{!1321, !1322}
!1321 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1317, file: !394, line: 2400, type: !1185)
!1322 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1317, file: !394, line: 2400, type: !4)
!1323 = !DISubprogram(name: "bufferedrwpair_init", scope: !394, file: !394, line: 2249, type: !1324, isLocal: true, isDefinition: true, scopeLine: 2250, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.rwpair*, %struct._object*, %struct._object*)* @bufferedrwpair_init, variables: !1326)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!51, !1185, !45, !45}
!1326 = !{!1327, !1328, !1329, !1330, !1331, !1332, !1333, !1337}
!1327 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1323, file: !394, line: 2249, type: !1185)
!1328 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1323, file: !394, line: 2249, type: !45)
!1329 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1323, file: !394, line: 2249, type: !45)
!1330 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reader", scope: !1323, file: !394, line: 2251, type: !45)
!1331 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "writer", scope: !1323, file: !394, line: 2251, type: !45)
!1332 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer_size", scope: !1323, file: !394, line: 2252, type: !17)
!1333 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1334, file: !394, line: 2272, type: !45)
!1334 = distinct !DILexicalBlock(scope: !1335, file: !394, line: 2272, column: 12)
!1335 = distinct !DILexicalBlock(scope: !1336, file: !394, line: 2271, column: 37)
!1336 = distinct !DILexicalBlock(scope: !1323, file: !394, line: 2271, column: 9)
!1337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1338, file: !394, line: 2272, type: !45)
!1338 = distinct !DILexicalBlock(scope: !1339, file: !394, line: 2272, column: 123)
!1339 = distinct !DILexicalBlock(scope: !1340, file: !394, line: 2272, column: 89)
!1340 = distinct !DILexicalBlock(scope: !1334, file: !394, line: 2272, column: 66)
!1341 = !DISubprogram(name: "bufferedrandom_init", scope: !394, file: !394, line: 2502, type: !1112, isLocal: true, isDefinition: true, scopeLine: 2503, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.buffered*, %struct._object*, %struct._object*)* @bufferedrandom_init, variables: !1342)
!1342 = !{!1343, !1344, !1345, !1346, !1347, !1348, !1349, !1351}
!1343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1341, file: !394, line: 2502, type: !392)
!1344 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1341, file: !394, line: 2502, type: !45)
!1345 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1341, file: !394, line: 2502, type: !45)
!1346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !1341, file: !394, line: 2504, type: !1119)
!1347 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer_size", scope: !1341, file: !394, line: 2505, type: !17)
!1348 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "raw", scope: !1341, file: !394, line: 2506, type: !45)
!1349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1350, file: !394, line: 2523, type: !45)
!1350 = distinct !DILexicalBlock(scope: !1341, file: !394, line: 2523, column: 8)
!1351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1352, file: !394, line: 2523, type: !45)
!1352 = distinct !DILexicalBlock(scope: !1353, file: !394, line: 2523, column: 113)
!1353 = distinct !DILexicalBlock(scope: !1354, file: !394, line: 2523, column: 82)
!1354 = distinct !DILexicalBlock(scope: !1350, file: !394, line: 2523, column: 59)
!1355 = !{!1356, !1357, !1358, !1359, !1360, !1361, !1362, !1366, !1371, !1375, !1379, !1383, !1384, !1388, !1389, !1393, !1395, !1396, !1399, !1404, !1405, !1409, !1413, !1414, !1415, !1419, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1436, !1440, !1444, !1445}
!1356 = !DIGlobalVariable(name: "PyBufferedIOBase_Type", scope: !0, file: !394, line: 174, type: !557, isLocal: false, isDefinition: true, variable: %struct._typeobject* @PyBufferedIOBase_Type)
!1357 = !DIGlobalVariable(name: "eintr_int", scope: !425, file: !394, line: 807, type: !45, isLocal: true, isDefinition: true, variable: %struct._object** @_PyIO_trap_eintr.eintr_int)
!1358 = !DIGlobalVariable(name: "PyBufferedReader_Type", scope: !0, file: !394, line: 1774, type: !557, isLocal: false, isDefinition: true, variable: %struct._typeobject* @PyBufferedReader_Type)
!1359 = !DIGlobalVariable(name: "PyBufferedWriter_Type", scope: !0, file: !394, line: 2166, type: !557, isLocal: false, isDefinition: true, variable: %struct._typeobject* @PyBufferedWriter_Type)
!1360 = !DIGlobalVariable(name: "PyBufferedRWPair_Type", scope: !0, file: !394, line: 2435, type: !557, isLocal: false, isDefinition: true, variable: %struct._typeobject* @PyBufferedRWPair_Type)
!1361 = !DIGlobalVariable(name: "PyBufferedRandom_Type", scope: !0, file: !394, line: 2584, type: !557, isLocal: false, isDefinition: true, variable: %struct._typeobject* @PyBufferedRandom_Type)
!1362 = !DIGlobalVariable(name: "bufferediobase_doc", scope: !0, file: !394, line: 33, type: !1363, isLocal: true, isDefinition: true, variable: [497 x i8]* @bufferediobase_doc)
!1363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 3976, align: 8, elements: !1364)
!1364 = !{!1365}
!1365 = !DISubrange(count: 497)
!1366 = !DIGlobalVariable(name: "bufferediobase_methods", scope: !0, file: !394, line: 165, type: !1367, isLocal: true, isDefinition: true, variable: [6 x %struct.PyMethodDef]* @bufferediobase_methods)
!1367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1368, size: 1536, align: 64, elements: !1369)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !288, line: 47, baseType: !287)
!1369 = !{!1370}
!1370 = !DISubrange(count: 6)
!1371 = !DIGlobalVariable(name: "bufferediobase_detach_doc", scope: !0, file: !394, line: 100, type: !1372, isLocal: true, isDefinition: true, variable: [147 x i8]* @bufferediobase_detach_doc)
!1372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 1176, align: 8, elements: !1373)
!1373 = !{!1374}
!1374 = !DISubrange(count: 147)
!1375 = !DIGlobalVariable(name: "bufferediobase_read_doc", scope: !0, file: !394, line: 112, type: !1376, isLocal: true, isDefinition: true, variable: [600 x i8]* @bufferediobase_read_doc)
!1376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 4800, align: 8, elements: !1377)
!1377 = !{!1378}
!1378 = !DISubrange(count: 600)
!1379 = !DIGlobalVariable(name: "bufferediobase_read1_doc", scope: !0, file: !394, line: 136, type: !1380, isLocal: true, isDefinition: true, variable: [182 x i8]* @bufferediobase_read1_doc)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 1456, align: 8, elements: !1381)
!1381 = !{!1382}
!1382 = !DISubrange(count: 182)
!1383 = !DIGlobalVariable(name: "PyId_read", scope: !0, file: !394, line: 23, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_read)
!1384 = !DIGlobalVariable(name: "bufferediobase_write_doc", scope: !0, file: !394, line: 149, type: !1385, isLocal: true, isDefinition: true, variable: [228 x i8]* @bufferediobase_write_doc)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 1824, align: 8, elements: !1386)
!1386 = !{!1387}
!1387 = !DISubrange(count: 228)
!1388 = !DIGlobalVariable(name: "PyId_name", scope: !0, file: !394, line: 21, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_name)
!1389 = !DIGlobalVariable(name: "bufferedreader_doc", scope: !0, file: !394, line: 1391, type: !1390, isLocal: true, isDefinition: true, variable: [69 x i8]* @bufferedreader_doc)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 552, align: 8, elements: !1391)
!1391 = !{!1392}
!1392 = !DISubrange(count: 69)
!1393 = !DIGlobalVariable(name: "bufferedreader_methods", scope: !0, file: !394, line: 1735, type: !1394, isLocal: true, isDefinition: true, variable: [20 x %struct.PyMethodDef]* @bufferedreader_methods)
!1394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1368, size: 5120, align: 64, elements: !107)
!1395 = !DIGlobalVariable(name: "PyId__dealloc_warn", scope: !0, file: !394, line: 17, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId__dealloc_warn)
!1396 = !DIGlobalVariable(name: "bufferedreader_members", scope: !0, file: !394, line: 1760, type: !1397, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMemberDef]* @bufferedreader_members)
!1397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 960, align: 64, elements: !1120)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemberDef", file: !298, line: 24, baseType: !297)
!1399 = !DIGlobalVariable(name: "bufferedreader_getset", scope: !0, file: !394, line: 1766, type: !1400, isLocal: true, isDefinition: true, variable: [4 x %struct.PyGetSetDef]* @bufferedreader_getset)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1401, size: 1280, align: 64, elements: !1402)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !308, line: 17, baseType: !307)
!1402 = !{!1403}
!1403 = !DISubrange(count: 4)
!1404 = !DIGlobalVariable(name: "PyId_mode", scope: !0, file: !394, line: 20, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_mode)
!1405 = !DIGlobalVariable(name: "bufferedwriter_doc", scope: !0, file: !394, line: 1831, type: !1406, isLocal: true, isDefinition: true, variable: [198 x i8]* @bufferedwriter_doc)
!1406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 1584, align: 8, elements: !1407)
!1407 = !{!1408}
!1408 = !DISubrange(count: 198)
!1409 = !DIGlobalVariable(name: "bufferedwriter_methods", scope: !0, file: !394, line: 2131, type: !1410, isLocal: true, isDefinition: true, variable: [16 x %struct.PyMethodDef]* @bufferedwriter_methods)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1368, size: 4096, align: 64, elements: !1411)
!1411 = !{!1412}
!1412 = !DISubrange(count: 16)
!1413 = !DIGlobalVariable(name: "bufferedwriter_members", scope: !0, file: !394, line: 2152, type: !1397, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMemberDef]* @bufferedwriter_members)
!1414 = !DIGlobalVariable(name: "bufferedwriter_getset", scope: !0, file: !394, line: 2158, type: !1400, isLocal: true, isDefinition: true, variable: [4 x %struct.PyGetSetDef]* @bufferedwriter_getset)
!1415 = !DIGlobalVariable(name: "bufferedrwpair_doc", scope: !0, file: !394, line: 2224, type: !1416, isLocal: true, isDefinition: true, variable: [376 x i8]* @bufferedrwpair_doc)
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 3008, align: 8, elements: !1417)
!1417 = !{!1418}
!1418 = !DISubrange(count: 376)
!1419 = !DIGlobalVariable(name: "bufferedrwpair_methods", scope: !0, file: !394, line: 2410, type: !1420, isLocal: true, isDefinition: true, variable: [12 x %struct.PyMethodDef]* @bufferedrwpair_methods)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1368, size: 3072, align: 64, elements: !1421)
!1421 = !{!1422}
!1422 = !DISubrange(count: 12)
!1423 = !DIGlobalVariable(name: "PyId_peek", scope: !0, file: !394, line: 22, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_peek)
!1424 = !DIGlobalVariable(name: "PyId_read1", scope: !0, file: !394, line: 24, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_read1)
!1425 = !DIGlobalVariable(name: "PyId_readinto", scope: !0, file: !394, line: 26, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_readinto)
!1426 = !DIGlobalVariable(name: "PyId_write", scope: !0, file: !394, line: 28, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_write)
!1427 = !DIGlobalVariable(name: "PyId_flush", scope: !0, file: !394, line: 18, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_flush)
!1428 = !DIGlobalVariable(name: "PyId_readable", scope: !0, file: !394, line: 25, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_readable)
!1429 = !DIGlobalVariable(name: "PyId_writable", scope: !0, file: !394, line: 27, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_writable)
!1430 = !DIGlobalVariable(name: "PyId_close", scope: !0, file: !394, line: 16, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_close)
!1431 = !DIGlobalVariable(name: "PyId_isatty", scope: !0, file: !394, line: 19, type: !1260, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_isatty)
!1432 = !DIGlobalVariable(name: "bufferedrwpair_getset", scope: !0, file: !394, line: 2430, type: !1433, isLocal: true, isDefinition: true, variable: [2 x %struct.PyGetSetDef]* @bufferedrwpair_getset)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1401, size: 640, align: 64, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 2)
!1436 = !DIGlobalVariable(name: "bufferedrandom_doc", scope: !0, file: !394, line: 2493, type: !1437, isLocal: true, isDefinition: true, variable: [216 x i8]* @bufferedrandom_doc)
!1437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 1728, align: 8, elements: !1438)
!1438 = !{!1439}
!1439 = !DISubrange(count: 216)
!1440 = !DIGlobalVariable(name: "bufferedrandom_methods", scope: !0, file: !394, line: 2543, type: !1441, isLocal: true, isDefinition: true, variable: [21 x %struct.PyMethodDef]* @bufferedrandom_methods)
!1441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1368, size: 5376, align: 64, elements: !1442)
!1442 = !{!1443}
!1443 = !DISubrange(count: 21)
!1444 = !DIGlobalVariable(name: "bufferedrandom_members", scope: !0, file: !394, line: 2570, type: !1397, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMemberDef]* @bufferedrandom_members)
!1445 = !DIGlobalVariable(name: "bufferedrandom_getset", scope: !0, file: !394, line: 2576, type: !1400, isLocal: true, isDefinition: true, variable: [4 x %struct.PyGetSetDef]* @bufferedrandom_getset)
!1446 = !{i32 2, !"Dwarf Version", i32 4}
!1447 = !{i32 2, !"Debug Info Version", i32 3}
!1448 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!1449 = !DILocation(line: 808, column: 5, scope: !425)
!1450 = !DIExpression()
!1451 = !DILocation(line: 808, column: 15, scope: !425)
!1452 = !DILocation(line: 808, column: 21, scope: !425)
!1453 = !DILocation(line: 808, column: 27, scope: !425)
!1454 = !DILocation(line: 809, column: 5, scope: !425)
!1455 = !DILocation(line: 809, column: 31, scope: !425)
!1456 = !DILocation(line: 811, column: 9, scope: !1457)
!1457 = distinct !DILexicalBlock(scope: !425, file: !394, line: 811, column: 9)
!1458 = !{!1459, !1459, i64 0}
!1459 = !{!"any pointer", !1460, i64 0}
!1460 = !{!"omnipotent char", !1461, i64 0}
!1461 = !{!"Simple C/C++ TBAA"}
!1462 = !DILocation(line: 811, column: 19, scope: !1457)
!1463 = !DILocation(line: 811, column: 9, scope: !425)
!1464 = !DILocation(line: 812, column: 21, scope: !1465)
!1465 = distinct !DILexicalBlock(scope: !1457, file: !394, line: 811, column: 34)
!1466 = !DILocation(line: 812, column: 19, scope: !1465)
!1467 = !DILocation(line: 814, column: 5, scope: !1465)
!1468 = !DILocation(line: 815, column: 33, scope: !1469)
!1469 = distinct !DILexicalBlock(scope: !425, file: !394, line: 815, column: 9)
!1470 = !DILocation(line: 815, column: 10, scope: !1469)
!1471 = !DILocation(line: 815, column: 9, scope: !425)
!1472 = !DILocation(line: 816, column: 9, scope: !1469)
!1473 = !DILocation(line: 817, column: 5, scope: !425)
!1474 = !DILocation(line: 818, column: 5, scope: !425)
!1475 = !DILocation(line: 819, column: 44, scope: !425)
!1476 = !DILocation(line: 819, column: 15, scope: !425)
!1477 = !DILocation(line: 819, column: 13, scope: !425)
!1478 = !DILocation(line: 821, column: 9, scope: !436)
!1479 = !DILocation(line: 821, column: 18, scope: !436)
!1480 = !{!1481, !1459, i64 64}
!1481 = !{!"", !1482, i64 0, !1459, i64 16, !1459, i64 24, !1459, i64 32, !1459, i64 40, !1459, i64 48, !1460, i64 56, !1459, i64 64, !1459, i64 72, !1459, i64 80, !1459, i64 88, !1483, i64 96}
!1482 = !{!"_object", !1483, i64 0, !1459, i64 8}
!1483 = !{!"long", !1460, i64 0}
!1484 = !DILocation(line: 821, column: 26, scope: !436)
!1485 = !DILocation(line: 821, column: 40, scope: !436)
!1486 = !DILocation(line: 822, column: 34, scope: !436)
!1487 = !DILocation(line: 822, column: 43, scope: !436)
!1488 = !DILocation(line: 822, column: 52, scope: !436)
!1489 = !DILocation(line: 822, column: 9, scope: !436)
!1490 = !DILocation(line: 822, column: 66, scope: !436)
!1491 = !DILocation(line: 821, column: 9, scope: !425)
!1492 = !DILocation(line: 823, column: 9, scope: !435)
!1493 = !DILocation(line: 823, column: 14, scope: !1494)
!1494 = !DILexicalBlockFile(scope: !434, file: !394, discriminator: 1)
!1495 = !DILocation(line: 823, column: 24, scope: !434)
!1496 = !DILocation(line: 823, column: 54, scope: !434)
!1497 = !DILocation(line: 823, column: 68, scope: !1498)
!1498 = distinct !DILexicalBlock(scope: !434, file: !394, line: 823, column: 65)
!1499 = !DILocation(line: 823, column: 85, scope: !1498)
!1500 = !DILocation(line: 823, column: 65, scope: !1498)
!1501 = !{!1482, !1483, i64 0}
!1502 = !DILocation(line: 823, column: 95, scope: !1498)
!1503 = !DILocation(line: 823, column: 65, scope: !434)
!1504 = !DILocation(line: 823, column: 65, scope: !1505)
!1505 = !DILexicalBlockFile(scope: !434, file: !394, discriminator: 2)
!1506 = !DILocation(line: 823, column: 126, scope: !1507)
!1507 = !DILexicalBlockFile(scope: !1498, file: !394, discriminator: 3)
!1508 = !DILocation(line: 823, column: 144, scope: !1498)
!1509 = !{!1482, !1459, i64 8}
!1510 = !DILocation(line: 823, column: 154, scope: !1498)
!1511 = !{!1512, !1459, i64 48}
!1512 = !{!"_typeobject", !1513, i64 0, !1459, i64 24, !1483, i64 32, !1483, i64 40, !1459, i64 48, !1459, i64 56, !1459, i64 64, !1459, i64 72, !1459, i64 80, !1459, i64 88, !1459, i64 96, !1459, i64 104, !1459, i64 112, !1459, i64 120, !1459, i64 128, !1459, i64 136, !1459, i64 144, !1459, i64 152, !1459, i64 160, !1483, i64 168, !1459, i64 176, !1459, i64 184, !1459, i64 192, !1459, i64 200, !1483, i64 208, !1459, i64 216, !1459, i64 224, !1459, i64 232, !1459, i64 240, !1459, i64 248, !1459, i64 256, !1459, i64 264, !1459, i64 272, !1459, i64 280, !1483, i64 288, !1459, i64 296, !1459, i64 304, !1459, i64 312, !1459, i64 320, !1459, i64 328, !1459, i64 336, !1459, i64 344, !1459, i64 352, !1459, i64 360, !1459, i64 368, !1459, i64 376, !1514, i64 384, !1459, i64 392}
!1513 = !{!"", !1482, i64 0, !1483, i64 16}
!1514 = !{!"int", !1460, i64 0}
!1515 = !DILocation(line: 823, column: 179, scope: !1498)
!1516 = !DILocation(line: 823, column: 110, scope: !1498)
!1517 = !DILocation(line: 823, column: 198, scope: !1518)
!1518 = !DILexicalBlockFile(scope: !435, file: !394, discriminator: 4)
!1519 = !DILocation(line: 823, column: 198, scope: !434)
!1520 = !DILocation(line: 823, column: 198, scope: !1521)
!1521 = !DILexicalBlockFile(scope: !434, file: !394, discriminator: 5)
!1522 = !DILocation(line: 824, column: 9, scope: !435)
!1523 = !DILocation(line: 824, column: 14, scope: !1524)
!1524 = !DILexicalBlockFile(scope: !438, file: !394, discriminator: 1)
!1525 = !DILocation(line: 824, column: 24, scope: !438)
!1526 = !DILocation(line: 824, column: 54, scope: !438)
!1527 = !DILocation(line: 824, column: 68, scope: !1528)
!1528 = distinct !DILexicalBlock(scope: !438, file: !394, line: 824, column: 65)
!1529 = !DILocation(line: 824, column: 85, scope: !1528)
!1530 = !DILocation(line: 824, column: 65, scope: !1528)
!1531 = !DILocation(line: 824, column: 95, scope: !1528)
!1532 = !DILocation(line: 824, column: 65, scope: !438)
!1533 = !DILocation(line: 824, column: 65, scope: !1534)
!1534 = !DILexicalBlockFile(scope: !438, file: !394, discriminator: 2)
!1535 = !DILocation(line: 824, column: 126, scope: !1536)
!1536 = !DILexicalBlockFile(scope: !1528, file: !394, discriminator: 3)
!1537 = !DILocation(line: 824, column: 144, scope: !1528)
!1538 = !DILocation(line: 824, column: 154, scope: !1528)
!1539 = !DILocation(line: 824, column: 179, scope: !1528)
!1540 = !DILocation(line: 824, column: 110, scope: !1528)
!1541 = !DILocation(line: 824, column: 198, scope: !1518)
!1542 = !DILocation(line: 824, column: 198, scope: !438)
!1543 = !DILocation(line: 824, column: 198, scope: !1544)
!1544 = !DILexicalBlockFile(scope: !438, file: !394, discriminator: 5)
!1545 = !DILocation(line: 825, column: 9, scope: !435)
!1546 = !DILocation(line: 825, column: 14, scope: !1547)
!1547 = !DILexicalBlockFile(scope: !440, file: !394, discriminator: 1)
!1548 = !DILocation(line: 825, column: 24, scope: !440)
!1549 = !DILocation(line: 825, column: 55, scope: !440)
!1550 = !DILocation(line: 825, column: 64, scope: !443)
!1551 = !DILocation(line: 825, column: 80, scope: !443)
!1552 = !DILocation(line: 825, column: 64, scope: !440)
!1553 = !DILocation(line: 825, column: 95, scope: !1554)
!1554 = !DILexicalBlockFile(scope: !443, file: !394, discriminator: 2)
!1555 = !DILocation(line: 825, column: 100, scope: !1556)
!1556 = !DILexicalBlockFile(scope: !442, file: !394, discriminator: 4)
!1557 = !DILocation(line: 825, column: 110, scope: !442)
!1558 = !DILocation(line: 825, column: 140, scope: !442)
!1559 = !DILocation(line: 825, column: 166, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !442, file: !394, line: 825, column: 163)
!1561 = !DILocation(line: 825, column: 183, scope: !1560)
!1562 = !DILocation(line: 825, column: 163, scope: !1560)
!1563 = !DILocation(line: 825, column: 193, scope: !1560)
!1564 = !DILocation(line: 825, column: 163, scope: !442)
!1565 = !DILocation(line: 825, column: 163, scope: !1566)
!1566 = !DILexicalBlockFile(scope: !442, file: !394, discriminator: 5)
!1567 = !DILocation(line: 825, column: 224, scope: !1568)
!1568 = !DILexicalBlockFile(scope: !1560, file: !394, discriminator: 6)
!1569 = !DILocation(line: 825, column: 242, scope: !1560)
!1570 = !DILocation(line: 825, column: 252, scope: !1560)
!1571 = !DILocation(line: 825, column: 277, scope: !1560)
!1572 = !DILocation(line: 825, column: 208, scope: !1560)
!1573 = !DILocation(line: 825, column: 296, scope: !1574)
!1574 = !DILexicalBlockFile(scope: !443, file: !394, discriminator: 7)
!1575 = !DILocation(line: 825, column: 296, scope: !442)
!1576 = !DILocation(line: 825, column: 296, scope: !1577)
!1577 = !DILexicalBlockFile(scope: !442, file: !394, discriminator: 8)
!1578 = !DILocation(line: 825, column: 296, scope: !1579)
!1579 = !DILexicalBlockFile(scope: !442, file: !394, discriminator: 9)
!1580 = !DILocation(line: 825, column: 309, scope: !1581)
!1581 = !DILexicalBlockFile(scope: !1582, file: !394, discriminator: 10)
!1582 = !DILexicalBlockFile(scope: !435, file: !394, discriminator: 3)
!1583 = !DILocation(line: 825, column: 309, scope: !440)
!1584 = !DILocation(line: 825, column: 309, scope: !1585)
!1585 = !DILexicalBlockFile(scope: !440, file: !394, discriminator: 11)
!1586 = !DILocation(line: 826, column: 9, scope: !435)
!1587 = !DILocation(line: 829, column: 19, scope: !425)
!1588 = !DILocation(line: 829, column: 24, scope: !425)
!1589 = !DILocation(line: 829, column: 29, scope: !425)
!1590 = !DILocation(line: 829, column: 5, scope: !425)
!1591 = !DILocation(line: 830, column: 5, scope: !425)
!1592 = !DILocation(line: 831, column: 1, scope: !425)
!1593 = !DILocation(line: 397, column: 28, scope: !489)
!1594 = !DILocation(line: 399, column: 5, scope: !489)
!1595 = !DILocation(line: 399, column: 11, scope: !489)
!1596 = !DILocation(line: 399, column: 22, scope: !489)
!1597 = !{!1598, !1460, i64 40}
!1598 = !{!"", !1482, i64 0, !1459, i64 16, !1514, i64 24, !1514, i64 28, !1514, i64 32, !1514, i64 36, !1460, i64 40, !1514, i64 44, !1483, i64 48, !1459, i64 56, !1483, i64 64, !1483, i64 72, !1483, i64 80, !1483, i64 88, !1483, i64 96, !1459, i64 104, !1483, i64 112, !1483, i64 120, !1483, i64 128, !1459, i64 136, !1459, i64 144}
!1599 = !DILocation(line: 400, column: 41, scope: !1600)
!1600 = distinct !DILexicalBlock(scope: !489, file: !394, line: 400, column: 9)
!1601 = !DILocation(line: 400, column: 28, scope: !1600)
!1602 = !DILocation(line: 400, column: 9, scope: !1600)
!1603 = !DILocation(line: 400, column: 47, scope: !1600)
!1604 = !DILocation(line: 400, column: 9, scope: !489)
!1605 = !DILocation(line: 401, column: 9, scope: !1600)
!1606 = !DILocation(line: 402, column: 5, scope: !489)
!1607 = !DILocation(line: 402, column: 10, scope: !1608)
!1608 = !DILexicalBlockFile(scope: !495, file: !394, discriminator: 1)
!1609 = !DILocation(line: 402, column: 21, scope: !495)
!1610 = !DILocation(line: 402, column: 40, scope: !495)
!1611 = !DILocation(line: 402, column: 26, scope: !495)
!1612 = !DILocation(line: 402, column: 45, scope: !495)
!1613 = !DILocation(line: 402, column: 64, scope: !495)
!1614 = !DILocation(line: 402, column: 89, scope: !1615)
!1615 = !DILexicalBlockFile(scope: !1616, file: !394, discriminator: 2)
!1616 = distinct !DILexicalBlock(scope: !495, file: !394, line: 402, column: 67)
!1617 = !DILocation(line: 402, column: 93, scope: !1616)
!1618 = !DILocation(line: 402, column: 96, scope: !1616)
!1619 = !{!1620, !1483, i64 16}
!1620 = !{!"", !1459, i64 0, !1459, i64 8, !1483, i64 16}
!1621 = !DILocation(line: 402, column: 104, scope: !1616)
!1622 = !DILocation(line: 402, column: 131, scope: !1616)
!1623 = !DILocation(line: 402, column: 70, scope: !1616)
!1624 = !DILocation(line: 402, column: 74, scope: !1616)
!1625 = !DILocation(line: 402, column: 77, scope: !1616)
!1626 = !DILocation(line: 402, column: 85, scope: !1616)
!1627 = !DILocation(line: 402, column: 160, scope: !1616)
!1628 = !DILocation(line: 402, column: 160, scope: !1629)
!1629 = !DILexicalBlockFile(scope: !1616, file: !394, discriminator: 3)
!1630 = !DILocation(line: 402, column: 201, scope: !1631)
!1631 = !DILexicalBlockFile(scope: !495, file: !394, discriminator: 4)
!1632 = !DILocation(line: 402, column: 204, scope: !495)
!1633 = !DILocation(line: 402, column: 207, scope: !495)
!1634 = !{!1620, !1459, i64 0}
!1635 = !DILocation(line: 402, column: 173, scope: !495)
!1636 = !DILocation(line: 402, column: 176, scope: !495)
!1637 = !DILocation(line: 402, column: 179, scope: !495)
!1638 = !{!1620, !1459, i64 8}
!1639 = !DILocation(line: 402, column: 188, scope: !495)
!1640 = !DILocation(line: 402, column: 191, scope: !495)
!1641 = !DILocation(line: 402, column: 199, scope: !495)
!1642 = !DILocation(line: 402, column: 244, scope: !495)
!1643 = !DILocation(line: 402, column: 247, scope: !495)
!1644 = !DILocation(line: 402, column: 250, scope: !495)
!1645 = !DILocation(line: 402, column: 216, scope: !495)
!1646 = !DILocation(line: 402, column: 219, scope: !495)
!1647 = !DILocation(line: 402, column: 222, scope: !495)
!1648 = !DILocation(line: 402, column: 231, scope: !495)
!1649 = !DILocation(line: 402, column: 234, scope: !495)
!1650 = !DILocation(line: 402, column: 242, scope: !495)
!1651 = !DILocation(line: 402, column: 259, scope: !495)
!1652 = !DILocation(line: 402, column: 262, scope: !495)
!1653 = !DILocation(line: 402, column: 265, scope: !495)
!1654 = !DILocation(line: 402, column: 273, scope: !495)
!1655 = !DILocation(line: 402, column: 287, scope: !489)
!1656 = !DILocation(line: 402, column: 287, scope: !495)
!1657 = !DILocation(line: 403, column: 5, scope: !489)
!1658 = !DILocation(line: 403, column: 11, scope: !489)
!1659 = !DILocation(line: 403, column: 14, scope: !489)
!1660 = !{!1598, !1514, i64 24}
!1661 = !DILocation(line: 404, column: 9, scope: !1662)
!1662 = distinct !DILexicalBlock(scope: !489, file: !394, line: 404, column: 9)
!1663 = !DILocation(line: 404, column: 15, scope: !1662)
!1664 = !{!1598, !1459, i64 144}
!1665 = !DILocation(line: 404, column: 27, scope: !1662)
!1666 = !DILocation(line: 404, column: 9, scope: !489)
!1667 = !DILocation(line: 405, column: 44, scope: !1662)
!1668 = !DILocation(line: 405, column: 32, scope: !1662)
!1669 = !DILocation(line: 405, column: 9, scope: !1662)
!1670 = !DILocation(line: 406, column: 5, scope: !489)
!1671 = !DILocation(line: 406, column: 10, scope: !1672)
!1672 = !DILexicalBlockFile(scope: !497, file: !394, discriminator: 1)
!1673 = !DILocation(line: 406, column: 20, scope: !497)
!1674 = !DILocation(line: 406, column: 43, scope: !497)
!1675 = !DILocation(line: 406, column: 49, scope: !497)
!1676 = !{!1598, !1459, i64 16}
!1677 = !DILocation(line: 406, column: 59, scope: !501)
!1678 = !DILocation(line: 406, column: 67, scope: !501)
!1679 = !DILocation(line: 406, column: 59, scope: !497)
!1680 = !DILocation(line: 406, column: 85, scope: !1681)
!1681 = !DILexicalBlockFile(scope: !500, file: !394, discriminator: 2)
!1682 = !DILocation(line: 406, column: 91, scope: !500)
!1683 = !DILocation(line: 406, column: 96, scope: !500)
!1684 = !DILocation(line: 406, column: 110, scope: !500)
!1685 = !DILocation(line: 406, column: 115, scope: !1686)
!1686 = !DILexicalBlockFile(scope: !499, file: !394, discriminator: 4)
!1687 = !DILocation(line: 406, column: 125, scope: !499)
!1688 = !DILocation(line: 406, column: 155, scope: !499)
!1689 = !DILocation(line: 406, column: 173, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !499, file: !394, line: 406, column: 170)
!1691 = !DILocation(line: 406, column: 190, scope: !1690)
!1692 = !DILocation(line: 406, column: 170, scope: !1690)
!1693 = !DILocation(line: 406, column: 200, scope: !1690)
!1694 = !DILocation(line: 406, column: 170, scope: !499)
!1695 = !DILocation(line: 406, column: 170, scope: !1696)
!1696 = !DILexicalBlockFile(scope: !499, file: !394, discriminator: 5)
!1697 = !DILocation(line: 406, column: 231, scope: !1698)
!1698 = !DILexicalBlockFile(scope: !1690, file: !394, discriminator: 6)
!1699 = !DILocation(line: 406, column: 249, scope: !1690)
!1700 = !DILocation(line: 406, column: 259, scope: !1690)
!1701 = !DILocation(line: 406, column: 284, scope: !1690)
!1702 = !DILocation(line: 406, column: 215, scope: !1690)
!1703 = !DILocation(line: 406, column: 303, scope: !1704)
!1704 = !DILexicalBlockFile(scope: !500, file: !394, discriminator: 7)
!1705 = !DILocation(line: 406, column: 303, scope: !499)
!1706 = !DILocation(line: 406, column: 303, scope: !1707)
!1707 = !DILexicalBlockFile(scope: !499, file: !394, discriminator: 8)
!1708 = !DILocation(line: 406, column: 316, scope: !1709)
!1709 = !DILexicalBlockFile(scope: !500, file: !394, discriminator: 9)
!1710 = !DILocation(line: 406, column: 318, scope: !1711)
!1711 = !DILexicalBlockFile(scope: !1712, file: !394, discriminator: 10)
!1712 = !DILexicalBlockFile(scope: !489, file: !394, discriminator: 3)
!1713 = !DILocation(line: 406, column: 318, scope: !497)
!1714 = !DILocation(line: 407, column: 9, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !489, file: !394, line: 407, column: 9)
!1716 = !DILocation(line: 407, column: 15, scope: !1715)
!1717 = !{!1598, !1459, i64 56}
!1718 = !DILocation(line: 407, column: 9, scope: !489)
!1719 = !DILocation(line: 408, column: 20, scope: !1720)
!1720 = distinct !DILexicalBlock(scope: !1715, file: !394, line: 407, column: 23)
!1721 = !DILocation(line: 408, column: 26, scope: !1720)
!1722 = !DILocation(line: 408, column: 9, scope: !1720)
!1723 = !DILocation(line: 409, column: 9, scope: !1720)
!1724 = !DILocation(line: 409, column: 15, scope: !1720)
!1725 = !DILocation(line: 409, column: 22, scope: !1720)
!1726 = !DILocation(line: 410, column: 5, scope: !1720)
!1727 = !DILocation(line: 412, column: 9, scope: !1728)
!1728 = distinct !DILexicalBlock(scope: !489, file: !394, line: 412, column: 9)
!1729 = !DILocation(line: 412, column: 15, scope: !1728)
!1730 = !{!1598, !1459, i64 104}
!1731 = !DILocation(line: 412, column: 9, scope: !489)
!1732 = !DILocation(line: 413, column: 28, scope: !1733)
!1733 = distinct !DILexicalBlock(scope: !1728, file: !394, line: 412, column: 21)
!1734 = !DILocation(line: 413, column: 34, scope: !1733)
!1735 = !DILocation(line: 413, column: 9, scope: !1733)
!1736 = !DILocation(line: 414, column: 9, scope: !1733)
!1737 = !DILocation(line: 414, column: 15, scope: !1733)
!1738 = !DILocation(line: 414, column: 20, scope: !1733)
!1739 = !DILocation(line: 415, column: 5, scope: !1733)
!1740 = !DILocation(line: 417, column: 5, scope: !489)
!1741 = !DILocation(line: 417, column: 10, scope: !1742)
!1742 = !DILexicalBlockFile(scope: !503, file: !394, discriminator: 1)
!1743 = !DILocation(line: 417, column: 20, scope: !503)
!1744 = !DILocation(line: 417, column: 43, scope: !503)
!1745 = !DILocation(line: 417, column: 49, scope: !503)
!1746 = !{!1598, !1459, i64 136}
!1747 = !DILocation(line: 417, column: 60, scope: !507)
!1748 = !DILocation(line: 417, column: 68, scope: !507)
!1749 = !DILocation(line: 417, column: 60, scope: !503)
!1750 = !DILocation(line: 417, column: 86, scope: !1751)
!1751 = !DILexicalBlockFile(scope: !506, file: !394, discriminator: 2)
!1752 = !DILocation(line: 417, column: 92, scope: !506)
!1753 = !DILocation(line: 417, column: 98, scope: !506)
!1754 = !DILocation(line: 417, column: 112, scope: !506)
!1755 = !DILocation(line: 417, column: 117, scope: !1756)
!1756 = !DILexicalBlockFile(scope: !505, file: !394, discriminator: 4)
!1757 = !DILocation(line: 417, column: 127, scope: !505)
!1758 = !DILocation(line: 417, column: 157, scope: !505)
!1759 = !DILocation(line: 417, column: 175, scope: !1760)
!1760 = distinct !DILexicalBlock(scope: !505, file: !394, line: 417, column: 172)
!1761 = !DILocation(line: 417, column: 192, scope: !1760)
!1762 = !DILocation(line: 417, column: 172, scope: !1760)
!1763 = !DILocation(line: 417, column: 202, scope: !1760)
!1764 = !DILocation(line: 417, column: 172, scope: !505)
!1765 = !DILocation(line: 417, column: 172, scope: !1766)
!1766 = !DILexicalBlockFile(scope: !505, file: !394, discriminator: 5)
!1767 = !DILocation(line: 417, column: 233, scope: !1768)
!1768 = !DILexicalBlockFile(scope: !1760, file: !394, discriminator: 6)
!1769 = !DILocation(line: 417, column: 251, scope: !1760)
!1770 = !DILocation(line: 417, column: 261, scope: !1760)
!1771 = !DILocation(line: 417, column: 286, scope: !1760)
!1772 = !DILocation(line: 417, column: 217, scope: !1760)
!1773 = !DILocation(line: 417, column: 305, scope: !1774)
!1774 = !DILexicalBlockFile(scope: !506, file: !394, discriminator: 7)
!1775 = !DILocation(line: 417, column: 305, scope: !505)
!1776 = !DILocation(line: 417, column: 305, scope: !1777)
!1777 = !DILexicalBlockFile(scope: !505, file: !394, discriminator: 8)
!1778 = !DILocation(line: 417, column: 318, scope: !1779)
!1779 = !DILexicalBlockFile(scope: !506, file: !394, discriminator: 9)
!1780 = !DILocation(line: 417, column: 320, scope: !1711)
!1781 = !DILocation(line: 417, column: 320, scope: !503)
!1782 = !DILocation(line: 418, column: 19, scope: !489)
!1783 = !DILocation(line: 418, column: 7, scope: !489)
!1784 = !DILocation(line: 418, column: 27, scope: !489)
!1785 = !DILocation(line: 418, column: 37, scope: !489)
!1786 = !{!1512, !1459, i64 320}
!1787 = !DILocation(line: 418, column: 57, scope: !489)
!1788 = !DILocation(line: 418, column: 45, scope: !489)
!1789 = !DILocation(line: 418, column: 5, scope: !489)
!1790 = !DILocation(line: 419, column: 1, scope: !489)
!1791 = !DILocation(line: 419, column: 1, scope: !1792)
!1792 = !DILexicalBlockFile(scope: !489, file: !394, discriminator: 1)
!1793 = !DILocation(line: 1367, column: 25, scope: !508)
!1794 = !DILocation(line: 1369, column: 5, scope: !508)
!1795 = !DILocation(line: 1369, column: 15, scope: !508)
!1796 = !DILocation(line: 1369, column: 25, scope: !508)
!1797 = !DILocation(line: 1371, column: 48, scope: !508)
!1798 = !DILocation(line: 1371, column: 35, scope: !508)
!1799 = !DILocation(line: 1371, column: 15, scope: !508)
!1800 = !DILocation(line: 1371, column: 13, scope: !508)
!1801 = !DILocation(line: 1372, column: 9, scope: !518)
!1802 = !DILocation(line: 1372, column: 17, scope: !518)
!1803 = !DILocation(line: 1372, column: 9, scope: !508)
!1804 = !DILocation(line: 1373, column: 36, scope: !1805)
!1805 = distinct !DILexicalBlock(scope: !1806, file: !394, line: 1373, column: 13)
!1806 = distinct !DILexicalBlock(scope: !518, file: !394, line: 1372, column: 32)
!1807 = !DILocation(line: 1373, column: 13, scope: !1805)
!1808 = !DILocation(line: 1373, column: 13, scope: !1806)
!1809 = !DILocation(line: 1374, column: 13, scope: !1805)
!1810 = !DILocation(line: 1376, column: 13, scope: !1805)
!1811 = !DILocation(line: 1377, column: 58, scope: !1806)
!1812 = !DILocation(line: 1377, column: 46, scope: !1806)
!1813 = !DILocation(line: 1377, column: 66, scope: !1806)
!1814 = !DILocation(line: 1377, column: 76, scope: !1806)
!1815 = !{!1512, !1459, i64 24}
!1816 = !DILocation(line: 1377, column: 15, scope: !1806)
!1817 = !DILocation(line: 1377, column: 13, scope: !1806)
!1818 = !DILocation(line: 1378, column: 5, scope: !1806)
!1819 = !DILocation(line: 1381, column: 50, scope: !517)
!1820 = !DILocation(line: 1381, column: 38, scope: !517)
!1821 = !DILocation(line: 1381, column: 58, scope: !517)
!1822 = !DILocation(line: 1381, column: 68, scope: !517)
!1823 = !DILocation(line: 1381, column: 77, scope: !517)
!1824 = !DILocation(line: 1380, column: 15, scope: !517)
!1825 = !DILocation(line: 1380, column: 13, scope: !517)
!1826 = !DILocation(line: 1382, column: 9, scope: !517)
!1827 = !DILocation(line: 1382, column: 14, scope: !1828)
!1828 = !DILexicalBlockFile(scope: !516, file: !394, discriminator: 1)
!1829 = !DILocation(line: 1382, column: 24, scope: !516)
!1830 = !DILocation(line: 1382, column: 54, scope: !516)
!1831 = !DILocation(line: 1382, column: 72, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !516, file: !394, line: 1382, column: 69)
!1833 = !DILocation(line: 1382, column: 89, scope: !1832)
!1834 = !DILocation(line: 1382, column: 69, scope: !1832)
!1835 = !DILocation(line: 1382, column: 99, scope: !1832)
!1836 = !DILocation(line: 1382, column: 69, scope: !516)
!1837 = !DILocation(line: 1382, column: 69, scope: !1838)
!1838 = !DILexicalBlockFile(scope: !516, file: !394, discriminator: 2)
!1839 = !DILocation(line: 1382, column: 130, scope: !1840)
!1840 = !DILexicalBlockFile(scope: !1832, file: !394, discriminator: 3)
!1841 = !DILocation(line: 1382, column: 148, scope: !1832)
!1842 = !DILocation(line: 1382, column: 158, scope: !1832)
!1843 = !DILocation(line: 1382, column: 183, scope: !1832)
!1844 = !DILocation(line: 1382, column: 114, scope: !1832)
!1845 = !DILocation(line: 1382, column: 202, scope: !1846)
!1846 = !DILexicalBlockFile(scope: !517, file: !394, discriminator: 4)
!1847 = !DILocation(line: 1382, column: 202, scope: !516)
!1848 = !DILocation(line: 1382, column: 202, scope: !1849)
!1849 = !DILexicalBlockFile(scope: !516, file: !394, discriminator: 5)
!1850 = !DILocation(line: 1384, column: 12, scope: !508)
!1851 = !DILocation(line: 1384, column: 5, scope: !508)
!1852 = !DILocation(line: 1385, column: 1, scope: !508)
!1853 = !DILocation(line: 433, column: 29, scope: !519)
!1854 = !DILocation(line: 433, column: 45, scope: !519)
!1855 = !DILocation(line: 433, column: 58, scope: !519)
!1856 = !DILocation(line: 435, column: 5, scope: !519)
!1857 = !DILocation(line: 435, column: 14, scope: !1858)
!1858 = !DILexicalBlockFile(scope: !528, file: !394, discriminator: 1)
!1859 = !DILocation(line: 435, column: 20, scope: !528)
!1860 = !DILocation(line: 435, column: 14, scope: !528)
!1861 = !DILocation(line: 435, column: 14, scope: !529)
!1862 = !DILocation(line: 435, column: 27, scope: !1863)
!1863 = !DILexicalBlockFile(scope: !527, file: !394, discriminator: 2)
!1864 = !DILocation(line: 435, column: 31, scope: !527)
!1865 = !DILocation(line: 435, column: 38, scope: !527)
!1866 = !DILocation(line: 435, column: 57, scope: !527)
!1867 = !DILocation(line: 435, column: 63, scope: !527)
!1868 = !DILocation(line: 435, column: 69, scope: !527)
!1869 = !{!1514, !1514, i64 0}
!1870 = !DILocation(line: 435, column: 79, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !527, file: !394, line: 435, column: 79)
!1872 = !DILocation(line: 435, column: 79, scope: !527)
!1873 = !DILocation(line: 435, column: 92, scope: !1874)
!1874 = !DILexicalBlockFile(scope: !1871, file: !394, discriminator: 4)
!1875 = !DILocation(line: 435, column: 85, scope: !1871)
!1876 = !DILocation(line: 435, column: 98, scope: !1877)
!1877 = !DILexicalBlockFile(scope: !528, file: !394, discriminator: 5)
!1878 = !DILocation(line: 435, column: 98, scope: !1879)
!1879 = !DILexicalBlockFile(scope: !1880, file: !394, discriminator: 7)
!1880 = !DILexicalBlockFile(scope: !528, file: !394, discriminator: 6)
!1881 = !DILocation(line: 435, column: 98, scope: !527)
!1882 = !DILocation(line: 435, column: 100, scope: !1883)
!1883 = !DILexicalBlockFile(scope: !1884, file: !394, discriminator: 8)
!1884 = !DILexicalBlockFile(scope: !529, file: !394, discriminator: 3)
!1885 = !DILocation(line: 436, column: 5, scope: !519)
!1886 = !DILocation(line: 436, column: 14, scope: !1887)
!1887 = !DILexicalBlockFile(scope: !532, file: !394, discriminator: 1)
!1888 = !DILocation(line: 436, column: 20, scope: !532)
!1889 = !DILocation(line: 436, column: 14, scope: !532)
!1890 = !DILocation(line: 436, column: 14, scope: !533)
!1891 = !DILocation(line: 436, column: 28, scope: !1892)
!1892 = !DILexicalBlockFile(scope: !531, file: !394, discriminator: 2)
!1893 = !DILocation(line: 436, column: 32, scope: !531)
!1894 = !DILocation(line: 436, column: 39, scope: !531)
!1895 = !DILocation(line: 436, column: 58, scope: !531)
!1896 = !DILocation(line: 436, column: 64, scope: !531)
!1897 = !DILocation(line: 436, column: 71, scope: !531)
!1898 = !DILocation(line: 436, column: 81, scope: !1899)
!1899 = distinct !DILexicalBlock(scope: !531, file: !394, line: 436, column: 81)
!1900 = !DILocation(line: 436, column: 81, scope: !531)
!1901 = !DILocation(line: 436, column: 94, scope: !1902)
!1902 = !DILexicalBlockFile(scope: !1899, file: !394, discriminator: 4)
!1903 = !DILocation(line: 436, column: 87, scope: !1899)
!1904 = !DILocation(line: 436, column: 100, scope: !1905)
!1905 = !DILexicalBlockFile(scope: !532, file: !394, discriminator: 5)
!1906 = !DILocation(line: 436, column: 100, scope: !1907)
!1907 = !DILexicalBlockFile(scope: !1908, file: !394, discriminator: 7)
!1908 = !DILexicalBlockFile(scope: !532, file: !394, discriminator: 6)
!1909 = !DILocation(line: 436, column: 100, scope: !531)
!1910 = !DILocation(line: 436, column: 102, scope: !1911)
!1911 = !DILexicalBlockFile(scope: !1912, file: !394, discriminator: 8)
!1912 = !DILexicalBlockFile(scope: !533, file: !394, discriminator: 3)
!1913 = !DILocation(line: 437, column: 5, scope: !519)
!1914 = !DILocation(line: 438, column: 1, scope: !519)
!1915 = !DILocation(line: 441, column: 26, scope: !534)
!1916 = !DILocation(line: 443, column: 5, scope: !534)
!1917 = !DILocation(line: 443, column: 11, scope: !534)
!1918 = !DILocation(line: 443, column: 14, scope: !534)
!1919 = !DILocation(line: 444, column: 5, scope: !534)
!1920 = !DILocation(line: 444, column: 10, scope: !1921)
!1921 = !DILexicalBlockFile(scope: !540, file: !394, discriminator: 1)
!1922 = !DILocation(line: 444, column: 20, scope: !540)
!1923 = !DILocation(line: 444, column: 43, scope: !540)
!1924 = !DILocation(line: 444, column: 49, scope: !540)
!1925 = !DILocation(line: 444, column: 59, scope: !544)
!1926 = !DILocation(line: 444, column: 67, scope: !544)
!1927 = !DILocation(line: 444, column: 59, scope: !540)
!1928 = !DILocation(line: 444, column: 85, scope: !1929)
!1929 = !DILexicalBlockFile(scope: !543, file: !394, discriminator: 2)
!1930 = !DILocation(line: 444, column: 91, scope: !543)
!1931 = !DILocation(line: 444, column: 96, scope: !543)
!1932 = !DILocation(line: 444, column: 110, scope: !543)
!1933 = !DILocation(line: 444, column: 115, scope: !1934)
!1934 = !DILexicalBlockFile(scope: !542, file: !394, discriminator: 4)
!1935 = !DILocation(line: 444, column: 125, scope: !542)
!1936 = !DILocation(line: 444, column: 155, scope: !542)
!1937 = !DILocation(line: 444, column: 173, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !542, file: !394, line: 444, column: 170)
!1939 = !DILocation(line: 444, column: 190, scope: !1938)
!1940 = !DILocation(line: 444, column: 170, scope: !1938)
!1941 = !DILocation(line: 444, column: 200, scope: !1938)
!1942 = !DILocation(line: 444, column: 170, scope: !542)
!1943 = !DILocation(line: 444, column: 170, scope: !1944)
!1944 = !DILexicalBlockFile(scope: !542, file: !394, discriminator: 5)
!1945 = !DILocation(line: 444, column: 231, scope: !1946)
!1946 = !DILexicalBlockFile(scope: !1938, file: !394, discriminator: 6)
!1947 = !DILocation(line: 444, column: 249, scope: !1938)
!1948 = !DILocation(line: 444, column: 259, scope: !1938)
!1949 = !DILocation(line: 444, column: 284, scope: !1938)
!1950 = !DILocation(line: 444, column: 215, scope: !1938)
!1951 = !DILocation(line: 444, column: 303, scope: !1952)
!1952 = !DILexicalBlockFile(scope: !543, file: !394, discriminator: 7)
!1953 = !DILocation(line: 444, column: 303, scope: !542)
!1954 = !DILocation(line: 444, column: 303, scope: !1955)
!1955 = !DILexicalBlockFile(scope: !542, file: !394, discriminator: 8)
!1956 = !DILocation(line: 444, column: 316, scope: !1957)
!1957 = !DILexicalBlockFile(scope: !543, file: !394, discriminator: 9)
!1958 = !DILocation(line: 444, column: 318, scope: !1959)
!1959 = !DILexicalBlockFile(scope: !1960, file: !394, discriminator: 10)
!1960 = !DILexicalBlockFile(scope: !534, file: !394, discriminator: 3)
!1961 = !DILocation(line: 444, column: 318, scope: !540)
!1962 = !DILocation(line: 445, column: 5, scope: !534)
!1963 = !DILocation(line: 445, column: 10, scope: !1964)
!1964 = !DILexicalBlockFile(scope: !546, file: !394, discriminator: 1)
!1965 = !DILocation(line: 445, column: 20, scope: !546)
!1966 = !DILocation(line: 445, column: 43, scope: !546)
!1967 = !DILocation(line: 445, column: 49, scope: !546)
!1968 = !DILocation(line: 445, column: 60, scope: !550)
!1969 = !DILocation(line: 445, column: 68, scope: !550)
!1970 = !DILocation(line: 445, column: 60, scope: !546)
!1971 = !DILocation(line: 445, column: 86, scope: !1972)
!1972 = !DILexicalBlockFile(scope: !549, file: !394, discriminator: 2)
!1973 = !DILocation(line: 445, column: 92, scope: !549)
!1974 = !DILocation(line: 445, column: 98, scope: !549)
!1975 = !DILocation(line: 445, column: 112, scope: !549)
!1976 = !DILocation(line: 445, column: 117, scope: !1977)
!1977 = !DILexicalBlockFile(scope: !548, file: !394, discriminator: 4)
!1978 = !DILocation(line: 445, column: 127, scope: !548)
!1979 = !DILocation(line: 445, column: 157, scope: !548)
!1980 = !DILocation(line: 445, column: 175, scope: !1981)
!1981 = distinct !DILexicalBlock(scope: !548, file: !394, line: 445, column: 172)
!1982 = !DILocation(line: 445, column: 192, scope: !1981)
!1983 = !DILocation(line: 445, column: 172, scope: !1981)
!1984 = !DILocation(line: 445, column: 202, scope: !1981)
!1985 = !DILocation(line: 445, column: 172, scope: !548)
!1986 = !DILocation(line: 445, column: 172, scope: !1987)
!1987 = !DILexicalBlockFile(scope: !548, file: !394, discriminator: 5)
!1988 = !DILocation(line: 445, column: 233, scope: !1989)
!1989 = !DILexicalBlockFile(scope: !1981, file: !394, discriminator: 6)
!1990 = !DILocation(line: 445, column: 251, scope: !1981)
!1991 = !DILocation(line: 445, column: 261, scope: !1981)
!1992 = !DILocation(line: 445, column: 286, scope: !1981)
!1993 = !DILocation(line: 445, column: 217, scope: !1981)
!1994 = !DILocation(line: 445, column: 305, scope: !1995)
!1995 = !DILexicalBlockFile(scope: !549, file: !394, discriminator: 7)
!1996 = !DILocation(line: 445, column: 305, scope: !548)
!1997 = !DILocation(line: 445, column: 305, scope: !1998)
!1998 = !DILexicalBlockFile(scope: !548, file: !394, discriminator: 8)
!1999 = !DILocation(line: 445, column: 318, scope: !2000)
!2000 = !DILexicalBlockFile(scope: !549, file: !394, discriminator: 9)
!2001 = !DILocation(line: 445, column: 320, scope: !1959)
!2002 = !DILocation(line: 445, column: 320, scope: !546)
!2003 = !DILocation(line: 446, column: 5, scope: !534)
!2004 = !DILocation(line: 1329, column: 29, scope: !551)
!2005 = !DILocation(line: 1331, column: 5, scope: !551)
!2006 = !DILocation(line: 1331, column: 15, scope: !551)
!2007 = !DILocation(line: 1332, column: 5, scope: !551)
!2008 = !DILocation(line: 1332, column: 19, scope: !551)
!2009 = !DILocation(line: 1334, column: 9, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !551, file: !394, line: 1334, column: 9)
!2011 = !DILocation(line: 1334, column: 15, scope: !2010)
!2012 = !DILocation(line: 1334, column: 18, scope: !2010)
!2013 = !DILocation(line: 1334, column: 9, scope: !551)
!2014 = !DILocation(line: 1334, column: 30, scope: !2015)
!2015 = !DILexicalBlockFile(scope: !2016, file: !394, discriminator: 1)
!2016 = distinct !DILexicalBlock(scope: !2017, file: !394, line: 1334, column: 30)
!2017 = distinct !DILexicalBlock(scope: !2010, file: !394, line: 1334, column: 24)
!2018 = !DILocation(line: 1334, column: 36, scope: !2016)
!2019 = !{!1598, !1514, i64 28}
!2020 = !DILocation(line: 1334, column: 30, scope: !2016)
!2021 = !DILocation(line: 1334, column: 30, scope: !2017)
!2022 = !DILocation(line: 1334, column: 64, scope: !2023)
!2023 = !DILexicalBlockFile(scope: !2024, file: !394, discriminator: 2)
!2024 = distinct !DILexicalBlock(scope: !2016, file: !394, line: 1334, column: 46)
!2025 = !DILocation(line: 1334, column: 48, scope: !2024)
!2026 = !DILocation(line: 1334, column: 115, scope: !2024)
!2027 = !DILocation(line: 1334, column: 140, scope: !2028)
!2028 = !DILexicalBlockFile(scope: !2029, file: !394, discriminator: 3)
!2029 = distinct !DILexicalBlock(scope: !2016, file: !394, line: 1334, column: 122)
!2030 = !DILocation(line: 1334, column: 124, scope: !2029)
!2031 = !DILocation(line: 1334, column: 202, scope: !2032)
!2032 = !DILexicalBlockFile(scope: !2017, file: !394, discriminator: 4)
!2033 = !DILocation(line: 1334, column: 202, scope: !2017)
!2034 = !DILocation(line: 1336, column: 24, scope: !551)
!2035 = !DILocation(line: 1336, column: 12, scope: !551)
!2036 = !DILocation(line: 1336, column: 32, scope: !551)
!2037 = !DILocation(line: 1336, column: 8, scope: !551)
!2038 = !DILocation(line: 1337, column: 9, scope: !563)
!2039 = !DILocation(line: 1337, column: 12, scope: !563)
!2040 = !DILocation(line: 1337, column: 38, scope: !563)
!2041 = !DILocation(line: 1338, column: 9, scope: !563)
!2042 = !DILocation(line: 1338, column: 12, scope: !563)
!2043 = !DILocation(line: 1337, column: 9, scope: !551)
!2044 = !DILocation(line: 1340, column: 35, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !563, file: !394, line: 1338, column: 39)
!2046 = !DILocation(line: 1340, column: 16, scope: !2045)
!2047 = !DILocation(line: 1340, column: 14, scope: !2045)
!2048 = !DILocation(line: 1341, column: 5, scope: !2045)
!2049 = !DILocation(line: 1343, column: 55, scope: !562)
!2050 = !DILocation(line: 1343, column: 43, scope: !562)
!2051 = !DILocation(line: 1344, column: 44, scope: !562)
!2052 = !DILocation(line: 1343, column: 16, scope: !562)
!2053 = !DILocation(line: 1343, column: 14, scope: !562)
!2054 = !DILocation(line: 1345, column: 13, scope: !561)
!2055 = !DILocation(line: 1345, column: 18, scope: !561)
!2056 = !DILocation(line: 1345, column: 39, scope: !2057)
!2057 = !DILexicalBlockFile(scope: !561, file: !394, discriminator: 1)
!2058 = !DILocation(line: 1345, column: 47, scope: !561)
!2059 = !DILocation(line: 1345, column: 58, scope: !561)
!2060 = !{!1512, !1483, i64 168}
!2061 = !DILocation(line: 1345, column: 67, scope: !561)
!2062 = !DILocation(line: 1345, column: 84, scope: !561)
!2063 = !DILocation(line: 1345, column: 13, scope: !562)
!2064 = !DILocation(line: 1346, column: 26, scope: !560)
!2065 = !DILocation(line: 1348, column: 56, scope: !560)
!2066 = !DILocation(line: 1348, column: 64, scope: !560)
!2067 = !DILocation(line: 1348, column: 74, scope: !560)
!2068 = !DILocation(line: 1346, column: 13, scope: !560)
!2069 = !DILocation(line: 1349, column: 13, scope: !560)
!2070 = !DILocation(line: 1349, column: 18, scope: !2071)
!2071 = !DILexicalBlockFile(scope: !559, file: !394, discriminator: 1)
!2072 = !DILocation(line: 1349, column: 28, scope: !559)
!2073 = !DILocation(line: 1349, column: 58, scope: !559)
!2074 = !DILocation(line: 1349, column: 73, scope: !2075)
!2075 = distinct !DILexicalBlock(scope: !559, file: !394, line: 1349, column: 70)
!2076 = !DILocation(line: 1349, column: 90, scope: !2075)
!2077 = !DILocation(line: 1349, column: 70, scope: !2075)
!2078 = !DILocation(line: 1349, column: 100, scope: !2075)
!2079 = !DILocation(line: 1349, column: 70, scope: !559)
!2080 = !DILocation(line: 1349, column: 70, scope: !2081)
!2081 = !DILexicalBlockFile(scope: !559, file: !394, discriminator: 2)
!2082 = !DILocation(line: 1349, column: 131, scope: !2083)
!2083 = !DILexicalBlockFile(scope: !2075, file: !394, discriminator: 3)
!2084 = !DILocation(line: 1349, column: 149, scope: !2075)
!2085 = !DILocation(line: 1349, column: 159, scope: !2075)
!2086 = !DILocation(line: 1349, column: 184, scope: !2075)
!2087 = !DILocation(line: 1349, column: 115, scope: !2075)
!2088 = !DILocation(line: 1349, column: 203, scope: !2089)
!2089 = !DILexicalBlockFile(scope: !560, file: !394, discriminator: 4)
!2090 = !DILocation(line: 1349, column: 203, scope: !559)
!2091 = !DILocation(line: 1349, column: 203, scope: !2092)
!2092 = !DILexicalBlockFile(scope: !559, file: !394, discriminator: 5)
!2093 = !DILocation(line: 1350, column: 13, scope: !560)
!2094 = !DILocation(line: 1354, column: 9, scope: !2095)
!2095 = distinct !DILexicalBlock(scope: !551, file: !394, line: 1354, column: 9)
!2096 = !DILocation(line: 1354, column: 14, scope: !2095)
!2097 = !DILocation(line: 1354, column: 9, scope: !551)
!2098 = !DILocation(line: 1355, column: 9, scope: !2095)
!2099 = !DILocation(line: 1357, column: 40, scope: !567)
!2100 = !DILocation(line: 1357, column: 25, scope: !567)
!2101 = !DILocation(line: 1357, column: 48, scope: !567)
!2102 = !{!1513, !1483, i64 16}
!2103 = !DILocation(line: 1357, column: 58, scope: !567)
!2104 = !DILocation(line: 1357, column: 9, scope: !551)
!2105 = !DILocation(line: 1359, column: 9, scope: !566)
!2106 = !DILocation(line: 1359, column: 14, scope: !2107)
!2107 = !DILexicalBlockFile(scope: !565, file: !394, discriminator: 1)
!2108 = !DILocation(line: 1359, column: 24, scope: !565)
!2109 = !DILocation(line: 1359, column: 54, scope: !565)
!2110 = !DILocation(line: 1359, column: 69, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !565, file: !394, line: 1359, column: 66)
!2112 = !DILocation(line: 1359, column: 86, scope: !2111)
!2113 = !DILocation(line: 1359, column: 66, scope: !2111)
!2114 = !DILocation(line: 1359, column: 96, scope: !2111)
!2115 = !DILocation(line: 1359, column: 66, scope: !565)
!2116 = !DILocation(line: 1359, column: 66, scope: !2117)
!2117 = !DILexicalBlockFile(scope: !565, file: !394, discriminator: 2)
!2118 = !DILocation(line: 1359, column: 127, scope: !2119)
!2119 = !DILexicalBlockFile(scope: !2111, file: !394, discriminator: 3)
!2120 = !DILocation(line: 1359, column: 145, scope: !2111)
!2121 = !DILocation(line: 1359, column: 155, scope: !2111)
!2122 = !DILocation(line: 1359, column: 180, scope: !2111)
!2123 = !DILocation(line: 1359, column: 111, scope: !2111)
!2124 = !DILocation(line: 1359, column: 199, scope: !2125)
!2125 = !DILexicalBlockFile(scope: !566, file: !394, discriminator: 4)
!2126 = !DILocation(line: 1359, column: 199, scope: !565)
!2127 = !DILocation(line: 1359, column: 199, scope: !2128)
!2128 = !DILexicalBlockFile(scope: !565, file: !394, discriminator: 5)
!2129 = !DILocation(line: 1360, column: 9, scope: !566)
!2130 = !DILocation(line: 1363, column: 12, scope: !551)
!2131 = !DILocation(line: 1363, column: 5, scope: !551)
!2132 = !DILocation(line: 1364, column: 1, scope: !551)
!2133 = !DILocation(line: 1400, column: 31, scope: !1111)
!2134 = !DILocation(line: 1400, column: 47, scope: !1111)
!2135 = !DILocation(line: 1400, column: 63, scope: !1111)
!2136 = !DILocation(line: 1402, column: 5, scope: !1111)
!2137 = !DILocation(line: 1402, column: 11, scope: !1111)
!2138 = !DILocation(line: 1403, column: 5, scope: !1111)
!2139 = !DILocation(line: 1403, column: 16, scope: !1111)
!2140 = !{!1483, !1483, i64 0}
!2141 = !DILocation(line: 1404, column: 5, scope: !1111)
!2142 = !DILocation(line: 1404, column: 15, scope: !1111)
!2143 = !DILocation(line: 1406, column: 5, scope: !1111)
!2144 = !DILocation(line: 1406, column: 11, scope: !1111)
!2145 = !DILocation(line: 1406, column: 14, scope: !1111)
!2146 = !DILocation(line: 1407, column: 5, scope: !1111)
!2147 = !DILocation(line: 1407, column: 11, scope: !1111)
!2148 = !DILocation(line: 1407, column: 20, scope: !1111)
!2149 = !DILocation(line: 1409, column: 45, scope: !2150)
!2150 = distinct !DILexicalBlock(scope: !1111, file: !394, line: 1409, column: 9)
!2151 = !DILocation(line: 1409, column: 51, scope: !2150)
!2152 = !DILocation(line: 1409, column: 79, scope: !2150)
!2153 = !DILocation(line: 1409, column: 10, scope: !2150)
!2154 = !DILocation(line: 1409, column: 9, scope: !1111)
!2155 = !DILocation(line: 1411, column: 9, scope: !2156)
!2156 = distinct !DILexicalBlock(scope: !2150, file: !394, line: 1410, column: 59)
!2157 = !DILocation(line: 1414, column: 34, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !1111, file: !394, line: 1414, column: 9)
!2159 = !DILocation(line: 1414, column: 9, scope: !2158)
!2160 = !DILocation(line: 1414, column: 71, scope: !2158)
!2161 = !DILocation(line: 1414, column: 9, scope: !1111)
!2162 = !DILocation(line: 1415, column: 9, scope: !2158)
!2163 = !DILocation(line: 1417, column: 5, scope: !1111)
!2164 = !DILocation(line: 1417, column: 10, scope: !2165)
!2165 = !DILexicalBlockFile(scope: !1125, file: !394, discriminator: 1)
!2166 = !DILocation(line: 1417, column: 20, scope: !1125)
!2167 = !DILocation(line: 1417, column: 43, scope: !1125)
!2168 = !DILocation(line: 1417, column: 49, scope: !1125)
!2169 = !DILocation(line: 1417, column: 59, scope: !1129)
!2170 = !DILocation(line: 1417, column: 67, scope: !1129)
!2171 = !DILocation(line: 1417, column: 59, scope: !1125)
!2172 = !DILocation(line: 1417, column: 85, scope: !2173)
!2173 = !DILexicalBlockFile(scope: !1128, file: !394, discriminator: 2)
!2174 = !DILocation(line: 1417, column: 91, scope: !1128)
!2175 = !DILocation(line: 1417, column: 96, scope: !1128)
!2176 = !DILocation(line: 1417, column: 110, scope: !1128)
!2177 = !DILocation(line: 1417, column: 115, scope: !2178)
!2178 = !DILexicalBlockFile(scope: !1127, file: !394, discriminator: 4)
!2179 = !DILocation(line: 1417, column: 125, scope: !1127)
!2180 = !DILocation(line: 1417, column: 155, scope: !1127)
!2181 = !DILocation(line: 1417, column: 173, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !1127, file: !394, line: 1417, column: 170)
!2183 = !DILocation(line: 1417, column: 190, scope: !2182)
!2184 = !DILocation(line: 1417, column: 170, scope: !2182)
!2185 = !DILocation(line: 1417, column: 200, scope: !2182)
!2186 = !DILocation(line: 1417, column: 170, scope: !1127)
!2187 = !DILocation(line: 1417, column: 170, scope: !2188)
!2188 = !DILexicalBlockFile(scope: !1127, file: !394, discriminator: 5)
!2189 = !DILocation(line: 1417, column: 231, scope: !2190)
!2190 = !DILexicalBlockFile(scope: !2182, file: !394, discriminator: 6)
!2191 = !DILocation(line: 1417, column: 249, scope: !2182)
!2192 = !DILocation(line: 1417, column: 259, scope: !2182)
!2193 = !DILocation(line: 1417, column: 284, scope: !2182)
!2194 = !DILocation(line: 1417, column: 215, scope: !2182)
!2195 = !DILocation(line: 1417, column: 303, scope: !2196)
!2196 = !DILexicalBlockFile(scope: !1128, file: !394, discriminator: 7)
!2197 = !DILocation(line: 1417, column: 303, scope: !1127)
!2198 = !DILocation(line: 1417, column: 303, scope: !2199)
!2199 = !DILexicalBlockFile(scope: !1127, file: !394, discriminator: 8)
!2200 = !DILocation(line: 1417, column: 316, scope: !2201)
!2201 = !DILexicalBlockFile(scope: !1128, file: !394, discriminator: 9)
!2202 = !DILocation(line: 1417, column: 318, scope: !2203)
!2203 = !DILexicalBlockFile(scope: !2204, file: !394, discriminator: 10)
!2204 = !DILexicalBlockFile(scope: !1111, file: !394, discriminator: 3)
!2205 = !DILocation(line: 1417, column: 318, scope: !1125)
!2206 = !DILocation(line: 1417, column: 318, scope: !2207)
!2207 = !DILexicalBlockFile(scope: !1125, file: !394, discriminator: 11)
!2208 = !DILocation(line: 1418, column: 21, scope: !1111)
!2209 = !DILocation(line: 1418, column: 28, scope: !1111)
!2210 = !DILocation(line: 1418, column: 37, scope: !1111)
!2211 = !DILocation(line: 1419, column: 17, scope: !1111)
!2212 = !DILocation(line: 1419, column: 5, scope: !1111)
!2213 = !DILocation(line: 1419, column: 11, scope: !1111)
!2214 = !DILocation(line: 1419, column: 15, scope: !1111)
!2215 = !DILocation(line: 1420, column: 25, scope: !1111)
!2216 = !DILocation(line: 1420, column: 5, scope: !1111)
!2217 = !DILocation(line: 1420, column: 11, scope: !1111)
!2218 = !DILocation(line: 1420, column: 23, scope: !1111)
!2219 = !{!1598, !1483, i64 120}
!2220 = !DILocation(line: 1421, column: 5, scope: !1111)
!2221 = !DILocation(line: 1421, column: 11, scope: !1111)
!2222 = !DILocation(line: 1421, column: 20, scope: !1111)
!2223 = !{!1598, !1514, i64 32}
!2224 = !DILocation(line: 1422, column: 5, scope: !1111)
!2225 = !DILocation(line: 1422, column: 11, scope: !1111)
!2226 = !DILocation(line: 1422, column: 20, scope: !1111)
!2227 = !{!1598, !1514, i64 36}
!2228 = !DILocation(line: 1424, column: 24, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !1111, file: !394, line: 1424, column: 9)
!2230 = !DILocation(line: 1424, column: 9, scope: !2229)
!2231 = !DILocation(line: 1424, column: 30, scope: !2229)
!2232 = !DILocation(line: 1424, column: 9, scope: !1111)
!2233 = !DILocation(line: 1425, column: 9, scope: !2229)
!2234 = !DILocation(line: 1426, column: 31, scope: !1111)
!2235 = !DILocation(line: 1426, column: 5, scope: !1111)
!2236 = !DILocation(line: 1428, column: 47, scope: !1111)
!2237 = !DILocation(line: 1428, column: 35, scope: !1111)
!2238 = !DILocation(line: 1428, column: 55, scope: !1111)
!2239 = !DILocation(line: 1428, column: 64, scope: !1111)
!2240 = !DILocation(line: 1428, column: 90, scope: !1111)
!2241 = !DILocation(line: 1429, column: 47, scope: !1111)
!2242 = !DILocation(line: 1429, column: 54, scope: !1111)
!2243 = !DILocation(line: 1429, column: 63, scope: !1111)
!2244 = !DILocation(line: 1428, column: 90, scope: !2245)
!2245 = !DILexicalBlockFile(scope: !1111, file: !394, discriminator: 1)
!2246 = !DILocation(line: 1428, column: 5, scope: !1111)
!2247 = !DILocation(line: 1428, column: 11, scope: !1111)
!2248 = !DILocation(line: 1428, column: 30, scope: !1111)
!2249 = !{!1598, !1514, i64 44}
!2250 = !DILocation(line: 1431, column: 5, scope: !1111)
!2251 = !DILocation(line: 1431, column: 11, scope: !1111)
!2252 = !DILocation(line: 1431, column: 14, scope: !1111)
!2253 = !DILocation(line: 1432, column: 5, scope: !1111)
!2254 = !DILocation(line: 1433, column: 1, scope: !1111)
!2255 = !DILocation(line: 1847, column: 31, scope: !1168)
!2256 = !DILocation(line: 1847, column: 47, scope: !1168)
!2257 = !DILocation(line: 1847, column: 63, scope: !1168)
!2258 = !DILocation(line: 1849, column: 5, scope: !1168)
!2259 = !DILocation(line: 1849, column: 11, scope: !1168)
!2260 = !DILocation(line: 1850, column: 5, scope: !1168)
!2261 = !DILocation(line: 1850, column: 16, scope: !1168)
!2262 = !DILocation(line: 1851, column: 5, scope: !1168)
!2263 = !DILocation(line: 1851, column: 15, scope: !1168)
!2264 = !DILocation(line: 1853, column: 5, scope: !1168)
!2265 = !DILocation(line: 1853, column: 11, scope: !1168)
!2266 = !DILocation(line: 1853, column: 14, scope: !1168)
!2267 = !DILocation(line: 1854, column: 5, scope: !1168)
!2268 = !DILocation(line: 1854, column: 11, scope: !1168)
!2269 = !DILocation(line: 1854, column: 20, scope: !1168)
!2270 = !DILocation(line: 1856, column: 45, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !1168, file: !394, line: 1856, column: 9)
!2272 = !DILocation(line: 1856, column: 51, scope: !2271)
!2273 = !DILocation(line: 1856, column: 79, scope: !2271)
!2274 = !DILocation(line: 1856, column: 10, scope: !2271)
!2275 = !DILocation(line: 1856, column: 9, scope: !1168)
!2276 = !DILocation(line: 1858, column: 9, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2271, file: !394, line: 1857, column: 59)
!2278 = !DILocation(line: 1861, column: 34, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !1168, file: !394, line: 1861, column: 9)
!2280 = !DILocation(line: 1861, column: 9, scope: !2279)
!2281 = !DILocation(line: 1861, column: 71, scope: !2279)
!2282 = !DILocation(line: 1861, column: 9, scope: !1168)
!2283 = !DILocation(line: 1862, column: 9, scope: !2279)
!2284 = !DILocation(line: 1864, column: 5, scope: !1168)
!2285 = !DILocation(line: 1864, column: 10, scope: !2286)
!2286 = !DILexicalBlockFile(scope: !1177, file: !394, discriminator: 1)
!2287 = !DILocation(line: 1864, column: 20, scope: !1177)
!2288 = !DILocation(line: 1864, column: 43, scope: !1177)
!2289 = !DILocation(line: 1864, column: 49, scope: !1177)
!2290 = !DILocation(line: 1864, column: 59, scope: !1181)
!2291 = !DILocation(line: 1864, column: 67, scope: !1181)
!2292 = !DILocation(line: 1864, column: 59, scope: !1177)
!2293 = !DILocation(line: 1864, column: 85, scope: !2294)
!2294 = !DILexicalBlockFile(scope: !1180, file: !394, discriminator: 2)
!2295 = !DILocation(line: 1864, column: 91, scope: !1180)
!2296 = !DILocation(line: 1864, column: 96, scope: !1180)
!2297 = !DILocation(line: 1864, column: 110, scope: !1180)
!2298 = !DILocation(line: 1864, column: 115, scope: !2299)
!2299 = !DILexicalBlockFile(scope: !1179, file: !394, discriminator: 4)
!2300 = !DILocation(line: 1864, column: 125, scope: !1179)
!2301 = !DILocation(line: 1864, column: 155, scope: !1179)
!2302 = !DILocation(line: 1864, column: 173, scope: !2303)
!2303 = distinct !DILexicalBlock(scope: !1179, file: !394, line: 1864, column: 170)
!2304 = !DILocation(line: 1864, column: 190, scope: !2303)
!2305 = !DILocation(line: 1864, column: 170, scope: !2303)
!2306 = !DILocation(line: 1864, column: 200, scope: !2303)
!2307 = !DILocation(line: 1864, column: 170, scope: !1179)
!2308 = !DILocation(line: 1864, column: 170, scope: !2309)
!2309 = !DILexicalBlockFile(scope: !1179, file: !394, discriminator: 5)
!2310 = !DILocation(line: 1864, column: 231, scope: !2311)
!2311 = !DILexicalBlockFile(scope: !2303, file: !394, discriminator: 6)
!2312 = !DILocation(line: 1864, column: 249, scope: !2303)
!2313 = !DILocation(line: 1864, column: 259, scope: !2303)
!2314 = !DILocation(line: 1864, column: 284, scope: !2303)
!2315 = !DILocation(line: 1864, column: 215, scope: !2303)
!2316 = !DILocation(line: 1864, column: 303, scope: !2317)
!2317 = !DILexicalBlockFile(scope: !1180, file: !394, discriminator: 7)
!2318 = !DILocation(line: 1864, column: 303, scope: !1179)
!2319 = !DILocation(line: 1864, column: 303, scope: !2320)
!2320 = !DILexicalBlockFile(scope: !1179, file: !394, discriminator: 8)
!2321 = !DILocation(line: 1864, column: 316, scope: !2322)
!2322 = !DILexicalBlockFile(scope: !1180, file: !394, discriminator: 9)
!2323 = !DILocation(line: 1864, column: 318, scope: !2324)
!2324 = !DILexicalBlockFile(scope: !2325, file: !394, discriminator: 10)
!2325 = !DILexicalBlockFile(scope: !1168, file: !394, discriminator: 3)
!2326 = !DILocation(line: 1864, column: 318, scope: !1177)
!2327 = !DILocation(line: 1864, column: 318, scope: !2328)
!2328 = !DILexicalBlockFile(scope: !1177, file: !394, discriminator: 11)
!2329 = !DILocation(line: 1865, column: 21, scope: !1168)
!2330 = !DILocation(line: 1865, column: 28, scope: !1168)
!2331 = !DILocation(line: 1865, column: 37, scope: !1168)
!2332 = !DILocation(line: 1866, column: 17, scope: !1168)
!2333 = !DILocation(line: 1866, column: 5, scope: !1168)
!2334 = !DILocation(line: 1866, column: 11, scope: !1168)
!2335 = !DILocation(line: 1866, column: 15, scope: !1168)
!2336 = !DILocation(line: 1867, column: 5, scope: !1168)
!2337 = !DILocation(line: 1867, column: 11, scope: !1168)
!2338 = !DILocation(line: 1867, column: 20, scope: !1168)
!2339 = !DILocation(line: 1868, column: 5, scope: !1168)
!2340 = !DILocation(line: 1868, column: 11, scope: !1168)
!2341 = !DILocation(line: 1868, column: 20, scope: !1168)
!2342 = !DILocation(line: 1870, column: 25, scope: !1168)
!2343 = !DILocation(line: 1870, column: 5, scope: !1168)
!2344 = !DILocation(line: 1870, column: 11, scope: !1168)
!2345 = !DILocation(line: 1870, column: 23, scope: !1168)
!2346 = !DILocation(line: 1871, column: 24, scope: !2347)
!2347 = distinct !DILexicalBlock(scope: !1168, file: !394, line: 1871, column: 9)
!2348 = !DILocation(line: 1871, column: 9, scope: !2347)
!2349 = !DILocation(line: 1871, column: 30, scope: !2347)
!2350 = !DILocation(line: 1871, column: 9, scope: !1168)
!2351 = !DILocation(line: 1872, column: 9, scope: !2347)
!2352 = !DILocation(line: 1873, column: 31, scope: !1168)
!2353 = !DILocation(line: 1873, column: 5, scope: !1168)
!2354 = !DILocation(line: 1874, column: 5, scope: !1168)
!2355 = !DILocation(line: 1874, column: 11, scope: !1168)
!2356 = !DILocation(line: 1874, column: 15, scope: !1168)
!2357 = !{!1598, !1483, i64 64}
!2358 = !DILocation(line: 1876, column: 47, scope: !1168)
!2359 = !DILocation(line: 1876, column: 35, scope: !1168)
!2360 = !DILocation(line: 1876, column: 55, scope: !1168)
!2361 = !DILocation(line: 1876, column: 64, scope: !1168)
!2362 = !DILocation(line: 1876, column: 90, scope: !1168)
!2363 = !DILocation(line: 1877, column: 47, scope: !1168)
!2364 = !DILocation(line: 1877, column: 54, scope: !1168)
!2365 = !DILocation(line: 1877, column: 63, scope: !1168)
!2366 = !DILocation(line: 1876, column: 90, scope: !2367)
!2367 = !DILexicalBlockFile(scope: !1168, file: !394, discriminator: 1)
!2368 = !DILocation(line: 1876, column: 5, scope: !1168)
!2369 = !DILocation(line: 1876, column: 11, scope: !1168)
!2370 = !DILocation(line: 1876, column: 30, scope: !1168)
!2371 = !DILocation(line: 1879, column: 5, scope: !1168)
!2372 = !DILocation(line: 1879, column: 11, scope: !1168)
!2373 = !DILocation(line: 1879, column: 14, scope: !1168)
!2374 = !DILocation(line: 1880, column: 5, scope: !1168)
!2375 = !DILocation(line: 1881, column: 1, scope: !1168)
!2376 = !DILocation(line: 2296, column: 32, scope: !1182)
!2377 = !DILocation(line: 2298, column: 5, scope: !1182)
!2378 = !DILocation(line: 2298, column: 10, scope: !2379)
!2379 = !DILexicalBlockFile(scope: !1197, file: !394, discriminator: 1)
!2380 = !DILocation(line: 2298, column: 21, scope: !1197)
!2381 = !DILocation(line: 2298, column: 40, scope: !1197)
!2382 = !DILocation(line: 2298, column: 26, scope: !1197)
!2383 = !DILocation(line: 2298, column: 45, scope: !1197)
!2384 = !DILocation(line: 2298, column: 64, scope: !1197)
!2385 = !DILocation(line: 2298, column: 89, scope: !2386)
!2386 = !DILexicalBlockFile(scope: !2387, file: !394, discriminator: 2)
!2387 = distinct !DILexicalBlock(scope: !1197, file: !394, line: 2298, column: 67)
!2388 = !DILocation(line: 2298, column: 93, scope: !2387)
!2389 = !DILocation(line: 2298, column: 96, scope: !2387)
!2390 = !DILocation(line: 2298, column: 104, scope: !2387)
!2391 = !DILocation(line: 2298, column: 131, scope: !2387)
!2392 = !DILocation(line: 2298, column: 70, scope: !2387)
!2393 = !DILocation(line: 2298, column: 74, scope: !2387)
!2394 = !DILocation(line: 2298, column: 77, scope: !2387)
!2395 = !DILocation(line: 2298, column: 85, scope: !2387)
!2396 = !DILocation(line: 2298, column: 160, scope: !2387)
!2397 = !DILocation(line: 2298, column: 160, scope: !2398)
!2398 = !DILexicalBlockFile(scope: !2387, file: !394, discriminator: 3)
!2399 = !DILocation(line: 2298, column: 201, scope: !2400)
!2400 = !DILexicalBlockFile(scope: !1197, file: !394, discriminator: 4)
!2401 = !DILocation(line: 2298, column: 204, scope: !1197)
!2402 = !DILocation(line: 2298, column: 207, scope: !1197)
!2403 = !DILocation(line: 2298, column: 173, scope: !1197)
!2404 = !DILocation(line: 2298, column: 176, scope: !1197)
!2405 = !DILocation(line: 2298, column: 179, scope: !1197)
!2406 = !DILocation(line: 2298, column: 188, scope: !1197)
!2407 = !DILocation(line: 2298, column: 191, scope: !1197)
!2408 = !DILocation(line: 2298, column: 199, scope: !1197)
!2409 = !DILocation(line: 2298, column: 244, scope: !1197)
!2410 = !DILocation(line: 2298, column: 247, scope: !1197)
!2411 = !DILocation(line: 2298, column: 250, scope: !1197)
!2412 = !DILocation(line: 2298, column: 216, scope: !1197)
!2413 = !DILocation(line: 2298, column: 219, scope: !1197)
!2414 = !DILocation(line: 2298, column: 222, scope: !1197)
!2415 = !DILocation(line: 2298, column: 231, scope: !1197)
!2416 = !DILocation(line: 2298, column: 234, scope: !1197)
!2417 = !DILocation(line: 2298, column: 242, scope: !1197)
!2418 = !DILocation(line: 2298, column: 259, scope: !1197)
!2419 = !DILocation(line: 2298, column: 262, scope: !1197)
!2420 = !DILocation(line: 2298, column: 265, scope: !1197)
!2421 = !DILocation(line: 2298, column: 273, scope: !1197)
!2422 = !DILocation(line: 2298, column: 287, scope: !1182)
!2423 = !DILocation(line: 2298, column: 287, scope: !1197)
!2424 = !DILocation(line: 2299, column: 5, scope: !1182)
!2425 = !DILocation(line: 2299, column: 10, scope: !2426)
!2426 = !DILexicalBlockFile(scope: !1199, file: !394, discriminator: 1)
!2427 = !DILocation(line: 2299, column: 20, scope: !1199)
!2428 = !DILocation(line: 2299, column: 43, scope: !1199)
!2429 = !DILocation(line: 2299, column: 49, scope: !1199)
!2430 = !{!2431, !1459, i64 16}
!2431 = !{!"", !1482, i64 0, !1459, i64 16, !1459, i64 24, !1459, i64 32, !1459, i64 40}
!2432 = !DILocation(line: 2299, column: 30, scope: !1199)
!2433 = !DILocation(line: 2299, column: 62, scope: !1203)
!2434 = !DILocation(line: 2299, column: 70, scope: !1203)
!2435 = !DILocation(line: 2299, column: 62, scope: !1199)
!2436 = !DILocation(line: 2299, column: 88, scope: !2437)
!2437 = !DILexicalBlockFile(scope: !1202, file: !394, discriminator: 2)
!2438 = !DILocation(line: 2299, column: 94, scope: !1202)
!2439 = !DILocation(line: 2299, column: 102, scope: !1202)
!2440 = !DILocation(line: 2299, column: 116, scope: !1202)
!2441 = !DILocation(line: 2299, column: 121, scope: !2442)
!2442 = !DILexicalBlockFile(scope: !1201, file: !394, discriminator: 4)
!2443 = !DILocation(line: 2299, column: 131, scope: !1201)
!2444 = !DILocation(line: 2299, column: 161, scope: !1201)
!2445 = !DILocation(line: 2299, column: 179, scope: !2446)
!2446 = distinct !DILexicalBlock(scope: !1201, file: !394, line: 2299, column: 176)
!2447 = !DILocation(line: 2299, column: 196, scope: !2446)
!2448 = !DILocation(line: 2299, column: 176, scope: !2446)
!2449 = !DILocation(line: 2299, column: 206, scope: !2446)
!2450 = !DILocation(line: 2299, column: 176, scope: !1201)
!2451 = !DILocation(line: 2299, column: 176, scope: !2452)
!2452 = !DILexicalBlockFile(scope: !1201, file: !394, discriminator: 5)
!2453 = !DILocation(line: 2299, column: 237, scope: !2454)
!2454 = !DILexicalBlockFile(scope: !2446, file: !394, discriminator: 6)
!2455 = !DILocation(line: 2299, column: 255, scope: !2446)
!2456 = !DILocation(line: 2299, column: 265, scope: !2446)
!2457 = !DILocation(line: 2299, column: 290, scope: !2446)
!2458 = !DILocation(line: 2299, column: 221, scope: !2446)
!2459 = !DILocation(line: 2299, column: 309, scope: !2460)
!2460 = !DILexicalBlockFile(scope: !1202, file: !394, discriminator: 7)
!2461 = !DILocation(line: 2299, column: 309, scope: !1201)
!2462 = !DILocation(line: 2299, column: 309, scope: !2463)
!2463 = !DILexicalBlockFile(scope: !1201, file: !394, discriminator: 8)
!2464 = !DILocation(line: 2299, column: 322, scope: !2465)
!2465 = !DILexicalBlockFile(scope: !1202, file: !394, discriminator: 9)
!2466 = !DILocation(line: 2299, column: 324, scope: !2467)
!2467 = !DILexicalBlockFile(scope: !2468, file: !394, discriminator: 10)
!2468 = !DILexicalBlockFile(scope: !1182, file: !394, discriminator: 3)
!2469 = !DILocation(line: 2299, column: 324, scope: !1199)
!2470 = !DILocation(line: 2300, column: 5, scope: !1182)
!2471 = !DILocation(line: 2300, column: 10, scope: !2472)
!2472 = !DILexicalBlockFile(scope: !1205, file: !394, discriminator: 1)
!2473 = !DILocation(line: 2300, column: 20, scope: !1205)
!2474 = !DILocation(line: 2300, column: 43, scope: !1205)
!2475 = !DILocation(line: 2300, column: 49, scope: !1205)
!2476 = !{!2431, !1459, i64 24}
!2477 = !DILocation(line: 2300, column: 30, scope: !1205)
!2478 = !DILocation(line: 2300, column: 62, scope: !1209)
!2479 = !DILocation(line: 2300, column: 70, scope: !1209)
!2480 = !DILocation(line: 2300, column: 62, scope: !1205)
!2481 = !DILocation(line: 2300, column: 88, scope: !2482)
!2482 = !DILexicalBlockFile(scope: !1208, file: !394, discriminator: 2)
!2483 = !DILocation(line: 2300, column: 94, scope: !1208)
!2484 = !DILocation(line: 2300, column: 102, scope: !1208)
!2485 = !DILocation(line: 2300, column: 116, scope: !1208)
!2486 = !DILocation(line: 2300, column: 121, scope: !2487)
!2487 = !DILexicalBlockFile(scope: !1207, file: !394, discriminator: 4)
!2488 = !DILocation(line: 2300, column: 131, scope: !1207)
!2489 = !DILocation(line: 2300, column: 161, scope: !1207)
!2490 = !DILocation(line: 2300, column: 179, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !1207, file: !394, line: 2300, column: 176)
!2492 = !DILocation(line: 2300, column: 196, scope: !2491)
!2493 = !DILocation(line: 2300, column: 176, scope: !2491)
!2494 = !DILocation(line: 2300, column: 206, scope: !2491)
!2495 = !DILocation(line: 2300, column: 176, scope: !1207)
!2496 = !DILocation(line: 2300, column: 176, scope: !2497)
!2497 = !DILexicalBlockFile(scope: !1207, file: !394, discriminator: 5)
!2498 = !DILocation(line: 2300, column: 237, scope: !2499)
!2499 = !DILexicalBlockFile(scope: !2491, file: !394, discriminator: 6)
!2500 = !DILocation(line: 2300, column: 255, scope: !2491)
!2501 = !DILocation(line: 2300, column: 265, scope: !2491)
!2502 = !DILocation(line: 2300, column: 290, scope: !2491)
!2503 = !DILocation(line: 2300, column: 221, scope: !2491)
!2504 = !DILocation(line: 2300, column: 309, scope: !2505)
!2505 = !DILexicalBlockFile(scope: !1208, file: !394, discriminator: 7)
!2506 = !DILocation(line: 2300, column: 309, scope: !1207)
!2507 = !DILocation(line: 2300, column: 309, scope: !2508)
!2508 = !DILexicalBlockFile(scope: !1207, file: !394, discriminator: 8)
!2509 = !DILocation(line: 2300, column: 322, scope: !2510)
!2510 = !DILexicalBlockFile(scope: !1208, file: !394, discriminator: 9)
!2511 = !DILocation(line: 2300, column: 324, scope: !2467)
!2512 = !DILocation(line: 2300, column: 324, scope: !1205)
!2513 = !DILocation(line: 2301, column: 5, scope: !1182)
!2514 = !DILocation(line: 2301, column: 10, scope: !2515)
!2515 = !DILexicalBlockFile(scope: !1211, file: !394, discriminator: 1)
!2516 = !DILocation(line: 2301, column: 20, scope: !1211)
!2517 = !DILocation(line: 2301, column: 43, scope: !1211)
!2518 = !DILocation(line: 2301, column: 49, scope: !1211)
!2519 = !{!2431, !1459, i64 32}
!2520 = !DILocation(line: 2301, column: 60, scope: !1215)
!2521 = !DILocation(line: 2301, column: 68, scope: !1215)
!2522 = !DILocation(line: 2301, column: 60, scope: !1211)
!2523 = !DILocation(line: 2301, column: 86, scope: !2524)
!2524 = !DILexicalBlockFile(scope: !1214, file: !394, discriminator: 2)
!2525 = !DILocation(line: 2301, column: 92, scope: !1214)
!2526 = !DILocation(line: 2301, column: 98, scope: !1214)
!2527 = !DILocation(line: 2301, column: 112, scope: !1214)
!2528 = !DILocation(line: 2301, column: 117, scope: !2529)
!2529 = !DILexicalBlockFile(scope: !1213, file: !394, discriminator: 4)
!2530 = !DILocation(line: 2301, column: 127, scope: !1213)
!2531 = !DILocation(line: 2301, column: 157, scope: !1213)
!2532 = !DILocation(line: 2301, column: 175, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !1213, file: !394, line: 2301, column: 172)
!2534 = !DILocation(line: 2301, column: 192, scope: !2533)
!2535 = !DILocation(line: 2301, column: 172, scope: !2533)
!2536 = !DILocation(line: 2301, column: 202, scope: !2533)
!2537 = !DILocation(line: 2301, column: 172, scope: !1213)
!2538 = !DILocation(line: 2301, column: 172, scope: !2539)
!2539 = !DILexicalBlockFile(scope: !1213, file: !394, discriminator: 5)
!2540 = !DILocation(line: 2301, column: 233, scope: !2541)
!2541 = !DILexicalBlockFile(scope: !2533, file: !394, discriminator: 6)
!2542 = !DILocation(line: 2301, column: 251, scope: !2533)
!2543 = !DILocation(line: 2301, column: 261, scope: !2533)
!2544 = !DILocation(line: 2301, column: 286, scope: !2533)
!2545 = !DILocation(line: 2301, column: 217, scope: !2533)
!2546 = !DILocation(line: 2301, column: 305, scope: !2547)
!2547 = !DILexicalBlockFile(scope: !1214, file: !394, discriminator: 7)
!2548 = !DILocation(line: 2301, column: 305, scope: !1213)
!2549 = !DILocation(line: 2301, column: 305, scope: !2550)
!2550 = !DILexicalBlockFile(scope: !1213, file: !394, discriminator: 8)
!2551 = !DILocation(line: 2301, column: 318, scope: !2552)
!2552 = !DILexicalBlockFile(scope: !1214, file: !394, discriminator: 9)
!2553 = !DILocation(line: 2301, column: 320, scope: !2467)
!2554 = !DILocation(line: 2301, column: 320, scope: !1211)
!2555 = !DILocation(line: 2302, column: 19, scope: !1182)
!2556 = !DILocation(line: 2302, column: 7, scope: !1182)
!2557 = !DILocation(line: 2302, column: 27, scope: !1182)
!2558 = !DILocation(line: 2302, column: 37, scope: !1182)
!2559 = !DILocation(line: 2302, column: 58, scope: !1182)
!2560 = !DILocation(line: 2302, column: 45, scope: !1182)
!2561 = !DILocation(line: 2302, column: 5, scope: !1182)
!2562 = !DILocation(line: 2303, column: 1, scope: !1182)
!2563 = !DILocation(line: 2280, column: 33, scope: !1216)
!2564 = !DILocation(line: 2280, column: 49, scope: !1216)
!2565 = !DILocation(line: 2280, column: 62, scope: !1216)
!2566 = !DILocation(line: 2282, column: 5, scope: !1216)
!2567 = !DILocation(line: 2282, column: 14, scope: !2568)
!2568 = !DILexicalBlockFile(scope: !1225, file: !394, discriminator: 1)
!2569 = !DILocation(line: 2282, column: 20, scope: !1225)
!2570 = !DILocation(line: 2282, column: 14, scope: !1225)
!2571 = !DILocation(line: 2282, column: 14, scope: !1226)
!2572 = !DILocation(line: 2282, column: 28, scope: !2573)
!2573 = !DILexicalBlockFile(scope: !1224, file: !394, discriminator: 2)
!2574 = !DILocation(line: 2282, column: 32, scope: !1224)
!2575 = !DILocation(line: 2282, column: 39, scope: !1224)
!2576 = !DILocation(line: 2282, column: 58, scope: !1224)
!2577 = !DILocation(line: 2282, column: 64, scope: !1224)
!2578 = !DILocation(line: 2282, column: 71, scope: !1224)
!2579 = !DILocation(line: 2282, column: 81, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !1224, file: !394, line: 2282, column: 81)
!2581 = !DILocation(line: 2282, column: 81, scope: !1224)
!2582 = !DILocation(line: 2282, column: 94, scope: !2583)
!2583 = !DILexicalBlockFile(scope: !2580, file: !394, discriminator: 4)
!2584 = !DILocation(line: 2282, column: 87, scope: !2580)
!2585 = !DILocation(line: 2282, column: 100, scope: !2586)
!2586 = !DILexicalBlockFile(scope: !1225, file: !394, discriminator: 5)
!2587 = !DILocation(line: 2282, column: 100, scope: !2588)
!2588 = !DILexicalBlockFile(scope: !2589, file: !394, discriminator: 7)
!2589 = !DILexicalBlockFile(scope: !1225, file: !394, discriminator: 6)
!2590 = !DILocation(line: 2282, column: 100, scope: !1224)
!2591 = !DILocation(line: 2282, column: 102, scope: !2592)
!2592 = !DILexicalBlockFile(scope: !2593, file: !394, discriminator: 8)
!2593 = !DILexicalBlockFile(scope: !1226, file: !394, discriminator: 3)
!2594 = !DILocation(line: 2283, column: 5, scope: !1216)
!2595 = !DILocation(line: 2284, column: 1, scope: !1216)
!2596 = !DILocation(line: 2287, column: 30, scope: !1227)
!2597 = !DILocation(line: 2289, column: 5, scope: !1227)
!2598 = !DILocation(line: 2289, column: 10, scope: !2599)
!2599 = !DILexicalBlockFile(scope: !1233, file: !394, discriminator: 1)
!2600 = !DILocation(line: 2289, column: 20, scope: !1233)
!2601 = !DILocation(line: 2289, column: 43, scope: !1233)
!2602 = !DILocation(line: 2289, column: 49, scope: !1233)
!2603 = !DILocation(line: 2289, column: 30, scope: !1233)
!2604 = !DILocation(line: 2289, column: 62, scope: !1237)
!2605 = !DILocation(line: 2289, column: 70, scope: !1237)
!2606 = !DILocation(line: 2289, column: 62, scope: !1233)
!2607 = !DILocation(line: 2289, column: 88, scope: !2608)
!2608 = !DILexicalBlockFile(scope: !1236, file: !394, discriminator: 2)
!2609 = !DILocation(line: 2289, column: 94, scope: !1236)
!2610 = !DILocation(line: 2289, column: 102, scope: !1236)
!2611 = !DILocation(line: 2289, column: 116, scope: !1236)
!2612 = !DILocation(line: 2289, column: 121, scope: !2613)
!2613 = !DILexicalBlockFile(scope: !1235, file: !394, discriminator: 4)
!2614 = !DILocation(line: 2289, column: 131, scope: !1235)
!2615 = !DILocation(line: 2289, column: 161, scope: !1235)
!2616 = !DILocation(line: 2289, column: 179, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !1235, file: !394, line: 2289, column: 176)
!2618 = !DILocation(line: 2289, column: 196, scope: !2617)
!2619 = !DILocation(line: 2289, column: 176, scope: !2617)
!2620 = !DILocation(line: 2289, column: 206, scope: !2617)
!2621 = !DILocation(line: 2289, column: 176, scope: !1235)
!2622 = !DILocation(line: 2289, column: 176, scope: !2623)
!2623 = !DILexicalBlockFile(scope: !1235, file: !394, discriminator: 5)
!2624 = !DILocation(line: 2289, column: 237, scope: !2625)
!2625 = !DILexicalBlockFile(scope: !2617, file: !394, discriminator: 6)
!2626 = !DILocation(line: 2289, column: 255, scope: !2617)
!2627 = !DILocation(line: 2289, column: 265, scope: !2617)
!2628 = !DILocation(line: 2289, column: 290, scope: !2617)
!2629 = !DILocation(line: 2289, column: 221, scope: !2617)
!2630 = !DILocation(line: 2289, column: 309, scope: !2631)
!2631 = !DILexicalBlockFile(scope: !1236, file: !394, discriminator: 7)
!2632 = !DILocation(line: 2289, column: 309, scope: !1235)
!2633 = !DILocation(line: 2289, column: 309, scope: !2634)
!2634 = !DILexicalBlockFile(scope: !1235, file: !394, discriminator: 8)
!2635 = !DILocation(line: 2289, column: 322, scope: !2636)
!2636 = !DILexicalBlockFile(scope: !1236, file: !394, discriminator: 9)
!2637 = !DILocation(line: 2289, column: 324, scope: !2638)
!2638 = !DILexicalBlockFile(scope: !2639, file: !394, discriminator: 10)
!2639 = !DILexicalBlockFile(scope: !1227, file: !394, discriminator: 3)
!2640 = !DILocation(line: 2289, column: 324, scope: !1233)
!2641 = !DILocation(line: 2290, column: 5, scope: !1227)
!2642 = !DILocation(line: 2290, column: 10, scope: !2643)
!2643 = !DILexicalBlockFile(scope: !1239, file: !394, discriminator: 1)
!2644 = !DILocation(line: 2290, column: 20, scope: !1239)
!2645 = !DILocation(line: 2290, column: 43, scope: !1239)
!2646 = !DILocation(line: 2290, column: 49, scope: !1239)
!2647 = !DILocation(line: 2290, column: 30, scope: !1239)
!2648 = !DILocation(line: 2290, column: 62, scope: !1243)
!2649 = !DILocation(line: 2290, column: 70, scope: !1243)
!2650 = !DILocation(line: 2290, column: 62, scope: !1239)
!2651 = !DILocation(line: 2290, column: 88, scope: !2652)
!2652 = !DILexicalBlockFile(scope: !1242, file: !394, discriminator: 2)
!2653 = !DILocation(line: 2290, column: 94, scope: !1242)
!2654 = !DILocation(line: 2290, column: 102, scope: !1242)
!2655 = !DILocation(line: 2290, column: 116, scope: !1242)
!2656 = !DILocation(line: 2290, column: 121, scope: !2657)
!2657 = !DILexicalBlockFile(scope: !1241, file: !394, discriminator: 4)
!2658 = !DILocation(line: 2290, column: 131, scope: !1241)
!2659 = !DILocation(line: 2290, column: 161, scope: !1241)
!2660 = !DILocation(line: 2290, column: 179, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !1241, file: !394, line: 2290, column: 176)
!2662 = !DILocation(line: 2290, column: 196, scope: !2661)
!2663 = !DILocation(line: 2290, column: 176, scope: !2661)
!2664 = !DILocation(line: 2290, column: 206, scope: !2661)
!2665 = !DILocation(line: 2290, column: 176, scope: !1241)
!2666 = !DILocation(line: 2290, column: 176, scope: !2667)
!2667 = !DILexicalBlockFile(scope: !1241, file: !394, discriminator: 5)
!2668 = !DILocation(line: 2290, column: 237, scope: !2669)
!2669 = !DILexicalBlockFile(scope: !2661, file: !394, discriminator: 6)
!2670 = !DILocation(line: 2290, column: 255, scope: !2661)
!2671 = !DILocation(line: 2290, column: 265, scope: !2661)
!2672 = !DILocation(line: 2290, column: 290, scope: !2661)
!2673 = !DILocation(line: 2290, column: 221, scope: !2661)
!2674 = !DILocation(line: 2290, column: 309, scope: !2675)
!2675 = !DILexicalBlockFile(scope: !1242, file: !394, discriminator: 7)
!2676 = !DILocation(line: 2290, column: 309, scope: !1241)
!2677 = !DILocation(line: 2290, column: 309, scope: !2678)
!2678 = !DILexicalBlockFile(scope: !1241, file: !394, discriminator: 8)
!2679 = !DILocation(line: 2290, column: 322, scope: !2680)
!2680 = !DILexicalBlockFile(scope: !1242, file: !394, discriminator: 9)
!2681 = !DILocation(line: 2290, column: 324, scope: !2638)
!2682 = !DILocation(line: 2290, column: 324, scope: !1239)
!2683 = !DILocation(line: 2291, column: 5, scope: !1227)
!2684 = !DILocation(line: 2291, column: 10, scope: !2685)
!2685 = !DILexicalBlockFile(scope: !1245, file: !394, discriminator: 1)
!2686 = !DILocation(line: 2291, column: 20, scope: !1245)
!2687 = !DILocation(line: 2291, column: 43, scope: !1245)
!2688 = !DILocation(line: 2291, column: 49, scope: !1245)
!2689 = !DILocation(line: 2291, column: 60, scope: !1249)
!2690 = !DILocation(line: 2291, column: 68, scope: !1249)
!2691 = !DILocation(line: 2291, column: 60, scope: !1245)
!2692 = !DILocation(line: 2291, column: 86, scope: !2693)
!2693 = !DILexicalBlockFile(scope: !1248, file: !394, discriminator: 2)
!2694 = !DILocation(line: 2291, column: 92, scope: !1248)
!2695 = !DILocation(line: 2291, column: 98, scope: !1248)
!2696 = !DILocation(line: 2291, column: 112, scope: !1248)
!2697 = !DILocation(line: 2291, column: 117, scope: !2698)
!2698 = !DILexicalBlockFile(scope: !1247, file: !394, discriminator: 4)
!2699 = !DILocation(line: 2291, column: 127, scope: !1247)
!2700 = !DILocation(line: 2291, column: 157, scope: !1247)
!2701 = !DILocation(line: 2291, column: 175, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !1247, file: !394, line: 2291, column: 172)
!2703 = !DILocation(line: 2291, column: 192, scope: !2702)
!2704 = !DILocation(line: 2291, column: 172, scope: !2702)
!2705 = !DILocation(line: 2291, column: 202, scope: !2702)
!2706 = !DILocation(line: 2291, column: 172, scope: !1247)
!2707 = !DILocation(line: 2291, column: 172, scope: !2708)
!2708 = !DILexicalBlockFile(scope: !1247, file: !394, discriminator: 5)
!2709 = !DILocation(line: 2291, column: 233, scope: !2710)
!2710 = !DILexicalBlockFile(scope: !2702, file: !394, discriminator: 6)
!2711 = !DILocation(line: 2291, column: 251, scope: !2702)
!2712 = !DILocation(line: 2291, column: 261, scope: !2702)
!2713 = !DILocation(line: 2291, column: 286, scope: !2702)
!2714 = !DILocation(line: 2291, column: 217, scope: !2702)
!2715 = !DILocation(line: 2291, column: 305, scope: !2716)
!2716 = !DILexicalBlockFile(scope: !1248, file: !394, discriminator: 7)
!2717 = !DILocation(line: 2291, column: 305, scope: !1247)
!2718 = !DILocation(line: 2291, column: 305, scope: !2719)
!2719 = !DILexicalBlockFile(scope: !1247, file: !394, discriminator: 8)
!2720 = !DILocation(line: 2291, column: 318, scope: !2721)
!2721 = !DILexicalBlockFile(scope: !1248, file: !394, discriminator: 9)
!2722 = !DILocation(line: 2291, column: 320, scope: !2638)
!2723 = !DILocation(line: 2291, column: 320, scope: !1245)
!2724 = !DILocation(line: 2292, column: 5, scope: !1227)
!2725 = !DILocation(line: 2249, column: 29, scope: !1323)
!2726 = !DILocation(line: 2249, column: 45, scope: !1323)
!2727 = !DILocation(line: 2249, column: 61, scope: !1323)
!2728 = !DILocation(line: 2251, column: 5, scope: !1323)
!2729 = !DILocation(line: 2251, column: 15, scope: !1323)
!2730 = !DILocation(line: 2251, column: 24, scope: !1323)
!2731 = !DILocation(line: 2252, column: 5, scope: !1323)
!2732 = !DILocation(line: 2252, column: 16, scope: !1323)
!2733 = !DILocation(line: 2254, column: 34, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !1323, file: !394, line: 2254, column: 9)
!2735 = !DILocation(line: 2254, column: 10, scope: !2734)
!2736 = !DILocation(line: 2254, column: 9, scope: !1323)
!2737 = !DILocation(line: 2256, column: 9, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2734, file: !394, line: 2255, column: 42)
!2739 = !DILocation(line: 2259, column: 34, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !1323, file: !394, line: 2259, column: 9)
!2741 = !DILocation(line: 2259, column: 9, scope: !2740)
!2742 = !DILocation(line: 2259, column: 74, scope: !2740)
!2743 = !DILocation(line: 2259, column: 9, scope: !1323)
!2744 = !DILocation(line: 2260, column: 9, scope: !2740)
!2745 = !DILocation(line: 2261, column: 34, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !1323, file: !394, line: 2261, column: 9)
!2747 = !DILocation(line: 2261, column: 9, scope: !2746)
!2748 = !DILocation(line: 2261, column: 74, scope: !2746)
!2749 = !DILocation(line: 2261, column: 9, scope: !1323)
!2750 = !DILocation(line: 2262, column: 9, scope: !2746)
!2751 = !DILocation(line: 2265, column: 56, scope: !1323)
!2752 = !DILocation(line: 2265, column: 64, scope: !1323)
!2753 = !DILocation(line: 2264, column: 33, scope: !1323)
!2754 = !DILocation(line: 2264, column: 20, scope: !1323)
!2755 = !DILocation(line: 2264, column: 5, scope: !1323)
!2756 = !DILocation(line: 2264, column: 11, scope: !1323)
!2757 = !DILocation(line: 2264, column: 18, scope: !1323)
!2758 = !DILocation(line: 2266, column: 9, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !1323, file: !394, line: 2266, column: 9)
!2760 = !DILocation(line: 2266, column: 15, scope: !2759)
!2761 = !DILocation(line: 2266, column: 22, scope: !2759)
!2762 = !DILocation(line: 2266, column: 9, scope: !1323)
!2763 = !DILocation(line: 2267, column: 9, scope: !2759)
!2764 = !DILocation(line: 2270, column: 56, scope: !1323)
!2765 = !DILocation(line: 2270, column: 64, scope: !1323)
!2766 = !DILocation(line: 2269, column: 33, scope: !1323)
!2767 = !DILocation(line: 2269, column: 20, scope: !1323)
!2768 = !DILocation(line: 2269, column: 5, scope: !1323)
!2769 = !DILocation(line: 2269, column: 11, scope: !1323)
!2770 = !DILocation(line: 2269, column: 18, scope: !1323)
!2771 = !DILocation(line: 2271, column: 9, scope: !1336)
!2772 = !DILocation(line: 2271, column: 15, scope: !1336)
!2773 = !DILocation(line: 2271, column: 22, scope: !1336)
!2774 = !DILocation(line: 2271, column: 9, scope: !1323)
!2775 = !DILocation(line: 2272, column: 9, scope: !1335)
!2776 = !DILocation(line: 2272, column: 14, scope: !2777)
!2777 = !DILexicalBlockFile(scope: !1334, file: !394, discriminator: 1)
!2778 = !DILocation(line: 2272, column: 24, scope: !1334)
!2779 = !DILocation(line: 2272, column: 47, scope: !1334)
!2780 = !DILocation(line: 2272, column: 53, scope: !1334)
!2781 = !DILocation(line: 2272, column: 34, scope: !1334)
!2782 = !DILocation(line: 2272, column: 66, scope: !1340)
!2783 = !DILocation(line: 2272, column: 74, scope: !1340)
!2784 = !DILocation(line: 2272, column: 66, scope: !1334)
!2785 = !DILocation(line: 2272, column: 92, scope: !2786)
!2786 = !DILexicalBlockFile(scope: !1339, file: !394, discriminator: 2)
!2787 = !DILocation(line: 2272, column: 98, scope: !1339)
!2788 = !DILocation(line: 2272, column: 106, scope: !1339)
!2789 = !DILocation(line: 2272, column: 120, scope: !1339)
!2790 = !DILocation(line: 2272, column: 125, scope: !2791)
!2791 = !DILexicalBlockFile(scope: !1338, file: !394, discriminator: 4)
!2792 = !DILocation(line: 2272, column: 135, scope: !1338)
!2793 = !DILocation(line: 2272, column: 165, scope: !1338)
!2794 = !DILocation(line: 2272, column: 183, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !1338, file: !394, line: 2272, column: 180)
!2796 = !DILocation(line: 2272, column: 200, scope: !2795)
!2797 = !DILocation(line: 2272, column: 180, scope: !2795)
!2798 = !DILocation(line: 2272, column: 210, scope: !2795)
!2799 = !DILocation(line: 2272, column: 180, scope: !1338)
!2800 = !DILocation(line: 2272, column: 180, scope: !2801)
!2801 = !DILexicalBlockFile(scope: !1338, file: !394, discriminator: 5)
!2802 = !DILocation(line: 2272, column: 241, scope: !2803)
!2803 = !DILexicalBlockFile(scope: !2795, file: !394, discriminator: 6)
!2804 = !DILocation(line: 2272, column: 259, scope: !2795)
!2805 = !DILocation(line: 2272, column: 269, scope: !2795)
!2806 = !DILocation(line: 2272, column: 294, scope: !2795)
!2807 = !DILocation(line: 2272, column: 225, scope: !2795)
!2808 = !DILocation(line: 2272, column: 313, scope: !2809)
!2809 = !DILexicalBlockFile(scope: !1339, file: !394, discriminator: 7)
!2810 = !DILocation(line: 2272, column: 313, scope: !1338)
!2811 = !DILocation(line: 2272, column: 313, scope: !2812)
!2812 = !DILexicalBlockFile(scope: !1338, file: !394, discriminator: 8)
!2813 = !DILocation(line: 2272, column: 326, scope: !2814)
!2814 = !DILexicalBlockFile(scope: !1339, file: !394, discriminator: 9)
!2815 = !DILocation(line: 2272, column: 328, scope: !2816)
!2816 = !DILexicalBlockFile(scope: !2817, file: !394, discriminator: 10)
!2817 = !DILexicalBlockFile(scope: !1335, file: !394, discriminator: 3)
!2818 = !DILocation(line: 2272, column: 328, scope: !1334)
!2819 = !DILocation(line: 2272, column: 328, scope: !2820)
!2820 = !DILexicalBlockFile(scope: !1334, file: !394, discriminator: 11)
!2821 = !DILocation(line: 2273, column: 9, scope: !1335)
!2822 = !DILocation(line: 2276, column: 5, scope: !1323)
!2823 = !DILocation(line: 2277, column: 1, scope: !1323)
!2824 = !DILocation(line: 2502, column: 31, scope: !1341)
!2825 = !DILocation(line: 2502, column: 47, scope: !1341)
!2826 = !DILocation(line: 2502, column: 63, scope: !1341)
!2827 = !DILocation(line: 2504, column: 5, scope: !1341)
!2828 = !DILocation(line: 2504, column: 11, scope: !1341)
!2829 = !DILocation(line: 2505, column: 5, scope: !1341)
!2830 = !DILocation(line: 2505, column: 16, scope: !1341)
!2831 = !DILocation(line: 2506, column: 5, scope: !1341)
!2832 = !DILocation(line: 2506, column: 15, scope: !1341)
!2833 = !DILocation(line: 2508, column: 5, scope: !1341)
!2834 = !DILocation(line: 2508, column: 11, scope: !1341)
!2835 = !DILocation(line: 2508, column: 14, scope: !1341)
!2836 = !DILocation(line: 2509, column: 5, scope: !1341)
!2837 = !DILocation(line: 2509, column: 11, scope: !1341)
!2838 = !DILocation(line: 2509, column: 20, scope: !1341)
!2839 = !DILocation(line: 2511, column: 45, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !1341, file: !394, line: 2511, column: 9)
!2841 = !DILocation(line: 2511, column: 51, scope: !2840)
!2842 = !DILocation(line: 2511, column: 79, scope: !2840)
!2843 = !DILocation(line: 2511, column: 10, scope: !2840)
!2844 = !DILocation(line: 2511, column: 9, scope: !1341)
!2845 = !DILocation(line: 2513, column: 9, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2840, file: !394, line: 2512, column: 59)
!2847 = !DILocation(line: 2516, column: 34, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !1341, file: !394, line: 2516, column: 9)
!2849 = !DILocation(line: 2516, column: 9, scope: !2848)
!2850 = !DILocation(line: 2516, column: 71, scope: !2848)
!2851 = !DILocation(line: 2516, column: 9, scope: !1341)
!2852 = !DILocation(line: 2517, column: 9, scope: !2848)
!2853 = !DILocation(line: 2518, column: 34, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !1341, file: !394, line: 2518, column: 9)
!2855 = !DILocation(line: 2518, column: 9, scope: !2854)
!2856 = !DILocation(line: 2518, column: 71, scope: !2854)
!2857 = !DILocation(line: 2518, column: 9, scope: !1341)
!2858 = !DILocation(line: 2519, column: 9, scope: !2854)
!2859 = !DILocation(line: 2520, column: 34, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !1341, file: !394, line: 2520, column: 9)
!2861 = !DILocation(line: 2520, column: 9, scope: !2860)
!2862 = !DILocation(line: 2520, column: 71, scope: !2860)
!2863 = !DILocation(line: 2520, column: 9, scope: !1341)
!2864 = !DILocation(line: 2521, column: 9, scope: !2860)
!2865 = !DILocation(line: 2523, column: 5, scope: !1341)
!2866 = !DILocation(line: 2523, column: 10, scope: !2867)
!2867 = !DILexicalBlockFile(scope: !1350, file: !394, discriminator: 1)
!2868 = !DILocation(line: 2523, column: 20, scope: !1350)
!2869 = !DILocation(line: 2523, column: 43, scope: !1350)
!2870 = !DILocation(line: 2523, column: 49, scope: !1350)
!2871 = !DILocation(line: 2523, column: 59, scope: !1354)
!2872 = !DILocation(line: 2523, column: 67, scope: !1354)
!2873 = !DILocation(line: 2523, column: 59, scope: !1350)
!2874 = !DILocation(line: 2523, column: 85, scope: !2875)
!2875 = !DILexicalBlockFile(scope: !1353, file: !394, discriminator: 2)
!2876 = !DILocation(line: 2523, column: 91, scope: !1353)
!2877 = !DILocation(line: 2523, column: 96, scope: !1353)
!2878 = !DILocation(line: 2523, column: 110, scope: !1353)
!2879 = !DILocation(line: 2523, column: 115, scope: !2880)
!2880 = !DILexicalBlockFile(scope: !1352, file: !394, discriminator: 4)
!2881 = !DILocation(line: 2523, column: 125, scope: !1352)
!2882 = !DILocation(line: 2523, column: 155, scope: !1352)
!2883 = !DILocation(line: 2523, column: 173, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !1352, file: !394, line: 2523, column: 170)
!2885 = !DILocation(line: 2523, column: 190, scope: !2884)
!2886 = !DILocation(line: 2523, column: 170, scope: !2884)
!2887 = !DILocation(line: 2523, column: 200, scope: !2884)
!2888 = !DILocation(line: 2523, column: 170, scope: !1352)
!2889 = !DILocation(line: 2523, column: 170, scope: !2890)
!2890 = !DILexicalBlockFile(scope: !1352, file: !394, discriminator: 5)
!2891 = !DILocation(line: 2523, column: 231, scope: !2892)
!2892 = !DILexicalBlockFile(scope: !2884, file: !394, discriminator: 6)
!2893 = !DILocation(line: 2523, column: 249, scope: !2884)
!2894 = !DILocation(line: 2523, column: 259, scope: !2884)
!2895 = !DILocation(line: 2523, column: 284, scope: !2884)
!2896 = !DILocation(line: 2523, column: 215, scope: !2884)
!2897 = !DILocation(line: 2523, column: 303, scope: !2898)
!2898 = !DILexicalBlockFile(scope: !1353, file: !394, discriminator: 7)
!2899 = !DILocation(line: 2523, column: 303, scope: !1352)
!2900 = !DILocation(line: 2523, column: 303, scope: !2901)
!2901 = !DILexicalBlockFile(scope: !1352, file: !394, discriminator: 8)
!2902 = !DILocation(line: 2523, column: 316, scope: !2903)
!2903 = !DILexicalBlockFile(scope: !1353, file: !394, discriminator: 9)
!2904 = !DILocation(line: 2523, column: 318, scope: !2905)
!2905 = !DILexicalBlockFile(scope: !2906, file: !394, discriminator: 10)
!2906 = !DILexicalBlockFile(scope: !1341, file: !394, discriminator: 3)
!2907 = !DILocation(line: 2523, column: 318, scope: !1350)
!2908 = !DILocation(line: 2523, column: 318, scope: !2909)
!2909 = !DILexicalBlockFile(scope: !1350, file: !394, discriminator: 11)
!2910 = !DILocation(line: 2524, column: 21, scope: !1341)
!2911 = !DILocation(line: 2524, column: 28, scope: !1341)
!2912 = !DILocation(line: 2524, column: 37, scope: !1341)
!2913 = !DILocation(line: 2525, column: 17, scope: !1341)
!2914 = !DILocation(line: 2525, column: 5, scope: !1341)
!2915 = !DILocation(line: 2525, column: 11, scope: !1341)
!2916 = !DILocation(line: 2525, column: 15, scope: !1341)
!2917 = !DILocation(line: 2526, column: 25, scope: !1341)
!2918 = !DILocation(line: 2526, column: 5, scope: !1341)
!2919 = !DILocation(line: 2526, column: 11, scope: !1341)
!2920 = !DILocation(line: 2526, column: 23, scope: !1341)
!2921 = !DILocation(line: 2527, column: 5, scope: !1341)
!2922 = !DILocation(line: 2527, column: 11, scope: !1341)
!2923 = !DILocation(line: 2527, column: 20, scope: !1341)
!2924 = !DILocation(line: 2528, column: 5, scope: !1341)
!2925 = !DILocation(line: 2528, column: 11, scope: !1341)
!2926 = !DILocation(line: 2528, column: 20, scope: !1341)
!2927 = !DILocation(line: 2530, column: 24, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !1341, file: !394, line: 2530, column: 9)
!2929 = !DILocation(line: 2530, column: 9, scope: !2928)
!2930 = !DILocation(line: 2530, column: 30, scope: !2928)
!2931 = !DILocation(line: 2530, column: 9, scope: !1341)
!2932 = !DILocation(line: 2531, column: 9, scope: !2928)
!2933 = !DILocation(line: 2532, column: 31, scope: !1341)
!2934 = !DILocation(line: 2532, column: 5, scope: !1341)
!2935 = !DILocation(line: 2533, column: 31, scope: !1341)
!2936 = !DILocation(line: 2533, column: 5, scope: !1341)
!2937 = !DILocation(line: 2534, column: 5, scope: !1341)
!2938 = !DILocation(line: 2534, column: 11, scope: !1341)
!2939 = !DILocation(line: 2534, column: 15, scope: !1341)
!2940 = !DILocation(line: 2536, column: 47, scope: !1341)
!2941 = !DILocation(line: 2536, column: 35, scope: !1341)
!2942 = !DILocation(line: 2536, column: 55, scope: !1341)
!2943 = !DILocation(line: 2536, column: 64, scope: !1341)
!2944 = !DILocation(line: 2536, column: 90, scope: !1341)
!2945 = !DILocation(line: 2537, column: 47, scope: !1341)
!2946 = !DILocation(line: 2537, column: 54, scope: !1341)
!2947 = !DILocation(line: 2537, column: 63, scope: !1341)
!2948 = !DILocation(line: 2536, column: 90, scope: !2949)
!2949 = !DILexicalBlockFile(scope: !1341, file: !394, discriminator: 1)
!2950 = !DILocation(line: 2536, column: 5, scope: !1341)
!2951 = !DILocation(line: 2536, column: 11, scope: !1341)
!2952 = !DILocation(line: 2536, column: 30, scope: !1341)
!2953 = !DILocation(line: 2539, column: 5, scope: !1341)
!2954 = !DILocation(line: 2539, column: 11, scope: !1341)
!2955 = !DILocation(line: 2539, column: 14, scope: !1341)
!2956 = !DILocation(line: 2540, column: 5, scope: !1341)
!2957 = !DILocation(line: 2541, column: 1, scope: !1341)
!2958 = !DILocation(line: 107, column: 33, scope: !444)
!2959 = !DILocation(line: 109, column: 12, scope: !444)
!2960 = !DILocation(line: 109, column: 5, scope: !444)
!2961 = !DILocation(line: 131, column: 31, scope: !460)
!2962 = !DILocation(line: 131, column: 47, scope: !460)
!2963 = !DILocation(line: 133, column: 12, scope: !460)
!2964 = !DILocation(line: 133, column: 5, scope: !460)
!2965 = !DILocation(line: 144, column: 32, scope: !464)
!2966 = !DILocation(line: 144, column: 48, scope: !464)
!2967 = !DILocation(line: 146, column: 12, scope: !464)
!2968 = !DILocation(line: 146, column: 5, scope: !464)
!2969 = !DILocation(line: 50, column: 35, scope: !468)
!2970 = !DILocation(line: 50, column: 51, scope: !468)
!2971 = !DILocation(line: 52, column: 5, scope: !468)
!2972 = !DILocation(line: 52, column: 15, scope: !468)
!2973 = !DILocation(line: 53, column: 5, scope: !468)
!2974 = !DILocation(line: 53, column: 16, scope: !468)
!2975 = !DILocation(line: 54, column: 5, scope: !468)
!2976 = !DILocation(line: 54, column: 15, scope: !468)
!2977 = !DILocation(line: 56, column: 34, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !468, file: !394, line: 56, column: 9)
!2979 = !DILocation(line: 56, column: 10, scope: !2978)
!2980 = !DILocation(line: 56, column: 9, scope: !468)
!2981 = !DILocation(line: 57, column: 9, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2978, file: !394, line: 56, column: 62)
!2983 = !DILocation(line: 60, column: 41, scope: !468)
!2984 = !DILocation(line: 60, column: 68, scope: !468)
!2985 = !{!2986, !1483, i64 16}
!2986 = !{!"bufferinfo", !1459, i64 0, !1459, i64 8, !1483, i64 16, !1483, i64 24, !1514, i64 32, !1514, i64 36, !1459, i64 40, !1459, i64 48, !1459, i64 56, !1459, i64 64, !1459, i64 72}
!2987 = !DILocation(line: 60, column: 12, scope: !468)
!2988 = !DILocation(line: 60, column: 10, scope: !468)
!2989 = !DILocation(line: 61, column: 9, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !468, file: !394, line: 61, column: 9)
!2991 = !DILocation(line: 61, column: 14, scope: !2990)
!2992 = !DILocation(line: 61, column: 9, scope: !468)
!2993 = !DILocation(line: 62, column: 9, scope: !2990)
!2994 = !DILocation(line: 64, column: 27, scope: !478)
!2995 = !DILocation(line: 64, column: 35, scope: !478)
!2996 = !DILocation(line: 64, column: 46, scope: !478)
!2997 = !DILocation(line: 64, column: 55, scope: !478)
!2998 = !DILocation(line: 64, column: 72, scope: !478)
!2999 = !DILocation(line: 64, column: 9, scope: !468)
!3000 = !DILocation(line: 65, column: 9, scope: !477)
!3001 = !DILocation(line: 65, column: 14, scope: !3002)
!3002 = !DILexicalBlockFile(scope: !476, file: !394, discriminator: 1)
!3003 = !DILocation(line: 65, column: 24, scope: !476)
!3004 = !DILocation(line: 65, column: 54, scope: !476)
!3005 = !DILocation(line: 65, column: 69, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !476, file: !394, line: 65, column: 66)
!3007 = !DILocation(line: 65, column: 86, scope: !3006)
!3008 = !DILocation(line: 65, column: 66, scope: !3006)
!3009 = !DILocation(line: 65, column: 96, scope: !3006)
!3010 = !DILocation(line: 65, column: 66, scope: !476)
!3011 = !DILocation(line: 65, column: 66, scope: !3012)
!3012 = !DILexicalBlockFile(scope: !476, file: !394, discriminator: 2)
!3013 = !DILocation(line: 65, column: 127, scope: !3014)
!3014 = !DILexicalBlockFile(scope: !3006, file: !394, discriminator: 3)
!3015 = !DILocation(line: 65, column: 145, scope: !3006)
!3016 = !DILocation(line: 65, column: 155, scope: !3006)
!3017 = !DILocation(line: 65, column: 180, scope: !3006)
!3018 = !DILocation(line: 65, column: 111, scope: !3006)
!3019 = !DILocation(line: 65, column: 199, scope: !3020)
!3020 = !DILexicalBlockFile(scope: !477, file: !394, discriminator: 4)
!3021 = !DILocation(line: 65, column: 199, scope: !476)
!3022 = !DILocation(line: 65, column: 199, scope: !3023)
!3023 = !DILexicalBlockFile(scope: !476, file: !394, discriminator: 5)
!3024 = !DILocation(line: 66, column: 25, scope: !477)
!3025 = !DILocation(line: 66, column: 9, scope: !477)
!3026 = !DILocation(line: 67, column: 9, scope: !477)
!3027 = !DILocation(line: 70, column: 28, scope: !468)
!3028 = !DILocation(line: 70, column: 13, scope: !468)
!3029 = !DILocation(line: 70, column: 36, scope: !468)
!3030 = !DILocation(line: 70, column: 9, scope: !468)
!3031 = !DILocation(line: 71, column: 9, scope: !482)
!3032 = !DILocation(line: 71, column: 19, scope: !482)
!3033 = !DILocation(line: 71, column: 13, scope: !482)
!3034 = !DILocation(line: 71, column: 9, scope: !468)
!3035 = !DILocation(line: 72, column: 22, scope: !481)
!3036 = !DILocation(line: 75, column: 26, scope: !481)
!3037 = !DILocation(line: 75, column: 31, scope: !481)
!3038 = !DILocation(line: 72, column: 9, scope: !481)
!3039 = !DILocation(line: 76, column: 9, scope: !481)
!3040 = !DILocation(line: 76, column: 14, scope: !3041)
!3041 = !DILexicalBlockFile(scope: !480, file: !394, discriminator: 1)
!3042 = !DILocation(line: 76, column: 24, scope: !480)
!3043 = !DILocation(line: 76, column: 54, scope: !480)
!3044 = !DILocation(line: 76, column: 69, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !480, file: !394, line: 76, column: 66)
!3046 = !DILocation(line: 76, column: 86, scope: !3045)
!3047 = !DILocation(line: 76, column: 66, scope: !3045)
!3048 = !DILocation(line: 76, column: 96, scope: !3045)
!3049 = !DILocation(line: 76, column: 66, scope: !480)
!3050 = !DILocation(line: 76, column: 66, scope: !3051)
!3051 = !DILexicalBlockFile(scope: !480, file: !394, discriminator: 2)
!3052 = !DILocation(line: 76, column: 127, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !3045, file: !394, discriminator: 3)
!3054 = !DILocation(line: 76, column: 145, scope: !3045)
!3055 = !DILocation(line: 76, column: 155, scope: !3045)
!3056 = !DILocation(line: 76, column: 180, scope: !3045)
!3057 = !DILocation(line: 76, column: 111, scope: !3045)
!3058 = !DILocation(line: 76, column: 199, scope: !3059)
!3059 = !DILexicalBlockFile(scope: !481, file: !394, discriminator: 4)
!3060 = !DILocation(line: 76, column: 199, scope: !480)
!3061 = !DILocation(line: 76, column: 199, scope: !3062)
!3062 = !DILexicalBlockFile(scope: !480, file: !394, discriminator: 5)
!3063 = !DILocation(line: 77, column: 9, scope: !481)
!3064 = !DILocation(line: 79, column: 16, scope: !468)
!3065 = !{!2986, !1459, i64 0}
!3066 = !DILocation(line: 79, column: 56, scope: !468)
!3067 = !DILocation(line: 79, column: 38, scope: !468)
!3068 = !DILocation(line: 79, column: 64, scope: !468)
!3069 = !DILocation(line: 79, column: 36, scope: !468)
!3070 = !DILocation(line: 79, column: 75, scope: !468)
!3071 = !DILocation(line: 79, column: 5, scope: !468)
!3072 = !DILocation(line: 81, column: 5, scope: !468)
!3073 = !DILocation(line: 82, column: 5, scope: !468)
!3074 = !DILocation(line: 82, column: 10, scope: !3075)
!3075 = !DILexicalBlockFile(scope: !484, file: !394, discriminator: 1)
!3076 = !DILocation(line: 82, column: 20, scope: !484)
!3077 = !DILocation(line: 82, column: 50, scope: !484)
!3078 = !DILocation(line: 82, column: 65, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !484, file: !394, line: 82, column: 62)
!3080 = !DILocation(line: 82, column: 82, scope: !3079)
!3081 = !DILocation(line: 82, column: 62, scope: !3079)
!3082 = !DILocation(line: 82, column: 92, scope: !3079)
!3083 = !DILocation(line: 82, column: 62, scope: !484)
!3084 = !DILocation(line: 82, column: 62, scope: !3085)
!3085 = !DILexicalBlockFile(scope: !484, file: !394, discriminator: 2)
!3086 = !DILocation(line: 82, column: 123, scope: !3087)
!3087 = !DILexicalBlockFile(scope: !3079, file: !394, discriminator: 3)
!3088 = !DILocation(line: 82, column: 141, scope: !3079)
!3089 = !DILocation(line: 82, column: 151, scope: !3079)
!3090 = !DILocation(line: 82, column: 176, scope: !3079)
!3091 = !DILocation(line: 82, column: 107, scope: !3079)
!3092 = !DILocation(line: 82, column: 195, scope: !3093)
!3093 = !DILexicalBlockFile(scope: !468, file: !394, discriminator: 4)
!3094 = !DILocation(line: 82, column: 195, scope: !484)
!3095 = !DILocation(line: 82, column: 195, scope: !3096)
!3096 = !DILexicalBlockFile(scope: !484, file: !394, discriminator: 5)
!3097 = !DILocation(line: 84, column: 31, scope: !468)
!3098 = !DILocation(line: 84, column: 12, scope: !468)
!3099 = !DILocation(line: 84, column: 5, scope: !468)
!3100 = !DILocation(line: 87, column: 5, scope: !468)
!3101 = !DILocation(line: 88, column: 5, scope: !468)
!3102 = !DILocation(line: 89, column: 1, scope: !468)
!3103 = !DILocation(line: 159, column: 32, scope: !485)
!3104 = !DILocation(line: 159, column: 48, scope: !485)
!3105 = !DILocation(line: 161, column: 12, scope: !485)
!3106 = !DILocation(line: 161, column: 5, scope: !485)
!3107 = !DILocation(line: 92, column: 40, scope: !447)
!3108 = !DILocation(line: 94, column: 5, scope: !447)
!3109 = !DILocation(line: 94, column: 18, scope: !447)
!3110 = !DILocation(line: 94, column: 26, scope: !447)
!3111 = !DILocation(line: 95, column: 9, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !447, file: !394, line: 95, column: 9)
!3113 = !DILocation(line: 95, column: 15, scope: !3112)
!3114 = !DILocation(line: 95, column: 9, scope: !447)
!3115 = !DILocation(line: 96, column: 25, scope: !3112)
!3116 = !DILocation(line: 96, column: 32, scope: !3112)
!3117 = !{!3118, !1459, i64 16}
!3118 = !{!"", !1514, i64 0, !1459, i64 8, !1459, i64 16}
!3119 = !DILocation(line: 96, column: 55, scope: !3112)
!3120 = !DILocation(line: 96, column: 9, scope: !3112)
!3121 = !DILocation(line: 98, column: 1, scope: !447)
!3122 = !DILocation(line: 97, column: 5, scope: !447)
!3123 = !DILocation(line: 1068, column: 30, scope: !568)
!3124 = !DILocation(line: 1068, column: 47, scope: !568)
!3125 = !DILocation(line: 1070, column: 5, scope: !568)
!3126 = !DILocation(line: 1070, column: 15, scope: !568)
!3127 = !DILocation(line: 1071, column: 5, scope: !568)
!3128 = !DILocation(line: 1071, column: 15, scope: !568)
!3129 = !DILocation(line: 1072, column: 5, scope: !568)
!3130 = !DILocation(line: 1072, column: 16, scope: !568)
!3131 = !DILocation(line: 1072, column: 19, scope: !568)
!3132 = !DILocation(line: 1073, column: 5, scope: !568)
!3133 = !DILocation(line: 1073, column: 17, scope: !568)
!3134 = !DILocation(line: 1073, column: 25, scope: !568)
!3135 = !DILocation(line: 1073, column: 29, scope: !568)
!3136 = !DILocation(line: 1075, column: 10, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1075, column: 9)
!3138 = !DILocation(line: 1075, column: 16, scope: !3137)
!3139 = !DILocation(line: 1075, column: 9, scope: !568)
!3140 = !DILocation(line: 1075, column: 54, scope: !3141)
!3141 = !DILexicalBlockFile(scope: !3137, file: !394, discriminator: 1)
!3142 = !DILocation(line: 1075, column: 60, scope: !3137)
!3143 = !DILocation(line: 1075, column: 37, scope: !3137)
!3144 = !DILocation(line: 1075, column: 83, scope: !3145)
!3145 = !DILexicalBlockFile(scope: !3137, file: !394, discriminator: 2)
!3146 = !DILocation(line: 1075, column: 67, scope: !3137)
!3147 = !DILocation(line: 1075, column: 109, scope: !3148)
!3148 = !DILexicalBlockFile(scope: !3149, file: !394, discriminator: 4)
!3149 = !DILexicalBlockFile(scope: !3150, file: !394, discriminator: 3)
!3150 = distinct !DILexicalBlock(scope: !3137, file: !394, line: 1075, column: 91)
!3151 = !DILocation(line: 1075, column: 93, scope: !3150)
!3152 = !DILocation(line: 1075, column: 155, scope: !3150)
!3153 = !DILocation(line: 1080, column: 24, scope: !568)
!3154 = !DILocation(line: 1080, column: 30, scope: !568)
!3155 = !DILocation(line: 1080, column: 39, scope: !568)
!3156 = !DILocation(line: 1080, column: 43, scope: !3157)
!3157 = !DILexicalBlockFile(scope: !568, file: !394, discriminator: 1)
!3158 = !DILocation(line: 1080, column: 49, scope: !568)
!3159 = !DILocation(line: 1080, column: 43, scope: !568)
!3160 = !DILocation(line: 1080, column: 58, scope: !568)
!3161 = !DILocation(line: 1080, column: 61, scope: !3162)
!3162 = !DILexicalBlockFile(scope: !568, file: !394, discriminator: 3)
!3163 = !DILocation(line: 1080, column: 67, scope: !568)
!3164 = !{!1598, !1483, i64 80}
!3165 = !DILocation(line: 1080, column: 76, scope: !568)
!3166 = !DILocation(line: 1080, column: 23, scope: !568)
!3167 = !DILocation(line: 1080, column: 87, scope: !3168)
!3168 = !DILexicalBlockFile(scope: !568, file: !394, discriminator: 5)
!3169 = !DILocation(line: 1080, column: 93, scope: !568)
!3170 = !DILocation(line: 1080, column: 104, scope: !568)
!3171 = !DILocation(line: 1080, column: 110, scope: !568)
!3172 = !DILocation(line: 1080, column: 102, scope: !568)
!3173 = !DILocation(line: 1080, column: 23, scope: !3174)
!3174 = !DILexicalBlockFile(scope: !3175, file: !394, discriminator: 6)
!3175 = !DILexicalBlockFile(scope: !3176, file: !394, discriminator: 4)
!3176 = !DILexicalBlockFile(scope: !568, file: !394, discriminator: 2)
!3177 = !DILocation(line: 1080, column: 7, scope: !3178)
!3178 = !DILexicalBlockFile(scope: !3179, file: !394, discriminator: 8)
!3179 = !DILexicalBlockFile(scope: !568, file: !394, discriminator: 7)
!3180 = !DILocation(line: 1081, column: 9, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1081, column: 9)
!3182 = !DILocation(line: 1081, column: 15, scope: !3181)
!3183 = !DILocation(line: 1081, column: 20, scope: !3181)
!3184 = !DILocation(line: 1081, column: 23, scope: !3185)
!3185 = !DILexicalBlockFile(scope: !3181, file: !394, discriminator: 1)
!3186 = !DILocation(line: 1081, column: 27, scope: !3181)
!3187 = !DILocation(line: 1081, column: 25, scope: !3181)
!3188 = !DILocation(line: 1081, column: 9, scope: !568)
!3189 = !DILocation(line: 1082, column: 13, scope: !3181)
!3190 = !DILocation(line: 1082, column: 11, scope: !3181)
!3191 = !DILocation(line: 1082, column: 9, scope: !3181)
!3192 = !DILocation(line: 1083, column: 13, scope: !568)
!3193 = !DILocation(line: 1083, column: 19, scope: !568)
!3194 = !DILocation(line: 1083, column: 28, scope: !568)
!3195 = !DILocation(line: 1083, column: 34, scope: !568)
!3196 = !DILocation(line: 1083, column: 26, scope: !568)
!3197 = !DILocation(line: 1083, column: 11, scope: !568)
!3198 = !DILocation(line: 1084, column: 16, scope: !568)
!3199 = !DILocation(line: 1084, column: 29, scope: !568)
!3200 = !DILocation(line: 1084, column: 9, scope: !568)
!3201 = !DILocation(line: 1084, column: 7, scope: !568)
!3202 = !DILocation(line: 1085, column: 9, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1085, column: 9)
!3204 = !DILocation(line: 1085, column: 11, scope: !3203)
!3205 = !DILocation(line: 1085, column: 9, scope: !568)
!3206 = !DILocation(line: 1086, column: 41, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3203, file: !394, line: 1085, column: 26)
!3208 = !DILocation(line: 1086, column: 48, scope: !3207)
!3209 = !DILocation(line: 1086, column: 52, scope: !3207)
!3210 = !DILocation(line: 1086, column: 50, scope: !3207)
!3211 = !DILocation(line: 1086, column: 58, scope: !3207)
!3212 = !DILocation(line: 1086, column: 15, scope: !3207)
!3213 = !DILocation(line: 1086, column: 13, scope: !3207)
!3214 = !DILocation(line: 1087, column: 13, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3207, file: !394, line: 1087, column: 13)
!3216 = !DILocation(line: 1087, column: 17, scope: !3215)
!3217 = !DILocation(line: 1087, column: 13, scope: !3207)
!3218 = !DILocation(line: 1088, column: 26, scope: !3215)
!3219 = !DILocation(line: 1088, column: 30, scope: !3215)
!3220 = !DILocation(line: 1088, column: 28, scope: !3215)
!3221 = !DILocation(line: 1088, column: 36, scope: !3215)
!3222 = !DILocation(line: 1088, column: 13, scope: !3215)
!3223 = !DILocation(line: 1088, column: 19, scope: !3215)
!3224 = !DILocation(line: 1088, column: 23, scope: !3215)
!3225 = !DILocation(line: 1089, column: 9, scope: !3207)
!3226 = !DILocation(line: 1091, column: 9, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1091, column: 9)
!3228 = !DILocation(line: 1091, column: 14, scope: !3227)
!3229 = !DILocation(line: 1091, column: 11, scope: !3227)
!3230 = !DILocation(line: 1091, column: 9, scope: !568)
!3231 = !DILocation(line: 1092, column: 41, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3227, file: !394, line: 1091, column: 21)
!3233 = !DILocation(line: 1092, column: 48, scope: !3232)
!3234 = !DILocation(line: 1092, column: 15, scope: !3232)
!3235 = !DILocation(line: 1092, column: 13, scope: !3232)
!3236 = !DILocation(line: 1093, column: 13, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3232, file: !394, line: 1093, column: 13)
!3238 = !DILocation(line: 1093, column: 17, scope: !3237)
!3239 = !DILocation(line: 1093, column: 13, scope: !3232)
!3240 = !DILocation(line: 1094, column: 26, scope: !3237)
!3241 = !DILocation(line: 1094, column: 13, scope: !3237)
!3242 = !DILocation(line: 1094, column: 19, scope: !3237)
!3243 = !DILocation(line: 1094, column: 23, scope: !3237)
!3244 = !DILocation(line: 1095, column: 9, scope: !3232)
!3245 = !DILocation(line: 1098, column: 35, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1098, column: 9)
!3247 = !DILocation(line: 1098, column: 41, scope: !3246)
!3248 = !DILocation(line: 1098, column: 13, scope: !3246)
!3249 = !DILocation(line: 1098, column: 84, scope: !3246)
!3250 = !DILocation(line: 1098, column: 13, scope: !3251)
!3251 = !DILexicalBlockFile(scope: !3246, file: !394, discriminator: 1)
!3252 = !DILocation(line: 1098, column: 77, scope: !3253)
!3253 = !DILexicalBlockFile(scope: !3246, file: !394, discriminator: 2)
!3254 = !DILocation(line: 1098, column: 56, scope: !3246)
!3255 = !DILocation(line: 1098, column: 102, scope: !3256)
!3256 = !DILexicalBlockFile(scope: !3257, file: !394, discriminator: 4)
!3257 = !DILexicalBlockFile(scope: !3246, file: !394, discriminator: 3)
!3258 = !DILocation(line: 1098, column: 88, scope: !3246)
!3259 = !DILocation(line: 1098, column: 94, scope: !3246)
!3260 = !DILocation(line: 1098, column: 100, scope: !3246)
!3261 = !{!1598, !1483, i64 112}
!3262 = !DILocation(line: 1098, column: 9, scope: !568)
!3263 = !DILocation(line: 1099, column: 9, scope: !3246)
!3264 = !DILocation(line: 1102, column: 14, scope: !568)
!3265 = !DILocation(line: 1102, column: 12, scope: !568)
!3266 = !DILocation(line: 1103, column: 9, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1103, column: 9)
!3268 = !DILocation(line: 1103, column: 16, scope: !3267)
!3269 = !DILocation(line: 1103, column: 9, scope: !568)
!3270 = !DILocation(line: 1104, column: 9, scope: !3267)
!3271 = !DILocation(line: 1105, column: 9, scope: !586)
!3272 = !DILocation(line: 1105, column: 11, scope: !586)
!3273 = !DILocation(line: 1105, column: 9, scope: !568)
!3274 = !DILocation(line: 1106, column: 41, scope: !585)
!3275 = !DILocation(line: 1106, column: 48, scope: !585)
!3276 = !DILocation(line: 1106, column: 15, scope: !585)
!3277 = !DILocation(line: 1106, column: 13, scope: !585)
!3278 = !DILocation(line: 1107, column: 13, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !585, file: !394, line: 1107, column: 13)
!3280 = !DILocation(line: 1107, column: 17, scope: !3279)
!3281 = !DILocation(line: 1107, column: 13, scope: !585)
!3282 = !DILocation(line: 1108, column: 13, scope: !3279)
!3283 = !DILocation(line: 1109, column: 27, scope: !584)
!3284 = !DILocation(line: 1109, column: 35, scope: !584)
!3285 = !DILocation(line: 1109, column: 13, scope: !584)
!3286 = !DILocation(line: 1109, column: 40, scope: !584)
!3287 = !DILocation(line: 1109, column: 13, scope: !585)
!3288 = !DILocation(line: 1110, column: 13, scope: !583)
!3289 = !DILocation(line: 1110, column: 18, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !582, file: !394, discriminator: 1)
!3291 = !DILocation(line: 1110, column: 28, scope: !582)
!3292 = !DILocation(line: 1110, column: 51, scope: !582)
!3293 = !DILocation(line: 1110, column: 61, scope: !590)
!3294 = !DILocation(line: 1110, column: 69, scope: !590)
!3295 = !DILocation(line: 1110, column: 61, scope: !582)
!3296 = !DILocation(line: 1110, column: 92, scope: !3297)
!3297 = !DILexicalBlockFile(scope: !589, file: !394, discriminator: 2)
!3298 = !DILocation(line: 1110, column: 106, scope: !589)
!3299 = !DILocation(line: 1110, column: 111, scope: !3300)
!3300 = !DILexicalBlockFile(scope: !588, file: !394, discriminator: 4)
!3301 = !DILocation(line: 1110, column: 121, scope: !588)
!3302 = !DILocation(line: 1110, column: 151, scope: !588)
!3303 = !DILocation(line: 1110, column: 169, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !588, file: !394, line: 1110, column: 166)
!3305 = !DILocation(line: 1110, column: 186, scope: !3304)
!3306 = !DILocation(line: 1110, column: 166, scope: !3304)
!3307 = !DILocation(line: 1110, column: 196, scope: !3304)
!3308 = !DILocation(line: 1110, column: 166, scope: !588)
!3309 = !DILocation(line: 1110, column: 166, scope: !3310)
!3310 = !DILexicalBlockFile(scope: !588, file: !394, discriminator: 5)
!3311 = !DILocation(line: 1110, column: 227, scope: !3312)
!3312 = !DILexicalBlockFile(scope: !3304, file: !394, discriminator: 6)
!3313 = !DILocation(line: 1110, column: 245, scope: !3304)
!3314 = !DILocation(line: 1110, column: 255, scope: !3304)
!3315 = !DILocation(line: 1110, column: 280, scope: !3304)
!3316 = !DILocation(line: 1110, column: 211, scope: !3304)
!3317 = !DILocation(line: 1110, column: 299, scope: !3318)
!3318 = !DILexicalBlockFile(scope: !589, file: !394, discriminator: 7)
!3319 = !DILocation(line: 1110, column: 299, scope: !588)
!3320 = !DILocation(line: 1110, column: 299, scope: !3321)
!3321 = !DILexicalBlockFile(scope: !588, file: !394, discriminator: 8)
!3322 = !DILocation(line: 1110, column: 312, scope: !3323)
!3323 = !DILexicalBlockFile(scope: !589, file: !394, discriminator: 9)
!3324 = !DILocation(line: 1110, column: 314, scope: !3325)
!3325 = !DILexicalBlockFile(scope: !3326, file: !394, discriminator: 10)
!3326 = !DILexicalBlockFile(scope: !583, file: !394, discriminator: 3)
!3327 = !DILocation(line: 1110, column: 314, scope: !582)
!3328 = !DILocation(line: 1110, column: 314, scope: !3329)
!3329 = !DILexicalBlockFile(scope: !582, file: !394, discriminator: 11)
!3330 = !DILocation(line: 1111, column: 13, scope: !583)
!3331 = !DILocation(line: 1113, column: 9, scope: !585)
!3332 = !DILocation(line: 1113, column: 14, scope: !3333)
!3333 = !DILexicalBlockFile(scope: !592, file: !394, discriminator: 1)
!3334 = !DILocation(line: 1113, column: 24, scope: !592)
!3335 = !DILocation(line: 1113, column: 47, scope: !592)
!3336 = !DILocation(line: 1113, column: 57, scope: !596)
!3337 = !DILocation(line: 1113, column: 65, scope: !596)
!3338 = !DILocation(line: 1113, column: 57, scope: !592)
!3339 = !DILocation(line: 1113, column: 88, scope: !3340)
!3340 = !DILexicalBlockFile(scope: !595, file: !394, discriminator: 2)
!3341 = !DILocation(line: 1113, column: 102, scope: !595)
!3342 = !DILocation(line: 1113, column: 107, scope: !3343)
!3343 = !DILexicalBlockFile(scope: !594, file: !394, discriminator: 4)
!3344 = !DILocation(line: 1113, column: 117, scope: !594)
!3345 = !DILocation(line: 1113, column: 147, scope: !594)
!3346 = !DILocation(line: 1113, column: 165, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !594, file: !394, line: 1113, column: 162)
!3348 = !DILocation(line: 1113, column: 182, scope: !3347)
!3349 = !DILocation(line: 1113, column: 162, scope: !3347)
!3350 = !DILocation(line: 1113, column: 192, scope: !3347)
!3351 = !DILocation(line: 1113, column: 162, scope: !594)
!3352 = !DILocation(line: 1113, column: 162, scope: !3353)
!3353 = !DILexicalBlockFile(scope: !594, file: !394, discriminator: 5)
!3354 = !DILocation(line: 1113, column: 223, scope: !3355)
!3355 = !DILexicalBlockFile(scope: !3347, file: !394, discriminator: 6)
!3356 = !DILocation(line: 1113, column: 241, scope: !3347)
!3357 = !DILocation(line: 1113, column: 251, scope: !3347)
!3358 = !DILocation(line: 1113, column: 276, scope: !3347)
!3359 = !DILocation(line: 1113, column: 207, scope: !3347)
!3360 = !DILocation(line: 1113, column: 295, scope: !3361)
!3361 = !DILexicalBlockFile(scope: !595, file: !394, discriminator: 7)
!3362 = !DILocation(line: 1113, column: 295, scope: !594)
!3363 = !DILocation(line: 1113, column: 295, scope: !3364)
!3364 = !DILexicalBlockFile(scope: !594, file: !394, discriminator: 8)
!3365 = !DILocation(line: 1113, column: 308, scope: !3366)
!3366 = !DILexicalBlockFile(scope: !595, file: !394, discriminator: 9)
!3367 = !DILocation(line: 1113, column: 310, scope: !3368)
!3368 = !DILexicalBlockFile(scope: !3369, file: !394, discriminator: 10)
!3369 = !DILexicalBlockFile(scope: !585, file: !394, discriminator: 3)
!3370 = !DILocation(line: 1113, column: 310, scope: !592)
!3371 = !DILocation(line: 1113, column: 310, scope: !3372)
!3372 = !DILexicalBlockFile(scope: !592, file: !394, discriminator: 11)
!3373 = !DILocation(line: 1114, column: 20, scope: !585)
!3374 = !DILocation(line: 1114, column: 17, scope: !585)
!3375 = !DILocation(line: 1115, column: 22, scope: !585)
!3376 = !DILocation(line: 1115, column: 9, scope: !585)
!3377 = !DILocation(line: 1115, column: 15, scope: !585)
!3378 = !DILocation(line: 1115, column: 19, scope: !585)
!3379 = !DILocation(line: 1116, column: 13, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !585, file: !394, line: 1116, column: 13)
!3381 = !DILocation(line: 1116, column: 19, scope: !3380)
!3382 = !DILocation(line: 1116, column: 13, scope: !585)
!3383 = !DILocation(line: 1117, column: 22, scope: !3380)
!3384 = !DILocation(line: 1117, column: 19, scope: !3380)
!3385 = !DILocation(line: 1117, column: 13, scope: !3380)
!3386 = !DILocation(line: 1118, column: 5, scope: !585)
!3387 = !DILocation(line: 1119, column: 9, scope: !599)
!3388 = !DILocation(line: 1119, column: 15, scope: !599)
!3389 = !DILocation(line: 1119, column: 9, scope: !568)
!3390 = !DILocation(line: 1120, column: 9, scope: !598)
!3391 = !DILocation(line: 1120, column: 19, scope: !598)
!3392 = !DILocation(line: 1120, column: 58, scope: !598)
!3393 = !DILocation(line: 1120, column: 23, scope: !598)
!3394 = !DILocation(line: 1121, column: 13, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !598, file: !394, line: 1121, column: 13)
!3396 = !DILocation(line: 1121, column: 15, scope: !3395)
!3397 = !DILocation(line: 1121, column: 13, scope: !598)
!3398 = !DILocation(line: 1122, column: 13, scope: !3395)
!3399 = !DILocation(line: 1123, column: 9, scope: !598)
!3400 = !DILocation(line: 1123, column: 14, scope: !3401)
!3401 = !DILexicalBlockFile(scope: !601, file: !394, discriminator: 1)
!3402 = !DILocation(line: 1123, column: 24, scope: !601)
!3403 = !DILocation(line: 1123, column: 54, scope: !601)
!3404 = !DILocation(line: 1123, column: 66, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !601, file: !394, line: 1123, column: 63)
!3406 = !DILocation(line: 1123, column: 83, scope: !3405)
!3407 = !DILocation(line: 1123, column: 63, scope: !3405)
!3408 = !DILocation(line: 1123, column: 93, scope: !3405)
!3409 = !DILocation(line: 1123, column: 63, scope: !601)
!3410 = !DILocation(line: 1123, column: 63, scope: !3411)
!3411 = !DILexicalBlockFile(scope: !601, file: !394, discriminator: 2)
!3412 = !DILocation(line: 1123, column: 124, scope: !3413)
!3413 = !DILexicalBlockFile(scope: !3405, file: !394, discriminator: 3)
!3414 = !DILocation(line: 1123, column: 142, scope: !3405)
!3415 = !DILocation(line: 1123, column: 152, scope: !3405)
!3416 = !DILocation(line: 1123, column: 177, scope: !3405)
!3417 = !DILocation(line: 1123, column: 108, scope: !3405)
!3418 = !DILocation(line: 1123, column: 196, scope: !3419)
!3419 = !DILexicalBlockFile(scope: !598, file: !394, discriminator: 4)
!3420 = !DILocation(line: 1123, column: 196, scope: !601)
!3421 = !DILocation(line: 1123, column: 196, scope: !3422)
!3422 = !DILexicalBlockFile(scope: !601, file: !394, discriminator: 5)
!3423 = !DILocation(line: 1124, column: 5, scope: !599)
!3424 = !DILocation(line: 1124, column: 5, scope: !3425)
!3425 = !DILexicalBlockFile(scope: !599, file: !394, discriminator: 1)
!3426 = !DILocation(line: 1124, column: 5, scope: !598)
!3427 = !DILocation(line: 1126, column: 5, scope: !568)
!3428 = !DILocation(line: 1127, column: 35, scope: !606)
!3429 = !DILocation(line: 1127, column: 9, scope: !606)
!3430 = !DILocation(line: 1128, column: 41, scope: !606)
!3431 = !DILocation(line: 1128, column: 13, scope: !606)
!3432 = !DILocation(line: 1128, column: 11, scope: !606)
!3433 = !DILocation(line: 1129, column: 13, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !606, file: !394, line: 1129, column: 13)
!3435 = !DILocation(line: 1129, column: 15, scope: !3434)
!3436 = !DILocation(line: 1129, column: 13, scope: !606)
!3437 = !DILocation(line: 1130, column: 13, scope: !3434)
!3438 = !DILocation(line: 1131, column: 13, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !606, file: !394, line: 1131, column: 13)
!3440 = !DILocation(line: 1131, column: 15, scope: !3439)
!3441 = !DILocation(line: 1131, column: 13, scope: !606)
!3442 = !DILocation(line: 1132, column: 13, scope: !3439)
!3443 = !DILocation(line: 1133, column: 13, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !606, file: !394, line: 1133, column: 13)
!3445 = !DILocation(line: 1133, column: 19, scope: !3444)
!3446 = !DILocation(line: 1133, column: 24, scope: !3444)
!3447 = !DILocation(line: 1133, column: 27, scope: !3448)
!3448 = !DILexicalBlockFile(scope: !3444, file: !394, discriminator: 1)
!3449 = !DILocation(line: 1133, column: 31, scope: !3444)
!3450 = !DILocation(line: 1133, column: 29, scope: !3444)
!3451 = !DILocation(line: 1133, column: 13, scope: !606)
!3452 = !DILocation(line: 1134, column: 17, scope: !3444)
!3453 = !DILocation(line: 1134, column: 15, scope: !3444)
!3454 = !DILocation(line: 1134, column: 13, scope: !3444)
!3455 = !DILocation(line: 1135, column: 17, scope: !606)
!3456 = !DILocation(line: 1135, column: 23, scope: !606)
!3457 = !DILocation(line: 1135, column: 15, scope: !606)
!3458 = !DILocation(line: 1136, column: 15, scope: !606)
!3459 = !DILocation(line: 1136, column: 23, scope: !606)
!3460 = !DILocation(line: 1136, column: 21, scope: !606)
!3461 = !DILocation(line: 1136, column: 13, scope: !606)
!3462 = !DILocation(line: 1137, column: 13, scope: !606)
!3463 = !DILocation(line: 1137, column: 11, scope: !606)
!3464 = !DILocation(line: 1138, column: 9, scope: !606)
!3465 = !DILocation(line: 1138, column: 16, scope: !3466)
!3466 = !DILexicalBlockFile(scope: !3467, file: !394, discriminator: 2)
!3467 = !DILexicalBlockFile(scope: !606, file: !394, discriminator: 1)
!3468 = !DILocation(line: 1138, column: 20, scope: !606)
!3469 = !DILocation(line: 1138, column: 18, scope: !606)
!3470 = !DILocation(line: 1139, column: 19, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3472, file: !394, line: 1139, column: 17)
!3472 = distinct !DILexicalBlock(scope: !606, file: !394, line: 1138, column: 25)
!3473 = !DILocation(line: 1139, column: 17, scope: !3471)
!3474 = !{!1460, !1460, i64 0}
!3475 = !DILocation(line: 1139, column: 22, scope: !3471)
!3476 = !DILocation(line: 1139, column: 17, scope: !3472)
!3477 = !DILocation(line: 1140, column: 49, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3471, file: !394, line: 1139, column: 31)
!3479 = !DILocation(line: 1140, column: 56, scope: !3478)
!3480 = !DILocation(line: 1140, column: 60, scope: !3478)
!3481 = !DILocation(line: 1140, column: 58, scope: !3478)
!3482 = !DILocation(line: 1140, column: 23, scope: !3478)
!3483 = !DILocation(line: 1140, column: 21, scope: !3478)
!3484 = !DILocation(line: 1141, column: 21, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3478, file: !394, line: 1141, column: 21)
!3486 = !DILocation(line: 1141, column: 25, scope: !3485)
!3487 = !DILocation(line: 1141, column: 21, scope: !3478)
!3488 = !DILocation(line: 1142, column: 21, scope: !3485)
!3489 = !DILocation(line: 1143, column: 29, scope: !3478)
!3490 = !DILocation(line: 1143, column: 33, scope: !3478)
!3491 = !DILocation(line: 1143, column: 31, scope: !3478)
!3492 = !DILocation(line: 1143, column: 17, scope: !3478)
!3493 = !DILocation(line: 1143, column: 23, scope: !3478)
!3494 = !DILocation(line: 1143, column: 27, scope: !3478)
!3495 = !DILocation(line: 1144, column: 17, scope: !3478)
!3496 = !DILocation(line: 1147, column: 41, scope: !606)
!3497 = !DILocation(line: 1147, column: 48, scope: !606)
!3498 = !DILocation(line: 1147, column: 15, scope: !606)
!3499 = !DILocation(line: 1147, column: 13, scope: !606)
!3500 = !DILocation(line: 1148, column: 13, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !606, file: !394, line: 1148, column: 13)
!3502 = !DILocation(line: 1148, column: 17, scope: !3501)
!3503 = !DILocation(line: 1148, column: 13, scope: !606)
!3504 = !DILocation(line: 1149, column: 13, scope: !3501)
!3505 = !DILocation(line: 1150, column: 13, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !606, file: !394, line: 1150, column: 13)
!3507 = !DILocation(line: 1150, column: 18, scope: !3506)
!3508 = !DILocation(line: 1150, column: 15, scope: !3506)
!3509 = !DILocation(line: 1150, column: 13, scope: !606)
!3510 = !DILocation(line: 1151, column: 25, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3506, file: !394, line: 1150, column: 25)
!3512 = !DILocation(line: 1151, column: 13, scope: !3511)
!3513 = !DILocation(line: 1151, column: 19, scope: !3511)
!3514 = !DILocation(line: 1151, column: 23, scope: !3511)
!3515 = !DILocation(line: 1152, column: 13, scope: !3511)
!3516 = !DILocation(line: 1154, column: 27, scope: !605)
!3517 = !DILocation(line: 1154, column: 35, scope: !605)
!3518 = !DILocation(line: 1154, column: 13, scope: !605)
!3519 = !DILocation(line: 1154, column: 40, scope: !605)
!3520 = !DILocation(line: 1154, column: 13, scope: !606)
!3521 = !DILocation(line: 1155, column: 13, scope: !604)
!3522 = !DILocation(line: 1155, column: 18, scope: !3523)
!3523 = !DILexicalBlockFile(scope: !603, file: !394, discriminator: 1)
!3524 = !DILocation(line: 1155, column: 28, scope: !603)
!3525 = !DILocation(line: 1155, column: 51, scope: !603)
!3526 = !DILocation(line: 1155, column: 61, scope: !612)
!3527 = !DILocation(line: 1155, column: 69, scope: !612)
!3528 = !DILocation(line: 1155, column: 61, scope: !603)
!3529 = !DILocation(line: 1155, column: 92, scope: !3530)
!3530 = !DILexicalBlockFile(scope: !611, file: !394, discriminator: 2)
!3531 = !DILocation(line: 1155, column: 106, scope: !611)
!3532 = !DILocation(line: 1155, column: 111, scope: !3533)
!3533 = !DILexicalBlockFile(scope: !610, file: !394, discriminator: 4)
!3534 = !DILocation(line: 1155, column: 121, scope: !610)
!3535 = !DILocation(line: 1155, column: 151, scope: !610)
!3536 = !DILocation(line: 1155, column: 169, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !610, file: !394, line: 1155, column: 166)
!3538 = !DILocation(line: 1155, column: 186, scope: !3537)
!3539 = !DILocation(line: 1155, column: 166, scope: !3537)
!3540 = !DILocation(line: 1155, column: 196, scope: !3537)
!3541 = !DILocation(line: 1155, column: 166, scope: !610)
!3542 = !DILocation(line: 1155, column: 166, scope: !3543)
!3543 = !DILexicalBlockFile(scope: !610, file: !394, discriminator: 5)
!3544 = !DILocation(line: 1155, column: 227, scope: !3545)
!3545 = !DILexicalBlockFile(scope: !3537, file: !394, discriminator: 6)
!3546 = !DILocation(line: 1155, column: 245, scope: !3537)
!3547 = !DILocation(line: 1155, column: 255, scope: !3537)
!3548 = !DILocation(line: 1155, column: 280, scope: !3537)
!3549 = !DILocation(line: 1155, column: 211, scope: !3537)
!3550 = !DILocation(line: 1155, column: 299, scope: !3551)
!3551 = !DILexicalBlockFile(scope: !611, file: !394, discriminator: 7)
!3552 = !DILocation(line: 1155, column: 299, scope: !610)
!3553 = !DILocation(line: 1155, column: 299, scope: !3554)
!3554 = !DILexicalBlockFile(scope: !610, file: !394, discriminator: 8)
!3555 = !DILocation(line: 1155, column: 312, scope: !3556)
!3556 = !DILexicalBlockFile(scope: !611, file: !394, discriminator: 9)
!3557 = !DILocation(line: 1155, column: 314, scope: !3558)
!3558 = !DILexicalBlockFile(scope: !3559, file: !394, discriminator: 10)
!3559 = !DILexicalBlockFile(scope: !604, file: !394, discriminator: 3)
!3560 = !DILocation(line: 1155, column: 314, scope: !603)
!3561 = !DILocation(line: 1155, column: 314, scope: !3562)
!3562 = !DILexicalBlockFile(scope: !603, file: !394, discriminator: 11)
!3563 = !DILocation(line: 1156, column: 13, scope: !604)
!3564 = !DILocation(line: 1158, column: 9, scope: !606)
!3565 = !DILocation(line: 1158, column: 14, scope: !3566)
!3566 = !DILexicalBlockFile(scope: !614, file: !394, discriminator: 1)
!3567 = !DILocation(line: 1158, column: 24, scope: !614)
!3568 = !DILocation(line: 1158, column: 47, scope: !614)
!3569 = !DILocation(line: 1158, column: 57, scope: !618)
!3570 = !DILocation(line: 1158, column: 65, scope: !618)
!3571 = !DILocation(line: 1158, column: 57, scope: !614)
!3572 = !DILocation(line: 1158, column: 88, scope: !3573)
!3573 = !DILexicalBlockFile(scope: !617, file: !394, discriminator: 2)
!3574 = !DILocation(line: 1158, column: 102, scope: !617)
!3575 = !DILocation(line: 1158, column: 107, scope: !3576)
!3576 = !DILexicalBlockFile(scope: !616, file: !394, discriminator: 4)
!3577 = !DILocation(line: 1158, column: 117, scope: !616)
!3578 = !DILocation(line: 1158, column: 147, scope: !616)
!3579 = !DILocation(line: 1158, column: 165, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !616, file: !394, line: 1158, column: 162)
!3581 = !DILocation(line: 1158, column: 182, scope: !3580)
!3582 = !DILocation(line: 1158, column: 162, scope: !3580)
!3583 = !DILocation(line: 1158, column: 192, scope: !3580)
!3584 = !DILocation(line: 1158, column: 162, scope: !616)
!3585 = !DILocation(line: 1158, column: 162, scope: !3586)
!3586 = !DILexicalBlockFile(scope: !616, file: !394, discriminator: 5)
!3587 = !DILocation(line: 1158, column: 223, scope: !3588)
!3588 = !DILexicalBlockFile(scope: !3580, file: !394, discriminator: 6)
!3589 = !DILocation(line: 1158, column: 241, scope: !3580)
!3590 = !DILocation(line: 1158, column: 251, scope: !3580)
!3591 = !DILocation(line: 1158, column: 276, scope: !3580)
!3592 = !DILocation(line: 1158, column: 207, scope: !3580)
!3593 = !DILocation(line: 1158, column: 295, scope: !3594)
!3594 = !DILexicalBlockFile(scope: !617, file: !394, discriminator: 7)
!3595 = !DILocation(line: 1158, column: 295, scope: !616)
!3596 = !DILocation(line: 1158, column: 295, scope: !3597)
!3597 = !DILexicalBlockFile(scope: !616, file: !394, discriminator: 8)
!3598 = !DILocation(line: 1158, column: 308, scope: !3599)
!3599 = !DILexicalBlockFile(scope: !617, file: !394, discriminator: 9)
!3600 = !DILocation(line: 1158, column: 310, scope: !3601)
!3601 = !DILexicalBlockFile(scope: !3602, file: !394, discriminator: 10)
!3602 = !DILexicalBlockFile(scope: !606, file: !394, discriminator: 3)
!3603 = !DILocation(line: 1158, column: 310, scope: !614)
!3604 = !DILocation(line: 1158, column: 310, scope: !3605)
!3605 = !DILexicalBlockFile(scope: !614, file: !394, discriminator: 11)
!3606 = !DILocation(line: 1159, column: 20, scope: !606)
!3607 = !DILocation(line: 1159, column: 17, scope: !606)
!3608 = !DILocation(line: 1160, column: 13, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !606, file: !394, line: 1160, column: 13)
!3610 = !DILocation(line: 1160, column: 19, scope: !3609)
!3611 = !DILocation(line: 1160, column: 13, scope: !606)
!3612 = !DILocation(line: 1161, column: 22, scope: !3609)
!3613 = !DILocation(line: 1161, column: 19, scope: !3609)
!3614 = !DILocation(line: 1161, column: 13, scope: !3609)
!3615 = !DILocation(line: 1126, column: 5, scope: !607)
!3616 = !DILocation(line: 1162, column: 5, scope: !608)
!3617 = !DILocation(line: 1164, column: 9, scope: !622)
!3618 = !DILocation(line: 1164, column: 13, scope: !622)
!3619 = !DILocation(line: 1164, column: 27, scope: !622)
!3620 = !DILocation(line: 1164, column: 44, scope: !3621)
!3621 = !DILexicalBlockFile(scope: !622, file: !394, discriminator: 1)
!3622 = !DILocation(line: 1164, column: 52, scope: !622)
!3623 = !DILocation(line: 1164, column: 30, scope: !622)
!3624 = !DILocation(line: 1164, column: 57, scope: !622)
!3625 = !DILocation(line: 1164, column: 9, scope: !568)
!3626 = !DILocation(line: 1165, column: 9, scope: !621)
!3627 = !DILocation(line: 1165, column: 14, scope: !3628)
!3628 = !DILexicalBlockFile(scope: !620, file: !394, discriminator: 1)
!3629 = !DILocation(line: 1165, column: 24, scope: !620)
!3630 = !DILocation(line: 1165, column: 47, scope: !620)
!3631 = !DILocation(line: 1165, column: 57, scope: !626)
!3632 = !DILocation(line: 1165, column: 65, scope: !626)
!3633 = !DILocation(line: 1165, column: 57, scope: !620)
!3634 = !DILocation(line: 1165, column: 88, scope: !3635)
!3635 = !DILexicalBlockFile(scope: !625, file: !394, discriminator: 2)
!3636 = !DILocation(line: 1165, column: 102, scope: !625)
!3637 = !DILocation(line: 1165, column: 107, scope: !3638)
!3638 = !DILexicalBlockFile(scope: !624, file: !394, discriminator: 4)
!3639 = !DILocation(line: 1165, column: 117, scope: !624)
!3640 = !DILocation(line: 1165, column: 147, scope: !624)
!3641 = !DILocation(line: 1165, column: 165, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !624, file: !394, line: 1165, column: 162)
!3643 = !DILocation(line: 1165, column: 182, scope: !3642)
!3644 = !DILocation(line: 1165, column: 162, scope: !3642)
!3645 = !DILocation(line: 1165, column: 192, scope: !3642)
!3646 = !DILocation(line: 1165, column: 162, scope: !624)
!3647 = !DILocation(line: 1165, column: 162, scope: !3648)
!3648 = !DILexicalBlockFile(scope: !624, file: !394, discriminator: 5)
!3649 = !DILocation(line: 1165, column: 223, scope: !3650)
!3650 = !DILexicalBlockFile(scope: !3642, file: !394, discriminator: 6)
!3651 = !DILocation(line: 1165, column: 241, scope: !3642)
!3652 = !DILocation(line: 1165, column: 251, scope: !3642)
!3653 = !DILocation(line: 1165, column: 276, scope: !3642)
!3654 = !DILocation(line: 1165, column: 207, scope: !3642)
!3655 = !DILocation(line: 1165, column: 295, scope: !3656)
!3656 = !DILexicalBlockFile(scope: !625, file: !394, discriminator: 7)
!3657 = !DILocation(line: 1165, column: 295, scope: !624)
!3658 = !DILocation(line: 1165, column: 295, scope: !3659)
!3659 = !DILexicalBlockFile(scope: !624, file: !394, discriminator: 8)
!3660 = !DILocation(line: 1165, column: 308, scope: !3661)
!3661 = !DILexicalBlockFile(scope: !625, file: !394, discriminator: 9)
!3662 = !DILocation(line: 1165, column: 310, scope: !3663)
!3663 = !DILexicalBlockFile(scope: !3664, file: !394, discriminator: 10)
!3664 = !DILexicalBlockFile(scope: !621, file: !394, discriminator: 3)
!3665 = !DILocation(line: 1165, column: 310, scope: !620)
!3666 = !DILocation(line: 1165, column: 310, scope: !3667)
!3667 = !DILexicalBlockFile(scope: !620, file: !394, discriminator: 11)
!3668 = !DILocation(line: 1166, column: 9, scope: !621)
!3669 = !DILocation(line: 1168, column: 5, scope: !568)
!3670 = !DILocation(line: 1168, column: 10, scope: !3671)
!3671 = !DILexicalBlockFile(scope: !628, file: !394, discriminator: 1)
!3672 = !DILocation(line: 1168, column: 20, scope: !628)
!3673 = !DILocation(line: 1168, column: 43, scope: !628)
!3674 = !DILocation(line: 1168, column: 53, scope: !632)
!3675 = !DILocation(line: 1168, column: 61, scope: !632)
!3676 = !DILocation(line: 1168, column: 53, scope: !628)
!3677 = !DILocation(line: 1168, column: 84, scope: !3678)
!3678 = !DILexicalBlockFile(scope: !631, file: !394, discriminator: 2)
!3679 = !DILocation(line: 1168, column: 98, scope: !631)
!3680 = !DILocation(line: 1168, column: 103, scope: !3681)
!3681 = !DILexicalBlockFile(scope: !630, file: !394, discriminator: 4)
!3682 = !DILocation(line: 1168, column: 113, scope: !630)
!3683 = !DILocation(line: 1168, column: 143, scope: !630)
!3684 = !DILocation(line: 1168, column: 161, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !630, file: !394, line: 1168, column: 158)
!3686 = !DILocation(line: 1168, column: 178, scope: !3685)
!3687 = !DILocation(line: 1168, column: 158, scope: !3685)
!3688 = !DILocation(line: 1168, column: 188, scope: !3685)
!3689 = !DILocation(line: 1168, column: 158, scope: !630)
!3690 = !DILocation(line: 1168, column: 158, scope: !3691)
!3691 = !DILexicalBlockFile(scope: !630, file: !394, discriminator: 5)
!3692 = !DILocation(line: 1168, column: 219, scope: !3693)
!3693 = !DILexicalBlockFile(scope: !3685, file: !394, discriminator: 6)
!3694 = !DILocation(line: 1168, column: 237, scope: !3685)
!3695 = !DILocation(line: 1168, column: 247, scope: !3685)
!3696 = !DILocation(line: 1168, column: 272, scope: !3685)
!3697 = !DILocation(line: 1168, column: 203, scope: !3685)
!3698 = !DILocation(line: 1168, column: 291, scope: !3699)
!3699 = !DILexicalBlockFile(scope: !631, file: !394, discriminator: 7)
!3700 = !DILocation(line: 1168, column: 291, scope: !630)
!3701 = !DILocation(line: 1168, column: 291, scope: !3702)
!3702 = !DILexicalBlockFile(scope: !630, file: !394, discriminator: 8)
!3703 = !DILocation(line: 1168, column: 304, scope: !3704)
!3704 = !DILexicalBlockFile(scope: !631, file: !394, discriminator: 9)
!3705 = !DILocation(line: 1168, column: 306, scope: !3706)
!3706 = !DILexicalBlockFile(scope: !3162, file: !394, discriminator: 10)
!3707 = !DILocation(line: 1168, column: 306, scope: !628)
!3708 = !DILocation(line: 1168, column: 306, scope: !3709)
!3709 = !DILexicalBlockFile(scope: !628, file: !394, discriminator: 11)
!3710 = !DILocation(line: 1169, column: 25, scope: !568)
!3711 = !DILocation(line: 1169, column: 44, scope: !568)
!3712 = !DILocation(line: 1169, column: 11, scope: !568)
!3713 = !DILocation(line: 1169, column: 9, scope: !568)
!3714 = !DILocation(line: 1169, column: 5, scope: !568)
!3715 = !DILocation(line: 1172, column: 5, scope: !568)
!3716 = !DILocation(line: 1172, column: 10, scope: !3717)
!3717 = !DILexicalBlockFile(scope: !3718, file: !394, discriminator: 1)
!3718 = distinct !DILexicalBlock(scope: !568, file: !394, line: 1172, column: 8)
!3719 = !DILocation(line: 1172, column: 16, scope: !3718)
!3720 = !DILocation(line: 1172, column: 22, scope: !3718)
!3721 = !DILocation(line: 1172, column: 49, scope: !3718)
!3722 = !DILocation(line: 1172, column: 55, scope: !3718)
!3723 = !DILocation(line: 1172, column: 27, scope: !3718)
!3724 = !DILocation(line: 1172, column: 62, scope: !3718)
!3725 = !DILocation(line: 1172, column: 62, scope: !3726)
!3726 = !DILexicalBlockFile(scope: !3718, file: !394, discriminator: 2)
!3727 = !DILocation(line: 1172, column: 62, scope: !3728)
!3728 = !DILexicalBlockFile(scope: !3718, file: !394, discriminator: 3)
!3729 = !DILocation(line: 1174, column: 5, scope: !568)
!3730 = !DILocation(line: 1174, column: 10, scope: !3731)
!3731 = !DILexicalBlockFile(scope: !634, file: !394, discriminator: 1)
!3732 = !DILocation(line: 1174, column: 20, scope: !634)
!3733 = !DILocation(line: 1174, column: 51, scope: !634)
!3734 = !DILocation(line: 1174, column: 64, scope: !637)
!3735 = !DILocation(line: 1174, column: 80, scope: !637)
!3736 = !DILocation(line: 1174, column: 64, scope: !634)
!3737 = !DILocation(line: 1174, column: 95, scope: !3738)
!3738 = !DILexicalBlockFile(scope: !637, file: !394, discriminator: 2)
!3739 = !DILocation(line: 1174, column: 100, scope: !3740)
!3740 = !DILexicalBlockFile(scope: !636, file: !394, discriminator: 4)
!3741 = !DILocation(line: 1174, column: 110, scope: !636)
!3742 = !DILocation(line: 1174, column: 140, scope: !636)
!3743 = !DILocation(line: 1174, column: 166, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !636, file: !394, line: 1174, column: 163)
!3745 = !DILocation(line: 1174, column: 183, scope: !3744)
!3746 = !DILocation(line: 1174, column: 163, scope: !3744)
!3747 = !DILocation(line: 1174, column: 193, scope: !3744)
!3748 = !DILocation(line: 1174, column: 163, scope: !636)
!3749 = !DILocation(line: 1174, column: 163, scope: !3750)
!3750 = !DILexicalBlockFile(scope: !636, file: !394, discriminator: 5)
!3751 = !DILocation(line: 1174, column: 224, scope: !3752)
!3752 = !DILexicalBlockFile(scope: !3744, file: !394, discriminator: 6)
!3753 = !DILocation(line: 1174, column: 242, scope: !3744)
!3754 = !DILocation(line: 1174, column: 252, scope: !3744)
!3755 = !DILocation(line: 1174, column: 277, scope: !3744)
!3756 = !DILocation(line: 1174, column: 208, scope: !3744)
!3757 = !DILocation(line: 1174, column: 296, scope: !3758)
!3758 = !DILexicalBlockFile(scope: !637, file: !394, discriminator: 7)
!3759 = !DILocation(line: 1174, column: 296, scope: !636)
!3760 = !DILocation(line: 1174, column: 296, scope: !3761)
!3761 = !DILexicalBlockFile(scope: !636, file: !394, discriminator: 8)
!3762 = !DILocation(line: 1174, column: 296, scope: !3763)
!3763 = !DILexicalBlockFile(scope: !636, file: !394, discriminator: 9)
!3764 = !DILocation(line: 1174, column: 309, scope: !3706)
!3765 = !DILocation(line: 1174, column: 309, scope: !634)
!3766 = !DILocation(line: 1174, column: 309, scope: !3767)
!3767 = !DILexicalBlockFile(scope: !634, file: !394, discriminator: 11)
!3768 = !DILocation(line: 1175, column: 12, scope: !568)
!3769 = !DILocation(line: 1175, column: 5, scope: !568)
!3770 = !DILocation(line: 1176, column: 1, scope: !568)
!3771 = !DILocation(line: 482, column: 27, scope: !638)
!3772 = !DILocation(line: 484, column: 5, scope: !638)
!3773 = !DILocation(line: 484, column: 9, scope: !638)
!3774 = !DILocation(line: 485, column: 5, scope: !638)
!3775 = !DILocation(line: 485, column: 15, scope: !638)
!3776 = !DILocation(line: 486, column: 9, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !638, file: !394, line: 486, column: 9)
!3778 = !DILocation(line: 486, column: 15, scope: !3777)
!3779 = !DILocation(line: 486, column: 18, scope: !3777)
!3780 = !DILocation(line: 486, column: 9, scope: !638)
!3781 = !DILocation(line: 486, column: 30, scope: !3782)
!3782 = !DILexicalBlockFile(scope: !3783, file: !394, discriminator: 1)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !394, line: 486, column: 30)
!3784 = distinct !DILexicalBlock(scope: !3777, file: !394, line: 486, column: 24)
!3785 = !DILocation(line: 486, column: 36, scope: !3783)
!3786 = !DILocation(line: 486, column: 30, scope: !3783)
!3787 = !DILocation(line: 486, column: 30, scope: !3784)
!3788 = !DILocation(line: 486, column: 64, scope: !3789)
!3789 = !DILexicalBlockFile(scope: !3790, file: !394, discriminator: 2)
!3790 = distinct !DILexicalBlock(scope: !3783, file: !394, line: 486, column: 46)
!3791 = !DILocation(line: 486, column: 48, scope: !3790)
!3792 = !DILocation(line: 486, column: 115, scope: !3790)
!3793 = !DILocation(line: 486, column: 140, scope: !3794)
!3794 = !DILexicalBlockFile(scope: !3795, file: !394, discriminator: 3)
!3795 = distinct !DILexicalBlock(scope: !3783, file: !394, line: 486, column: 122)
!3796 = !DILocation(line: 486, column: 124, scope: !3795)
!3797 = !DILocation(line: 486, column: 202, scope: !3798)
!3798 = !DILexicalBlockFile(scope: !3784, file: !394, discriminator: 4)
!3799 = !DILocation(line: 486, column: 202, scope: !3784)
!3800 = !DILocation(line: 487, column: 28, scope: !638)
!3801 = !DILocation(line: 487, column: 34, scope: !638)
!3802 = !DILocation(line: 487, column: 39, scope: !638)
!3803 = !DILocation(line: 487, column: 11, scope: !638)
!3804 = !DILocation(line: 487, column: 9, scope: !638)
!3805 = !DILocation(line: 488, column: 9, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !638, file: !394, line: 488, column: 9)
!3807 = !DILocation(line: 488, column: 13, scope: !3806)
!3808 = !DILocation(line: 488, column: 9, scope: !638)
!3809 = !DILocation(line: 489, column: 9, scope: !3806)
!3810 = !DILocation(line: 490, column: 30, scope: !638)
!3811 = !DILocation(line: 490, column: 14, scope: !638)
!3812 = !DILocation(line: 490, column: 12, scope: !638)
!3813 = !DILocation(line: 491, column: 5, scope: !638)
!3814 = !DILocation(line: 491, column: 10, scope: !3815)
!3815 = !DILexicalBlockFile(scope: !644, file: !394, discriminator: 1)
!3816 = !DILocation(line: 491, column: 20, scope: !644)
!3817 = !DILocation(line: 491, column: 50, scope: !644)
!3818 = !DILocation(line: 491, column: 64, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !644, file: !394, line: 491, column: 61)
!3820 = !DILocation(line: 491, column: 81, scope: !3819)
!3821 = !DILocation(line: 491, column: 61, scope: !3819)
!3822 = !DILocation(line: 491, column: 91, scope: !3819)
!3823 = !DILocation(line: 491, column: 61, scope: !644)
!3824 = !DILocation(line: 491, column: 61, scope: !3825)
!3825 = !DILexicalBlockFile(scope: !644, file: !394, discriminator: 2)
!3826 = !DILocation(line: 491, column: 122, scope: !3827)
!3827 = !DILexicalBlockFile(scope: !3819, file: !394, discriminator: 3)
!3828 = !DILocation(line: 491, column: 140, scope: !3819)
!3829 = !DILocation(line: 491, column: 150, scope: !3819)
!3830 = !DILocation(line: 491, column: 175, scope: !3819)
!3831 = !DILocation(line: 491, column: 106, scope: !3819)
!3832 = !DILocation(line: 491, column: 194, scope: !3833)
!3833 = !DILexicalBlockFile(scope: !638, file: !394, discriminator: 4)
!3834 = !DILocation(line: 491, column: 194, scope: !644)
!3835 = !DILocation(line: 491, column: 194, scope: !3836)
!3836 = !DILexicalBlockFile(scope: !644, file: !394, discriminator: 5)
!3837 = !DILocation(line: 492, column: 12, scope: !638)
!3838 = !DILocation(line: 492, column: 5, scope: !638)
!3839 = !DILocation(line: 493, column: 1, scope: !638)
!3840 = !DILocation(line: 301, column: 32, scope: !645)
!3841 = !DILocation(line: 303, column: 9, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !645, file: !394, line: 303, column: 9)
!3843 = !DILocation(line: 303, column: 15, scope: !3842)
!3844 = !DILocation(line: 303, column: 24, scope: !3842)
!3845 = !DILocation(line: 303, column: 21, scope: !3842)
!3846 = !DILocation(line: 303, column: 9, scope: !645)
!3847 = !DILocation(line: 304, column: 22, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3842, file: !394, line: 303, column: 53)
!3849 = !DILocation(line: 305, column: 50, scope: !3848)
!3850 = !DILocation(line: 304, column: 9, scope: !3848)
!3851 = !DILocation(line: 306, column: 9, scope: !3848)
!3852 = !DILocation(line: 308, column: 7, scope: !649)
!3853 = !DILocation(line: 308, column: 22, scope: !649)
!3854 = !DILocation(line: 308, column: 37, scope: !649)
!3855 = !DILocation(line: 308, column: 35, scope: !649)
!3856 = !DILocation(line: 309, column: 27, scope: !649)
!3857 = !DILocation(line: 309, column: 33, scope: !649)
!3858 = !DILocation(line: 309, column: 5, scope: !649)
!3859 = !DILocation(line: 310, column: 26, scope: !649)
!3860 = !DILocation(line: 310, column: 5, scope: !649)
!3861 = !DILocation(line: 310, column: 34, scope: !645)
!3862 = !DILocation(line: 311, column: 5, scope: !645)
!3863 = !DILocation(line: 312, column: 1, scope: !645)
!3864 = !DILocation(line: 838, column: 46, scope: !708)
!3865 = !DILocation(line: 840, column: 5, scope: !708)
!3866 = !DILocation(line: 840, column: 15, scope: !708)
!3867 = !DILocation(line: 842, column: 42, scope: !708)
!3868 = !DILocation(line: 842, column: 11, scope: !708)
!3869 = !DILocation(line: 842, column: 9, scope: !708)
!3870 = !DILocation(line: 843, column: 9, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !708, file: !394, line: 843, column: 9)
!3872 = !DILocation(line: 843, column: 13, scope: !3871)
!3873 = !DILocation(line: 843, column: 9, scope: !708)
!3874 = !DILocation(line: 844, column: 9, scope: !3871)
!3875 = !DILocation(line: 845, column: 5, scope: !708)
!3876 = !DILocation(line: 845, column: 10, scope: !3877)
!3877 = !DILexicalBlockFile(scope: !713, file: !394, discriminator: 1)
!3878 = !DILocation(line: 845, column: 20, scope: !713)
!3879 = !DILocation(line: 845, column: 50, scope: !713)
!3880 = !DILocation(line: 845, column: 64, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !713, file: !394, line: 845, column: 61)
!3882 = !DILocation(line: 845, column: 81, scope: !3881)
!3883 = !DILocation(line: 845, column: 61, scope: !3881)
!3884 = !DILocation(line: 845, column: 91, scope: !3881)
!3885 = !DILocation(line: 845, column: 61, scope: !713)
!3886 = !DILocation(line: 845, column: 61, scope: !3887)
!3887 = !DILexicalBlockFile(scope: !713, file: !394, discriminator: 2)
!3888 = !DILocation(line: 845, column: 122, scope: !3889)
!3889 = !DILexicalBlockFile(scope: !3881, file: !394, discriminator: 3)
!3890 = !DILocation(line: 845, column: 140, scope: !3881)
!3891 = !DILocation(line: 845, column: 150, scope: !3881)
!3892 = !DILocation(line: 845, column: 175, scope: !3881)
!3893 = !DILocation(line: 845, column: 106, scope: !3881)
!3894 = !DILocation(line: 845, column: 194, scope: !3895)
!3895 = !DILexicalBlockFile(scope: !708, file: !394, discriminator: 4)
!3896 = !DILocation(line: 845, column: 194, scope: !713)
!3897 = !DILocation(line: 845, column: 194, scope: !3898)
!3898 = !DILexicalBlockFile(scope: !713, file: !394, discriminator: 5)
!3899 = !DILocation(line: 847, column: 9, scope: !716)
!3900 = !DILocation(line: 847, column: 15, scope: !716)
!3901 = !DILocation(line: 847, column: 9, scope: !708)
!3902 = !DILocation(line: 850, column: 9, scope: !715)
!3903 = !DILocation(line: 850, column: 18, scope: !715)
!3904 = !DILocation(line: 851, column: 32, scope: !715)
!3905 = !DILocation(line: 851, column: 43, scope: !715)
!3906 = !DILocation(line: 851, column: 49, scope: !715)
!3907 = !DILocation(line: 851, column: 58, scope: !715)
!3908 = !DILocation(line: 851, column: 61, scope: !3909)
!3909 = !DILexicalBlockFile(scope: !715, file: !394, discriminator: 1)
!3910 = !DILocation(line: 851, column: 67, scope: !715)
!3911 = !DILocation(line: 851, column: 76, scope: !715)
!3912 = !DILocation(line: 851, column: 83, scope: !715)
!3913 = !DILocation(line: 851, column: 87, scope: !3914)
!3914 = !DILexicalBlockFile(scope: !3915, file: !394, discriminator: 4)
!3915 = !DILexicalBlockFile(scope: !715, file: !394, discriminator: 2)
!3916 = !DILocation(line: 851, column: 93, scope: !715)
!3917 = !DILocation(line: 851, column: 87, scope: !715)
!3918 = !DILocation(line: 851, column: 102, scope: !715)
!3919 = !DILocation(line: 851, column: 105, scope: !3920)
!3920 = !DILexicalBlockFile(scope: !715, file: !394, discriminator: 5)
!3921 = !DILocation(line: 851, column: 111, scope: !715)
!3922 = !{!1598, !1483, i64 96}
!3923 = !DILocation(line: 851, column: 121, scope: !715)
!3924 = !DILocation(line: 851, column: 129, scope: !715)
!3925 = !DILocation(line: 851, column: 132, scope: !3926)
!3926 = !DILexicalBlockFile(scope: !3927, file: !394, discriminator: 7)
!3927 = !DILexicalBlockFile(scope: !715, file: !394, discriminator: 3)
!3928 = !DILocation(line: 851, column: 138, scope: !715)
!3929 = !{!1598, !1483, i64 72}
!3930 = !DILocation(line: 851, column: 146, scope: !715)
!3931 = !DILocation(line: 851, column: 40, scope: !715)
!3932 = !DILocation(line: 851, column: 154, scope: !3933)
!3933 = !DILexicalBlockFile(scope: !715, file: !394, discriminator: 9)
!3934 = !DILocation(line: 851, column: 160, scope: !715)
!3935 = !DILocation(line: 851, column: 170, scope: !715)
!3936 = !DILocation(line: 851, column: 176, scope: !715)
!3937 = !DILocation(line: 851, column: 168, scope: !715)
!3938 = !DILocation(line: 851, column: 40, scope: !3939)
!3939 = !DILexicalBlockFile(scope: !3940, file: !394, discriminator: 10)
!3940 = !DILexicalBlockFile(scope: !3941, file: !394, discriminator: 8)
!3941 = !DILexicalBlockFile(scope: !715, file: !394, discriminator: 6)
!3942 = !DILocation(line: 851, column: 38, scope: !3943)
!3943 = !DILexicalBlockFile(scope: !3944, file: !394, discriminator: 12)
!3944 = !DILexicalBlockFile(scope: !715, file: !394, discriminator: 11)
!3945 = !DILocation(line: 851, column: 13, scope: !715)
!3946 = !DILocation(line: 851, column: 11, scope: !715)
!3947 = !DILocation(line: 852, column: 35, scope: !715)
!3948 = !DILocation(line: 852, column: 9, scope: !715)
!3949 = !DILocation(line: 853, column: 13, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !715, file: !394, line: 853, column: 13)
!3951 = !DILocation(line: 853, column: 15, scope: !3950)
!3952 = !DILocation(line: 853, column: 13, scope: !715)
!3953 = !DILocation(line: 854, column: 13, scope: !3950)
!3954 = !DILocation(line: 855, column: 5, scope: !716)
!3955 = !DILocation(line: 855, column: 5, scope: !3956)
!3956 = !DILexicalBlockFile(scope: !716, file: !394, discriminator: 1)
!3957 = !DILocation(line: 855, column: 5, scope: !715)
!3958 = !DILocation(line: 856, column: 58, scope: !708)
!3959 = !DILocation(line: 856, column: 5, scope: !708)
!3960 = !DILocation(line: 857, column: 1, scope: !708)
!3961 = !DILocation(line: 1394, column: 49, scope: !779)
!3962 = !DILocation(line: 1396, column: 5, scope: !779)
!3963 = !DILocation(line: 1396, column: 11, scope: !779)
!3964 = !DILocation(line: 1396, column: 20, scope: !779)
!3965 = !DILocation(line: 1397, column: 1, scope: !779)
!3966 = !DILocation(line: 1477, column: 39, scope: !782)
!3967 = !DILocation(line: 1479, column: 5, scope: !782)
!3968 = !DILocation(line: 1479, column: 16, scope: !782)
!3969 = !DILocation(line: 1479, column: 23, scope: !782)
!3970 = !DILocation(line: 1479, column: 28, scope: !782)
!3971 = !DILocation(line: 1480, column: 10, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !782, file: !394, line: 1480, column: 9)
!3973 = !DILocation(line: 1480, column: 16, scope: !3972)
!3974 = !DILocation(line: 1480, column: 25, scope: !3972)
!3975 = !DILocation(line: 1480, column: 28, scope: !3976)
!3976 = !DILexicalBlockFile(scope: !3972, file: !394, discriminator: 1)
!3977 = !DILocation(line: 1480, column: 34, scope: !3972)
!3978 = !DILocation(line: 1480, column: 43, scope: !3972)
!3979 = !DILocation(line: 1480, column: 9, scope: !782)
!3980 = !DILocation(line: 1481, column: 30, scope: !3972)
!3981 = !DILocation(line: 1481, column: 36, scope: !3972)
!3982 = !DILocation(line: 1481, column: 15, scope: !3972)
!3983 = !DILocation(line: 1481, column: 9, scope: !3972)
!3984 = !DILocation(line: 1483, column: 15, scope: !3972)
!3985 = !DILocation(line: 1484, column: 11, scope: !782)
!3986 = !DILocation(line: 1484, column: 17, scope: !782)
!3987 = !DILocation(line: 1484, column: 31, scope: !782)
!3988 = !DILocation(line: 1484, column: 29, scope: !782)
!3989 = !DILocation(line: 1484, column: 9, scope: !782)
!3990 = !DILocation(line: 1485, column: 34, scope: !782)
!3991 = !DILocation(line: 1485, column: 40, scope: !782)
!3992 = !DILocation(line: 1485, column: 46, scope: !782)
!3993 = !DILocation(line: 1485, column: 55, scope: !782)
!3994 = !DILocation(line: 1485, column: 53, scope: !782)
!3995 = !DILocation(line: 1485, column: 62, scope: !782)
!3996 = !DILocation(line: 1485, column: 9, scope: !782)
!3997 = !DILocation(line: 1485, column: 7, scope: !782)
!3998 = !DILocation(line: 1486, column: 9, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !782, file: !394, line: 1486, column: 9)
!4000 = !DILocation(line: 1486, column: 11, scope: !3999)
!4001 = !DILocation(line: 1486, column: 9, scope: !782)
!4002 = !DILocation(line: 1487, column: 16, scope: !3999)
!4003 = !DILocation(line: 1487, column: 9, scope: !3999)
!4004 = !DILocation(line: 1488, column: 22, scope: !782)
!4005 = !DILocation(line: 1488, column: 30, scope: !782)
!4006 = !DILocation(line: 1488, column: 28, scope: !782)
!4007 = !DILocation(line: 1488, column: 5, scope: !782)
!4008 = !DILocation(line: 1488, column: 11, scope: !782)
!4009 = !DILocation(line: 1488, column: 20, scope: !782)
!4010 = !DILocation(line: 1489, column: 21, scope: !782)
!4011 = !DILocation(line: 1489, column: 29, scope: !782)
!4012 = !DILocation(line: 1489, column: 27, scope: !782)
!4013 = !DILocation(line: 1489, column: 5, scope: !782)
!4014 = !DILocation(line: 1489, column: 11, scope: !782)
!4015 = !DILocation(line: 1489, column: 19, scope: !782)
!4016 = !DILocation(line: 1490, column: 12, scope: !782)
!4017 = !DILocation(line: 1490, column: 5, scope: !782)
!4018 = !DILocation(line: 1491, column: 1, scope: !782)
!4019 = !DILocation(line: 1933, column: 42, scope: !717)
!4020 = !DILocation(line: 1935, column: 5, scope: !717)
!4021 = !DILocation(line: 1935, column: 16, scope: !717)
!4022 = !DILocation(line: 1936, column: 5, scope: !717)
!4023 = !DILocation(line: 1936, column: 14, scope: !717)
!4024 = !DILocation(line: 1936, column: 17, scope: !717)
!4025 = !DILocation(line: 1938, column: 11, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !717, file: !394, line: 1938, column: 9)
!4027 = !DILocation(line: 1938, column: 17, scope: !4026)
!4028 = !DILocation(line: 1938, column: 26, scope: !4026)
!4029 = !DILocation(line: 1938, column: 29, scope: !4030)
!4030 = !DILexicalBlockFile(scope: !4026, file: !394, discriminator: 1)
!4031 = !DILocation(line: 1938, column: 35, scope: !4026)
!4032 = !DILocation(line: 1938, column: 45, scope: !4026)
!4033 = !DILocation(line: 1938, column: 52, scope: !4026)
!4034 = !DILocation(line: 1938, column: 55, scope: !4035)
!4035 = !DILexicalBlockFile(scope: !4026, file: !394, discriminator: 2)
!4036 = !DILocation(line: 1938, column: 61, scope: !4026)
!4037 = !{!1598, !1483, i64 88}
!4038 = !DILocation(line: 1938, column: 74, scope: !4026)
!4039 = !DILocation(line: 1938, column: 80, scope: !4026)
!4040 = !DILocation(line: 1938, column: 71, scope: !4026)
!4041 = !DILocation(line: 1938, column: 9, scope: !717)
!4042 = !DILocation(line: 1939, column: 9, scope: !4026)
!4043 = !DILocation(line: 1941, column: 18, scope: !717)
!4044 = !DILocation(line: 1941, column: 24, scope: !717)
!4045 = !DILocation(line: 1941, column: 33, scope: !717)
!4046 = !DILocation(line: 1941, column: 36, scope: !4047)
!4047 = !DILexicalBlockFile(scope: !717, file: !394, discriminator: 1)
!4048 = !DILocation(line: 1941, column: 42, scope: !717)
!4049 = !DILocation(line: 1941, column: 51, scope: !717)
!4050 = !DILocation(line: 1941, column: 58, scope: !717)
!4051 = !DILocation(line: 1941, column: 62, scope: !4052)
!4052 = !DILexicalBlockFile(scope: !4053, file: !394, discriminator: 4)
!4053 = !DILexicalBlockFile(scope: !717, file: !394, discriminator: 2)
!4054 = !DILocation(line: 1941, column: 68, scope: !717)
!4055 = !DILocation(line: 1941, column: 62, scope: !717)
!4056 = !DILocation(line: 1941, column: 77, scope: !717)
!4057 = !DILocation(line: 1941, column: 80, scope: !4058)
!4058 = !DILexicalBlockFile(scope: !717, file: !394, discriminator: 5)
!4059 = !DILocation(line: 1941, column: 86, scope: !717)
!4060 = !DILocation(line: 1941, column: 96, scope: !717)
!4061 = !DILocation(line: 1941, column: 104, scope: !717)
!4062 = !DILocation(line: 1941, column: 107, scope: !4063)
!4063 = !DILexicalBlockFile(scope: !4064, file: !394, discriminator: 7)
!4064 = !DILexicalBlockFile(scope: !717, file: !394, discriminator: 3)
!4065 = !DILocation(line: 1941, column: 113, scope: !717)
!4066 = !DILocation(line: 1941, column: 121, scope: !717)
!4067 = !DILocation(line: 1941, column: 15, scope: !717)
!4068 = !DILocation(line: 1941, column: 129, scope: !4069)
!4069 = !DILexicalBlockFile(scope: !717, file: !394, discriminator: 9)
!4070 = !DILocation(line: 1941, column: 135, scope: !717)
!4071 = !DILocation(line: 1941, column: 145, scope: !717)
!4072 = !DILocation(line: 1941, column: 151, scope: !717)
!4073 = !DILocation(line: 1941, column: 143, scope: !717)
!4074 = !DILocation(line: 1941, column: 15, scope: !4075)
!4075 = !DILexicalBlockFile(scope: !4076, file: !394, discriminator: 10)
!4076 = !DILexicalBlockFile(scope: !4077, file: !394, discriminator: 8)
!4077 = !DILexicalBlockFile(scope: !717, file: !394, discriminator: 6)
!4078 = !DILocation(line: 1941, column: 163, scope: !4079)
!4079 = !DILexicalBlockFile(scope: !4080, file: !394, discriminator: 12)
!4080 = !DILexicalBlockFile(scope: !717, file: !394, discriminator: 11)
!4081 = !DILocation(line: 1941, column: 169, scope: !717)
!4082 = !DILocation(line: 1941, column: 175, scope: !717)
!4083 = !DILocation(line: 1941, column: 181, scope: !717)
!4084 = !DILocation(line: 1941, column: 173, scope: !717)
!4085 = !DILocation(line: 1941, column: 160, scope: !717)
!4086 = !DILocation(line: 1941, column: 12, scope: !717)
!4087 = !DILocation(line: 1942, column: 9, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !717, file: !394, line: 1942, column: 9)
!4089 = !DILocation(line: 1942, column: 16, scope: !4088)
!4090 = !DILocation(line: 1942, column: 9, scope: !717)
!4091 = !DILocation(line: 1943, column: 32, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4088, file: !394, line: 1942, column: 22)
!4093 = !DILocation(line: 1943, column: 39, scope: !4092)
!4094 = !DILocation(line: 1943, column: 38, scope: !4092)
!4095 = !DILocation(line: 1943, column: 13, scope: !4092)
!4096 = !DILocation(line: 1943, column: 11, scope: !4092)
!4097 = !DILocation(line: 1944, column: 13, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4092, file: !394, line: 1944, column: 13)
!4099 = !DILocation(line: 1944, column: 15, scope: !4098)
!4100 = !DILocation(line: 1944, column: 13, scope: !4092)
!4101 = !DILocation(line: 1945, column: 13, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4098, file: !394, line: 1944, column: 20)
!4103 = !DILocation(line: 1947, column: 26, scope: !4092)
!4104 = !DILocation(line: 1947, column: 9, scope: !4092)
!4105 = !DILocation(line: 1947, column: 15, scope: !4092)
!4106 = !DILocation(line: 1947, column: 23, scope: !4092)
!4107 = !DILocation(line: 1948, column: 5, scope: !4092)
!4108 = !DILocation(line: 1949, column: 5, scope: !717)
!4109 = !DILocation(line: 1949, column: 12, scope: !4110)
!4110 = !DILexicalBlockFile(scope: !4047, file: !394, discriminator: 2)
!4111 = !DILocation(line: 1949, column: 18, scope: !717)
!4112 = !DILocation(line: 1949, column: 30, scope: !717)
!4113 = !DILocation(line: 1949, column: 36, scope: !717)
!4114 = !DILocation(line: 1949, column: 28, scope: !717)
!4115 = !DILocation(line: 1950, column: 39, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !717, file: !394, line: 1949, column: 47)
!4117 = !DILocation(line: 1951, column: 13, scope: !4116)
!4118 = !DILocation(line: 1951, column: 19, scope: !4116)
!4119 = !DILocation(line: 1951, column: 28, scope: !4116)
!4120 = !DILocation(line: 1951, column: 34, scope: !4116)
!4121 = !DILocation(line: 1951, column: 26, scope: !4116)
!4122 = !DILocation(line: 1952, column: 26, scope: !4116)
!4123 = !DILocation(line: 1952, column: 32, scope: !4116)
!4124 = !DILocation(line: 1952, column: 44, scope: !4116)
!4125 = !DILocation(line: 1952, column: 50, scope: !4116)
!4126 = !DILocation(line: 1952, column: 42, scope: !4116)
!4127 = !DILocation(line: 1950, column: 13, scope: !4116)
!4128 = !DILocation(line: 1950, column: 11, scope: !4116)
!4129 = !DILocation(line: 1954, column: 13, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4116, file: !394, line: 1954, column: 13)
!4131 = !DILocation(line: 1954, column: 15, scope: !4130)
!4132 = !DILocation(line: 1954, column: 13, scope: !4116)
!4133 = !DILocation(line: 1955, column: 13, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4130, file: !394, line: 1954, column: 22)
!4135 = !DILocation(line: 1957, column: 18, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4130, file: !394, line: 1957, column: 18)
!4137 = !DILocation(line: 1957, column: 20, scope: !4136)
!4138 = !DILocation(line: 1957, column: 18, scope: !4130)
!4139 = !DILocation(line: 1958, column: 13, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4136, file: !394, line: 1957, column: 27)
!4141 = !DILocation(line: 1960, column: 13, scope: !4140)
!4142 = !DILocation(line: 1962, column: 28, scope: !4116)
!4143 = !DILocation(line: 1962, column: 9, scope: !4116)
!4144 = !DILocation(line: 1962, column: 15, scope: !4116)
!4145 = !DILocation(line: 1962, column: 25, scope: !4116)
!4146 = !DILocation(line: 1963, column: 25, scope: !4116)
!4147 = !DILocation(line: 1963, column: 31, scope: !4116)
!4148 = !DILocation(line: 1963, column: 9, scope: !4116)
!4149 = !DILocation(line: 1963, column: 15, scope: !4116)
!4150 = !DILocation(line: 1963, column: 23, scope: !4116)
!4151 = !DILocation(line: 1964, column: 33, scope: !4116)
!4152 = !DILocation(line: 1964, column: 17, scope: !4116)
!4153 = !DILocation(line: 1968, column: 13, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4116, file: !394, line: 1968, column: 13)
!4155 = !DILocation(line: 1968, column: 34, scope: !4154)
!4156 = !DILocation(line: 1968, column: 13, scope: !4116)
!4157 = !DILocation(line: 1969, column: 13, scope: !4154)
!4158 = !DILocation(line: 1972, column: 31, scope: !717)
!4159 = !DILocation(line: 1972, column: 5, scope: !717)
!4160 = !DILocation(line: 1975, column: 58, scope: !717)
!4161 = !DILocation(line: 1975, column: 5, scope: !717)
!4162 = !DILocation(line: 1978, column: 5, scope: !717)
!4163 = !DILocation(line: 1979, column: 1, scope: !717)
!4164 = !DILocation(line: 729, column: 30, scope: !758)
!4165 = !DILocation(line: 729, column: 45, scope: !758)
!4166 = !DILocation(line: 729, column: 57, scope: !758)
!4167 = !DILocation(line: 731, column: 5, scope: !758)
!4168 = !DILocation(line: 731, column: 15, scope: !758)
!4169 = !DILocation(line: 731, column: 21, scope: !758)
!4170 = !DILocation(line: 731, column: 30, scope: !758)
!4171 = !DILocation(line: 732, column: 5, scope: !758)
!4172 = !DILocation(line: 732, column: 14, scope: !758)
!4173 = !DILocation(line: 734, column: 33, scope: !758)
!4174 = !DILocation(line: 734, column: 14, scope: !758)
!4175 = !DILocation(line: 734, column: 12, scope: !758)
!4176 = !DILocation(line: 735, column: 9, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !758, file: !394, line: 735, column: 9)
!4178 = !DILocation(line: 735, column: 16, scope: !4177)
!4179 = !DILocation(line: 735, column: 9, scope: !758)
!4180 = !DILocation(line: 736, column: 9, scope: !4177)
!4181 = !DILocation(line: 737, column: 33, scope: !758)
!4182 = !DILocation(line: 737, column: 17, scope: !758)
!4183 = !DILocation(line: 737, column: 15, scope: !758)
!4184 = !DILocation(line: 738, column: 9, scope: !772)
!4185 = !DILocation(line: 738, column: 19, scope: !772)
!4186 = !DILocation(line: 738, column: 9, scope: !758)
!4187 = !DILocation(line: 739, column: 9, scope: !771)
!4188 = !DILocation(line: 739, column: 14, scope: !4189)
!4189 = !DILexicalBlockFile(scope: !770, file: !394, discriminator: 1)
!4190 = !DILocation(line: 739, column: 24, scope: !770)
!4191 = !DILocation(line: 739, column: 54, scope: !770)
!4192 = !DILocation(line: 739, column: 71, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !770, file: !394, line: 739, column: 68)
!4194 = !DILocation(line: 739, column: 88, scope: !4193)
!4195 = !DILocation(line: 739, column: 68, scope: !4193)
!4196 = !DILocation(line: 739, column: 98, scope: !4193)
!4197 = !DILocation(line: 739, column: 68, scope: !770)
!4198 = !DILocation(line: 739, column: 68, scope: !4199)
!4199 = !DILexicalBlockFile(scope: !770, file: !394, discriminator: 2)
!4200 = !DILocation(line: 739, column: 129, scope: !4201)
!4201 = !DILexicalBlockFile(scope: !4193, file: !394, discriminator: 3)
!4202 = !DILocation(line: 739, column: 147, scope: !4193)
!4203 = !DILocation(line: 739, column: 157, scope: !4193)
!4204 = !DILocation(line: 739, column: 182, scope: !4193)
!4205 = !DILocation(line: 739, column: 113, scope: !4193)
!4206 = !DILocation(line: 739, column: 201, scope: !4207)
!4207 = !DILexicalBlockFile(scope: !771, file: !394, discriminator: 4)
!4208 = !DILocation(line: 739, column: 201, scope: !770)
!4209 = !DILocation(line: 739, column: 201, scope: !4210)
!4210 = !DILexicalBlockFile(scope: !770, file: !394, discriminator: 5)
!4211 = !DILocation(line: 740, column: 9, scope: !771)
!4212 = !DILocation(line: 742, column: 38, scope: !758)
!4213 = !DILocation(line: 742, column: 44, scope: !758)
!4214 = !DILocation(line: 742, column: 49, scope: !758)
!4215 = !DILocation(line: 743, column: 38, scope: !758)
!4216 = !DILocation(line: 743, column: 46, scope: !758)
!4217 = !DILocation(line: 742, column: 11, scope: !758)
!4218 = !DILocation(line: 742, column: 9, scope: !758)
!4219 = !DILocation(line: 744, column: 5, scope: !758)
!4220 = !DILocation(line: 744, column: 10, scope: !4221)
!4221 = !DILexicalBlockFile(scope: !774, file: !394, discriminator: 1)
!4222 = !DILocation(line: 744, column: 20, scope: !774)
!4223 = !DILocation(line: 744, column: 50, scope: !774)
!4224 = !DILocation(line: 744, column: 67, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !774, file: !394, line: 744, column: 64)
!4226 = !DILocation(line: 744, column: 84, scope: !4225)
!4227 = !DILocation(line: 744, column: 64, scope: !4225)
!4228 = !DILocation(line: 744, column: 94, scope: !4225)
!4229 = !DILocation(line: 744, column: 64, scope: !774)
!4230 = !DILocation(line: 744, column: 64, scope: !4231)
!4231 = !DILexicalBlockFile(scope: !774, file: !394, discriminator: 2)
!4232 = !DILocation(line: 744, column: 125, scope: !4233)
!4233 = !DILexicalBlockFile(scope: !4225, file: !394, discriminator: 3)
!4234 = !DILocation(line: 744, column: 143, scope: !4225)
!4235 = !DILocation(line: 744, column: 153, scope: !4225)
!4236 = !DILocation(line: 744, column: 178, scope: !4225)
!4237 = !DILocation(line: 744, column: 109, scope: !4225)
!4238 = !DILocation(line: 744, column: 197, scope: !4239)
!4239 = !DILexicalBlockFile(scope: !758, file: !394, discriminator: 4)
!4240 = !DILocation(line: 744, column: 197, scope: !774)
!4241 = !DILocation(line: 744, column: 197, scope: !4242)
!4242 = !DILexicalBlockFile(scope: !774, file: !394, discriminator: 5)
!4243 = !DILocation(line: 745, column: 5, scope: !758)
!4244 = !DILocation(line: 745, column: 10, scope: !4245)
!4245 = !DILexicalBlockFile(scope: !776, file: !394, discriminator: 1)
!4246 = !DILocation(line: 745, column: 20, scope: !776)
!4247 = !DILocation(line: 745, column: 50, scope: !776)
!4248 = !DILocation(line: 745, column: 70, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !776, file: !394, line: 745, column: 67)
!4250 = !DILocation(line: 745, column: 87, scope: !4249)
!4251 = !DILocation(line: 745, column: 67, scope: !4249)
!4252 = !DILocation(line: 745, column: 97, scope: !4249)
!4253 = !DILocation(line: 745, column: 67, scope: !776)
!4254 = !DILocation(line: 745, column: 67, scope: !4255)
!4255 = !DILexicalBlockFile(scope: !776, file: !394, discriminator: 2)
!4256 = !DILocation(line: 745, column: 128, scope: !4257)
!4257 = !DILexicalBlockFile(scope: !4249, file: !394, discriminator: 3)
!4258 = !DILocation(line: 745, column: 146, scope: !4249)
!4259 = !DILocation(line: 745, column: 156, scope: !4249)
!4260 = !DILocation(line: 745, column: 181, scope: !4249)
!4261 = !DILocation(line: 745, column: 112, scope: !4249)
!4262 = !DILocation(line: 745, column: 200, scope: !4239)
!4263 = !DILocation(line: 745, column: 200, scope: !776)
!4264 = !DILocation(line: 745, column: 200, scope: !4265)
!4265 = !DILexicalBlockFile(scope: !776, file: !394, discriminator: 5)
!4266 = !DILocation(line: 746, column: 9, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !758, file: !394, line: 746, column: 9)
!4268 = !DILocation(line: 746, column: 13, scope: !4267)
!4269 = !DILocation(line: 746, column: 9, scope: !758)
!4270 = !DILocation(line: 747, column: 9, scope: !4267)
!4271 = !DILocation(line: 748, column: 26, scope: !758)
!4272 = !DILocation(line: 748, column: 31, scope: !758)
!4273 = !DILocation(line: 748, column: 9, scope: !758)
!4274 = !DILocation(line: 748, column: 7, scope: !758)
!4275 = !DILocation(line: 749, column: 5, scope: !758)
!4276 = !DILocation(line: 749, column: 10, scope: !4277)
!4277 = !DILexicalBlockFile(scope: !778, file: !394, discriminator: 1)
!4278 = !DILocation(line: 749, column: 20, scope: !778)
!4279 = !DILocation(line: 749, column: 50, scope: !778)
!4280 = !DILocation(line: 749, column: 64, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !778, file: !394, line: 749, column: 61)
!4282 = !DILocation(line: 749, column: 81, scope: !4281)
!4283 = !DILocation(line: 749, column: 61, scope: !4281)
!4284 = !DILocation(line: 749, column: 91, scope: !4281)
!4285 = !DILocation(line: 749, column: 61, scope: !778)
!4286 = !DILocation(line: 749, column: 61, scope: !4287)
!4287 = !DILexicalBlockFile(scope: !778, file: !394, discriminator: 2)
!4288 = !DILocation(line: 749, column: 122, scope: !4289)
!4289 = !DILexicalBlockFile(scope: !4281, file: !394, discriminator: 3)
!4290 = !DILocation(line: 749, column: 140, scope: !4281)
!4291 = !DILocation(line: 749, column: 150, scope: !4281)
!4292 = !DILocation(line: 749, column: 175, scope: !4281)
!4293 = !DILocation(line: 749, column: 106, scope: !4281)
!4294 = !DILocation(line: 749, column: 194, scope: !4239)
!4295 = !DILocation(line: 749, column: 194, scope: !778)
!4296 = !DILocation(line: 749, column: 194, scope: !4297)
!4297 = !DILexicalBlockFile(scope: !778, file: !394, discriminator: 5)
!4298 = !DILocation(line: 750, column: 9, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !758, file: !394, line: 750, column: 9)
!4300 = !DILocation(line: 750, column: 11, scope: !4299)
!4301 = !DILocation(line: 750, column: 9, scope: !758)
!4302 = !DILocation(line: 751, column: 14, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !394, line: 751, column: 13)
!4304 = distinct !DILexicalBlock(scope: !4299, file: !394, line: 750, column: 16)
!4305 = !DILocation(line: 751, column: 13, scope: !4304)
!4306 = !DILocation(line: 752, column: 26, scope: !4303)
!4307 = !DILocation(line: 754, column: 38, scope: !4303)
!4308 = !DILocation(line: 752, column: 13, scope: !4303)
!4309 = !DILocation(line: 755, column: 9, scope: !4304)
!4310 = !DILocation(line: 757, column: 21, scope: !758)
!4311 = !DILocation(line: 757, column: 5, scope: !758)
!4312 = !DILocation(line: 757, column: 11, scope: !758)
!4313 = !DILocation(line: 757, column: 19, scope: !758)
!4314 = !{!1598, !1483, i64 48}
!4315 = !DILocation(line: 758, column: 12, scope: !758)
!4316 = !DILocation(line: 758, column: 5, scope: !758)
!4317 = !DILocation(line: 759, column: 1, scope: !758)
!4318 = !DILocation(line: 1884, column: 37, scope: !723)
!4319 = !DILocation(line: 1884, column: 49, scope: !723)
!4320 = !DILocation(line: 1884, column: 67, scope: !723)
!4321 = !DILocation(line: 1886, column: 5, scope: !723)
!4322 = !DILocation(line: 1886, column: 15, scope: !723)
!4323 = !DILocation(line: 1887, column: 5, scope: !723)
!4324 = !DILocation(line: 1887, column: 15, scope: !723)
!4325 = !DILocation(line: 1887, column: 24, scope: !723)
!4326 = !DILocation(line: 1888, column: 5, scope: !723)
!4327 = !DILocation(line: 1888, column: 16, scope: !723)
!4328 = !DILocation(line: 1889, column: 5, scope: !723)
!4329 = !DILocation(line: 1889, column: 9, scope: !723)
!4330 = !DILocation(line: 1891, column: 45, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !723, file: !394, line: 1891, column: 9)
!4332 = !DILocation(line: 1891, column: 52, scope: !4331)
!4333 = !DILocation(line: 1891, column: 9, scope: !4331)
!4334 = !DILocation(line: 1891, column: 70, scope: !4331)
!4335 = !DILocation(line: 1891, column: 9, scope: !723)
!4336 = !DILocation(line: 1892, column: 9, scope: !4331)
!4337 = !DILocation(line: 1893, column: 14, scope: !723)
!4338 = !DILocation(line: 1893, column: 12, scope: !723)
!4339 = !DILocation(line: 1894, column: 9, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !723, file: !394, line: 1894, column: 9)
!4341 = !DILocation(line: 1894, column: 16, scope: !4340)
!4342 = !DILocation(line: 1894, column: 9, scope: !723)
!4343 = !DILocation(line: 1895, column: 9, scope: !4340)
!4344 = !DILocation(line: 1901, column: 5, scope: !723)
!4345 = !DILocation(line: 1902, column: 11, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !723, file: !394, line: 1901, column: 8)
!4347 = !DILocation(line: 1902, column: 32, scope: !4346)
!4348 = !DILocation(line: 1903, column: 42, scope: !4346)
!4349 = !DILocation(line: 1903, column: 48, scope: !4346)
!4350 = !DILocation(line: 1903, column: 53, scope: !4346)
!4351 = !DILocation(line: 1903, column: 70, scope: !4346)
!4352 = !DILocation(line: 1903, column: 15, scope: !4346)
!4353 = !DILocation(line: 1903, column: 13, scope: !4346)
!4354 = !DILocation(line: 1904, column: 20, scope: !4346)
!4355 = !DILocation(line: 1904, column: 19, scope: !4346)
!4356 = !DILocation(line: 1904, column: 16, scope: !4346)
!4357 = !DILocation(line: 1905, column: 5, scope: !4346)
!4358 = !DILocation(line: 1905, column: 14, scope: !4359)
!4359 = !DILexicalBlockFile(scope: !723, file: !394, discriminator: 1)
!4360 = !DILocation(line: 1905, column: 18, scope: !723)
!4361 = !DILocation(line: 1905, column: 32, scope: !723)
!4362 = !DILocation(line: 1905, column: 35, scope: !4363)
!4363 = !DILexicalBlockFile(scope: !723, file: !394, discriminator: 2)
!4364 = !DILocation(line: 1905, column: 5, scope: !4365)
!4365 = !DILexicalBlockFile(scope: !4346, file: !394, discriminator: 3)
!4366 = !DILocation(line: 1906, column: 5, scope: !723)
!4367 = !DILocation(line: 1906, column: 10, scope: !4368)
!4368 = !DILexicalBlockFile(scope: !736, file: !394, discriminator: 1)
!4369 = !DILocation(line: 1906, column: 20, scope: !736)
!4370 = !DILocation(line: 1906, column: 50, scope: !736)
!4371 = !DILocation(line: 1906, column: 67, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !736, file: !394, line: 1906, column: 64)
!4373 = !DILocation(line: 1906, column: 84, scope: !4372)
!4374 = !DILocation(line: 1906, column: 64, scope: !4372)
!4375 = !DILocation(line: 1906, column: 94, scope: !4372)
!4376 = !DILocation(line: 1906, column: 64, scope: !736)
!4377 = !DILocation(line: 1906, column: 64, scope: !4378)
!4378 = !DILexicalBlockFile(scope: !736, file: !394, discriminator: 2)
!4379 = !DILocation(line: 1906, column: 125, scope: !4380)
!4380 = !DILexicalBlockFile(scope: !4372, file: !394, discriminator: 3)
!4381 = !DILocation(line: 1906, column: 143, scope: !4372)
!4382 = !DILocation(line: 1906, column: 153, scope: !4372)
!4383 = !DILocation(line: 1906, column: 178, scope: !4372)
!4384 = !DILocation(line: 1906, column: 109, scope: !4372)
!4385 = !DILocation(line: 1906, column: 197, scope: !4386)
!4386 = !DILexicalBlockFile(scope: !723, file: !394, discriminator: 4)
!4387 = !DILocation(line: 1906, column: 197, scope: !736)
!4388 = !DILocation(line: 1906, column: 197, scope: !4389)
!4389 = !DILexicalBlockFile(scope: !736, file: !394, discriminator: 5)
!4390 = !DILocation(line: 1907, column: 9, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !723, file: !394, line: 1907, column: 9)
!4392 = !DILocation(line: 1907, column: 13, scope: !4391)
!4393 = !DILocation(line: 1907, column: 9, scope: !723)
!4394 = !DILocation(line: 1908, column: 9, scope: !4391)
!4395 = !DILocation(line: 1909, column: 9, scope: !740)
!4396 = !DILocation(line: 1909, column: 13, scope: !740)
!4397 = !DILocation(line: 1909, column: 9, scope: !723)
!4398 = !DILocation(line: 1913, column: 9, scope: !739)
!4399 = !DILocation(line: 1913, column: 14, scope: !4400)
!4400 = !DILexicalBlockFile(scope: !738, file: !394, discriminator: 1)
!4401 = !DILocation(line: 1913, column: 24, scope: !738)
!4402 = !DILocation(line: 1913, column: 54, scope: !738)
!4403 = !DILocation(line: 1913, column: 68, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !738, file: !394, line: 1913, column: 65)
!4405 = !DILocation(line: 1913, column: 85, scope: !4404)
!4406 = !DILocation(line: 1913, column: 65, scope: !4404)
!4407 = !DILocation(line: 1913, column: 95, scope: !4404)
!4408 = !DILocation(line: 1913, column: 65, scope: !738)
!4409 = !DILocation(line: 1913, column: 65, scope: !4410)
!4410 = !DILexicalBlockFile(scope: !738, file: !394, discriminator: 2)
!4411 = !DILocation(line: 1913, column: 126, scope: !4412)
!4412 = !DILexicalBlockFile(scope: !4404, file: !394, discriminator: 3)
!4413 = !DILocation(line: 1913, column: 144, scope: !4404)
!4414 = !DILocation(line: 1913, column: 154, scope: !4404)
!4415 = !DILocation(line: 1913, column: 179, scope: !4404)
!4416 = !DILocation(line: 1913, column: 110, scope: !4404)
!4417 = !DILocation(line: 1913, column: 198, scope: !4418)
!4418 = !DILexicalBlockFile(scope: !739, file: !394, discriminator: 4)
!4419 = !DILocation(line: 1913, column: 198, scope: !738)
!4420 = !DILocation(line: 1913, column: 198, scope: !4421)
!4421 = !DILexicalBlockFile(scope: !738, file: !394, discriminator: 5)
!4422 = !DILocation(line: 1914, column: 34, scope: !739)
!4423 = !DILocation(line: 1914, column: 11, scope: !739)
!4424 = !DILocation(line: 1914, column: 32, scope: !739)
!4425 = !DILocation(line: 1915, column: 9, scope: !739)
!4426 = !DILocation(line: 1917, column: 28, scope: !723)
!4427 = !DILocation(line: 1917, column: 33, scope: !723)
!4428 = !DILocation(line: 1917, column: 9, scope: !723)
!4429 = !DILocation(line: 1917, column: 7, scope: !723)
!4430 = !DILocation(line: 1918, column: 5, scope: !723)
!4431 = !DILocation(line: 1918, column: 10, scope: !4432)
!4432 = !DILexicalBlockFile(scope: !742, file: !394, discriminator: 1)
!4433 = !DILocation(line: 1918, column: 20, scope: !742)
!4434 = !DILocation(line: 1918, column: 50, scope: !742)
!4435 = !DILocation(line: 1918, column: 64, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !742, file: !394, line: 1918, column: 61)
!4437 = !DILocation(line: 1918, column: 81, scope: !4436)
!4438 = !DILocation(line: 1918, column: 61, scope: !4436)
!4439 = !DILocation(line: 1918, column: 91, scope: !4436)
!4440 = !DILocation(line: 1918, column: 61, scope: !742)
!4441 = !DILocation(line: 1918, column: 61, scope: !4442)
!4442 = !DILexicalBlockFile(scope: !742, file: !394, discriminator: 2)
!4443 = !DILocation(line: 1918, column: 122, scope: !4444)
!4444 = !DILexicalBlockFile(scope: !4436, file: !394, discriminator: 3)
!4445 = !DILocation(line: 1918, column: 140, scope: !4436)
!4446 = !DILocation(line: 1918, column: 150, scope: !4436)
!4447 = !DILocation(line: 1918, column: 175, scope: !4436)
!4448 = !DILocation(line: 1918, column: 106, scope: !4436)
!4449 = !DILocation(line: 1918, column: 194, scope: !4386)
!4450 = !DILocation(line: 1918, column: 194, scope: !742)
!4451 = !DILocation(line: 1918, column: 194, scope: !4452)
!4452 = !DILexicalBlockFile(scope: !742, file: !394, discriminator: 5)
!4453 = !DILocation(line: 1919, column: 9, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !723, file: !394, line: 1919, column: 9)
!4455 = !DILocation(line: 1919, column: 11, scope: !4454)
!4456 = !DILocation(line: 1919, column: 15, scope: !4454)
!4457 = !DILocation(line: 1919, column: 18, scope: !4458)
!4458 = !DILexicalBlockFile(scope: !4454, file: !394, discriminator: 1)
!4459 = !DILocation(line: 1919, column: 22, scope: !4454)
!4460 = !DILocation(line: 1919, column: 20, scope: !4454)
!4461 = !DILocation(line: 1919, column: 9, scope: !723)
!4462 = !DILocation(line: 1920, column: 22, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4454, file: !394, line: 1919, column: 27)
!4464 = !DILocation(line: 1922, column: 62, scope: !4463)
!4465 = !DILocation(line: 1922, column: 65, scope: !4463)
!4466 = !DILocation(line: 1920, column: 9, scope: !4463)
!4467 = !DILocation(line: 1923, column: 9, scope: !4463)
!4468 = !DILocation(line: 1925, column: 9, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !723, file: !394, line: 1925, column: 9)
!4470 = !DILocation(line: 1925, column: 11, scope: !4469)
!4471 = !DILocation(line: 1925, column: 15, scope: !4469)
!4472 = !DILocation(line: 1925, column: 18, scope: !4473)
!4473 = !DILexicalBlockFile(scope: !4469, file: !394, discriminator: 1)
!4474 = !DILocation(line: 1925, column: 24, scope: !4469)
!4475 = !DILocation(line: 1925, column: 32, scope: !4469)
!4476 = !DILocation(line: 1925, column: 9, scope: !723)
!4477 = !DILocation(line: 1926, column: 26, scope: !4469)
!4478 = !DILocation(line: 1926, column: 9, scope: !4469)
!4479 = !DILocation(line: 1926, column: 15, scope: !4469)
!4480 = !DILocation(line: 1926, column: 23, scope: !4469)
!4481 = !DILocation(line: 1927, column: 12, scope: !723)
!4482 = !DILocation(line: 1927, column: 5, scope: !723)
!4483 = !DILocation(line: 1928, column: 1, scope: !723)
!4484 = !DILocation(line: 673, column: 28, scope: !743)
!4485 = !DILocation(line: 673, column: 44, scope: !743)
!4486 = !DILocation(line: 675, column: 5, scope: !743)
!4487 = !DILocation(line: 675, column: 15, scope: !743)
!4488 = !DILocation(line: 681, column: 40, scope: !743)
!4489 = !DILocation(line: 682, column: 35, scope: !743)
!4490 = !DILocation(line: 682, column: 34, scope: !743)
!4491 = !DILocation(line: 682, column: 57, scope: !743)
!4492 = !DILocation(line: 682, column: 62, scope: !743)
!4493 = !DILocation(line: 681, column: 11, scope: !743)
!4494 = !DILocation(line: 681, column: 9, scope: !743)
!4495 = !DILocation(line: 683, column: 9, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !743, file: !394, line: 683, column: 9)
!4497 = !DILocation(line: 683, column: 9, scope: !743)
!4498 = !DILocation(line: 684, column: 25, scope: !4496)
!4499 = !DILocation(line: 684, column: 48, scope: !4496)
!4500 = !DILocation(line: 684, column: 9, scope: !4496)
!4501 = !DILocation(line: 685, column: 5, scope: !743)
!4502 = !DILocation(line: 685, column: 10, scope: !4503)
!4503 = !DILexicalBlockFile(scope: !751, file: !394, discriminator: 1)
!4504 = !DILocation(line: 685, column: 20, scope: !751)
!4505 = !DILocation(line: 685, column: 51, scope: !751)
!4506 = !DILocation(line: 685, column: 61, scope: !754)
!4507 = !DILocation(line: 685, column: 77, scope: !754)
!4508 = !DILocation(line: 685, column: 61, scope: !751)
!4509 = !DILocation(line: 685, column: 92, scope: !4510)
!4510 = !DILexicalBlockFile(scope: !754, file: !394, discriminator: 2)
!4511 = !DILocation(line: 685, column: 97, scope: !4512)
!4512 = !DILexicalBlockFile(scope: !753, file: !394, discriminator: 4)
!4513 = !DILocation(line: 685, column: 107, scope: !753)
!4514 = !DILocation(line: 685, column: 137, scope: !753)
!4515 = !DILocation(line: 685, column: 163, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !753, file: !394, line: 685, column: 160)
!4517 = !DILocation(line: 685, column: 180, scope: !4516)
!4518 = !DILocation(line: 685, column: 160, scope: !4516)
!4519 = !DILocation(line: 685, column: 190, scope: !4516)
!4520 = !DILocation(line: 685, column: 160, scope: !753)
!4521 = !DILocation(line: 685, column: 160, scope: !4522)
!4522 = !DILexicalBlockFile(scope: !753, file: !394, discriminator: 5)
!4523 = !DILocation(line: 685, column: 221, scope: !4524)
!4524 = !DILexicalBlockFile(scope: !4516, file: !394, discriminator: 6)
!4525 = !DILocation(line: 685, column: 239, scope: !4516)
!4526 = !DILocation(line: 685, column: 249, scope: !4516)
!4527 = !DILocation(line: 685, column: 274, scope: !4516)
!4528 = !DILocation(line: 685, column: 205, scope: !4516)
!4529 = !DILocation(line: 685, column: 293, scope: !4530)
!4530 = !DILexicalBlockFile(scope: !754, file: !394, discriminator: 7)
!4531 = !DILocation(line: 685, column: 293, scope: !753)
!4532 = !DILocation(line: 685, column: 293, scope: !4533)
!4533 = !DILexicalBlockFile(scope: !753, file: !394, discriminator: 8)
!4534 = !DILocation(line: 685, column: 293, scope: !4535)
!4535 = !DILexicalBlockFile(scope: !753, file: !394, discriminator: 9)
!4536 = !DILocation(line: 685, column: 306, scope: !4537)
!4537 = !DILexicalBlockFile(scope: !4538, file: !394, discriminator: 10)
!4538 = !DILexicalBlockFile(scope: !743, file: !394, discriminator: 3)
!4539 = !DILocation(line: 685, column: 306, scope: !751)
!4540 = !DILocation(line: 685, column: 306, scope: !4541)
!4541 = !DILexicalBlockFile(scope: !751, file: !394, discriminator: 11)
!4542 = !DILocation(line: 686, column: 1, scope: !743)
!4543 = !DILocation(line: 1840, column: 37, scope: !755)
!4544 = !DILocation(line: 1842, column: 5, scope: !755)
!4545 = !DILocation(line: 1842, column: 11, scope: !755)
!4546 = !DILocation(line: 1842, column: 21, scope: !755)
!4547 = !DILocation(line: 1843, column: 5, scope: !755)
!4548 = !DILocation(line: 1843, column: 11, scope: !755)
!4549 = !DILocation(line: 1843, column: 21, scope: !755)
!4550 = !DILocation(line: 1844, column: 1, scope: !755)
!4551 = !DILocation(line: 1436, column: 36, scope: !790)
!4552 = !DILocation(line: 1436, column: 48, scope: !790)
!4553 = !DILocation(line: 1436, column: 66, scope: !790)
!4554 = !DILocation(line: 1438, column: 5, scope: !790)
!4555 = !DILocation(line: 1438, column: 15, scope: !790)
!4556 = !DILocation(line: 1439, column: 5, scope: !790)
!4557 = !DILocation(line: 1439, column: 15, scope: !790)
!4558 = !DILocation(line: 1439, column: 24, scope: !790)
!4559 = !DILocation(line: 1440, column: 5, scope: !790)
!4560 = !DILocation(line: 1440, column: 16, scope: !790)
!4561 = !DILocation(line: 1442, column: 45, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !790, file: !394, line: 1442, column: 9)
!4563 = !DILocation(line: 1442, column: 52, scope: !4562)
!4564 = !DILocation(line: 1442, column: 9, scope: !4562)
!4565 = !DILocation(line: 1442, column: 79, scope: !4562)
!4566 = !DILocation(line: 1442, column: 9, scope: !790)
!4567 = !DILocation(line: 1443, column: 9, scope: !4562)
!4568 = !DILocation(line: 1444, column: 14, scope: !790)
!4569 = !DILocation(line: 1444, column: 12, scope: !790)
!4570 = !DILocation(line: 1445, column: 9, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !790, file: !394, line: 1445, column: 9)
!4572 = !DILocation(line: 1445, column: 16, scope: !4571)
!4573 = !DILocation(line: 1445, column: 9, scope: !790)
!4574 = !DILocation(line: 1446, column: 9, scope: !4571)
!4575 = !DILocation(line: 1452, column: 5, scope: !790)
!4576 = !DILocation(line: 1453, column: 42, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !790, file: !394, line: 1452, column: 8)
!4578 = !DILocation(line: 1453, column: 48, scope: !4577)
!4579 = !DILocation(line: 1453, column: 53, scope: !4577)
!4580 = !DILocation(line: 1453, column: 73, scope: !4577)
!4581 = !DILocation(line: 1453, column: 15, scope: !4577)
!4582 = !DILocation(line: 1453, column: 13, scope: !4577)
!4583 = !DILocation(line: 1454, column: 5, scope: !4577)
!4584 = !DILocation(line: 1454, column: 14, scope: !4585)
!4585 = !DILexicalBlockFile(scope: !790, file: !394, discriminator: 1)
!4586 = !DILocation(line: 1454, column: 18, scope: !790)
!4587 = !DILocation(line: 1454, column: 32, scope: !790)
!4588 = !DILocation(line: 1454, column: 35, scope: !4589)
!4589 = !DILexicalBlockFile(scope: !790, file: !394, discriminator: 2)
!4590 = !DILocation(line: 1454, column: 5, scope: !4591)
!4591 = !DILexicalBlockFile(scope: !4577, file: !394, discriminator: 3)
!4592 = !DILocation(line: 1455, column: 5, scope: !790)
!4593 = !DILocation(line: 1455, column: 10, scope: !4594)
!4594 = !DILexicalBlockFile(scope: !800, file: !394, discriminator: 1)
!4595 = !DILocation(line: 1455, column: 20, scope: !800)
!4596 = !DILocation(line: 1455, column: 50, scope: !800)
!4597 = !DILocation(line: 1455, column: 67, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !800, file: !394, line: 1455, column: 64)
!4599 = !DILocation(line: 1455, column: 84, scope: !4598)
!4600 = !DILocation(line: 1455, column: 64, scope: !4598)
!4601 = !DILocation(line: 1455, column: 94, scope: !4598)
!4602 = !DILocation(line: 1455, column: 64, scope: !800)
!4603 = !DILocation(line: 1455, column: 64, scope: !4604)
!4604 = !DILexicalBlockFile(scope: !800, file: !394, discriminator: 2)
!4605 = !DILocation(line: 1455, column: 125, scope: !4606)
!4606 = !DILexicalBlockFile(scope: !4598, file: !394, discriminator: 3)
!4607 = !DILocation(line: 1455, column: 143, scope: !4598)
!4608 = !DILocation(line: 1455, column: 153, scope: !4598)
!4609 = !DILocation(line: 1455, column: 178, scope: !4598)
!4610 = !DILocation(line: 1455, column: 109, scope: !4598)
!4611 = !DILocation(line: 1455, column: 197, scope: !4612)
!4612 = !DILexicalBlockFile(scope: !790, file: !394, discriminator: 4)
!4613 = !DILocation(line: 1455, column: 197, scope: !800)
!4614 = !DILocation(line: 1455, column: 197, scope: !4615)
!4615 = !DILexicalBlockFile(scope: !800, file: !394, discriminator: 5)
!4616 = !DILocation(line: 1456, column: 9, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !790, file: !394, line: 1456, column: 9)
!4618 = !DILocation(line: 1456, column: 13, scope: !4617)
!4619 = !DILocation(line: 1456, column: 9, scope: !790)
!4620 = !DILocation(line: 1457, column: 9, scope: !4617)
!4621 = !DILocation(line: 1458, column: 9, scope: !804)
!4622 = !DILocation(line: 1458, column: 13, scope: !804)
!4623 = !DILocation(line: 1458, column: 9, scope: !790)
!4624 = !DILocation(line: 1460, column: 9, scope: !803)
!4625 = !DILocation(line: 1460, column: 14, scope: !4626)
!4626 = !DILexicalBlockFile(scope: !802, file: !394, discriminator: 1)
!4627 = !DILocation(line: 1460, column: 24, scope: !802)
!4628 = !DILocation(line: 1460, column: 54, scope: !802)
!4629 = !DILocation(line: 1460, column: 68, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !802, file: !394, line: 1460, column: 65)
!4631 = !DILocation(line: 1460, column: 85, scope: !4630)
!4632 = !DILocation(line: 1460, column: 65, scope: !4630)
!4633 = !DILocation(line: 1460, column: 95, scope: !4630)
!4634 = !DILocation(line: 1460, column: 65, scope: !802)
!4635 = !DILocation(line: 1460, column: 65, scope: !4636)
!4636 = !DILexicalBlockFile(scope: !802, file: !394, discriminator: 2)
!4637 = !DILocation(line: 1460, column: 126, scope: !4638)
!4638 = !DILexicalBlockFile(scope: !4630, file: !394, discriminator: 3)
!4639 = !DILocation(line: 1460, column: 144, scope: !4630)
!4640 = !DILocation(line: 1460, column: 154, scope: !4630)
!4641 = !DILocation(line: 1460, column: 179, scope: !4630)
!4642 = !DILocation(line: 1460, column: 110, scope: !4630)
!4643 = !DILocation(line: 1460, column: 198, scope: !4644)
!4644 = !DILexicalBlockFile(scope: !803, file: !394, discriminator: 4)
!4645 = !DILocation(line: 1460, column: 198, scope: !802)
!4646 = !DILocation(line: 1460, column: 198, scope: !4647)
!4647 = !DILexicalBlockFile(scope: !802, file: !394, discriminator: 5)
!4648 = !DILocation(line: 1461, column: 9, scope: !803)
!4649 = !DILocation(line: 1463, column: 28, scope: !790)
!4650 = !DILocation(line: 1463, column: 33, scope: !790)
!4651 = !DILocation(line: 1463, column: 9, scope: !790)
!4652 = !DILocation(line: 1463, column: 7, scope: !790)
!4653 = !DILocation(line: 1464, column: 5, scope: !790)
!4654 = !DILocation(line: 1464, column: 10, scope: !4655)
!4655 = !DILexicalBlockFile(scope: !806, file: !394, discriminator: 1)
!4656 = !DILocation(line: 1464, column: 20, scope: !806)
!4657 = !DILocation(line: 1464, column: 50, scope: !806)
!4658 = !DILocation(line: 1464, column: 64, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !806, file: !394, line: 1464, column: 61)
!4660 = !DILocation(line: 1464, column: 81, scope: !4659)
!4661 = !DILocation(line: 1464, column: 61, scope: !4659)
!4662 = !DILocation(line: 1464, column: 91, scope: !4659)
!4663 = !DILocation(line: 1464, column: 61, scope: !806)
!4664 = !DILocation(line: 1464, column: 61, scope: !4665)
!4665 = !DILexicalBlockFile(scope: !806, file: !394, discriminator: 2)
!4666 = !DILocation(line: 1464, column: 122, scope: !4667)
!4667 = !DILexicalBlockFile(scope: !4659, file: !394, discriminator: 3)
!4668 = !DILocation(line: 1464, column: 140, scope: !4659)
!4669 = !DILocation(line: 1464, column: 150, scope: !4659)
!4670 = !DILocation(line: 1464, column: 175, scope: !4659)
!4671 = !DILocation(line: 1464, column: 106, scope: !4659)
!4672 = !DILocation(line: 1464, column: 194, scope: !4612)
!4673 = !DILocation(line: 1464, column: 194, scope: !806)
!4674 = !DILocation(line: 1464, column: 194, scope: !4675)
!4675 = !DILexicalBlockFile(scope: !806, file: !394, discriminator: 5)
!4676 = !DILocation(line: 1465, column: 9, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !790, file: !394, line: 1465, column: 9)
!4678 = !DILocation(line: 1465, column: 11, scope: !4677)
!4679 = !DILocation(line: 1465, column: 15, scope: !4677)
!4680 = !DILocation(line: 1465, column: 18, scope: !4681)
!4681 = !DILexicalBlockFile(scope: !4677, file: !394, discriminator: 1)
!4682 = !DILocation(line: 1465, column: 22, scope: !4677)
!4683 = !DILocation(line: 1465, column: 20, scope: !4677)
!4684 = !DILocation(line: 1465, column: 9, scope: !790)
!4685 = !DILocation(line: 1466, column: 22, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4677, file: !394, line: 1465, column: 27)
!4687 = !DILocation(line: 1468, column: 62, scope: !4686)
!4688 = !DILocation(line: 1468, column: 65, scope: !4686)
!4689 = !DILocation(line: 1466, column: 9, scope: !4686)
!4690 = !DILocation(line: 1469, column: 9, scope: !4686)
!4691 = !DILocation(line: 1471, column: 9, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !790, file: !394, line: 1471, column: 9)
!4693 = !DILocation(line: 1471, column: 11, scope: !4692)
!4694 = !DILocation(line: 1471, column: 15, scope: !4692)
!4695 = !DILocation(line: 1471, column: 18, scope: !4696)
!4696 = !DILexicalBlockFile(scope: !4692, file: !394, discriminator: 1)
!4697 = !DILocation(line: 1471, column: 24, scope: !4692)
!4698 = !DILocation(line: 1471, column: 32, scope: !4692)
!4699 = !DILocation(line: 1471, column: 9, scope: !790)
!4700 = !DILocation(line: 1472, column: 26, scope: !4692)
!4701 = !DILocation(line: 1472, column: 9, scope: !4692)
!4702 = !DILocation(line: 1472, column: 15, scope: !4692)
!4703 = !DILocation(line: 1472, column: 23, scope: !4692)
!4704 = !DILocation(line: 1473, column: 12, scope: !790)
!4705 = !DILocation(line: 1473, column: 5, scope: !790)
!4706 = !DILocation(line: 1474, column: 1, scope: !790)
!4707 = !DILocation(line: 569, column: 27, scope: !807)
!4708 = !DILocation(line: 569, column: 43, scope: !807)
!4709 = !DILocation(line: 571, column: 5, scope: !807)
!4710 = !DILocation(line: 571, column: 15, scope: !807)
!4711 = !DILocation(line: 571, column: 21, scope: !807)
!4712 = !DILocation(line: 572, column: 9, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !807, file: !394, line: 572, column: 9)
!4714 = !DILocation(line: 572, column: 15, scope: !4713)
!4715 = !DILocation(line: 572, column: 18, scope: !4713)
!4716 = !DILocation(line: 572, column: 9, scope: !807)
!4717 = !DILocation(line: 572, column: 30, scope: !4718)
!4718 = !DILexicalBlockFile(scope: !4719, file: !394, discriminator: 1)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !394, line: 572, column: 30)
!4720 = distinct !DILexicalBlock(scope: !4713, file: !394, line: 572, column: 24)
!4721 = !DILocation(line: 572, column: 36, scope: !4719)
!4722 = !DILocation(line: 572, column: 30, scope: !4719)
!4723 = !DILocation(line: 572, column: 30, scope: !4720)
!4724 = !DILocation(line: 572, column: 64, scope: !4725)
!4725 = !DILexicalBlockFile(scope: !4726, file: !394, discriminator: 2)
!4726 = distinct !DILexicalBlock(scope: !4719, file: !394, line: 572, column: 46)
!4727 = !DILocation(line: 572, column: 48, scope: !4726)
!4728 = !DILocation(line: 572, column: 115, scope: !4726)
!4729 = !DILocation(line: 572, column: 140, scope: !4730)
!4730 = !DILexicalBlockFile(scope: !4731, file: !394, discriminator: 3)
!4731 = distinct !DILexicalBlock(scope: !4719, file: !394, line: 572, column: 122)
!4732 = !DILocation(line: 572, column: 124, scope: !4731)
!4733 = !DILocation(line: 572, column: 202, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !4720, file: !394, discriminator: 4)
!4735 = !DILocation(line: 572, column: 202, scope: !4720)
!4736 = !DILocation(line: 573, column: 50, scope: !807)
!4737 = !DILocation(line: 573, column: 38, scope: !807)
!4738 = !DILocation(line: 573, column: 56, scope: !807)
!4739 = !DILocation(line: 573, column: 11, scope: !807)
!4740 = !DILocation(line: 573, column: 9, scope: !807)
!4741 = !DILocation(line: 574, column: 9, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !807, file: !394, line: 574, column: 9)
!4743 = !DILocation(line: 574, column: 13, scope: !4742)
!4744 = !DILocation(line: 574, column: 9, scope: !807)
!4745 = !DILocation(line: 575, column: 9, scope: !4742)
!4746 = !DILocation(line: 576, column: 5, scope: !807)
!4747 = !DILocation(line: 576, column: 10, scope: !4748)
!4748 = !DILexicalBlockFile(scope: !816, file: !394, discriminator: 1)
!4749 = !DILocation(line: 576, column: 20, scope: !816)
!4750 = !DILocation(line: 576, column: 50, scope: !816)
!4751 = !DILocation(line: 576, column: 64, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !816, file: !394, line: 576, column: 61)
!4753 = !DILocation(line: 576, column: 81, scope: !4752)
!4754 = !DILocation(line: 576, column: 61, scope: !4752)
!4755 = !DILocation(line: 576, column: 91, scope: !4752)
!4756 = !DILocation(line: 576, column: 61, scope: !816)
!4757 = !DILocation(line: 576, column: 61, scope: !4758)
!4758 = !DILexicalBlockFile(scope: !816, file: !394, discriminator: 2)
!4759 = !DILocation(line: 576, column: 122, scope: !4760)
!4760 = !DILexicalBlockFile(scope: !4752, file: !394, discriminator: 3)
!4761 = !DILocation(line: 576, column: 140, scope: !4752)
!4762 = !DILocation(line: 576, column: 150, scope: !4752)
!4763 = !DILocation(line: 576, column: 175, scope: !4752)
!4764 = !DILocation(line: 576, column: 106, scope: !4752)
!4765 = !DILocation(line: 576, column: 194, scope: !4766)
!4766 = !DILexicalBlockFile(scope: !807, file: !394, discriminator: 4)
!4767 = !DILocation(line: 576, column: 194, scope: !816)
!4768 = !DILocation(line: 576, column: 194, scope: !4769)
!4769 = !DILexicalBlockFile(scope: !816, file: !394, discriminator: 5)
!4770 = !DILocation(line: 577, column: 11, scope: !807)
!4771 = !DILocation(line: 577, column: 17, scope: !807)
!4772 = !DILocation(line: 577, column: 9, scope: !807)
!4773 = !DILocation(line: 578, column: 5, scope: !807)
!4774 = !DILocation(line: 578, column: 11, scope: !807)
!4775 = !DILocation(line: 578, column: 15, scope: !807)
!4776 = !DILocation(line: 579, column: 5, scope: !807)
!4777 = !DILocation(line: 579, column: 11, scope: !807)
!4778 = !DILocation(line: 579, column: 20, scope: !807)
!4779 = !DILocation(line: 580, column: 5, scope: !807)
!4780 = !DILocation(line: 580, column: 11, scope: !807)
!4781 = !DILocation(line: 580, column: 14, scope: !807)
!4782 = !DILocation(line: 581, column: 12, scope: !807)
!4783 = !DILocation(line: 581, column: 5, scope: !807)
!4784 = !DILocation(line: 582, column: 1, scope: !807)
!4785 = !DILocation(line: 475, column: 33, scope: !817)
!4786 = !DILocation(line: 475, column: 49, scope: !817)
!4787 = !DILocation(line: 477, column: 9, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !817, file: !394, line: 477, column: 9)
!4789 = !DILocation(line: 477, column: 15, scope: !4788)
!4790 = !DILocation(line: 477, column: 18, scope: !4788)
!4791 = !DILocation(line: 477, column: 9, scope: !817)
!4792 = !DILocation(line: 477, column: 30, scope: !4793)
!4793 = !DILexicalBlockFile(scope: !4794, file: !394, discriminator: 1)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !394, line: 477, column: 30)
!4795 = distinct !DILexicalBlock(scope: !4788, file: !394, line: 477, column: 24)
!4796 = !DILocation(line: 477, column: 36, scope: !4794)
!4797 = !DILocation(line: 477, column: 30, scope: !4794)
!4798 = !DILocation(line: 477, column: 30, scope: !4795)
!4799 = !DILocation(line: 477, column: 64, scope: !4800)
!4800 = !DILexicalBlockFile(scope: !4801, file: !394, discriminator: 2)
!4801 = distinct !DILexicalBlock(scope: !4794, file: !394, line: 477, column: 46)
!4802 = !DILocation(line: 477, column: 48, scope: !4801)
!4803 = !DILocation(line: 477, column: 115, scope: !4801)
!4804 = !DILocation(line: 477, column: 140, scope: !4805)
!4805 = !DILexicalBlockFile(scope: !4806, file: !394, discriminator: 3)
!4806 = distinct !DILexicalBlock(scope: !4794, file: !394, line: 477, column: 122)
!4807 = !DILocation(line: 477, column: 124, scope: !4806)
!4808 = !DILocation(line: 477, column: 202, scope: !4809)
!4809 = !DILexicalBlockFile(scope: !4795, file: !394, discriminator: 4)
!4810 = !DILocation(line: 478, column: 39, scope: !817)
!4811 = !DILocation(line: 478, column: 45, scope: !817)
!4812 = !DILocation(line: 478, column: 50, scope: !817)
!4813 = !DILocation(line: 478, column: 12, scope: !817)
!4814 = !DILocation(line: 478, column: 5, scope: !817)
!4815 = !DILocation(line: 479, column: 1, scope: !817)
!4816 = !DILocation(line: 503, column: 26, scope: !821)
!4817 = !DILocation(line: 503, column: 42, scope: !821)
!4818 = !DILocation(line: 505, column: 5, scope: !821)
!4819 = !DILocation(line: 505, column: 15, scope: !821)
!4820 = !DILocation(line: 505, column: 34, scope: !821)
!4821 = !DILocation(line: 505, column: 53, scope: !821)
!4822 = !DILocation(line: 505, column: 59, scope: !821)
!4823 = !DILocation(line: 506, column: 5, scope: !821)
!4824 = !DILocation(line: 506, column: 9, scope: !821)
!4825 = !DILocation(line: 508, column: 9, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !821, file: !394, line: 508, column: 9)
!4827 = !DILocation(line: 508, column: 15, scope: !4826)
!4828 = !DILocation(line: 508, column: 18, scope: !4826)
!4829 = !DILocation(line: 508, column: 9, scope: !821)
!4830 = !DILocation(line: 508, column: 30, scope: !4831)
!4831 = !DILexicalBlockFile(scope: !4832, file: !394, discriminator: 1)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !394, line: 508, column: 30)
!4833 = distinct !DILexicalBlock(scope: !4826, file: !394, line: 508, column: 24)
!4834 = !DILocation(line: 508, column: 36, scope: !4832)
!4835 = !DILocation(line: 508, column: 30, scope: !4832)
!4836 = !DILocation(line: 508, column: 30, scope: !4833)
!4837 = !DILocation(line: 508, column: 64, scope: !4838)
!4838 = !DILexicalBlockFile(scope: !4839, file: !394, discriminator: 2)
!4839 = distinct !DILexicalBlock(scope: !4832, file: !394, line: 508, column: 46)
!4840 = !DILocation(line: 508, column: 48, scope: !4839)
!4841 = !DILocation(line: 508, column: 115, scope: !4839)
!4842 = !DILocation(line: 508, column: 140, scope: !4843)
!4843 = !DILexicalBlockFile(scope: !4844, file: !394, discriminator: 3)
!4844 = distinct !DILexicalBlock(scope: !4832, file: !394, line: 508, column: 122)
!4845 = !DILocation(line: 508, column: 124, scope: !4844)
!4846 = !DILocation(line: 508, column: 202, scope: !4847)
!4847 = !DILexicalBlockFile(scope: !4833, file: !394, discriminator: 4)
!4848 = !DILocation(line: 508, column: 202, scope: !4833)
!4849 = !DILocation(line: 509, column: 35, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !821, file: !394, line: 509, column: 9)
!4851 = !DILocation(line: 509, column: 41, scope: !4850)
!4852 = !DILocation(line: 509, column: 13, scope: !4850)
!4853 = !DILocation(line: 509, column: 84, scope: !4850)
!4854 = !DILocation(line: 509, column: 13, scope: !4855)
!4855 = !DILexicalBlockFile(scope: !4850, file: !394, discriminator: 1)
!4856 = !DILocation(line: 509, column: 77, scope: !4857)
!4857 = !DILexicalBlockFile(scope: !4850, file: !394, discriminator: 2)
!4858 = !DILocation(line: 509, column: 56, scope: !4850)
!4859 = !DILocation(line: 509, column: 102, scope: !4860)
!4860 = !DILexicalBlockFile(scope: !4861, file: !394, discriminator: 4)
!4861 = !DILexicalBlockFile(scope: !4850, file: !394, discriminator: 3)
!4862 = !DILocation(line: 509, column: 88, scope: !4850)
!4863 = !DILocation(line: 509, column: 94, scope: !4850)
!4864 = !DILocation(line: 509, column: 100, scope: !4850)
!4865 = !DILocation(line: 509, column: 9, scope: !821)
!4866 = !DILocation(line: 510, column: 9, scope: !4850)
!4867 = !DILocation(line: 512, column: 25, scope: !821)
!4868 = !DILocation(line: 512, column: 9, scope: !821)
!4869 = !DILocation(line: 512, column: 7, scope: !821)
!4870 = !DILocation(line: 513, column: 9, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !821, file: !394, line: 513, column: 9)
!4872 = !DILocation(line: 513, column: 11, scope: !4871)
!4873 = !DILocation(line: 513, column: 9, scope: !821)
!4874 = !DILocation(line: 514, column: 9, scope: !4871)
!4875 = !DILocation(line: 515, column: 9, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !821, file: !394, line: 515, column: 9)
!4877 = !DILocation(line: 515, column: 11, scope: !4876)
!4878 = !DILocation(line: 515, column: 9, scope: !821)
!4879 = !DILocation(line: 516, column: 13, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4876, file: !394, line: 515, column: 16)
!4881 = !DILocation(line: 517, column: 25, scope: !4880)
!4882 = !DILocation(line: 517, column: 32, scope: !4880)
!4883 = !DILocation(line: 517, column: 41, scope: !4880)
!4884 = !DILocation(line: 518, column: 9, scope: !4880)
!4885 = !DILocation(line: 521, column: 9, scope: !832)
!4886 = !DILocation(line: 521, column: 15, scope: !832)
!4887 = !DILocation(line: 521, column: 9, scope: !821)
!4888 = !DILocation(line: 522, column: 9, scope: !831)
!4889 = !DILocation(line: 522, column: 19, scope: !831)
!4890 = !DILocation(line: 522, column: 45, scope: !831)
!4891 = !DILocation(line: 522, column: 64, scope: !831)
!4892 = !DILocation(line: 522, column: 51, scope: !831)
!4893 = !DILocation(line: 522, column: 23, scope: !831)
!4894 = !DILocation(line: 523, column: 13, scope: !835)
!4895 = !DILocation(line: 523, column: 13, scope: !831)
!4896 = !DILocation(line: 524, column: 13, scope: !835)
!4897 = !DILocation(line: 524, column: 18, scope: !4898)
!4898 = !DILexicalBlockFile(scope: !834, file: !394, discriminator: 1)
!4899 = !DILocation(line: 524, column: 28, scope: !834)
!4900 = !DILocation(line: 524, column: 58, scope: !834)
!4901 = !DILocation(line: 524, column: 70, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !834, file: !394, line: 524, column: 67)
!4903 = !DILocation(line: 524, column: 87, scope: !4902)
!4904 = !DILocation(line: 524, column: 67, scope: !4902)
!4905 = !DILocation(line: 524, column: 97, scope: !4902)
!4906 = !DILocation(line: 524, column: 67, scope: !834)
!4907 = !DILocation(line: 524, column: 67, scope: !4908)
!4908 = !DILexicalBlockFile(scope: !834, file: !394, discriminator: 2)
!4909 = !DILocation(line: 524, column: 128, scope: !4910)
!4910 = !DILexicalBlockFile(scope: !4902, file: !394, discriminator: 3)
!4911 = !DILocation(line: 524, column: 146, scope: !4902)
!4912 = !DILocation(line: 524, column: 156, scope: !4902)
!4913 = !DILocation(line: 524, column: 181, scope: !4902)
!4914 = !DILocation(line: 524, column: 112, scope: !4902)
!4915 = !DILocation(line: 524, column: 200, scope: !4916)
!4916 = !DILexicalBlockFile(scope: !835, file: !394, discriminator: 4)
!4917 = !DILocation(line: 524, column: 200, scope: !834)
!4918 = !DILocation(line: 524, column: 200, scope: !4919)
!4919 = !DILexicalBlockFile(scope: !834, file: !394, discriminator: 5)
!4920 = !DILocation(line: 524, column: 200, scope: !4921)
!4921 = !DILexicalBlockFile(scope: !834, file: !394, discriminator: 6)
!4922 = !DILocation(line: 526, column: 13, scope: !835)
!4923 = !DILocation(line: 527, column: 5, scope: !832)
!4924 = !DILocation(line: 527, column: 5, scope: !831)
!4925 = !DILocation(line: 529, column: 5, scope: !821)
!4926 = !DILocation(line: 529, column: 10, scope: !4927)
!4927 = !DILexicalBlockFile(scope: !4928, file: !394, discriminator: 1)
!4928 = distinct !DILexicalBlock(scope: !821, file: !394, line: 529, column: 8)
!4929 = !DILocation(line: 529, column: 16, scope: !4928)
!4930 = !DILocation(line: 529, column: 22, scope: !4928)
!4931 = !DILocation(line: 529, column: 49, scope: !4928)
!4932 = !DILocation(line: 529, column: 55, scope: !4928)
!4933 = !DILocation(line: 529, column: 27, scope: !4928)
!4934 = !DILocation(line: 529, column: 62, scope: !4928)
!4935 = !DILocation(line: 529, column: 62, scope: !4936)
!4936 = !DILexicalBlockFile(scope: !4928, file: !394, discriminator: 2)
!4937 = !DILocation(line: 530, column: 50, scope: !821)
!4938 = !DILocation(line: 530, column: 38, scope: !821)
!4939 = !DILocation(line: 530, column: 56, scope: !821)
!4940 = !DILocation(line: 530, column: 11, scope: !821)
!4941 = !DILocation(line: 530, column: 9, scope: !821)
!4942 = !DILocation(line: 531, column: 35, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !821, file: !394, line: 531, column: 9)
!4944 = !DILocation(line: 531, column: 41, scope: !4943)
!4945 = !DILocation(line: 531, column: 13, scope: !4943)
!4946 = !DILocation(line: 531, column: 84, scope: !4943)
!4947 = !DILocation(line: 531, column: 13, scope: !4948)
!4948 = !DILexicalBlockFile(scope: !4943, file: !394, discriminator: 1)
!4949 = !DILocation(line: 531, column: 77, scope: !4950)
!4950 = !DILexicalBlockFile(scope: !4943, file: !394, discriminator: 2)
!4951 = !DILocation(line: 531, column: 56, scope: !4943)
!4952 = !DILocation(line: 531, column: 102, scope: !4953)
!4953 = !DILexicalBlockFile(scope: !4954, file: !394, discriminator: 4)
!4954 = !DILexicalBlockFile(scope: !4943, file: !394, discriminator: 3)
!4955 = !DILocation(line: 531, column: 88, scope: !4943)
!4956 = !DILocation(line: 531, column: 94, scope: !4943)
!4957 = !DILocation(line: 531, column: 100, scope: !4943)
!4958 = !DILocation(line: 531, column: 9, scope: !821)
!4959 = !DILocation(line: 532, column: 9, scope: !4943)
!4960 = !DILocation(line: 533, column: 9, scope: !838)
!4961 = !DILocation(line: 533, column: 13, scope: !838)
!4962 = !DILocation(line: 533, column: 9, scope: !821)
!4963 = !DILocation(line: 534, column: 9, scope: !838)
!4964 = !DILocation(line: 536, column: 9, scope: !838)
!4965 = !DILocation(line: 536, column: 14, scope: !4966)
!4966 = !DILexicalBlockFile(scope: !837, file: !394, discriminator: 1)
!4967 = !DILocation(line: 536, column: 24, scope: !837)
!4968 = !DILocation(line: 536, column: 54, scope: !837)
!4969 = !DILocation(line: 536, column: 68, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !837, file: !394, line: 536, column: 65)
!4971 = !DILocation(line: 536, column: 85, scope: !4970)
!4972 = !DILocation(line: 536, column: 65, scope: !4970)
!4973 = !DILocation(line: 536, column: 95, scope: !4970)
!4974 = !DILocation(line: 536, column: 65, scope: !837)
!4975 = !DILocation(line: 536, column: 65, scope: !4976)
!4976 = !DILexicalBlockFile(scope: !837, file: !394, discriminator: 2)
!4977 = !DILocation(line: 536, column: 126, scope: !4978)
!4978 = !DILexicalBlockFile(scope: !4970, file: !394, discriminator: 3)
!4979 = !DILocation(line: 536, column: 144, scope: !4970)
!4980 = !DILocation(line: 536, column: 154, scope: !4970)
!4981 = !DILocation(line: 536, column: 179, scope: !4970)
!4982 = !DILocation(line: 536, column: 110, scope: !4970)
!4983 = !DILocation(line: 536, column: 198, scope: !4984)
!4984 = !DILexicalBlockFile(scope: !838, file: !394, discriminator: 4)
!4985 = !DILocation(line: 536, column: 198, scope: !837)
!4986 = !DILocation(line: 536, column: 198, scope: !4987)
!4987 = !DILexicalBlockFile(scope: !837, file: !394, discriminator: 5)
!4988 = !DILocation(line: 538, column: 38, scope: !821)
!4989 = !DILocation(line: 538, column: 44, scope: !821)
!4990 = !DILocation(line: 538, column: 49, scope: !821)
!4991 = !DILocation(line: 538, column: 11, scope: !821)
!4992 = !DILocation(line: 538, column: 9, scope: !821)
!4993 = !DILocation(line: 540, column: 9, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !821, file: !394, line: 540, column: 9)
!4995 = !DILocation(line: 540, column: 15, scope: !4994)
!4996 = !DILocation(line: 540, column: 9, scope: !821)
!4997 = !DILocation(line: 541, column: 20, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4994, file: !394, line: 540, column: 23)
!4999 = !DILocation(line: 541, column: 26, scope: !4998)
!5000 = !DILocation(line: 541, column: 9, scope: !4998)
!5001 = !DILocation(line: 542, column: 9, scope: !4998)
!5002 = !DILocation(line: 542, column: 15, scope: !4998)
!5003 = !DILocation(line: 542, column: 22, scope: !4998)
!5004 = !DILocation(line: 543, column: 5, scope: !4998)
!5005 = !DILocation(line: 545, column: 9, scope: !844)
!5006 = !DILocation(line: 545, column: 13, scope: !844)
!5007 = !DILocation(line: 545, column: 9, scope: !821)
!5008 = !DILocation(line: 546, column: 13, scope: !842)
!5009 = !DILocation(line: 546, column: 17, scope: !842)
!5010 = !DILocation(line: 546, column: 13, scope: !843)
!5011 = !DILocation(line: 547, column: 13, scope: !841)
!5012 = !DILocation(line: 547, column: 18, scope: !5013)
!5013 = !DILexicalBlockFile(scope: !840, file: !394, discriminator: 1)
!5014 = !DILocation(line: 547, column: 28, scope: !840)
!5015 = !DILocation(line: 547, column: 51, scope: !840)
!5016 = !DILocation(line: 547, column: 61, scope: !848)
!5017 = !DILocation(line: 547, column: 69, scope: !848)
!5018 = !DILocation(line: 547, column: 61, scope: !840)
!5019 = !DILocation(line: 547, column: 92, scope: !5020)
!5020 = !DILexicalBlockFile(scope: !847, file: !394, discriminator: 2)
!5021 = !DILocation(line: 547, column: 106, scope: !847)
!5022 = !DILocation(line: 547, column: 111, scope: !5023)
!5023 = !DILexicalBlockFile(scope: !846, file: !394, discriminator: 4)
!5024 = !DILocation(line: 547, column: 121, scope: !846)
!5025 = !DILocation(line: 547, column: 151, scope: !846)
!5026 = !DILocation(line: 547, column: 169, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !846, file: !394, line: 547, column: 166)
!5028 = !DILocation(line: 547, column: 186, scope: !5027)
!5029 = !DILocation(line: 547, column: 166, scope: !5027)
!5030 = !DILocation(line: 547, column: 196, scope: !5027)
!5031 = !DILocation(line: 547, column: 166, scope: !846)
!5032 = !DILocation(line: 547, column: 166, scope: !5033)
!5033 = !DILexicalBlockFile(scope: !846, file: !394, discriminator: 5)
!5034 = !DILocation(line: 547, column: 227, scope: !5035)
!5035 = !DILexicalBlockFile(scope: !5027, file: !394, discriminator: 6)
!5036 = !DILocation(line: 547, column: 245, scope: !5027)
!5037 = !DILocation(line: 547, column: 255, scope: !5027)
!5038 = !DILocation(line: 547, column: 280, scope: !5027)
!5039 = !DILocation(line: 547, column: 211, scope: !5027)
!5040 = !DILocation(line: 547, column: 299, scope: !5041)
!5041 = !DILexicalBlockFile(scope: !847, file: !394, discriminator: 7)
!5042 = !DILocation(line: 547, column: 299, scope: !846)
!5043 = !DILocation(line: 547, column: 299, scope: !5044)
!5044 = !DILexicalBlockFile(scope: !846, file: !394, discriminator: 8)
!5045 = !DILocation(line: 547, column: 312, scope: !5046)
!5046 = !DILexicalBlockFile(scope: !847, file: !394, discriminator: 9)
!5047 = !DILocation(line: 547, column: 314, scope: !5048)
!5048 = !DILexicalBlockFile(scope: !5049, file: !394, discriminator: 10)
!5049 = !DILexicalBlockFile(scope: !841, file: !394, discriminator: 3)
!5050 = !DILocation(line: 547, column: 314, scope: !840)
!5051 = !DILocation(line: 547, column: 314, scope: !5052)
!5052 = !DILexicalBlockFile(scope: !840, file: !394, discriminator: 11)
!5053 = !DILocation(line: 548, column: 27, scope: !841)
!5054 = !DILocation(line: 548, column: 32, scope: !841)
!5055 = !DILocation(line: 548, column: 37, scope: !841)
!5056 = !DILocation(line: 548, column: 13, scope: !841)
!5057 = !DILocation(line: 549, column: 9, scope: !841)
!5058 = !DILocation(line: 551, column: 13, scope: !850)
!5059 = !DILocation(line: 551, column: 23, scope: !850)
!5060 = !DILocation(line: 552, column: 13, scope: !850)
!5061 = !DILocation(line: 552, column: 18, scope: !5062)
!5062 = !DILexicalBlockFile(scope: !852, file: !394, discriminator: 1)
!5063 = !DILocation(line: 552, column: 28, scope: !852)
!5064 = !DILocation(line: 552, column: 58, scope: !852)
!5065 = !DILocation(line: 552, column: 72, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !852, file: !394, line: 552, column: 69)
!5067 = !DILocation(line: 552, column: 89, scope: !5066)
!5068 = !DILocation(line: 552, column: 69, scope: !5066)
!5069 = !DILocation(line: 552, column: 99, scope: !5066)
!5070 = !DILocation(line: 552, column: 69, scope: !852)
!5071 = !DILocation(line: 552, column: 69, scope: !5072)
!5072 = !DILexicalBlockFile(scope: !852, file: !394, discriminator: 2)
!5073 = !DILocation(line: 552, column: 130, scope: !5074)
!5074 = !DILexicalBlockFile(scope: !5066, file: !394, discriminator: 3)
!5075 = !DILocation(line: 552, column: 148, scope: !5066)
!5076 = !DILocation(line: 552, column: 158, scope: !5066)
!5077 = !DILocation(line: 552, column: 183, scope: !5066)
!5078 = !DILocation(line: 552, column: 114, scope: !5066)
!5079 = !DILocation(line: 552, column: 202, scope: !5080)
!5080 = !DILexicalBlockFile(scope: !850, file: !394, discriminator: 4)
!5081 = !DILocation(line: 552, column: 202, scope: !852)
!5082 = !DILocation(line: 552, column: 202, scope: !5083)
!5083 = !DILexicalBlockFile(scope: !852, file: !394, discriminator: 5)
!5084 = !DILocation(line: 553, column: 13, scope: !850)
!5085 = !DILocation(line: 553, column: 18, scope: !5086)
!5086 = !DILexicalBlockFile(scope: !854, file: !394, discriminator: 1)
!5087 = !DILocation(line: 553, column: 28, scope: !854)
!5088 = !DILocation(line: 553, column: 59, scope: !854)
!5089 = !DILocation(line: 553, column: 68, scope: !857)
!5090 = !DILocation(line: 553, column: 84, scope: !857)
!5091 = !DILocation(line: 553, column: 68, scope: !854)
!5092 = !DILocation(line: 553, column: 99, scope: !5093)
!5093 = !DILexicalBlockFile(scope: !857, file: !394, discriminator: 2)
!5094 = !DILocation(line: 553, column: 104, scope: !5095)
!5095 = !DILexicalBlockFile(scope: !856, file: !394, discriminator: 4)
!5096 = !DILocation(line: 553, column: 114, scope: !856)
!5097 = !DILocation(line: 553, column: 144, scope: !856)
!5098 = !DILocation(line: 553, column: 170, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !856, file: !394, line: 553, column: 167)
!5100 = !DILocation(line: 553, column: 187, scope: !5099)
!5101 = !DILocation(line: 553, column: 167, scope: !5099)
!5102 = !DILocation(line: 553, column: 197, scope: !5099)
!5103 = !DILocation(line: 553, column: 167, scope: !856)
!5104 = !DILocation(line: 553, column: 167, scope: !5105)
!5105 = !DILexicalBlockFile(scope: !856, file: !394, discriminator: 5)
!5106 = !DILocation(line: 553, column: 228, scope: !5107)
!5107 = !DILexicalBlockFile(scope: !5099, file: !394, discriminator: 6)
!5108 = !DILocation(line: 553, column: 246, scope: !5099)
!5109 = !DILocation(line: 553, column: 256, scope: !5099)
!5110 = !DILocation(line: 553, column: 281, scope: !5099)
!5111 = !DILocation(line: 553, column: 212, scope: !5099)
!5112 = !DILocation(line: 553, column: 300, scope: !5113)
!5113 = !DILexicalBlockFile(scope: !857, file: !394, discriminator: 7)
!5114 = !DILocation(line: 553, column: 300, scope: !856)
!5115 = !DILocation(line: 553, column: 300, scope: !5116)
!5116 = !DILexicalBlockFile(scope: !856, file: !394, discriminator: 8)
!5117 = !DILocation(line: 553, column: 300, scope: !5118)
!5118 = !DILexicalBlockFile(scope: !856, file: !394, discriminator: 9)
!5119 = !DILocation(line: 553, column: 313, scope: !5120)
!5120 = !DILexicalBlockFile(scope: !5121, file: !394, discriminator: 10)
!5121 = !DILexicalBlockFile(scope: !850, file: !394, discriminator: 3)
!5122 = !DILocation(line: 553, column: 313, scope: !854)
!5123 = !DILocation(line: 553, column: 313, scope: !5124)
!5124 = !DILexicalBlockFile(scope: !854, file: !394, discriminator: 11)
!5125 = !DILocation(line: 554, column: 13, scope: !850)
!5126 = !DILocation(line: 555, column: 13, scope: !850)
!5127 = !DILocation(line: 556, column: 36, scope: !850)
!5128 = !DILocation(line: 556, column: 42, scope: !850)
!5129 = !DILocation(line: 556, column: 13, scope: !850)
!5130 = !DILocation(line: 557, column: 27, scope: !850)
!5131 = !DILocation(line: 557, column: 32, scope: !850)
!5132 = !DILocation(line: 557, column: 38, scope: !850)
!5133 = !DILocation(line: 557, column: 13, scope: !850)
!5134 = !DILocation(line: 558, column: 9, scope: !842)
!5135 = !DILocation(line: 559, column: 5, scope: !843)
!5136 = !DILocation(line: 545, column: 25, scope: !5137)
!5137 = !DILexicalBlockFile(scope: !844, file: !394, discriminator: 1)
!5138 = !DILocation(line: 562, column: 5, scope: !821)
!5139 = !DILocation(line: 562, column: 10, scope: !5140)
!5140 = !DILexicalBlockFile(scope: !5141, file: !394, discriminator: 1)
!5141 = distinct !DILexicalBlock(scope: !821, file: !394, line: 562, column: 8)
!5142 = !DILocation(line: 562, column: 16, scope: !5141)
!5143 = !DILocation(line: 562, column: 22, scope: !5141)
!5144 = !DILocation(line: 562, column: 49, scope: !5141)
!5145 = !DILocation(line: 562, column: 55, scope: !5141)
!5146 = !DILocation(line: 562, column: 27, scope: !5141)
!5147 = !DILocation(line: 562, column: 62, scope: !5141)
!5148 = !DILocation(line: 562, column: 62, scope: !5149)
!5149 = !DILexicalBlockFile(scope: !5141, file: !394, discriminator: 2)
!5150 = !DILocation(line: 563, column: 12, scope: !821)
!5151 = !DILocation(line: 563, column: 5, scope: !821)
!5152 = !DILocation(line: 564, column: 1, scope: !821)
!5153 = !DILocation(line: 587, column: 29, scope: !858)
!5154 = !DILocation(line: 587, column: 45, scope: !858)
!5155 = !DILocation(line: 589, column: 9, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !858, file: !394, line: 589, column: 9)
!5157 = !DILocation(line: 589, column: 15, scope: !5156)
!5158 = !DILocation(line: 589, column: 18, scope: !5156)
!5159 = !DILocation(line: 589, column: 9, scope: !858)
!5160 = !DILocation(line: 589, column: 30, scope: !5161)
!5161 = !DILexicalBlockFile(scope: !5162, file: !394, discriminator: 1)
!5162 = distinct !DILexicalBlock(scope: !5163, file: !394, line: 589, column: 30)
!5163 = distinct !DILexicalBlock(scope: !5156, file: !394, line: 589, column: 24)
!5164 = !DILocation(line: 589, column: 36, scope: !5162)
!5165 = !DILocation(line: 589, column: 30, scope: !5162)
!5166 = !DILocation(line: 589, column: 30, scope: !5163)
!5167 = !DILocation(line: 589, column: 64, scope: !5168)
!5168 = !DILexicalBlockFile(scope: !5169, file: !394, discriminator: 2)
!5169 = distinct !DILexicalBlock(scope: !5162, file: !394, line: 589, column: 46)
!5170 = !DILocation(line: 589, column: 48, scope: !5169)
!5171 = !DILocation(line: 589, column: 115, scope: !5169)
!5172 = !DILocation(line: 589, column: 140, scope: !5173)
!5173 = !DILexicalBlockFile(scope: !5174, file: !394, discriminator: 3)
!5174 = distinct !DILexicalBlock(scope: !5162, file: !394, line: 589, column: 122)
!5175 = !DILocation(line: 589, column: 124, scope: !5174)
!5176 = !DILocation(line: 589, column: 202, scope: !5177)
!5177 = !DILexicalBlockFile(scope: !5163, file: !394, discriminator: 4)
!5178 = !DILocation(line: 590, column: 39, scope: !858)
!5179 = !DILocation(line: 590, column: 45, scope: !858)
!5180 = !DILocation(line: 590, column: 50, scope: !858)
!5181 = !DILocation(line: 590, column: 12, scope: !858)
!5182 = !DILocation(line: 590, column: 5, scope: !858)
!5183 = !DILocation(line: 591, column: 1, scope: !858)
!5184 = !DILocation(line: 594, column: 29, scope: !862)
!5185 = !DILocation(line: 594, column: 45, scope: !862)
!5186 = !DILocation(line: 596, column: 9, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !862, file: !394, line: 596, column: 9)
!5188 = !DILocation(line: 596, column: 15, scope: !5187)
!5189 = !DILocation(line: 596, column: 18, scope: !5187)
!5190 = !DILocation(line: 596, column: 9, scope: !862)
!5191 = !DILocation(line: 596, column: 30, scope: !5192)
!5192 = !DILexicalBlockFile(scope: !5193, file: !394, discriminator: 1)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !394, line: 596, column: 30)
!5194 = distinct !DILexicalBlock(scope: !5187, file: !394, line: 596, column: 24)
!5195 = !DILocation(line: 596, column: 36, scope: !5193)
!5196 = !DILocation(line: 596, column: 30, scope: !5193)
!5197 = !DILocation(line: 596, column: 30, scope: !5194)
!5198 = !DILocation(line: 596, column: 64, scope: !5199)
!5199 = !DILexicalBlockFile(scope: !5200, file: !394, discriminator: 2)
!5200 = distinct !DILexicalBlock(scope: !5193, file: !394, line: 596, column: 46)
!5201 = !DILocation(line: 596, column: 48, scope: !5200)
!5202 = !DILocation(line: 596, column: 115, scope: !5200)
!5203 = !DILocation(line: 596, column: 140, scope: !5204)
!5204 = !DILexicalBlockFile(scope: !5205, file: !394, discriminator: 3)
!5205 = distinct !DILexicalBlock(scope: !5193, file: !394, line: 596, column: 122)
!5206 = !DILocation(line: 596, column: 124, scope: !5205)
!5207 = !DILocation(line: 596, column: 202, scope: !5208)
!5208 = !DILexicalBlockFile(scope: !5194, file: !394, discriminator: 4)
!5209 = !DILocation(line: 597, column: 39, scope: !862)
!5210 = !DILocation(line: 597, column: 45, scope: !862)
!5211 = !DILocation(line: 597, column: 50, scope: !862)
!5212 = !DILocation(line: 597, column: 12, scope: !862)
!5213 = !DILocation(line: 597, column: 5, scope: !862)
!5214 = !DILocation(line: 598, column: 1, scope: !862)
!5215 = !DILocation(line: 601, column: 29, scope: !866)
!5216 = !DILocation(line: 601, column: 45, scope: !866)
!5217 = !DILocation(line: 603, column: 9, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !866, file: !394, line: 603, column: 9)
!5219 = !DILocation(line: 603, column: 15, scope: !5218)
!5220 = !DILocation(line: 603, column: 18, scope: !5218)
!5221 = !DILocation(line: 603, column: 9, scope: !866)
!5222 = !DILocation(line: 603, column: 30, scope: !5223)
!5223 = !DILexicalBlockFile(scope: !5224, file: !394, discriminator: 1)
!5224 = distinct !DILexicalBlock(scope: !5225, file: !394, line: 603, column: 30)
!5225 = distinct !DILexicalBlock(scope: !5218, file: !394, line: 603, column: 24)
!5226 = !DILocation(line: 603, column: 36, scope: !5224)
!5227 = !DILocation(line: 603, column: 30, scope: !5224)
!5228 = !DILocation(line: 603, column: 30, scope: !5225)
!5229 = !DILocation(line: 603, column: 64, scope: !5230)
!5230 = !DILexicalBlockFile(scope: !5231, file: !394, discriminator: 2)
!5231 = distinct !DILexicalBlock(scope: !5224, file: !394, line: 603, column: 46)
!5232 = !DILocation(line: 603, column: 48, scope: !5231)
!5233 = !DILocation(line: 603, column: 115, scope: !5231)
!5234 = !DILocation(line: 603, column: 140, scope: !5235)
!5235 = !DILexicalBlockFile(scope: !5236, file: !394, discriminator: 3)
!5236 = distinct !DILexicalBlock(scope: !5224, file: !394, line: 603, column: 122)
!5237 = !DILocation(line: 603, column: 124, scope: !5236)
!5238 = !DILocation(line: 603, column: 202, scope: !5239)
!5239 = !DILexicalBlockFile(scope: !5225, file: !394, discriminator: 4)
!5240 = !DILocation(line: 604, column: 39, scope: !866)
!5241 = !DILocation(line: 604, column: 45, scope: !866)
!5242 = !DILocation(line: 604, column: 50, scope: !866)
!5243 = !DILocation(line: 604, column: 12, scope: !866)
!5244 = !DILocation(line: 604, column: 5, scope: !866)
!5245 = !DILocation(line: 605, column: 1, scope: !866)
!5246 = !DILocation(line: 624, column: 27, scope: !870)
!5247 = !DILocation(line: 624, column: 43, scope: !870)
!5248 = !DILocation(line: 626, column: 9, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !870, file: !394, line: 626, column: 9)
!5250 = !DILocation(line: 626, column: 15, scope: !5249)
!5251 = !DILocation(line: 626, column: 18, scope: !5249)
!5252 = !DILocation(line: 626, column: 9, scope: !870)
!5253 = !DILocation(line: 626, column: 30, scope: !5254)
!5254 = !DILexicalBlockFile(scope: !5255, file: !394, discriminator: 1)
!5255 = distinct !DILexicalBlock(scope: !5256, file: !394, line: 626, column: 30)
!5256 = distinct !DILexicalBlock(scope: !5249, file: !394, line: 626, column: 24)
!5257 = !DILocation(line: 626, column: 36, scope: !5255)
!5258 = !DILocation(line: 626, column: 30, scope: !5255)
!5259 = !DILocation(line: 626, column: 30, scope: !5256)
!5260 = !DILocation(line: 626, column: 64, scope: !5261)
!5261 = !DILexicalBlockFile(scope: !5262, file: !394, discriminator: 2)
!5262 = distinct !DILexicalBlock(scope: !5255, file: !394, line: 626, column: 46)
!5263 = !DILocation(line: 626, column: 48, scope: !5262)
!5264 = !DILocation(line: 626, column: 115, scope: !5262)
!5265 = !DILocation(line: 626, column: 140, scope: !5266)
!5266 = !DILexicalBlockFile(scope: !5267, file: !394, discriminator: 3)
!5267 = distinct !DILexicalBlock(scope: !5255, file: !394, line: 626, column: 122)
!5268 = !DILocation(line: 626, column: 124, scope: !5267)
!5269 = !DILocation(line: 626, column: 202, scope: !5270)
!5270 = !DILexicalBlockFile(scope: !5256, file: !394, discriminator: 4)
!5271 = !DILocation(line: 627, column: 39, scope: !870)
!5272 = !DILocation(line: 627, column: 45, scope: !870)
!5273 = !DILocation(line: 627, column: 50, scope: !870)
!5274 = !DILocation(line: 627, column: 12, scope: !870)
!5275 = !DILocation(line: 627, column: 5, scope: !870)
!5276 = !DILocation(line: 628, column: 1, scope: !870)
!5277 = !DILocation(line: 631, column: 27, scope: !874)
!5278 = !DILocation(line: 631, column: 43, scope: !874)
!5279 = !DILocation(line: 633, column: 9, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !874, file: !394, line: 633, column: 9)
!5281 = !DILocation(line: 633, column: 15, scope: !5280)
!5282 = !DILocation(line: 633, column: 18, scope: !5280)
!5283 = !DILocation(line: 633, column: 9, scope: !874)
!5284 = !DILocation(line: 633, column: 30, scope: !5285)
!5285 = !DILexicalBlockFile(scope: !5286, file: !394, discriminator: 1)
!5286 = distinct !DILexicalBlock(scope: !5287, file: !394, line: 633, column: 30)
!5287 = distinct !DILexicalBlock(scope: !5280, file: !394, line: 633, column: 24)
!5288 = !DILocation(line: 633, column: 36, scope: !5286)
!5289 = !DILocation(line: 633, column: 30, scope: !5286)
!5290 = !DILocation(line: 633, column: 30, scope: !5287)
!5291 = !DILocation(line: 633, column: 64, scope: !5292)
!5292 = !DILexicalBlockFile(scope: !5293, file: !394, discriminator: 2)
!5293 = distinct !DILexicalBlock(scope: !5286, file: !394, line: 633, column: 46)
!5294 = !DILocation(line: 633, column: 48, scope: !5293)
!5295 = !DILocation(line: 633, column: 115, scope: !5293)
!5296 = !DILocation(line: 633, column: 140, scope: !5297)
!5297 = !DILexicalBlockFile(scope: !5298, file: !394, discriminator: 3)
!5298 = distinct !DILexicalBlock(scope: !5286, file: !394, line: 633, column: 122)
!5299 = !DILocation(line: 633, column: 124, scope: !5298)
!5300 = !DILocation(line: 633, column: 202, scope: !5301)
!5301 = !DILexicalBlockFile(scope: !5287, file: !394, discriminator: 4)
!5302 = !DILocation(line: 634, column: 39, scope: !874)
!5303 = !DILocation(line: 634, column: 45, scope: !874)
!5304 = !DILocation(line: 634, column: 50, scope: !874)
!5305 = !DILocation(line: 634, column: 12, scope: !874)
!5306 = !DILocation(line: 634, column: 5, scope: !874)
!5307 = !DILocation(line: 635, column: 1, scope: !874)
!5308 = !DILocation(line: 453, column: 33, scope: !878)
!5309 = !DILocation(line: 453, column: 49, scope: !878)
!5310 = !DILocation(line: 455, column: 9, scope: !884)
!5311 = !DILocation(line: 455, column: 15, scope: !884)
!5312 = !DILocation(line: 455, column: 18, scope: !884)
!5313 = !DILocation(line: 455, column: 21, scope: !5314)
!5314 = !DILexicalBlockFile(scope: !884, file: !394, discriminator: 1)
!5315 = !DILocation(line: 455, column: 27, scope: !884)
!5316 = !DILocation(line: 455, column: 21, scope: !884)
!5317 = !DILocation(line: 455, column: 9, scope: !878)
!5318 = !DILocation(line: 456, column: 9, scope: !883)
!5319 = !DILocation(line: 456, column: 19, scope: !883)
!5320 = !DILocation(line: 457, column: 42, scope: !883)
!5321 = !DILocation(line: 457, column: 48, scope: !883)
!5322 = !DILocation(line: 457, column: 79, scope: !883)
!5323 = !DILocation(line: 457, column: 13, scope: !883)
!5324 = !DILocation(line: 457, column: 11, scope: !883)
!5325 = !DILocation(line: 458, column: 13, scope: !887)
!5326 = !DILocation(line: 458, column: 13, scope: !883)
!5327 = !DILocation(line: 459, column: 13, scope: !887)
!5328 = !DILocation(line: 459, column: 18, scope: !5329)
!5329 = !DILexicalBlockFile(scope: !886, file: !394, discriminator: 1)
!5330 = !DILocation(line: 459, column: 28, scope: !886)
!5331 = !DILocation(line: 459, column: 58, scope: !886)
!5332 = !DILocation(line: 459, column: 70, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !886, file: !394, line: 459, column: 67)
!5334 = !DILocation(line: 459, column: 87, scope: !5333)
!5335 = !DILocation(line: 459, column: 67, scope: !5333)
!5336 = !DILocation(line: 459, column: 97, scope: !5333)
!5337 = !DILocation(line: 459, column: 67, scope: !886)
!5338 = !DILocation(line: 459, column: 67, scope: !5339)
!5339 = !DILexicalBlockFile(scope: !886, file: !394, discriminator: 2)
!5340 = !DILocation(line: 459, column: 128, scope: !5341)
!5341 = !DILexicalBlockFile(scope: !5333, file: !394, discriminator: 3)
!5342 = !DILocation(line: 459, column: 146, scope: !5333)
!5343 = !DILocation(line: 459, column: 156, scope: !5333)
!5344 = !DILocation(line: 459, column: 181, scope: !5333)
!5345 = !DILocation(line: 459, column: 112, scope: !5333)
!5346 = !DILocation(line: 459, column: 200, scope: !5347)
!5347 = !DILexicalBlockFile(scope: !887, file: !394, discriminator: 4)
!5348 = !DILocation(line: 459, column: 200, scope: !886)
!5349 = !DILocation(line: 459, column: 200, scope: !5350)
!5350 = !DILexicalBlockFile(scope: !886, file: !394, discriminator: 5)
!5351 = !DILocation(line: 459, column: 200, scope: !5352)
!5352 = !DILexicalBlockFile(scope: !886, file: !394, discriminator: 6)
!5353 = !DILocation(line: 461, column: 13, scope: !887)
!5354 = !DILocation(line: 462, column: 5, scope: !884)
!5355 = !DILocation(line: 462, column: 5, scope: !883)
!5356 = !DILocation(line: 463, column: 58, scope: !878)
!5357 = !DILocation(line: 463, column: 5, scope: !878)
!5358 = !DILocation(line: 640, column: 29, scope: !888)
!5359 = !DILocation(line: 640, column: 45, scope: !888)
!5360 = !DILocation(line: 642, column: 18, scope: !888)
!5361 = !DILocation(line: 643, column: 64, scope: !888)
!5362 = !DILocation(line: 643, column: 52, scope: !888)
!5363 = !DILocation(line: 643, column: 72, scope: !888)
!5364 = !DILocation(line: 643, column: 82, scope: !888)
!5365 = !DILocation(line: 642, column: 5, scope: !888)
!5366 = !DILocation(line: 644, column: 5, scope: !888)
!5367 = !DILocation(line: 903, column: 25, scope: !892)
!5368 = !DILocation(line: 903, column: 41, scope: !892)
!5369 = !DILocation(line: 905, column: 5, scope: !892)
!5370 = !DILocation(line: 905, column: 16, scope: !892)
!5371 = !DILocation(line: 906, column: 5, scope: !892)
!5372 = !DILocation(line: 906, column: 15, scope: !892)
!5373 = !DILocation(line: 908, column: 9, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !892, file: !394, line: 908, column: 9)
!5375 = !DILocation(line: 908, column: 15, scope: !5374)
!5376 = !DILocation(line: 908, column: 18, scope: !5374)
!5377 = !DILocation(line: 908, column: 9, scope: !892)
!5378 = !DILocation(line: 908, column: 30, scope: !5379)
!5379 = !DILexicalBlockFile(scope: !5380, file: !394, discriminator: 1)
!5380 = distinct !DILexicalBlock(scope: !5381, file: !394, line: 908, column: 30)
!5381 = distinct !DILexicalBlock(scope: !5374, file: !394, line: 908, column: 24)
!5382 = !DILocation(line: 908, column: 36, scope: !5380)
!5383 = !DILocation(line: 908, column: 30, scope: !5380)
!5384 = !DILocation(line: 908, column: 30, scope: !5381)
!5385 = !DILocation(line: 908, column: 64, scope: !5386)
!5386 = !DILexicalBlockFile(scope: !5387, file: !394, discriminator: 2)
!5387 = distinct !DILexicalBlock(scope: !5380, file: !394, line: 908, column: 46)
!5388 = !DILocation(line: 908, column: 48, scope: !5387)
!5389 = !DILocation(line: 908, column: 115, scope: !5387)
!5390 = !DILocation(line: 908, column: 140, scope: !5391)
!5391 = !DILexicalBlockFile(scope: !5392, file: !394, discriminator: 3)
!5392 = distinct !DILexicalBlock(scope: !5380, file: !394, line: 908, column: 122)
!5393 = !DILocation(line: 908, column: 124, scope: !5392)
!5394 = !DILocation(line: 908, column: 202, scope: !5395)
!5395 = !DILexicalBlockFile(scope: !5381, file: !394, discriminator: 4)
!5396 = !DILocation(line: 908, column: 202, scope: !5381)
!5397 = !DILocation(line: 909, column: 34, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !892, file: !394, line: 909, column: 9)
!5399 = !DILocation(line: 909, column: 10, scope: !5398)
!5400 = !DILocation(line: 909, column: 9, scope: !892)
!5401 = !DILocation(line: 910, column: 9, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5398, file: !394, line: 909, column: 80)
!5403 = !DILocation(line: 912, column: 9, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !892, file: !394, line: 912, column: 9)
!5405 = !DILocation(line: 912, column: 11, scope: !5404)
!5406 = !DILocation(line: 912, column: 9, scope: !892)
!5407 = !DILocation(line: 913, column: 25, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5404, file: !394, line: 912, column: 17)
!5409 = !DILocation(line: 913, column: 9, scope: !5408)
!5410 = !DILocation(line: 915, column: 9, scope: !5408)
!5411 = !DILocation(line: 918, column: 10, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !892, file: !394, line: 918, column: 9)
!5413 = !DILocation(line: 918, column: 16, scope: !5412)
!5414 = !DILocation(line: 918, column: 9, scope: !892)
!5415 = !DILocation(line: 918, column: 54, scope: !5416)
!5416 = !DILexicalBlockFile(scope: !5412, file: !394, discriminator: 1)
!5417 = !DILocation(line: 918, column: 60, scope: !5412)
!5418 = !DILocation(line: 918, column: 37, scope: !5412)
!5419 = !DILocation(line: 918, column: 83, scope: !5420)
!5420 = !DILexicalBlockFile(scope: !5412, file: !394, discriminator: 2)
!5421 = !DILocation(line: 918, column: 67, scope: !5412)
!5422 = !DILocation(line: 918, column: 109, scope: !5423)
!5423 = !DILexicalBlockFile(scope: !5424, file: !394, discriminator: 4)
!5424 = !DILexicalBlockFile(scope: !5425, file: !394, discriminator: 3)
!5425 = distinct !DILexicalBlock(scope: !5412, file: !394, line: 918, column: 91)
!5426 = !DILocation(line: 918, column: 93, scope: !5425)
!5427 = !DILocation(line: 918, column: 151, scope: !5425)
!5428 = !DILocation(line: 920, column: 9, scope: !901)
!5429 = !DILocation(line: 920, column: 11, scope: !901)
!5430 = !DILocation(line: 920, column: 9, scope: !892)
!5431 = !DILocation(line: 922, column: 39, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5433, file: !394, line: 922, column: 13)
!5433 = distinct !DILexicalBlock(scope: !901, file: !394, line: 920, column: 18)
!5434 = !DILocation(line: 922, column: 45, scope: !5432)
!5435 = !DILocation(line: 922, column: 17, scope: !5432)
!5436 = !DILocation(line: 922, column: 88, scope: !5432)
!5437 = !DILocation(line: 922, column: 17, scope: !5438)
!5438 = !DILexicalBlockFile(scope: !5432, file: !394, discriminator: 1)
!5439 = !DILocation(line: 922, column: 81, scope: !5440)
!5440 = !DILexicalBlockFile(scope: !5432, file: !394, discriminator: 2)
!5441 = !DILocation(line: 922, column: 60, scope: !5432)
!5442 = !DILocation(line: 922, column: 106, scope: !5443)
!5443 = !DILexicalBlockFile(scope: !5444, file: !394, discriminator: 4)
!5444 = !DILexicalBlockFile(scope: !5432, file: !394, discriminator: 3)
!5445 = !DILocation(line: 922, column: 92, scope: !5432)
!5446 = !DILocation(line: 922, column: 98, scope: !5432)
!5447 = !DILocation(line: 922, column: 104, scope: !5432)
!5448 = !DILocation(line: 922, column: 13, scope: !5433)
!5449 = !DILocation(line: 923, column: 13, scope: !5432)
!5450 = !DILocation(line: 924, column: 40, scope: !5433)
!5451 = !DILocation(line: 924, column: 15, scope: !5433)
!5452 = !DILocation(line: 924, column: 13, scope: !5433)
!5453 = !DILocation(line: 925, column: 5, scope: !5433)
!5454 = !DILocation(line: 927, column: 41, scope: !900)
!5455 = !DILocation(line: 927, column: 47, scope: !900)
!5456 = !DILocation(line: 927, column: 15, scope: !900)
!5457 = !DILocation(line: 927, column: 13, scope: !900)
!5458 = !DILocation(line: 928, column: 13, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !900, file: !394, line: 928, column: 13)
!5460 = !DILocation(line: 928, column: 17, scope: !5459)
!5461 = !DILocation(line: 928, column: 13, scope: !900)
!5462 = !DILocation(line: 929, column: 20, scope: !5459)
!5463 = !DILocation(line: 929, column: 13, scope: !5459)
!5464 = !DILocation(line: 930, column: 9, scope: !900)
!5465 = !DILocation(line: 930, column: 14, scope: !5466)
!5466 = !DILexicalBlockFile(scope: !899, file: !394, discriminator: 1)
!5467 = !DILocation(line: 930, column: 24, scope: !899)
!5468 = !DILocation(line: 930, column: 54, scope: !899)
!5469 = !DILocation(line: 930, column: 68, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !899, file: !394, line: 930, column: 65)
!5471 = !DILocation(line: 930, column: 85, scope: !5470)
!5472 = !DILocation(line: 930, column: 65, scope: !5470)
!5473 = !DILocation(line: 930, column: 95, scope: !5470)
!5474 = !DILocation(line: 930, column: 65, scope: !899)
!5475 = !DILocation(line: 930, column: 65, scope: !5476)
!5476 = !DILexicalBlockFile(scope: !899, file: !394, discriminator: 2)
!5477 = !DILocation(line: 930, column: 126, scope: !5478)
!5478 = !DILexicalBlockFile(scope: !5470, file: !394, discriminator: 3)
!5479 = !DILocation(line: 930, column: 144, scope: !5470)
!5480 = !DILocation(line: 930, column: 154, scope: !5470)
!5481 = !DILocation(line: 930, column: 179, scope: !5470)
!5482 = !DILocation(line: 930, column: 110, scope: !5470)
!5483 = !DILocation(line: 930, column: 198, scope: !5484)
!5484 = !DILexicalBlockFile(scope: !900, file: !394, discriminator: 4)
!5485 = !DILocation(line: 930, column: 198, scope: !899)
!5486 = !DILocation(line: 930, column: 198, scope: !5487)
!5487 = !DILexicalBlockFile(scope: !899, file: !394, discriminator: 5)
!5488 = !DILocation(line: 931, column: 39, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !900, file: !394, line: 931, column: 13)
!5490 = !DILocation(line: 931, column: 45, scope: !5489)
!5491 = !DILocation(line: 931, column: 17, scope: !5489)
!5492 = !DILocation(line: 931, column: 88, scope: !5489)
!5493 = !DILocation(line: 931, column: 17, scope: !5494)
!5494 = !DILexicalBlockFile(scope: !5489, file: !394, discriminator: 1)
!5495 = !DILocation(line: 931, column: 81, scope: !5496)
!5496 = !DILexicalBlockFile(scope: !5489, file: !394, discriminator: 2)
!5497 = !DILocation(line: 931, column: 60, scope: !5489)
!5498 = !DILocation(line: 931, column: 106, scope: !5499)
!5499 = !DILexicalBlockFile(scope: !5500, file: !394, discriminator: 4)
!5500 = !DILexicalBlockFile(scope: !5489, file: !394, discriminator: 3)
!5501 = !DILocation(line: 931, column: 92, scope: !5489)
!5502 = !DILocation(line: 931, column: 98, scope: !5489)
!5503 = !DILocation(line: 931, column: 104, scope: !5489)
!5504 = !DILocation(line: 931, column: 13, scope: !900)
!5505 = !DILocation(line: 932, column: 13, scope: !5489)
!5506 = !DILocation(line: 933, column: 44, scope: !900)
!5507 = !DILocation(line: 933, column: 50, scope: !900)
!5508 = !DILocation(line: 933, column: 15, scope: !900)
!5509 = !DILocation(line: 933, column: 13, scope: !900)
!5510 = !DILocation(line: 936, column: 5, scope: !892)
!5511 = !DILocation(line: 936, column: 10, scope: !5512)
!5512 = !DILexicalBlockFile(scope: !5513, file: !394, discriminator: 1)
!5513 = distinct !DILexicalBlock(scope: !892, file: !394, line: 936, column: 8)
!5514 = !DILocation(line: 936, column: 16, scope: !5513)
!5515 = !DILocation(line: 936, column: 22, scope: !5513)
!5516 = !DILocation(line: 936, column: 49, scope: !5513)
!5517 = !DILocation(line: 936, column: 55, scope: !5513)
!5518 = !DILocation(line: 936, column: 27, scope: !5513)
!5519 = !DILocation(line: 936, column: 62, scope: !5513)
!5520 = !DILocation(line: 936, column: 62, scope: !5521)
!5521 = !DILexicalBlockFile(scope: !5513, file: !394, discriminator: 2)
!5522 = !DILocation(line: 937, column: 12, scope: !892)
!5523 = !DILocation(line: 937, column: 5, scope: !892)
!5524 = !DILocation(line: 938, column: 1, scope: !892)
!5525 = !DILocation(line: 876, column: 25, scope: !983)
!5526 = !DILocation(line: 876, column: 41, scope: !983)
!5527 = !DILocation(line: 878, column: 5, scope: !983)
!5528 = !DILocation(line: 878, column: 16, scope: !983)
!5529 = !DILocation(line: 879, column: 5, scope: !983)
!5530 = !DILocation(line: 879, column: 15, scope: !983)
!5531 = !DILocation(line: 881, column: 9, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !983, file: !394, line: 881, column: 9)
!5533 = !DILocation(line: 881, column: 15, scope: !5532)
!5534 = !DILocation(line: 881, column: 18, scope: !5532)
!5535 = !DILocation(line: 881, column: 9, scope: !983)
!5536 = !DILocation(line: 881, column: 30, scope: !5537)
!5537 = !DILexicalBlockFile(scope: !5538, file: !394, discriminator: 1)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !394, line: 881, column: 30)
!5539 = distinct !DILexicalBlock(scope: !5532, file: !394, line: 881, column: 24)
!5540 = !DILocation(line: 881, column: 36, scope: !5538)
!5541 = !DILocation(line: 881, column: 30, scope: !5538)
!5542 = !DILocation(line: 881, column: 30, scope: !5539)
!5543 = !DILocation(line: 881, column: 64, scope: !5544)
!5544 = !DILexicalBlockFile(scope: !5545, file: !394, discriminator: 2)
!5545 = distinct !DILexicalBlock(scope: !5538, file: !394, line: 881, column: 46)
!5546 = !DILocation(line: 881, column: 48, scope: !5545)
!5547 = !DILocation(line: 881, column: 115, scope: !5545)
!5548 = !DILocation(line: 881, column: 140, scope: !5549)
!5549 = !DILexicalBlockFile(scope: !5550, file: !394, discriminator: 3)
!5550 = distinct !DILexicalBlock(scope: !5538, file: !394, line: 881, column: 122)
!5551 = !DILocation(line: 881, column: 124, scope: !5550)
!5552 = !DILocation(line: 881, column: 202, scope: !5553)
!5553 = !DILexicalBlockFile(scope: !5539, file: !394, discriminator: 4)
!5554 = !DILocation(line: 881, column: 202, scope: !5539)
!5555 = !DILocation(line: 882, column: 34, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !983, file: !394, line: 882, column: 9)
!5557 = !DILocation(line: 882, column: 10, scope: !5556)
!5558 = !DILocation(line: 882, column: 9, scope: !983)
!5559 = !DILocation(line: 883, column: 9, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5556, file: !394, line: 882, column: 56)
!5561 = !DILocation(line: 886, column: 35, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !983, file: !394, line: 886, column: 9)
!5563 = !DILocation(line: 886, column: 41, scope: !5562)
!5564 = !DILocation(line: 886, column: 13, scope: !5562)
!5565 = !DILocation(line: 886, column: 84, scope: !5562)
!5566 = !DILocation(line: 886, column: 13, scope: !5567)
!5567 = !DILexicalBlockFile(scope: !5562, file: !394, discriminator: 1)
!5568 = !DILocation(line: 886, column: 77, scope: !5569)
!5569 = !DILexicalBlockFile(scope: !5562, file: !394, discriminator: 2)
!5570 = !DILocation(line: 886, column: 56, scope: !5562)
!5571 = !DILocation(line: 886, column: 102, scope: !5572)
!5572 = !DILexicalBlockFile(scope: !5573, file: !394, discriminator: 4)
!5573 = !DILexicalBlockFile(scope: !5562, file: !394, discriminator: 3)
!5574 = !DILocation(line: 886, column: 88, scope: !5562)
!5575 = !DILocation(line: 886, column: 94, scope: !5562)
!5576 = !DILocation(line: 886, column: 100, scope: !5562)
!5577 = !DILocation(line: 886, column: 9, scope: !983)
!5578 = !DILocation(line: 887, column: 9, scope: !5562)
!5579 = !DILocation(line: 889, column: 9, scope: !992)
!5580 = !DILocation(line: 889, column: 15, scope: !992)
!5581 = !DILocation(line: 889, column: 9, scope: !983)
!5582 = !DILocation(line: 890, column: 50, scope: !991)
!5583 = !DILocation(line: 890, column: 15, scope: !991)
!5584 = !DILocation(line: 890, column: 13, scope: !991)
!5585 = !DILocation(line: 891, column: 13, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !991, file: !394, line: 891, column: 13)
!5587 = !DILocation(line: 891, column: 17, scope: !5586)
!5588 = !DILocation(line: 891, column: 13, scope: !991)
!5589 = !DILocation(line: 892, column: 13, scope: !5586)
!5590 = !DILocation(line: 893, column: 9, scope: !991)
!5591 = !DILocation(line: 893, column: 14, scope: !5592)
!5592 = !DILexicalBlockFile(scope: !990, file: !394, discriminator: 1)
!5593 = !DILocation(line: 893, column: 24, scope: !990)
!5594 = !DILocation(line: 893, column: 47, scope: !990)
!5595 = !DILocation(line: 893, column: 57, scope: !996)
!5596 = !DILocation(line: 893, column: 65, scope: !996)
!5597 = !DILocation(line: 893, column: 57, scope: !990)
!5598 = !DILocation(line: 893, column: 88, scope: !5599)
!5599 = !DILexicalBlockFile(scope: !995, file: !394, discriminator: 2)
!5600 = !DILocation(line: 893, column: 102, scope: !995)
!5601 = !DILocation(line: 893, column: 107, scope: !5602)
!5602 = !DILexicalBlockFile(scope: !994, file: !394, discriminator: 4)
!5603 = !DILocation(line: 893, column: 117, scope: !994)
!5604 = !DILocation(line: 893, column: 147, scope: !994)
!5605 = !DILocation(line: 893, column: 165, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !994, file: !394, line: 893, column: 162)
!5607 = !DILocation(line: 893, column: 182, scope: !5606)
!5608 = !DILocation(line: 893, column: 162, scope: !5606)
!5609 = !DILocation(line: 893, column: 192, scope: !5606)
!5610 = !DILocation(line: 893, column: 162, scope: !994)
!5611 = !DILocation(line: 893, column: 162, scope: !5612)
!5612 = !DILexicalBlockFile(scope: !994, file: !394, discriminator: 5)
!5613 = !DILocation(line: 893, column: 223, scope: !5614)
!5614 = !DILexicalBlockFile(scope: !5606, file: !394, discriminator: 6)
!5615 = !DILocation(line: 893, column: 241, scope: !5606)
!5616 = !DILocation(line: 893, column: 251, scope: !5606)
!5617 = !DILocation(line: 893, column: 276, scope: !5606)
!5618 = !DILocation(line: 893, column: 207, scope: !5606)
!5619 = !DILocation(line: 893, column: 295, scope: !5620)
!5620 = !DILexicalBlockFile(scope: !995, file: !394, discriminator: 7)
!5621 = !DILocation(line: 893, column: 295, scope: !994)
!5622 = !DILocation(line: 893, column: 295, scope: !5623)
!5623 = !DILexicalBlockFile(scope: !994, file: !394, discriminator: 8)
!5624 = !DILocation(line: 893, column: 308, scope: !5625)
!5625 = !DILexicalBlockFile(scope: !995, file: !394, discriminator: 9)
!5626 = !DILocation(line: 893, column: 310, scope: !5627)
!5627 = !DILexicalBlockFile(scope: !5628, file: !394, discriminator: 10)
!5628 = !DILexicalBlockFile(scope: !991, file: !394, discriminator: 3)
!5629 = !DILocation(line: 893, column: 310, scope: !990)
!5630 = !DILocation(line: 893, column: 310, scope: !5631)
!5631 = !DILexicalBlockFile(scope: !990, file: !394, discriminator: 11)
!5632 = !DILocation(line: 894, column: 5, scope: !991)
!5633 = !DILocation(line: 895, column: 41, scope: !983)
!5634 = !DILocation(line: 895, column: 11, scope: !983)
!5635 = !DILocation(line: 895, column: 9, scope: !983)
!5636 = !DILocation(line: 895, column: 5, scope: !983)
!5637 = !DILocation(line: 898, column: 5, scope: !983)
!5638 = !DILocation(line: 898, column: 10, scope: !5639)
!5639 = !DILexicalBlockFile(scope: !5640, file: !394, discriminator: 1)
!5640 = distinct !DILexicalBlock(scope: !983, file: !394, line: 898, column: 8)
!5641 = !DILocation(line: 898, column: 16, scope: !5640)
!5642 = !DILocation(line: 898, column: 22, scope: !5640)
!5643 = !DILocation(line: 898, column: 49, scope: !5640)
!5644 = !DILocation(line: 898, column: 55, scope: !5640)
!5645 = !DILocation(line: 898, column: 27, scope: !5640)
!5646 = !DILocation(line: 898, column: 62, scope: !5640)
!5647 = !DILocation(line: 898, column: 62, scope: !5648)
!5648 = !DILexicalBlockFile(scope: !5640, file: !394, discriminator: 2)
!5649 = !DILocation(line: 899, column: 12, scope: !983)
!5650 = !DILocation(line: 899, column: 5, scope: !983)
!5651 = !DILocation(line: 900, column: 1, scope: !983)
!5652 = !DILocation(line: 941, column: 26, scope: !1002)
!5653 = !DILocation(line: 941, column: 42, scope: !1002)
!5654 = !DILocation(line: 943, column: 5, scope: !1002)
!5655 = !DILocation(line: 943, column: 16, scope: !1002)
!5656 = !DILocation(line: 943, column: 19, scope: !1002)
!5657 = !DILocation(line: 943, column: 25, scope: !1002)
!5658 = !DILocation(line: 944, column: 5, scope: !1002)
!5659 = !DILocation(line: 944, column: 15, scope: !1002)
!5660 = !DILocation(line: 946, column: 9, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !1002, file: !394, line: 946, column: 9)
!5662 = !DILocation(line: 946, column: 15, scope: !5661)
!5663 = !DILocation(line: 946, column: 18, scope: !5661)
!5664 = !DILocation(line: 946, column: 9, scope: !1002)
!5665 = !DILocation(line: 946, column: 30, scope: !5666)
!5666 = !DILexicalBlockFile(scope: !5667, file: !394, discriminator: 1)
!5667 = distinct !DILexicalBlock(scope: !5668, file: !394, line: 946, column: 30)
!5668 = distinct !DILexicalBlock(scope: !5661, file: !394, line: 946, column: 24)
!5669 = !DILocation(line: 946, column: 36, scope: !5667)
!5670 = !DILocation(line: 946, column: 30, scope: !5667)
!5671 = !DILocation(line: 946, column: 30, scope: !5668)
!5672 = !DILocation(line: 946, column: 64, scope: !5673)
!5673 = !DILexicalBlockFile(scope: !5674, file: !394, discriminator: 2)
!5674 = distinct !DILexicalBlock(scope: !5667, file: !394, line: 946, column: 46)
!5675 = !DILocation(line: 946, column: 48, scope: !5674)
!5676 = !DILocation(line: 946, column: 115, scope: !5674)
!5677 = !DILocation(line: 946, column: 140, scope: !5678)
!5678 = !DILexicalBlockFile(scope: !5679, file: !394, discriminator: 3)
!5679 = distinct !DILexicalBlock(scope: !5667, file: !394, line: 946, column: 122)
!5680 = !DILocation(line: 946, column: 124, scope: !5679)
!5681 = !DILocation(line: 946, column: 202, scope: !5682)
!5682 = !DILexicalBlockFile(scope: !5668, file: !394, discriminator: 4)
!5683 = !DILocation(line: 946, column: 202, scope: !5668)
!5684 = !DILocation(line: 947, column: 34, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !1002, file: !394, line: 947, column: 9)
!5686 = !DILocation(line: 947, column: 10, scope: !5685)
!5687 = !DILocation(line: 947, column: 9, scope: !1002)
!5688 = !DILocation(line: 948, column: 9, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5685, file: !394, line: 947, column: 56)
!5690 = !DILocation(line: 951, column: 9, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !1002, file: !394, line: 951, column: 9)
!5692 = !DILocation(line: 951, column: 11, scope: !5691)
!5693 = !DILocation(line: 951, column: 9, scope: !1002)
!5694 = !DILocation(line: 952, column: 25, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5691, file: !394, line: 951, column: 16)
!5696 = !DILocation(line: 952, column: 9, scope: !5695)
!5697 = !DILocation(line: 954, column: 9, scope: !5695)
!5698 = !DILocation(line: 956, column: 9, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !1002, file: !394, line: 956, column: 9)
!5700 = !DILocation(line: 956, column: 11, scope: !5699)
!5701 = !DILocation(line: 956, column: 9, scope: !1002)
!5702 = !DILocation(line: 957, column: 16, scope: !5699)
!5703 = !DILocation(line: 957, column: 9, scope: !5699)
!5704 = !DILocation(line: 962, column: 27, scope: !1002)
!5705 = !DILocation(line: 962, column: 33, scope: !1002)
!5706 = !DILocation(line: 962, column: 42, scope: !1002)
!5707 = !DILocation(line: 962, column: 46, scope: !5708)
!5708 = !DILexicalBlockFile(scope: !1002, file: !394, discriminator: 1)
!5709 = !DILocation(line: 962, column: 52, scope: !1002)
!5710 = !DILocation(line: 962, column: 46, scope: !1002)
!5711 = !DILocation(line: 962, column: 61, scope: !1002)
!5712 = !DILocation(line: 962, column: 64, scope: !5713)
!5713 = !DILexicalBlockFile(scope: !1002, file: !394, discriminator: 3)
!5714 = !DILocation(line: 962, column: 70, scope: !1002)
!5715 = !DILocation(line: 962, column: 79, scope: !1002)
!5716 = !DILocation(line: 962, column: 26, scope: !1002)
!5717 = !DILocation(line: 962, column: 90, scope: !5718)
!5718 = !DILexicalBlockFile(scope: !1002, file: !394, discriminator: 5)
!5719 = !DILocation(line: 962, column: 96, scope: !1002)
!5720 = !DILocation(line: 962, column: 107, scope: !1002)
!5721 = !DILocation(line: 962, column: 113, scope: !1002)
!5722 = !DILocation(line: 962, column: 105, scope: !1002)
!5723 = !DILocation(line: 962, column: 26, scope: !5724)
!5724 = !DILexicalBlockFile(scope: !5725, file: !394, discriminator: 6)
!5725 = !DILexicalBlockFile(scope: !5726, file: !394, discriminator: 4)
!5726 = !DILexicalBlockFile(scope: !1002, file: !394, discriminator: 2)
!5727 = !DILocation(line: 962, column: 10, scope: !5728)
!5728 = !DILexicalBlockFile(scope: !5729, file: !394, discriminator: 8)
!5729 = !DILexicalBlockFile(scope: !1002, file: !394, discriminator: 7)
!5730 = !DILocation(line: 963, column: 9, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !1002, file: !394, line: 963, column: 9)
!5732 = !DILocation(line: 963, column: 14, scope: !5731)
!5733 = !DILocation(line: 963, column: 9, scope: !1002)
!5734 = !DILocation(line: 964, column: 16, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5731, file: !394, line: 963, column: 19)
!5736 = !DILocation(line: 964, column: 25, scope: !5735)
!5737 = !DILocation(line: 964, column: 22, scope: !5735)
!5738 = !DILocation(line: 964, column: 14, scope: !5735)
!5739 = !DILocation(line: 964, column: 32, scope: !5740)
!5740 = !DILexicalBlockFile(scope: !5735, file: !394, discriminator: 1)
!5741 = !DILocation(line: 964, column: 38, scope: !5742)
!5742 = !DILexicalBlockFile(scope: !5735, file: !394, discriminator: 2)
!5743 = !DILocation(line: 964, column: 11, scope: !5744)
!5744 = !DILexicalBlockFile(scope: !5745, file: !394, discriminator: 4)
!5745 = !DILexicalBlockFile(scope: !5735, file: !394, discriminator: 3)
!5746 = !DILocation(line: 965, column: 41, scope: !5735)
!5747 = !DILocation(line: 965, column: 47, scope: !5735)
!5748 = !DILocation(line: 965, column: 15, scope: !5735)
!5749 = !DILocation(line: 965, column: 13, scope: !5735)
!5750 = !DILocation(line: 967, column: 16, scope: !5735)
!5751 = !DILocation(line: 967, column: 9, scope: !5735)
!5752 = !DILocation(line: 969, column: 49, scope: !1002)
!5753 = !DILocation(line: 969, column: 11, scope: !1002)
!5754 = !DILocation(line: 969, column: 9, scope: !1002)
!5755 = !DILocation(line: 970, column: 9, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !1002, file: !394, line: 970, column: 9)
!5757 = !DILocation(line: 970, column: 13, scope: !5756)
!5758 = !DILocation(line: 970, column: 9, scope: !1002)
!5759 = !DILocation(line: 971, column: 9, scope: !5756)
!5760 = !DILocation(line: 972, column: 35, scope: !1013)
!5761 = !DILocation(line: 972, column: 41, scope: !1013)
!5762 = !DILocation(line: 972, column: 13, scope: !1013)
!5763 = !DILocation(line: 972, column: 84, scope: !1013)
!5764 = !DILocation(line: 972, column: 13, scope: !5765)
!5765 = !DILexicalBlockFile(scope: !1013, file: !394, discriminator: 1)
!5766 = !DILocation(line: 972, column: 77, scope: !5767)
!5767 = !DILexicalBlockFile(scope: !1013, file: !394, discriminator: 2)
!5768 = !DILocation(line: 972, column: 56, scope: !1013)
!5769 = !DILocation(line: 972, column: 102, scope: !5770)
!5770 = !DILexicalBlockFile(scope: !5771, file: !394, discriminator: 4)
!5771 = !DILexicalBlockFile(scope: !1013, file: !394, discriminator: 3)
!5772 = !DILocation(line: 972, column: 88, scope: !1013)
!5773 = !DILocation(line: 972, column: 94, scope: !1013)
!5774 = !DILocation(line: 972, column: 100, scope: !1013)
!5775 = !DILocation(line: 972, column: 9, scope: !1002)
!5776 = !DILocation(line: 973, column: 9, scope: !1012)
!5777 = !DILocation(line: 973, column: 14, scope: !5778)
!5778 = !DILexicalBlockFile(scope: !1011, file: !394, discriminator: 1)
!5779 = !DILocation(line: 973, column: 24, scope: !1011)
!5780 = !DILocation(line: 973, column: 54, scope: !1011)
!5781 = !DILocation(line: 973, column: 68, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !1011, file: !394, line: 973, column: 65)
!5783 = !DILocation(line: 973, column: 85, scope: !5782)
!5784 = !DILocation(line: 973, column: 65, scope: !5782)
!5785 = !DILocation(line: 973, column: 95, scope: !5782)
!5786 = !DILocation(line: 973, column: 65, scope: !1011)
!5787 = !DILocation(line: 973, column: 65, scope: !5788)
!5788 = !DILexicalBlockFile(scope: !1011, file: !394, discriminator: 2)
!5789 = !DILocation(line: 973, column: 126, scope: !5790)
!5790 = !DILexicalBlockFile(scope: !5782, file: !394, discriminator: 3)
!5791 = !DILocation(line: 973, column: 144, scope: !5782)
!5792 = !DILocation(line: 973, column: 154, scope: !5782)
!5793 = !DILocation(line: 973, column: 179, scope: !5782)
!5794 = !DILocation(line: 973, column: 110, scope: !5782)
!5795 = !DILocation(line: 973, column: 198, scope: !5796)
!5796 = !DILexicalBlockFile(scope: !1012, file: !394, discriminator: 4)
!5797 = !DILocation(line: 973, column: 198, scope: !1011)
!5798 = !DILocation(line: 973, column: 198, scope: !5799)
!5799 = !DILexicalBlockFile(scope: !1011, file: !394, discriminator: 5)
!5800 = !DILocation(line: 974, column: 9, scope: !1012)
!5801 = !DILocation(line: 976, column: 31, scope: !1002)
!5802 = !DILocation(line: 976, column: 5, scope: !1002)
!5803 = !DILocation(line: 977, column: 34, scope: !1002)
!5804 = !DILocation(line: 977, column: 75, scope: !1002)
!5805 = !DILocation(line: 977, column: 57, scope: !1002)
!5806 = !DILocation(line: 977, column: 82, scope: !1002)
!5807 = !DILocation(line: 977, column: 55, scope: !1002)
!5808 = !DILocation(line: 977, column: 93, scope: !1002)
!5809 = !DILocation(line: 977, column: 9, scope: !1002)
!5810 = !DILocation(line: 977, column: 7, scope: !1002)
!5811 = !DILocation(line: 978, column: 5, scope: !1002)
!5812 = !DILocation(line: 978, column: 10, scope: !5813)
!5813 = !DILexicalBlockFile(scope: !5814, file: !394, discriminator: 1)
!5814 = distinct !DILexicalBlock(scope: !1002, file: !394, line: 978, column: 8)
!5815 = !DILocation(line: 978, column: 16, scope: !5814)
!5816 = !DILocation(line: 978, column: 22, scope: !5814)
!5817 = !DILocation(line: 978, column: 49, scope: !5814)
!5818 = !DILocation(line: 978, column: 55, scope: !5814)
!5819 = !DILocation(line: 978, column: 27, scope: !5814)
!5820 = !DILocation(line: 978, column: 62, scope: !5814)
!5821 = !DILocation(line: 978, column: 62, scope: !5822)
!5822 = !DILexicalBlockFile(scope: !5814, file: !394, discriminator: 2)
!5823 = !DILocation(line: 979, column: 9, scope: !1017)
!5824 = !DILocation(line: 979, column: 11, scope: !1017)
!5825 = !DILocation(line: 979, column: 9, scope: !1002)
!5826 = !DILocation(line: 980, column: 9, scope: !1016)
!5827 = !DILocation(line: 980, column: 14, scope: !5828)
!5828 = !DILexicalBlockFile(scope: !1015, file: !394, discriminator: 1)
!5829 = !DILocation(line: 980, column: 24, scope: !1015)
!5830 = !DILocation(line: 980, column: 54, scope: !1015)
!5831 = !DILocation(line: 980, column: 68, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !1015, file: !394, line: 980, column: 65)
!5833 = !DILocation(line: 980, column: 85, scope: !5832)
!5834 = !DILocation(line: 980, column: 65, scope: !5832)
!5835 = !DILocation(line: 980, column: 95, scope: !5832)
!5836 = !DILocation(line: 980, column: 65, scope: !1015)
!5837 = !DILocation(line: 980, column: 65, scope: !5838)
!5838 = !DILexicalBlockFile(scope: !1015, file: !394, discriminator: 2)
!5839 = !DILocation(line: 980, column: 126, scope: !5840)
!5840 = !DILexicalBlockFile(scope: !5832, file: !394, discriminator: 3)
!5841 = !DILocation(line: 980, column: 144, scope: !5832)
!5842 = !DILocation(line: 980, column: 154, scope: !5832)
!5843 = !DILocation(line: 980, column: 179, scope: !5832)
!5844 = !DILocation(line: 980, column: 110, scope: !5832)
!5845 = !DILocation(line: 980, column: 198, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !1016, file: !394, discriminator: 4)
!5847 = !DILocation(line: 980, column: 198, scope: !1015)
!5848 = !DILocation(line: 980, column: 198, scope: !5849)
!5849 = !DILexicalBlockFile(scope: !1015, file: !394, discriminator: 5)
!5850 = !DILocation(line: 981, column: 9, scope: !1016)
!5851 = !DILocation(line: 983, column: 9, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !1002, file: !394, line: 983, column: 9)
!5853 = !DILocation(line: 983, column: 11, scope: !5852)
!5854 = !DILocation(line: 983, column: 9, scope: !1002)
!5855 = !DILocation(line: 984, column: 11, scope: !5852)
!5856 = !DILocation(line: 984, column: 9, scope: !5852)
!5857 = !DILocation(line: 985, column: 9, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !1002, file: !394, line: 985, column: 9)
!5859 = !DILocation(line: 985, column: 13, scope: !5858)
!5860 = !DILocation(line: 985, column: 11, scope: !5858)
!5861 = !DILocation(line: 985, column: 9, scope: !1002)
!5862 = !DILocation(line: 986, column: 31, scope: !5858)
!5863 = !DILocation(line: 986, column: 9, scope: !5858)
!5864 = !DILocation(line: 987, column: 12, scope: !1002)
!5865 = !DILocation(line: 987, column: 5, scope: !1002)
!5866 = !DILocation(line: 988, column: 1, scope: !1002)
!5867 = !DILocation(line: 991, column: 29, scope: !1018)
!5868 = !DILocation(line: 991, column: 45, scope: !1018)
!5869 = !DILocation(line: 993, column: 5, scope: !1018)
!5870 = !DILocation(line: 993, column: 15, scope: !1018)
!5871 = !DILocation(line: 994, column: 5, scope: !1018)
!5872 = !DILocation(line: 994, column: 16, scope: !1018)
!5873 = !DILocation(line: 994, column: 19, scope: !1018)
!5874 = !DILocation(line: 994, column: 32, scope: !1018)
!5875 = !DILocation(line: 995, column: 5, scope: !1018)
!5876 = !DILocation(line: 995, column: 15, scope: !1018)
!5877 = !DILocation(line: 997, column: 9, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !1018, file: !394, line: 997, column: 9)
!5879 = !DILocation(line: 997, column: 15, scope: !5878)
!5880 = !DILocation(line: 997, column: 18, scope: !5878)
!5881 = !DILocation(line: 997, column: 9, scope: !1018)
!5882 = !DILocation(line: 997, column: 30, scope: !5883)
!5883 = !DILexicalBlockFile(scope: !5884, file: !394, discriminator: 1)
!5884 = distinct !DILexicalBlock(scope: !5885, file: !394, line: 997, column: 30)
!5885 = distinct !DILexicalBlock(scope: !5878, file: !394, line: 997, column: 24)
!5886 = !DILocation(line: 997, column: 36, scope: !5884)
!5887 = !DILocation(line: 997, column: 30, scope: !5884)
!5888 = !DILocation(line: 997, column: 30, scope: !5885)
!5889 = !DILocation(line: 997, column: 64, scope: !5890)
!5890 = !DILexicalBlockFile(scope: !5891, file: !394, discriminator: 2)
!5891 = distinct !DILexicalBlock(scope: !5884, file: !394, line: 997, column: 46)
!5892 = !DILocation(line: 997, column: 48, scope: !5891)
!5893 = !DILocation(line: 997, column: 115, scope: !5891)
!5894 = !DILocation(line: 997, column: 140, scope: !5895)
!5895 = !DILexicalBlockFile(scope: !5896, file: !394, discriminator: 3)
!5896 = distinct !DILexicalBlock(scope: !5884, file: !394, line: 997, column: 122)
!5897 = !DILocation(line: 997, column: 124, scope: !5896)
!5898 = !DILocation(line: 997, column: 202, scope: !5899)
!5899 = !DILexicalBlockFile(scope: !5885, file: !394, discriminator: 4)
!5900 = !DILocation(line: 997, column: 202, scope: !5885)
!5901 = !DILocation(line: 999, column: 34, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !1018, file: !394, line: 999, column: 9)
!5903 = !DILocation(line: 999, column: 10, scope: !5902)
!5904 = !DILocation(line: 999, column: 9, scope: !1018)
!5905 = !DILocation(line: 1000, column: 9, scope: !5902)
!5906 = !DILocation(line: 1002, column: 24, scope: !1018)
!5907 = !DILocation(line: 1002, column: 30, scope: !1018)
!5908 = !DILocation(line: 1002, column: 39, scope: !1018)
!5909 = !DILocation(line: 1002, column: 43, scope: !5910)
!5910 = !DILexicalBlockFile(scope: !1018, file: !394, discriminator: 1)
!5911 = !DILocation(line: 1002, column: 49, scope: !1018)
!5912 = !DILocation(line: 1002, column: 43, scope: !1018)
!5913 = !DILocation(line: 1002, column: 58, scope: !1018)
!5914 = !DILocation(line: 1002, column: 61, scope: !5915)
!5915 = !DILexicalBlockFile(scope: !1018, file: !394, discriminator: 3)
!5916 = !DILocation(line: 1002, column: 67, scope: !1018)
!5917 = !DILocation(line: 1002, column: 76, scope: !1018)
!5918 = !DILocation(line: 1002, column: 23, scope: !1018)
!5919 = !DILocation(line: 1002, column: 87, scope: !5920)
!5920 = !DILexicalBlockFile(scope: !1018, file: !394, discriminator: 5)
!5921 = !DILocation(line: 1002, column: 93, scope: !1018)
!5922 = !DILocation(line: 1002, column: 104, scope: !1018)
!5923 = !DILocation(line: 1002, column: 110, scope: !1018)
!5924 = !DILocation(line: 1002, column: 102, scope: !1018)
!5925 = !DILocation(line: 1002, column: 23, scope: !5926)
!5926 = !DILexicalBlockFile(scope: !5927, file: !394, discriminator: 6)
!5927 = !DILexicalBlockFile(scope: !5928, file: !394, discriminator: 4)
!5928 = !DILexicalBlockFile(scope: !1018, file: !394, discriminator: 2)
!5929 = !DILocation(line: 1002, column: 7, scope: !5930)
!5930 = !DILexicalBlockFile(scope: !5931, file: !394, discriminator: 8)
!5931 = !DILexicalBlockFile(scope: !1018, file: !394, discriminator: 7)
!5932 = !DILocation(line: 1003, column: 9, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !1018, file: !394, line: 1003, column: 9)
!5934 = !DILocation(line: 1003, column: 11, scope: !5933)
!5935 = !DILocation(line: 1003, column: 9, scope: !1018)
!5936 = !DILocation(line: 1004, column: 13, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5938, file: !394, line: 1004, column: 13)
!5938 = distinct !DILexicalBlock(scope: !5933, file: !394, line: 1003, column: 16)
!5939 = !DILocation(line: 1004, column: 22, scope: !5937)
!5940 = !DILocation(line: 1004, column: 15, scope: !5937)
!5941 = !DILocation(line: 1004, column: 13, scope: !5938)
!5942 = !DILocation(line: 1005, column: 24, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5937, file: !394, line: 1004, column: 27)
!5944 = !DILocation(line: 1005, column: 29, scope: !5943)
!5945 = !DILocation(line: 1005, column: 35, scope: !5943)
!5946 = !DILocation(line: 1005, column: 44, scope: !5943)
!5947 = !DILocation(line: 1005, column: 50, scope: !5943)
!5948 = !DILocation(line: 1005, column: 42, scope: !5943)
!5949 = !DILocation(line: 1005, column: 59, scope: !5943)
!5950 = !DILocation(line: 1005, column: 13, scope: !5943)
!5951 = !DILocation(line: 1006, column: 30, scope: !5943)
!5952 = !DILocation(line: 1006, column: 13, scope: !5943)
!5953 = !DILocation(line: 1006, column: 19, scope: !5943)
!5954 = !DILocation(line: 1006, column: 23, scope: !5943)
!5955 = !DILocation(line: 1007, column: 42, scope: !5943)
!5956 = !DILocation(line: 1007, column: 19, scope: !5943)
!5957 = !DILocation(line: 1007, column: 17, scope: !5943)
!5958 = !DILocation(line: 1008, column: 13, scope: !5943)
!5959 = !DILocation(line: 1010, column: 20, scope: !5938)
!5960 = !DILocation(line: 1010, column: 25, scope: !5938)
!5961 = !DILocation(line: 1010, column: 31, scope: !5938)
!5962 = !DILocation(line: 1010, column: 40, scope: !5938)
!5963 = !DILocation(line: 1010, column: 46, scope: !5938)
!5964 = !DILocation(line: 1010, column: 38, scope: !5938)
!5965 = !DILocation(line: 1010, column: 51, scope: !5938)
!5966 = !DILocation(line: 1010, column: 9, scope: !5938)
!5967 = !DILocation(line: 1011, column: 22, scope: !5938)
!5968 = !DILocation(line: 1011, column: 9, scope: !5938)
!5969 = !DILocation(line: 1011, column: 15, scope: !5938)
!5970 = !DILocation(line: 1011, column: 19, scope: !5938)
!5971 = !DILocation(line: 1012, column: 19, scope: !5938)
!5972 = !DILocation(line: 1012, column: 17, scope: !5938)
!5973 = !DILocation(line: 1013, column: 5, scope: !5938)
!5974 = !DILocation(line: 1015, column: 35, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !1018, file: !394, line: 1015, column: 9)
!5976 = !DILocation(line: 1015, column: 41, scope: !5975)
!5977 = !DILocation(line: 1015, column: 13, scope: !5975)
!5978 = !DILocation(line: 1015, column: 84, scope: !5975)
!5979 = !DILocation(line: 1015, column: 13, scope: !5980)
!5980 = !DILexicalBlockFile(scope: !5975, file: !394, discriminator: 1)
!5981 = !DILocation(line: 1015, column: 77, scope: !5982)
!5982 = !DILexicalBlockFile(scope: !5975, file: !394, discriminator: 2)
!5983 = !DILocation(line: 1015, column: 56, scope: !5975)
!5984 = !DILocation(line: 1015, column: 102, scope: !5985)
!5985 = !DILexicalBlockFile(scope: !5986, file: !394, discriminator: 4)
!5986 = !DILexicalBlockFile(scope: !5975, file: !394, discriminator: 3)
!5987 = !DILocation(line: 1015, column: 88, scope: !5975)
!5988 = !DILocation(line: 1015, column: 94, scope: !5975)
!5989 = !DILocation(line: 1015, column: 100, scope: !5975)
!5990 = !DILocation(line: 1015, column: 9, scope: !1018)
!5991 = !DILocation(line: 1016, column: 9, scope: !5975)
!5992 = !DILocation(line: 1018, column: 9, scope: !1030)
!5993 = !DILocation(line: 1018, column: 15, scope: !1030)
!5994 = !DILocation(line: 1018, column: 9, scope: !1018)
!5995 = !DILocation(line: 1019, column: 50, scope: !1029)
!5996 = !DILocation(line: 1019, column: 15, scope: !1029)
!5997 = !DILocation(line: 1019, column: 13, scope: !1029)
!5998 = !DILocation(line: 1020, column: 13, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !1029, file: !394, line: 1020, column: 13)
!6000 = !DILocation(line: 1020, column: 17, scope: !5999)
!6001 = !DILocation(line: 1020, column: 13, scope: !1029)
!6002 = !DILocation(line: 1021, column: 13, scope: !5999)
!6003 = !DILocation(line: 1022, column: 9, scope: !1029)
!6004 = !DILocation(line: 1022, column: 14, scope: !6005)
!6005 = !DILexicalBlockFile(scope: !1028, file: !394, discriminator: 1)
!6006 = !DILocation(line: 1022, column: 24, scope: !1028)
!6007 = !DILocation(line: 1022, column: 47, scope: !1028)
!6008 = !DILocation(line: 1022, column: 57, scope: !1034)
!6009 = !DILocation(line: 1022, column: 65, scope: !1034)
!6010 = !DILocation(line: 1022, column: 57, scope: !1028)
!6011 = !DILocation(line: 1022, column: 88, scope: !6012)
!6012 = !DILexicalBlockFile(scope: !1033, file: !394, discriminator: 2)
!6013 = !DILocation(line: 1022, column: 102, scope: !1033)
!6014 = !DILocation(line: 1022, column: 107, scope: !6015)
!6015 = !DILexicalBlockFile(scope: !1032, file: !394, discriminator: 4)
!6016 = !DILocation(line: 1022, column: 117, scope: !1032)
!6017 = !DILocation(line: 1022, column: 147, scope: !1032)
!6018 = !DILocation(line: 1022, column: 165, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !1032, file: !394, line: 1022, column: 162)
!6020 = !DILocation(line: 1022, column: 182, scope: !6019)
!6021 = !DILocation(line: 1022, column: 162, scope: !6019)
!6022 = !DILocation(line: 1022, column: 192, scope: !6019)
!6023 = !DILocation(line: 1022, column: 162, scope: !1032)
!6024 = !DILocation(line: 1022, column: 162, scope: !6025)
!6025 = !DILexicalBlockFile(scope: !1032, file: !394, discriminator: 5)
!6026 = !DILocation(line: 1022, column: 223, scope: !6027)
!6027 = !DILexicalBlockFile(scope: !6019, file: !394, discriminator: 6)
!6028 = !DILocation(line: 1022, column: 241, scope: !6019)
!6029 = !DILocation(line: 1022, column: 251, scope: !6019)
!6030 = !DILocation(line: 1022, column: 276, scope: !6019)
!6031 = !DILocation(line: 1022, column: 207, scope: !6019)
!6032 = !DILocation(line: 1022, column: 295, scope: !6033)
!6033 = !DILexicalBlockFile(scope: !1033, file: !394, discriminator: 7)
!6034 = !DILocation(line: 1022, column: 295, scope: !1032)
!6035 = !DILocation(line: 1022, column: 295, scope: !6036)
!6036 = !DILexicalBlockFile(scope: !1032, file: !394, discriminator: 8)
!6037 = !DILocation(line: 1022, column: 308, scope: !6038)
!6038 = !DILexicalBlockFile(scope: !1033, file: !394, discriminator: 9)
!6039 = !DILocation(line: 1022, column: 310, scope: !6040)
!6040 = !DILexicalBlockFile(scope: !6041, file: !394, discriminator: 10)
!6041 = !DILexicalBlockFile(scope: !1029, file: !394, discriminator: 3)
!6042 = !DILocation(line: 1022, column: 310, scope: !1028)
!6043 = !DILocation(line: 1022, column: 310, scope: !6044)
!6044 = !DILexicalBlockFile(scope: !1028, file: !394, discriminator: 11)
!6045 = !DILocation(line: 1023, column: 5, scope: !1029)
!6046 = !DILocation(line: 1025, column: 31, scope: !1018)
!6047 = !DILocation(line: 1025, column: 5, scope: !1018)
!6048 = !DILocation(line: 1026, column: 5, scope: !1018)
!6049 = !DILocation(line: 1026, column: 11, scope: !1018)
!6050 = !DILocation(line: 1026, column: 15, scope: !1018)
!6051 = !DILocation(line: 1028, column: 26, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !1018, file: !394, line: 1028, column: 5)
!6053 = !DILocation(line: 1028, column: 32, scope: !6052)
!6054 = !DILocation(line: 1028, column: 30, scope: !6052)
!6055 = !DILocation(line: 1028, column: 20, scope: !6052)
!6056 = !DILocation(line: 1028, column: 10, scope: !6052)
!6057 = !DILocation(line: 1029, column: 10, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6052, file: !394, line: 1028, column: 5)
!6059 = !DILocation(line: 1029, column: 20, scope: !6058)
!6060 = !DILocation(line: 1028, column: 5, scope: !6052)
!6061 = !DILocation(line: 1033, column: 13, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !394, line: 1033, column: 13)
!6063 = distinct !DILexicalBlock(scope: !6058, file: !394, line: 1030, column: 40)
!6064 = !DILocation(line: 1033, column: 25, scope: !6062)
!6065 = !DILocation(line: 1033, column: 31, scope: !6062)
!6066 = !DILocation(line: 1033, column: 23, scope: !6062)
!6067 = !DILocation(line: 1033, column: 13, scope: !6063)
!6068 = !DILocation(line: 1034, column: 42, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6062, file: !394, line: 1033, column: 44)
!6070 = !DILocation(line: 1034, column: 61, scope: !6069)
!6071 = !DILocation(line: 1034, column: 67, scope: !6069)
!6072 = !DILocation(line: 1034, column: 65, scope: !6069)
!6073 = !DILocation(line: 1035, column: 42, scope: !6069)
!6074 = !DILocation(line: 1034, column: 17, scope: !6069)
!6075 = !DILocation(line: 1034, column: 15, scope: !6069)
!6076 = !DILocation(line: 1036, column: 9, scope: !6069)
!6077 = !DILocation(line: 1038, column: 45, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6062, file: !394, line: 1037, column: 14)
!6079 = !DILocation(line: 1038, column: 17, scope: !6078)
!6080 = !DILocation(line: 1038, column: 15, scope: !6078)
!6081 = !DILocation(line: 1039, column: 17, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6078, file: !394, line: 1039, column: 17)
!6083 = !DILocation(line: 1039, column: 19, scope: !6082)
!6084 = !DILocation(line: 1039, column: 17, scope: !6078)
!6085 = !DILocation(line: 1040, column: 21, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6087, file: !394, line: 1040, column: 21)
!6087 = distinct !DILexicalBlock(scope: !6082, file: !394, line: 1039, column: 24)
!6088 = !DILocation(line: 1040, column: 25, scope: !6086)
!6089 = !DILocation(line: 1040, column: 23, scope: !6086)
!6090 = !DILocation(line: 1040, column: 21, scope: !6087)
!6091 = !DILocation(line: 1041, column: 25, scope: !6086)
!6092 = !DILocation(line: 1041, column: 23, scope: !6086)
!6093 = !DILocation(line: 1041, column: 21, scope: !6086)
!6094 = !DILocation(line: 1042, column: 37, scope: !6087)
!6095 = !DILocation(line: 1042, column: 43, scope: !6087)
!6096 = !DILocation(line: 1042, column: 41, scope: !6087)
!6097 = !DILocation(line: 1043, column: 24, scope: !6087)
!6098 = !DILocation(line: 1043, column: 30, scope: !6087)
!6099 = !DILocation(line: 1043, column: 39, scope: !6087)
!6100 = !DILocation(line: 1043, column: 45, scope: !6087)
!6101 = !DILocation(line: 1043, column: 37, scope: !6087)
!6102 = !DILocation(line: 1043, column: 50, scope: !6087)
!6103 = !DILocation(line: 1042, column: 17, scope: !6087)
!6104 = !DILocation(line: 1044, column: 30, scope: !6087)
!6105 = !DILocation(line: 1044, column: 17, scope: !6087)
!6106 = !DILocation(line: 1044, column: 23, scope: !6087)
!6107 = !DILocation(line: 1044, column: 27, scope: !6087)
!6108 = !DILocation(line: 1045, column: 17, scope: !6087)
!6109 = !DILocation(line: 1048, column: 13, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6063, file: !394, line: 1048, column: 13)
!6111 = !DILocation(line: 1048, column: 15, scope: !6110)
!6112 = !DILocation(line: 1048, column: 20, scope: !6110)
!6113 = !DILocation(line: 1048, column: 24, scope: !6114)
!6114 = !DILexicalBlockFile(scope: !6110, file: !394, discriminator: 1)
!6115 = !DILocation(line: 1048, column: 26, scope: !6110)
!6116 = !DILocation(line: 1048, column: 32, scope: !6110)
!6117 = !DILocation(line: 1048, column: 35, scope: !6118)
!6118 = !DILexicalBlockFile(scope: !6110, file: !394, discriminator: 2)
!6119 = !DILocation(line: 1048, column: 43, scope: !6110)
!6120 = !DILocation(line: 1048, column: 13, scope: !6063)
!6121 = !DILocation(line: 1049, column: 13, scope: !6110)
!6122 = !DILocation(line: 1050, column: 13, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6063, file: !394, line: 1050, column: 13)
!6124 = !DILocation(line: 1050, column: 15, scope: !6123)
!6125 = !DILocation(line: 1050, column: 13, scope: !6063)
!6126 = !DILocation(line: 1051, column: 17, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6128, file: !394, line: 1051, column: 17)
!6128 = distinct !DILexicalBlock(scope: !6123, file: !394, line: 1050, column: 20)
!6129 = !DILocation(line: 1051, column: 19, scope: !6127)
!6130 = !DILocation(line: 1051, column: 17, scope: !6128)
!6131 = !DILocation(line: 1052, column: 63, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6127, file: !394, line: 1051, column: 26)
!6133 = !DILocation(line: 1053, column: 21, scope: !6132)
!6134 = !DILocation(line: 1054, column: 13, scope: !6132)
!6135 = !DILocation(line: 1055, column: 13, scope: !6128)
!6136 = !DILocation(line: 1057, column: 5, scope: !6063)
!6137 = !DILocation(line: 1030, column: 21, scope: !6058)
!6138 = !DILocation(line: 1030, column: 18, scope: !6058)
!6139 = !DILocation(line: 1030, column: 37, scope: !6058)
!6140 = !DILocation(line: 1030, column: 34, scope: !6058)
!6141 = !DILocation(line: 1028, column: 5, scope: !6058)
!6142 = !DILocation(line: 1058, column: 30, scope: !1018)
!6143 = !DILocation(line: 1058, column: 11, scope: !1018)
!6144 = !DILocation(line: 1058, column: 9, scope: !1018)
!6145 = !DILocation(line: 1058, column: 5, scope: !1018)
!6146 = !DILocation(line: 1061, column: 5, scope: !1018)
!6147 = !DILocation(line: 1061, column: 10, scope: !6148)
!6148 = !DILexicalBlockFile(scope: !6149, file: !394, discriminator: 1)
!6149 = distinct !DILexicalBlock(scope: !1018, file: !394, line: 1061, column: 8)
!6150 = !DILocation(line: 1061, column: 16, scope: !6149)
!6151 = !DILocation(line: 1061, column: 22, scope: !6149)
!6152 = !DILocation(line: 1061, column: 49, scope: !6149)
!6153 = !DILocation(line: 1061, column: 55, scope: !6149)
!6154 = !DILocation(line: 1061, column: 27, scope: !6149)
!6155 = !DILocation(line: 1061, column: 62, scope: !6149)
!6156 = !DILocation(line: 1061, column: 62, scope: !6157)
!6157 = !DILexicalBlockFile(scope: !6149, file: !394, discriminator: 2)
!6158 = !DILocation(line: 1061, column: 62, scope: !6159)
!6159 = !DILexicalBlockFile(scope: !6149, file: !394, discriminator: 3)
!6160 = !DILocation(line: 1063, column: 5, scope: !1018)
!6161 = !DILocation(line: 1064, column: 12, scope: !1018)
!6162 = !DILocation(line: 1064, column: 5, scope: !1018)
!6163 = !DILocation(line: 1065, column: 1, scope: !1018)
!6164 = !DILocation(line: 1179, column: 29, scope: !1035)
!6165 = !DILocation(line: 1179, column: 45, scope: !1035)
!6166 = !DILocation(line: 1181, column: 5, scope: !1035)
!6167 = !DILocation(line: 1181, column: 16, scope: !1035)
!6168 = !DILocation(line: 1183, column: 9, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !1035, file: !394, line: 1183, column: 9)
!6170 = !DILocation(line: 1183, column: 15, scope: !6169)
!6171 = !DILocation(line: 1183, column: 18, scope: !6169)
!6172 = !DILocation(line: 1183, column: 9, scope: !1035)
!6173 = !DILocation(line: 1183, column: 30, scope: !6174)
!6174 = !DILexicalBlockFile(scope: !6175, file: !394, discriminator: 1)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !394, line: 1183, column: 30)
!6176 = distinct !DILexicalBlock(scope: !6169, file: !394, line: 1183, column: 24)
!6177 = !DILocation(line: 1183, column: 36, scope: !6175)
!6178 = !DILocation(line: 1183, column: 30, scope: !6175)
!6179 = !DILocation(line: 1183, column: 30, scope: !6176)
!6180 = !DILocation(line: 1183, column: 64, scope: !6181)
!6181 = !DILexicalBlockFile(scope: !6182, file: !394, discriminator: 2)
!6182 = distinct !DILexicalBlock(scope: !6175, file: !394, line: 1183, column: 46)
!6183 = !DILocation(line: 1183, column: 48, scope: !6182)
!6184 = !DILocation(line: 1183, column: 115, scope: !6182)
!6185 = !DILocation(line: 1183, column: 140, scope: !6186)
!6186 = !DILexicalBlockFile(scope: !6187, file: !394, discriminator: 3)
!6187 = distinct !DILexicalBlock(scope: !6175, file: !394, line: 1183, column: 122)
!6188 = !DILocation(line: 1183, column: 124, scope: !6187)
!6189 = !DILocation(line: 1183, column: 202, scope: !6190)
!6190 = !DILexicalBlockFile(scope: !6176, file: !394, discriminator: 4)
!6191 = !DILocation(line: 1183, column: 202, scope: !6176)
!6192 = !DILocation(line: 1184, column: 34, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !1035, file: !394, line: 1184, column: 9)
!6194 = !DILocation(line: 1184, column: 10, scope: !6193)
!6195 = !DILocation(line: 1184, column: 9, scope: !1035)
!6196 = !DILocation(line: 1185, column: 9, scope: !6193)
!6197 = !DILocation(line: 1186, column: 31, scope: !1035)
!6198 = !DILocation(line: 1186, column: 37, scope: !1035)
!6199 = !DILocation(line: 1186, column: 12, scope: !1035)
!6200 = !DILocation(line: 1186, column: 5, scope: !1035)
!6201 = !DILocation(line: 1187, column: 1, scope: !1035)
!6202 = !DILocation(line: 1205, column: 25, scope: !1040)
!6203 = !DILocation(line: 1205, column: 41, scope: !1040)
!6204 = !DILocation(line: 1207, column: 5, scope: !1040)
!6205 = !DILocation(line: 1207, column: 14, scope: !1040)
!6206 = !DILocation(line: 1207, column: 22, scope: !1040)
!6207 = !DILocation(line: 1208, column: 5, scope: !1040)
!6208 = !DILocation(line: 1208, column: 9, scope: !1040)
!6209 = !DILocation(line: 1209, column: 5, scope: !1040)
!6210 = !DILocation(line: 1209, column: 15, scope: !1040)
!6211 = !DILocation(line: 1209, column: 27, scope: !1040)
!6212 = !DILocation(line: 1211, column: 9, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1211, column: 9)
!6214 = !DILocation(line: 1211, column: 15, scope: !6213)
!6215 = !DILocation(line: 1211, column: 18, scope: !6213)
!6216 = !DILocation(line: 1211, column: 9, scope: !1040)
!6217 = !DILocation(line: 1211, column: 30, scope: !6218)
!6218 = !DILexicalBlockFile(scope: !6219, file: !394, discriminator: 1)
!6219 = distinct !DILexicalBlock(scope: !6220, file: !394, line: 1211, column: 30)
!6220 = distinct !DILexicalBlock(scope: !6213, file: !394, line: 1211, column: 24)
!6221 = !DILocation(line: 1211, column: 36, scope: !6219)
!6222 = !DILocation(line: 1211, column: 30, scope: !6219)
!6223 = !DILocation(line: 1211, column: 30, scope: !6220)
!6224 = !DILocation(line: 1211, column: 64, scope: !6225)
!6225 = !DILexicalBlockFile(scope: !6226, file: !394, discriminator: 2)
!6226 = distinct !DILexicalBlock(scope: !6219, file: !394, line: 1211, column: 46)
!6227 = !DILocation(line: 1211, column: 48, scope: !6226)
!6228 = !DILocation(line: 1211, column: 115, scope: !6226)
!6229 = !DILocation(line: 1211, column: 140, scope: !6230)
!6230 = !DILexicalBlockFile(scope: !6231, file: !394, discriminator: 3)
!6231 = distinct !DILexicalBlock(scope: !6219, file: !394, line: 1211, column: 122)
!6232 = !DILocation(line: 1211, column: 124, scope: !6231)
!6233 = !DILocation(line: 1211, column: 202, scope: !6234)
!6234 = !DILexicalBlockFile(scope: !6220, file: !394, discriminator: 4)
!6235 = !DILocation(line: 1211, column: 202, scope: !6220)
!6236 = !DILocation(line: 1212, column: 34, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1212, column: 9)
!6238 = !DILocation(line: 1212, column: 10, scope: !6237)
!6239 = !DILocation(line: 1212, column: 9, scope: !1040)
!6240 = !DILocation(line: 1213, column: 9, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6237, file: !394, line: 1212, column: 74)
!6242 = !DILocation(line: 1219, column: 10, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1219, column: 9)
!6244 = !DILocation(line: 1219, column: 17, scope: !6243)
!6245 = !DILocation(line: 1219, column: 21, scope: !6243)
!6246 = !DILocation(line: 1219, column: 24, scope: !6247)
!6247 = !DILexicalBlockFile(scope: !6243, file: !394, discriminator: 1)
!6248 = !DILocation(line: 1219, column: 31, scope: !6243)
!6249 = !DILocation(line: 1221, column: 9, scope: !6243)
!6250 = !DILocation(line: 1221, column: 13, scope: !6247)
!6251 = !DILocation(line: 1221, column: 20, scope: !6243)
!6252 = !DILocation(line: 1224, column: 9, scope: !6243)
!6253 = !DILocation(line: 1224, column: 13, scope: !6247)
!6254 = !DILocation(line: 1224, column: 20, scope: !6243)
!6255 = !DILocation(line: 1219, column: 9, scope: !1040)
!6256 = !DILocation(line: 1227, column: 22, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6243, file: !394, line: 1226, column: 11)
!6258 = !DILocation(line: 1228, column: 53, scope: !6257)
!6259 = !DILocation(line: 1227, column: 9, scope: !6257)
!6260 = !DILocation(line: 1229, column: 9, scope: !6257)
!6261 = !DILocation(line: 1232, column: 10, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1232, column: 9)
!6263 = !DILocation(line: 1232, column: 16, scope: !6262)
!6264 = !DILocation(line: 1232, column: 9, scope: !1040)
!6265 = !DILocation(line: 1232, column: 54, scope: !6266)
!6266 = !DILexicalBlockFile(scope: !6262, file: !394, discriminator: 1)
!6267 = !DILocation(line: 1232, column: 60, scope: !6262)
!6268 = !DILocation(line: 1232, column: 37, scope: !6262)
!6269 = !DILocation(line: 1232, column: 83, scope: !6270)
!6270 = !DILexicalBlockFile(scope: !6262, file: !394, discriminator: 2)
!6271 = !DILocation(line: 1232, column: 67, scope: !6262)
!6272 = !DILocation(line: 1232, column: 109, scope: !6273)
!6273 = !DILexicalBlockFile(scope: !6274, file: !394, discriminator: 4)
!6274 = !DILexicalBlockFile(scope: !6275, file: !394, discriminator: 3)
!6275 = distinct !DILexicalBlock(scope: !6262, file: !394, line: 1232, column: 91)
!6276 = !DILocation(line: 1232, column: 93, scope: !6275)
!6277 = !DILocation(line: 1232, column: 151, scope: !6275)
!6278 = !DILocation(line: 1234, column: 34, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1234, column: 9)
!6280 = !DILocation(line: 1234, column: 40, scope: !6279)
!6281 = !DILocation(line: 1234, column: 9, scope: !6279)
!6282 = !DILocation(line: 1234, column: 77, scope: !6279)
!6283 = !DILocation(line: 1234, column: 9, scope: !1040)
!6284 = !DILocation(line: 1235, column: 9, scope: !6279)
!6285 = !DILocation(line: 1237, column: 31, scope: !1040)
!6286 = !DILocation(line: 1237, column: 42, scope: !1040)
!6287 = !DILocation(line: 1237, column: 14, scope: !1040)
!6288 = !DILocation(line: 1237, column: 12, scope: !1040)
!6289 = !DILocation(line: 1238, column: 9, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1238, column: 9)
!6291 = !DILocation(line: 1238, column: 16, scope: !6290)
!6292 = !DILocation(line: 1238, column: 22, scope: !6290)
!6293 = !DILocation(line: 1238, column: 25, scope: !6294)
!6294 = !DILexicalBlockFile(scope: !6290, file: !394, discriminator: 1)
!6295 = !DILocation(line: 1238, column: 9, scope: !1040)
!6296 = !DILocation(line: 1239, column: 9, scope: !6290)
!6297 = !DILocation(line: 1245, column: 11, scope: !1051)
!6298 = !DILocation(line: 1245, column: 18, scope: !1051)
!6299 = !DILocation(line: 1245, column: 24, scope: !1051)
!6300 = !DILocation(line: 1245, column: 28, scope: !6301)
!6301 = !DILexicalBlockFile(scope: !1051, file: !394, discriminator: 2)
!6302 = !DILocation(line: 1245, column: 35, scope: !1051)
!6303 = !DILocation(line: 1245, column: 42, scope: !1051)
!6304 = !DILocation(line: 1245, column: 45, scope: !6305)
!6305 = !DILexicalBlockFile(scope: !6306, file: !394, discriminator: 3)
!6306 = !DILexicalBlockFile(scope: !1051, file: !394, discriminator: 1)
!6307 = !DILocation(line: 1245, column: 51, scope: !1051)
!6308 = !DILocation(line: 1245, column: 45, scope: !1051)
!6309 = !DILocation(line: 1245, column: 9, scope: !1040)
!6310 = !DILocation(line: 1246, column: 9, scope: !1050)
!6311 = !DILocation(line: 1246, column: 18, scope: !1050)
!6312 = !DILocation(line: 1246, column: 27, scope: !1050)
!6313 = !DILocation(line: 1253, column: 20, scope: !1050)
!6314 = !DILocation(line: 1253, column: 26, scope: !1050)
!6315 = !DILocation(line: 1253, column: 34, scope: !1050)
!6316 = !DILocation(line: 1253, column: 42, scope: !6317)
!6317 = !DILexicalBlockFile(scope: !1050, file: !394, discriminator: 1)
!6318 = !DILocation(line: 1253, column: 48, scope: !1050)
!6319 = !DILocation(line: 1253, column: 77, scope: !6320)
!6320 = !DILexicalBlockFile(scope: !1050, file: !394, discriminator: 2)
!6321 = !DILocation(line: 1253, column: 58, scope: !1050)
!6322 = !DILocation(line: 1253, column: 17, scope: !6323)
!6323 = !DILexicalBlockFile(scope: !6324, file: !394, discriminator: 4)
!6324 = !DILexicalBlockFile(scope: !1050, file: !394, discriminator: 3)
!6325 = !DILocation(line: 1254, column: 19, scope: !1050)
!6326 = !DILocation(line: 1254, column: 25, scope: !1050)
!6327 = !DILocation(line: 1254, column: 34, scope: !1050)
!6328 = !DILocation(line: 1254, column: 38, scope: !6317)
!6329 = !DILocation(line: 1254, column: 44, scope: !1050)
!6330 = !DILocation(line: 1254, column: 38, scope: !1050)
!6331 = !DILocation(line: 1254, column: 53, scope: !1050)
!6332 = !DILocation(line: 1254, column: 56, scope: !6324)
!6333 = !DILocation(line: 1254, column: 62, scope: !1050)
!6334 = !DILocation(line: 1254, column: 71, scope: !1050)
!6335 = !DILocation(line: 1254, column: 18, scope: !1050)
!6336 = !DILocation(line: 1254, column: 82, scope: !6337)
!6337 = !DILexicalBlockFile(scope: !1050, file: !394, discriminator: 5)
!6338 = !DILocation(line: 1254, column: 88, scope: !1050)
!6339 = !DILocation(line: 1254, column: 99, scope: !1050)
!6340 = !DILocation(line: 1254, column: 105, scope: !1050)
!6341 = !DILocation(line: 1254, column: 97, scope: !1050)
!6342 = !DILocation(line: 1254, column: 18, scope: !6343)
!6343 = !DILexicalBlockFile(scope: !6344, file: !394, discriminator: 6)
!6344 = !DILexicalBlockFile(scope: !6320, file: !394, discriminator: 4)
!6345 = !DILocation(line: 1254, column: 15, scope: !6346)
!6346 = !DILexicalBlockFile(scope: !6347, file: !394, discriminator: 8)
!6347 = !DILexicalBlockFile(scope: !1050, file: !394, discriminator: 7)
!6348 = !DILocation(line: 1255, column: 13, scope: !1055)
!6349 = !DILocation(line: 1255, column: 19, scope: !1055)
!6350 = !DILocation(line: 1255, column: 13, scope: !1050)
!6351 = !DILocation(line: 1256, column: 13, scope: !1054)
!6352 = !DILocation(line: 1256, column: 22, scope: !1054)
!6353 = !DILocation(line: 1257, column: 17, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !1054, file: !394, line: 1257, column: 17)
!6355 = !DILocation(line: 1257, column: 24, scope: !6354)
!6356 = !DILocation(line: 1257, column: 17, scope: !1054)
!6357 = !DILocation(line: 1258, column: 26, scope: !6354)
!6358 = !DILocation(line: 1258, column: 36, scope: !6354)
!6359 = !DILocation(line: 1258, column: 50, scope: !6354)
!6360 = !DILocation(line: 1258, column: 56, scope: !6354)
!6361 = !DILocation(line: 1258, column: 65, scope: !6354)
!6362 = !DILocation(line: 1258, column: 68, scope: !6363)
!6363 = !DILexicalBlockFile(scope: !6354, file: !394, discriminator: 1)
!6364 = !DILocation(line: 1258, column: 74, scope: !6354)
!6365 = !DILocation(line: 1258, column: 83, scope: !6354)
!6366 = !DILocation(line: 1258, column: 90, scope: !6354)
!6367 = !DILocation(line: 1258, column: 94, scope: !6368)
!6368 = !DILexicalBlockFile(scope: !6369, file: !394, discriminator: 4)
!6369 = !DILexicalBlockFile(scope: !6354, file: !394, discriminator: 2)
!6370 = !DILocation(line: 1258, column: 100, scope: !6354)
!6371 = !DILocation(line: 1258, column: 94, scope: !6354)
!6372 = !DILocation(line: 1258, column: 109, scope: !6354)
!6373 = !DILocation(line: 1258, column: 112, scope: !6374)
!6374 = !DILexicalBlockFile(scope: !6354, file: !394, discriminator: 5)
!6375 = !DILocation(line: 1258, column: 118, scope: !6354)
!6376 = !DILocation(line: 1258, column: 128, scope: !6354)
!6377 = !DILocation(line: 1258, column: 136, scope: !6354)
!6378 = !DILocation(line: 1258, column: 139, scope: !6379)
!6379 = !DILexicalBlockFile(scope: !6380, file: !394, discriminator: 7)
!6380 = !DILexicalBlockFile(scope: !6354, file: !394, discriminator: 3)
!6381 = !DILocation(line: 1258, column: 145, scope: !6354)
!6382 = !DILocation(line: 1258, column: 153, scope: !6354)
!6383 = !DILocation(line: 1258, column: 47, scope: !6354)
!6384 = !DILocation(line: 1258, column: 161, scope: !6385)
!6385 = !DILexicalBlockFile(scope: !6354, file: !394, discriminator: 9)
!6386 = !DILocation(line: 1258, column: 167, scope: !6354)
!6387 = !DILocation(line: 1258, column: 177, scope: !6354)
!6388 = !DILocation(line: 1258, column: 183, scope: !6354)
!6389 = !DILocation(line: 1258, column: 175, scope: !6354)
!6390 = !DILocation(line: 1258, column: 47, scope: !6391)
!6391 = !DILexicalBlockFile(scope: !6392, file: !394, discriminator: 10)
!6392 = !DILexicalBlockFile(scope: !6393, file: !394, discriminator: 8)
!6393 = !DILexicalBlockFile(scope: !6354, file: !394, discriminator: 6)
!6394 = !DILocation(line: 1258, column: 44, scope: !6395)
!6395 = !DILexicalBlockFile(scope: !6396, file: !394, discriminator: 12)
!6396 = !DILexicalBlockFile(scope: !6354, file: !394, discriminator: 11)
!6397 = !DILocation(line: 1258, column: 33, scope: !6354)
!6398 = !DILocation(line: 1258, column: 24, scope: !6354)
!6399 = !DILocation(line: 1258, column: 17, scope: !6354)
!6400 = !DILocation(line: 1260, column: 26, scope: !6354)
!6401 = !DILocation(line: 1260, column: 24, scope: !6354)
!6402 = !DILocation(line: 1261, column: 17, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !1054, file: !394, line: 1261, column: 17)
!6404 = !DILocation(line: 1261, column: 28, scope: !6403)
!6405 = !DILocation(line: 1261, column: 34, scope: !6403)
!6406 = !DILocation(line: 1261, column: 27, scope: !6403)
!6407 = !DILocation(line: 1261, column: 24, scope: !6403)
!6408 = !DILocation(line: 1261, column: 38, scope: !6403)
!6409 = !DILocation(line: 1261, column: 41, scope: !6410)
!6410 = !DILexicalBlockFile(scope: !6403, file: !394, discriminator: 1)
!6411 = !DILocation(line: 1261, column: 51, scope: !6403)
!6412 = !DILocation(line: 1261, column: 48, scope: !6403)
!6413 = !DILocation(line: 1261, column: 17, scope: !1054)
!6414 = !DILocation(line: 1262, column: 30, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6403, file: !394, line: 1261, column: 58)
!6416 = !DILocation(line: 1262, column: 17, scope: !6415)
!6417 = !DILocation(line: 1262, column: 23, scope: !6415)
!6418 = !DILocation(line: 1262, column: 27, scope: !6415)
!6419 = !DILocation(line: 1263, column: 43, scope: !6415)
!6420 = !DILocation(line: 1263, column: 53, scope: !6415)
!6421 = !DILocation(line: 1263, column: 51, scope: !6415)
!6422 = !DILocation(line: 1263, column: 61, scope: !6415)
!6423 = !DILocation(line: 1263, column: 59, scope: !6415)
!6424 = !DILocation(line: 1263, column: 24, scope: !6415)
!6425 = !DILocation(line: 1263, column: 17, scope: !6415)
!6426 = !DILocation(line: 1265, column: 9, scope: !1055)
!6427 = !DILocation(line: 1265, column: 9, scope: !6428)
!6428 = !DILexicalBlockFile(scope: !1055, file: !394, discriminator: 1)
!6429 = !DILocation(line: 1265, column: 9, scope: !1054)
!6430 = !DILocation(line: 1266, column: 5, scope: !1051)
!6431 = !DILocation(line: 1266, column: 5, scope: !6306)
!6432 = !DILocation(line: 1266, column: 5, scope: !1050)
!6433 = !DILocation(line: 1268, column: 35, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1268, column: 9)
!6435 = !DILocation(line: 1268, column: 41, scope: !6434)
!6436 = !DILocation(line: 1268, column: 13, scope: !6434)
!6437 = !DILocation(line: 1268, column: 84, scope: !6434)
!6438 = !DILocation(line: 1268, column: 13, scope: !6439)
!6439 = !DILexicalBlockFile(scope: !6434, file: !394, discriminator: 1)
!6440 = !DILocation(line: 1268, column: 77, scope: !6441)
!6441 = !DILexicalBlockFile(scope: !6434, file: !394, discriminator: 2)
!6442 = !DILocation(line: 1268, column: 56, scope: !6434)
!6443 = !DILocation(line: 1268, column: 102, scope: !6444)
!6444 = !DILexicalBlockFile(scope: !6445, file: !394, discriminator: 4)
!6445 = !DILexicalBlockFile(scope: !6434, file: !394, discriminator: 3)
!6446 = !DILocation(line: 1268, column: 88, scope: !6434)
!6447 = !DILocation(line: 1268, column: 94, scope: !6434)
!6448 = !DILocation(line: 1268, column: 100, scope: !6434)
!6449 = !DILocation(line: 1268, column: 9, scope: !1040)
!6450 = !DILocation(line: 1269, column: 9, scope: !6434)
!6451 = !DILocation(line: 1272, column: 9, scope: !1059)
!6452 = !DILocation(line: 1272, column: 15, scope: !1059)
!6453 = !DILocation(line: 1272, column: 9, scope: !1040)
!6454 = !DILocation(line: 1273, column: 46, scope: !1058)
!6455 = !DILocation(line: 1273, column: 15, scope: !1058)
!6456 = !DILocation(line: 1273, column: 13, scope: !1058)
!6457 = !DILocation(line: 1274, column: 13, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !1058, file: !394, line: 1274, column: 13)
!6459 = !DILocation(line: 1274, column: 17, scope: !6458)
!6460 = !DILocation(line: 1274, column: 13, scope: !1058)
!6461 = !DILocation(line: 1275, column: 13, scope: !6458)
!6462 = !DILocation(line: 1276, column: 9, scope: !1058)
!6463 = !DILocation(line: 1276, column: 14, scope: !6464)
!6464 = !DILexicalBlockFile(scope: !1057, file: !394, discriminator: 1)
!6465 = !DILocation(line: 1276, column: 24, scope: !1057)
!6466 = !DILocation(line: 1276, column: 47, scope: !1057)
!6467 = !DILocation(line: 1276, column: 57, scope: !1063)
!6468 = !DILocation(line: 1276, column: 65, scope: !1063)
!6469 = !DILocation(line: 1276, column: 57, scope: !1057)
!6470 = !DILocation(line: 1276, column: 88, scope: !6471)
!6471 = !DILexicalBlockFile(scope: !1062, file: !394, discriminator: 2)
!6472 = !DILocation(line: 1276, column: 102, scope: !1062)
!6473 = !DILocation(line: 1276, column: 107, scope: !6474)
!6474 = !DILexicalBlockFile(scope: !1061, file: !394, discriminator: 4)
!6475 = !DILocation(line: 1276, column: 117, scope: !1061)
!6476 = !DILocation(line: 1276, column: 147, scope: !1061)
!6477 = !DILocation(line: 1276, column: 165, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !1061, file: !394, line: 1276, column: 162)
!6479 = !DILocation(line: 1276, column: 182, scope: !6478)
!6480 = !DILocation(line: 1276, column: 162, scope: !6478)
!6481 = !DILocation(line: 1276, column: 192, scope: !6478)
!6482 = !DILocation(line: 1276, column: 162, scope: !1061)
!6483 = !DILocation(line: 1276, column: 162, scope: !6484)
!6484 = !DILexicalBlockFile(scope: !1061, file: !394, discriminator: 5)
!6485 = !DILocation(line: 1276, column: 223, scope: !6486)
!6486 = !DILexicalBlockFile(scope: !6478, file: !394, discriminator: 6)
!6487 = !DILocation(line: 1276, column: 241, scope: !6478)
!6488 = !DILocation(line: 1276, column: 251, scope: !6478)
!6489 = !DILocation(line: 1276, column: 276, scope: !6478)
!6490 = !DILocation(line: 1276, column: 207, scope: !6478)
!6491 = !DILocation(line: 1276, column: 295, scope: !6492)
!6492 = !DILexicalBlockFile(scope: !1062, file: !394, discriminator: 7)
!6493 = !DILocation(line: 1276, column: 295, scope: !1061)
!6494 = !DILocation(line: 1276, column: 295, scope: !6495)
!6495 = !DILexicalBlockFile(scope: !1061, file: !394, discriminator: 8)
!6496 = !DILocation(line: 1276, column: 308, scope: !6497)
!6497 = !DILexicalBlockFile(scope: !1062, file: !394, discriminator: 9)
!6498 = !DILocation(line: 1276, column: 310, scope: !6499)
!6499 = !DILexicalBlockFile(scope: !6500, file: !394, discriminator: 10)
!6500 = !DILexicalBlockFile(scope: !1058, file: !394, discriminator: 3)
!6501 = !DILocation(line: 1276, column: 310, scope: !1057)
!6502 = !DILocation(line: 1276, column: 310, scope: !6503)
!6503 = !DILexicalBlockFile(scope: !1057, file: !394, discriminator: 11)
!6504 = !DILocation(line: 1277, column: 35, scope: !1058)
!6505 = !DILocation(line: 1277, column: 9, scope: !1058)
!6506 = !DILocation(line: 1278, column: 5, scope: !1058)
!6507 = !DILocation(line: 1281, column: 9, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1281, column: 9)
!6509 = !DILocation(line: 1281, column: 16, scope: !6508)
!6510 = !DILocation(line: 1281, column: 9, scope: !1040)
!6511 = !DILocation(line: 1282, column: 23, scope: !6508)
!6512 = !DILocation(line: 1282, column: 29, scope: !6508)
!6513 = !DILocation(line: 1282, column: 38, scope: !6508)
!6514 = !DILocation(line: 1282, column: 41, scope: !6515)
!6515 = !DILexicalBlockFile(scope: !6508, file: !394, discriminator: 1)
!6516 = !DILocation(line: 1282, column: 47, scope: !6508)
!6517 = !DILocation(line: 1282, column: 56, scope: !6508)
!6518 = !DILocation(line: 1282, column: 63, scope: !6508)
!6519 = !DILocation(line: 1282, column: 67, scope: !6520)
!6520 = !DILexicalBlockFile(scope: !6521, file: !394, discriminator: 4)
!6521 = !DILexicalBlockFile(scope: !6508, file: !394, discriminator: 2)
!6522 = !DILocation(line: 1282, column: 73, scope: !6508)
!6523 = !DILocation(line: 1282, column: 67, scope: !6508)
!6524 = !DILocation(line: 1282, column: 82, scope: !6508)
!6525 = !DILocation(line: 1282, column: 85, scope: !6526)
!6526 = !DILexicalBlockFile(scope: !6508, file: !394, discriminator: 5)
!6527 = !DILocation(line: 1282, column: 91, scope: !6508)
!6528 = !DILocation(line: 1282, column: 101, scope: !6508)
!6529 = !DILocation(line: 1282, column: 109, scope: !6508)
!6530 = !DILocation(line: 1282, column: 112, scope: !6531)
!6531 = !DILexicalBlockFile(scope: !6532, file: !394, discriminator: 7)
!6532 = !DILexicalBlockFile(scope: !6508, file: !394, discriminator: 3)
!6533 = !DILocation(line: 1282, column: 118, scope: !6508)
!6534 = !DILocation(line: 1282, column: 126, scope: !6508)
!6535 = !DILocation(line: 1282, column: 20, scope: !6508)
!6536 = !DILocation(line: 1282, column: 134, scope: !6537)
!6537 = !DILexicalBlockFile(scope: !6508, file: !394, discriminator: 9)
!6538 = !DILocation(line: 1282, column: 140, scope: !6508)
!6539 = !DILocation(line: 1282, column: 150, scope: !6508)
!6540 = !DILocation(line: 1282, column: 156, scope: !6508)
!6541 = !DILocation(line: 1282, column: 148, scope: !6508)
!6542 = !DILocation(line: 1282, column: 20, scope: !6543)
!6543 = !DILexicalBlockFile(scope: !6544, file: !394, discriminator: 10)
!6544 = !DILexicalBlockFile(scope: !6545, file: !394, discriminator: 8)
!6545 = !DILexicalBlockFile(scope: !6508, file: !394, discriminator: 6)
!6546 = !DILocation(line: 1282, column: 16, scope: !6547)
!6547 = !DILexicalBlockFile(scope: !6548, file: !394, discriminator: 12)
!6548 = !DILexicalBlockFile(scope: !6508, file: !394, discriminator: 11)
!6549 = !DILocation(line: 1282, column: 9, scope: !6508)
!6550 = !DILocation(line: 1283, column: 28, scope: !1040)
!6551 = !DILocation(line: 1283, column: 34, scope: !1040)
!6552 = !DILocation(line: 1283, column: 42, scope: !1040)
!6553 = !DILocation(line: 1283, column: 9, scope: !1040)
!6554 = !DILocation(line: 1283, column: 7, scope: !1040)
!6555 = !DILocation(line: 1284, column: 9, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1284, column: 9)
!6557 = !DILocation(line: 1284, column: 11, scope: !6556)
!6558 = !DILocation(line: 1284, column: 9, scope: !1040)
!6559 = !DILocation(line: 1285, column: 9, scope: !6556)
!6560 = !DILocation(line: 1286, column: 5, scope: !1040)
!6561 = !DILocation(line: 1286, column: 11, scope: !1040)
!6562 = !DILocation(line: 1286, column: 19, scope: !1040)
!6563 = !DILocation(line: 1287, column: 30, scope: !1040)
!6564 = !DILocation(line: 1287, column: 11, scope: !1040)
!6565 = !DILocation(line: 1287, column: 9, scope: !1040)
!6566 = !DILocation(line: 1288, column: 9, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1288, column: 9)
!6568 = !DILocation(line: 1288, column: 13, scope: !6567)
!6569 = !DILocation(line: 1288, column: 27, scope: !6567)
!6570 = !DILocation(line: 1288, column: 30, scope: !6571)
!6571 = !DILexicalBlockFile(scope: !6567, file: !394, discriminator: 1)
!6572 = !DILocation(line: 1288, column: 36, scope: !6567)
!6573 = !DILocation(line: 1288, column: 30, scope: !6567)
!6574 = !DILocation(line: 1288, column: 9, scope: !1040)
!6575 = !DILocation(line: 1289, column: 35, scope: !6567)
!6576 = !DILocation(line: 1289, column: 9, scope: !6567)
!6577 = !DILocation(line: 1288, column: 36, scope: !6578)
!6578 = !DILexicalBlockFile(scope: !6579, file: !394, discriminator: 3)
!6579 = !DILexicalBlockFile(scope: !6567, file: !394, discriminator: 2)
!6580 = !DILocation(line: 1292, column: 5, scope: !1040)
!6581 = !DILocation(line: 1292, column: 10, scope: !6582)
!6582 = !DILexicalBlockFile(scope: !6583, file: !394, discriminator: 1)
!6583 = distinct !DILexicalBlock(scope: !1040, file: !394, line: 1292, column: 8)
!6584 = !DILocation(line: 1292, column: 16, scope: !6583)
!6585 = !DILocation(line: 1292, column: 22, scope: !6583)
!6586 = !DILocation(line: 1292, column: 49, scope: !6583)
!6587 = !DILocation(line: 1292, column: 55, scope: !6583)
!6588 = !DILocation(line: 1292, column: 27, scope: !6583)
!6589 = !DILocation(line: 1292, column: 62, scope: !6583)
!6590 = !DILocation(line: 1292, column: 62, scope: !6591)
!6591 = !DILexicalBlockFile(scope: !6583, file: !394, discriminator: 2)
!6592 = !DILocation(line: 1293, column: 12, scope: !1040)
!6593 = !DILocation(line: 1293, column: 5, scope: !1040)
!6594 = !DILocation(line: 1294, column: 1, scope: !1040)
!6595 = !DILocation(line: 1191, column: 25, scope: !1073)
!6596 = !DILocation(line: 1191, column: 41, scope: !1073)
!6597 = !DILocation(line: 1193, column: 5, scope: !1073)
!6598 = !DILocation(line: 1193, column: 14, scope: !1073)
!6599 = !DILocation(line: 1195, column: 9, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !1073, file: !394, line: 1195, column: 9)
!6601 = !DILocation(line: 1195, column: 15, scope: !6600)
!6602 = !DILocation(line: 1195, column: 18, scope: !6600)
!6603 = !DILocation(line: 1195, column: 9, scope: !1073)
!6604 = !DILocation(line: 1195, column: 30, scope: !6605)
!6605 = !DILexicalBlockFile(scope: !6606, file: !394, discriminator: 1)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !394, line: 1195, column: 30)
!6607 = distinct !DILexicalBlock(scope: !6600, file: !394, line: 1195, column: 24)
!6608 = !DILocation(line: 1195, column: 36, scope: !6606)
!6609 = !DILocation(line: 1195, column: 30, scope: !6606)
!6610 = !DILocation(line: 1195, column: 30, scope: !6607)
!6611 = !DILocation(line: 1195, column: 64, scope: !6612)
!6612 = !DILexicalBlockFile(scope: !6613, file: !394, discriminator: 2)
!6613 = distinct !DILexicalBlock(scope: !6606, file: !394, line: 1195, column: 46)
!6614 = !DILocation(line: 1195, column: 48, scope: !6613)
!6615 = !DILocation(line: 1195, column: 115, scope: !6613)
!6616 = !DILocation(line: 1195, column: 140, scope: !6617)
!6617 = !DILexicalBlockFile(scope: !6618, file: !394, discriminator: 3)
!6618 = distinct !DILexicalBlock(scope: !6606, file: !394, line: 1195, column: 122)
!6619 = !DILocation(line: 1195, column: 124, scope: !6618)
!6620 = !DILocation(line: 1195, column: 202, scope: !6621)
!6621 = !DILexicalBlockFile(scope: !6607, file: !394, discriminator: 4)
!6622 = !DILocation(line: 1195, column: 202, scope: !6607)
!6623 = !DILocation(line: 1196, column: 30, scope: !1073)
!6624 = !DILocation(line: 1196, column: 11, scope: !1073)
!6625 = !DILocation(line: 1196, column: 9, scope: !1073)
!6626 = !DILocation(line: 1197, column: 9, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !1073, file: !394, line: 1197, column: 9)
!6628 = !DILocation(line: 1197, column: 13, scope: !6627)
!6629 = !DILocation(line: 1197, column: 9, scope: !1073)
!6630 = !DILocation(line: 1198, column: 9, scope: !6627)
!6631 = !DILocation(line: 1199, column: 16, scope: !1073)
!6632 = !DILocation(line: 1199, column: 22, scope: !1073)
!6633 = !DILocation(line: 1199, column: 31, scope: !1073)
!6634 = !DILocation(line: 1199, column: 34, scope: !6635)
!6635 = !DILexicalBlockFile(scope: !1073, file: !394, discriminator: 1)
!6636 = !DILocation(line: 1199, column: 40, scope: !1073)
!6637 = !DILocation(line: 1199, column: 49, scope: !1073)
!6638 = !DILocation(line: 1199, column: 56, scope: !1073)
!6639 = !DILocation(line: 1199, column: 60, scope: !6640)
!6640 = !DILexicalBlockFile(scope: !6641, file: !394, discriminator: 4)
!6641 = !DILexicalBlockFile(scope: !1073, file: !394, discriminator: 2)
!6642 = !DILocation(line: 1199, column: 66, scope: !1073)
!6643 = !DILocation(line: 1199, column: 60, scope: !1073)
!6644 = !DILocation(line: 1199, column: 75, scope: !1073)
!6645 = !DILocation(line: 1199, column: 78, scope: !6646)
!6646 = !DILexicalBlockFile(scope: !1073, file: !394, discriminator: 5)
!6647 = !DILocation(line: 1199, column: 84, scope: !1073)
!6648 = !DILocation(line: 1199, column: 94, scope: !1073)
!6649 = !DILocation(line: 1199, column: 102, scope: !1073)
!6650 = !DILocation(line: 1199, column: 105, scope: !6651)
!6651 = !DILexicalBlockFile(scope: !6652, file: !394, discriminator: 7)
!6652 = !DILexicalBlockFile(scope: !1073, file: !394, discriminator: 3)
!6653 = !DILocation(line: 1199, column: 111, scope: !1073)
!6654 = !DILocation(line: 1199, column: 119, scope: !1073)
!6655 = !DILocation(line: 1199, column: 13, scope: !1073)
!6656 = !DILocation(line: 1199, column: 127, scope: !6657)
!6657 = !DILexicalBlockFile(scope: !1073, file: !394, discriminator: 9)
!6658 = !DILocation(line: 1199, column: 133, scope: !1073)
!6659 = !DILocation(line: 1199, column: 143, scope: !1073)
!6660 = !DILocation(line: 1199, column: 149, scope: !1073)
!6661 = !DILocation(line: 1199, column: 141, scope: !1073)
!6662 = !DILocation(line: 1199, column: 13, scope: !6663)
!6663 = !DILexicalBlockFile(scope: !6664, file: !394, discriminator: 10)
!6664 = !DILexicalBlockFile(scope: !6665, file: !394, discriminator: 8)
!6665 = !DILexicalBlockFile(scope: !1073, file: !394, discriminator: 6)
!6666 = !DILocation(line: 1199, column: 9, scope: !6667)
!6667 = !DILexicalBlockFile(scope: !6668, file: !394, discriminator: 12)
!6668 = !DILexicalBlockFile(scope: !1073, file: !394, discriminator: 11)
!6669 = !DILocation(line: 1201, column: 31, scope: !1073)
!6670 = !DILocation(line: 1201, column: 12, scope: !1073)
!6671 = !DILocation(line: 1201, column: 5, scope: !1073)
!6672 = !DILocation(line: 1202, column: 1, scope: !1073)
!6673 = !DILocation(line: 1297, column: 29, scope: !1078)
!6674 = !DILocation(line: 1297, column: 45, scope: !1078)
!6675 = !DILocation(line: 1299, column: 5, scope: !1078)
!6676 = !DILocation(line: 1299, column: 15, scope: !1078)
!6677 = !DILocation(line: 1300, column: 5, scope: !1078)
!6678 = !DILocation(line: 1300, column: 15, scope: !1078)
!6679 = !DILocation(line: 1302, column: 9, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !1078, file: !394, line: 1302, column: 9)
!6681 = !DILocation(line: 1302, column: 15, scope: !6680)
!6682 = !DILocation(line: 1302, column: 18, scope: !6680)
!6683 = !DILocation(line: 1302, column: 9, scope: !1078)
!6684 = !DILocation(line: 1302, column: 30, scope: !6685)
!6685 = !DILexicalBlockFile(scope: !6686, file: !394, discriminator: 1)
!6686 = distinct !DILexicalBlock(scope: !6687, file: !394, line: 1302, column: 30)
!6687 = distinct !DILexicalBlock(scope: !6680, file: !394, line: 1302, column: 24)
!6688 = !DILocation(line: 1302, column: 36, scope: !6686)
!6689 = !DILocation(line: 1302, column: 30, scope: !6686)
!6690 = !DILocation(line: 1302, column: 30, scope: !6687)
!6691 = !DILocation(line: 1302, column: 64, scope: !6692)
!6692 = !DILexicalBlockFile(scope: !6693, file: !394, discriminator: 2)
!6693 = distinct !DILexicalBlock(scope: !6686, file: !394, line: 1302, column: 46)
!6694 = !DILocation(line: 1302, column: 48, scope: !6693)
!6695 = !DILocation(line: 1302, column: 115, scope: !6693)
!6696 = !DILocation(line: 1302, column: 140, scope: !6697)
!6697 = !DILexicalBlockFile(scope: !6698, file: !394, discriminator: 3)
!6698 = distinct !DILexicalBlock(scope: !6686, file: !394, line: 1302, column: 122)
!6699 = !DILocation(line: 1302, column: 124, scope: !6698)
!6700 = !DILocation(line: 1302, column: 202, scope: !6701)
!6701 = !DILexicalBlockFile(scope: !6687, file: !394, discriminator: 4)
!6702 = !DILocation(line: 1302, column: 202, scope: !6687)
!6703 = !DILocation(line: 1303, column: 34, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !1078, file: !394, line: 1303, column: 9)
!6705 = !DILocation(line: 1303, column: 10, scope: !6704)
!6706 = !DILocation(line: 1303, column: 9, scope: !1078)
!6707 = !DILocation(line: 1304, column: 9, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6704, file: !394, line: 1303, column: 62)
!6709 = !DILocation(line: 1307, column: 35, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !1078, file: !394, line: 1307, column: 9)
!6711 = !DILocation(line: 1307, column: 41, scope: !6710)
!6712 = !DILocation(line: 1307, column: 13, scope: !6710)
!6713 = !DILocation(line: 1307, column: 84, scope: !6710)
!6714 = !DILocation(line: 1307, column: 13, scope: !6715)
!6715 = !DILexicalBlockFile(scope: !6710, file: !394, discriminator: 1)
!6716 = !DILocation(line: 1307, column: 77, scope: !6717)
!6717 = !DILexicalBlockFile(scope: !6710, file: !394, discriminator: 2)
!6718 = !DILocation(line: 1307, column: 56, scope: !6710)
!6719 = !DILocation(line: 1307, column: 102, scope: !6720)
!6720 = !DILexicalBlockFile(scope: !6721, file: !394, discriminator: 4)
!6721 = !DILexicalBlockFile(scope: !6710, file: !394, discriminator: 3)
!6722 = !DILocation(line: 1307, column: 88, scope: !6710)
!6723 = !DILocation(line: 1307, column: 94, scope: !6710)
!6724 = !DILocation(line: 1307, column: 100, scope: !6710)
!6725 = !DILocation(line: 1307, column: 9, scope: !1078)
!6726 = !DILocation(line: 1308, column: 9, scope: !6710)
!6727 = !DILocation(line: 1310, column: 9, scope: !1087)
!6728 = !DILocation(line: 1310, column: 15, scope: !1087)
!6729 = !DILocation(line: 1310, column: 9, scope: !1078)
!6730 = !DILocation(line: 1311, column: 50, scope: !1086)
!6731 = !DILocation(line: 1311, column: 15, scope: !1086)
!6732 = !DILocation(line: 1311, column: 13, scope: !1086)
!6733 = !DILocation(line: 1312, column: 13, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !1086, file: !394, line: 1312, column: 13)
!6735 = !DILocation(line: 1312, column: 17, scope: !6734)
!6736 = !DILocation(line: 1312, column: 13, scope: !1086)
!6737 = !DILocation(line: 1313, column: 13, scope: !6734)
!6738 = !DILocation(line: 1314, column: 9, scope: !1086)
!6739 = !DILocation(line: 1314, column: 14, scope: !6740)
!6740 = !DILexicalBlockFile(scope: !1085, file: !394, discriminator: 1)
!6741 = !DILocation(line: 1314, column: 24, scope: !1085)
!6742 = !DILocation(line: 1314, column: 47, scope: !1085)
!6743 = !DILocation(line: 1314, column: 57, scope: !1091)
!6744 = !DILocation(line: 1314, column: 65, scope: !1091)
!6745 = !DILocation(line: 1314, column: 57, scope: !1085)
!6746 = !DILocation(line: 1314, column: 88, scope: !6747)
!6747 = !DILexicalBlockFile(scope: !1090, file: !394, discriminator: 2)
!6748 = !DILocation(line: 1314, column: 102, scope: !1090)
!6749 = !DILocation(line: 1314, column: 107, scope: !6750)
!6750 = !DILexicalBlockFile(scope: !1089, file: !394, discriminator: 4)
!6751 = !DILocation(line: 1314, column: 117, scope: !1089)
!6752 = !DILocation(line: 1314, column: 147, scope: !1089)
!6753 = !DILocation(line: 1314, column: 165, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !1089, file: !394, line: 1314, column: 162)
!6755 = !DILocation(line: 1314, column: 182, scope: !6754)
!6756 = !DILocation(line: 1314, column: 162, scope: !6754)
!6757 = !DILocation(line: 1314, column: 192, scope: !6754)
!6758 = !DILocation(line: 1314, column: 162, scope: !1089)
!6759 = !DILocation(line: 1314, column: 162, scope: !6760)
!6760 = !DILexicalBlockFile(scope: !1089, file: !394, discriminator: 5)
!6761 = !DILocation(line: 1314, column: 223, scope: !6762)
!6762 = !DILexicalBlockFile(scope: !6754, file: !394, discriminator: 6)
!6763 = !DILocation(line: 1314, column: 241, scope: !6754)
!6764 = !DILocation(line: 1314, column: 251, scope: !6754)
!6765 = !DILocation(line: 1314, column: 276, scope: !6754)
!6766 = !DILocation(line: 1314, column: 207, scope: !6754)
!6767 = !DILocation(line: 1314, column: 295, scope: !6768)
!6768 = !DILexicalBlockFile(scope: !1090, file: !394, discriminator: 7)
!6769 = !DILocation(line: 1314, column: 295, scope: !1089)
!6770 = !DILocation(line: 1314, column: 295, scope: !6771)
!6771 = !DILexicalBlockFile(scope: !1089, file: !394, discriminator: 8)
!6772 = !DILocation(line: 1314, column: 308, scope: !6773)
!6773 = !DILexicalBlockFile(scope: !1090, file: !394, discriminator: 9)
!6774 = !DILocation(line: 1314, column: 310, scope: !6775)
!6775 = !DILexicalBlockFile(scope: !6776, file: !394, discriminator: 10)
!6776 = !DILexicalBlockFile(scope: !1086, file: !394, discriminator: 3)
!6777 = !DILocation(line: 1314, column: 310, scope: !1085)
!6778 = !DILocation(line: 1314, column: 310, scope: !6779)
!6779 = !DILexicalBlockFile(scope: !1085, file: !394, discriminator: 11)
!6780 = !DILocation(line: 1315, column: 5, scope: !1086)
!6781 = !DILocation(line: 1316, column: 38, scope: !1078)
!6782 = !DILocation(line: 1316, column: 44, scope: !1078)
!6783 = !DILocation(line: 1316, column: 49, scope: !1078)
!6784 = !DILocation(line: 1316, column: 69, scope: !1078)
!6785 = !DILocation(line: 1316, column: 11, scope: !1078)
!6786 = !DILocation(line: 1316, column: 9, scope: !1078)
!6787 = !DILocation(line: 1317, column: 9, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !1078, file: !394, line: 1317, column: 9)
!6789 = !DILocation(line: 1317, column: 13, scope: !6788)
!6790 = !DILocation(line: 1317, column: 9, scope: !1078)
!6791 = !DILocation(line: 1318, column: 9, scope: !6788)
!6792 = !DILocation(line: 1320, column: 28, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !1078, file: !394, line: 1320, column: 9)
!6794 = !DILocation(line: 1320, column: 9, scope: !6793)
!6795 = !DILocation(line: 1320, column: 34, scope: !6793)
!6796 = !DILocation(line: 1320, column: 9, scope: !1078)
!6797 = !DILocation(line: 1321, column: 9, scope: !6793)
!6798 = !DILocation(line: 1320, column: 38, scope: !6799)
!6799 = !DILexicalBlockFile(scope: !6793, file: !394, discriminator: 1)
!6800 = !DILocation(line: 1324, column: 5, scope: !1078)
!6801 = !DILocation(line: 1324, column: 10, scope: !6802)
!6802 = !DILexicalBlockFile(scope: !6803, file: !394, discriminator: 1)
!6803 = distinct !DILexicalBlock(scope: !1078, file: !394, line: 1324, column: 8)
!6804 = !DILocation(line: 1324, column: 16, scope: !6803)
!6805 = !DILocation(line: 1324, column: 22, scope: !6803)
!6806 = !DILocation(line: 1324, column: 49, scope: !6803)
!6807 = !DILocation(line: 1324, column: 55, scope: !6803)
!6808 = !DILocation(line: 1324, column: 27, scope: !6803)
!6809 = !DILocation(line: 1324, column: 62, scope: !6803)
!6810 = !DILocation(line: 1324, column: 62, scope: !6811)
!6811 = !DILexicalBlockFile(scope: !6803, file: !394, discriminator: 2)
!6812 = !DILocation(line: 1325, column: 12, scope: !1078)
!6813 = !DILocation(line: 1325, column: 5, scope: !1078)
!6814 = !DILocation(line: 1326, column: 1, scope: !1078)
!6815 = !DILocation(line: 422, column: 27, scope: !1092)
!6816 = !DILocation(line: 422, column: 39, scope: !1092)
!6817 = !DILocation(line: 424, column: 5, scope: !1092)
!6818 = !DILocation(line: 424, column: 16, scope: !1092)
!6819 = !DILocation(line: 426, column: 9, scope: !1092)
!6820 = !DILocation(line: 427, column: 9, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !1092, file: !394, line: 427, column: 9)
!6822 = !DILocation(line: 427, column: 15, scope: !6821)
!6823 = !DILocation(line: 427, column: 9, scope: !1092)
!6824 = !DILocation(line: 428, column: 16, scope: !6821)
!6825 = !DILocation(line: 428, column: 22, scope: !6821)
!6826 = !DILocation(line: 428, column: 13, scope: !6821)
!6827 = !DILocation(line: 428, column: 9, scope: !6821)
!6828 = !DILocation(line: 429, column: 31, scope: !1092)
!6829 = !DILocation(line: 429, column: 12, scope: !1092)
!6830 = !DILocation(line: 430, column: 1, scope: !1092)
!6831 = !DILocation(line: 429, column: 5, scope: !1092)
!6832 = !DILocation(line: 1494, column: 36, scope: !902)
!6833 = !DILocation(line: 1496, column: 5, scope: !902)
!6834 = !DILocation(line: 1496, column: 16, scope: !902)
!6835 = !DILocation(line: 1497, column: 5, scope: !902)
!6836 = !DILocation(line: 1497, column: 15, scope: !902)
!6837 = !DILocation(line: 1497, column: 34, scope: !902)
!6838 = !DILocation(line: 1497, column: 54, scope: !902)
!6839 = !DILocation(line: 1497, column: 73, scope: !902)
!6840 = !DILocation(line: 1500, column: 35, scope: !902)
!6841 = !DILocation(line: 1500, column: 41, scope: !902)
!6842 = !DILocation(line: 1500, column: 50, scope: !902)
!6843 = !DILocation(line: 1500, column: 54, scope: !6844)
!6844 = !DILexicalBlockFile(scope: !902, file: !394, discriminator: 1)
!6845 = !DILocation(line: 1500, column: 60, scope: !902)
!6846 = !DILocation(line: 1500, column: 54, scope: !902)
!6847 = !DILocation(line: 1500, column: 69, scope: !902)
!6848 = !DILocation(line: 1500, column: 72, scope: !6849)
!6849 = !DILexicalBlockFile(scope: !902, file: !394, discriminator: 3)
!6850 = !DILocation(line: 1500, column: 78, scope: !902)
!6851 = !DILocation(line: 1500, column: 87, scope: !902)
!6852 = !DILocation(line: 1500, column: 34, scope: !902)
!6853 = !DILocation(line: 1500, column: 98, scope: !6854)
!6854 = !DILexicalBlockFile(scope: !902, file: !394, discriminator: 5)
!6855 = !DILocation(line: 1500, column: 104, scope: !902)
!6856 = !DILocation(line: 1500, column: 115, scope: !902)
!6857 = !DILocation(line: 1500, column: 121, scope: !902)
!6858 = !DILocation(line: 1500, column: 113, scope: !902)
!6859 = !DILocation(line: 1500, column: 34, scope: !6860)
!6860 = !DILexicalBlockFile(scope: !6861, file: !394, discriminator: 6)
!6861 = !DILexicalBlockFile(scope: !6862, file: !394, discriminator: 4)
!6862 = !DILexicalBlockFile(scope: !902, file: !394, discriminator: 2)
!6863 = !DILocation(line: 1500, column: 18, scope: !6864)
!6864 = !DILexicalBlockFile(scope: !6865, file: !394, discriminator: 8)
!6865 = !DILexicalBlockFile(scope: !902, file: !394, discriminator: 7)
!6866 = !DILocation(line: 1501, column: 9, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !902, file: !394, line: 1501, column: 9)
!6868 = !DILocation(line: 1501, column: 9, scope: !902)
!6869 = !DILocation(line: 1503, column: 13, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6867, file: !394, line: 1501, column: 23)
!6871 = !DILocation(line: 1503, column: 19, scope: !6870)
!6872 = !DILocation(line: 1503, column: 28, scope: !6870)
!6873 = !DILocation(line: 1503, column: 34, scope: !6870)
!6874 = !DILocation(line: 1503, column: 26, scope: !6870)
!6875 = !DILocation(line: 1503, column: 39, scope: !6870)
!6876 = !DILocation(line: 1502, column: 16, scope: !6870)
!6877 = !DILocation(line: 1502, column: 14, scope: !6870)
!6878 = !DILocation(line: 1504, column: 13, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6870, file: !394, line: 1504, column: 13)
!6880 = !DILocation(line: 1504, column: 18, scope: !6879)
!6881 = !DILocation(line: 1504, column: 13, scope: !6870)
!6882 = !DILocation(line: 1505, column: 13, scope: !6879)
!6883 = !DILocation(line: 1506, column: 22, scope: !6870)
!6884 = !DILocation(line: 1506, column: 9, scope: !6870)
!6885 = !DILocation(line: 1506, column: 15, scope: !6870)
!6886 = !DILocation(line: 1506, column: 19, scope: !6870)
!6887 = !DILocation(line: 1507, column: 5, scope: !6870)
!6888 = !DILocation(line: 1509, column: 9, scope: !913)
!6889 = !DILocation(line: 1509, column: 15, scope: !913)
!6890 = !DILocation(line: 1509, column: 9, scope: !902)
!6891 = !DILocation(line: 1510, column: 50, scope: !912)
!6892 = !DILocation(line: 1510, column: 15, scope: !912)
!6893 = !DILocation(line: 1510, column: 13, scope: !912)
!6894 = !DILocation(line: 1511, column: 13, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !912, file: !394, line: 1511, column: 13)
!6896 = !DILocation(line: 1511, column: 17, scope: !6895)
!6897 = !DILocation(line: 1511, column: 13, scope: !912)
!6898 = !DILocation(line: 1512, column: 13, scope: !6895)
!6899 = !DILocation(line: 1513, column: 9, scope: !912)
!6900 = !DILocation(line: 1513, column: 14, scope: !6901)
!6901 = !DILexicalBlockFile(scope: !911, file: !394, discriminator: 1)
!6902 = !DILocation(line: 1513, column: 24, scope: !911)
!6903 = !DILocation(line: 1513, column: 47, scope: !911)
!6904 = !DILocation(line: 1513, column: 57, scope: !917)
!6905 = !DILocation(line: 1513, column: 65, scope: !917)
!6906 = !DILocation(line: 1513, column: 57, scope: !911)
!6907 = !DILocation(line: 1513, column: 88, scope: !6908)
!6908 = !DILexicalBlockFile(scope: !916, file: !394, discriminator: 2)
!6909 = !DILocation(line: 1513, column: 102, scope: !916)
!6910 = !DILocation(line: 1513, column: 107, scope: !6911)
!6911 = !DILexicalBlockFile(scope: !915, file: !394, discriminator: 4)
!6912 = !DILocation(line: 1513, column: 117, scope: !915)
!6913 = !DILocation(line: 1513, column: 147, scope: !915)
!6914 = !DILocation(line: 1513, column: 165, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !915, file: !394, line: 1513, column: 162)
!6916 = !DILocation(line: 1513, column: 182, scope: !6915)
!6917 = !DILocation(line: 1513, column: 162, scope: !6915)
!6918 = !DILocation(line: 1513, column: 192, scope: !6915)
!6919 = !DILocation(line: 1513, column: 162, scope: !915)
!6920 = !DILocation(line: 1513, column: 162, scope: !6921)
!6921 = !DILexicalBlockFile(scope: !915, file: !394, discriminator: 5)
!6922 = !DILocation(line: 1513, column: 223, scope: !6923)
!6923 = !DILexicalBlockFile(scope: !6915, file: !394, discriminator: 6)
!6924 = !DILocation(line: 1513, column: 241, scope: !6915)
!6925 = !DILocation(line: 1513, column: 251, scope: !6915)
!6926 = !DILocation(line: 1513, column: 276, scope: !6915)
!6927 = !DILocation(line: 1513, column: 207, scope: !6915)
!6928 = !DILocation(line: 1513, column: 295, scope: !6929)
!6929 = !DILexicalBlockFile(scope: !916, file: !394, discriminator: 7)
!6930 = !DILocation(line: 1513, column: 295, scope: !915)
!6931 = !DILocation(line: 1513, column: 295, scope: !6932)
!6932 = !DILexicalBlockFile(scope: !915, file: !394, discriminator: 8)
!6933 = !DILocation(line: 1513, column: 308, scope: !6934)
!6934 = !DILexicalBlockFile(scope: !916, file: !394, discriminator: 9)
!6935 = !DILocation(line: 1513, column: 310, scope: !6936)
!6936 = !DILexicalBlockFile(scope: !6937, file: !394, discriminator: 10)
!6937 = !DILexicalBlockFile(scope: !912, file: !394, discriminator: 3)
!6938 = !DILocation(line: 1513, column: 310, scope: !911)
!6939 = !DILocation(line: 1513, column: 310, scope: !6940)
!6940 = !DILexicalBlockFile(scope: !911, file: !394, discriminator: 11)
!6941 = !DILocation(line: 1514, column: 5, scope: !912)
!6942 = !DILocation(line: 1515, column: 31, scope: !902)
!6943 = !DILocation(line: 1515, column: 5, scope: !902)
!6944 = !DILocation(line: 1517, column: 26, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !902, file: !394, line: 1517, column: 9)
!6946 = !DILocation(line: 1517, column: 32, scope: !6945)
!6947 = !DILocation(line: 1517, column: 37, scope: !6945)
!6948 = !DILocation(line: 1517, column: 9, scope: !6945)
!6949 = !DILocation(line: 1517, column: 9, scope: !902)
!6950 = !DILocation(line: 1518, column: 42, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6945, file: !394, line: 1517, column: 57)
!6952 = !DILocation(line: 1518, column: 48, scope: !6951)
!6953 = !DILocation(line: 1518, column: 53, scope: !6951)
!6954 = !DILocation(line: 1518, column: 15, scope: !6951)
!6955 = !DILocation(line: 1518, column: 13, scope: !6951)
!6956 = !DILocation(line: 1519, column: 13, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6951, file: !394, line: 1519, column: 13)
!6958 = !DILocation(line: 1519, column: 17, scope: !6957)
!6959 = !DILocation(line: 1519, column: 13, scope: !6951)
!6960 = !DILocation(line: 1520, column: 13, scope: !6957)
!6961 = !DILocation(line: 1521, column: 13, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6951, file: !394, line: 1521, column: 13)
!6963 = !DILocation(line: 1521, column: 17, scope: !6962)
!6964 = !DILocation(line: 1521, column: 38, scope: !6962)
!6965 = !DILocation(line: 1521, column: 59, scope: !6966)
!6966 = !DILexicalBlockFile(scope: !6962, file: !394, discriminator: 1)
!6967 = !DILocation(line: 1521, column: 66, scope: !6962)
!6968 = !DILocation(line: 1521, column: 77, scope: !6962)
!6969 = !DILocation(line: 1521, column: 86, scope: !6962)
!6970 = !DILocation(line: 1521, column: 103, scope: !6962)
!6971 = !DILocation(line: 1521, column: 13, scope: !6951)
!6972 = !DILocation(line: 1522, column: 29, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6962, file: !394, line: 1521, column: 110)
!6974 = !DILocation(line: 1522, column: 13, scope: !6973)
!6975 = !DILocation(line: 1523, column: 13, scope: !6973)
!6976 = !DILocation(line: 1525, column: 13, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6951, file: !394, line: 1525, column: 13)
!6978 = !DILocation(line: 1525, column: 17, scope: !6977)
!6979 = !DILocation(line: 1525, column: 13, scope: !6951)
!6980 = !DILocation(line: 1526, column: 17, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !394, line: 1526, column: 17)
!6982 = distinct !DILexicalBlock(scope: !6977, file: !394, line: 1525, column: 39)
!6983 = !DILocation(line: 1526, column: 30, scope: !6981)
!6984 = !DILocation(line: 1526, column: 17, scope: !6982)
!6985 = !DILocation(line: 1527, column: 21, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6981, file: !394, line: 1526, column: 36)
!6987 = !DILocation(line: 1528, column: 17, scope: !6986)
!6988 = !DILocation(line: 1530, column: 23, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6981, file: !394, line: 1529, column: 20)
!6990 = !DILocation(line: 1530, column: 21, scope: !6989)
!6991 = !DILocation(line: 1531, column: 17, scope: !6989)
!6992 = !DILocation(line: 1534, column: 18, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6977, file: !394, line: 1534, column: 18)
!6994 = !DILocation(line: 1534, column: 18, scope: !6977)
!6995 = !DILocation(line: 1535, column: 35, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6993, file: !394, line: 1534, column: 32)
!6997 = !DILocation(line: 1535, column: 13, scope: !6996)
!6998 = !DILocation(line: 1536, column: 19, scope: !6996)
!6999 = !DILocation(line: 1536, column: 17, scope: !6996)
!7000 = !DILocation(line: 1537, column: 13, scope: !6996)
!7001 = !DILocation(line: 1540, column: 19, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6993, file: !394, line: 1539, column: 14)
!7003 = !DILocation(line: 1540, column: 17, scope: !7002)
!7004 = !DILocation(line: 1541, column: 13, scope: !7002)
!7005 = !DILocation(line: 1545, column: 14, scope: !902)
!7006 = !DILocation(line: 1545, column: 12, scope: !902)
!7007 = !DILocation(line: 1546, column: 9, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !902, file: !394, line: 1546, column: 9)
!7009 = !DILocation(line: 1546, column: 16, scope: !7008)
!7010 = !DILocation(line: 1546, column: 9, scope: !902)
!7011 = !DILocation(line: 1547, column: 9, scope: !7008)
!7012 = !DILocation(line: 1549, column: 5, scope: !902)
!7013 = !DILocation(line: 1549, column: 5, scope: !7014)
!7014 = !DILexicalBlockFile(scope: !6844, file: !394, discriminator: 2)
!7015 = !DILocation(line: 1550, column: 13, scope: !921)
!7016 = !DILocation(line: 1550, column: 13, scope: !922)
!7017 = !DILocation(line: 1551, column: 31, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !920, file: !394, line: 1551, column: 17)
!7019 = !DILocation(line: 1551, column: 39, scope: !7018)
!7020 = !DILocation(line: 1551, column: 17, scope: !7018)
!7021 = !DILocation(line: 1551, column: 45, scope: !7018)
!7022 = !DILocation(line: 1551, column: 17, scope: !920)
!7023 = !DILocation(line: 1552, column: 17, scope: !7018)
!7024 = !DILocation(line: 1553, column: 13, scope: !920)
!7025 = !DILocation(line: 1553, column: 18, scope: !7026)
!7026 = !DILexicalBlockFile(scope: !919, file: !394, discriminator: 1)
!7027 = !DILocation(line: 1553, column: 28, scope: !919)
!7028 = !DILocation(line: 1553, column: 51, scope: !919)
!7029 = !DILocation(line: 1553, column: 62, scope: !926)
!7030 = !DILocation(line: 1553, column: 70, scope: !926)
!7031 = !DILocation(line: 1553, column: 62, scope: !919)
!7032 = !DILocation(line: 1553, column: 94, scope: !7033)
!7033 = !DILexicalBlockFile(scope: !925, file: !394, discriminator: 2)
!7034 = !DILocation(line: 1553, column: 108, scope: !925)
!7035 = !DILocation(line: 1553, column: 113, scope: !7036)
!7036 = !DILexicalBlockFile(scope: !924, file: !394, discriminator: 4)
!7037 = !DILocation(line: 1553, column: 123, scope: !924)
!7038 = !DILocation(line: 1553, column: 153, scope: !924)
!7039 = !DILocation(line: 1553, column: 171, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !924, file: !394, line: 1553, column: 168)
!7041 = !DILocation(line: 1553, column: 188, scope: !7040)
!7042 = !DILocation(line: 1553, column: 168, scope: !7040)
!7043 = !DILocation(line: 1553, column: 198, scope: !7040)
!7044 = !DILocation(line: 1553, column: 168, scope: !924)
!7045 = !DILocation(line: 1553, column: 168, scope: !7046)
!7046 = !DILexicalBlockFile(scope: !924, file: !394, discriminator: 5)
!7047 = !DILocation(line: 1553, column: 229, scope: !7048)
!7048 = !DILexicalBlockFile(scope: !7040, file: !394, discriminator: 6)
!7049 = !DILocation(line: 1553, column: 247, scope: !7040)
!7050 = !DILocation(line: 1553, column: 257, scope: !7040)
!7051 = !DILocation(line: 1553, column: 282, scope: !7040)
!7052 = !DILocation(line: 1553, column: 213, scope: !7040)
!7053 = !DILocation(line: 1553, column: 301, scope: !7054)
!7054 = !DILexicalBlockFile(scope: !925, file: !394, discriminator: 7)
!7055 = !DILocation(line: 1553, column: 301, scope: !924)
!7056 = !DILocation(line: 1553, column: 301, scope: !7057)
!7057 = !DILexicalBlockFile(scope: !924, file: !394, discriminator: 8)
!7058 = !DILocation(line: 1553, column: 314, scope: !7059)
!7059 = !DILexicalBlockFile(scope: !925, file: !394, discriminator: 9)
!7060 = !DILocation(line: 1553, column: 316, scope: !7061)
!7061 = !DILexicalBlockFile(scope: !7062, file: !394, discriminator: 10)
!7062 = !DILexicalBlockFile(scope: !920, file: !394, discriminator: 3)
!7063 = !DILocation(line: 1553, column: 316, scope: !919)
!7064 = !DILocation(line: 1553, column: 316, scope: !7065)
!7065 = !DILexicalBlockFile(scope: !919, file: !394, discriminator: 11)
!7066 = !DILocation(line: 1554, column: 9, scope: !920)
!7067 = !DILocation(line: 1557, column: 43, scope: !922)
!7068 = !DILocation(line: 1557, column: 49, scope: !922)
!7069 = !DILocation(line: 1557, column: 54, scope: !922)
!7070 = !DILocation(line: 1557, column: 16, scope: !922)
!7071 = !DILocation(line: 1557, column: 14, scope: !922)
!7072 = !DILocation(line: 1558, column: 13, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !922, file: !394, line: 1558, column: 13)
!7074 = !DILocation(line: 1558, column: 18, scope: !7073)
!7075 = !DILocation(line: 1558, column: 13, scope: !922)
!7076 = !DILocation(line: 1559, column: 13, scope: !7073)
!7077 = !DILocation(line: 1560, column: 13, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !922, file: !394, line: 1560, column: 13)
!7079 = !DILocation(line: 1560, column: 18, scope: !7078)
!7080 = !DILocation(line: 1560, column: 39, scope: !7078)
!7081 = !DILocation(line: 1560, column: 60, scope: !7082)
!7082 = !DILexicalBlockFile(scope: !7078, file: !394, discriminator: 1)
!7083 = !DILocation(line: 1560, column: 68, scope: !7078)
!7084 = !DILocation(line: 1560, column: 79, scope: !7078)
!7085 = !DILocation(line: 1560, column: 88, scope: !7078)
!7086 = !DILocation(line: 1560, column: 105, scope: !7078)
!7087 = !DILocation(line: 1560, column: 13, scope: !922)
!7088 = !DILocation(line: 1561, column: 29, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7078, file: !394, line: 1560, column: 112)
!7090 = !DILocation(line: 1561, column: 13, scope: !7089)
!7091 = !DILocation(line: 1562, column: 13, scope: !7089)
!7092 = !DILocation(line: 1564, column: 13, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !922, file: !394, line: 1564, column: 13)
!7094 = !DILocation(line: 1564, column: 18, scope: !7093)
!7095 = !DILocation(line: 1564, column: 39, scope: !7093)
!7096 = !DILocation(line: 1564, column: 73, scope: !7097)
!7097 = !DILexicalBlockFile(scope: !7093, file: !394, discriminator: 1)
!7098 = !DILocation(line: 1564, column: 58, scope: !7093)
!7099 = !DILocation(line: 1564, column: 81, scope: !7093)
!7100 = !DILocation(line: 1564, column: 91, scope: !7093)
!7101 = !DILocation(line: 1564, column: 13, scope: !922)
!7102 = !DILocation(line: 1565, column: 17, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !394, line: 1565, column: 17)
!7104 = distinct !DILexicalBlock(scope: !7093, file: !394, line: 1564, column: 97)
!7105 = !DILocation(line: 1565, column: 30, scope: !7103)
!7106 = !DILocation(line: 1565, column: 17, scope: !7104)
!7107 = !DILocation(line: 1566, column: 23, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7103, file: !394, line: 1565, column: 36)
!7109 = !DILocation(line: 1566, column: 21, scope: !7108)
!7110 = !DILocation(line: 1567, column: 17, scope: !7108)
!7111 = !DILocation(line: 1570, column: 37, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7103, file: !394, line: 1569, column: 18)
!7113 = !DILocation(line: 1570, column: 56, scope: !7112)
!7114 = !DILocation(line: 1570, column: 23, scope: !7112)
!7115 = !DILocation(line: 1570, column: 21, scope: !7112)
!7116 = !DILocation(line: 1571, column: 23, scope: !7112)
!7117 = !DILocation(line: 1571, column: 21, scope: !7112)
!7118 = !DILocation(line: 1572, column: 17, scope: !7112)
!7119 = !DILocation(line: 1575, column: 56, scope: !922)
!7120 = !DILocation(line: 1575, column: 41, scope: !922)
!7121 = !DILocation(line: 1575, column: 64, scope: !922)
!7122 = !DILocation(line: 1575, column: 22, scope: !922)
!7123 = !DILocation(line: 1576, column: 13, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !922, file: !394, line: 1576, column: 13)
!7125 = !DILocation(line: 1576, column: 19, scope: !7124)
!7126 = !DILocation(line: 1576, column: 27, scope: !7124)
!7127 = !DILocation(line: 1576, column: 13, scope: !922)
!7128 = !DILocation(line: 1577, column: 61, scope: !7124)
!7129 = !DILocation(line: 1577, column: 46, scope: !7124)
!7130 = !DILocation(line: 1577, column: 69, scope: !7124)
!7131 = !DILocation(line: 1577, column: 13, scope: !7124)
!7132 = !DILocation(line: 1577, column: 19, scope: !7124)
!7133 = !DILocation(line: 1577, column: 27, scope: !7124)
!7134 = !DILocation(line: 1581, column: 5, scope: !902)
!7135 = !DILocation(line: 1581, column: 10, scope: !7136)
!7136 = !DILexicalBlockFile(scope: !928, file: !394, discriminator: 1)
!7137 = !DILocation(line: 1581, column: 20, scope: !928)
!7138 = !DILocation(line: 1581, column: 51, scope: !928)
!7139 = !DILocation(line: 1581, column: 61, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !928, file: !394, line: 1581, column: 61)
!7141 = !DILocation(line: 1581, column: 77, scope: !7140)
!7142 = !DILocation(line: 1581, column: 61, scope: !928)
!7143 = !DILocation(line: 1581, column: 108, scope: !7144)
!7144 = !DILexicalBlockFile(scope: !7140, file: !394, discriminator: 2)
!7145 = !DILocation(line: 1581, column: 127, scope: !7140)
!7146 = !DILocation(line: 1581, column: 136, scope: !7140)
!7147 = !DILocation(line: 1581, column: 92, scope: !7140)
!7148 = !DILocation(line: 1581, column: 141, scope: !7149)
!7149 = !DILexicalBlockFile(scope: !6849, file: !394, discriminator: 4)
!7150 = !DILocation(line: 1581, column: 141, scope: !928)
!7151 = !DILocation(line: 1581, column: 141, scope: !7152)
!7152 = !DILexicalBlockFile(scope: !928, file: !394, discriminator: 5)
!7153 = !DILocation(line: 1582, column: 5, scope: !902)
!7154 = !DILocation(line: 1582, column: 10, scope: !7155)
!7155 = !DILexicalBlockFile(scope: !930, file: !394, discriminator: 1)
!7156 = !DILocation(line: 1582, column: 20, scope: !930)
!7157 = !DILocation(line: 1582, column: 51, scope: !930)
!7158 = !DILocation(line: 1582, column: 62, scope: !933)
!7159 = !DILocation(line: 1582, column: 78, scope: !933)
!7160 = !DILocation(line: 1582, column: 62, scope: !930)
!7161 = !DILocation(line: 1582, column: 93, scope: !7162)
!7162 = !DILexicalBlockFile(scope: !933, file: !394, discriminator: 2)
!7163 = !DILocation(line: 1582, column: 98, scope: !7164)
!7164 = !DILexicalBlockFile(scope: !932, file: !394, discriminator: 4)
!7165 = !DILocation(line: 1582, column: 108, scope: !932)
!7166 = !DILocation(line: 1582, column: 138, scope: !932)
!7167 = !DILocation(line: 1582, column: 164, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !932, file: !394, line: 1582, column: 161)
!7169 = !DILocation(line: 1582, column: 181, scope: !7168)
!7170 = !DILocation(line: 1582, column: 161, scope: !7168)
!7171 = !DILocation(line: 1582, column: 191, scope: !7168)
!7172 = !DILocation(line: 1582, column: 161, scope: !932)
!7173 = !DILocation(line: 1582, column: 161, scope: !7174)
!7174 = !DILexicalBlockFile(scope: !932, file: !394, discriminator: 5)
!7175 = !DILocation(line: 1582, column: 222, scope: !7176)
!7176 = !DILexicalBlockFile(scope: !7168, file: !394, discriminator: 6)
!7177 = !DILocation(line: 1582, column: 240, scope: !7168)
!7178 = !DILocation(line: 1582, column: 250, scope: !7168)
!7179 = !DILocation(line: 1582, column: 275, scope: !7168)
!7180 = !DILocation(line: 1582, column: 206, scope: !7168)
!7181 = !DILocation(line: 1582, column: 294, scope: !7182)
!7182 = !DILexicalBlockFile(scope: !933, file: !394, discriminator: 7)
!7183 = !DILocation(line: 1582, column: 294, scope: !932)
!7184 = !DILocation(line: 1582, column: 294, scope: !7185)
!7185 = !DILexicalBlockFile(scope: !932, file: !394, discriminator: 8)
!7186 = !DILocation(line: 1582, column: 294, scope: !7187)
!7187 = !DILexicalBlockFile(scope: !932, file: !394, discriminator: 9)
!7188 = !DILocation(line: 1582, column: 307, scope: !7189)
!7189 = !DILexicalBlockFile(scope: !6849, file: !394, discriminator: 10)
!7190 = !DILocation(line: 1582, column: 307, scope: !930)
!7191 = !DILocation(line: 1582, column: 307, scope: !7192)
!7192 = !DILexicalBlockFile(scope: !930, file: !394, discriminator: 11)
!7193 = !DILocation(line: 1583, column: 5, scope: !902)
!7194 = !DILocation(line: 1583, column: 10, scope: !7195)
!7195 = !DILexicalBlockFile(scope: !935, file: !394, discriminator: 1)
!7196 = !DILocation(line: 1583, column: 20, scope: !935)
!7197 = !DILocation(line: 1583, column: 51, scope: !935)
!7198 = !DILocation(line: 1583, column: 61, scope: !938)
!7199 = !DILocation(line: 1583, column: 77, scope: !938)
!7200 = !DILocation(line: 1583, column: 61, scope: !935)
!7201 = !DILocation(line: 1583, column: 92, scope: !7202)
!7202 = !DILexicalBlockFile(scope: !938, file: !394, discriminator: 2)
!7203 = !DILocation(line: 1583, column: 97, scope: !7204)
!7204 = !DILexicalBlockFile(scope: !937, file: !394, discriminator: 4)
!7205 = !DILocation(line: 1583, column: 107, scope: !937)
!7206 = !DILocation(line: 1583, column: 137, scope: !937)
!7207 = !DILocation(line: 1583, column: 163, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !937, file: !394, line: 1583, column: 160)
!7209 = !DILocation(line: 1583, column: 180, scope: !7208)
!7210 = !DILocation(line: 1583, column: 160, scope: !7208)
!7211 = !DILocation(line: 1583, column: 190, scope: !7208)
!7212 = !DILocation(line: 1583, column: 160, scope: !937)
!7213 = !DILocation(line: 1583, column: 160, scope: !7214)
!7214 = !DILexicalBlockFile(scope: !937, file: !394, discriminator: 5)
!7215 = !DILocation(line: 1583, column: 221, scope: !7216)
!7216 = !DILexicalBlockFile(scope: !7208, file: !394, discriminator: 6)
!7217 = !DILocation(line: 1583, column: 239, scope: !7208)
!7218 = !DILocation(line: 1583, column: 249, scope: !7208)
!7219 = !DILocation(line: 1583, column: 274, scope: !7208)
!7220 = !DILocation(line: 1583, column: 205, scope: !7208)
!7221 = !DILocation(line: 1583, column: 293, scope: !7222)
!7222 = !DILexicalBlockFile(scope: !938, file: !394, discriminator: 7)
!7223 = !DILocation(line: 1583, column: 293, scope: !937)
!7224 = !DILocation(line: 1583, column: 293, scope: !7225)
!7225 = !DILexicalBlockFile(scope: !937, file: !394, discriminator: 8)
!7226 = !DILocation(line: 1583, column: 293, scope: !7227)
!7227 = !DILexicalBlockFile(scope: !937, file: !394, discriminator: 9)
!7228 = !DILocation(line: 1583, column: 306, scope: !7189)
!7229 = !DILocation(line: 1583, column: 306, scope: !935)
!7230 = !DILocation(line: 1583, column: 306, scope: !7231)
!7231 = !DILexicalBlockFile(scope: !935, file: !394, discriminator: 11)
!7232 = !DILocation(line: 1584, column: 5, scope: !902)
!7233 = !DILocation(line: 1584, column: 10, scope: !7234)
!7234 = !DILexicalBlockFile(scope: !940, file: !394, discriminator: 1)
!7235 = !DILocation(line: 1584, column: 20, scope: !940)
!7236 = !DILocation(line: 1584, column: 51, scope: !940)
!7237 = !DILocation(line: 1584, column: 64, scope: !943)
!7238 = !DILocation(line: 1584, column: 80, scope: !943)
!7239 = !DILocation(line: 1584, column: 64, scope: !940)
!7240 = !DILocation(line: 1584, column: 95, scope: !7241)
!7241 = !DILexicalBlockFile(scope: !943, file: !394, discriminator: 2)
!7242 = !DILocation(line: 1584, column: 100, scope: !7243)
!7243 = !DILexicalBlockFile(scope: !942, file: !394, discriminator: 4)
!7244 = !DILocation(line: 1584, column: 110, scope: !942)
!7245 = !DILocation(line: 1584, column: 140, scope: !942)
!7246 = !DILocation(line: 1584, column: 166, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !942, file: !394, line: 1584, column: 163)
!7248 = !DILocation(line: 1584, column: 183, scope: !7247)
!7249 = !DILocation(line: 1584, column: 163, scope: !7247)
!7250 = !DILocation(line: 1584, column: 193, scope: !7247)
!7251 = !DILocation(line: 1584, column: 163, scope: !942)
!7252 = !DILocation(line: 1584, column: 163, scope: !7253)
!7253 = !DILexicalBlockFile(scope: !942, file: !394, discriminator: 5)
!7254 = !DILocation(line: 1584, column: 224, scope: !7255)
!7255 = !DILexicalBlockFile(scope: !7247, file: !394, discriminator: 6)
!7256 = !DILocation(line: 1584, column: 242, scope: !7247)
!7257 = !DILocation(line: 1584, column: 252, scope: !7247)
!7258 = !DILocation(line: 1584, column: 277, scope: !7247)
!7259 = !DILocation(line: 1584, column: 208, scope: !7247)
!7260 = !DILocation(line: 1584, column: 296, scope: !7261)
!7261 = !DILexicalBlockFile(scope: !943, file: !394, discriminator: 7)
!7262 = !DILocation(line: 1584, column: 296, scope: !942)
!7263 = !DILocation(line: 1584, column: 296, scope: !7264)
!7264 = !DILexicalBlockFile(scope: !942, file: !394, discriminator: 8)
!7265 = !DILocation(line: 1584, column: 296, scope: !7266)
!7266 = !DILexicalBlockFile(scope: !942, file: !394, discriminator: 9)
!7267 = !DILocation(line: 1584, column: 309, scope: !7189)
!7268 = !DILocation(line: 1584, column: 309, scope: !940)
!7269 = !DILocation(line: 1584, column: 309, scope: !7270)
!7270 = !DILexicalBlockFile(scope: !940, file: !394, discriminator: 11)
!7271 = !DILocation(line: 1585, column: 12, scope: !902)
!7272 = !DILocation(line: 1585, column: 5, scope: !902)
!7273 = !DILocation(line: 1586, column: 1, scope: !902)
!7274 = !DILocation(line: 1591, column: 37, scope: !944)
!7275 = !DILocation(line: 1591, column: 54, scope: !944)
!7276 = !DILocation(line: 1593, column: 5, scope: !944)
!7277 = !DILocation(line: 1593, column: 16, scope: !944)
!7278 = !DILocation(line: 1595, column: 35, scope: !944)
!7279 = !DILocation(line: 1595, column: 41, scope: !944)
!7280 = !DILocation(line: 1595, column: 50, scope: !944)
!7281 = !DILocation(line: 1595, column: 54, scope: !7282)
!7282 = !DILexicalBlockFile(scope: !944, file: !394, discriminator: 1)
!7283 = !DILocation(line: 1595, column: 60, scope: !944)
!7284 = !DILocation(line: 1595, column: 54, scope: !944)
!7285 = !DILocation(line: 1595, column: 69, scope: !944)
!7286 = !DILocation(line: 1595, column: 72, scope: !7287)
!7287 = !DILexicalBlockFile(scope: !944, file: !394, discriminator: 3)
!7288 = !DILocation(line: 1595, column: 78, scope: !944)
!7289 = !DILocation(line: 1595, column: 87, scope: !944)
!7290 = !DILocation(line: 1595, column: 34, scope: !944)
!7291 = !DILocation(line: 1595, column: 98, scope: !7292)
!7292 = !DILexicalBlockFile(scope: !944, file: !394, discriminator: 5)
!7293 = !DILocation(line: 1595, column: 104, scope: !944)
!7294 = !DILocation(line: 1595, column: 115, scope: !944)
!7295 = !DILocation(line: 1595, column: 121, scope: !944)
!7296 = !DILocation(line: 1595, column: 113, scope: !944)
!7297 = !DILocation(line: 1595, column: 34, scope: !7298)
!7298 = !DILexicalBlockFile(scope: !7299, file: !394, discriminator: 6)
!7299 = !DILexicalBlockFile(scope: !7300, file: !394, discriminator: 4)
!7300 = !DILexicalBlockFile(scope: !944, file: !394, discriminator: 2)
!7301 = !DILocation(line: 1595, column: 18, scope: !7302)
!7302 = !DILexicalBlockFile(scope: !7303, file: !394, discriminator: 8)
!7303 = !DILexicalBlockFile(scope: !944, file: !394, discriminator: 7)
!7304 = !DILocation(line: 1596, column: 9, scope: !951)
!7305 = !DILocation(line: 1596, column: 14, scope: !951)
!7306 = !DILocation(line: 1596, column: 11, scope: !951)
!7307 = !DILocation(line: 1596, column: 9, scope: !944)
!7308 = !DILocation(line: 1598, column: 9, scope: !950)
!7309 = !DILocation(line: 1598, column: 19, scope: !950)
!7310 = !DILocation(line: 1598, column: 51, scope: !950)
!7311 = !DILocation(line: 1598, column: 57, scope: !950)
!7312 = !DILocation(line: 1598, column: 66, scope: !950)
!7313 = !DILocation(line: 1598, column: 72, scope: !950)
!7314 = !DILocation(line: 1598, column: 64, scope: !950)
!7315 = !DILocation(line: 1598, column: 77, scope: !950)
!7316 = !DILocation(line: 1598, column: 25, scope: !950)
!7317 = !DILocation(line: 1599, column: 13, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !950, file: !394, line: 1599, column: 13)
!7319 = !DILocation(line: 1599, column: 17, scope: !7318)
!7320 = !DILocation(line: 1599, column: 13, scope: !950)
!7321 = !DILocation(line: 1600, column: 26, scope: !7318)
!7322 = !DILocation(line: 1600, column: 13, scope: !7318)
!7323 = !DILocation(line: 1600, column: 19, scope: !7318)
!7324 = !DILocation(line: 1600, column: 23, scope: !7318)
!7325 = !DILocation(line: 1601, column: 16, scope: !950)
!7326 = !DILocation(line: 1601, column: 9, scope: !950)
!7327 = !DILocation(line: 1602, column: 5, scope: !951)
!7328 = !DILocation(line: 1603, column: 58, scope: !944)
!7329 = !DILocation(line: 1603, column: 5, scope: !944)
!7330 = !DILocation(line: 1604, column: 1, scope: !944)
!7331 = !DILocation(line: 1610, column: 40, scope: !952)
!7332 = !DILocation(line: 1610, column: 57, scope: !952)
!7333 = !DILocation(line: 1612, column: 5, scope: !952)
!7334 = !DILocation(line: 1612, column: 15, scope: !952)
!7335 = !DILocation(line: 1613, column: 5, scope: !952)
!7336 = !DILocation(line: 1613, column: 16, scope: !952)
!7337 = !DILocation(line: 1613, column: 30, scope: !952)
!7338 = !DILocation(line: 1613, column: 41, scope: !952)
!7339 = !DILocation(line: 1614, column: 5, scope: !952)
!7340 = !DILocation(line: 1614, column: 11, scope: !952)
!7341 = !DILocation(line: 1616, column: 35, scope: !952)
!7342 = !DILocation(line: 1616, column: 41, scope: !952)
!7343 = !DILocation(line: 1616, column: 50, scope: !952)
!7344 = !DILocation(line: 1616, column: 54, scope: !7345)
!7345 = !DILexicalBlockFile(scope: !952, file: !394, discriminator: 1)
!7346 = !DILocation(line: 1616, column: 60, scope: !952)
!7347 = !DILocation(line: 1616, column: 54, scope: !952)
!7348 = !DILocation(line: 1616, column: 69, scope: !952)
!7349 = !DILocation(line: 1616, column: 72, scope: !7350)
!7350 = !DILexicalBlockFile(scope: !952, file: !394, discriminator: 3)
!7351 = !DILocation(line: 1616, column: 78, scope: !952)
!7352 = !DILocation(line: 1616, column: 87, scope: !952)
!7353 = !DILocation(line: 1616, column: 34, scope: !952)
!7354 = !DILocation(line: 1616, column: 98, scope: !7355)
!7355 = !DILexicalBlockFile(scope: !952, file: !394, discriminator: 5)
!7356 = !DILocation(line: 1616, column: 104, scope: !952)
!7357 = !DILocation(line: 1616, column: 115, scope: !952)
!7358 = !DILocation(line: 1616, column: 121, scope: !952)
!7359 = !DILocation(line: 1616, column: 113, scope: !952)
!7360 = !DILocation(line: 1616, column: 34, scope: !7361)
!7361 = !DILexicalBlockFile(scope: !7362, file: !394, discriminator: 6)
!7362 = !DILexicalBlockFile(scope: !7363, file: !394, discriminator: 4)
!7363 = !DILexicalBlockFile(scope: !952, file: !394, discriminator: 2)
!7364 = !DILocation(line: 1616, column: 18, scope: !7365)
!7365 = !DILexicalBlockFile(scope: !7366, file: !394, discriminator: 8)
!7366 = !DILexicalBlockFile(scope: !952, file: !394, discriminator: 7)
!7367 = !DILocation(line: 1617, column: 9, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !952, file: !394, line: 1617, column: 9)
!7369 = !DILocation(line: 1617, column: 14, scope: !7368)
!7370 = !DILocation(line: 1617, column: 11, scope: !7368)
!7371 = !DILocation(line: 1617, column: 9, scope: !952)
!7372 = !DILocation(line: 1618, column: 42, scope: !7368)
!7373 = !DILocation(line: 1618, column: 48, scope: !7368)
!7374 = !DILocation(line: 1618, column: 16, scope: !7368)
!7375 = !DILocation(line: 1618, column: 9, scope: !7368)
!7376 = !DILocation(line: 1620, column: 49, scope: !952)
!7377 = !DILocation(line: 1620, column: 11, scope: !952)
!7378 = !DILocation(line: 1620, column: 9, scope: !952)
!7379 = !DILocation(line: 1621, column: 9, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !952, file: !394, line: 1621, column: 9)
!7381 = !DILocation(line: 1621, column: 13, scope: !7380)
!7382 = !DILocation(line: 1621, column: 9, scope: !952)
!7383 = !DILocation(line: 1622, column: 9, scope: !7380)
!7384 = !DILocation(line: 1623, column: 46, scope: !952)
!7385 = !DILocation(line: 1623, column: 28, scope: !952)
!7386 = !DILocation(line: 1623, column: 53, scope: !952)
!7387 = !DILocation(line: 1623, column: 26, scope: !952)
!7388 = !DILocation(line: 1623, column: 9, scope: !952)
!7389 = !DILocation(line: 1624, column: 17, scope: !952)
!7390 = !DILocation(line: 1624, column: 15, scope: !952)
!7391 = !DILocation(line: 1625, column: 13, scope: !952)
!7392 = !DILocation(line: 1626, column: 9, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !952, file: !394, line: 1626, column: 9)
!7394 = !DILocation(line: 1626, column: 22, scope: !7393)
!7395 = !DILocation(line: 1626, column: 9, scope: !952)
!7396 = !DILocation(line: 1627, column: 16, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7393, file: !394, line: 1626, column: 27)
!7398 = !DILocation(line: 1627, column: 21, scope: !7397)
!7399 = !DILocation(line: 1627, column: 27, scope: !7397)
!7400 = !DILocation(line: 1627, column: 36, scope: !7397)
!7401 = !DILocation(line: 1627, column: 42, scope: !7397)
!7402 = !DILocation(line: 1627, column: 34, scope: !7397)
!7403 = !DILocation(line: 1627, column: 47, scope: !7397)
!7404 = !DILocation(line: 1627, column: 9, scope: !7397)
!7405 = !DILocation(line: 1628, column: 22, scope: !7397)
!7406 = !DILocation(line: 1628, column: 19, scope: !7397)
!7407 = !DILocation(line: 1629, column: 20, scope: !7397)
!7408 = !DILocation(line: 1629, column: 17, scope: !7397)
!7409 = !DILocation(line: 1630, column: 22, scope: !7397)
!7410 = !DILocation(line: 1630, column: 9, scope: !7397)
!7411 = !DILocation(line: 1630, column: 15, scope: !7397)
!7412 = !DILocation(line: 1630, column: 19, scope: !7397)
!7413 = !DILocation(line: 1631, column: 5, scope: !7397)
!7414 = !DILocation(line: 1633, column: 9, scope: !963)
!7415 = !DILocation(line: 1633, column: 15, scope: !963)
!7416 = !DILocation(line: 1633, column: 9, scope: !952)
!7417 = !DILocation(line: 1634, column: 9, scope: !962)
!7418 = !DILocation(line: 1634, column: 19, scope: !962)
!7419 = !DILocation(line: 1634, column: 58, scope: !962)
!7420 = !DILocation(line: 1634, column: 23, scope: !962)
!7421 = !DILocation(line: 1635, column: 13, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !962, file: !394, line: 1635, column: 13)
!7423 = !DILocation(line: 1635, column: 15, scope: !7422)
!7424 = !DILocation(line: 1635, column: 13, scope: !962)
!7425 = !DILocation(line: 1636, column: 13, scope: !7422)
!7426 = !DILocation(line: 1637, column: 9, scope: !962)
!7427 = !DILocation(line: 1637, column: 14, scope: !7428)
!7428 = !DILexicalBlockFile(scope: !965, file: !394, discriminator: 1)
!7429 = !DILocation(line: 1637, column: 24, scope: !965)
!7430 = !DILocation(line: 1637, column: 54, scope: !965)
!7431 = !DILocation(line: 1637, column: 66, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !965, file: !394, line: 1637, column: 63)
!7433 = !DILocation(line: 1637, column: 83, scope: !7432)
!7434 = !DILocation(line: 1637, column: 63, scope: !7432)
!7435 = !DILocation(line: 1637, column: 93, scope: !7432)
!7436 = !DILocation(line: 1637, column: 63, scope: !965)
!7437 = !DILocation(line: 1637, column: 63, scope: !7438)
!7438 = !DILexicalBlockFile(scope: !965, file: !394, discriminator: 2)
!7439 = !DILocation(line: 1637, column: 124, scope: !7440)
!7440 = !DILexicalBlockFile(scope: !7432, file: !394, discriminator: 3)
!7441 = !DILocation(line: 1637, column: 142, scope: !7432)
!7442 = !DILocation(line: 1637, column: 152, scope: !7432)
!7443 = !DILocation(line: 1637, column: 177, scope: !7432)
!7444 = !DILocation(line: 1637, column: 108, scope: !7432)
!7445 = !DILocation(line: 1637, column: 196, scope: !7446)
!7446 = !DILexicalBlockFile(scope: !962, file: !394, discriminator: 4)
!7447 = !DILocation(line: 1637, column: 196, scope: !965)
!7448 = !DILocation(line: 1637, column: 196, scope: !7449)
!7449 = !DILexicalBlockFile(scope: !965, file: !394, discriminator: 5)
!7450 = !DILocation(line: 1638, column: 5, scope: !963)
!7451 = !DILocation(line: 1638, column: 5, scope: !7452)
!7452 = !DILexicalBlockFile(scope: !963, file: !394, discriminator: 1)
!7453 = !DILocation(line: 1638, column: 5, scope: !962)
!7454 = !DILocation(line: 1639, column: 31, scope: !952)
!7455 = !DILocation(line: 1639, column: 5, scope: !952)
!7456 = !DILocation(line: 1640, column: 5, scope: !952)
!7457 = !DILocation(line: 1640, column: 12, scope: !7458)
!7458 = !DILexicalBlockFile(scope: !7345, file: !394, discriminator: 2)
!7459 = !DILocation(line: 1640, column: 22, scope: !952)
!7460 = !DILocation(line: 1643, column: 9, scope: !967)
!7461 = !DILocation(line: 1643, column: 20, scope: !967)
!7462 = !DILocation(line: 1643, column: 25, scope: !967)
!7463 = !DILocation(line: 1643, column: 31, scope: !967)
!7464 = !{!1598, !1483, i64 128}
!7465 = !DILocation(line: 1643, column: 46, scope: !7466)
!7466 = !DILexicalBlockFile(scope: !967, file: !394, discriminator: 1)
!7467 = !DILocation(line: 1643, column: 59, scope: !967)
!7468 = !DILocation(line: 1643, column: 65, scope: !967)
!7469 = !DILocation(line: 1643, column: 58, scope: !967)
!7470 = !DILocation(line: 1643, column: 56, scope: !967)
!7471 = !DILocation(line: 1643, column: 81, scope: !7472)
!7472 = !DILexicalBlockFile(scope: !967, file: !394, discriminator: 2)
!7473 = !DILocation(line: 1643, column: 87, scope: !967)
!7474 = !DILocation(line: 1643, column: 102, scope: !967)
!7475 = !DILocation(line: 1643, column: 114, scope: !967)
!7476 = !DILocation(line: 1643, column: 120, scope: !967)
!7477 = !DILocation(line: 1643, column: 112, scope: !967)
!7478 = !DILocation(line: 1643, column: 99, scope: !967)
!7479 = !DILocation(line: 1643, column: 20, scope: !7480)
!7480 = !DILexicalBlockFile(scope: !7481, file: !394, discriminator: 4)
!7481 = !DILexicalBlockFile(scope: !967, file: !394, discriminator: 3)
!7482 = !DILocation(line: 1644, column: 13, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !967, file: !394, line: 1644, column: 13)
!7484 = !DILocation(line: 1644, column: 15, scope: !7483)
!7485 = !DILocation(line: 1644, column: 13, scope: !967)
!7486 = !DILocation(line: 1645, column: 13, scope: !7483)
!7487 = !DILocation(line: 1646, column: 38, scope: !967)
!7488 = !DILocation(line: 1646, column: 44, scope: !967)
!7489 = !DILocation(line: 1646, column: 50, scope: !967)
!7490 = !DILocation(line: 1646, column: 48, scope: !967)
!7491 = !DILocation(line: 1646, column: 59, scope: !967)
!7492 = !DILocation(line: 1646, column: 13, scope: !967)
!7493 = !DILocation(line: 1646, column: 11, scope: !967)
!7494 = !DILocation(line: 1647, column: 13, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !967, file: !394, line: 1647, column: 13)
!7496 = !DILocation(line: 1647, column: 15, scope: !7495)
!7497 = !DILocation(line: 1647, column: 13, scope: !967)
!7498 = !DILocation(line: 1648, column: 13, scope: !7495)
!7499 = !DILocation(line: 1649, column: 13, scope: !971)
!7500 = !DILocation(line: 1649, column: 15, scope: !971)
!7501 = !DILocation(line: 1649, column: 20, scope: !971)
!7502 = !DILocation(line: 1649, column: 23, scope: !7503)
!7503 = !DILexicalBlockFile(scope: !971, file: !394, discriminator: 1)
!7504 = !DILocation(line: 1649, column: 25, scope: !971)
!7505 = !DILocation(line: 1649, column: 13, scope: !967)
!7506 = !DILocation(line: 1651, column: 17, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !970, file: !394, line: 1651, column: 17)
!7508 = !DILocation(line: 1651, column: 19, scope: !7507)
!7509 = !DILocation(line: 1651, column: 24, scope: !7507)
!7510 = !DILocation(line: 1651, column: 27, scope: !7511)
!7511 = !DILexicalBlockFile(scope: !7507, file: !394, discriminator: 1)
!7512 = !DILocation(line: 1651, column: 35, scope: !7507)
!7513 = !DILocation(line: 1651, column: 17, scope: !970)
!7514 = !DILocation(line: 1652, column: 43, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7516, file: !394, line: 1652, column: 21)
!7516 = distinct !DILexicalBlock(scope: !7507, file: !394, line: 1651, column: 40)
!7517 = !DILocation(line: 1652, column: 21, scope: !7515)
!7518 = !DILocation(line: 1652, column: 21, scope: !7516)
!7519 = !DILocation(line: 1653, column: 21, scope: !7515)
!7520 = !DILocation(line: 1654, column: 24, scope: !7516)
!7521 = !DILocation(line: 1654, column: 17, scope: !7516)
!7522 = !DILocation(line: 1656, column: 13, scope: !970)
!7523 = !DILocation(line: 1656, column: 18, scope: !7524)
!7524 = !DILexicalBlockFile(scope: !969, file: !394, discriminator: 1)
!7525 = !DILocation(line: 1656, column: 28, scope: !969)
!7526 = !DILocation(line: 1656, column: 58, scope: !969)
!7527 = !DILocation(line: 1656, column: 72, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !969, file: !394, line: 1656, column: 69)
!7529 = !DILocation(line: 1656, column: 89, scope: !7528)
!7530 = !DILocation(line: 1656, column: 69, scope: !7528)
!7531 = !DILocation(line: 1656, column: 99, scope: !7528)
!7532 = !DILocation(line: 1656, column: 69, scope: !969)
!7533 = !DILocation(line: 1656, column: 69, scope: !7534)
!7534 = !DILexicalBlockFile(scope: !969, file: !394, discriminator: 2)
!7535 = !DILocation(line: 1656, column: 130, scope: !7536)
!7536 = !DILexicalBlockFile(scope: !7528, file: !394, discriminator: 3)
!7537 = !DILocation(line: 1656, column: 148, scope: !7528)
!7538 = !DILocation(line: 1656, column: 158, scope: !7528)
!7539 = !DILocation(line: 1656, column: 183, scope: !7528)
!7540 = !DILocation(line: 1656, column: 114, scope: !7528)
!7541 = !DILocation(line: 1656, column: 202, scope: !7542)
!7542 = !DILexicalBlockFile(scope: !970, file: !394, discriminator: 4)
!7543 = !DILocation(line: 1656, column: 202, scope: !969)
!7544 = !DILocation(line: 1656, column: 202, scope: !7545)
!7545 = !DILexicalBlockFile(scope: !969, file: !394, discriminator: 5)
!7546 = !DILocation(line: 1657, column: 59, scope: !970)
!7547 = !DILocation(line: 1658, column: 13, scope: !970)
!7548 = !DILocation(line: 1660, column: 22, scope: !967)
!7549 = !DILocation(line: 1660, column: 19, scope: !967)
!7550 = !DILocation(line: 1661, column: 20, scope: !967)
!7551 = !DILocation(line: 1661, column: 17, scope: !967)
!7552 = !DILocation(line: 1662, column: 5, scope: !952)
!7553 = !DILocation(line: 1662, column: 5, scope: !7345)
!7554 = !DILocation(line: 1664, column: 5, scope: !952)
!7555 = !DILocation(line: 1664, column: 11, scope: !952)
!7556 = !DILocation(line: 1664, column: 15, scope: !952)
!7557 = !DILocation(line: 1665, column: 5, scope: !952)
!7558 = !DILocation(line: 1665, column: 11, scope: !952)
!7559 = !DILocation(line: 1665, column: 19, scope: !952)
!7560 = !DILocation(line: 1666, column: 5, scope: !952)
!7561 = !DILocation(line: 1666, column: 11, scope: !952)
!7562 = !DILocation(line: 1666, column: 20, scope: !952)
!7563 = !DILocation(line: 1670, column: 5, scope: !952)
!7564 = !DILocation(line: 1670, column: 12, scope: !7565)
!7565 = !DILexicalBlockFile(scope: !7345, file: !394, discriminator: 4)
!7566 = !DILocation(line: 1670, column: 22, scope: !952)
!7567 = !DILocation(line: 1670, column: 26, scope: !952)
!7568 = !DILocation(line: 1670, column: 29, scope: !7363)
!7569 = !DILocation(line: 1670, column: 35, scope: !952)
!7570 = !DILocation(line: 1670, column: 46, scope: !952)
!7571 = !DILocation(line: 1670, column: 52, scope: !952)
!7572 = !DILocation(line: 1670, column: 44, scope: !952)
!7573 = !DILocation(line: 1670, column: 5, scope: !7350)
!7574 = !DILocation(line: 1671, column: 9, scope: !973)
!7575 = !DILocation(line: 1671, column: 20, scope: !973)
!7576 = !DILocation(line: 1671, column: 52, scope: !973)
!7577 = !DILocation(line: 1671, column: 24, scope: !973)
!7578 = !DILocation(line: 1672, column: 13, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !973, file: !394, line: 1672, column: 13)
!7580 = !DILocation(line: 1672, column: 15, scope: !7579)
!7581 = !DILocation(line: 1672, column: 13, scope: !973)
!7582 = !DILocation(line: 1673, column: 13, scope: !7579)
!7583 = !DILocation(line: 1674, column: 13, scope: !977)
!7584 = !DILocation(line: 1674, column: 15, scope: !977)
!7585 = !DILocation(line: 1674, column: 20, scope: !977)
!7586 = !DILocation(line: 1674, column: 23, scope: !7587)
!7587 = !DILexicalBlockFile(scope: !977, file: !394, discriminator: 1)
!7588 = !DILocation(line: 1674, column: 25, scope: !977)
!7589 = !DILocation(line: 1674, column: 13, scope: !973)
!7590 = !DILocation(line: 1676, column: 17, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !976, file: !394, line: 1676, column: 17)
!7592 = !DILocation(line: 1676, column: 19, scope: !7591)
!7593 = !DILocation(line: 1676, column: 24, scope: !7591)
!7594 = !DILocation(line: 1676, column: 27, scope: !7595)
!7595 = !DILexicalBlockFile(scope: !7591, file: !394, discriminator: 1)
!7596 = !DILocation(line: 1676, column: 35, scope: !7591)
!7597 = !DILocation(line: 1676, column: 17, scope: !976)
!7598 = !DILocation(line: 1677, column: 43, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !394, line: 1677, column: 21)
!7600 = distinct !DILexicalBlock(scope: !7591, file: !394, line: 1676, column: 40)
!7601 = !DILocation(line: 1677, column: 21, scope: !7599)
!7602 = !DILocation(line: 1677, column: 21, scope: !7600)
!7603 = !DILocation(line: 1678, column: 21, scope: !7599)
!7604 = !DILocation(line: 1679, column: 24, scope: !7600)
!7605 = !DILocation(line: 1679, column: 17, scope: !7600)
!7606 = !DILocation(line: 1681, column: 13, scope: !976)
!7607 = !DILocation(line: 1681, column: 18, scope: !7608)
!7608 = !DILexicalBlockFile(scope: !975, file: !394, discriminator: 1)
!7609 = !DILocation(line: 1681, column: 28, scope: !975)
!7610 = !DILocation(line: 1681, column: 58, scope: !975)
!7611 = !DILocation(line: 1681, column: 72, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !975, file: !394, line: 1681, column: 69)
!7613 = !DILocation(line: 1681, column: 89, scope: !7612)
!7614 = !DILocation(line: 1681, column: 69, scope: !7612)
!7615 = !DILocation(line: 1681, column: 99, scope: !7612)
!7616 = !DILocation(line: 1681, column: 69, scope: !975)
!7617 = !DILocation(line: 1681, column: 69, scope: !7618)
!7618 = !DILexicalBlockFile(scope: !975, file: !394, discriminator: 2)
!7619 = !DILocation(line: 1681, column: 130, scope: !7620)
!7620 = !DILexicalBlockFile(scope: !7612, file: !394, discriminator: 3)
!7621 = !DILocation(line: 1681, column: 148, scope: !7612)
!7622 = !DILocation(line: 1681, column: 158, scope: !7612)
!7623 = !DILocation(line: 1681, column: 183, scope: !7612)
!7624 = !DILocation(line: 1681, column: 114, scope: !7612)
!7625 = !DILocation(line: 1681, column: 202, scope: !7626)
!7626 = !DILexicalBlockFile(scope: !976, file: !394, discriminator: 4)
!7627 = !DILocation(line: 1681, column: 202, scope: !975)
!7628 = !DILocation(line: 1681, column: 202, scope: !7629)
!7629 = !DILexicalBlockFile(scope: !975, file: !394, discriminator: 5)
!7630 = !DILocation(line: 1682, column: 59, scope: !976)
!7631 = !DILocation(line: 1683, column: 13, scope: !976)
!7632 = !DILocation(line: 1685, column: 13, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !973, file: !394, line: 1685, column: 13)
!7634 = !DILocation(line: 1685, column: 25, scope: !7633)
!7635 = !DILocation(line: 1685, column: 23, scope: !7633)
!7636 = !DILocation(line: 1685, column: 13, scope: !973)
!7637 = !DILocation(line: 1686, column: 20, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7633, file: !394, line: 1685, column: 28)
!7639 = !DILocation(line: 1686, column: 26, scope: !7638)
!7640 = !DILocation(line: 1686, column: 24, scope: !7638)
!7641 = !DILocation(line: 1686, column: 35, scope: !7638)
!7642 = !DILocation(line: 1686, column: 41, scope: !7638)
!7643 = !DILocation(line: 1686, column: 50, scope: !7638)
!7644 = !DILocation(line: 1686, column: 56, scope: !7638)
!7645 = !DILocation(line: 1686, column: 48, scope: !7638)
!7646 = !DILocation(line: 1686, column: 61, scope: !7638)
!7647 = !DILocation(line: 1686, column: 13, scope: !7638)
!7648 = !DILocation(line: 1687, column: 24, scope: !7638)
!7649 = !DILocation(line: 1687, column: 21, scope: !7638)
!7650 = !DILocation(line: 1688, column: 26, scope: !7638)
!7651 = !DILocation(line: 1688, column: 13, scope: !7638)
!7652 = !DILocation(line: 1688, column: 19, scope: !7638)
!7653 = !DILocation(line: 1688, column: 23, scope: !7638)
!7654 = !DILocation(line: 1689, column: 26, scope: !7638)
!7655 = !DILocation(line: 1689, column: 23, scope: !7638)
!7656 = !DILocation(line: 1690, column: 9, scope: !7638)
!7657 = !DILocation(line: 1691, column: 18, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7633, file: !394, line: 1691, column: 18)
!7659 = !DILocation(line: 1691, column: 28, scope: !7658)
!7660 = !DILocation(line: 1691, column: 18, scope: !7633)
!7661 = !DILocation(line: 1692, column: 20, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7658, file: !394, line: 1691, column: 33)
!7663 = !DILocation(line: 1692, column: 26, scope: !7662)
!7664 = !DILocation(line: 1692, column: 24, scope: !7662)
!7665 = !DILocation(line: 1692, column: 35, scope: !7662)
!7666 = !DILocation(line: 1692, column: 41, scope: !7662)
!7667 = !DILocation(line: 1692, column: 50, scope: !7662)
!7668 = !DILocation(line: 1692, column: 56, scope: !7662)
!7669 = !DILocation(line: 1692, column: 48, scope: !7662)
!7670 = !DILocation(line: 1692, column: 61, scope: !7662)
!7671 = !DILocation(line: 1692, column: 13, scope: !7662)
!7672 = !DILocation(line: 1693, column: 24, scope: !7662)
!7673 = !DILocation(line: 1693, column: 21, scope: !7662)
!7674 = !DILocation(line: 1694, column: 26, scope: !7662)
!7675 = !DILocation(line: 1694, column: 13, scope: !7662)
!7676 = !DILocation(line: 1694, column: 19, scope: !7662)
!7677 = !DILocation(line: 1694, column: 23, scope: !7662)
!7678 = !DILocation(line: 1695, column: 23, scope: !7662)
!7679 = !DILocation(line: 1696, column: 9, scope: !7662)
!7680 = !DILocation(line: 1697, column: 13, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !973, file: !394, line: 1697, column: 13)
!7682 = !DILocation(line: 1697, column: 23, scope: !7681)
!7683 = !DILocation(line: 1697, column: 13, scope: !973)
!7684 = !DILocation(line: 1698, column: 13, scope: !7681)
!7685 = !DILocation(line: 1699, column: 5, scope: !952)
!7686 = !DILocation(line: 1699, column: 5, scope: !7345)
!7687 = !DILocation(line: 1701, column: 12, scope: !952)
!7688 = !DILocation(line: 1701, column: 5, scope: !952)
!7689 = !DILocation(line: 1704, column: 5, scope: !952)
!7690 = !DILocation(line: 1704, column: 10, scope: !7691)
!7691 = !DILexicalBlockFile(scope: !979, file: !394, discriminator: 1)
!7692 = !DILocation(line: 1704, column: 20, scope: !979)
!7693 = !DILocation(line: 1704, column: 51, scope: !979)
!7694 = !DILocation(line: 1704, column: 61, scope: !982)
!7695 = !DILocation(line: 1704, column: 77, scope: !982)
!7696 = !DILocation(line: 1704, column: 61, scope: !979)
!7697 = !DILocation(line: 1704, column: 92, scope: !7698)
!7698 = !DILexicalBlockFile(scope: !982, file: !394, discriminator: 2)
!7699 = !DILocation(line: 1704, column: 97, scope: !7700)
!7700 = !DILexicalBlockFile(scope: !981, file: !394, discriminator: 4)
!7701 = !DILocation(line: 1704, column: 107, scope: !981)
!7702 = !DILocation(line: 1704, column: 137, scope: !981)
!7703 = !DILocation(line: 1704, column: 163, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !981, file: !394, line: 1704, column: 160)
!7705 = !DILocation(line: 1704, column: 180, scope: !7704)
!7706 = !DILocation(line: 1704, column: 160, scope: !7704)
!7707 = !DILocation(line: 1704, column: 190, scope: !7704)
!7708 = !DILocation(line: 1704, column: 160, scope: !981)
!7709 = !DILocation(line: 1704, column: 160, scope: !7710)
!7710 = !DILexicalBlockFile(scope: !981, file: !394, discriminator: 5)
!7711 = !DILocation(line: 1704, column: 221, scope: !7712)
!7712 = !DILexicalBlockFile(scope: !7704, file: !394, discriminator: 6)
!7713 = !DILocation(line: 1704, column: 239, scope: !7704)
!7714 = !DILocation(line: 1704, column: 249, scope: !7704)
!7715 = !DILocation(line: 1704, column: 274, scope: !7704)
!7716 = !DILocation(line: 1704, column: 205, scope: !7704)
!7717 = !DILocation(line: 1704, column: 293, scope: !7718)
!7718 = !DILexicalBlockFile(scope: !982, file: !394, discriminator: 7)
!7719 = !DILocation(line: 1704, column: 293, scope: !981)
!7720 = !DILocation(line: 1704, column: 293, scope: !7721)
!7721 = !DILexicalBlockFile(scope: !981, file: !394, discriminator: 8)
!7722 = !DILocation(line: 1704, column: 293, scope: !7723)
!7723 = !DILexicalBlockFile(scope: !981, file: !394, discriminator: 9)
!7724 = !DILocation(line: 1704, column: 306, scope: !7725)
!7725 = !DILexicalBlockFile(scope: !7350, file: !394, discriminator: 10)
!7726 = !DILocation(line: 1704, column: 306, scope: !979)
!7727 = !DILocation(line: 1704, column: 306, scope: !7728)
!7728 = !DILexicalBlockFile(scope: !979, file: !394, discriminator: 11)
!7729 = !DILocation(line: 1705, column: 5, scope: !952)
!7730 = !DILocation(line: 1706, column: 1, scope: !952)
!7731 = !DILocation(line: 1709, column: 41, scope: !997)
!7732 = !DILocation(line: 1711, column: 5, scope: !997)
!7733 = !DILocation(line: 1711, column: 16, scope: !997)
!7734 = !DILocation(line: 1711, column: 22, scope: !997)
!7735 = !DILocation(line: 1713, column: 27, scope: !997)
!7736 = !DILocation(line: 1713, column: 33, scope: !997)
!7737 = !DILocation(line: 1713, column: 42, scope: !997)
!7738 = !DILocation(line: 1713, column: 46, scope: !7739)
!7739 = !DILexicalBlockFile(scope: !997, file: !394, discriminator: 1)
!7740 = !DILocation(line: 1713, column: 52, scope: !997)
!7741 = !DILocation(line: 1713, column: 46, scope: !997)
!7742 = !DILocation(line: 1713, column: 61, scope: !997)
!7743 = !DILocation(line: 1713, column: 64, scope: !7744)
!7744 = !DILexicalBlockFile(scope: !997, file: !394, discriminator: 3)
!7745 = !DILocation(line: 1713, column: 70, scope: !997)
!7746 = !DILocation(line: 1713, column: 79, scope: !997)
!7747 = !DILocation(line: 1713, column: 26, scope: !997)
!7748 = !DILocation(line: 1713, column: 90, scope: !7749)
!7749 = !DILexicalBlockFile(scope: !997, file: !394, discriminator: 5)
!7750 = !DILocation(line: 1713, column: 96, scope: !997)
!7751 = !DILocation(line: 1713, column: 107, scope: !997)
!7752 = !DILocation(line: 1713, column: 113, scope: !997)
!7753 = !DILocation(line: 1713, column: 105, scope: !997)
!7754 = !DILocation(line: 1713, column: 26, scope: !7755)
!7755 = !DILexicalBlockFile(scope: !7756, file: !394, discriminator: 6)
!7756 = !DILexicalBlockFile(scope: !7757, file: !394, discriminator: 4)
!7757 = !DILexicalBlockFile(scope: !997, file: !394, discriminator: 2)
!7758 = !DILocation(line: 1713, column: 10, scope: !7759)
!7759 = !DILexicalBlockFile(scope: !7760, file: !394, discriminator: 8)
!7760 = !DILexicalBlockFile(scope: !997, file: !394, discriminator: 7)
!7761 = !DILocation(line: 1720, column: 9, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !997, file: !394, line: 1720, column: 9)
!7763 = !DILocation(line: 1720, column: 14, scope: !7762)
!7764 = !DILocation(line: 1720, column: 9, scope: !997)
!7765 = !DILocation(line: 1721, column: 42, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7762, file: !394, line: 1720, column: 19)
!7767 = !DILocation(line: 1721, column: 48, scope: !7766)
!7768 = !DILocation(line: 1721, column: 57, scope: !7766)
!7769 = !DILocation(line: 1721, column: 63, scope: !7766)
!7770 = !DILocation(line: 1721, column: 55, scope: !7766)
!7771 = !DILocation(line: 1721, column: 68, scope: !7766)
!7772 = !DILocation(line: 1721, column: 16, scope: !7766)
!7773 = !DILocation(line: 1721, column: 9, scope: !7766)
!7774 = !DILocation(line: 1725, column: 31, scope: !997)
!7775 = !DILocation(line: 1725, column: 5, scope: !997)
!7776 = !DILocation(line: 1726, column: 37, scope: !997)
!7777 = !DILocation(line: 1726, column: 9, scope: !997)
!7778 = !DILocation(line: 1726, column: 7, scope: !997)
!7779 = !DILocation(line: 1727, column: 9, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !997, file: !394, line: 1727, column: 9)
!7781 = !DILocation(line: 1727, column: 11, scope: !7780)
!7782 = !DILocation(line: 1727, column: 9, scope: !997)
!7783 = !DILocation(line: 1728, column: 9, scope: !7780)
!7784 = !DILocation(line: 1729, column: 9, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !997, file: !394, line: 1729, column: 9)
!7786 = !DILocation(line: 1729, column: 11, scope: !7785)
!7787 = !DILocation(line: 1729, column: 9, scope: !997)
!7788 = !DILocation(line: 1730, column: 11, scope: !7785)
!7789 = !DILocation(line: 1730, column: 9, scope: !7785)
!7790 = !DILocation(line: 1731, column: 5, scope: !997)
!7791 = !DILocation(line: 1731, column: 11, scope: !997)
!7792 = !DILocation(line: 1731, column: 15, scope: !997)
!7793 = !DILocation(line: 1732, column: 38, scope: !997)
!7794 = !DILocation(line: 1732, column: 44, scope: !997)
!7795 = !DILocation(line: 1732, column: 52, scope: !997)
!7796 = !DILocation(line: 1732, column: 12, scope: !997)
!7797 = !DILocation(line: 1732, column: 5, scope: !997)
!7798 = !DILocation(line: 1733, column: 1, scope: !997)
!7799 = !DILocation(line: 708, column: 30, scope: !1064)
!7800 = !DILocation(line: 710, column: 5, scope: !1064)
!7801 = !DILocation(line: 710, column: 14, scope: !1064)
!7802 = !DILocation(line: 711, column: 5, scope: !1064)
!7803 = !DILocation(line: 711, column: 15, scope: !1064)
!7804 = !DILocation(line: 712, column: 38, scope: !1064)
!7805 = !DILocation(line: 712, column: 44, scope: !1064)
!7806 = !DILocation(line: 712, column: 49, scope: !1064)
!7807 = !DILocation(line: 712, column: 11, scope: !1064)
!7808 = !DILocation(line: 712, column: 9, scope: !1064)
!7809 = !DILocation(line: 713, column: 9, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !1064, file: !394, line: 713, column: 9)
!7811 = !DILocation(line: 713, column: 13, scope: !7810)
!7812 = !DILocation(line: 713, column: 9, scope: !1064)
!7813 = !DILocation(line: 714, column: 9, scope: !7810)
!7814 = !DILocation(line: 715, column: 26, scope: !1064)
!7815 = !DILocation(line: 715, column: 31, scope: !1064)
!7816 = !DILocation(line: 715, column: 9, scope: !1064)
!7817 = !DILocation(line: 715, column: 7, scope: !1064)
!7818 = !DILocation(line: 716, column: 5, scope: !1064)
!7819 = !DILocation(line: 716, column: 10, scope: !7820)
!7820 = !DILexicalBlockFile(scope: !1072, file: !394, discriminator: 1)
!7821 = !DILocation(line: 716, column: 20, scope: !1072)
!7822 = !DILocation(line: 716, column: 50, scope: !1072)
!7823 = !DILocation(line: 716, column: 64, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !1072, file: !394, line: 716, column: 61)
!7825 = !DILocation(line: 716, column: 81, scope: !7824)
!7826 = !DILocation(line: 716, column: 61, scope: !7824)
!7827 = !DILocation(line: 716, column: 91, scope: !7824)
!7828 = !DILocation(line: 716, column: 61, scope: !1072)
!7829 = !DILocation(line: 716, column: 61, scope: !7830)
!7830 = !DILexicalBlockFile(scope: !1072, file: !394, discriminator: 2)
!7831 = !DILocation(line: 716, column: 122, scope: !7832)
!7832 = !DILexicalBlockFile(scope: !7824, file: !394, discriminator: 3)
!7833 = !DILocation(line: 716, column: 140, scope: !7824)
!7834 = !DILocation(line: 716, column: 150, scope: !7824)
!7835 = !DILocation(line: 716, column: 175, scope: !7824)
!7836 = !DILocation(line: 716, column: 106, scope: !7824)
!7837 = !DILocation(line: 716, column: 194, scope: !7838)
!7838 = !DILexicalBlockFile(scope: !1064, file: !394, discriminator: 4)
!7839 = !DILocation(line: 716, column: 194, scope: !1072)
!7840 = !DILocation(line: 716, column: 194, scope: !7841)
!7841 = !DILexicalBlockFile(scope: !1072, file: !394, discriminator: 5)
!7842 = !DILocation(line: 717, column: 9, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !1064, file: !394, line: 717, column: 9)
!7844 = !DILocation(line: 717, column: 11, scope: !7843)
!7845 = !DILocation(line: 717, column: 9, scope: !1064)
!7846 = !DILocation(line: 718, column: 14, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !394, line: 718, column: 13)
!7848 = distinct !DILexicalBlock(scope: !7843, file: !394, line: 717, column: 16)
!7849 = !DILocation(line: 718, column: 13, scope: !7848)
!7850 = !DILocation(line: 719, column: 26, scope: !7847)
!7851 = !DILocation(line: 721, column: 38, scope: !7847)
!7852 = !DILocation(line: 719, column: 13, scope: !7847)
!7853 = !DILocation(line: 722, column: 9, scope: !7848)
!7854 = !DILocation(line: 724, column: 21, scope: !1064)
!7855 = !DILocation(line: 724, column: 5, scope: !1064)
!7856 = !DILocation(line: 724, column: 11, scope: !1064)
!7857 = !DILocation(line: 724, column: 19, scope: !1064)
!7858 = !DILocation(line: 725, column: 12, scope: !1064)
!7859 = !DILocation(line: 725, column: 5, scope: !1064)
!7860 = !DILocation(line: 726, column: 1, scope: !1064)
!7861 = !DILocation(line: 496, column: 31, scope: !1099)
!7862 = !DILocation(line: 496, column: 43, scope: !1099)
!7863 = !DILocation(line: 498, column: 9, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !1099, file: !394, line: 498, column: 9)
!7865 = !DILocation(line: 498, column: 15, scope: !7864)
!7866 = !DILocation(line: 498, column: 18, scope: !7864)
!7867 = !DILocation(line: 498, column: 9, scope: !1099)
!7868 = !DILocation(line: 498, column: 30, scope: !7869)
!7869 = !DILexicalBlockFile(scope: !7870, file: !394, discriminator: 1)
!7870 = distinct !DILexicalBlock(scope: !7871, file: !394, line: 498, column: 30)
!7871 = distinct !DILexicalBlock(scope: !7864, file: !394, line: 498, column: 24)
!7872 = !DILocation(line: 498, column: 36, scope: !7870)
!7873 = !DILocation(line: 498, column: 30, scope: !7870)
!7874 = !DILocation(line: 498, column: 30, scope: !7871)
!7875 = !DILocation(line: 498, column: 64, scope: !7876)
!7876 = !DILexicalBlockFile(scope: !7877, file: !394, discriminator: 2)
!7877 = distinct !DILexicalBlock(scope: !7870, file: !394, line: 498, column: 46)
!7878 = !DILocation(line: 498, column: 48, scope: !7877)
!7879 = !DILocation(line: 498, column: 115, scope: !7877)
!7880 = !DILocation(line: 498, column: 140, scope: !7881)
!7881 = !DILexicalBlockFile(scope: !7882, file: !394, discriminator: 3)
!7882 = distinct !DILexicalBlock(scope: !7870, file: !394, line: 498, column: 122)
!7883 = !DILocation(line: 498, column: 124, scope: !7882)
!7884 = !DILocation(line: 498, column: 202, scope: !7885)
!7885 = !DILexicalBlockFile(scope: !7871, file: !394, discriminator: 4)
!7886 = !DILocation(line: 499, column: 29, scope: !1099)
!7887 = !DILocation(line: 499, column: 35, scope: !1099)
!7888 = !DILocation(line: 499, column: 40, scope: !1099)
!7889 = !DILocation(line: 499, column: 12, scope: !1099)
!7890 = !DILocation(line: 499, column: 5, scope: !1099)
!7891 = !DILocation(line: 500, column: 1, scope: !1099)
!7892 = !DILocation(line: 608, column: 29, scope: !1103)
!7893 = !DILocation(line: 608, column: 41, scope: !1103)
!7894 = !DILocation(line: 610, column: 9, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !1103, file: !394, line: 610, column: 9)
!7896 = !DILocation(line: 610, column: 15, scope: !7895)
!7897 = !DILocation(line: 610, column: 18, scope: !7895)
!7898 = !DILocation(line: 610, column: 9, scope: !1103)
!7899 = !DILocation(line: 610, column: 30, scope: !7900)
!7900 = !DILexicalBlockFile(scope: !7901, file: !394, discriminator: 1)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !394, line: 610, column: 30)
!7902 = distinct !DILexicalBlock(scope: !7895, file: !394, line: 610, column: 24)
!7903 = !DILocation(line: 610, column: 36, scope: !7901)
!7904 = !DILocation(line: 610, column: 30, scope: !7901)
!7905 = !DILocation(line: 610, column: 30, scope: !7902)
!7906 = !DILocation(line: 610, column: 64, scope: !7907)
!7907 = !DILexicalBlockFile(scope: !7908, file: !394, discriminator: 2)
!7908 = distinct !DILexicalBlock(scope: !7901, file: !394, line: 610, column: 46)
!7909 = !DILocation(line: 610, column: 48, scope: !7908)
!7910 = !DILocation(line: 610, column: 115, scope: !7908)
!7911 = !DILocation(line: 610, column: 140, scope: !7912)
!7912 = !DILexicalBlockFile(scope: !7913, file: !394, discriminator: 3)
!7913 = distinct !DILexicalBlock(scope: !7901, file: !394, line: 610, column: 122)
!7914 = !DILocation(line: 610, column: 124, scope: !7913)
!7915 = !DILocation(line: 610, column: 202, scope: !7916)
!7916 = !DILexicalBlockFile(scope: !7902, file: !394, discriminator: 4)
!7917 = !DILocation(line: 611, column: 32, scope: !1103)
!7918 = !DILocation(line: 611, column: 38, scope: !1103)
!7919 = !DILocation(line: 611, column: 12, scope: !1103)
!7920 = !DILocation(line: 611, column: 5, scope: !1103)
!7921 = !DILocation(line: 612, column: 1, scope: !1103)
!7922 = !DILocation(line: 615, column: 29, scope: !1107)
!7923 = !DILocation(line: 615, column: 41, scope: !1107)
!7924 = !DILocation(line: 617, column: 9, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !1107, file: !394, line: 617, column: 9)
!7926 = !DILocation(line: 617, column: 15, scope: !7925)
!7927 = !DILocation(line: 617, column: 18, scope: !7925)
!7928 = !DILocation(line: 617, column: 9, scope: !1107)
!7929 = !DILocation(line: 617, column: 30, scope: !7930)
!7930 = !DILexicalBlockFile(scope: !7931, file: !394, discriminator: 1)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !394, line: 617, column: 30)
!7932 = distinct !DILexicalBlock(scope: !7925, file: !394, line: 617, column: 24)
!7933 = !DILocation(line: 617, column: 36, scope: !7931)
!7934 = !DILocation(line: 617, column: 30, scope: !7931)
!7935 = !DILocation(line: 617, column: 30, scope: !7932)
!7936 = !DILocation(line: 617, column: 64, scope: !7937)
!7937 = !DILexicalBlockFile(scope: !7938, file: !394, discriminator: 2)
!7938 = distinct !DILexicalBlock(scope: !7931, file: !394, line: 617, column: 46)
!7939 = !DILocation(line: 617, column: 48, scope: !7938)
!7940 = !DILocation(line: 617, column: 115, scope: !7938)
!7941 = !DILocation(line: 617, column: 140, scope: !7942)
!7942 = !DILexicalBlockFile(scope: !7943, file: !394, discriminator: 3)
!7943 = distinct !DILexicalBlock(scope: !7931, file: !394, line: 617, column: 122)
!7944 = !DILocation(line: 617, column: 124, scope: !7943)
!7945 = !DILocation(line: 617, column: 202, scope: !7946)
!7946 = !DILexicalBlockFile(scope: !7932, file: !394, discriminator: 4)
!7947 = !DILocation(line: 618, column: 32, scope: !1107)
!7948 = !DILocation(line: 618, column: 38, scope: !1107)
!7949 = !DILocation(line: 618, column: 12, scope: !1107)
!7950 = !DILocation(line: 618, column: 5, scope: !1107)
!7951 = !DILocation(line: 619, column: 1, scope: !1107)
!7952 = !DILocation(line: 762, column: 26, scope: !1130)
!7953 = !DILocation(line: 764, column: 5, scope: !1130)
!7954 = !DILocation(line: 764, column: 16, scope: !1130)
!7955 = !DILocation(line: 765, column: 9, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !1130, file: !394, line: 765, column: 9)
!7957 = !DILocation(line: 765, column: 15, scope: !7956)
!7958 = !DILocation(line: 765, column: 27, scope: !7956)
!7959 = !DILocation(line: 765, column: 9, scope: !1130)
!7960 = !DILocation(line: 766, column: 25, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7956, file: !394, line: 765, column: 33)
!7962 = !DILocation(line: 766, column: 9, scope: !7961)
!7963 = !DILocation(line: 768, column: 9, scope: !7961)
!7964 = !DILocation(line: 770, column: 9, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !1130, file: !394, line: 770, column: 9)
!7966 = !DILocation(line: 770, column: 15, scope: !7965)
!7967 = !DILocation(line: 770, column: 9, scope: !1130)
!7968 = !DILocation(line: 771, column: 20, scope: !7965)
!7969 = !DILocation(line: 771, column: 26, scope: !7965)
!7970 = !DILocation(line: 771, column: 9, scope: !7965)
!7971 = !DILocation(line: 772, column: 33, scope: !1130)
!7972 = !DILocation(line: 772, column: 39, scope: !1130)
!7973 = !DILocation(line: 772, column: 20, scope: !1130)
!7974 = !DILocation(line: 772, column: 5, scope: !1130)
!7975 = !DILocation(line: 772, column: 11, scope: !1130)
!7976 = !DILocation(line: 772, column: 18, scope: !1130)
!7977 = !DILocation(line: 773, column: 9, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !1130, file: !394, line: 773, column: 9)
!7979 = !DILocation(line: 773, column: 15, scope: !7978)
!7980 = !DILocation(line: 773, column: 22, scope: !7978)
!7981 = !DILocation(line: 773, column: 9, scope: !1130)
!7982 = !DILocation(line: 774, column: 9, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7978, file: !394, line: 773, column: 37)
!7984 = !DILocation(line: 775, column: 9, scope: !7983)
!7985 = !DILocation(line: 778, column: 9, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !1130, file: !394, line: 778, column: 9)
!7987 = !DILocation(line: 778, column: 15, scope: !7986)
!7988 = !DILocation(line: 778, column: 9, scope: !1130)
!7989 = !DILocation(line: 779, column: 28, scope: !7986)
!7990 = !DILocation(line: 779, column: 34, scope: !7986)
!7991 = !DILocation(line: 779, column: 9, scope: !7986)
!7992 = !DILocation(line: 780, column: 18, scope: !1130)
!7993 = !DILocation(line: 780, column: 5, scope: !1130)
!7994 = !DILocation(line: 780, column: 11, scope: !1130)
!7995 = !DILocation(line: 780, column: 16, scope: !1130)
!7996 = !DILocation(line: 781, column: 9, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !1130, file: !394, line: 781, column: 9)
!7998 = !DILocation(line: 781, column: 15, scope: !7997)
!7999 = !DILocation(line: 781, column: 20, scope: !7997)
!8000 = !DILocation(line: 781, column: 9, scope: !1130)
!8001 = !DILocation(line: 782, column: 25, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7997, file: !394, line: 781, column: 35)
!8003 = !DILocation(line: 782, column: 9, scope: !8002)
!8004 = !DILocation(line: 783, column: 9, scope: !8002)
!8005 = !DILocation(line: 785, column: 5, scope: !1130)
!8006 = !DILocation(line: 785, column: 11, scope: !1130)
!8007 = !DILocation(line: 785, column: 17, scope: !1130)
!8008 = !DILocation(line: 789, column: 14, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !1130, file: !394, line: 789, column: 5)
!8010 = !DILocation(line: 789, column: 20, scope: !8009)
!8011 = !DILocation(line: 789, column: 32, scope: !8009)
!8012 = !DILocation(line: 789, column: 12, scope: !8009)
!8013 = !DILocation(line: 789, column: 10, scope: !8009)
!8014 = !DILocation(line: 789, column: 37, scope: !8015)
!8015 = !DILexicalBlockFile(scope: !8016, file: !394, discriminator: 4)
!8016 = !DILexicalBlockFile(scope: !8017, file: !394, discriminator: 1)
!8017 = distinct !DILexicalBlock(scope: !8009, file: !394, line: 789, column: 5)
!8018 = !DILocation(line: 789, column: 39, scope: !8017)
!8019 = !DILocation(line: 789, column: 5, scope: !8009)
!8020 = !DILocation(line: 789, column: 5, scope: !8021)
!8021 = !DILexicalBlockFile(scope: !8009, file: !394, discriminator: 2)
!8022 = !DILocation(line: 789, column: 46, scope: !8023)
!8023 = !DILexicalBlockFile(scope: !8017, file: !394, discriminator: 3)
!8024 = !DILocation(line: 789, column: 5, scope: !8017)
!8025 = !DILocation(line: 791, column: 9, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !1130, file: !394, line: 791, column: 9)
!8027 = !DILocation(line: 791, column: 11, scope: !8026)
!8028 = !DILocation(line: 791, column: 9, scope: !1130)
!8029 = !DILocation(line: 792, column: 29, scope: !8026)
!8030 = !DILocation(line: 792, column: 35, scope: !8026)
!8031 = !DILocation(line: 792, column: 47, scope: !8026)
!8032 = !DILocation(line: 792, column: 9, scope: !8026)
!8033 = !DILocation(line: 792, column: 15, scope: !8026)
!8034 = !DILocation(line: 792, column: 27, scope: !8026)
!8035 = !DILocation(line: 794, column: 9, scope: !8026)
!8036 = !DILocation(line: 794, column: 15, scope: !8026)
!8037 = !DILocation(line: 794, column: 27, scope: !8026)
!8038 = !DILocation(line: 795, column: 28, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !1130, file: !394, line: 795, column: 9)
!8040 = !DILocation(line: 795, column: 9, scope: !8039)
!8041 = !DILocation(line: 795, column: 34, scope: !8039)
!8042 = !DILocation(line: 795, column: 9, scope: !1130)
!8043 = !DILocation(line: 796, column: 9, scope: !8039)
!8044 = !DILocation(line: 797, column: 5, scope: !1130)
!8045 = !DILocation(line: 798, column: 1, scope: !1130)
!8046 = !DILocation(line: 1982, column: 32, scope: !1134)
!8047 = !DILocation(line: 1982, column: 48, scope: !1134)
!8048 = !DILocation(line: 1984, column: 5, scope: !1134)
!8049 = !DILocation(line: 1984, column: 15, scope: !1134)
!8050 = !DILocation(line: 1985, column: 5, scope: !1134)
!8051 = !DILocation(line: 1985, column: 15, scope: !1134)
!8052 = !DILocation(line: 1986, column: 5, scope: !1134)
!8053 = !DILocation(line: 1986, column: 16, scope: !1134)
!8054 = !DILocation(line: 1986, column: 25, scope: !1134)
!8055 = !DILocation(line: 1986, column: 32, scope: !1134)
!8056 = !DILocation(line: 1987, column: 5, scope: !1134)
!8057 = !DILocation(line: 1987, column: 14, scope: !1134)
!8058 = !DILocation(line: 1989, column: 9, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 1989, column: 9)
!8060 = !DILocation(line: 1989, column: 15, scope: !8059)
!8061 = !DILocation(line: 1989, column: 18, scope: !8059)
!8062 = !DILocation(line: 1989, column: 9, scope: !1134)
!8063 = !DILocation(line: 1989, column: 30, scope: !8064)
!8064 = !DILexicalBlockFile(scope: !8065, file: !394, discriminator: 1)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !394, line: 1989, column: 30)
!8066 = distinct !DILexicalBlock(scope: !8059, file: !394, line: 1989, column: 24)
!8067 = !DILocation(line: 1989, column: 36, scope: !8065)
!8068 = !DILocation(line: 1989, column: 30, scope: !8065)
!8069 = !DILocation(line: 1989, column: 30, scope: !8066)
!8070 = !DILocation(line: 1989, column: 64, scope: !8071)
!8071 = !DILexicalBlockFile(scope: !8072, file: !394, discriminator: 2)
!8072 = distinct !DILexicalBlock(scope: !8065, file: !394, line: 1989, column: 46)
!8073 = !DILocation(line: 1989, column: 48, scope: !8072)
!8074 = !DILocation(line: 1989, column: 115, scope: !8072)
!8075 = !DILocation(line: 1989, column: 140, scope: !8076)
!8076 = !DILexicalBlockFile(scope: !8077, file: !394, discriminator: 3)
!8077 = distinct !DILexicalBlock(scope: !8065, file: !394, line: 1989, column: 122)
!8078 = !DILocation(line: 1989, column: 124, scope: !8077)
!8079 = !DILocation(line: 1989, column: 202, scope: !8080)
!8080 = !DILexicalBlockFile(scope: !8066, file: !394, discriminator: 4)
!8081 = !DILocation(line: 1989, column: 202, scope: !8066)
!8082 = !DILocation(line: 1990, column: 34, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 1990, column: 9)
!8084 = !DILocation(line: 1990, column: 10, scope: !8083)
!8085 = !DILocation(line: 1990, column: 9, scope: !1134)
!8086 = !DILocation(line: 1991, column: 9, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8083, file: !394, line: 1990, column: 59)
!8088 = !DILocation(line: 1994, column: 10, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 1994, column: 9)
!8090 = !DILocation(line: 1994, column: 16, scope: !8089)
!8091 = !DILocation(line: 1994, column: 9, scope: !1134)
!8092 = !DILocation(line: 1994, column: 54, scope: !8093)
!8093 = !DILexicalBlockFile(scope: !8089, file: !394, discriminator: 1)
!8094 = !DILocation(line: 1994, column: 60, scope: !8089)
!8095 = !DILocation(line: 1994, column: 37, scope: !8089)
!8096 = !DILocation(line: 1994, column: 83, scope: !8097)
!8097 = !DILexicalBlockFile(scope: !8089, file: !394, discriminator: 2)
!8098 = !DILocation(line: 1994, column: 67, scope: !8089)
!8099 = !DILocation(line: 1995, column: 25, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8089, file: !394, line: 1994, column: 91)
!8101 = !DILocation(line: 1995, column: 9, scope: !8100)
!8102 = !DILocation(line: 1996, column: 9, scope: !8100)
!8103 = !DILocation(line: 1997, column: 9, scope: !8100)
!8104 = !DILocation(line: 2000, column: 35, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 2000, column: 9)
!8106 = !DILocation(line: 2000, column: 41, scope: !8105)
!8107 = !DILocation(line: 2000, column: 13, scope: !8105)
!8108 = !DILocation(line: 2000, column: 84, scope: !8105)
!8109 = !DILocation(line: 2000, column: 13, scope: !8110)
!8110 = !DILexicalBlockFile(scope: !8105, file: !394, discriminator: 1)
!8111 = !DILocation(line: 2000, column: 77, scope: !8112)
!8112 = !DILexicalBlockFile(scope: !8105, file: !394, discriminator: 2)
!8113 = !DILocation(line: 2000, column: 56, scope: !8105)
!8114 = !DILocation(line: 2000, column: 102, scope: !8115)
!8115 = !DILexicalBlockFile(scope: !8116, file: !394, discriminator: 4)
!8116 = !DILexicalBlockFile(scope: !8105, file: !394, discriminator: 3)
!8117 = !DILocation(line: 2000, column: 88, scope: !8105)
!8118 = !DILocation(line: 2000, column: 94, scope: !8105)
!8119 = !DILocation(line: 2000, column: 100, scope: !8105)
!8120 = !DILocation(line: 2000, column: 9, scope: !1134)
!8121 = !DILocation(line: 2001, column: 9, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8105, file: !394, line: 2000, column: 137)
!8123 = !DILocation(line: 2002, column: 9, scope: !8122)
!8124 = !DILocation(line: 2006, column: 11, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 2006, column: 9)
!8126 = !DILocation(line: 2006, column: 17, scope: !8125)
!8127 = !DILocation(line: 2006, column: 26, scope: !8125)
!8128 = !DILocation(line: 2006, column: 29, scope: !8129)
!8129 = !DILexicalBlockFile(scope: !8125, file: !394, discriminator: 1)
!8130 = !DILocation(line: 2006, column: 35, scope: !8125)
!8131 = !DILocation(line: 2006, column: 44, scope: !8125)
!8132 = !DILocation(line: 2006, column: 51, scope: !8125)
!8133 = !DILocation(line: 2006, column: 56, scope: !8134)
!8134 = !DILexicalBlockFile(scope: !8135, file: !394, discriminator: 3)
!8135 = !DILexicalBlockFile(scope: !8125, file: !394, discriminator: 2)
!8136 = !DILocation(line: 2006, column: 62, scope: !8125)
!8137 = !DILocation(line: 2006, column: 56, scope: !8125)
!8138 = !DILocation(line: 2006, column: 71, scope: !8125)
!8139 = !DILocation(line: 2006, column: 74, scope: !8140)
!8140 = !DILexicalBlockFile(scope: !8125, file: !394, discriminator: 4)
!8141 = !DILocation(line: 2006, column: 80, scope: !8125)
!8142 = !DILocation(line: 2006, column: 90, scope: !8125)
!8143 = !DILocation(line: 2006, column: 9, scope: !1134)
!8144 = !DILocation(line: 2007, column: 9, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8125, file: !394, line: 2006, column: 98)
!8146 = !DILocation(line: 2007, column: 15, scope: !8145)
!8147 = !DILocation(line: 2007, column: 19, scope: !8145)
!8148 = !DILocation(line: 2008, column: 9, scope: !8145)
!8149 = !DILocation(line: 2008, column: 15, scope: !8145)
!8150 = !DILocation(line: 2008, column: 23, scope: !8145)
!8151 = !DILocation(line: 2009, column: 5, scope: !8145)
!8152 = !DILocation(line: 2010, column: 26, scope: !1134)
!8153 = !DILocation(line: 2010, column: 32, scope: !1134)
!8154 = !DILocation(line: 2010, column: 46, scope: !1134)
!8155 = !DILocation(line: 2010, column: 52, scope: !1134)
!8156 = !DILocation(line: 2010, column: 44, scope: !1134)
!8157 = !DILocation(line: 2010, column: 11, scope: !1134)
!8158 = !DILocation(line: 2011, column: 13, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 2011, column: 9)
!8160 = !DILocation(line: 2011, column: 20, scope: !8159)
!8161 = !DILocation(line: 2011, column: 17, scope: !8159)
!8162 = !DILocation(line: 2011, column: 9, scope: !1134)
!8163 = !DILocation(line: 2012, column: 16, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8159, file: !394, line: 2011, column: 27)
!8165 = !DILocation(line: 2012, column: 22, scope: !8164)
!8166 = !DILocation(line: 2012, column: 31, scope: !8164)
!8167 = !DILocation(line: 2012, column: 37, scope: !8164)
!8168 = !DILocation(line: 2012, column: 29, scope: !8164)
!8169 = !DILocation(line: 2012, column: 46, scope: !8164)
!8170 = !DILocation(line: 2012, column: 55, scope: !8164)
!8171 = !DILocation(line: 2012, column: 9, scope: !8164)
!8172 = !DILocation(line: 2013, column: 15, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8164, file: !394, line: 2013, column: 13)
!8174 = !DILocation(line: 2013, column: 21, scope: !8173)
!8175 = !DILocation(line: 2013, column: 30, scope: !8173)
!8176 = !DILocation(line: 2013, column: 33, scope: !8177)
!8177 = !DILexicalBlockFile(scope: !8173, file: !394, discriminator: 1)
!8178 = !DILocation(line: 2013, column: 39, scope: !8173)
!8179 = !DILocation(line: 2013, column: 49, scope: !8173)
!8180 = !DILocation(line: 2013, column: 56, scope: !8173)
!8181 = !DILocation(line: 2013, column: 59, scope: !8182)
!8182 = !DILexicalBlockFile(scope: !8173, file: !394, discriminator: 2)
!8183 = !DILocation(line: 2013, column: 65, scope: !8173)
!8184 = !DILocation(line: 2013, column: 77, scope: !8173)
!8185 = !DILocation(line: 2013, column: 83, scope: !8173)
!8186 = !DILocation(line: 2013, column: 75, scope: !8173)
!8187 = !DILocation(line: 2013, column: 13, scope: !8164)
!8188 = !DILocation(line: 2014, column: 31, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8173, file: !394, line: 2013, column: 88)
!8190 = !DILocation(line: 2014, column: 37, scope: !8189)
!8191 = !DILocation(line: 2014, column: 13, scope: !8189)
!8192 = !DILocation(line: 2014, column: 19, scope: !8189)
!8193 = !DILocation(line: 2014, column: 29, scope: !8189)
!8194 = !DILocation(line: 2015, column: 9, scope: !8189)
!8195 = !DILocation(line: 2016, column: 9, scope: !8164)
!8196 = !DILocation(line: 2016, column: 26, scope: !8197)
!8197 = !DILexicalBlockFile(scope: !8198, file: !394, discriminator: 1)
!8198 = distinct !DILexicalBlock(scope: !8164, file: !394, line: 2016, column: 12)
!8199 = !DILocation(line: 2016, column: 32, scope: !8198)
!8200 = !DILocation(line: 2016, column: 42, scope: !8198)
!8201 = !DILocation(line: 2016, column: 36, scope: !8198)
!8202 = !DILocation(line: 2016, column: 14, scope: !8198)
!8203 = !DILocation(line: 2016, column: 20, scope: !8198)
!8204 = !DILocation(line: 2016, column: 24, scope: !8198)
!8205 = !DILocation(line: 2016, column: 52, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8198, file: !394, line: 2016, column: 51)
!8207 = !DILocation(line: 2016, column: 58, scope: !8206)
!8208 = !DILocation(line: 2016, column: 67, scope: !8206)
!8209 = !DILocation(line: 2016, column: 70, scope: !8210)
!8210 = !DILexicalBlockFile(scope: !8206, file: !394, discriminator: 2)
!8211 = !DILocation(line: 2016, column: 76, scope: !8206)
!8212 = !DILocation(line: 2016, column: 85, scope: !8206)
!8213 = !DILocation(line: 2016, column: 92, scope: !8206)
!8214 = !DILocation(line: 2016, column: 95, scope: !8215)
!8215 = !DILexicalBlockFile(scope: !8206, file: !394, discriminator: 4)
!8216 = !DILocation(line: 2016, column: 101, scope: !8206)
!8217 = !DILocation(line: 2016, column: 112, scope: !8206)
!8218 = !DILocation(line: 2016, column: 118, scope: !8206)
!8219 = !DILocation(line: 2016, column: 110, scope: !8206)
!8220 = !DILocation(line: 2016, column: 51, scope: !8198)
!8221 = !DILocation(line: 2016, column: 140, scope: !8222)
!8222 = !DILexicalBlockFile(scope: !8206, file: !394, discriminator: 6)
!8223 = !DILocation(line: 2016, column: 146, scope: !8206)
!8224 = !DILocation(line: 2016, column: 123, scope: !8206)
!8225 = !DILocation(line: 2016, column: 129, scope: !8206)
!8226 = !DILocation(line: 2016, column: 138, scope: !8206)
!8227 = !DILocation(line: 2016, column: 151, scope: !8228)
!8228 = !DILexicalBlockFile(scope: !8229, file: !394, discriminator: 8)
!8229 = !DILexicalBlockFile(scope: !8230, file: !394, discriminator: 7)
!8230 = !DILexicalBlockFile(scope: !8231, file: !394, discriminator: 5)
!8231 = !DILexicalBlockFile(scope: !8198, file: !394, discriminator: 3)
!8232 = !DILocation(line: 2016, column: 151, scope: !8233)
!8233 = !DILexicalBlockFile(scope: !8198, file: !394, discriminator: 9)
!8234 = !DILocation(line: 2017, column: 13, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8164, file: !394, line: 2017, column: 13)
!8236 = !DILocation(line: 2017, column: 19, scope: !8235)
!8237 = !DILocation(line: 2017, column: 25, scope: !8235)
!8238 = !DILocation(line: 2017, column: 31, scope: !8235)
!8239 = !DILocation(line: 2017, column: 23, scope: !8235)
!8240 = !DILocation(line: 2017, column: 13, scope: !8164)
!8241 = !DILocation(line: 2018, column: 31, scope: !8235)
!8242 = !DILocation(line: 2018, column: 37, scope: !8235)
!8243 = !DILocation(line: 2018, column: 13, scope: !8235)
!8244 = !DILocation(line: 2018, column: 19, scope: !8235)
!8245 = !DILocation(line: 2018, column: 29, scope: !8235)
!8246 = !DILocation(line: 2019, column: 23, scope: !8164)
!8247 = !DILocation(line: 2019, column: 17, scope: !8164)
!8248 = !DILocation(line: 2020, column: 9, scope: !8164)
!8249 = !DILocation(line: 2024, column: 42, scope: !1134)
!8250 = !DILocation(line: 2024, column: 11, scope: !1134)
!8251 = !DILocation(line: 2024, column: 9, scope: !1134)
!8252 = !DILocation(line: 2025, column: 9, scope: !1146)
!8253 = !DILocation(line: 2025, column: 13, scope: !1146)
!8254 = !DILocation(line: 2025, column: 9, scope: !1134)
!8255 = !DILocation(line: 2026, column: 9, scope: !1145)
!8256 = !DILocation(line: 2026, column: 21, scope: !1145)
!8257 = !DILocation(line: 2026, column: 25, scope: !1145)
!8258 = !DILocation(line: 2027, column: 13, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !1145, file: !394, line: 2027, column: 13)
!8260 = !DILocation(line: 2027, column: 15, scope: !8259)
!8261 = !DILocation(line: 2027, column: 13, scope: !1145)
!8262 = !DILocation(line: 2028, column: 13, scope: !8259)
!8263 = !DILocation(line: 2029, column: 13, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !1145, file: !394, line: 2029, column: 13)
!8265 = !DILocation(line: 2029, column: 19, scope: !8264)
!8266 = !DILocation(line: 2029, column: 13, scope: !1145)
!8267 = !DILocation(line: 2030, column: 39, scope: !8264)
!8268 = !DILocation(line: 2030, column: 13, scope: !8264)
!8269 = !DILocation(line: 2033, column: 17, scope: !1145)
!8270 = !DILocation(line: 2033, column: 23, scope: !1145)
!8271 = !DILocation(line: 2033, column: 31, scope: !1145)
!8272 = !DILocation(line: 2033, column: 37, scope: !1145)
!8273 = !DILocation(line: 2033, column: 46, scope: !1145)
!8274 = !DILocation(line: 2033, column: 52, scope: !1145)
!8275 = !DILocation(line: 2033, column: 44, scope: !1145)
!8276 = !DILocation(line: 2034, column: 30, scope: !1145)
!8277 = !DILocation(line: 2034, column: 36, scope: !1145)
!8278 = !DILocation(line: 2034, column: 48, scope: !1145)
!8279 = !DILocation(line: 2034, column: 54, scope: !1145)
!8280 = !DILocation(line: 2034, column: 46, scope: !1145)
!8281 = !DILocation(line: 2033, column: 9, scope: !1145)
!8282 = !DILocation(line: 2036, column: 28, scope: !1145)
!8283 = !DILocation(line: 2036, column: 34, scope: !1145)
!8284 = !DILocation(line: 2036, column: 9, scope: !1145)
!8285 = !DILocation(line: 2036, column: 15, scope: !1145)
!8286 = !DILocation(line: 2036, column: 25, scope: !1145)
!8287 = !DILocation(line: 2037, column: 26, scope: !1145)
!8288 = !DILocation(line: 2037, column: 32, scope: !1145)
!8289 = !DILocation(line: 2037, column: 9, scope: !1145)
!8290 = !DILocation(line: 2037, column: 15, scope: !1145)
!8291 = !DILocation(line: 2037, column: 23, scope: !1145)
!8292 = !DILocation(line: 2038, column: 22, scope: !1145)
!8293 = !DILocation(line: 2038, column: 28, scope: !1145)
!8294 = !DILocation(line: 2038, column: 9, scope: !1145)
!8295 = !DILocation(line: 2038, column: 15, scope: !1145)
!8296 = !DILocation(line: 2038, column: 19, scope: !1145)
!8297 = !DILocation(line: 2039, column: 9, scope: !1145)
!8298 = !DILocation(line: 2039, column: 15, scope: !1145)
!8299 = !DILocation(line: 2039, column: 25, scope: !1145)
!8300 = !DILocation(line: 2040, column: 30, scope: !1145)
!8301 = !DILocation(line: 2040, column: 36, scope: !1145)
!8302 = !DILocation(line: 2040, column: 50, scope: !1145)
!8303 = !DILocation(line: 2040, column: 56, scope: !1145)
!8304 = !DILocation(line: 2040, column: 48, scope: !1145)
!8305 = !DILocation(line: 2040, column: 15, scope: !1145)
!8306 = !DILocation(line: 2042, column: 17, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !1145, file: !394, line: 2042, column: 13)
!8308 = !DILocation(line: 2042, column: 24, scope: !8307)
!8309 = !DILocation(line: 2042, column: 21, scope: !8307)
!8310 = !DILocation(line: 2042, column: 13, scope: !1145)
!8311 = !DILocation(line: 2044, column: 13, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8307, file: !394, line: 2042, column: 31)
!8313 = !DILocation(line: 2045, column: 20, scope: !8312)
!8314 = !DILocation(line: 2045, column: 26, scope: !8312)
!8315 = !DILocation(line: 2045, column: 35, scope: !8312)
!8316 = !DILocation(line: 2045, column: 41, scope: !8312)
!8317 = !DILocation(line: 2045, column: 33, scope: !8312)
!8318 = !DILocation(line: 2045, column: 56, scope: !8312)
!8319 = !DILocation(line: 2045, column: 65, scope: !8312)
!8320 = !DILocation(line: 2045, column: 13, scope: !8312)
!8321 = !DILocation(line: 2046, column: 36, scope: !8312)
!8322 = !DILocation(line: 2046, column: 13, scope: !8312)
!8323 = !DILocation(line: 2046, column: 19, scope: !8312)
!8324 = !DILocation(line: 2046, column: 29, scope: !8312)
!8325 = !DILocation(line: 2047, column: 30, scope: !8312)
!8326 = !DILocation(line: 2047, column: 13, scope: !8312)
!8327 = !DILocation(line: 2047, column: 19, scope: !8312)
!8328 = !DILocation(line: 2047, column: 23, scope: !8312)
!8329 = !DILocation(line: 2048, column: 27, scope: !8312)
!8330 = !DILocation(line: 2048, column: 21, scope: !8312)
!8331 = !DILocation(line: 2049, column: 13, scope: !8312)
!8332 = !DILocation(line: 2052, column: 16, scope: !1145)
!8333 = !DILocation(line: 2052, column: 22, scope: !1145)
!8334 = !DILocation(line: 2052, column: 31, scope: !1145)
!8335 = !DILocation(line: 2052, column: 37, scope: !1145)
!8336 = !DILocation(line: 2052, column: 29, scope: !1145)
!8337 = !DILocation(line: 2052, column: 52, scope: !1145)
!8338 = !DILocation(line: 2052, column: 57, scope: !1145)
!8339 = !DILocation(line: 2052, column: 9, scope: !1145)
!8340 = !DILocation(line: 2053, column: 28, scope: !1145)
!8341 = !DILocation(line: 2053, column: 9, scope: !1145)
!8342 = !DILocation(line: 2053, column: 15, scope: !1145)
!8343 = !DILocation(line: 2053, column: 25, scope: !1145)
!8344 = !DILocation(line: 2054, column: 22, scope: !1145)
!8345 = !DILocation(line: 2054, column: 9, scope: !1145)
!8346 = !DILocation(line: 2054, column: 15, scope: !1145)
!8347 = !DILocation(line: 2054, column: 19, scope: !1145)
!8348 = !DILocation(line: 2059, column: 30, scope: !1145)
!8349 = !DILocation(line: 2058, column: 9, scope: !1145)
!8350 = !DILocation(line: 2060, column: 9, scope: !1145)
!8351 = !DILocation(line: 2061, column: 5, scope: !1146)
!8352 = !DILocation(line: 2062, column: 5, scope: !1134)
!8353 = !DILocation(line: 2062, column: 10, scope: !8354)
!8354 = !DILexicalBlockFile(scope: !1148, file: !394, discriminator: 1)
!8355 = !DILocation(line: 2062, column: 20, scope: !1148)
!8356 = !DILocation(line: 2062, column: 43, scope: !1148)
!8357 = !DILocation(line: 2062, column: 53, scope: !1152)
!8358 = !DILocation(line: 2062, column: 61, scope: !1152)
!8359 = !DILocation(line: 2062, column: 53, scope: !1148)
!8360 = !DILocation(line: 2062, column: 84, scope: !8361)
!8361 = !DILexicalBlockFile(scope: !1151, file: !394, discriminator: 2)
!8362 = !DILocation(line: 2062, column: 98, scope: !1151)
!8363 = !DILocation(line: 2062, column: 103, scope: !8364)
!8364 = !DILexicalBlockFile(scope: !1150, file: !394, discriminator: 4)
!8365 = !DILocation(line: 2062, column: 113, scope: !1150)
!8366 = !DILocation(line: 2062, column: 143, scope: !1150)
!8367 = !DILocation(line: 2062, column: 161, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !1150, file: !394, line: 2062, column: 158)
!8369 = !DILocation(line: 2062, column: 178, scope: !8368)
!8370 = !DILocation(line: 2062, column: 158, scope: !8368)
!8371 = !DILocation(line: 2062, column: 188, scope: !8368)
!8372 = !DILocation(line: 2062, column: 158, scope: !1150)
!8373 = !DILocation(line: 2062, column: 158, scope: !8374)
!8374 = !DILexicalBlockFile(scope: !1150, file: !394, discriminator: 5)
!8375 = !DILocation(line: 2062, column: 219, scope: !8376)
!8376 = !DILexicalBlockFile(scope: !8368, file: !394, discriminator: 6)
!8377 = !DILocation(line: 2062, column: 237, scope: !8368)
!8378 = !DILocation(line: 2062, column: 247, scope: !8368)
!8379 = !DILocation(line: 2062, column: 272, scope: !8368)
!8380 = !DILocation(line: 2062, column: 203, scope: !8368)
!8381 = !DILocation(line: 2062, column: 291, scope: !8382)
!8382 = !DILexicalBlockFile(scope: !1151, file: !394, discriminator: 7)
!8383 = !DILocation(line: 2062, column: 291, scope: !1150)
!8384 = !DILocation(line: 2062, column: 291, scope: !8385)
!8385 = !DILexicalBlockFile(scope: !1150, file: !394, discriminator: 8)
!8386 = !DILocation(line: 2062, column: 304, scope: !8387)
!8387 = !DILexicalBlockFile(scope: !1151, file: !394, discriminator: 9)
!8388 = !DILocation(line: 2062, column: 306, scope: !8389)
!8389 = !DILexicalBlockFile(scope: !8390, file: !394, discriminator: 10)
!8390 = !DILexicalBlockFile(scope: !1134, file: !394, discriminator: 3)
!8391 = !DILocation(line: 2062, column: 306, scope: !1148)
!8392 = !DILocation(line: 2062, column: 306, scope: !8393)
!8393 = !DILexicalBlockFile(scope: !1148, file: !394, discriminator: 11)
!8394 = !DILocation(line: 2070, column: 18, scope: !1134)
!8395 = !DILocation(line: 2070, column: 24, scope: !1134)
!8396 = !DILocation(line: 2070, column: 33, scope: !1134)
!8397 = !DILocation(line: 2070, column: 36, scope: !8398)
!8398 = !DILexicalBlockFile(scope: !1134, file: !394, discriminator: 1)
!8399 = !DILocation(line: 2070, column: 42, scope: !1134)
!8400 = !DILocation(line: 2070, column: 51, scope: !1134)
!8401 = !DILocation(line: 2070, column: 58, scope: !1134)
!8402 = !DILocation(line: 2070, column: 62, scope: !8403)
!8403 = !DILexicalBlockFile(scope: !8404, file: !394, discriminator: 4)
!8404 = !DILexicalBlockFile(scope: !1134, file: !394, discriminator: 2)
!8405 = !DILocation(line: 2070, column: 68, scope: !1134)
!8406 = !DILocation(line: 2070, column: 62, scope: !1134)
!8407 = !DILocation(line: 2070, column: 77, scope: !1134)
!8408 = !DILocation(line: 2070, column: 80, scope: !8409)
!8409 = !DILexicalBlockFile(scope: !1134, file: !394, discriminator: 5)
!8410 = !DILocation(line: 2070, column: 86, scope: !1134)
!8411 = !DILocation(line: 2070, column: 96, scope: !1134)
!8412 = !DILocation(line: 2070, column: 104, scope: !1134)
!8413 = !DILocation(line: 2070, column: 107, scope: !8414)
!8414 = !DILexicalBlockFile(scope: !8390, file: !394, discriminator: 7)
!8415 = !DILocation(line: 2070, column: 113, scope: !1134)
!8416 = !DILocation(line: 2070, column: 121, scope: !1134)
!8417 = !DILocation(line: 2070, column: 15, scope: !1134)
!8418 = !DILocation(line: 2070, column: 129, scope: !8419)
!8419 = !DILexicalBlockFile(scope: !1134, file: !394, discriminator: 9)
!8420 = !DILocation(line: 2070, column: 135, scope: !1134)
!8421 = !DILocation(line: 2070, column: 145, scope: !1134)
!8422 = !DILocation(line: 2070, column: 151, scope: !1134)
!8423 = !DILocation(line: 2070, column: 143, scope: !1134)
!8424 = !DILocation(line: 2070, column: 15, scope: !8425)
!8425 = !DILexicalBlockFile(scope: !8426, file: !394, discriminator: 10)
!8426 = !DILexicalBlockFile(scope: !8427, file: !394, discriminator: 8)
!8427 = !DILexicalBlockFile(scope: !1134, file: !394, discriminator: 6)
!8428 = !DILocation(line: 2070, column: 12, scope: !8429)
!8429 = !DILexicalBlockFile(scope: !8430, file: !394, discriminator: 12)
!8430 = !DILexicalBlockFile(scope: !1134, file: !394, discriminator: 11)
!8431 = !DILocation(line: 2071, column: 9, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 2071, column: 9)
!8433 = !DILocation(line: 2071, column: 16, scope: !8432)
!8434 = !DILocation(line: 2071, column: 9, scope: !1134)
!8435 = !DILocation(line: 2072, column: 32, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8437, file: !394, line: 2072, column: 13)
!8437 = distinct !DILexicalBlock(scope: !8432, file: !394, line: 2071, column: 22)
!8438 = !DILocation(line: 2072, column: 39, scope: !8436)
!8439 = !DILocation(line: 2072, column: 38, scope: !8436)
!8440 = !DILocation(line: 2072, column: 13, scope: !8436)
!8441 = !DILocation(line: 2072, column: 50, scope: !8436)
!8442 = !DILocation(line: 2072, column: 13, scope: !8437)
!8443 = !DILocation(line: 2073, column: 13, scope: !8436)
!8444 = !DILocation(line: 2074, column: 26, scope: !8437)
!8445 = !DILocation(line: 2074, column: 9, scope: !8437)
!8446 = !DILocation(line: 2074, column: 15, scope: !8437)
!8447 = !DILocation(line: 2074, column: 23, scope: !8437)
!8448 = !DILocation(line: 2075, column: 5, scope: !8437)
!8449 = !DILocation(line: 2078, column: 21, scope: !1134)
!8450 = !DILocation(line: 2078, column: 15, scope: !1134)
!8451 = !DILocation(line: 2079, column: 13, scope: !1134)
!8452 = !DILocation(line: 2080, column: 5, scope: !1134)
!8453 = !DILocation(line: 2080, column: 12, scope: !8454)
!8454 = !DILexicalBlockFile(scope: !8398, file: !394, discriminator: 2)
!8455 = !DILocation(line: 2080, column: 24, scope: !1134)
!8456 = !DILocation(line: 2080, column: 30, scope: !1134)
!8457 = !DILocation(line: 2080, column: 22, scope: !1134)
!8458 = !DILocation(line: 2081, column: 9, scope: !1154)
!8459 = !DILocation(line: 2081, column: 20, scope: !1154)
!8460 = !DILocation(line: 2082, column: 13, scope: !1154)
!8461 = !DILocation(line: 2082, column: 32, scope: !1154)
!8462 = !DILocation(line: 2082, column: 38, scope: !1154)
!8463 = !DILocation(line: 2082, column: 36, scope: !1154)
!8464 = !DILocation(line: 2082, column: 51, scope: !1154)
!8465 = !DILocation(line: 2082, column: 57, scope: !1154)
!8466 = !DILocation(line: 2082, column: 55, scope: !1154)
!8467 = !DILocation(line: 2081, column: 24, scope: !1154)
!8468 = !DILocation(line: 2083, column: 13, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !1154, file: !394, line: 2083, column: 13)
!8470 = !DILocation(line: 2083, column: 15, scope: !8469)
!8471 = !DILocation(line: 2083, column: 13, scope: !1154)
!8472 = !DILocation(line: 2084, column: 13, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8469, file: !394, line: 2083, column: 22)
!8474 = !DILocation(line: 2085, column: 20, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8469, file: !394, line: 2085, column: 20)
!8476 = !DILocation(line: 2085, column: 22, scope: !8475)
!8477 = !DILocation(line: 2085, column: 20, scope: !8469)
!8478 = !DILocation(line: 2087, column: 17, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !394, line: 2087, column: 17)
!8480 = distinct !DILexicalBlock(scope: !8475, file: !394, line: 2085, column: 29)
!8481 = !DILocation(line: 2087, column: 29, scope: !8479)
!8482 = !DILocation(line: 2087, column: 35, scope: !8479)
!8483 = !DILocation(line: 2087, column: 27, scope: !8479)
!8484 = !DILocation(line: 2087, column: 17, scope: !8480)
!8485 = !DILocation(line: 2089, column: 24, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8479, file: !394, line: 2087, column: 48)
!8487 = !DILocation(line: 2089, column: 30, scope: !8486)
!8488 = !DILocation(line: 2090, column: 37, scope: !8486)
!8489 = !DILocation(line: 2090, column: 43, scope: !8486)
!8490 = !DILocation(line: 2090, column: 41, scope: !8486)
!8491 = !DILocation(line: 2090, column: 52, scope: !8486)
!8492 = !DILocation(line: 2090, column: 58, scope: !8486)
!8493 = !DILocation(line: 2089, column: 17, scope: !8486)
!8494 = !DILocation(line: 2091, column: 17, scope: !8486)
!8495 = !DILocation(line: 2091, column: 23, scope: !8486)
!8496 = !DILocation(line: 2091, column: 31, scope: !8486)
!8497 = !DILocation(line: 2092, column: 17, scope: !8486)
!8498 = !DILocation(line: 2092, column: 34, scope: !8499)
!8499 = !DILexicalBlockFile(scope: !8500, file: !394, discriminator: 1)
!8500 = distinct !DILexicalBlock(scope: !8486, file: !394, line: 2092, column: 20)
!8501 = !DILocation(line: 2092, column: 40, scope: !8500)
!8502 = !DILocation(line: 2092, column: 22, scope: !8500)
!8503 = !DILocation(line: 2092, column: 28, scope: !8500)
!8504 = !DILocation(line: 2092, column: 32, scope: !8500)
!8505 = !DILocation(line: 2092, column: 58, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8500, file: !394, line: 2092, column: 57)
!8507 = !DILocation(line: 2092, column: 64, scope: !8506)
!8508 = !DILocation(line: 2092, column: 73, scope: !8506)
!8509 = !DILocation(line: 2092, column: 76, scope: !8510)
!8510 = !DILexicalBlockFile(scope: !8506, file: !394, discriminator: 2)
!8511 = !DILocation(line: 2092, column: 82, scope: !8506)
!8512 = !DILocation(line: 2092, column: 91, scope: !8506)
!8513 = !DILocation(line: 2092, column: 98, scope: !8506)
!8514 = !DILocation(line: 2092, column: 101, scope: !8515)
!8515 = !DILexicalBlockFile(scope: !8506, file: !394, discriminator: 4)
!8516 = !DILocation(line: 2092, column: 107, scope: !8506)
!8517 = !DILocation(line: 2092, column: 118, scope: !8506)
!8518 = !DILocation(line: 2092, column: 124, scope: !8506)
!8519 = !DILocation(line: 2092, column: 116, scope: !8506)
!8520 = !DILocation(line: 2092, column: 57, scope: !8500)
!8521 = !DILocation(line: 2092, column: 146, scope: !8522)
!8522 = !DILexicalBlockFile(scope: !8506, file: !394, discriminator: 6)
!8523 = !DILocation(line: 2092, column: 152, scope: !8506)
!8524 = !DILocation(line: 2092, column: 129, scope: !8506)
!8525 = !DILocation(line: 2092, column: 135, scope: !8506)
!8526 = !DILocation(line: 2092, column: 144, scope: !8506)
!8527 = !DILocation(line: 2092, column: 157, scope: !8528)
!8528 = !DILexicalBlockFile(scope: !8529, file: !394, discriminator: 8)
!8529 = !DILexicalBlockFile(scope: !8530, file: !394, discriminator: 7)
!8530 = !DILexicalBlockFile(scope: !8531, file: !394, discriminator: 5)
!8531 = !DILexicalBlockFile(scope: !8500, file: !394, discriminator: 3)
!8532 = !DILocation(line: 2092, column: 157, scope: !8533)
!8533 = !DILexicalBlockFile(scope: !8500, file: !394, discriminator: 9)
!8534 = !DILocation(line: 2093, column: 35, scope: !8486)
!8535 = !DILocation(line: 2093, column: 41, scope: !8486)
!8536 = !DILocation(line: 2093, column: 17, scope: !8486)
!8537 = !DILocation(line: 2093, column: 23, scope: !8486)
!8538 = !DILocation(line: 2093, column: 33, scope: !8486)
!8539 = !DILocation(line: 2094, column: 28, scope: !8486)
!8540 = !DILocation(line: 2094, column: 34, scope: !8486)
!8541 = !DILocation(line: 2094, column: 25, scope: !8486)
!8542 = !DILocation(line: 2096, column: 50, scope: !8486)
!8543 = !DILocation(line: 2095, column: 17, scope: !8486)
!8544 = !DILocation(line: 2097, column: 17, scope: !8486)
!8545 = !DILocation(line: 2099, column: 13, scope: !8480)
!8546 = !DILocation(line: 2100, column: 13, scope: !8480)
!8547 = !DILocation(line: 2102, column: 20, scope: !1154)
!8548 = !DILocation(line: 2102, column: 17, scope: !1154)
!8549 = !DILocation(line: 2103, column: 22, scope: !1154)
!8550 = !DILocation(line: 2103, column: 19, scope: !1154)
!8551 = !DILocation(line: 2107, column: 13, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !1154, file: !394, line: 2107, column: 13)
!8553 = !DILocation(line: 2107, column: 34, scope: !8552)
!8554 = !DILocation(line: 2107, column: 13, scope: !1154)
!8555 = !DILocation(line: 2108, column: 13, scope: !8552)
!8556 = !DILocation(line: 2109, column: 5, scope: !1134)
!8557 = !DILocation(line: 2109, column: 5, scope: !8398)
!8558 = !DILocation(line: 2110, column: 9, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 2110, column: 9)
!8560 = !DILocation(line: 2110, column: 15, scope: !8559)
!8561 = !DILocation(line: 2110, column: 9, scope: !1134)
!8562 = !DILocation(line: 2111, column: 35, scope: !8559)
!8563 = !DILocation(line: 2111, column: 9, scope: !8559)
!8564 = !DILocation(line: 2112, column: 9, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 2112, column: 9)
!8566 = !DILocation(line: 2112, column: 19, scope: !8565)
!8567 = !DILocation(line: 2112, column: 9, scope: !1134)
!8568 = !DILocation(line: 2113, column: 16, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8565, file: !394, line: 2112, column: 24)
!8570 = !DILocation(line: 2113, column: 22, scope: !8569)
!8571 = !DILocation(line: 2113, column: 43, scope: !8569)
!8572 = !DILocation(line: 2113, column: 49, scope: !8569)
!8573 = !DILocation(line: 2113, column: 47, scope: !8569)
!8574 = !DILocation(line: 2113, column: 58, scope: !8569)
!8575 = !DILocation(line: 2113, column: 9, scope: !8569)
!8576 = !DILocation(line: 2114, column: 20, scope: !8569)
!8577 = !DILocation(line: 2114, column: 17, scope: !8569)
!8578 = !DILocation(line: 2115, column: 5, scope: !8569)
!8579 = !DILocation(line: 2116, column: 5, scope: !1134)
!8580 = !DILocation(line: 2116, column: 11, scope: !1134)
!8581 = !DILocation(line: 2116, column: 21, scope: !1134)
!8582 = !DILocation(line: 2118, column: 23, scope: !1134)
!8583 = !DILocation(line: 2118, column: 5, scope: !1134)
!8584 = !DILocation(line: 2118, column: 11, scope: !1134)
!8585 = !DILocation(line: 2118, column: 21, scope: !1134)
!8586 = !DILocation(line: 2119, column: 5, scope: !1134)
!8587 = !DILocation(line: 2119, column: 22, scope: !8588)
!8588 = !DILexicalBlockFile(scope: !8589, file: !394, discriminator: 1)
!8589 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 2119, column: 8)
!8590 = !DILocation(line: 2119, column: 10, scope: !8589)
!8591 = !DILocation(line: 2119, column: 16, scope: !8589)
!8592 = !DILocation(line: 2119, column: 20, scope: !8589)
!8593 = !DILocation(line: 2119, column: 38, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8589, file: !394, line: 2119, column: 37)
!8595 = !DILocation(line: 2119, column: 44, scope: !8594)
!8596 = !DILocation(line: 2119, column: 53, scope: !8594)
!8597 = !DILocation(line: 2119, column: 56, scope: !8598)
!8598 = !DILexicalBlockFile(scope: !8594, file: !394, discriminator: 2)
!8599 = !DILocation(line: 2119, column: 62, scope: !8594)
!8600 = !DILocation(line: 2119, column: 71, scope: !8594)
!8601 = !DILocation(line: 2119, column: 78, scope: !8594)
!8602 = !DILocation(line: 2119, column: 81, scope: !8603)
!8603 = !DILexicalBlockFile(scope: !8594, file: !394, discriminator: 4)
!8604 = !DILocation(line: 2119, column: 87, scope: !8594)
!8605 = !DILocation(line: 2119, column: 98, scope: !8594)
!8606 = !DILocation(line: 2119, column: 104, scope: !8594)
!8607 = !DILocation(line: 2119, column: 96, scope: !8594)
!8608 = !DILocation(line: 2119, column: 37, scope: !8589)
!8609 = !DILocation(line: 2119, column: 126, scope: !8610)
!8610 = !DILexicalBlockFile(scope: !8594, file: !394, discriminator: 6)
!8611 = !DILocation(line: 2119, column: 132, scope: !8594)
!8612 = !DILocation(line: 2119, column: 109, scope: !8594)
!8613 = !DILocation(line: 2119, column: 115, scope: !8594)
!8614 = !DILocation(line: 2119, column: 124, scope: !8594)
!8615 = !DILocation(line: 2119, column: 137, scope: !8616)
!8616 = !DILexicalBlockFile(scope: !8617, file: !394, discriminator: 8)
!8617 = !DILexicalBlockFile(scope: !8618, file: !394, discriminator: 7)
!8618 = !DILexicalBlockFile(scope: !8619, file: !394, discriminator: 5)
!8619 = !DILexicalBlockFile(scope: !8589, file: !394, discriminator: 3)
!8620 = !DILocation(line: 2119, column: 137, scope: !8621)
!8621 = !DILexicalBlockFile(scope: !8589, file: !394, discriminator: 9)
!8622 = !DILocation(line: 2120, column: 5, scope: !1134)
!8623 = !DILocation(line: 2120, column: 11, scope: !1134)
!8624 = !DILocation(line: 2120, column: 19, scope: !1134)
!8625 = !DILocation(line: 2123, column: 30, scope: !1134)
!8626 = !DILocation(line: 2123, column: 11, scope: !1134)
!8627 = !DILocation(line: 2123, column: 9, scope: !1134)
!8628 = !DILocation(line: 2123, column: 5, scope: !1134)
!8629 = !DILocation(line: 2126, column: 5, scope: !1134)
!8630 = !DILocation(line: 2126, column: 10, scope: !8631)
!8631 = !DILexicalBlockFile(scope: !8632, file: !394, discriminator: 1)
!8632 = distinct !DILexicalBlock(scope: !1134, file: !394, line: 2126, column: 8)
!8633 = !DILocation(line: 2126, column: 16, scope: !8632)
!8634 = !DILocation(line: 2126, column: 22, scope: !8632)
!8635 = !DILocation(line: 2126, column: 49, scope: !8632)
!8636 = !DILocation(line: 2126, column: 55, scope: !8632)
!8637 = !DILocation(line: 2126, column: 27, scope: !8632)
!8638 = !DILocation(line: 2126, column: 62, scope: !8632)
!8639 = !DILocation(line: 2126, column: 62, scope: !8640)
!8640 = !DILexicalBlockFile(scope: !8632, file: !394, discriminator: 2)
!8641 = !DILocation(line: 2127, column: 5, scope: !1134)
!8642 = !DILocation(line: 2128, column: 12, scope: !1134)
!8643 = !DILocation(line: 2128, column: 5, scope: !1134)
!8644 = !DILocation(line: 2129, column: 1, scope: !1134)
!8645 = !DILocation(line: 860, column: 26, scope: !1163)
!8646 = !DILocation(line: 860, column: 42, scope: !1163)
!8647 = !DILocation(line: 862, column: 5, scope: !1163)
!8648 = !DILocation(line: 862, column: 15, scope: !1163)
!8649 = !DILocation(line: 864, column: 9, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !1163, file: !394, line: 864, column: 9)
!8651 = !DILocation(line: 864, column: 15, scope: !8650)
!8652 = !DILocation(line: 864, column: 18, scope: !8650)
!8653 = !DILocation(line: 864, column: 9, scope: !1163)
!8654 = !DILocation(line: 864, column: 30, scope: !8655)
!8655 = !DILexicalBlockFile(scope: !8656, file: !394, discriminator: 1)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !394, line: 864, column: 30)
!8657 = distinct !DILexicalBlock(scope: !8650, file: !394, line: 864, column: 24)
!8658 = !DILocation(line: 864, column: 36, scope: !8656)
!8659 = !DILocation(line: 864, column: 30, scope: !8656)
!8660 = !DILocation(line: 864, column: 30, scope: !8657)
!8661 = !DILocation(line: 864, column: 64, scope: !8662)
!8662 = !DILexicalBlockFile(scope: !8663, file: !394, discriminator: 2)
!8663 = distinct !DILexicalBlock(scope: !8656, file: !394, line: 864, column: 46)
!8664 = !DILocation(line: 864, column: 48, scope: !8663)
!8665 = !DILocation(line: 864, column: 115, scope: !8663)
!8666 = !DILocation(line: 864, column: 140, scope: !8667)
!8667 = !DILexicalBlockFile(scope: !8668, file: !394, discriminator: 3)
!8668 = distinct !DILexicalBlock(scope: !8656, file: !394, line: 864, column: 122)
!8669 = !DILocation(line: 864, column: 124, scope: !8668)
!8670 = !DILocation(line: 864, column: 202, scope: !8671)
!8671 = !DILexicalBlockFile(scope: !8657, file: !394, discriminator: 4)
!8672 = !DILocation(line: 864, column: 202, scope: !8657)
!8673 = !DILocation(line: 865, column: 10, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !1163, file: !394, line: 865, column: 9)
!8675 = !DILocation(line: 865, column: 16, scope: !8674)
!8676 = !DILocation(line: 865, column: 9, scope: !1163)
!8677 = !DILocation(line: 865, column: 54, scope: !8678)
!8678 = !DILexicalBlockFile(scope: !8674, file: !394, discriminator: 1)
!8679 = !DILocation(line: 865, column: 60, scope: !8674)
!8680 = !DILocation(line: 865, column: 37, scope: !8674)
!8681 = !DILocation(line: 865, column: 83, scope: !8682)
!8682 = !DILexicalBlockFile(scope: !8674, file: !394, discriminator: 2)
!8683 = !DILocation(line: 865, column: 67, scope: !8674)
!8684 = !DILocation(line: 865, column: 109, scope: !8685)
!8685 = !DILexicalBlockFile(scope: !8686, file: !394, discriminator: 4)
!8686 = !DILexicalBlockFile(scope: !8687, file: !394, discriminator: 3)
!8687 = distinct !DILexicalBlock(scope: !8674, file: !394, line: 865, column: 91)
!8688 = !DILocation(line: 865, column: 93, scope: !8687)
!8689 = !DILocation(line: 865, column: 152, scope: !8687)
!8690 = !DILocation(line: 867, column: 35, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !1163, file: !394, line: 867, column: 9)
!8692 = !DILocation(line: 867, column: 41, scope: !8691)
!8693 = !DILocation(line: 867, column: 13, scope: !8691)
!8694 = !DILocation(line: 867, column: 84, scope: !8691)
!8695 = !DILocation(line: 867, column: 13, scope: !8696)
!8696 = !DILexicalBlockFile(scope: !8691, file: !394, discriminator: 1)
!8697 = !DILocation(line: 867, column: 77, scope: !8698)
!8698 = !DILexicalBlockFile(scope: !8691, file: !394, discriminator: 2)
!8699 = !DILocation(line: 867, column: 56, scope: !8691)
!8700 = !DILocation(line: 867, column: 102, scope: !8701)
!8701 = !DILexicalBlockFile(scope: !8702, file: !394, discriminator: 4)
!8702 = !DILexicalBlockFile(scope: !8691, file: !394, discriminator: 3)
!8703 = !DILocation(line: 867, column: 88, scope: !8691)
!8704 = !DILocation(line: 867, column: 94, scope: !8691)
!8705 = !DILocation(line: 867, column: 100, scope: !8691)
!8706 = !DILocation(line: 867, column: 9, scope: !1163)
!8707 = !DILocation(line: 868, column: 9, scope: !8691)
!8708 = !DILocation(line: 869, column: 46, scope: !1163)
!8709 = !DILocation(line: 869, column: 11, scope: !1163)
!8710 = !DILocation(line: 869, column: 9, scope: !1163)
!8711 = !DILocation(line: 870, column: 5, scope: !1163)
!8712 = !DILocation(line: 870, column: 10, scope: !8713)
!8713 = !DILexicalBlockFile(scope: !8714, file: !394, discriminator: 1)
!8714 = distinct !DILexicalBlock(scope: !1163, file: !394, line: 870, column: 8)
!8715 = !DILocation(line: 870, column: 16, scope: !8714)
!8716 = !DILocation(line: 870, column: 22, scope: !8714)
!8717 = !DILocation(line: 870, column: 49, scope: !8714)
!8718 = !DILocation(line: 870, column: 55, scope: !8714)
!8719 = !DILocation(line: 870, column: 27, scope: !8714)
!8720 = !DILocation(line: 870, column: 62, scope: !8714)
!8721 = !DILocation(line: 870, column: 62, scope: !8722)
!8722 = !DILexicalBlockFile(scope: !8714, file: !394, discriminator: 2)
!8723 = !DILocation(line: 872, column: 12, scope: !1163)
!8724 = !DILocation(line: 872, column: 5, scope: !1163)
!8725 = !DILocation(line: 873, column: 1, scope: !1163)
!8726 = !DILocation(line: 693, column: 5, scope: !1155)
!8727 = !DILocation(line: 693, column: 15, scope: !1155)
!8728 = !DILocation(line: 693, column: 19, scope: !1155)
!8729 = !DILocation(line: 693, column: 23, scope: !1155)
!8730 = !DILocation(line: 694, column: 5, scope: !1155)
!8731 = !DILocation(line: 694, column: 22, scope: !1155)
!8732 = !DILocation(line: 696, column: 5, scope: !1155)
!8733 = !DILocation(line: 697, column: 9, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !1155, file: !394, line: 697, column: 9)
!8735 = !DILocation(line: 697, column: 11, scope: !8734)
!8736 = !DILocation(line: 697, column: 25, scope: !8734)
!8737 = !DILocation(line: 697, column: 57, scope: !8738)
!8738 = !DILexicalBlockFile(scope: !8734, file: !394, discriminator: 1)
!8739 = !DILocation(line: 697, column: 60, scope: !8734)
!8740 = !DILocation(line: 697, column: 29, scope: !8734)
!8741 = !DILocation(line: 697, column: 9, scope: !1155)
!8742 = !DILocation(line: 698, column: 23, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8734, file: !394, line: 697, column: 84)
!8744 = !DILocation(line: 698, column: 26, scope: !8743)
!8745 = !DILocation(line: 698, column: 29, scope: !8743)
!8746 = !DILocation(line: 698, column: 9, scope: !8743)
!8747 = !DILocation(line: 699, column: 9, scope: !8743)
!8748 = !DILocation(line: 701, column: 31, scope: !1155)
!8749 = !DILocation(line: 701, column: 11, scope: !1155)
!8750 = !DILocation(line: 701, column: 9, scope: !1155)
!8751 = !DILocation(line: 703, column: 19, scope: !1155)
!8752 = !DILocation(line: 703, column: 22, scope: !1155)
!8753 = !DILocation(line: 703, column: 25, scope: !1155)
!8754 = !DILocation(line: 703, column: 5, scope: !1155)
!8755 = !DILocation(line: 704, column: 13, scope: !1155)
!8756 = !DILocation(line: 704, column: 18, scope: !1155)
!8757 = !DILocation(line: 704, column: 5, scope: !1155)
!8758 = !DILocation(line: 705, column: 1, scope: !1155)
!8759 = !DILocation(line: 2327, column: 29, scope: !1250)
!8760 = !DILocation(line: 2327, column: 45, scope: !1250)
!8761 = !DILocation(line: 2329, column: 26, scope: !1250)
!8762 = !DILocation(line: 2329, column: 32, scope: !1250)
!8763 = !DILocation(line: 2329, column: 52, scope: !1250)
!8764 = !DILocation(line: 2329, column: 12, scope: !1250)
!8765 = !DILocation(line: 2329, column: 5, scope: !1250)
!8766 = !DILocation(line: 2333, column: 29, scope: !1275)
!8767 = !DILocation(line: 2333, column: 45, scope: !1275)
!8768 = !DILocation(line: 2335, column: 26, scope: !1275)
!8769 = !DILocation(line: 2335, column: 32, scope: !1275)
!8770 = !DILocation(line: 2335, column: 52, scope: !1275)
!8771 = !DILocation(line: 2335, column: 12, scope: !1275)
!8772 = !DILocation(line: 2335, column: 5, scope: !1275)
!8773 = !DILocation(line: 2339, column: 30, scope: !1279)
!8774 = !DILocation(line: 2339, column: 46, scope: !1279)
!8775 = !DILocation(line: 2341, column: 26, scope: !1279)
!8776 = !DILocation(line: 2341, column: 32, scope: !1279)
!8777 = !DILocation(line: 2341, column: 53, scope: !1279)
!8778 = !DILocation(line: 2341, column: 12, scope: !1279)
!8779 = !DILocation(line: 2341, column: 5, scope: !1279)
!8780 = !DILocation(line: 2345, column: 33, scope: !1283)
!8781 = !DILocation(line: 2345, column: 49, scope: !1283)
!8782 = !DILocation(line: 2347, column: 26, scope: !1283)
!8783 = !DILocation(line: 2347, column: 32, scope: !1283)
!8784 = !DILocation(line: 2347, column: 56, scope: !1283)
!8785 = !DILocation(line: 2347, column: 12, scope: !1283)
!8786 = !DILocation(line: 2347, column: 5, scope: !1283)
!8787 = !DILocation(line: 2351, column: 30, scope: !1287)
!8788 = !DILocation(line: 2351, column: 46, scope: !1287)
!8789 = !DILocation(line: 2353, column: 26, scope: !1287)
!8790 = !DILocation(line: 2353, column: 32, scope: !1287)
!8791 = !DILocation(line: 2353, column: 53, scope: !1287)
!8792 = !DILocation(line: 2353, column: 12, scope: !1287)
!8793 = !DILocation(line: 2353, column: 5, scope: !1287)
!8794 = !DILocation(line: 2357, column: 30, scope: !1291)
!8795 = !DILocation(line: 2357, column: 46, scope: !1291)
!8796 = !DILocation(line: 2359, column: 26, scope: !1291)
!8797 = !DILocation(line: 2359, column: 32, scope: !1291)
!8798 = !DILocation(line: 2359, column: 53, scope: !1291)
!8799 = !DILocation(line: 2359, column: 12, scope: !1291)
!8800 = !DILocation(line: 2359, column: 5, scope: !1291)
!8801 = !DILocation(line: 2363, column: 33, scope: !1295)
!8802 = !DILocation(line: 2363, column: 49, scope: !1295)
!8803 = !DILocation(line: 2365, column: 26, scope: !1295)
!8804 = !DILocation(line: 2365, column: 32, scope: !1295)
!8805 = !DILocation(line: 2365, column: 56, scope: !1295)
!8806 = !DILocation(line: 2365, column: 12, scope: !1295)
!8807 = !DILocation(line: 2365, column: 5, scope: !1295)
!8808 = !DILocation(line: 2369, column: 33, scope: !1299)
!8809 = !DILocation(line: 2369, column: 49, scope: !1299)
!8810 = !DILocation(line: 2371, column: 26, scope: !1299)
!8811 = !DILocation(line: 2371, column: 32, scope: !1299)
!8812 = !DILocation(line: 2371, column: 56, scope: !1299)
!8813 = !DILocation(line: 2371, column: 12, scope: !1299)
!8814 = !DILocation(line: 2371, column: 5, scope: !1299)
!8815 = !DILocation(line: 2375, column: 30, scope: !1303)
!8816 = !DILocation(line: 2375, column: 46, scope: !1303)
!8817 = !DILocation(line: 2377, column: 5, scope: !1303)
!8818 = !DILocation(line: 2377, column: 15, scope: !1303)
!8819 = !DILocation(line: 2377, column: 35, scope: !1303)
!8820 = !DILocation(line: 2377, column: 41, scope: !1303)
!8821 = !DILocation(line: 2377, column: 62, scope: !1303)
!8822 = !DILocation(line: 2377, column: 21, scope: !1303)
!8823 = !DILocation(line: 2378, column: 9, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !1303, file: !394, line: 2378, column: 9)
!8825 = !DILocation(line: 2378, column: 13, scope: !8824)
!8826 = !DILocation(line: 2378, column: 9, scope: !1303)
!8827 = !DILocation(line: 2379, column: 9, scope: !8824)
!8828 = !DILocation(line: 2380, column: 5, scope: !1303)
!8829 = !DILocation(line: 2380, column: 10, scope: !8830)
!8830 = !DILexicalBlockFile(scope: !1309, file: !394, discriminator: 1)
!8831 = !DILocation(line: 2380, column: 20, scope: !1309)
!8832 = !DILocation(line: 2380, column: 50, scope: !1309)
!8833 = !DILocation(line: 2380, column: 64, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !1309, file: !394, line: 2380, column: 61)
!8835 = !DILocation(line: 2380, column: 81, scope: !8834)
!8836 = !DILocation(line: 2380, column: 61, scope: !8834)
!8837 = !DILocation(line: 2380, column: 91, scope: !8834)
!8838 = !DILocation(line: 2380, column: 61, scope: !1309)
!8839 = !DILocation(line: 2380, column: 61, scope: !8840)
!8840 = !DILexicalBlockFile(scope: !1309, file: !394, discriminator: 2)
!8841 = !DILocation(line: 2380, column: 122, scope: !8842)
!8842 = !DILexicalBlockFile(scope: !8834, file: !394, discriminator: 3)
!8843 = !DILocation(line: 2380, column: 140, scope: !8834)
!8844 = !DILocation(line: 2380, column: 150, scope: !8834)
!8845 = !DILocation(line: 2380, column: 175, scope: !8834)
!8846 = !DILocation(line: 2380, column: 106, scope: !8834)
!8847 = !DILocation(line: 2380, column: 194, scope: !8848)
!8848 = !DILexicalBlockFile(scope: !1303, file: !394, discriminator: 4)
!8849 = !DILocation(line: 2380, column: 194, scope: !1309)
!8850 = !DILocation(line: 2380, column: 194, scope: !8851)
!8851 = !DILexicalBlockFile(scope: !1309, file: !394, discriminator: 5)
!8852 = !DILocation(line: 2382, column: 26, scope: !1303)
!8853 = !DILocation(line: 2382, column: 32, scope: !1303)
!8854 = !DILocation(line: 2382, column: 53, scope: !1303)
!8855 = !DILocation(line: 2382, column: 12, scope: !1303)
!8856 = !DILocation(line: 2382, column: 5, scope: !1303)
!8857 = !DILocation(line: 2383, column: 1, scope: !1303)
!8858 = !DILocation(line: 2386, column: 31, scope: !1310)
!8859 = !DILocation(line: 2386, column: 47, scope: !1310)
!8860 = !DILocation(line: 2388, column: 5, scope: !1310)
!8861 = !DILocation(line: 2388, column: 15, scope: !1310)
!8862 = !DILocation(line: 2388, column: 35, scope: !1310)
!8863 = !DILocation(line: 2388, column: 41, scope: !1310)
!8864 = !DILocation(line: 2388, column: 63, scope: !1310)
!8865 = !DILocation(line: 2388, column: 21, scope: !1310)
!8866 = !DILocation(line: 2390, column: 9, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !1310, file: !394, line: 2390, column: 9)
!8868 = !DILocation(line: 2390, column: 13, scope: !8867)
!8869 = !DILocation(line: 2390, column: 9, scope: !1310)
!8870 = !DILocation(line: 2392, column: 16, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8867, file: !394, line: 2390, column: 49)
!8872 = !DILocation(line: 2392, column: 9, scope: !8871)
!8873 = !DILocation(line: 2394, column: 5, scope: !1310)
!8874 = !DILocation(line: 2394, column: 10, scope: !8875)
!8875 = !DILexicalBlockFile(scope: !1316, file: !394, discriminator: 1)
!8876 = !DILocation(line: 2394, column: 20, scope: !1316)
!8877 = !DILocation(line: 2394, column: 50, scope: !1316)
!8878 = !DILocation(line: 2394, column: 64, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !1316, file: !394, line: 2394, column: 61)
!8880 = !DILocation(line: 2394, column: 81, scope: !8879)
!8881 = !DILocation(line: 2394, column: 61, scope: !8879)
!8882 = !DILocation(line: 2394, column: 91, scope: !8879)
!8883 = !DILocation(line: 2394, column: 61, scope: !1316)
!8884 = !DILocation(line: 2394, column: 61, scope: !8885)
!8885 = !DILexicalBlockFile(scope: !1316, file: !394, discriminator: 2)
!8886 = !DILocation(line: 2394, column: 122, scope: !8887)
!8887 = !DILexicalBlockFile(scope: !8879, file: !394, discriminator: 3)
!8888 = !DILocation(line: 2394, column: 140, scope: !8879)
!8889 = !DILocation(line: 2394, column: 150, scope: !8879)
!8890 = !DILocation(line: 2394, column: 175, scope: !8879)
!8891 = !DILocation(line: 2394, column: 106, scope: !8879)
!8892 = !DILocation(line: 2394, column: 194, scope: !8893)
!8893 = !DILexicalBlockFile(scope: !1310, file: !394, discriminator: 4)
!8894 = !DILocation(line: 2394, column: 194, scope: !1316)
!8895 = !DILocation(line: 2394, column: 194, scope: !8896)
!8896 = !DILexicalBlockFile(scope: !1316, file: !394, discriminator: 5)
!8897 = !DILocation(line: 2396, column: 26, scope: !1310)
!8898 = !DILocation(line: 2396, column: 32, scope: !1310)
!8899 = !DILocation(line: 2396, column: 54, scope: !1310)
!8900 = !DILocation(line: 2396, column: 12, scope: !1310)
!8901 = !DILocation(line: 2396, column: 5, scope: !1310)
!8902 = !DILocation(line: 2397, column: 1, scope: !1310)
!8903 = !DILocation(line: 2306, column: 25, scope: !1256)
!8904 = !DILocation(line: 2306, column: 47, scope: !1256)
!8905 = !DILocation(line: 2306, column: 63, scope: !1256)
!8906 = !DILocation(line: 2308, column: 5, scope: !1256)
!8907 = !DILocation(line: 2308, column: 15, scope: !1256)
!8908 = !DILocation(line: 2308, column: 22, scope: !1256)
!8909 = !DILocation(line: 2309, column: 9, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !1256, file: !394, line: 2309, column: 9)
!8911 = !DILocation(line: 2309, column: 14, scope: !8910)
!8912 = !DILocation(line: 2309, column: 9, scope: !1256)
!8913 = !DILocation(line: 2310, column: 25, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8910, file: !394, line: 2309, column: 29)
!8915 = !DILocation(line: 2310, column: 9, scope: !8914)
!8916 = !DILocation(line: 2312, column: 9, scope: !8914)
!8917 = !DILocation(line: 2315, column: 44, scope: !1256)
!8918 = !DILocation(line: 2315, column: 32, scope: !1256)
!8919 = !DILocation(line: 2315, column: 50, scope: !1256)
!8920 = !DILocation(line: 2315, column: 12, scope: !1256)
!8921 = !DILocation(line: 2315, column: 10, scope: !1256)
!8922 = !DILocation(line: 2316, column: 9, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !1256, file: !394, line: 2316, column: 9)
!8924 = !DILocation(line: 2316, column: 14, scope: !8923)
!8925 = !DILocation(line: 2316, column: 9, scope: !1256)
!8926 = !DILocation(line: 2317, column: 25, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8923, file: !394, line: 2316, column: 29)
!8928 = !DILocation(line: 2317, column: 47, scope: !8927)
!8929 = !DILocation(line: 2317, column: 53, scope: !8927)
!8930 = !{!8931, !1459, i64 8}
!8931 = !{!"_Py_Identifier", !1459, i64 0, !1459, i64 8, !1459, i64 16}
!8932 = !DILocation(line: 2317, column: 9, scope: !8927)
!8933 = !DILocation(line: 2318, column: 9, scope: !8927)
!8934 = !DILocation(line: 2321, column: 31, scope: !1256)
!8935 = !DILocation(line: 2321, column: 37, scope: !1256)
!8936 = !DILocation(line: 2321, column: 11, scope: !1256)
!8937 = !DILocation(line: 2321, column: 9, scope: !1256)
!8938 = !DILocation(line: 2322, column: 5, scope: !1256)
!8939 = !DILocation(line: 2322, column: 10, scope: !8940)
!8940 = !DILexicalBlockFile(scope: !1274, file: !394, discriminator: 1)
!8941 = !DILocation(line: 2322, column: 20, scope: !1274)
!8942 = !DILocation(line: 2322, column: 50, scope: !1274)
!8943 = !DILocation(line: 2322, column: 65, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !1274, file: !394, line: 2322, column: 62)
!8945 = !DILocation(line: 2322, column: 82, scope: !8944)
!8946 = !DILocation(line: 2322, column: 62, scope: !8944)
!8947 = !DILocation(line: 2322, column: 92, scope: !8944)
!8948 = !DILocation(line: 2322, column: 62, scope: !1274)
!8949 = !DILocation(line: 2322, column: 62, scope: !8950)
!8950 = !DILexicalBlockFile(scope: !1274, file: !394, discriminator: 2)
!8951 = !DILocation(line: 2322, column: 123, scope: !8952)
!8952 = !DILexicalBlockFile(scope: !8944, file: !394, discriminator: 3)
!8953 = !DILocation(line: 2322, column: 141, scope: !8944)
!8954 = !DILocation(line: 2322, column: 151, scope: !8944)
!8955 = !DILocation(line: 2322, column: 176, scope: !8944)
!8956 = !DILocation(line: 2322, column: 107, scope: !8944)
!8957 = !DILocation(line: 2322, column: 195, scope: !8958)
!8958 = !DILexicalBlockFile(scope: !1256, file: !394, discriminator: 4)
!8959 = !DILocation(line: 2322, column: 195, scope: !1274)
!8960 = !DILocation(line: 2322, column: 195, scope: !8961)
!8961 = !DILexicalBlockFile(scope: !1274, file: !394, discriminator: 5)
!8962 = !DILocation(line: 2323, column: 12, scope: !1256)
!8963 = !DILocation(line: 2323, column: 5, scope: !1256)
!8964 = !DILocation(line: 2324, column: 1, scope: !1256)
!8965 = !DILocation(line: 2400, column: 35, scope: !1317)
!8966 = !DILocation(line: 2400, column: 47, scope: !1317)
!8967 = !DILocation(line: 2402, column: 9, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !1317, file: !394, line: 2402, column: 9)
!8969 = !DILocation(line: 2402, column: 15, scope: !8968)
!8970 = !DILocation(line: 2402, column: 22, scope: !8968)
!8971 = !DILocation(line: 2402, column: 9, scope: !1317)
!8972 = !DILocation(line: 2403, column: 25, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8968, file: !394, line: 2402, column: 37)
!8974 = !DILocation(line: 2403, column: 9, scope: !8973)
!8975 = !DILocation(line: 2405, column: 9, scope: !8973)
!8976 = !DILocation(line: 2407, column: 42, scope: !1317)
!8977 = !DILocation(line: 2407, column: 48, scope: !1317)
!8978 = !DILocation(line: 2407, column: 29, scope: !1317)
!8979 = !DILocation(line: 2407, column: 56, scope: !1317)
!8980 = !DILocation(line: 2407, column: 12, scope: !1317)
!8981 = !DILocation(line: 2407, column: 5, scope: !1317)
!8982 = !DILocation(line: 2408, column: 1, scope: !1317)
