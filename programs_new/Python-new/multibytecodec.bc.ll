; ModuleID = 'irs-onlybc/multibytecodec.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._object = type { i64, %struct._typeobject* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct.MultibyteIncrementalEncoderObject = type { %struct._object, %struct.MultibyteCodec*, %union.MultibyteCodec_State, %struct._object*, %struct._object* }
%struct.MultibyteCodec = type { i8*, i8*, i32 (i8*)*, i64 (%union.MultibyteCodec_State*, i8*, i32, i8*, i64*, i64, i8**, i64, i32)*, i32 (%union.MultibyteCodec_State*, i8*)*, i64 (%union.MultibyteCodec_State*, i8*, i8**, i64)*, i64 (%union.MultibyteCodec_State*, i8*, i8**, i64, %struct._PyUnicodeWriter*)*, i32 (%union.MultibyteCodec_State*, i8*)*, i64 (%union.MultibyteCodec_State*, i8*)* }
%struct._PyUnicodeWriter = type { %struct._object*, i8*, i32, i32, i64, i64, i64, i32, i8, i8 }
%union.MultibyteCodec_State = type { i8* }
%struct.MultibyteCodecObject = type { %struct._object, %struct.MultibyteCodec* }
%struct.MultibyteStatefulEncoderContext = type { %struct._object, %struct.MultibyteCodec*, %union.MultibyteCodec_State, %struct._object*, %struct._object* }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, i32* }
%struct.anon = type { i32 }
%struct.MultibyteEncodeBuffer = type { %struct._object*, i64, i64, i8*, i8*, %struct._object*, %struct._object* }
%struct.PyCompactUnicodeObject = type { %struct.PyASCIIObject, i64, i8*, i64 }
%struct.PyUnicodeObject = type { %struct.PyCompactUnicodeObject, %union.anon }
%union.anon = type { i8* }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.MultibyteStatefulCodecContext = type { %struct._object, %struct.MultibyteCodec*, %union.MultibyteCodec_State, %struct._object* }
%struct.MultibyteIncrementalDecoderObject = type { %struct._object, %struct.MultibyteCodec*, %union.MultibyteCodec_State, %struct._object*, [8 x i8], i64 }
%struct.MultibyteDecodeBuffer = type { i8*, i8*, i8*, %struct._object*, %struct._PyUnicodeWriter }
%struct.MultibyteStatefulDecoderContext = type { %struct._object, %struct.MultibyteCodec*, %union.MultibyteCodec_State, %struct._object*, [8 x i8], i64 }
%struct.MultibyteStreamReaderObject = type { %struct._object, %struct.MultibyteCodec*, %union.MultibyteCodec_State, %struct._object*, [8 x i8], i64, %struct._object* }
%struct.MultibyteStreamWriterObject = type { %struct._object, %struct.MultibyteCodec*, %union.MultibyteCodec_State, %struct._object*, %struct._object*, %struct._object* }

@MultibyteIncrementalEncoder_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0), i64 48, i64 0, void (%struct._object*)* bitcast (void (%struct.MultibyteIncrementalEncoderObject*)* @mbiencoder_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.MultibyteIncrementalEncoderObject*, i32 (%struct._object*, i8*)*, i8*)* @mbiencoder_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @mbiencoder_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @codecctx_getsets, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @mbiencoder_init, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @mbiencoder_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@MultibyteIncrementalDecoder_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.25, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.MultibyteIncrementalDecoderObject*)* @mbidecoder_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.MultibyteIncrementalDecoderObject*, i32 (%struct._object*, i8*)*, i8*)* @mbidecoder_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @mbidecoder_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @codecctx_getsets, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @mbidecoder_init, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @mbidecoder_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@MultibyteStreamReader_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.30, i32 0, i32 0), i64 64, i64 0, void (%struct._object*)* bitcast (void (%struct.MultibyteStreamReaderObject*)* @mbstreamreader_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.MultibyteStreamReaderObject*, i32 (%struct._object*, i8*)*, i8*)* @mbstreamreader_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([5 x %struct.PyMethodDef], [5 x %struct.PyMethodDef]* @mbstreamreader_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([2 x %struct.PyMemberDef], [2 x %struct.PyMemberDef]* @mbstreamreader_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @codecctx_getsets, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @mbstreamreader_init, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @mbstreamreader_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@MultibyteStreamWriter_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.39, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.MultibyteStreamWriterObject*)* @mbstreamwriter_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.MultibyteStreamWriterObject*, i32 (%struct._object*, i8*)*, i8*)* @mbstreamwriter_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @mbstreamwriter_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([2 x %struct.PyMemberDef], [2 x %struct.PyMemberDef]* @mbstreamwriter_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @codecctx_getsets, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @mbstreamwriter_init, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @mbstreamwriter_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyInit__multibytecodec.typelist = private unnamed_addr constant [5 x %struct._typeobject*] [%struct._typeobject* @MultibyteIncrementalEncoder_Type, %struct._typeobject* @MultibyteIncrementalDecoder_Type, %struct._typeobject* @MultibyteStreamReader_Type, %struct._typeobject* @MultibyteStreamWriter_Type, %struct._typeobject* null], align 16
@MultibyteCodec_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i32 0, i32 0), i64 24, i64 0, void (%struct._object*)* bitcast (void (%struct.MultibyteCodecObject*)* @multibytecodec_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 262144, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([3 x %struct.PyMethodDef], [3 x %struct.PyMethodDef]* @multibytecodec_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@_multibytecodecmodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.49, i32 0, i32 0), i8* null, i64 -1, %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @__methods, i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, void (i8*)* null }, align 8
@.str = private unnamed_addr constant [44 x i8] c"can't initialize the _multibytecodec module\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"MultibyteIncrementalEncoder\00", align 1
@mbiencoder_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteIncrementalEncoderObject*, %struct._object*, %struct._object*)* @mbiencoder_encode to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteIncrementalEncoderObject*)* @mbiencoder_reset to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@codecctx_getsets = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.MultibyteStatefulCodecContext*)* @codecctx_errors_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.MultibyteStatefulCodecContext*, %struct._object*, i8*)* @codecctx_errors_set to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.2 = private unnamed_addr constant [7 x i8] c"encode\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"O|i:encode\00", align 1
@incrementalkwarglist = internal global [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* null], align 16
@.str.5 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"final\00", align 1
@PyExc_TypeError = external global %struct._object*, align 8
@.str.7 = private unnamed_addr constant [36 x i8] c"couldn't convert the object to str.\00", align 1
@PyExc_UnicodeError = external global %struct._object*, align 8
@.str.8 = private unnamed_addr constant [24 x i8] c"pending buffer overflow\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"illegal multibyte sequence\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"incomplete multibyte sequence\00", align 1
@PyExc_RuntimeError = external global %struct._object*, align 8
@.str.11 = private unnamed_addr constant [21 x i8] c"internal codec error\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"unknown runtime error\00", align 1
@PyExc_UnicodeEncodeError = external global %struct._object*, align 8
@.str.13 = private unnamed_addr constant [6 x i8] c"sOnns\00", align 1
@.str.14 = private unnamed_addr constant [52 x i8] c"encoding error handler must return (str, int) tuple\00", align 1
@PyExc_IndexError = external global %struct._object*, align 8
@.str.15 = private unnamed_addr constant [46 x i8] c"position %zd from error handler out of bounds\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@.str.16 = private unnamed_addr constant [7 x i8] c"errors\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"how to treat errors\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"ignore\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"errors must be a string\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"|s:IncrementalEncoder\00", align 1
@incnewkwarglist = internal global [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i8* null], align 16
@.str.23 = private unnamed_addr constant [6 x i8] c"codec\00", align 1
@.str.24 = private unnamed_addr constant [25 x i8] c"codec is unexpected type\00", align 1
@.str.25 = private unnamed_addr constant [28 x i8] c"MultibyteIncrementalDecoder\00", align 1
@mbidecoder_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteIncrementalDecoderObject*, %struct._object*, %struct._object*)* @mbidecoder_decode to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteIncrementalDecoderObject*)* @mbidecoder_reset to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@.str.26 = private unnamed_addr constant [7 x i8] c"decode\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"y*|i:decode\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"decoding error handler must return (str, int) tuple\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"|s:IncrementalDecoder\00", align 1
@.str.30 = private unnamed_addr constant [22 x i8] c"MultibyteStreamReader\00", align 1
@mbstreamreader_methods = internal global [5 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteStreamReaderObject*, %struct._object*)* @mbstreamreader_read to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteStreamReaderObject*, %struct._object*)* @mbstreamreader_readline to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteStreamReaderObject*, %struct._object*)* @mbstreamreader_readlines to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteStreamReaderObject*)* @mbstreamreader_reset to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@mbstreamreader_members = internal global [2 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i32 6, i64 56, i32 1, i8* null }, %struct.PyMemberDef zeroinitializer], align 16
@.str.31 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"readline\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"readlines\00", align 1
@.str.34 = private unnamed_addr constant [25 x i8] c"arg 1 must be an integer\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.36 = private unnamed_addr constant [53 x i8] c"stream function returned a non-bytes object (%.100s)\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"stream\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"O|s:StreamReader\00", align 1
@streamkwarglist = internal global [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i8* null], align 16
@.str.39 = private unnamed_addr constant [22 x i8] c"MultibyteStreamWriter\00", align 1
@mbstreamwriter_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteStreamWriterObject*, %struct._object*)* @mbstreamwriter_write to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteStreamWriterObject*, %struct._object*)* @mbstreamwriter_writelines to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteStreamWriterObject*)* @mbstreamwriter_reset to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@mbstreamwriter_members = internal global [2 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i32 6, i64 48, i32 1, i8* null }, %struct.PyMemberDef zeroinitializer], align 16
@.str.40 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"writelines\00", align 1
@PyId_write = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i32 0, i32 0), %struct._object* null }, align 8
@.str.42 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.43 = private unnamed_addr constant [30 x i8] c"arg must be a sequence object\00", align 1
@.str.44 = private unnamed_addr constant [17 x i8] c"O|s:StreamWriter\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"MultibyteCodec\00", align 1
@multibytecodec_methods = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteCodecObject*, %struct._object*, %struct._object*)* @MultibyteCodec_Encode to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([415 x i8], [415 x i8]* @MultibyteCodec_Encode__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.MultibyteCodecObject*, %struct._object*, %struct._object*)* @MultibyteCodec_Decode to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([414 x i8], [414 x i8]* @MultibyteCodec_Decode__doc__, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@MultibyteCodec_Encode__doc__ = internal global [415 x i8] c"I.encode(unicode[, errors]) -> (string, length consumed)\0A\0AReturn an encoded string version of `unicode'. errors may be given to\0Aset a different error handling scheme. Default is 'strict' meaning that\0Aencoding errors raise a UnicodeEncodeError. Other possible values are\0A'ignore', 'replace' and 'xmlcharrefreplace' as well as any other name\0Aregistered with codecs.register_error that can handle UnicodeEncodeErrors.\00", align 16
@MultibyteCodec_Decode__doc__ = internal global [414 x i8] c"I.decode(string[, errors]) -> (unicodeobject, length consumed)\0A\0ADecodes `string' using I, an MultibyteCodec instance. errors may be given\0Ato set a different error handling scheme. Default is 'strict' meaning\0Athat encoding errors raise a UnicodeDecodeError. Other possible values\0Aare 'ignore' and 'replace' as well as any other name registered with\0Acodecs.register_error that is able to handle UnicodeDecodeErrors.\00", align 16
@.str.46 = private unnamed_addr constant [11 x i8] c"O|z:encode\00", align 1
@codeckwarglist = internal global [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i8* null], align 16
@.str.47 = private unnamed_addr constant [40 x i8] c"couldn't convert the object to unicode.\00", align 1
@.str.48 = private unnamed_addr constant [12 x i8] c"y*|z:decode\00", align 1
@.str.49 = private unnamed_addr constant [16 x i8] c"_multibytecodec\00", align 1
@__methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @__create_codec, i32 8, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@.str.50 = private unnamed_addr constant [15 x i8] c"__create_codec\00", align 1
@.str.51 = private unnamed_addr constant [23 x i8] c"multibytecodec.__map_*\00", align 1
@PyExc_ValueError = external global %struct._object*, align 8
@.str.52 = private unnamed_addr constant [22 x i8] c"argument type invalid\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit__multibytecodec() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %m = alloca %struct._object*, align 8
  %typelist = alloca [5 x %struct._typeobject*], align 16
  %cleanup.dest.slot = alloca i32
  %0 = bitcast i32* %i to i8*, !dbg !1450
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !1450
  call void @llvm.dbg.declare(metadata i32* %i, metadata !569, metadata !1451), !dbg !1452
  %1 = bitcast %struct._object** %m to i8*, !dbg !1453
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1453
  call void @llvm.dbg.declare(metadata %struct._object** %m, metadata !570, metadata !1451), !dbg !1454
  %2 = bitcast [5 x %struct._typeobject*]* %typelist to i8*, !dbg !1455
  call void @llvm.lifetime.start(i64 40, i8* %2) #1, !dbg !1455
  call void @llvm.dbg.declare(metadata [5 x %struct._typeobject*]* %typelist, metadata !571, metadata !1451), !dbg !1456
  %3 = bitcast [5 x %struct._typeobject*]* %typelist to i8*, !dbg !1456
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* bitcast ([5 x %struct._typeobject*]* @PyInit__multibytecodec.typelist to i8*), i64 40, i32 16, i1 false), !dbg !1456
  %call = call i32 @PyType_Ready(%struct._typeobject* @MultibyteCodec_Type), !dbg !1457
  %cmp = icmp slt i32 %call, 0, !dbg !1459
  br i1 %cmp, label %if.then, label %if.end, !dbg !1460

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1461
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1461

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyModule_Create2(%struct.PyModuleDef* @_multibytecodecmodule, i32 1013), !dbg !1462
  store %struct._object* %call1, %struct._object** %m, align 8, !dbg !1463, !tbaa !1464
  %4 = load %struct._object*, %struct._object** %m, align 8, !dbg !1468, !tbaa !1464
  %cmp2 = icmp eq %struct._object* %4, null, !dbg !1470
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !1471

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !1472
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1472

if.end.4:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !1473, !tbaa !1475
  br label %for.cond, !dbg !1477

for.cond:                                         ; preds = %for.inc, %if.end.4
  %5 = load i32, i32* %i, align 4, !dbg !1478, !tbaa !1475
  %idxprom = sext i32 %5 to i64, !dbg !1482
  %arrayidx = getelementptr [5 x %struct._typeobject*], [5 x %struct._typeobject*]* %typelist, i32 0, i64 %idxprom, !dbg !1482
  %6 = load %struct._typeobject*, %struct._typeobject** %arrayidx, align 8, !dbg !1482, !tbaa !1464
  %cmp5 = icmp ne %struct._typeobject* %6, null, !dbg !1483
  br i1 %cmp5, label %for.body, label %for.end, !dbg !1484

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !1485, !tbaa !1475
  %idxprom6 = sext i32 %7 to i64, !dbg !1488
  %arrayidx7 = getelementptr [5 x %struct._typeobject*], [5 x %struct._typeobject*]* %typelist, i32 0, i64 %idxprom6, !dbg !1488
  %8 = load %struct._typeobject*, %struct._typeobject** %arrayidx7, align 8, !dbg !1488, !tbaa !1464
  %call8 = call i32 @PyType_Ready(%struct._typeobject* %8), !dbg !1489
  %cmp9 = icmp slt i32 %call8, 0, !dbg !1490
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !1491

if.then.10:                                       ; preds = %for.body
  store %struct._object* null, %struct._object** %retval, !dbg !1492
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1492

if.end.11:                                        ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !1493, !tbaa !1475
  %idxprom12 = sext i32 %9 to i64, !dbg !1494
  %arrayidx13 = getelementptr [5 x %struct._typeobject*], [5 x %struct._typeobject*]* %typelist, i32 0, i64 %idxprom12, !dbg !1494
  %10 = load %struct._typeobject*, %struct._typeobject** %arrayidx13, align 8, !dbg !1494, !tbaa !1464
  %11 = bitcast %struct._typeobject* %10 to %struct._object*, !dbg !1495
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !1496
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !1497, !tbaa !1498
  %inc = add i64 %12, 1, !dbg !1497
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !1497, !tbaa !1498
  %13 = load %struct._object*, %struct._object** %m, align 8, !dbg !1501, !tbaa !1464
  %14 = load i32, i32* %i, align 4, !dbg !1502, !tbaa !1475
  %idxprom14 = sext i32 %14 to i64, !dbg !1503
  %arrayidx15 = getelementptr [5 x %struct._typeobject*], [5 x %struct._typeobject*]* %typelist, i32 0, i64 %idxprom14, !dbg !1503
  %15 = load %struct._typeobject*, %struct._typeobject** %arrayidx15, align 8, !dbg !1503, !tbaa !1464
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 1, !dbg !1504
  %16 = load i8*, i8** %tp_name, align 8, !dbg !1504, !tbaa !1505
  %17 = load i32, i32* %i, align 4, !dbg !1508, !tbaa !1475
  %idxprom16 = sext i32 %17 to i64, !dbg !1509
  %arrayidx17 = getelementptr [5 x %struct._typeobject*], [5 x %struct._typeobject*]* %typelist, i32 0, i64 %idxprom16, !dbg !1509
  %18 = load %struct._typeobject*, %struct._typeobject** %arrayidx17, align 8, !dbg !1509, !tbaa !1464
  %19 = bitcast %struct._typeobject* %18 to %struct._object*, !dbg !1510
  %call18 = call i32 @PyModule_AddObject(%struct._object* %13, i8* %16, %struct._object* %19), !dbg !1511
  br label %for.inc, !dbg !1512

for.inc:                                          ; preds = %if.end.11
  %20 = load i32, i32* %i, align 4, !dbg !1513, !tbaa !1475
  %inc19 = add i32 %20, 1, !dbg !1513
  store i32 %inc19, i32* %i, align 4, !dbg !1513, !tbaa !1475
  br label %for.cond, !dbg !1514

for.end:                                          ; preds = %for.cond
  %call20 = call %struct._object* @PyErr_Occurred(), !dbg !1515
  %tobool = icmp ne %struct._object* %call20, null, !dbg !1515
  br i1 %tobool, label %if.then.21, label %if.end.22, !dbg !1517

if.then.21:                                       ; preds = %for.end
  call void @Py_FatalError(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i32 0, i32 0)) #6, !dbg !1518
  unreachable, !dbg !1518

if.end.22:                                        ; preds = %for.end
  %21 = load %struct._object*, %struct._object** %m, align 8, !dbg !1520, !tbaa !1464
  store %struct._object* %21, %struct._object** %retval, !dbg !1521
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1521

cleanup:                                          ; preds = %if.end.22, %if.then.10, %if.then.3, %if.then
  %22 = bitcast [5 x %struct._typeobject*]* %typelist to i8*, !dbg !1522
  call void @llvm.lifetime.end(i64 40, i8* %22) #1, !dbg !1522
  %23 = bitcast %struct._object** %m to i8*, !dbg !1522
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !1522
  %24 = bitcast i32* %i to i8*, !dbg !1522
  call void @llvm.lifetime.end(i64 4, i8* %24) #1, !dbg !1522
  %25 = load %struct._object*, %struct._object** %retval, !dbg !1522
  ret %struct._object* %25, !dbg !1522
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare i32 @PyType_Ready(%struct._typeobject*) #3

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #3

declare i32 @PyModule_AddObject(%struct._object*, i8*, %struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

; Function Attrs: noreturn
declare void @Py_FatalError(i8*) #4

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal void @mbiencoder_dealloc(%struct.MultibyteIncrementalEncoderObject* %self) #0 {
entry:
  %self.addr = alloca %struct.MultibyteIncrementalEncoderObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.MultibyteIncrementalEncoderObject* %self, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteIncrementalEncoderObject** %self.addr, metadata !581, metadata !1451), !dbg !1523
  %0 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1524, !tbaa !1464
  %1 = bitcast %struct.MultibyteIncrementalEncoderObject* %0 to i8*, !dbg !1524
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !1525
  br label %do.body, !dbg !1526

do.body:                                          ; preds = %entry
  %2 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1527, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %2, i32 0, i32 3, !dbg !1529
  %3 = load %struct._object*, %struct._object** %errors, align 8, !dbg !1529, !tbaa !1530
  %cmp = icmp ne %struct._object* %3, null, !dbg !1532
  br i1 %cmp, label %land.lhs.true, label %if.end.9, !dbg !1533

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1534, !tbaa !1464
  %errors1 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %4, i32 0, i32 3, !dbg !1536
  %5 = load %struct._object*, %struct._object** %errors1, align 8, !dbg !1536, !tbaa !1530
  %cmp2 = icmp ult %struct._object* %5, inttoptr (i64 1 to %struct._object*), !dbg !1537
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !1538

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1539, !tbaa !1464
  %errors3 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %6, i32 0, i32 3, !dbg !1541
  %7 = load %struct._object*, %struct._object** %errors3, align 8, !dbg !1541, !tbaa !1530
  %cmp4 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %7, !dbg !1542
  br i1 %cmp4, label %if.then, label %if.end.9, !dbg !1543

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %do.body.5, !dbg !1544

do.body.5:                                        ; preds = %if.then
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1547
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !1547
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !582, metadata !1451), !dbg !1549
  %9 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1550, !tbaa !1464
  %errors6 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %9, i32 0, i32 3, !dbg !1551
  %10 = load %struct._object*, %struct._object** %errors6, align 8, !dbg !1551, !tbaa !1530
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !1549, !tbaa !1464
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1552, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !1554
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !1555, !tbaa !1498
  %dec = add i64 %12, -1, !dbg !1555
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !1555, !tbaa !1498
  %cmp7 = icmp ne i64 %dec, 0, !dbg !1556
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !1557

if.then.8:                                        ; preds = %do.body.5
  br label %if.end, !dbg !1558

if.else:                                          ; preds = %do.body.5
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1560, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !1562
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1562, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !1564
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1564, !tbaa !1565
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1566, !tbaa !1464
  call void %15(%struct._object* %16), !dbg !1567
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1568
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !1568
  br label %do.end, !dbg !1570

do.end:                                           ; preds = %if.end
  br label %if.end.9, !dbg !1571

if.end.9:                                         ; preds = %do.end, %lor.lhs.false, %do.body
  br label %do.end.10, !dbg !1573

do.end.10:                                        ; preds = %if.end.9
  %18 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1577, !tbaa !1464
  %19 = bitcast %struct.MultibyteIncrementalEncoderObject* %18 to %struct._object*, !dbg !1578
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !1579
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !1579, !tbaa !1563
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 38, !dbg !1580
  %21 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !1580, !tbaa !1581
  %22 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1582, !tbaa !1464
  %23 = bitcast %struct.MultibyteIncrementalEncoderObject* %22 to i8*, !dbg !1582
  call void %21(i8* %23), !dbg !1583
  ret void, !dbg !1584
}

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @mbiencoder_traverse(%struct.MultibyteIncrementalEncoderObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.MultibyteIncrementalEncoderObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.MultibyteIncrementalEncoderObject* %self, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteIncrementalEncoderObject** %self.addr, metadata !590, metadata !1451), !dbg !1585
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !591, metadata !1451), !dbg !1586
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !592, metadata !1451), !dbg !1587
  %0 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1588, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %0, i32 0, i32 3, !dbg !1589
  %1 = load %struct._object*, %struct._object** %errors, align 8, !dbg !1589, !tbaa !1530
  %cmp = icmp ult %struct._object* %1, inttoptr (i64 1 to %struct._object*), !dbg !1590
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1591

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1592, !tbaa !1464
  %errors1 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %2, i32 0, i32 3, !dbg !1594
  %3 = load %struct._object*, %struct._object** %errors1, align 8, !dbg !1594, !tbaa !1530
  %cmp2 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %3, !dbg !1595
  br i1 %cmp2, label %if.then, label %if.end.9, !dbg !1596

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %do.body, !dbg !1597

do.body:                                          ; preds = %if.then
  %4 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1598, !tbaa !1464
  %errors3 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %4, i32 0, i32 3, !dbg !1600
  %5 = load %struct._object*, %struct._object** %errors3, align 8, !dbg !1600, !tbaa !1530
  %tobool = icmp ne %struct._object* %5, null, !dbg !1601
  br i1 %tobool, label %if.then.4, label %if.end.8, !dbg !1602

if.then.4:                                        ; preds = %do.body
  %6 = bitcast i32* %vret to i8*, !dbg !1603
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !1603
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !593, metadata !1451), !dbg !1605
  %7 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !1606, !tbaa !1464
  %8 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1607, !tbaa !1464
  %errors5 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %8, i32 0, i32 3, !dbg !1608
  %9 = load %struct._object*, %struct._object** %errors5, align 8, !dbg !1608, !tbaa !1530
  %10 = load i8*, i8** %arg.addr, align 8, !dbg !1609, !tbaa !1464
  %call = call i32 %7(%struct._object* %9, i8* %10), !dbg !1606
  store i32 %call, i32* %vret, align 4, !dbg !1605, !tbaa !1475
  %11 = load i32, i32* %vret, align 4, !dbg !1610, !tbaa !1475
  %tobool6 = icmp ne i32 %11, 0, !dbg !1610
  br i1 %tobool6, label %if.then.7, label %if.end, !dbg !1612

if.then.7:                                        ; preds = %if.then.4
  %12 = load i32, i32* %vret, align 4, !dbg !1613, !tbaa !1475
  store i32 %12, i32* %retval, !dbg !1615
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1615

if.end:                                           ; preds = %if.then.4
  store i32 0, i32* %cleanup.dest.slot, !dbg !1616
  br label %cleanup, !dbg !1616

cleanup:                                          ; preds = %if.end, %if.then.7
  %13 = bitcast i32* %vret to i8*, !dbg !1618
  call void @llvm.lifetime.end(i64 4, i8* %13) #1, !dbg !1618
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.8, !dbg !1621

if.end.8:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !1622

do.end:                                           ; preds = %if.end.8
  br label %if.end.9, !dbg !1625

if.end.9:                                         ; preds = %do.end, %lor.lhs.false
  store i32 0, i32* %retval, !dbg !1627
  br label %return, !dbg !1627

return:                                           ; preds = %if.end.9, %cleanup
  %14 = load i32, i32* %retval, !dbg !1628
  ret i32 %14, !dbg !1628

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @mbiencoder_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !868, metadata !1451), !dbg !1629
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !869, metadata !1451), !dbg !1630
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !870, metadata !1451), !dbg !1631
  ret i32 0, !dbg !1632
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbiencoder_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %self = alloca %struct.MultibyteIncrementalEncoderObject*, align 8
  %codec = alloca %struct._object*, align 8
  %errors = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  %_py_xdecref_tmp51 = alloca %struct._object*, align 8
  %_py_decref_tmp55 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !875, metadata !1451), !dbg !1633
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !876, metadata !1451), !dbg !1634
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !877, metadata !1451), !dbg !1635
  %0 = bitcast %struct.MultibyteIncrementalEncoderObject** %self to i8*, !dbg !1636
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1636
  call void @llvm.dbg.declare(metadata %struct.MultibyteIncrementalEncoderObject** %self, metadata !878, metadata !1451), !dbg !1637
  %1 = bitcast %struct._object** %codec to i8*, !dbg !1638
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1638
  call void @llvm.dbg.declare(metadata %struct._object** %codec, metadata !879, metadata !1451), !dbg !1639
  store %struct._object* null, %struct._object** %codec, align 8, !dbg !1639, !tbaa !1464
  %2 = bitcast i8** %errors to i8*, !dbg !1640
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !1640
  call void @llvm.dbg.declare(metadata i8** %errors, metadata !880, metadata !1451), !dbg !1641
  store i8* null, i8** %errors, align 8, !dbg !1641, !tbaa !1464
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1642, !tbaa !1464
  %4 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !1644, !tbaa !1464
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %3, %struct._object* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @incnewkwarglist, i32 0, i32 0), i8** %errors), !dbg !1645
  %tobool = icmp ne i32 %call, 0, !dbg !1645
  br i1 %tobool, label %if.end, label %if.then, !dbg !1646

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1647
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1647

if.end:                                           ; preds = %entry
  %5 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !1648, !tbaa !1464
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 36, !dbg !1649
  %6 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !1649, !tbaa !1650
  %7 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !1651, !tbaa !1464
  %call1 = call %struct._object* %6(%struct._typeobject* %7, i64 0), !dbg !1648
  %8 = bitcast %struct._object* %call1 to %struct.MultibyteIncrementalEncoderObject*, !dbg !1652
  store %struct.MultibyteIncrementalEncoderObject* %8, %struct.MultibyteIncrementalEncoderObject** %self, align 8, !dbg !1653, !tbaa !1464
  %9 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self, align 8, !dbg !1654, !tbaa !1464
  %cmp = icmp eq %struct.MultibyteIncrementalEncoderObject* %9, null, !dbg !1656
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !1657

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !1658
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1658

if.end.3:                                         ; preds = %if.end
  %10 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !1659, !tbaa !1464
  %11 = bitcast %struct._typeobject* %10 to %struct._object*, !dbg !1660
  %call4 = call %struct._object* @PyObject_GetAttrString(%struct._object* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0)), !dbg !1661
  store %struct._object* %call4, %struct._object** %codec, align 8, !dbg !1662, !tbaa !1464
  %12 = load %struct._object*, %struct._object** %codec, align 8, !dbg !1663, !tbaa !1464
  %cmp5 = icmp eq %struct._object* %12, null, !dbg !1665
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !1666

if.then.6:                                        ; preds = %if.end.3
  br label %errorexit, !dbg !1667

if.end.7:                                         ; preds = %if.end.3
  %13 = load %struct._object*, %struct._object** %codec, align 8, !dbg !1668, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !1670
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1670, !tbaa !1563
  %cmp8 = icmp eq %struct._typeobject* %14, @MultibyteCodec_Type, !dbg !1671
  br i1 %cmp8, label %if.end.10, label %if.then.9, !dbg !1672

if.then.9:                                        ; preds = %if.end.7
  %15 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !1673, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i32 0, i32 0)), !dbg !1675
  br label %errorexit, !dbg !1676

if.end.10:                                        ; preds = %if.end.7
  %16 = load %struct._object*, %struct._object** %codec, align 8, !dbg !1677, !tbaa !1464
  %17 = bitcast %struct._object* %16 to %struct.MultibyteCodecObject*, !dbg !1678
  %codec11 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %17, i32 0, i32 1, !dbg !1679
  %18 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec11, align 8, !dbg !1679, !tbaa !1680
  %19 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self, align 8, !dbg !1682, !tbaa !1464
  %codec12 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %19, i32 0, i32 1, !dbg !1683
  store %struct.MultibyteCodec* %18, %struct.MultibyteCodec** %codec12, align 8, !dbg !1684, !tbaa !1685
  %20 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self, align 8, !dbg !1686, !tbaa !1464
  %pending = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %20, i32 0, i32 4, !dbg !1687
  store %struct._object* null, %struct._object** %pending, align 8, !dbg !1688, !tbaa !1689
  %21 = load i8*, i8** %errors, align 8, !dbg !1690, !tbaa !1464
  %call13 = call %struct._object* @internal_error_callback(i8* %21), !dbg !1691
  %22 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self, align 8, !dbg !1692, !tbaa !1464
  %errors14 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %22, i32 0, i32 3, !dbg !1693
  store %struct._object* %call13, %struct._object** %errors14, align 8, !dbg !1694, !tbaa !1530
  %23 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self, align 8, !dbg !1695, !tbaa !1464
  %errors15 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %23, i32 0, i32 3, !dbg !1697
  %24 = load %struct._object*, %struct._object** %errors15, align 8, !dbg !1697, !tbaa !1530
  %cmp16 = icmp eq %struct._object* %24, null, !dbg !1698
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !1699

if.then.17:                                       ; preds = %if.end.10
  br label %errorexit, !dbg !1700

if.end.18:                                        ; preds = %if.end.10
  %25 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self, align 8, !dbg !1701, !tbaa !1464
  %codec19 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %25, i32 0, i32 1, !dbg !1703
  %26 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec19, align 8, !dbg !1703, !tbaa !1685
  %encinit = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %26, i32 0, i32 4, !dbg !1704
  %27 = load i32 (%union.MultibyteCodec_State*, i8*)*, i32 (%union.MultibyteCodec_State*, i8*)** %encinit, align 8, !dbg !1704, !tbaa !1705
  %cmp20 = icmp ne i32 (%union.MultibyteCodec_State*, i8*)* %27, null, !dbg !1707
  br i1 %cmp20, label %land.lhs.true, label %if.end.27, !dbg !1708

land.lhs.true:                                    ; preds = %if.end.18
  %28 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self, align 8, !dbg !1709, !tbaa !1464
  %codec21 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %28, i32 0, i32 1, !dbg !1710
  %29 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec21, align 8, !dbg !1710, !tbaa !1685
  %encinit22 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %29, i32 0, i32 4, !dbg !1711
  %30 = load i32 (%union.MultibyteCodec_State*, i8*)*, i32 (%union.MultibyteCodec_State*, i8*)** %encinit22, align 8, !dbg !1711, !tbaa !1705
  %31 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self, align 8, !dbg !1712, !tbaa !1464
  %state = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %31, i32 0, i32 2, !dbg !1713
  %32 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self, align 8, !dbg !1714, !tbaa !1464
  %codec23 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %32, i32 0, i32 1, !dbg !1715
  %33 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec23, align 8, !dbg !1715, !tbaa !1685
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %33, i32 0, i32 1, !dbg !1716
  %34 = load i8*, i8** %config, align 8, !dbg !1716, !tbaa !1717
  %call24 = call i32 %30(%union.MultibyteCodec_State* %state, i8* %34), !dbg !1709
  %cmp25 = icmp ne i32 %call24, 0, !dbg !1718
  br i1 %cmp25, label %if.then.26, label %if.end.27, !dbg !1719

if.then.26:                                       ; preds = %land.lhs.true
  br label %errorexit, !dbg !1720

if.end.27:                                        ; preds = %land.lhs.true, %if.end.18
  br label %do.body, !dbg !1721

do.body:                                          ; preds = %if.end.27
  %35 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1722
  call void @llvm.lifetime.start(i64 8, i8* %35) #1, !dbg !1722
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !881, metadata !1451), !dbg !1724
  %36 = load %struct._object*, %struct._object** %codec, align 8, !dbg !1725, !tbaa !1464
  store %struct._object* %36, %struct._object** %_py_decref_tmp, align 8, !dbg !1724, !tbaa !1464
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1726, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !1728
  %38 = load i64, i64* %ob_refcnt, align 8, !dbg !1729, !tbaa !1498
  %dec = add i64 %38, -1, !dbg !1729
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !1729, !tbaa !1498
  %cmp28 = icmp ne i64 %dec, 0, !dbg !1730
  br i1 %cmp28, label %if.then.29, label %if.else, !dbg !1731

if.then.29:                                       ; preds = %do.body
  br label %if.end.31, !dbg !1732

if.else:                                          ; preds = %do.body
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1734, !tbaa !1464
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !1736
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !1736, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !1737
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1737, !tbaa !1565
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1738, !tbaa !1464
  call void %41(%struct._object* %42), !dbg !1739
  br label %if.end.31

if.end.31:                                        ; preds = %if.else, %if.then.29
  %43 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1740
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !1740
  br label %do.cond, !dbg !1742

do.cond:                                          ; preds = %if.end.31
  br label %do.end, !dbg !1743

do.end:                                           ; preds = %do.cond
  %44 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self, align 8, !dbg !1745, !tbaa !1464
  %45 = bitcast %struct.MultibyteIncrementalEncoderObject* %44 to %struct._object*, !dbg !1746
  store %struct._object* %45, %struct._object** %retval, !dbg !1747
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1747

errorexit:                                        ; preds = %if.then.26, %if.then.17, %if.then.9, %if.then.6
  br label %do.body.32, !dbg !1748

do.body.32:                                       ; preds = %errorexit
  %46 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !1749
  call void @llvm.lifetime.start(i64 8, i8* %46) #1, !dbg !1749
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !883, metadata !1451), !dbg !1751
  %47 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self, align 8, !dbg !1752, !tbaa !1464
  %48 = bitcast %struct.MultibyteIncrementalEncoderObject* %47 to %struct._object*, !dbg !1753
  store %struct._object* %48, %struct._object** %_py_xdecref_tmp, align 8, !dbg !1751, !tbaa !1464
  %49 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !1754, !tbaa !1464
  %cmp33 = icmp ne %struct._object* %49, null, !dbg !1755
  br i1 %cmp33, label %if.then.34, label %if.end.47, !dbg !1756

if.then.34:                                       ; preds = %do.body.32
  br label %do.body.35, !dbg !1757

do.body.35:                                       ; preds = %if.then.34
  %50 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !1759
  call void @llvm.lifetime.start(i64 8, i8* %50) #1, !dbg !1759
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !885, metadata !1451), !dbg !1761
  %51 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !1762, !tbaa !1464
  store %struct._object* %51, %struct._object** %_py_decref_tmp36, align 8, !dbg !1761, !tbaa !1464
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !1763, !tbaa !1464
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !1765
  %53 = load i64, i64* %ob_refcnt37, align 8, !dbg !1766, !tbaa !1498
  %dec38 = add i64 %53, -1, !dbg !1766
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !1766, !tbaa !1498
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !1767
  br i1 %cmp39, label %if.then.40, label %if.else.41, !dbg !1768

if.then.40:                                       ; preds = %do.body.35
  br label %if.end.44, !dbg !1769

if.else.41:                                       ; preds = %do.body.35
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !1771, !tbaa !1464
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !1773
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !1773, !tbaa !1563
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !1774
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8, !dbg !1774, !tbaa !1565
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !1775, !tbaa !1464
  call void %56(%struct._object* %57), !dbg !1776
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.then.40
  %58 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !1777
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !1777
  br label %do.cond.45, !dbg !1779

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !1780

do.end.46:                                        ; preds = %do.cond.45
  br label %if.end.47, !dbg !1782

if.end.47:                                        ; preds = %do.end.46, %do.body.32
  %59 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !1784
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !1784
  br label %do.cond.48, !dbg !1787

do.cond.48:                                       ; preds = %if.end.47
  br label %do.end.49, !dbg !1788

do.end.49:                                        ; preds = %do.cond.48
  br label %do.body.50, !dbg !1790

do.body.50:                                       ; preds = %do.end.49
  %60 = bitcast %struct._object** %_py_xdecref_tmp51 to i8*, !dbg !1791
  call void @llvm.lifetime.start(i64 8, i8* %60) #1, !dbg !1791
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp51, metadata !888, metadata !1451), !dbg !1793
  %61 = load %struct._object*, %struct._object** %codec, align 8, !dbg !1794, !tbaa !1464
  store %struct._object* %61, %struct._object** %_py_xdecref_tmp51, align 8, !dbg !1793, !tbaa !1464
  %62 = load %struct._object*, %struct._object** %_py_xdecref_tmp51, align 8, !dbg !1795, !tbaa !1464
  %cmp52 = icmp ne %struct._object* %62, null, !dbg !1796
  br i1 %cmp52, label %if.then.53, label %if.end.66, !dbg !1797

if.then.53:                                       ; preds = %do.body.50
  br label %do.body.54, !dbg !1798

do.body.54:                                       ; preds = %if.then.53
  %63 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !1800
  call void @llvm.lifetime.start(i64 8, i8* %63) #1, !dbg !1800
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp55, metadata !890, metadata !1451), !dbg !1802
  %64 = load %struct._object*, %struct._object** %_py_xdecref_tmp51, align 8, !dbg !1803, !tbaa !1464
  store %struct._object* %64, %struct._object** %_py_decref_tmp55, align 8, !dbg !1802, !tbaa !1464
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !1804, !tbaa !1464
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !1806
  %66 = load i64, i64* %ob_refcnt56, align 8, !dbg !1807, !tbaa !1498
  %dec57 = add i64 %66, -1, !dbg !1807
  store i64 %dec57, i64* %ob_refcnt56, align 8, !dbg !1807, !tbaa !1498
  %cmp58 = icmp ne i64 %dec57, 0, !dbg !1808
  br i1 %cmp58, label %if.then.59, label %if.else.60, !dbg !1809

if.then.59:                                       ; preds = %do.body.54
  br label %if.end.63, !dbg !1810

if.else.60:                                       ; preds = %do.body.54
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !1812, !tbaa !1464
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !1814
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !1814, !tbaa !1563
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !1815
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8, !dbg !1815, !tbaa !1565
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !1816, !tbaa !1464
  call void %69(%struct._object* %70), !dbg !1817
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.59
  %71 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !1818
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !1818
  br label %do.cond.64, !dbg !1820

do.cond.64:                                       ; preds = %if.end.63
  br label %do.end.65, !dbg !1821

do.end.65:                                        ; preds = %do.cond.64
  br label %if.end.66, !dbg !1823

if.end.66:                                        ; preds = %do.end.65, %do.body.50
  %72 = bitcast %struct._object** %_py_xdecref_tmp51 to i8*, !dbg !1825
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !1825
  br label %do.cond.67, !dbg !1826

do.cond.67:                                       ; preds = %if.end.66
  br label %do.end.68, !dbg !1827

do.end.68:                                        ; preds = %do.cond.67
  store %struct._object* null, %struct._object** %retval, !dbg !1829
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1829

cleanup:                                          ; preds = %do.end.68, %do.end, %if.then.2, %if.then
  %73 = bitcast i8** %errors to i8*, !dbg !1830
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !1830
  %74 = bitcast %struct._object** %codec to i8*, !dbg !1830
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !1830
  %75 = bitcast %struct.MultibyteIncrementalEncoderObject** %self to i8*, !dbg !1830
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !1830
  %76 = load %struct._object*, %struct._object** %retval, !dbg !1830
  ret %struct._object* %76, !dbg !1830
}

declare void @PyObject_GC_UnTrack(i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbiencoder_encode(%struct.MultibyteIncrementalEncoderObject* %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteIncrementalEncoderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwargs.addr = alloca %struct._object*, align 8
  %data = alloca %struct._object*, align 8
  %final = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.MultibyteIncrementalEncoderObject* %self, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteIncrementalEncoderObject** %self.addr, metadata !602, metadata !1451), !dbg !1831
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !603, metadata !1451), !dbg !1832
  store %struct._object* %kwargs, %struct._object** %kwargs.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %kwargs.addr, metadata !604, metadata !1451), !dbg !1833
  %0 = bitcast %struct._object** %data to i8*, !dbg !1834
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1834
  call void @llvm.dbg.declare(metadata %struct._object** %data, metadata !605, metadata !1451), !dbg !1835
  %1 = bitcast i32* %final to i8*, !dbg !1836
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !1836
  call void @llvm.dbg.declare(metadata i32* %final, metadata !606, metadata !1451), !dbg !1837
  store i32 0, i32* %final, align 4, !dbg !1837, !tbaa !1475
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1838, !tbaa !1464
  %3 = load %struct._object*, %struct._object** %kwargs.addr, align 8, !dbg !1840, !tbaa !1464
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %2, %struct._object* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @incrementalkwarglist, i32 0, i32 0), %struct._object** %data, i32* %final), !dbg !1841
  %tobool = icmp ne i32 %call, 0, !dbg !1841
  br i1 %tobool, label %if.end, label %if.then, !dbg !1842

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1843
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1843

if.end:                                           ; preds = %entry
  %4 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1844, !tbaa !1464
  %5 = bitcast %struct.MultibyteIncrementalEncoderObject* %4 to %struct.MultibyteStatefulEncoderContext*, !dbg !1845
  %6 = load %struct._object*, %struct._object** %data, align 8, !dbg !1846, !tbaa !1464
  %7 = load i32, i32* %final, align 4, !dbg !1847, !tbaa !1475
  %call1 = call %struct._object* @encoder_encode_stateful(%struct.MultibyteStatefulEncoderContext* %5, %struct._object* %6, i32 %7), !dbg !1848
  store %struct._object* %call1, %struct._object** %retval, !dbg !1849
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1849

cleanup:                                          ; preds = %if.end, %if.then
  %8 = bitcast i32* %final to i8*, !dbg !1850
  call void @llvm.lifetime.end(i64 4, i8* %8) #1, !dbg !1850
  %9 = bitcast %struct._object** %data to i8*, !dbg !1850
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !1850
  %10 = load %struct._object*, %struct._object** %retval, !dbg !1850
  ret %struct._object* %10, !dbg !1850
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbiencoder_reset(%struct.MultibyteIncrementalEncoderObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteIncrementalEncoderObject*, align 8
  %buffer = alloca [4 x i8], align 1
  %outbuf = alloca i8*, align 8
  %r = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.MultibyteIncrementalEncoderObject* %self, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteIncrementalEncoderObject** %self.addr, metadata !802, metadata !1451), !dbg !1851
  %0 = bitcast [4 x i8]* %buffer to i8*, !dbg !1852
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !1852
  call void @llvm.dbg.declare(metadata [4 x i8]* %buffer, metadata !803, metadata !1451), !dbg !1853
  %1 = bitcast i8** %outbuf to i8*, !dbg !1852
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1852
  call void @llvm.dbg.declare(metadata i8** %outbuf, metadata !805, metadata !1451), !dbg !1854
  %2 = bitcast i64* %r to i8*, !dbg !1855
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !1855
  call void @llvm.dbg.declare(metadata i64* %r, metadata !806, metadata !1451), !dbg !1856
  %3 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1857, !tbaa !1464
  %codec = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %3, i32 0, i32 1, !dbg !1859
  %4 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !1859, !tbaa !1685
  %encreset = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %4, i32 0, i32 5, !dbg !1860
  %5 = load i64 (%union.MultibyteCodec_State*, i8*, i8**, i64)*, i64 (%union.MultibyteCodec_State*, i8*, i8**, i64)** %encreset, align 8, !dbg !1860, !tbaa !1861
  %cmp = icmp ne i64 (%union.MultibyteCodec_State*, i8*, i8**, i64)* %5, null, !dbg !1862
  br i1 %cmp, label %if.then, label %if.end.6, !dbg !1863

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buffer, i32 0, i32 0, !dbg !1864
  store i8* %arraydecay, i8** %outbuf, align 8, !dbg !1866, !tbaa !1464
  %6 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1867, !tbaa !1464
  %codec1 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %6, i32 0, i32 1, !dbg !1868
  %7 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec1, align 8, !dbg !1868, !tbaa !1685
  %encreset2 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %7, i32 0, i32 5, !dbg !1869
  %8 = load i64 (%union.MultibyteCodec_State*, i8*, i8**, i64)*, i64 (%union.MultibyteCodec_State*, i8*, i8**, i64)** %encreset2, align 8, !dbg !1869, !tbaa !1861
  %9 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1870, !tbaa !1464
  %state = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %9, i32 0, i32 2, !dbg !1871
  %10 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1872, !tbaa !1464
  %codec3 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %10, i32 0, i32 1, !dbg !1873
  %11 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec3, align 8, !dbg !1873, !tbaa !1685
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %11, i32 0, i32 1, !dbg !1874
  %12 = load i8*, i8** %config, align 8, !dbg !1874, !tbaa !1717
  %call = call i64 %8(%union.MultibyteCodec_State* %state, i8* %12, i8** %outbuf, i64 4), !dbg !1867
  store i64 %call, i64* %r, align 8, !dbg !1875, !tbaa !1876
  %13 = load i64, i64* %r, align 8, !dbg !1877, !tbaa !1876
  %cmp4 = icmp ne i64 %13, 0, !dbg !1879
  br i1 %cmp4, label %if.then.5, label %if.end, !dbg !1880

if.then.5:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !1881
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1881

if.end:                                           ; preds = %if.then
  br label %if.end.6, !dbg !1882

if.end.6:                                         ; preds = %if.end, %entry
  br label %do.body, !dbg !1883

do.body:                                          ; preds = %if.end.6
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !1884
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !1884
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !807, metadata !1451), !dbg !1886
  %15 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1887, !tbaa !1464
  %pending = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %15, i32 0, i32 4, !dbg !1888
  %16 = load %struct._object*, %struct._object** %pending, align 8, !dbg !1888, !tbaa !1689
  store %struct._object* %16, %struct._object** %_py_tmp, align 8, !dbg !1886, !tbaa !1464
  %17 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !1889, !tbaa !1464
  %cmp7 = icmp ne %struct._object* %17, null, !dbg !1890
  br i1 %cmp7, label %if.then.8, label %if.end.14, !dbg !1891

if.then.8:                                        ; preds = %do.body
  %18 = load %struct.MultibyteIncrementalEncoderObject*, %struct.MultibyteIncrementalEncoderObject** %self.addr, align 8, !dbg !1892, !tbaa !1464
  %pending9 = getelementptr inbounds %struct.MultibyteIncrementalEncoderObject, %struct.MultibyteIncrementalEncoderObject* %18, i32 0, i32 4, !dbg !1894
  store %struct._object* null, %struct._object** %pending9, align 8, !dbg !1895, !tbaa !1689
  br label %do.body.10, !dbg !1896

do.body.10:                                       ; preds = %if.then.8
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1897
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !1897
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !809, metadata !1451), !dbg !1899
  %20 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !1900, !tbaa !1464
  store %struct._object* %20, %struct._object** %_py_decref_tmp, align 8, !dbg !1899, !tbaa !1464
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1901, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !1903
  %22 = load i64, i64* %ob_refcnt, align 8, !dbg !1904, !tbaa !1498
  %dec = add i64 %22, -1, !dbg !1904
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !1904, !tbaa !1498
  %cmp11 = icmp ne i64 %dec, 0, !dbg !1905
  br i1 %cmp11, label %if.then.12, label %if.else, !dbg !1906

if.then.12:                                       ; preds = %do.body.10
  br label %if.end.13, !dbg !1907

if.else:                                          ; preds = %do.body.10
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1909, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1, !dbg !1911
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1911, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 4, !dbg !1912
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1912, !tbaa !1565
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1913, !tbaa !1464
  call void %25(%struct._object* %26), !dbg !1914
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  %27 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1915
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !1915
  br label %do.cond, !dbg !1917

do.cond:                                          ; preds = %if.end.13
  br label %do.end, !dbg !1918

do.end:                                           ; preds = %do.cond
  br label %if.end.14, !dbg !1920

if.end.14:                                        ; preds = %do.end, %do.body
  %28 = bitcast %struct._object** %_py_tmp to i8*, !dbg !1922
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !1922
  br label %do.cond.15, !dbg !1925

do.cond.15:                                       ; preds = %if.end.14
  br label %do.end.16, !dbg !1926

do.end.16:                                        ; preds = %do.cond.15
  %29 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !1928, !tbaa !1498
  %inc = add i64 %29, 1, !dbg !1928
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !1928, !tbaa !1498
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !1929
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1929

cleanup:                                          ; preds = %do.end.16, %if.then.5
  %30 = bitcast i64* %r to i8*, !dbg !1930
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !1930
  %31 = bitcast i8** %outbuf to i8*, !dbg !1930
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !1930
  %32 = bitcast [4 x i8]* %buffer to i8*, !dbg !1930
  call void @llvm.lifetime.end(i64 4, i8* %32) #1, !dbg !1930
  %33 = load %struct._object*, %struct._object** %retval, !dbg !1930
  ret %struct._object* %33, !dbg !1930
}

declare i32 @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object*, %struct._object*, i8*, i8**, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @encoder_encode_stateful(%struct.MultibyteStatefulEncoderContext* %ctx, %struct._object* %unistr, i32 %final) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ctx.addr = alloca %struct.MultibyteStatefulEncoderContext*, align 8
  %unistr.addr = alloca %struct._object*, align 8
  %final.addr = alloca i32, align 4
  %ucvt = alloca %struct._object*, align 8
  %r = alloca %struct._object*, align 8
  %inbuf = alloca %struct._object*, align 8
  %inpos = alloca i64, align 8
  %datalen = alloca i64, align 8
  %origpending = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %inbuf_tmp = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp33 = alloca %struct._object*, align 8
  %_py_tmp63 = alloca %struct._object*, align 8
  %_py_decref_tmp69 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp89 = alloca %struct._object*, align 8
  %_py_decref_tmp116 = alloca %struct._object*, align 8
  %_py_xdecref_tmp128 = alloca %struct._object*, align 8
  %_py_decref_tmp132 = alloca %struct._object*, align 8
  %_py_xdecref_tmp147 = alloca %struct._object*, align 8
  %_py_decref_tmp151 = alloca %struct._object*, align 8
  %_py_xdecref_tmp166 = alloca %struct._object*, align 8
  %_py_decref_tmp170 = alloca %struct._object*, align 8
  %_py_xdecref_tmp185 = alloca %struct._object*, align 8
  %_py_decref_tmp189 = alloca %struct._object*, align 8
  %_py_xdecref_tmp204 = alloca %struct._object*, align 8
  %_py_decref_tmp208 = alloca %struct._object*, align 8
  store %struct.MultibyteStatefulEncoderContext* %ctx, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStatefulEncoderContext** %ctx.addr, metadata !611, metadata !1451), !dbg !1931
  store %struct._object* %unistr, %struct._object** %unistr.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %unistr.addr, metadata !612, metadata !1451), !dbg !1932
  store i32 %final, i32* %final.addr, align 4, !tbaa !1475
  call void @llvm.dbg.declare(metadata i32* %final.addr, metadata !613, metadata !1451), !dbg !1933
  %0 = bitcast %struct._object** %ucvt to i8*, !dbg !1934
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1934
  call void @llvm.dbg.declare(metadata %struct._object** %ucvt, metadata !614, metadata !1451), !dbg !1935
  %1 = bitcast %struct._object** %r to i8*, !dbg !1934
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1934
  call void @llvm.dbg.declare(metadata %struct._object** %r, metadata !615, metadata !1451), !dbg !1936
  store %struct._object* null, %struct._object** %r, align 8, !dbg !1936, !tbaa !1464
  %2 = bitcast %struct._object** %inbuf to i8*, !dbg !1937
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !1937
  call void @llvm.dbg.declare(metadata %struct._object** %inbuf, metadata !616, metadata !1451), !dbg !1938
  store %struct._object* null, %struct._object** %inbuf, align 8, !dbg !1938, !tbaa !1464
  %3 = bitcast i64* %inpos to i8*, !dbg !1939
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !1939
  call void @llvm.dbg.declare(metadata i64* %inpos, metadata !617, metadata !1451), !dbg !1940
  %4 = bitcast i64* %datalen to i8*, !dbg !1939
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !1939
  call void @llvm.dbg.declare(metadata i64* %datalen, metadata !618, metadata !1451), !dbg !1941
  %5 = bitcast %struct._object** %origpending to i8*, !dbg !1942
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !1942
  call void @llvm.dbg.declare(metadata %struct._object** %origpending, metadata !619, metadata !1451), !dbg !1943
  store %struct._object* null, %struct._object** %origpending, align 8, !dbg !1943, !tbaa !1464
  %6 = load %struct._object*, %struct._object** %unistr.addr, align 8, !dbg !1944, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !1945
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1945, !tbaa !1563
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 19, !dbg !1946
  %8 = load i64, i64* %tp_flags, align 8, !dbg !1946, !tbaa !1947
  %and = and i64 %8, 268435456, !dbg !1948
  %cmp = icmp ne i64 %and, 0, !dbg !1949
  br i1 %cmp, label %if.then, label %if.else, !dbg !1950

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %ucvt, align 8, !dbg !1951, !tbaa !1464
  br label %if.end.15, !dbg !1952

if.else:                                          ; preds = %entry
  %9 = load %struct._object*, %struct._object** %unistr.addr, align 8, !dbg !1953, !tbaa !1464
  %call = call %struct._object* @PyObject_Str(%struct._object* %9), !dbg !1954
  store %struct._object* %call, %struct._object** %ucvt, align 8, !dbg !1955, !tbaa !1464
  store %struct._object* %call, %struct._object** %unistr.addr, align 8, !dbg !1956, !tbaa !1464
  %10 = load %struct._object*, %struct._object** %unistr.addr, align 8, !dbg !1957, !tbaa !1464
  %cmp1 = icmp eq %struct._object* %10, null, !dbg !1958
  br i1 %cmp1, label %if.then.2, label %if.else.3, !dbg !1959

if.then.2:                                        ; preds = %if.else
  store %struct._object* null, %struct._object** %retval, !dbg !1960
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.222, !dbg !1960

if.else.3:                                        ; preds = %if.else
  %11 = load %struct._object*, %struct._object** %unistr.addr, align 8, !dbg !1961, !tbaa !1464
  %ob_type4 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !1962
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type4, align 8, !dbg !1962, !tbaa !1563
  %tp_flags5 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 19, !dbg !1963
  %13 = load i64, i64* %tp_flags5, align 8, !dbg !1963, !tbaa !1947
  %and6 = and i64 %13, 268435456, !dbg !1964
  %cmp7 = icmp ne i64 %and6, 0, !dbg !1965
  br i1 %cmp7, label %if.end.13, label %if.then.8, !dbg !1966

if.then.8:                                        ; preds = %if.else.3
  %14 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !1967, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i32 0, i32 0)), !dbg !1968
  br label %do.body, !dbg !1969

do.body:                                          ; preds = %if.then.8
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1970
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !1970
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !620, metadata !1451), !dbg !1972
  %16 = load %struct._object*, %struct._object** %ucvt, align 8, !dbg !1973, !tbaa !1464
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !1972, !tbaa !1464
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1974, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !1976
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !1977, !tbaa !1498
  %dec = add i64 %18, -1, !dbg !1977
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !1977, !tbaa !1498
  %cmp9 = icmp ne i64 %dec, 0, !dbg !1978
  br i1 %cmp9, label %if.then.10, label %if.else.11, !dbg !1979

if.then.10:                                       ; preds = %do.body
  br label %if.end, !dbg !1980

if.else.11:                                       ; preds = %do.body
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1982, !tbaa !1464
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !1984
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8, !dbg !1984, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !1985
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1985, !tbaa !1565
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1986, !tbaa !1464
  call void %21(%struct._object* %22), !dbg !1987
  br label %if.end

if.end:                                           ; preds = %if.else.11, %if.then.10
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1988
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !1988
  br label %do.cond, !dbg !1990

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !1991

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !1993
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.222, !dbg !1993

if.end.13:                                        ; preds = %if.else.3
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.then
  %24 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !1994, !tbaa !1464
  %pending = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %24, i32 0, i32 4, !dbg !1995
  %25 = load %struct._object*, %struct._object** %pending, align 8, !dbg !1995, !tbaa !1689
  %tobool = icmp ne %struct._object* %25, null, !dbg !1994
  br i1 %tobool, label %if.then.16, label %if.else.47, !dbg !1996

if.then.16:                                       ; preds = %if.end.15
  %26 = bitcast %struct._object** %inbuf_tmp to i8*, !dbg !1997
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !1997
  call void @llvm.dbg.declare(metadata %struct._object** %inbuf_tmp, metadata !627, metadata !1451), !dbg !1998
  %27 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !1999, !tbaa !1464
  %pending17 = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %27, i32 0, i32 4, !dbg !2000
  %28 = load %struct._object*, %struct._object** %pending17, align 8, !dbg !2000, !tbaa !1689
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !2001
  %29 = load i64, i64* %ob_refcnt18, align 8, !dbg !2002, !tbaa !1498
  %inc = add i64 %29, 1, !dbg !2002
  store i64 %inc, i64* %ob_refcnt18, align 8, !dbg !2002, !tbaa !1498
  %30 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2003, !tbaa !1464
  %pending19 = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %30, i32 0, i32 4, !dbg !2004
  %31 = load %struct._object*, %struct._object** %pending19, align 8, !dbg !2004, !tbaa !1689
  store %struct._object* %31, %struct._object** %origpending, align 8, !dbg !2005, !tbaa !1464
  %32 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2006, !tbaa !1464
  %pending20 = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %32, i32 0, i32 4, !dbg !2007
  %33 = load %struct._object*, %struct._object** %pending20, align 8, !dbg !2007, !tbaa !1689
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0, !dbg !2008
  %34 = load i64, i64* %ob_refcnt21, align 8, !dbg !2009, !tbaa !1498
  %inc22 = add i64 %34, 1, !dbg !2009
  store i64 %inc22, i64* %ob_refcnt21, align 8, !dbg !2009, !tbaa !1498
  %35 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2010, !tbaa !1464
  %pending23 = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %35, i32 0, i32 4, !dbg !2011
  %36 = load %struct._object*, %struct._object** %pending23, align 8, !dbg !2011, !tbaa !1689
  store %struct._object* %36, %struct._object** %inbuf_tmp, align 8, !dbg !2012, !tbaa !1464
  %37 = load %struct._object*, %struct._object** %unistr.addr, align 8, !dbg !2013, !tbaa !1464
  call void @PyUnicode_Append(%struct._object** %inbuf_tmp, %struct._object* %37), !dbg !2014
  %38 = load %struct._object*, %struct._object** %inbuf_tmp, align 8, !dbg !2015, !tbaa !1464
  %cmp24 = icmp eq %struct._object* %38, null, !dbg !2017
  br i1 %cmp24, label %if.then.25, label %if.end.26, !dbg !2018

if.then.25:                                       ; preds = %if.then.16
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2019

if.end.26:                                        ; preds = %if.then.16
  br label %do.body.27, !dbg !2020

do.body.27:                                       ; preds = %if.end.26
  %39 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2021
  call void @llvm.lifetime.start(i64 8, i8* %39) #1, !dbg !2021
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !630, metadata !1451), !dbg !2023
  %40 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2024, !tbaa !1464
  %pending28 = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %40, i32 0, i32 4, !dbg !2025
  %41 = load %struct._object*, %struct._object** %pending28, align 8, !dbg !2025, !tbaa !1689
  store %struct._object* %41, %struct._object** %_py_tmp, align 8, !dbg !2023, !tbaa !1464
  %42 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2026, !tbaa !1464
  %cmp29 = icmp ne %struct._object* %42, null, !dbg !2027
  br i1 %cmp29, label %if.then.30, label %if.end.44, !dbg !2028

if.then.30:                                       ; preds = %do.body.27
  %43 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2029, !tbaa !1464
  %pending31 = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %43, i32 0, i32 4, !dbg !2031
  store %struct._object* null, %struct._object** %pending31, align 8, !dbg !2032, !tbaa !1689
  br label %do.body.32, !dbg !2033

do.body.32:                                       ; preds = %if.then.30
  %44 = bitcast %struct._object** %_py_decref_tmp33 to i8*, !dbg !2034
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !2034
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp33, metadata !632, metadata !1451), !dbg !2036
  %45 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2037, !tbaa !1464
  store %struct._object* %45, %struct._object** %_py_decref_tmp33, align 8, !dbg !2036, !tbaa !1464
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !2038, !tbaa !1464
  %ob_refcnt34 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !2040
  %47 = load i64, i64* %ob_refcnt34, align 8, !dbg !2041, !tbaa !1498
  %dec35 = add i64 %47, -1, !dbg !2041
  store i64 %dec35, i64* %ob_refcnt34, align 8, !dbg !2041, !tbaa !1498
  %cmp36 = icmp ne i64 %dec35, 0, !dbg !2042
  br i1 %cmp36, label %if.then.37, label %if.else.38, !dbg !2043

if.then.37:                                       ; preds = %do.body.32
  br label %if.end.41, !dbg !2044

if.else.38:                                       ; preds = %do.body.32
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !2046, !tbaa !1464
  %ob_type39 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !2048
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type39, align 8, !dbg !2048, !tbaa !1563
  %tp_dealloc40 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !2049
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc40, align 8, !dbg !2049, !tbaa !1565
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !2050, !tbaa !1464
  call void %50(%struct._object* %51), !dbg !2051
  br label %if.end.41

if.end.41:                                        ; preds = %if.else.38, %if.then.37
  %52 = bitcast %struct._object** %_py_decref_tmp33 to i8*, !dbg !2052
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !2052
  br label %do.cond.42, !dbg !2054

do.cond.42:                                       ; preds = %if.end.41
  br label %do.end.43, !dbg !2055

do.end.43:                                        ; preds = %do.cond.42
  br label %if.end.44, !dbg !2057

if.end.44:                                        ; preds = %do.end.43, %do.body.27
  %53 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2059
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !2059
  br label %do.cond.45, !dbg !2062

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !2063

do.end.46:                                        ; preds = %do.cond.45
  %54 = load %struct._object*, %struct._object** %inbuf_tmp, align 8, !dbg !2065, !tbaa !1464
  store %struct._object* %54, %struct._object** %inbuf, align 8, !dbg !2066, !tbaa !1464
  store i32 0, i32* %cleanup.dest.slot, !dbg !2067
  br label %cleanup, !dbg !2067

cleanup:                                          ; preds = %if.then.25, %do.end.46
  %55 = bitcast %struct._object** %inbuf_tmp to i8*, !dbg !2068
  call void @llvm.lifetime.end(i64 8, i8* %55) #1, !dbg !2068
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.222 [
    i32 0, label %cleanup.cont
    i32 4, label %errorexit
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.50, !dbg !2070

if.else.47:                                       ; preds = %if.end.15
  store %struct._object* null, %struct._object** %origpending, align 8, !dbg !2071, !tbaa !1464
  %56 = load %struct._object*, %struct._object** %unistr.addr, align 8, !dbg !2073, !tbaa !1464
  %ob_refcnt48 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0, !dbg !2074
  %57 = load i64, i64* %ob_refcnt48, align 8, !dbg !2075, !tbaa !1498
  %inc49 = add i64 %57, 1, !dbg !2075
  store i64 %inc49, i64* %ob_refcnt48, align 8, !dbg !2075, !tbaa !1498
  %58 = load %struct._object*, %struct._object** %unistr.addr, align 8, !dbg !2076, !tbaa !1464
  store %struct._object* %58, %struct._object** %inbuf, align 8, !dbg !2077, !tbaa !1464
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %cleanup.cont
  %59 = load %struct._object*, %struct._object** %inbuf, align 8, !dbg !2078, !tbaa !1464
  %60 = bitcast %struct._object* %59 to %struct.PyASCIIObject*, !dbg !2080
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %60, i32 0, i32 3, !dbg !2081
  %61 = bitcast %struct.anon* %state to i32*, !dbg !2082
  %bf.load = load i32, i32* %61, align 4, !dbg !2082
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !2082
  %bf.clear = and i32 %bf.lshr, 1, !dbg !2082
  %tobool51 = icmp ne i32 %bf.clear, 0, !dbg !2083
  br i1 %tobool51, label %cond.true, label %cond.false, !dbg !2083

cond.true:                                        ; preds = %if.end.50
  br label %cond.end, !dbg !2084

cond.false:                                       ; preds = %if.end.50
  %62 = load %struct._object*, %struct._object** %inbuf, align 8, !dbg !2086, !tbaa !1464
  %call52 = call i32 @_PyUnicode_Ready(%struct._object* %62), !dbg !2088
  br label %cond.end, !dbg !2083

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call52, %cond.false ], !dbg !2083
  %cmp53 = icmp slt i32 %cond, 0, !dbg !2089
  br i1 %cmp53, label %if.then.54, label %if.end.55, !dbg !2092

if.then.54:                                       ; preds = %cond.end
  br label %errorexit, !dbg !2093

if.end.55:                                        ; preds = %cond.end
  store i64 0, i64* %inpos, align 8, !dbg !2094, !tbaa !1876
  %63 = load %struct._object*, %struct._object** %inbuf, align 8, !dbg !2095, !tbaa !1464
  %64 = bitcast %struct._object* %63 to %struct.PyASCIIObject*, !dbg !2096
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %64, i32 0, i32 1, !dbg !2097
  %65 = load i64, i64* %length, align 8, !dbg !2097, !tbaa !2098
  store i64 %65, i64* %datalen, align 8, !dbg !2101, !tbaa !1876
  %66 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2102, !tbaa !1464
  %codec = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %66, i32 0, i32 1, !dbg !2103
  %67 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !2103, !tbaa !1685
  %68 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2104, !tbaa !1464
  %state56 = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %68, i32 0, i32 2, !dbg !2105
  %69 = load %struct._object*, %struct._object** %inbuf, align 8, !dbg !2106, !tbaa !1464
  %70 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2107, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %70, i32 0, i32 3, !dbg !2108
  %71 = load %struct._object*, %struct._object** %errors, align 8, !dbg !2108, !tbaa !1530
  %72 = load i32, i32* %final.addr, align 4, !dbg !2109, !tbaa !1475
  %tobool57 = icmp ne i32 %72, 0, !dbg !2109
  %cond58 = select i1 %tobool57, i32 3, i32 0, !dbg !2109
  %call59 = call %struct._object* @multibytecodec_encode(%struct.MultibyteCodec* %67, %union.MultibyteCodec_State* %state56, %struct._object* %69, i64* %inpos, %struct._object* %71, i32 %cond58), !dbg !2110
  store %struct._object* %call59, %struct._object** %r, align 8, !dbg !2111, !tbaa !1464
  %73 = load %struct._object*, %struct._object** %r, align 8, !dbg !2112, !tbaa !1464
  %cmp60 = icmp eq %struct._object* %73, null, !dbg !2113
  br i1 %cmp60, label %if.then.61, label %if.end.84, !dbg !2114

if.then.61:                                       ; preds = %if.end.55
  br label %do.body.62, !dbg !2115

do.body.62:                                       ; preds = %if.then.61
  %74 = bitcast %struct._object** %_py_tmp63 to i8*, !dbg !2116
  call void @llvm.lifetime.start(i64 8, i8* %74) #1, !dbg !2116
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp63, metadata !636, metadata !1451), !dbg !2118
  %75 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2119, !tbaa !1464
  %pending64 = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %75, i32 0, i32 4, !dbg !2120
  %76 = load %struct._object*, %struct._object** %pending64, align 8, !dbg !2120, !tbaa !1689
  store %struct._object* %76, %struct._object** %_py_tmp63, align 8, !dbg !2118, !tbaa !1464
  %77 = load %struct._object*, %struct._object** %_py_tmp63, align 8, !dbg !2121, !tbaa !1464
  %cmp65 = icmp ne %struct._object* %77, null, !dbg !2122
  br i1 %cmp65, label %if.then.66, label %if.end.80, !dbg !2123

if.then.66:                                       ; preds = %do.body.62
  %78 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2124, !tbaa !1464
  %pending67 = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %78, i32 0, i32 4, !dbg !2126
  store %struct._object* null, %struct._object** %pending67, align 8, !dbg !2127, !tbaa !1689
  br label %do.body.68, !dbg !2128

do.body.68:                                       ; preds = %if.then.66
  %79 = bitcast %struct._object** %_py_decref_tmp69 to i8*, !dbg !2129
  call void @llvm.lifetime.start(i64 8, i8* %79) #1, !dbg !2129
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp69, metadata !640, metadata !1451), !dbg !2131
  %80 = load %struct._object*, %struct._object** %_py_tmp63, align 8, !dbg !2132, !tbaa !1464
  store %struct._object* %80, %struct._object** %_py_decref_tmp69, align 8, !dbg !2131, !tbaa !1464
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !2133, !tbaa !1464
  %ob_refcnt70 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 0, !dbg !2135
  %82 = load i64, i64* %ob_refcnt70, align 8, !dbg !2136, !tbaa !1498
  %dec71 = add i64 %82, -1, !dbg !2136
  store i64 %dec71, i64* %ob_refcnt70, align 8, !dbg !2136, !tbaa !1498
  %cmp72 = icmp ne i64 %dec71, 0, !dbg !2137
  br i1 %cmp72, label %if.then.73, label %if.else.74, !dbg !2138

if.then.73:                                       ; preds = %do.body.68
  br label %if.end.77, !dbg !2139

if.else.74:                                       ; preds = %do.body.68
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !2141, !tbaa !1464
  %ob_type75 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 1, !dbg !2143
  %84 = load %struct._typeobject*, %struct._typeobject** %ob_type75, align 8, !dbg !2143, !tbaa !1563
  %tp_dealloc76 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %84, i32 0, i32 4, !dbg !2144
  %85 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc76, align 8, !dbg !2144, !tbaa !1565
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !2145, !tbaa !1464
  call void %85(%struct._object* %86), !dbg !2146
  br label %if.end.77

if.end.77:                                        ; preds = %if.else.74, %if.then.73
  %87 = bitcast %struct._object** %_py_decref_tmp69 to i8*, !dbg !2147
  call void @llvm.lifetime.end(i64 8, i8* %87) #1, !dbg !2147
  br label %do.cond.78, !dbg !2149

do.cond.78:                                       ; preds = %if.end.77
  br label %do.end.79, !dbg !2150

do.end.79:                                        ; preds = %do.cond.78
  br label %if.end.80, !dbg !2152

if.end.80:                                        ; preds = %do.end.79, %do.body.62
  %88 = bitcast %struct._object** %_py_tmp63 to i8*, !dbg !2154
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !2154
  br label %do.cond.81, !dbg !2157

do.cond.81:                                       ; preds = %if.end.80
  br label %do.end.82, !dbg !2158

do.end.82:                                        ; preds = %do.cond.81
  %89 = load %struct._object*, %struct._object** %origpending, align 8, !dbg !2160, !tbaa !1464
  %90 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2161, !tbaa !1464
  %pending83 = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %90, i32 0, i32 4, !dbg !2162
  store %struct._object* %89, %struct._object** %pending83, align 8, !dbg !2163, !tbaa !1689
  store %struct._object* null, %struct._object** %origpending, align 8, !dbg !2164, !tbaa !1464
  br label %errorexit, !dbg !2165

if.end.84:                                        ; preds = %if.end.55
  br label %do.body.85, !dbg !2166

do.body.85:                                       ; preds = %if.end.84
  %91 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2167
  call void @llvm.lifetime.start(i64 8, i8* %91) #1, !dbg !2167
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !644, metadata !1451), !dbg !2169
  %92 = load %struct._object*, %struct._object** %origpending, align 8, !dbg !2170, !tbaa !1464
  store %struct._object* %92, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2169, !tbaa !1464
  %93 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2171, !tbaa !1464
  %cmp86 = icmp ne %struct._object* %93, null, !dbg !2172
  br i1 %cmp86, label %if.then.87, label %if.end.100, !dbg !2173

if.then.87:                                       ; preds = %do.body.85
  br label %do.body.88, !dbg !2174

do.body.88:                                       ; preds = %if.then.87
  %94 = bitcast %struct._object** %_py_decref_tmp89 to i8*, !dbg !2176
  call void @llvm.lifetime.start(i64 8, i8* %94) #1, !dbg !2176
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp89, metadata !646, metadata !1451), !dbg !2178
  %95 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2179, !tbaa !1464
  store %struct._object* %95, %struct._object** %_py_decref_tmp89, align 8, !dbg !2178, !tbaa !1464
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8, !dbg !2180, !tbaa !1464
  %ob_refcnt90 = getelementptr inbounds %struct._object, %struct._object* %96, i32 0, i32 0, !dbg !2182
  %97 = load i64, i64* %ob_refcnt90, align 8, !dbg !2183, !tbaa !1498
  %dec91 = add i64 %97, -1, !dbg !2183
  store i64 %dec91, i64* %ob_refcnt90, align 8, !dbg !2183, !tbaa !1498
  %cmp92 = icmp ne i64 %dec91, 0, !dbg !2184
  br i1 %cmp92, label %if.then.93, label %if.else.94, !dbg !2185

if.then.93:                                       ; preds = %do.body.88
  br label %if.end.97, !dbg !2186

if.else.94:                                       ; preds = %do.body.88
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8, !dbg !2188, !tbaa !1464
  %ob_type95 = getelementptr inbounds %struct._object, %struct._object* %98, i32 0, i32 1, !dbg !2190
  %99 = load %struct._typeobject*, %struct._typeobject** %ob_type95, align 8, !dbg !2190, !tbaa !1563
  %tp_dealloc96 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %99, i32 0, i32 4, !dbg !2191
  %100 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc96, align 8, !dbg !2191, !tbaa !1565
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8, !dbg !2192, !tbaa !1464
  call void %100(%struct._object* %101), !dbg !2193
  br label %if.end.97

if.end.97:                                        ; preds = %if.else.94, %if.then.93
  %102 = bitcast %struct._object** %_py_decref_tmp89 to i8*, !dbg !2194
  call void @llvm.lifetime.end(i64 8, i8* %102) #1, !dbg !2194
  br label %do.cond.98, !dbg !2196

do.cond.98:                                       ; preds = %if.end.97
  br label %do.end.99, !dbg !2197

do.end.99:                                        ; preds = %do.cond.98
  br label %if.end.100, !dbg !2199

if.end.100:                                       ; preds = %do.end.99, %do.body.85
  %103 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2201
  call void @llvm.lifetime.end(i64 8, i8* %103) #1, !dbg !2201
  br label %do.cond.101, !dbg !2204

do.cond.101:                                      ; preds = %if.end.100
  br label %do.end.102, !dbg !2205

do.end.102:                                       ; preds = %do.cond.101
  %104 = load i64, i64* %inpos, align 8, !dbg !2207, !tbaa !1876
  %105 = load i64, i64* %datalen, align 8, !dbg !2209, !tbaa !1876
  %cmp103 = icmp slt i64 %104, %105, !dbg !2210
  br i1 %cmp103, label %if.then.104, label %if.end.114, !dbg !2211

if.then.104:                                      ; preds = %do.end.102
  %106 = load i64, i64* %datalen, align 8, !dbg !2212, !tbaa !1876
  %107 = load i64, i64* %inpos, align 8, !dbg !2215, !tbaa !1876
  %sub = sub i64 %106, %107, !dbg !2216
  %cmp105 = icmp sgt i64 %sub, 2, !dbg !2217
  br i1 %cmp105, label %if.then.106, label %if.end.107, !dbg !2218

if.then.106:                                      ; preds = %if.then.104
  %108 = load %struct._object*, %struct._object** @PyExc_UnicodeError, align 8, !dbg !2219, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %108, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i32 0, i32 0)), !dbg !2221
  br label %errorexit, !dbg !2222

if.end.107:                                       ; preds = %if.then.104
  %109 = load %struct._object*, %struct._object** %inbuf, align 8, !dbg !2223, !tbaa !1464
  %110 = load i64, i64* %inpos, align 8, !dbg !2224, !tbaa !1876
  %111 = load i64, i64* %datalen, align 8, !dbg !2225, !tbaa !1876
  %call108 = call %struct._object* @PyUnicode_Substring(%struct._object* %109, i64 %110, i64 %111), !dbg !2226
  %112 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2227, !tbaa !1464
  %pending109 = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %112, i32 0, i32 4, !dbg !2228
  store %struct._object* %call108, %struct._object** %pending109, align 8, !dbg !2229, !tbaa !1689
  %113 = load %struct.MultibyteStatefulEncoderContext*, %struct.MultibyteStatefulEncoderContext** %ctx.addr, align 8, !dbg !2230, !tbaa !1464
  %pending110 = getelementptr inbounds %struct.MultibyteStatefulEncoderContext, %struct.MultibyteStatefulEncoderContext* %113, i32 0, i32 4, !dbg !2232
  %114 = load %struct._object*, %struct._object** %pending110, align 8, !dbg !2232, !tbaa !1689
  %cmp111 = icmp eq %struct._object* %114, null, !dbg !2233
  br i1 %cmp111, label %if.then.112, label %if.end.113, !dbg !2234

if.then.112:                                      ; preds = %if.end.107
  br label %errorexit, !dbg !2235

if.end.113:                                       ; preds = %if.end.107
  br label %if.end.114, !dbg !2237

if.end.114:                                       ; preds = %if.end.113, %do.end.102
  br label %do.body.115, !dbg !2238

do.body.115:                                      ; preds = %if.end.114
  %115 = bitcast %struct._object** %_py_decref_tmp116 to i8*, !dbg !2239
  call void @llvm.lifetime.start(i64 8, i8* %115) #1, !dbg !2239
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp116, metadata !649, metadata !1451), !dbg !2241
  %116 = load %struct._object*, %struct._object** %inbuf, align 8, !dbg !2242, !tbaa !1464
  store %struct._object* %116, %struct._object** %_py_decref_tmp116, align 8, !dbg !2241, !tbaa !1464
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !2243, !tbaa !1464
  %ob_refcnt117 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 0, !dbg !2245
  %118 = load i64, i64* %ob_refcnt117, align 8, !dbg !2246, !tbaa !1498
  %dec118 = add i64 %118, -1, !dbg !2246
  store i64 %dec118, i64* %ob_refcnt117, align 8, !dbg !2246, !tbaa !1498
  %cmp119 = icmp ne i64 %dec118, 0, !dbg !2247
  br i1 %cmp119, label %if.then.120, label %if.else.121, !dbg !2248

if.then.120:                                      ; preds = %do.body.115
  br label %if.end.124, !dbg !2249

if.else.121:                                      ; preds = %do.body.115
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !2251, !tbaa !1464
  %ob_type122 = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 1, !dbg !2253
  %120 = load %struct._typeobject*, %struct._typeobject** %ob_type122, align 8, !dbg !2253, !tbaa !1563
  %tp_dealloc123 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %120, i32 0, i32 4, !dbg !2254
  %121 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc123, align 8, !dbg !2254, !tbaa !1565
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !2255, !tbaa !1464
  call void %121(%struct._object* %122), !dbg !2256
  br label %if.end.124

if.end.124:                                       ; preds = %if.else.121, %if.then.120
  %123 = bitcast %struct._object** %_py_decref_tmp116 to i8*, !dbg !2257
  call void @llvm.lifetime.end(i64 8, i8* %123) #1, !dbg !2257
  br label %do.cond.125, !dbg !2259

do.cond.125:                                      ; preds = %if.end.124
  br label %do.end.126, !dbg !2260

do.end.126:                                       ; preds = %do.cond.125
  br label %do.body.127, !dbg !2262

do.body.127:                                      ; preds = %do.end.126
  %124 = bitcast %struct._object** %_py_xdecref_tmp128 to i8*, !dbg !2263
  call void @llvm.lifetime.start(i64 8, i8* %124) #1, !dbg !2263
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp128, metadata !651, metadata !1451), !dbg !2265
  %125 = load %struct._object*, %struct._object** %ucvt, align 8, !dbg !2266, !tbaa !1464
  store %struct._object* %125, %struct._object** %_py_xdecref_tmp128, align 8, !dbg !2265, !tbaa !1464
  %126 = load %struct._object*, %struct._object** %_py_xdecref_tmp128, align 8, !dbg !2267, !tbaa !1464
  %cmp129 = icmp ne %struct._object* %126, null, !dbg !2268
  br i1 %cmp129, label %if.then.130, label %if.end.143, !dbg !2269

if.then.130:                                      ; preds = %do.body.127
  br label %do.body.131, !dbg !2270

do.body.131:                                      ; preds = %if.then.130
  %127 = bitcast %struct._object** %_py_decref_tmp132 to i8*, !dbg !2272
  call void @llvm.lifetime.start(i64 8, i8* %127) #1, !dbg !2272
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp132, metadata !653, metadata !1451), !dbg !2274
  %128 = load %struct._object*, %struct._object** %_py_xdecref_tmp128, align 8, !dbg !2275, !tbaa !1464
  store %struct._object* %128, %struct._object** %_py_decref_tmp132, align 8, !dbg !2274, !tbaa !1464
  %129 = load %struct._object*, %struct._object** %_py_decref_tmp132, align 8, !dbg !2276, !tbaa !1464
  %ob_refcnt133 = getelementptr inbounds %struct._object, %struct._object* %129, i32 0, i32 0, !dbg !2278
  %130 = load i64, i64* %ob_refcnt133, align 8, !dbg !2279, !tbaa !1498
  %dec134 = add i64 %130, -1, !dbg !2279
  store i64 %dec134, i64* %ob_refcnt133, align 8, !dbg !2279, !tbaa !1498
  %cmp135 = icmp ne i64 %dec134, 0, !dbg !2280
  br i1 %cmp135, label %if.then.136, label %if.else.137, !dbg !2281

if.then.136:                                      ; preds = %do.body.131
  br label %if.end.140, !dbg !2282

if.else.137:                                      ; preds = %do.body.131
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp132, align 8, !dbg !2284, !tbaa !1464
  %ob_type138 = getelementptr inbounds %struct._object, %struct._object* %131, i32 0, i32 1, !dbg !2286
  %132 = load %struct._typeobject*, %struct._typeobject** %ob_type138, align 8, !dbg !2286, !tbaa !1563
  %tp_dealloc139 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %132, i32 0, i32 4, !dbg !2287
  %133 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc139, align 8, !dbg !2287, !tbaa !1565
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp132, align 8, !dbg !2288, !tbaa !1464
  call void %133(%struct._object* %134), !dbg !2289
  br label %if.end.140

if.end.140:                                       ; preds = %if.else.137, %if.then.136
  %135 = bitcast %struct._object** %_py_decref_tmp132 to i8*, !dbg !2290
  call void @llvm.lifetime.end(i64 8, i8* %135) #1, !dbg !2290
  br label %do.cond.141, !dbg !2292

do.cond.141:                                      ; preds = %if.end.140
  br label %do.end.142, !dbg !2293

do.end.142:                                       ; preds = %do.cond.141
  br label %if.end.143, !dbg !2295

if.end.143:                                       ; preds = %do.end.142, %do.body.127
  %136 = bitcast %struct._object** %_py_xdecref_tmp128 to i8*, !dbg !2297
  call void @llvm.lifetime.end(i64 8, i8* %136) #1, !dbg !2297
  br label %do.cond.144, !dbg !2298

do.cond.144:                                      ; preds = %if.end.143
  br label %do.end.145, !dbg !2299

do.end.145:                                       ; preds = %do.cond.144
  %137 = load %struct._object*, %struct._object** %r, align 8, !dbg !2301, !tbaa !1464
  store %struct._object* %137, %struct._object** %retval, !dbg !2302
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.222, !dbg !2302

errorexit:                                        ; preds = %cleanup, %if.then.112, %if.then.106, %do.end.82, %if.then.54
  br label %do.body.146, !dbg !2303

do.body.146:                                      ; preds = %errorexit
  %138 = bitcast %struct._object** %_py_xdecref_tmp147 to i8*, !dbg !2304
  call void @llvm.lifetime.start(i64 8, i8* %138) #1, !dbg !2304
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp147, metadata !656, metadata !1451), !dbg !2306
  %139 = load %struct._object*, %struct._object** %r, align 8, !dbg !2307, !tbaa !1464
  store %struct._object* %139, %struct._object** %_py_xdecref_tmp147, align 8, !dbg !2306, !tbaa !1464
  %140 = load %struct._object*, %struct._object** %_py_xdecref_tmp147, align 8, !dbg !2308, !tbaa !1464
  %cmp148 = icmp ne %struct._object* %140, null, !dbg !2309
  br i1 %cmp148, label %if.then.149, label %if.end.162, !dbg !2310

if.then.149:                                      ; preds = %do.body.146
  br label %do.body.150, !dbg !2311

do.body.150:                                      ; preds = %if.then.149
  %141 = bitcast %struct._object** %_py_decref_tmp151 to i8*, !dbg !2313
  call void @llvm.lifetime.start(i64 8, i8* %141) #1, !dbg !2313
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp151, metadata !658, metadata !1451), !dbg !2315
  %142 = load %struct._object*, %struct._object** %_py_xdecref_tmp147, align 8, !dbg !2316, !tbaa !1464
  store %struct._object* %142, %struct._object** %_py_decref_tmp151, align 8, !dbg !2315, !tbaa !1464
  %143 = load %struct._object*, %struct._object** %_py_decref_tmp151, align 8, !dbg !2317, !tbaa !1464
  %ob_refcnt152 = getelementptr inbounds %struct._object, %struct._object* %143, i32 0, i32 0, !dbg !2319
  %144 = load i64, i64* %ob_refcnt152, align 8, !dbg !2320, !tbaa !1498
  %dec153 = add i64 %144, -1, !dbg !2320
  store i64 %dec153, i64* %ob_refcnt152, align 8, !dbg !2320, !tbaa !1498
  %cmp154 = icmp ne i64 %dec153, 0, !dbg !2321
  br i1 %cmp154, label %if.then.155, label %if.else.156, !dbg !2322

if.then.155:                                      ; preds = %do.body.150
  br label %if.end.159, !dbg !2323

if.else.156:                                      ; preds = %do.body.150
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp151, align 8, !dbg !2325, !tbaa !1464
  %ob_type157 = getelementptr inbounds %struct._object, %struct._object* %145, i32 0, i32 1, !dbg !2327
  %146 = load %struct._typeobject*, %struct._typeobject** %ob_type157, align 8, !dbg !2327, !tbaa !1563
  %tp_dealloc158 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %146, i32 0, i32 4, !dbg !2328
  %147 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc158, align 8, !dbg !2328, !tbaa !1565
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp151, align 8, !dbg !2329, !tbaa !1464
  call void %147(%struct._object* %148), !dbg !2330
  br label %if.end.159

if.end.159:                                       ; preds = %if.else.156, %if.then.155
  %149 = bitcast %struct._object** %_py_decref_tmp151 to i8*, !dbg !2331
  call void @llvm.lifetime.end(i64 8, i8* %149) #1, !dbg !2331
  br label %do.cond.160, !dbg !2333

do.cond.160:                                      ; preds = %if.end.159
  br label %do.end.161, !dbg !2334

do.end.161:                                       ; preds = %do.cond.160
  br label %if.end.162, !dbg !2336

if.end.162:                                       ; preds = %do.end.161, %do.body.146
  %150 = bitcast %struct._object** %_py_xdecref_tmp147 to i8*, !dbg !2338
  call void @llvm.lifetime.end(i64 8, i8* %150) #1, !dbg !2338
  br label %do.cond.163, !dbg !2339

do.cond.163:                                      ; preds = %if.end.162
  br label %do.end.164, !dbg !2340

do.end.164:                                       ; preds = %do.cond.163
  br label %do.body.165, !dbg !2342

do.body.165:                                      ; preds = %do.end.164
  %151 = bitcast %struct._object** %_py_xdecref_tmp166 to i8*, !dbg !2343
  call void @llvm.lifetime.start(i64 8, i8* %151) #1, !dbg !2343
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp166, metadata !661, metadata !1451), !dbg !2345
  %152 = load %struct._object*, %struct._object** %ucvt, align 8, !dbg !2346, !tbaa !1464
  store %struct._object* %152, %struct._object** %_py_xdecref_tmp166, align 8, !dbg !2345, !tbaa !1464
  %153 = load %struct._object*, %struct._object** %_py_xdecref_tmp166, align 8, !dbg !2347, !tbaa !1464
  %cmp167 = icmp ne %struct._object* %153, null, !dbg !2348
  br i1 %cmp167, label %if.then.168, label %if.end.181, !dbg !2349

if.then.168:                                      ; preds = %do.body.165
  br label %do.body.169, !dbg !2350

do.body.169:                                      ; preds = %if.then.168
  %154 = bitcast %struct._object** %_py_decref_tmp170 to i8*, !dbg !2352
  call void @llvm.lifetime.start(i64 8, i8* %154) #1, !dbg !2352
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp170, metadata !663, metadata !1451), !dbg !2354
  %155 = load %struct._object*, %struct._object** %_py_xdecref_tmp166, align 8, !dbg !2355, !tbaa !1464
  store %struct._object* %155, %struct._object** %_py_decref_tmp170, align 8, !dbg !2354, !tbaa !1464
  %156 = load %struct._object*, %struct._object** %_py_decref_tmp170, align 8, !dbg !2356, !tbaa !1464
  %ob_refcnt171 = getelementptr inbounds %struct._object, %struct._object* %156, i32 0, i32 0, !dbg !2358
  %157 = load i64, i64* %ob_refcnt171, align 8, !dbg !2359, !tbaa !1498
  %dec172 = add i64 %157, -1, !dbg !2359
  store i64 %dec172, i64* %ob_refcnt171, align 8, !dbg !2359, !tbaa !1498
  %cmp173 = icmp ne i64 %dec172, 0, !dbg !2360
  br i1 %cmp173, label %if.then.174, label %if.else.175, !dbg !2361

if.then.174:                                      ; preds = %do.body.169
  br label %if.end.178, !dbg !2362

if.else.175:                                      ; preds = %do.body.169
  %158 = load %struct._object*, %struct._object** %_py_decref_tmp170, align 8, !dbg !2364, !tbaa !1464
  %ob_type176 = getelementptr inbounds %struct._object, %struct._object* %158, i32 0, i32 1, !dbg !2366
  %159 = load %struct._typeobject*, %struct._typeobject** %ob_type176, align 8, !dbg !2366, !tbaa !1563
  %tp_dealloc177 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %159, i32 0, i32 4, !dbg !2367
  %160 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc177, align 8, !dbg !2367, !tbaa !1565
  %161 = load %struct._object*, %struct._object** %_py_decref_tmp170, align 8, !dbg !2368, !tbaa !1464
  call void %160(%struct._object* %161), !dbg !2369
  br label %if.end.178

if.end.178:                                       ; preds = %if.else.175, %if.then.174
  %162 = bitcast %struct._object** %_py_decref_tmp170 to i8*, !dbg !2370
  call void @llvm.lifetime.end(i64 8, i8* %162) #1, !dbg !2370
  br label %do.cond.179, !dbg !2372

do.cond.179:                                      ; preds = %if.end.178
  br label %do.end.180, !dbg !2373

do.end.180:                                       ; preds = %do.cond.179
  br label %if.end.181, !dbg !2375

if.end.181:                                       ; preds = %do.end.180, %do.body.165
  %163 = bitcast %struct._object** %_py_xdecref_tmp166 to i8*, !dbg !2377
  call void @llvm.lifetime.end(i64 8, i8* %163) #1, !dbg !2377
  br label %do.cond.182, !dbg !2378

do.cond.182:                                      ; preds = %if.end.181
  br label %do.end.183, !dbg !2379

do.end.183:                                       ; preds = %do.cond.182
  br label %do.body.184, !dbg !2381

do.body.184:                                      ; preds = %do.end.183
  %164 = bitcast %struct._object** %_py_xdecref_tmp185 to i8*, !dbg !2382
  call void @llvm.lifetime.start(i64 8, i8* %164) #1, !dbg !2382
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp185, metadata !666, metadata !1451), !dbg !2384
  %165 = load %struct._object*, %struct._object** %origpending, align 8, !dbg !2385, !tbaa !1464
  store %struct._object* %165, %struct._object** %_py_xdecref_tmp185, align 8, !dbg !2384, !tbaa !1464
  %166 = load %struct._object*, %struct._object** %_py_xdecref_tmp185, align 8, !dbg !2386, !tbaa !1464
  %cmp186 = icmp ne %struct._object* %166, null, !dbg !2387
  br i1 %cmp186, label %if.then.187, label %if.end.200, !dbg !2388

if.then.187:                                      ; preds = %do.body.184
  br label %do.body.188, !dbg !2389

do.body.188:                                      ; preds = %if.then.187
  %167 = bitcast %struct._object** %_py_decref_tmp189 to i8*, !dbg !2391
  call void @llvm.lifetime.start(i64 8, i8* %167) #1, !dbg !2391
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp189, metadata !668, metadata !1451), !dbg !2393
  %168 = load %struct._object*, %struct._object** %_py_xdecref_tmp185, align 8, !dbg !2394, !tbaa !1464
  store %struct._object* %168, %struct._object** %_py_decref_tmp189, align 8, !dbg !2393, !tbaa !1464
  %169 = load %struct._object*, %struct._object** %_py_decref_tmp189, align 8, !dbg !2395, !tbaa !1464
  %ob_refcnt190 = getelementptr inbounds %struct._object, %struct._object* %169, i32 0, i32 0, !dbg !2397
  %170 = load i64, i64* %ob_refcnt190, align 8, !dbg !2398, !tbaa !1498
  %dec191 = add i64 %170, -1, !dbg !2398
  store i64 %dec191, i64* %ob_refcnt190, align 8, !dbg !2398, !tbaa !1498
  %cmp192 = icmp ne i64 %dec191, 0, !dbg !2399
  br i1 %cmp192, label %if.then.193, label %if.else.194, !dbg !2400

if.then.193:                                      ; preds = %do.body.188
  br label %if.end.197, !dbg !2401

if.else.194:                                      ; preds = %do.body.188
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp189, align 8, !dbg !2403, !tbaa !1464
  %ob_type195 = getelementptr inbounds %struct._object, %struct._object* %171, i32 0, i32 1, !dbg !2405
  %172 = load %struct._typeobject*, %struct._typeobject** %ob_type195, align 8, !dbg !2405, !tbaa !1563
  %tp_dealloc196 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %172, i32 0, i32 4, !dbg !2406
  %173 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc196, align 8, !dbg !2406, !tbaa !1565
  %174 = load %struct._object*, %struct._object** %_py_decref_tmp189, align 8, !dbg !2407, !tbaa !1464
  call void %173(%struct._object* %174), !dbg !2408
  br label %if.end.197

if.end.197:                                       ; preds = %if.else.194, %if.then.193
  %175 = bitcast %struct._object** %_py_decref_tmp189 to i8*, !dbg !2409
  call void @llvm.lifetime.end(i64 8, i8* %175) #1, !dbg !2409
  br label %do.cond.198, !dbg !2411

do.cond.198:                                      ; preds = %if.end.197
  br label %do.end.199, !dbg !2412

do.end.199:                                       ; preds = %do.cond.198
  br label %if.end.200, !dbg !2414

if.end.200:                                       ; preds = %do.end.199, %do.body.184
  %176 = bitcast %struct._object** %_py_xdecref_tmp185 to i8*, !dbg !2416
  call void @llvm.lifetime.end(i64 8, i8* %176) #1, !dbg !2416
  br label %do.cond.201, !dbg !2417

do.cond.201:                                      ; preds = %if.end.200
  br label %do.end.202, !dbg !2418

do.end.202:                                       ; preds = %do.cond.201
  br label %do.body.203, !dbg !2420

do.body.203:                                      ; preds = %do.end.202
  %177 = bitcast %struct._object** %_py_xdecref_tmp204 to i8*, !dbg !2421
  call void @llvm.lifetime.start(i64 8, i8* %177) #1, !dbg !2421
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp204, metadata !671, metadata !1451), !dbg !2423
  %178 = load %struct._object*, %struct._object** %inbuf, align 8, !dbg !2424, !tbaa !1464
  store %struct._object* %178, %struct._object** %_py_xdecref_tmp204, align 8, !dbg !2423, !tbaa !1464
  %179 = load %struct._object*, %struct._object** %_py_xdecref_tmp204, align 8, !dbg !2425, !tbaa !1464
  %cmp205 = icmp ne %struct._object* %179, null, !dbg !2426
  br i1 %cmp205, label %if.then.206, label %if.end.219, !dbg !2427

if.then.206:                                      ; preds = %do.body.203
  br label %do.body.207, !dbg !2428

do.body.207:                                      ; preds = %if.then.206
  %180 = bitcast %struct._object** %_py_decref_tmp208 to i8*, !dbg !2430
  call void @llvm.lifetime.start(i64 8, i8* %180) #1, !dbg !2430
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp208, metadata !673, metadata !1451), !dbg !2432
  %181 = load %struct._object*, %struct._object** %_py_xdecref_tmp204, align 8, !dbg !2433, !tbaa !1464
  store %struct._object* %181, %struct._object** %_py_decref_tmp208, align 8, !dbg !2432, !tbaa !1464
  %182 = load %struct._object*, %struct._object** %_py_decref_tmp208, align 8, !dbg !2434, !tbaa !1464
  %ob_refcnt209 = getelementptr inbounds %struct._object, %struct._object* %182, i32 0, i32 0, !dbg !2436
  %183 = load i64, i64* %ob_refcnt209, align 8, !dbg !2437, !tbaa !1498
  %dec210 = add i64 %183, -1, !dbg !2437
  store i64 %dec210, i64* %ob_refcnt209, align 8, !dbg !2437, !tbaa !1498
  %cmp211 = icmp ne i64 %dec210, 0, !dbg !2438
  br i1 %cmp211, label %if.then.212, label %if.else.213, !dbg !2439

if.then.212:                                      ; preds = %do.body.207
  br label %if.end.216, !dbg !2440

if.else.213:                                      ; preds = %do.body.207
  %184 = load %struct._object*, %struct._object** %_py_decref_tmp208, align 8, !dbg !2442, !tbaa !1464
  %ob_type214 = getelementptr inbounds %struct._object, %struct._object* %184, i32 0, i32 1, !dbg !2444
  %185 = load %struct._typeobject*, %struct._typeobject** %ob_type214, align 8, !dbg !2444, !tbaa !1563
  %tp_dealloc215 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %185, i32 0, i32 4, !dbg !2445
  %186 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc215, align 8, !dbg !2445, !tbaa !1565
  %187 = load %struct._object*, %struct._object** %_py_decref_tmp208, align 8, !dbg !2446, !tbaa !1464
  call void %186(%struct._object* %187), !dbg !2447
  br label %if.end.216

if.end.216:                                       ; preds = %if.else.213, %if.then.212
  %188 = bitcast %struct._object** %_py_decref_tmp208 to i8*, !dbg !2448
  call void @llvm.lifetime.end(i64 8, i8* %188) #1, !dbg !2448
  br label %do.cond.217, !dbg !2450

do.cond.217:                                      ; preds = %if.end.216
  br label %do.end.218, !dbg !2451

do.end.218:                                       ; preds = %do.cond.217
  br label %if.end.219, !dbg !2453

if.end.219:                                       ; preds = %do.end.218, %do.body.203
  %189 = bitcast %struct._object** %_py_xdecref_tmp204 to i8*, !dbg !2455
  call void @llvm.lifetime.end(i64 8, i8* %189) #1, !dbg !2455
  br label %do.cond.220, !dbg !2456

do.cond.220:                                      ; preds = %if.end.219
  br label %do.end.221, !dbg !2457

do.end.221:                                       ; preds = %do.cond.220
  store %struct._object* null, %struct._object** %retval, !dbg !2459
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.222, !dbg !2459

cleanup.222:                                      ; preds = %do.end.221, %do.end.145, %cleanup, %do.end, %if.then.2
  %190 = bitcast %struct._object** %origpending to i8*, !dbg !2460
  call void @llvm.lifetime.end(i64 8, i8* %190) #1, !dbg !2460
  %191 = bitcast i64* %datalen to i8*, !dbg !2460
  call void @llvm.lifetime.end(i64 8, i8* %191) #1, !dbg !2460
  %192 = bitcast i64* %inpos to i8*, !dbg !2460
  call void @llvm.lifetime.end(i64 8, i8* %192) #1, !dbg !2460
  %193 = bitcast %struct._object** %inbuf to i8*, !dbg !2460
  call void @llvm.lifetime.end(i64 8, i8* %193) #1, !dbg !2460
  %194 = bitcast %struct._object** %r to i8*, !dbg !2460
  call void @llvm.lifetime.end(i64 8, i8* %194) #1, !dbg !2460
  %195 = bitcast %struct._object** %ucvt to i8*, !dbg !2460
  call void @llvm.lifetime.end(i64 8, i8* %195) #1, !dbg !2460
  %196 = load %struct._object*, %struct._object** %retval, !dbg !2460
  ret %struct._object* %196, !dbg !2460
}

declare %struct._object* @PyObject_Str(%struct._object*) #3

declare void @PyErr_SetString(%struct._object*, i8*) #3

declare void @PyUnicode_Append(%struct._object**, %struct._object*) #3

declare i32 @_PyUnicode_Ready(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @multibytecodec_encode(%struct.MultibyteCodec* %codec, %union.MultibyteCodec_State* %state, %struct._object* %text, i64* %inpos_t, %struct._object* %errors, i32 %flags) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %codec.addr = alloca %struct.MultibyteCodec*, align 8
  %state.addr = alloca %union.MultibyteCodec_State*, align 8
  %text.addr = alloca %struct._object*, align 8
  %inpos_t.addr = alloca i64*, align 8
  %errors.addr = alloca %struct._object*, align 8
  %flags.addr = alloca i32, align 4
  %buf = alloca %struct.MultibyteEncodeBuffer, align 8
  %finalsize = alloca i64, align 8
  %r = alloca i64, align 8
  %datalen = alloca i64, align 8
  %kind = alloca i32, align 4
  %data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %outleft = alloca i64, align 8
  %outleft80 = alloca i64, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp136 = alloca %struct._object*, align 8
  %_py_decref_tmp141 = alloca %struct._object*, align 8
  %_py_xdecref_tmp156 = alloca %struct._object*, align 8
  %_py_decref_tmp161 = alloca %struct._object*, align 8
  store %struct.MultibyteCodec* %codec, %struct.MultibyteCodec** %codec.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteCodec** %codec.addr, metadata !680, metadata !1451), !dbg !2461
  store %union.MultibyteCodec_State* %state, %union.MultibyteCodec_State** %state.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %union.MultibyteCodec_State** %state.addr, metadata !681, metadata !1451), !dbg !2462
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !682, metadata !1451), !dbg !2463
  store i64* %inpos_t, i64** %inpos_t.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i64** %inpos_t.addr, metadata !683, metadata !1451), !dbg !2464
  store %struct._object* %errors, %struct._object** %errors.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %errors.addr, metadata !684, metadata !1451), !dbg !2465
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !1475
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !685, metadata !1451), !dbg !2466
  %0 = bitcast %struct.MultibyteEncodeBuffer* %buf to i8*, !dbg !2467
  call void @llvm.lifetime.start(i64 56, i8* %0) #1, !dbg !2467
  call void @llvm.dbg.declare(metadata %struct.MultibyteEncodeBuffer* %buf, metadata !686, metadata !1451), !dbg !2468
  %1 = bitcast i64* %finalsize to i8*, !dbg !2469
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !2469
  call void @llvm.dbg.declare(metadata i64* %finalsize, metadata !697, metadata !1451), !dbg !2470
  %2 = bitcast i64* %r to i8*, !dbg !2469
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2469
  call void @llvm.dbg.declare(metadata i64* %r, metadata !698, metadata !1451), !dbg !2471
  store i64 0, i64* %r, align 8, !dbg !2471, !tbaa !1876
  %3 = bitcast i64* %datalen to i8*, !dbg !2472
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !2472
  call void @llvm.dbg.declare(metadata i64* %datalen, metadata !699, metadata !1451), !dbg !2473
  %4 = bitcast i32* %kind to i8*, !dbg !2474
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !2474
  call void @llvm.dbg.declare(metadata i32* %kind, metadata !700, metadata !1451), !dbg !2475
  %5 = bitcast i8** %data to i8*, !dbg !2476
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !2476
  call void @llvm.dbg.declare(metadata i8** %data, metadata !701, metadata !1451), !dbg !2477
  %6 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !2478, !tbaa !1464
  %7 = bitcast %struct._object* %6 to %struct.PyASCIIObject*, !dbg !2480
  %state1 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %7, i32 0, i32 3, !dbg !2481
  %8 = bitcast %struct.anon* %state1 to i32*, !dbg !2482
  %bf.load = load i32, i32* %8, align 4, !dbg !2482
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !2482
  %bf.clear = and i32 %bf.lshr, 1, !dbg !2482
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !2483
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2483

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !2484

cond.false:                                       ; preds = %entry
  %9 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !2486, !tbaa !1464
  %call = call i32 @_PyUnicode_Ready(%struct._object* %9), !dbg !2488
  br label %cond.end, !dbg !2483

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call, %cond.false ], !dbg !2483
  %cmp = icmp slt i32 %cond, 0, !dbg !2489
  br i1 %cmp, label %if.then, label %if.end, !dbg !2492

if.then:                                          ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval, !dbg !2493
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.175, !dbg !2493

if.end:                                           ; preds = %cond.end
  %10 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !2494, !tbaa !1464
  %11 = bitcast %struct._object* %10 to %struct.PyASCIIObject*, !dbg !2495
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %11, i32 0, i32 1, !dbg !2496
  %12 = load i64, i64* %length, align 8, !dbg !2496, !tbaa !2098
  store i64 %12, i64* %datalen, align 8, !dbg !2497, !tbaa !1876
  %13 = load i64, i64* %datalen, align 8, !dbg !2498, !tbaa !1876
  %cmp2 = icmp eq i64 %13, 0, !dbg !2500
  br i1 %cmp2, label %land.lhs.true, label %if.end.6, !dbg !2501

land.lhs.true:                                    ; preds = %if.end
  %14 = load i32, i32* %flags.addr, align 4, !dbg !2502, !tbaa !1475
  %and = and i32 %14, 2, !dbg !2504
  %tobool3 = icmp ne i32 %and, 0, !dbg !2504
  br i1 %tobool3, label %if.end.6, label %if.then.4, !dbg !2505

if.then.4:                                        ; preds = %land.lhs.true
  %call5 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 0), !dbg !2506
  store %struct._object* %call5, %struct._object** %retval, !dbg !2507
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.175, !dbg !2507

if.end.6:                                         ; preds = %land.lhs.true, %if.end
  %excobj = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 5, !dbg !2508
  store %struct._object* null, %struct._object** %excobj, align 8, !dbg !2509, !tbaa !2510
  %outobj = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 6, !dbg !2512
  store %struct._object* null, %struct._object** %outobj, align 8, !dbg !2513, !tbaa !2514
  %15 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !2515, !tbaa !1464
  %inobj = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 0, !dbg !2516
  store %struct._object* %15, %struct._object** %inobj, align 8, !dbg !2517, !tbaa !2518
  %inpos = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 1, !dbg !2519
  store i64 0, i64* %inpos, align 8, !dbg !2520, !tbaa !2521
  %16 = load i64, i64* %datalen, align 8, !dbg !2522, !tbaa !1876
  %inlen = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 2, !dbg !2523
  store i64 %16, i64* %inlen, align 8, !dbg !2524, !tbaa !2525
  %inobj7 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 0, !dbg !2526
  %17 = load %struct._object*, %struct._object** %inobj7, align 8, !dbg !2526, !tbaa !2518
  %18 = bitcast %struct._object* %17 to %struct.PyASCIIObject*, !dbg !2527
  %state8 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %18, i32 0, i32 3, !dbg !2528
  %19 = bitcast %struct.anon* %state8 to i32*, !dbg !2529
  %bf.load9 = load i32, i32* %19, align 4, !dbg !2529
  %bf.lshr10 = lshr i32 %bf.load9, 2, !dbg !2529
  %bf.clear11 = and i32 %bf.lshr10, 7, !dbg !2529
  store i32 %bf.clear11, i32* %kind, align 4, !dbg !2530, !tbaa !1475
  %inobj12 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 0, !dbg !2531
  %20 = load %struct._object*, %struct._object** %inobj12, align 8, !dbg !2531, !tbaa !2518
  %21 = bitcast %struct._object* %20 to %struct.PyASCIIObject*, !dbg !2532
  %state13 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %21, i32 0, i32 3, !dbg !2533
  %22 = bitcast %struct.anon* %state13 to i32*, !dbg !2534
  %bf.load14 = load i32, i32* %22, align 4, !dbg !2534
  %bf.lshr15 = lshr i32 %bf.load14, 5, !dbg !2534
  %bf.clear16 = and i32 %bf.lshr15, 1, !dbg !2534
  %tobool17 = icmp ne i32 %bf.clear16, 0, !dbg !2535
  br i1 %tobool17, label %cond.true.18, label %cond.false.32, !dbg !2535

cond.true.18:                                     ; preds = %if.end.6
  %inobj19 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 0, !dbg !2536
  %23 = load %struct._object*, %struct._object** %inobj19, align 8, !dbg !2536, !tbaa !2518
  %24 = bitcast %struct._object* %23 to %struct.PyASCIIObject*, !dbg !2538
  %state20 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %24, i32 0, i32 3, !dbg !2539
  %25 = bitcast %struct.anon* %state20 to i32*, !dbg !2540
  %bf.load21 = load i32, i32* %25, align 4, !dbg !2540
  %bf.lshr22 = lshr i32 %bf.load21, 6, !dbg !2540
  %bf.clear23 = and i32 %bf.lshr22, 1, !dbg !2540
  %tobool24 = icmp ne i32 %bf.clear23, 0, !dbg !2541
  br i1 %tobool24, label %cond.true.25, label %cond.false.27, !dbg !2541

cond.true.25:                                     ; preds = %cond.true.18
  %inobj26 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 0, !dbg !2542
  %26 = load %struct._object*, %struct._object** %inobj26, align 8, !dbg !2542, !tbaa !2518
  %27 = bitcast %struct._object* %26 to %struct.PyASCIIObject*, !dbg !2544
  %add.ptr = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %27, i64 1, !dbg !2545
  %28 = bitcast %struct.PyASCIIObject* %add.ptr to i8*, !dbg !2546
  br label %cond.end.30, !dbg !2541

cond.false.27:                                    ; preds = %cond.true.18
  %inobj28 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 0, !dbg !2547
  %29 = load %struct._object*, %struct._object** %inobj28, align 8, !dbg !2547, !tbaa !2518
  %30 = bitcast %struct._object* %29 to %struct.PyCompactUnicodeObject*, !dbg !2549
  %add.ptr29 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %30, i64 1, !dbg !2550
  %31 = bitcast %struct.PyCompactUnicodeObject* %add.ptr29 to i8*, !dbg !2551
  br label %cond.end.30, !dbg !2541

cond.end.30:                                      ; preds = %cond.false.27, %cond.true.25
  %cond31 = phi i8* [ %28, %cond.true.25 ], [ %31, %cond.false.27 ], !dbg !2541
  br label %cond.end.35, !dbg !2552

cond.false.32:                                    ; preds = %if.end.6
  %inobj33 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 0, !dbg !2555
  %32 = load %struct._object*, %struct._object** %inobj33, align 8, !dbg !2555, !tbaa !2518
  %33 = bitcast %struct._object* %32 to %struct.PyUnicodeObject*, !dbg !2557
  %data34 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %33, i32 0, i32 1, !dbg !2558
  %any = bitcast %union.anon* %data34 to i8**, !dbg !2559
  %34 = load i8*, i8** %any, align 8, !dbg !2559, !tbaa !1464
  br label %cond.end.35, !dbg !2535

cond.end.35:                                      ; preds = %cond.false.32, %cond.end.30
  %cond36 = phi i8* [ %cond31, %cond.end.30 ], [ %34, %cond.false.32 ], !dbg !2535
  store i8* %cond36, i8** %data, align 8, !dbg !2560, !tbaa !1464
  %35 = load i64, i64* %datalen, align 8, !dbg !2563, !tbaa !1876
  %cmp37 = icmp sgt i64 %35, 4611686018427387895, !dbg !2565
  br i1 %cmp37, label %if.then.38, label %if.end.40, !dbg !2566

if.then.38:                                       ; preds = %cond.end.35
  %call39 = call %struct._object* @PyErr_NoMemory(), !dbg !2567
  br label %errorexit, !dbg !2569

if.end.40:                                        ; preds = %cond.end.35
  %36 = load i64, i64* %datalen, align 8, !dbg !2570, !tbaa !1876
  %mul = mul i64 %36, 2, !dbg !2571
  %add = add i64 %mul, 16, !dbg !2572
  %call41 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %add), !dbg !2573
  %outobj42 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 6, !dbg !2574
  store %struct._object* %call41, %struct._object** %outobj42, align 8, !dbg !2575, !tbaa !2514
  %outobj43 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 6, !dbg !2576
  %37 = load %struct._object*, %struct._object** %outobj43, align 8, !dbg !2576, !tbaa !2514
  %cmp44 = icmp eq %struct._object* %37, null, !dbg !2578
  br i1 %cmp44, label %if.then.45, label %if.end.46, !dbg !2579

if.then.45:                                       ; preds = %if.end.40
  br label %errorexit, !dbg !2580

if.end.46:                                        ; preds = %if.end.40
  %outobj47 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 6, !dbg !2581
  %38 = load %struct._object*, %struct._object** %outobj47, align 8, !dbg !2581, !tbaa !2514
  %39 = bitcast %struct._object* %38 to %struct.PyBytesObject*, !dbg !2582
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %39, i32 0, i32 2, !dbg !2583
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !2584
  %outbuf = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 3, !dbg !2585
  store i8* %arraydecay, i8** %outbuf, align 8, !dbg !2586, !tbaa !2587
  %outbuf48 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 3, !dbg !2588
  %40 = load i8*, i8** %outbuf48, align 8, !dbg !2588, !tbaa !2587
  %outobj49 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 6, !dbg !2589
  %41 = load %struct._object*, %struct._object** %outobj49, align 8, !dbg !2589, !tbaa !2514
  %42 = bitcast %struct._object* %41 to %struct.PyVarObject*, !dbg !2590
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %42, i32 0, i32 1, !dbg !2591
  %43 = load i64, i64* %ob_size, align 8, !dbg !2591, !tbaa !2592
  %add.ptr50 = getelementptr i8, i8* %40, i64 %43, !dbg !2593
  %outbuf_end = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 4, !dbg !2594
  store i8* %add.ptr50, i8** %outbuf_end, align 8, !dbg !2595, !tbaa !2596
  br label %while.cond, !dbg !2597

while.cond:                                       ; preds = %cleanup.cont, %if.end.46
  %inpos51 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 1, !dbg !2598
  %44 = load i64, i64* %inpos51, align 8, !dbg !2598, !tbaa !2521
  %inlen52 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 2, !dbg !2600
  %45 = load i64, i64* %inlen52, align 8, !dbg !2600, !tbaa !2525
  %cmp53 = icmp slt i64 %44, %45, !dbg !2601
  br i1 %cmp53, label %while.body, label %while.end, !dbg !2597

while.body:                                       ; preds = %while.cond
  %46 = bitcast i64* %outleft to i8*, !dbg !2602
  call void @llvm.lifetime.start(i64 8, i8* %46) #1, !dbg !2602
  call void @llvm.dbg.declare(metadata i64* %outleft, metadata !702, metadata !1451), !dbg !2603
  %outbuf_end54 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 4, !dbg !2604
  %47 = load i8*, i8** %outbuf_end54, align 8, !dbg !2604, !tbaa !2596
  %outbuf55 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 3, !dbg !2605
  %48 = load i8*, i8** %outbuf55, align 8, !dbg !2605, !tbaa !2587
  %sub.ptr.lhs.cast = ptrtoint i8* %47 to i64, !dbg !2606
  %sub.ptr.rhs.cast = ptrtoint i8* %48 to i64, !dbg !2606
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2606
  store i64 %sub.ptr.sub, i64* %outleft, align 8, !dbg !2603, !tbaa !1876
  %49 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec.addr, align 8, !dbg !2607, !tbaa !1464
  %encode = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %49, i32 0, i32 3, !dbg !2608
  %50 = load i64 (%union.MultibyteCodec_State*, i8*, i32, i8*, i64*, i64, i8**, i64, i32)*, i64 (%union.MultibyteCodec_State*, i8*, i32, i8*, i64*, i64, i8**, i64, i32)** %encode, align 8, !dbg !2608, !tbaa !2609
  %51 = load %union.MultibyteCodec_State*, %union.MultibyteCodec_State** %state.addr, align 8, !dbg !2610, !tbaa !1464
  %52 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec.addr, align 8, !dbg !2611, !tbaa !1464
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %52, i32 0, i32 1, !dbg !2612
  %53 = load i8*, i8** %config, align 8, !dbg !2612, !tbaa !1717
  %54 = load i32, i32* %kind, align 4, !dbg !2613, !tbaa !1475
  %55 = load i8*, i8** %data, align 8, !dbg !2614, !tbaa !1464
  %inpos56 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 1, !dbg !2615
  %inlen57 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 2, !dbg !2616
  %56 = load i64, i64* %inlen57, align 8, !dbg !2616, !tbaa !2525
  %outbuf58 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 3, !dbg !2617
  %57 = load i64, i64* %outleft, align 8, !dbg !2618, !tbaa !1876
  %58 = load i32, i32* %flags.addr, align 4, !dbg !2619, !tbaa !1475
  %call59 = call i64 %50(%union.MultibyteCodec_State* %51, i8* %53, i32 %54, i8* %55, i64* %inpos56, i64 %56, i8** %outbuf58, i64 %57, i32 %58), !dbg !2607
  store i64 %call59, i64* %r, align 8, !dbg !2620, !tbaa !1876
  %59 = load i64, i64* %r, align 8, !dbg !2621, !tbaa !1876
  %cmp60 = icmp eq i64 %59, 0, !dbg !2623
  br i1 %cmp60, label %if.then.65, label %lor.lhs.false, !dbg !2624

lor.lhs.false:                                    ; preds = %while.body
  %60 = load i64, i64* %r, align 8, !dbg !2625, !tbaa !1876
  %cmp61 = icmp eq i64 %60, -2, !dbg !2627
  br i1 %cmp61, label %land.lhs.true.62, label %if.else, !dbg !2628

land.lhs.true.62:                                 ; preds = %lor.lhs.false
  %61 = load i32, i32* %flags.addr, align 4, !dbg !2629, !tbaa !1475
  %and63 = and i32 %61, 1, !dbg !2631
  %tobool64 = icmp ne i32 %and63, 0, !dbg !2631
  br i1 %tobool64, label %if.else, label %if.then.65, !dbg !2632

if.then.65:                                       ; preds = %land.lhs.true.62, %while.body
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2633

if.else:                                          ; preds = %land.lhs.true.62, %lor.lhs.false
  %62 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec.addr, align 8, !dbg !2634, !tbaa !1464
  %63 = load %union.MultibyteCodec_State*, %union.MultibyteCodec_State** %state.addr, align 8, !dbg !2636, !tbaa !1464
  %64 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !2637, !tbaa !1464
  %65 = load i64, i64* %r, align 8, !dbg !2638, !tbaa !1876
  %call66 = call i32 @multibytecodec_encerror(%struct.MultibyteCodec* %62, %union.MultibyteCodec_State* %63, %struct.MultibyteEncodeBuffer* %buf, %struct._object* %64, i64 %65), !dbg !2639
  %tobool67 = icmp ne i32 %call66, 0, !dbg !2639
  br i1 %tobool67, label %if.then.68, label %if.else.69, !dbg !2640

if.then.68:                                       ; preds = %if.else
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2641

if.else.69:                                       ; preds = %if.else
  %66 = load i64, i64* %r, align 8, !dbg !2642, !tbaa !1876
  %cmp70 = icmp eq i64 %66, -2, !dbg !2644
  br i1 %cmp70, label %if.then.71, label %if.end.72, !dbg !2645

if.then.71:                                       ; preds = %if.else.69
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2646

if.end.72:                                        ; preds = %if.else.69
  br label %if.end.73

if.end.73:                                        ; preds = %if.end.72
  br label %if.end.74

if.end.74:                                        ; preds = %if.end.73
  store i32 0, i32* %cleanup.dest.slot, !dbg !2647
  br label %cleanup, !dbg !2647

cleanup:                                          ; preds = %if.then.68, %if.end.74, %if.then.71, %if.then.65
  %67 = bitcast i64* %outleft to i8*, !dbg !2648
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !2648
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.175 [
    i32 0, label %cleanup.cont
    i32 4, label %while.end
    i32 2, label %errorexit
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond, !dbg !2597

while.end:                                        ; preds = %cleanup, %while.cond
  %68 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec.addr, align 8, !dbg !2649, !tbaa !1464
  %encreset = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %68, i32 0, i32 5, !dbg !2650
  %69 = load i64 (%union.MultibyteCodec_State*, i8*, i8**, i64)*, i64 (%union.MultibyteCodec_State*, i8*, i8**, i64)** %encreset, align 8, !dbg !2650, !tbaa !1861
  %cmp75 = icmp ne i64 (%union.MultibyteCodec_State*, i8*, i8**, i64)* %69, null, !dbg !2651
  br i1 %cmp75, label %land.lhs.true.76, label %if.end.101, !dbg !2652

land.lhs.true.76:                                 ; preds = %while.end
  %70 = load i32, i32* %flags.addr, align 4, !dbg !2653, !tbaa !1475
  %and77 = and i32 %70, 2, !dbg !2655
  %tobool78 = icmp ne i32 %and77, 0, !dbg !2655
  br i1 %tobool78, label %if.then.79, label %if.end.101, !dbg !2656

if.then.79:                                       ; preds = %land.lhs.true.76
  br label %for.cond, !dbg !2657

for.cond:                                         ; preds = %cleanup.cont.100, %if.then.79
  %71 = bitcast i64* %outleft80 to i8*, !dbg !2658
  call void @llvm.lifetime.start(i64 8, i8* %71) #1, !dbg !2658
  call void @llvm.dbg.declare(metadata i64* %outleft80, metadata !704, metadata !1451), !dbg !2659
  %outbuf_end81 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 4, !dbg !2660
  %72 = load i8*, i8** %outbuf_end81, align 8, !dbg !2660, !tbaa !2596
  %outbuf82 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 3, !dbg !2661
  %73 = load i8*, i8** %outbuf82, align 8, !dbg !2661, !tbaa !2587
  %sub.ptr.lhs.cast83 = ptrtoint i8* %72 to i64, !dbg !2662
  %sub.ptr.rhs.cast84 = ptrtoint i8* %73 to i64, !dbg !2662
  %sub.ptr.sub85 = sub i64 %sub.ptr.lhs.cast83, %sub.ptr.rhs.cast84, !dbg !2662
  store i64 %sub.ptr.sub85, i64* %outleft80, align 8, !dbg !2663, !tbaa !1876
  %74 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec.addr, align 8, !dbg !2664, !tbaa !1464
  %encreset86 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %74, i32 0, i32 5, !dbg !2665
  %75 = load i64 (%union.MultibyteCodec_State*, i8*, i8**, i64)*, i64 (%union.MultibyteCodec_State*, i8*, i8**, i64)** %encreset86, align 8, !dbg !2665, !tbaa !1861
  %76 = load %union.MultibyteCodec_State*, %union.MultibyteCodec_State** %state.addr, align 8, !dbg !2666, !tbaa !1464
  %77 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec.addr, align 8, !dbg !2667, !tbaa !1464
  %config87 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %77, i32 0, i32 1, !dbg !2668
  %78 = load i8*, i8** %config87, align 8, !dbg !2668, !tbaa !1717
  %outbuf88 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 3, !dbg !2669
  %79 = load i64, i64* %outleft80, align 8, !dbg !2670, !tbaa !1876
  %call89 = call i64 %75(%union.MultibyteCodec_State* %76, i8* %78, i8** %outbuf88, i64 %79), !dbg !2664
  store i64 %call89, i64* %r, align 8, !dbg !2671, !tbaa !1876
  %80 = load i64, i64* %r, align 8, !dbg !2672, !tbaa !1876
  %cmp90 = icmp eq i64 %80, 0, !dbg !2674
  br i1 %cmp90, label %if.then.91, label %if.else.92, !dbg !2675

if.then.91:                                       ; preds = %for.cond
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup.98, !dbg !2676

if.else.92:                                       ; preds = %for.cond
  %81 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec.addr, align 8, !dbg !2677, !tbaa !1464
  %82 = load %union.MultibyteCodec_State*, %union.MultibyteCodec_State** %state.addr, align 8, !dbg !2679, !tbaa !1464
  %83 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !2680, !tbaa !1464
  %84 = load i64, i64* %r, align 8, !dbg !2681, !tbaa !1876
  %call93 = call i32 @multibytecodec_encerror(%struct.MultibyteCodec* %81, %union.MultibyteCodec_State* %82, %struct.MultibyteEncodeBuffer* %buf, %struct._object* %83, i64 %84), !dbg !2682
  %tobool94 = icmp ne i32 %call93, 0, !dbg !2682
  br i1 %tobool94, label %if.then.95, label %if.end.96, !dbg !2683

if.then.95:                                       ; preds = %if.else.92
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.98, !dbg !2684

if.end.96:                                        ; preds = %if.else.92
  br label %if.end.97

if.end.97:                                        ; preds = %if.end.96
  store i32 0, i32* %cleanup.dest.slot, !dbg !2685
  br label %cleanup.98, !dbg !2685

cleanup.98:                                       ; preds = %if.then.95, %if.end.97, %if.then.91
  %85 = bitcast i64* %outleft80 to i8*, !dbg !2686
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !2686
  %cleanup.dest.99 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.99, label %cleanup.175 [
    i32 0, label %cleanup.cont.100
    i32 5, label %for.end
    i32 2, label %errorexit
  ]

cleanup.cont.100:                                 ; preds = %cleanup.98
  br label %for.cond, !dbg !2688

for.end:                                          ; preds = %cleanup.98
  br label %if.end.101, !dbg !2689

if.end.101:                                       ; preds = %for.end, %land.lhs.true.76, %while.end
  %outbuf102 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 3, !dbg !2690
  %86 = load i8*, i8** %outbuf102, align 8, !dbg !2690, !tbaa !2587
  %outobj103 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 6, !dbg !2691
  %87 = load %struct._object*, %struct._object** %outobj103, align 8, !dbg !2691, !tbaa !2514
  %88 = bitcast %struct._object* %87 to %struct.PyBytesObject*, !dbg !2692
  %ob_sval104 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %88, i32 0, i32 2, !dbg !2693
  %arraydecay105 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval104, i32 0, i32 0, !dbg !2694
  %sub.ptr.lhs.cast106 = ptrtoint i8* %86 to i64, !dbg !2695
  %sub.ptr.rhs.cast107 = ptrtoint i8* %arraydecay105 to i64, !dbg !2695
  %sub.ptr.sub108 = sub i64 %sub.ptr.lhs.cast106, %sub.ptr.rhs.cast107, !dbg !2695
  store i64 %sub.ptr.sub108, i64* %finalsize, align 8, !dbg !2696, !tbaa !1876
  %89 = load i64, i64* %finalsize, align 8, !dbg !2697, !tbaa !1876
  %outobj109 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 6, !dbg !2699
  %90 = load %struct._object*, %struct._object** %outobj109, align 8, !dbg !2699, !tbaa !2514
  %91 = bitcast %struct._object* %90 to %struct.PyVarObject*, !dbg !2700
  %ob_size110 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %91, i32 0, i32 1, !dbg !2701
  %92 = load i64, i64* %ob_size110, align 8, !dbg !2701, !tbaa !2592
  %cmp111 = icmp ne i64 %89, %92, !dbg !2702
  br i1 %cmp111, label %if.then.112, label %if.end.118, !dbg !2703

if.then.112:                                      ; preds = %if.end.101
  %outobj113 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 6, !dbg !2704
  %93 = load i64, i64* %finalsize, align 8, !dbg !2706, !tbaa !1876
  %call114 = call i32 @_PyBytes_Resize(%struct._object** %outobj113, i64 %93), !dbg !2707
  %cmp115 = icmp eq i32 %call114, -1, !dbg !2708
  br i1 %cmp115, label %if.then.116, label %if.end.117, !dbg !2709

if.then.116:                                      ; preds = %if.then.112
  br label %errorexit, !dbg !2710

if.end.117:                                       ; preds = %if.then.112
  br label %if.end.118, !dbg !2711

if.end.118:                                       ; preds = %if.end.117, %if.end.101
  %94 = load i64*, i64** %inpos_t.addr, align 8, !dbg !2713, !tbaa !1464
  %tobool119 = icmp ne i64* %94, null, !dbg !2713
  br i1 %tobool119, label %if.then.120, label %if.end.122, !dbg !2715

if.then.120:                                      ; preds = %if.end.118
  %inpos121 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 1, !dbg !2716
  %95 = load i64, i64* %inpos121, align 8, !dbg !2716, !tbaa !2521
  %96 = load i64*, i64** %inpos_t.addr, align 8, !dbg !2717, !tbaa !1464
  store i64 %95, i64* %96, align 8, !dbg !2718, !tbaa !1876
  br label %if.end.122, !dbg !2719

if.end.122:                                       ; preds = %if.then.120, %if.end.118
  br label %do.body, !dbg !2720

do.body:                                          ; preds = %if.end.122
  %97 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2721
  call void @llvm.lifetime.start(i64 8, i8* %97) #1, !dbg !2721
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !709, metadata !1451), !dbg !2723
  %excobj123 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 5, !dbg !2724
  %98 = load %struct._object*, %struct._object** %excobj123, align 8, !dbg !2724, !tbaa !2510
  store %struct._object* %98, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2723, !tbaa !1464
  %99 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2725, !tbaa !1464
  %cmp124 = icmp ne %struct._object* %99, null, !dbg !2726
  br i1 %cmp124, label %if.then.125, label %if.end.131, !dbg !2727

if.then.125:                                      ; preds = %do.body
  br label %do.body.126, !dbg !2728

do.body.126:                                      ; preds = %if.then.125
  %100 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2730
  call void @llvm.lifetime.start(i64 8, i8* %100) #1, !dbg !2730
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !711, metadata !1451), !dbg !2732
  %101 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2733, !tbaa !1464
  store %struct._object* %101, %struct._object** %_py_decref_tmp, align 8, !dbg !2732, !tbaa !1464
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2734, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 0, !dbg !2736
  %103 = load i64, i64* %ob_refcnt, align 8, !dbg !2737, !tbaa !1498
  %dec = add i64 %103, -1, !dbg !2737
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2737, !tbaa !1498
  %cmp127 = icmp ne i64 %dec, 0, !dbg !2738
  br i1 %cmp127, label %if.then.128, label %if.else.129, !dbg !2739

if.then.128:                                      ; preds = %do.body.126
  br label %if.end.130, !dbg !2740

if.else.129:                                      ; preds = %do.body.126
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2742, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 1, !dbg !2744
  %105 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2744, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 4, !dbg !2745
  %106 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2745, !tbaa !1565
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2746, !tbaa !1464
  call void %106(%struct._object* %107), !dbg !2747
  br label %if.end.130

if.end.130:                                       ; preds = %if.else.129, %if.then.128
  %108 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2748
  call void @llvm.lifetime.end(i64 8, i8* %108) #1, !dbg !2748
  br label %do.cond, !dbg !2750

do.cond:                                          ; preds = %if.end.130
  br label %do.end, !dbg !2751

do.end:                                           ; preds = %do.cond
  br label %if.end.131, !dbg !2753

if.end.131:                                       ; preds = %do.end, %do.body
  %109 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2755
  call void @llvm.lifetime.end(i64 8, i8* %109) #1, !dbg !2755
  br label %do.cond.132, !dbg !2757

do.cond.132:                                      ; preds = %if.end.131
  br label %do.end.133, !dbg !2758

do.end.133:                                       ; preds = %do.cond.132
  %outobj134 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 6, !dbg !2760
  %110 = load %struct._object*, %struct._object** %outobj134, align 8, !dbg !2760, !tbaa !2514
  store %struct._object* %110, %struct._object** %retval, !dbg !2761
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.175, !dbg !2761

errorexit:                                        ; preds = %cleanup.98, %cleanup, %if.then.116, %if.then.45, %if.then.38
  br label %do.body.135, !dbg !2762

do.body.135:                                      ; preds = %errorexit
  %111 = bitcast %struct._object** %_py_xdecref_tmp136 to i8*, !dbg !2763
  call void @llvm.lifetime.start(i64 8, i8* %111) #1, !dbg !2763
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp136, metadata !714, metadata !1451), !dbg !2765
  %excobj137 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 5, !dbg !2766
  %112 = load %struct._object*, %struct._object** %excobj137, align 8, !dbg !2766, !tbaa !2510
  store %struct._object* %112, %struct._object** %_py_xdecref_tmp136, align 8, !dbg !2765, !tbaa !1464
  %113 = load %struct._object*, %struct._object** %_py_xdecref_tmp136, align 8, !dbg !2767, !tbaa !1464
  %cmp138 = icmp ne %struct._object* %113, null, !dbg !2768
  br i1 %cmp138, label %if.then.139, label %if.end.152, !dbg !2769

if.then.139:                                      ; preds = %do.body.135
  br label %do.body.140, !dbg !2770

do.body.140:                                      ; preds = %if.then.139
  %114 = bitcast %struct._object** %_py_decref_tmp141 to i8*, !dbg !2772
  call void @llvm.lifetime.start(i64 8, i8* %114) #1, !dbg !2772
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp141, metadata !716, metadata !1451), !dbg !2774
  %115 = load %struct._object*, %struct._object** %_py_xdecref_tmp136, align 8, !dbg !2775, !tbaa !1464
  store %struct._object* %115, %struct._object** %_py_decref_tmp141, align 8, !dbg !2774, !tbaa !1464
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp141, align 8, !dbg !2776, !tbaa !1464
  %ob_refcnt142 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 0, !dbg !2778
  %117 = load i64, i64* %ob_refcnt142, align 8, !dbg !2779, !tbaa !1498
  %dec143 = add i64 %117, -1, !dbg !2779
  store i64 %dec143, i64* %ob_refcnt142, align 8, !dbg !2779, !tbaa !1498
  %cmp144 = icmp ne i64 %dec143, 0, !dbg !2780
  br i1 %cmp144, label %if.then.145, label %if.else.146, !dbg !2781

if.then.145:                                      ; preds = %do.body.140
  br label %if.end.149, !dbg !2782

if.else.146:                                      ; preds = %do.body.140
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp141, align 8, !dbg !2784, !tbaa !1464
  %ob_type147 = getelementptr inbounds %struct._object, %struct._object* %118, i32 0, i32 1, !dbg !2786
  %119 = load %struct._typeobject*, %struct._typeobject** %ob_type147, align 8, !dbg !2786, !tbaa !1563
  %tp_dealloc148 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %119, i32 0, i32 4, !dbg !2787
  %120 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc148, align 8, !dbg !2787, !tbaa !1565
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp141, align 8, !dbg !2788, !tbaa !1464
  call void %120(%struct._object* %121), !dbg !2789
  br label %if.end.149

if.end.149:                                       ; preds = %if.else.146, %if.then.145
  %122 = bitcast %struct._object** %_py_decref_tmp141 to i8*, !dbg !2790
  call void @llvm.lifetime.end(i64 8, i8* %122) #1, !dbg !2790
  br label %do.cond.150, !dbg !2792

do.cond.150:                                      ; preds = %if.end.149
  br label %do.end.151, !dbg !2793

do.end.151:                                       ; preds = %do.cond.150
  br label %if.end.152, !dbg !2795

if.end.152:                                       ; preds = %do.end.151, %do.body.135
  %123 = bitcast %struct._object** %_py_xdecref_tmp136 to i8*, !dbg !2797
  call void @llvm.lifetime.end(i64 8, i8* %123) #1, !dbg !2797
  br label %do.cond.153, !dbg !2798

do.cond.153:                                      ; preds = %if.end.152
  br label %do.end.154, !dbg !2799

do.end.154:                                       ; preds = %do.cond.153
  br label %do.body.155, !dbg !2801

do.body.155:                                      ; preds = %do.end.154
  %124 = bitcast %struct._object** %_py_xdecref_tmp156 to i8*, !dbg !2802
  call void @llvm.lifetime.start(i64 8, i8* %124) #1, !dbg !2802
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp156, metadata !719, metadata !1451), !dbg !2804
  %outobj157 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %buf, i32 0, i32 6, !dbg !2805
  %125 = load %struct._object*, %struct._object** %outobj157, align 8, !dbg !2805, !tbaa !2514
  store %struct._object* %125, %struct._object** %_py_xdecref_tmp156, align 8, !dbg !2804, !tbaa !1464
  %126 = load %struct._object*, %struct._object** %_py_xdecref_tmp156, align 8, !dbg !2806, !tbaa !1464
  %cmp158 = icmp ne %struct._object* %126, null, !dbg !2807
  br i1 %cmp158, label %if.then.159, label %if.end.172, !dbg !2808

if.then.159:                                      ; preds = %do.body.155
  br label %do.body.160, !dbg !2809

do.body.160:                                      ; preds = %if.then.159
  %127 = bitcast %struct._object** %_py_decref_tmp161 to i8*, !dbg !2811
  call void @llvm.lifetime.start(i64 8, i8* %127) #1, !dbg !2811
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp161, metadata !721, metadata !1451), !dbg !2813
  %128 = load %struct._object*, %struct._object** %_py_xdecref_tmp156, align 8, !dbg !2814, !tbaa !1464
  store %struct._object* %128, %struct._object** %_py_decref_tmp161, align 8, !dbg !2813, !tbaa !1464
  %129 = load %struct._object*, %struct._object** %_py_decref_tmp161, align 8, !dbg !2815, !tbaa !1464
  %ob_refcnt162 = getelementptr inbounds %struct._object, %struct._object* %129, i32 0, i32 0, !dbg !2817
  %130 = load i64, i64* %ob_refcnt162, align 8, !dbg !2818, !tbaa !1498
  %dec163 = add i64 %130, -1, !dbg !2818
  store i64 %dec163, i64* %ob_refcnt162, align 8, !dbg !2818, !tbaa !1498
  %cmp164 = icmp ne i64 %dec163, 0, !dbg !2819
  br i1 %cmp164, label %if.then.165, label %if.else.166, !dbg !2820

if.then.165:                                      ; preds = %do.body.160
  br label %if.end.169, !dbg !2821

if.else.166:                                      ; preds = %do.body.160
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp161, align 8, !dbg !2823, !tbaa !1464
  %ob_type167 = getelementptr inbounds %struct._object, %struct._object* %131, i32 0, i32 1, !dbg !2825
  %132 = load %struct._typeobject*, %struct._typeobject** %ob_type167, align 8, !dbg !2825, !tbaa !1563
  %tp_dealloc168 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %132, i32 0, i32 4, !dbg !2826
  %133 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc168, align 8, !dbg !2826, !tbaa !1565
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp161, align 8, !dbg !2827, !tbaa !1464
  call void %133(%struct._object* %134), !dbg !2828
  br label %if.end.169

if.end.169:                                       ; preds = %if.else.166, %if.then.165
  %135 = bitcast %struct._object** %_py_decref_tmp161 to i8*, !dbg !2829
  call void @llvm.lifetime.end(i64 8, i8* %135) #1, !dbg !2829
  br label %do.cond.170, !dbg !2831

do.cond.170:                                      ; preds = %if.end.169
  br label %do.end.171, !dbg !2832

do.end.171:                                       ; preds = %do.cond.170
  br label %if.end.172, !dbg !2834

if.end.172:                                       ; preds = %do.end.171, %do.body.155
  %136 = bitcast %struct._object** %_py_xdecref_tmp156 to i8*, !dbg !2836
  call void @llvm.lifetime.end(i64 8, i8* %136) #1, !dbg !2836
  br label %do.cond.173, !dbg !2837

do.cond.173:                                      ; preds = %if.end.172
  br label %do.end.174, !dbg !2838

do.end.174:                                       ; preds = %do.cond.173
  store %struct._object* null, %struct._object** %retval, !dbg !2840
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.175, !dbg !2840

cleanup.175:                                      ; preds = %do.end.174, %do.end.133, %cleanup.98, %cleanup, %if.then.4, %if.then
  %137 = bitcast i8** %data to i8*, !dbg !2841
  call void @llvm.lifetime.end(i64 8, i8* %137) #1, !dbg !2841
  %138 = bitcast i32* %kind to i8*, !dbg !2841
  call void @llvm.lifetime.end(i64 4, i8* %138) #1, !dbg !2841
  %139 = bitcast i64* %datalen to i8*, !dbg !2841
  call void @llvm.lifetime.end(i64 8, i8* %139) #1, !dbg !2841
  %140 = bitcast i64* %r to i8*, !dbg !2841
  call void @llvm.lifetime.end(i64 8, i8* %140) #1, !dbg !2841
  %141 = bitcast i64* %finalsize to i8*, !dbg !2841
  call void @llvm.lifetime.end(i64 8, i8* %141) #1, !dbg !2841
  %142 = bitcast %struct.MultibyteEncodeBuffer* %buf to i8*, !dbg !2841
  call void @llvm.lifetime.end(i64 56, i8* %142) #1, !dbg !2841
  %143 = load %struct._object*, %struct._object** %retval, !dbg !2841
  ret %struct._object* %143, !dbg !2841
}

declare %struct._object* @PyUnicode_Substring(%struct._object*, i64, i64) #3

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #3

declare %struct._object* @PyErr_NoMemory() #3

; Function Attrs: nounwind uwtable
define internal i32 @multibytecodec_encerror(%struct.MultibyteCodec* %codec, %union.MultibyteCodec_State* %state, %struct.MultibyteEncodeBuffer* %buf, %struct._object* %errors, i64 %e) #0 {
entry:
  %retval = alloca i32, align 4
  %codec.addr = alloca %struct.MultibyteCodec*, align 8
  %state.addr = alloca %union.MultibyteCodec_State*, align 8
  %buf.addr = alloca %struct.MultibyteEncodeBuffer*, align 8
  %errors.addr = alloca %struct._object*, align 8
  %e.addr = alloca i64, align 8
  %retobj = alloca %struct._object*, align 8
  %retstr = alloca %struct._object*, align 8
  %tobj = alloca %struct._object*, align 8
  %retstrsize = alloca i64, align 8
  %newpos = alloca i64, align 8
  %esize = alloca i64, align 8
  %start = alloca i64, align 8
  %end = alloca i64, align 8
  %reason = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %replchar = alloca %struct._object*, align 8
  %r = alloca i64, align 8
  %inpos8 = alloca i64, align 8
  %kind = alloca i32, align 4
  %data = alloca i8*, align 8
  %outleft = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %inpos130 = alloca i64, align 8
  %_py_decref_tmp176 = alloca %struct._object*, align 8
  %_py_decref_tmp188 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp203 = alloca %struct._object*, align 8
  %_py_xdecref_tmp218 = alloca %struct._object*, align 8
  %_py_decref_tmp222 = alloca %struct._object*, align 8
  store %struct.MultibyteCodec* %codec, %struct.MultibyteCodec** %codec.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteCodec** %codec.addr, metadata !729, metadata !1451), !dbg !2842
  store %union.MultibyteCodec_State* %state, %union.MultibyteCodec_State** %state.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %union.MultibyteCodec_State** %state.addr, metadata !730, metadata !1451), !dbg !2843
  store %struct.MultibyteEncodeBuffer* %buf, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteEncodeBuffer** %buf.addr, metadata !731, metadata !1451), !dbg !2844
  store %struct._object* %errors, %struct._object** %errors.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %errors.addr, metadata !732, metadata !1451), !dbg !2845
  store i64 %e, i64* %e.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i64* %e.addr, metadata !733, metadata !1451), !dbg !2846
  %0 = bitcast %struct._object** %retobj to i8*, !dbg !2847
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2847
  call void @llvm.dbg.declare(metadata %struct._object** %retobj, metadata !734, metadata !1451), !dbg !2848
  store %struct._object* null, %struct._object** %retobj, align 8, !dbg !2848, !tbaa !1464
  %1 = bitcast %struct._object** %retstr to i8*, !dbg !2847
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !2847
  call void @llvm.dbg.declare(metadata %struct._object** %retstr, metadata !735, metadata !1451), !dbg !2849
  store %struct._object* null, %struct._object** %retstr, align 8, !dbg !2849, !tbaa !1464
  %2 = bitcast %struct._object** %tobj to i8*, !dbg !2847
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2847
  call void @llvm.dbg.declare(metadata %struct._object** %tobj, metadata !736, metadata !1451), !dbg !2850
  %3 = bitcast i64* %retstrsize to i8*, !dbg !2851
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !2851
  call void @llvm.dbg.declare(metadata i64* %retstrsize, metadata !737, metadata !1451), !dbg !2852
  %4 = bitcast i64* %newpos to i8*, !dbg !2851
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !2851
  call void @llvm.dbg.declare(metadata i64* %newpos, metadata !738, metadata !1451), !dbg !2853
  %5 = bitcast i64* %esize to i8*, !dbg !2854
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !2854
  call void @llvm.dbg.declare(metadata i64* %esize, metadata !739, metadata !1451), !dbg !2855
  %6 = bitcast i64* %start to i8*, !dbg !2854
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !2854
  call void @llvm.dbg.declare(metadata i64* %start, metadata !740, metadata !1451), !dbg !2856
  %7 = bitcast i64* %end to i8*, !dbg !2854
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !2854
  call void @llvm.dbg.declare(metadata i64* %end, metadata !741, metadata !1451), !dbg !2857
  %8 = bitcast i8** %reason to i8*, !dbg !2858
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !2858
  call void @llvm.dbg.declare(metadata i8** %reason, metadata !742, metadata !1451), !dbg !2859
  %9 = load i64, i64* %e.addr, align 8, !dbg !2860, !tbaa !1876
  %cmp = icmp sgt i64 %9, 0, !dbg !2862
  br i1 %cmp, label %if.then, label %if.else, !dbg !2863

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i32 0, i32 0), i8** %reason, align 8, !dbg !2864, !tbaa !1464
  %10 = load i64, i64* %e.addr, align 8, !dbg !2866, !tbaa !1876
  store i64 %10, i64* %esize, align 8, !dbg !2867, !tbaa !1876
  br label %if.end.5, !dbg !2868

if.else:                                          ; preds = %entry
  %11 = load i64, i64* %e.addr, align 8, !dbg !2869, !tbaa !1876
  switch i64 %11, label %sw.default [
    i64 -1, label %sw.bb
    i64 -2, label %sw.bb.3
    i64 -3, label %sw.bb.4
  ], !dbg !2871

sw.bb:                                            ; preds = %if.else
  %12 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !2872, !tbaa !1464
  %call = call i32 @expand_encodebuffer(%struct.MultibyteEncodeBuffer* %12, i64 -1), !dbg !2877
  %cmp1 = icmp eq i32 %call, -1, !dbg !2878
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !2879

if.then.2:                                        ; preds = %sw.bb
  br label %errorexit, !dbg !2880

if.end:                                           ; preds = %sw.bb
  store i32 0, i32* %retval, !dbg !2882
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.236, !dbg !2882

sw.bb.3:                                          ; preds = %if.else
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i32 0, i32 0), i8** %reason, align 8, !dbg !2883, !tbaa !1464
  %13 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !2884, !tbaa !1464
  %inpos = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %13, i32 0, i32 1, !dbg !2885
  %14 = load i64, i64* %inpos, align 8, !dbg !2885, !tbaa !2521
  store i64 %14, i64* %esize, align 8, !dbg !2886, !tbaa !1876
  br label %sw.epilog, !dbg !2887

sw.bb.4:                                          ; preds = %if.else
  %15 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !2888, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i32 0, i32 0)), !dbg !2889
  store i32 -1, i32* %retval, !dbg !2890
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.236, !dbg !2890

sw.default:                                       ; preds = %if.else
  %16 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !2891, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i32 0, i32 0)), !dbg !2892
  store i32 -1, i32* %retval, !dbg !2893
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.236, !dbg !2893

sw.epilog:                                        ; preds = %sw.bb.3
  br label %if.end.5

if.end.5:                                         ; preds = %sw.epilog, %if.then
  %17 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !2894, !tbaa !1464
  %cmp6 = icmp eq %struct._object* %17, inttoptr (i64 3 to %struct._object*), !dbg !2895
  br i1 %cmp6, label %if.then.7, label %if.end.62, !dbg !2896

if.then.7:                                        ; preds = %if.end.5
  %18 = bitcast %struct._object** %replchar to i8*, !dbg !2897
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !2897
  call void @llvm.dbg.declare(metadata %struct._object** %replchar, metadata !743, metadata !1451), !dbg !2898
  %19 = bitcast i64* %r to i8*, !dbg !2899
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !2899
  call void @llvm.dbg.declare(metadata i64* %r, metadata !746, metadata !1451), !dbg !2900
  %20 = bitcast i64* %inpos8 to i8*, !dbg !2901
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !2901
  call void @llvm.dbg.declare(metadata i64* %inpos8, metadata !747, metadata !1451), !dbg !2902
  %21 = bitcast i32* %kind to i8*, !dbg !2903
  call void @llvm.lifetime.start(i64 4, i8* %21) #1, !dbg !2903
  call void @llvm.dbg.declare(metadata i32* %kind, metadata !748, metadata !1451), !dbg !2904
  %22 = bitcast i8** %data to i8*, !dbg !2905
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !2905
  call void @llvm.dbg.declare(metadata i8** %data, metadata !749, metadata !1451), !dbg !2906
  %call9 = call %struct._object* @PyUnicode_FromOrdinal(i32 63), !dbg !2907
  store %struct._object* %call9, %struct._object** %replchar, align 8, !dbg !2908, !tbaa !1464
  %23 = load %struct._object*, %struct._object** %replchar, align 8, !dbg !2909, !tbaa !1464
  %cmp10 = icmp eq %struct._object* %23, null, !dbg !2911
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !2912

if.then.11:                                       ; preds = %if.then.7
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !2913

if.end.12:                                        ; preds = %if.then.7
  %24 = load %struct._object*, %struct._object** %replchar, align 8, !dbg !2914, !tbaa !1464
  %25 = bitcast %struct._object* %24 to %struct.PyASCIIObject*, !dbg !2915
  %state13 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %25, i32 0, i32 3, !dbg !2916
  %26 = bitcast %struct.anon* %state13 to i32*, !dbg !2917
  %bf.load = load i32, i32* %26, align 4, !dbg !2917
  %bf.lshr = lshr i32 %bf.load, 2, !dbg !2917
  %bf.clear = and i32 %bf.lshr, 7, !dbg !2917
  store i32 %bf.clear, i32* %kind, align 4, !dbg !2918, !tbaa !1475
  %27 = load %struct._object*, %struct._object** %replchar, align 8, !dbg !2919, !tbaa !1464
  %28 = bitcast %struct._object* %27 to %struct.PyASCIIObject*, !dbg !2920
  %state14 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %28, i32 0, i32 3, !dbg !2921
  %29 = bitcast %struct.anon* %state14 to i32*, !dbg !2922
  %bf.load15 = load i32, i32* %29, align 4, !dbg !2922
  %bf.lshr16 = lshr i32 %bf.load15, 5, !dbg !2922
  %bf.clear17 = and i32 %bf.lshr16, 1, !dbg !2922
  %tobool = icmp ne i32 %bf.clear17, 0, !dbg !2923
  br i1 %tobool, label %cond.true, label %cond.false.25, !dbg !2923

cond.true:                                        ; preds = %if.end.12
  %30 = load %struct._object*, %struct._object** %replchar, align 8, !dbg !2924, !tbaa !1464
  %31 = bitcast %struct._object* %30 to %struct.PyASCIIObject*, !dbg !2926
  %state18 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %31, i32 0, i32 3, !dbg !2927
  %32 = bitcast %struct.anon* %state18 to i32*, !dbg !2928
  %bf.load19 = load i32, i32* %32, align 4, !dbg !2928
  %bf.lshr20 = lshr i32 %bf.load19, 6, !dbg !2928
  %bf.clear21 = and i32 %bf.lshr20, 1, !dbg !2928
  %tobool22 = icmp ne i32 %bf.clear21, 0, !dbg !2929
  br i1 %tobool22, label %cond.true.23, label %cond.false, !dbg !2929

cond.true.23:                                     ; preds = %cond.true
  %33 = load %struct._object*, %struct._object** %replchar, align 8, !dbg !2930, !tbaa !1464
  %34 = bitcast %struct._object* %33 to %struct.PyASCIIObject*, !dbg !2932
  %add.ptr = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %34, i64 1, !dbg !2933
  %35 = bitcast %struct.PyASCIIObject* %add.ptr to i8*, !dbg !2934
  br label %cond.end, !dbg !2929

cond.false:                                       ; preds = %cond.true
  %36 = load %struct._object*, %struct._object** %replchar, align 8, !dbg !2935, !tbaa !1464
  %37 = bitcast %struct._object* %36 to %struct.PyCompactUnicodeObject*, !dbg !2937
  %add.ptr24 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %37, i64 1, !dbg !2938
  %38 = bitcast %struct.PyCompactUnicodeObject* %add.ptr24 to i8*, !dbg !2939
  br label %cond.end, !dbg !2929

cond.end:                                         ; preds = %cond.false, %cond.true.23
  %cond = phi i8* [ %35, %cond.true.23 ], [ %38, %cond.false ], !dbg !2929
  br label %cond.end.27, !dbg !2940

cond.false.25:                                    ; preds = %if.end.12
  %39 = load %struct._object*, %struct._object** %replchar, align 8, !dbg !2943, !tbaa !1464
  %40 = bitcast %struct._object* %39 to %struct.PyUnicodeObject*, !dbg !2945
  %data26 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %40, i32 0, i32 1, !dbg !2946
  %any = bitcast %union.anon* %data26 to i8**, !dbg !2947
  %41 = load i8*, i8** %any, align 8, !dbg !2947, !tbaa !1464
  br label %cond.end.27, !dbg !2923

cond.end.27:                                      ; preds = %cond.false.25, %cond.end
  %cond28 = phi i8* [ %cond, %cond.end ], [ %41, %cond.false.25 ], !dbg !2923
  store i8* %cond28, i8** %data, align 8, !dbg !2948, !tbaa !1464
  store i64 0, i64* %inpos8, align 8, !dbg !2951, !tbaa !1876
  br label %for.cond, !dbg !2952

for.cond:                                         ; preds = %cleanup, %cond.end.27
  %42 = bitcast i64* %outleft to i8*, !dbg !2953
  call void @llvm.lifetime.start(i64 8, i8* %42) #1, !dbg !2953
  call void @llvm.dbg.declare(metadata i64* %outleft, metadata !750, metadata !1451), !dbg !2954
  %43 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !2955, !tbaa !1464
  %outbuf_end = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %43, i32 0, i32 4, !dbg !2956
  %44 = load i8*, i8** %outbuf_end, align 8, !dbg !2956, !tbaa !2596
  %45 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !2957, !tbaa !1464
  %outbuf = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %45, i32 0, i32 3, !dbg !2958
  %46 = load i8*, i8** %outbuf, align 8, !dbg !2958, !tbaa !2587
  %sub.ptr.lhs.cast = ptrtoint i8* %44 to i64, !dbg !2959
  %sub.ptr.rhs.cast = ptrtoint i8* %46 to i64, !dbg !2959
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2959
  store i64 %sub.ptr.sub, i64* %outleft, align 8, !dbg !2954, !tbaa !1876
  %47 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec.addr, align 8, !dbg !2960, !tbaa !1464
  %encode = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %47, i32 0, i32 3, !dbg !2961
  %48 = load i64 (%union.MultibyteCodec_State*, i8*, i32, i8*, i64*, i64, i8**, i64, i32)*, i64 (%union.MultibyteCodec_State*, i8*, i32, i8*, i64*, i64, i8**, i64, i32)** %encode, align 8, !dbg !2961, !tbaa !2609
  %49 = load %union.MultibyteCodec_State*, %union.MultibyteCodec_State** %state.addr, align 8, !dbg !2962, !tbaa !1464
  %50 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec.addr, align 8, !dbg !2963, !tbaa !1464
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %50, i32 0, i32 1, !dbg !2964
  %51 = load i8*, i8** %config, align 8, !dbg !2964, !tbaa !1717
  %52 = load i32, i32* %kind, align 4, !dbg !2965, !tbaa !1475
  %53 = load i8*, i8** %data, align 8, !dbg !2966, !tbaa !1464
  %54 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !2967, !tbaa !1464
  %outbuf29 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %54, i32 0, i32 3, !dbg !2968
  %55 = load i64, i64* %outleft, align 8, !dbg !2969, !tbaa !1876
  %call30 = call i64 %48(%union.MultibyteCodec_State* %49, i8* %51, i32 %52, i8* %53, i64* %inpos8, i64 1, i8** %outbuf29, i64 %55, i32 0), !dbg !2960
  store i64 %call30, i64* %r, align 8, !dbg !2970, !tbaa !1876
  %56 = load i64, i64* %r, align 8, !dbg !2971, !tbaa !1876
  %cmp31 = icmp eq i64 %56, -1, !dbg !2973
  br i1 %cmp31, label %if.then.32, label %if.else.37, !dbg !2974

if.then.32:                                       ; preds = %for.cond
  %57 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !2975, !tbaa !1464
  %call33 = call i32 @expand_encodebuffer(%struct.MultibyteEncodeBuffer* %57, i64 -1), !dbg !2980
  %cmp34 = icmp eq i32 %call33, -1, !dbg !2981
  br i1 %cmp34, label %if.then.35, label %if.end.36, !dbg !2982

if.then.35:                                       ; preds = %if.then.32
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2983

if.end.36:                                        ; preds = %if.then.32
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2984

if.else.37:                                       ; preds = %for.cond
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2985

cleanup:                                          ; preds = %if.then.35, %if.else.37, %if.end.36
  %58 = bitcast i64* %outleft to i8*, !dbg !2986
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !2986
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.56 [
    i32 5, label %for.cond
    i32 4, label %for.end
  ]

for.end:                                          ; preds = %cleanup
  br label %do.body, !dbg !2987

do.body:                                          ; preds = %for.end
  %59 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2988
  call void @llvm.lifetime.start(i64 8, i8* %59) #1, !dbg !2988
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !754, metadata !1451), !dbg !2990
  %60 = load %struct._object*, %struct._object** %replchar, align 8, !dbg !2991, !tbaa !1464
  store %struct._object* %60, %struct._object** %_py_decref_tmp, align 8, !dbg !2990, !tbaa !1464
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2992, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !2994
  %62 = load i64, i64* %ob_refcnt, align 8, !dbg !2995, !tbaa !1498
  %dec = add i64 %62, -1, !dbg !2995
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2995, !tbaa !1498
  %cmp38 = icmp ne i64 %dec, 0, !dbg !2996
  br i1 %cmp38, label %if.then.39, label %if.else.40, !dbg !2997

if.then.39:                                       ; preds = %do.body
  br label %if.end.41, !dbg !2998

if.else.40:                                       ; preds = %do.body
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3000, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !3002
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3002, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4, !dbg !3003
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3003, !tbaa !1565
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3004, !tbaa !1464
  call void %65(%struct._object* %66), !dbg !3005
  br label %if.end.41

if.end.41:                                        ; preds = %if.else.40, %if.then.39
  %67 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3006
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !3006
  br label %do.cond, !dbg !3007

do.cond:                                          ; preds = %if.end.41
  br label %do.end, !dbg !3008

do.end:                                           ; preds = %do.cond
  %68 = load i64, i64* %r, align 8, !dbg !3010, !tbaa !1876
  %cmp42 = icmp ne i64 %68, 0, !dbg !3012
  br i1 %cmp42, label %if.then.43, label %if.end.55, !dbg !3013

if.then.43:                                       ; preds = %do.end
  %69 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3014, !tbaa !1464
  %outbuf44 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %69, i32 0, i32 3, !dbg !3018
  %70 = load i8*, i8** %outbuf44, align 8, !dbg !3018, !tbaa !2587
  %add.ptr45 = getelementptr i8, i8* %70, i64 1, !dbg !3019
  %71 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3020, !tbaa !1464
  %outbuf_end46 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %71, i32 0, i32 4, !dbg !3021
  %72 = load i8*, i8** %outbuf_end46, align 8, !dbg !3021, !tbaa !2596
  %cmp47 = icmp ugt i8* %add.ptr45, %72, !dbg !3022
  br i1 %cmp47, label %if.then.48, label %if.end.53, !dbg !3023

if.then.48:                                       ; preds = %if.then.43
  %73 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3024, !tbaa !1464
  %call49 = call i32 @expand_encodebuffer(%struct.MultibyteEncodeBuffer* %73, i64 1), !dbg !3027
  %cmp50 = icmp eq i32 %call49, -1, !dbg !3028
  br i1 %cmp50, label %if.then.51, label %if.end.52, !dbg !3029

if.then.51:                                       ; preds = %if.then.48
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !3030

if.end.52:                                        ; preds = %if.then.48
  br label %if.end.53, !dbg !3031

if.end.53:                                        ; preds = %if.end.52, %if.then.43
  %74 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3033, !tbaa !1464
  %outbuf54 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %74, i32 0, i32 3, !dbg !3034
  %75 = load i8*, i8** %outbuf54, align 8, !dbg !3035, !tbaa !2587
  %incdec.ptr = getelementptr i8, i8* %75, i32 1, !dbg !3035
  store i8* %incdec.ptr, i8** %outbuf54, align 8, !dbg !3035, !tbaa !2587
  store i8 63, i8* %75, align 1, !dbg !3036, !tbaa !3037
  br label %if.end.55, !dbg !3038

if.end.55:                                        ; preds = %if.end.53, %do.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !3039
  br label %cleanup.56, !dbg !3039

cleanup.56:                                       ; preds = %if.then.51, %if.then.11, %if.end.55, %cleanup
  %76 = bitcast i8** %data to i8*, !dbg !3040
  call void @llvm.lifetime.end(i64 8, i8* %76) #1, !dbg !3040
  %77 = bitcast i32* %kind to i8*, !dbg !3040
  call void @llvm.lifetime.end(i64 4, i8* %77) #1, !dbg !3040
  %78 = bitcast i64* %inpos8 to i8*, !dbg !3040
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !3040
  %79 = bitcast i64* %r to i8*, !dbg !3040
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !3040
  %80 = bitcast %struct._object** %replchar to i8*, !dbg !3040
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !3040
  %cleanup.dest.61 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.61, label %cleanup.236 [
    i32 0, label %cleanup.cont
    i32 3, label %errorexit
  ]

cleanup.cont:                                     ; preds = %cleanup.56
  br label %if.end.62, !dbg !3042

if.end.62:                                        ; preds = %cleanup.cont, %if.end.5
  %81 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !3043, !tbaa !1464
  %cmp63 = icmp eq %struct._object* %81, inttoptr (i64 2 to %struct._object*), !dbg !3045
  br i1 %cmp63, label %if.then.65, label %lor.lhs.false, !dbg !3046

lor.lhs.false:                                    ; preds = %if.end.62
  %82 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !3047, !tbaa !1464
  %cmp64 = icmp eq %struct._object* %82, inttoptr (i64 3 to %struct._object*), !dbg !3049
  br i1 %cmp64, label %if.then.65, label %if.end.67, !dbg !3050

if.then.65:                                       ; preds = %lor.lhs.false, %if.end.62
  %83 = load i64, i64* %esize, align 8, !dbg !3051, !tbaa !1876
  %84 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3053, !tbaa !1464
  %inpos66 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %84, i32 0, i32 1, !dbg !3054
  %85 = load i64, i64* %inpos66, align 8, !dbg !3055, !tbaa !2521
  %add = add i64 %85, %83, !dbg !3055
  store i64 %add, i64* %inpos66, align 8, !dbg !3055, !tbaa !2521
  store i32 0, i32* %retval, !dbg !3056
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.236, !dbg !3056

if.end.67:                                        ; preds = %lor.lhs.false
  %86 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3057, !tbaa !1464
  %inpos68 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %86, i32 0, i32 1, !dbg !3058
  %87 = load i64, i64* %inpos68, align 8, !dbg !3058, !tbaa !2521
  store i64 %87, i64* %start, align 8, !dbg !3059, !tbaa !1876
  %88 = load i64, i64* %start, align 8, !dbg !3060, !tbaa !1876
  %89 = load i64, i64* %esize, align 8, !dbg !3061, !tbaa !1876
  %add69 = add i64 %88, %89, !dbg !3062
  store i64 %add69, i64* %end, align 8, !dbg !3063, !tbaa !1876
  %90 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3064, !tbaa !1464
  %excobj = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %90, i32 0, i32 5, !dbg !3066
  %91 = load %struct._object*, %struct._object** %excobj, align 8, !dbg !3066, !tbaa !2510
  %cmp70 = icmp eq %struct._object* %91, null, !dbg !3067
  br i1 %cmp70, label %if.then.71, label %if.else.78, !dbg !3068

if.then.71:                                       ; preds = %if.end.67
  %92 = load %struct._object*, %struct._object** @PyExc_UnicodeEncodeError, align 8, !dbg !3069, !tbaa !1464
  %93 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec.addr, align 8, !dbg !3071, !tbaa !1464
  %encoding = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %93, i32 0, i32 0, !dbg !3072
  %94 = load i8*, i8** %encoding, align 8, !dbg !3072, !tbaa !3073
  %95 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3074, !tbaa !1464
  %inobj = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %95, i32 0, i32 0, !dbg !3075
  %96 = load %struct._object*, %struct._object** %inobj, align 8, !dbg !3075, !tbaa !2518
  %97 = load i64, i64* %start, align 8, !dbg !3076, !tbaa !1876
  %98 = load i64, i64* %end, align 8, !dbg !3077, !tbaa !1876
  %99 = load i8*, i8** %reason, align 8, !dbg !3078, !tbaa !1464
  %call72 = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %92, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), i8* %94, %struct._object* %96, i64 %97, i64 %98, i8* %99), !dbg !3079
  %100 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3080, !tbaa !1464
  %excobj73 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %100, i32 0, i32 5, !dbg !3081
  store %struct._object* %call72, %struct._object** %excobj73, align 8, !dbg !3082, !tbaa !2510
  %101 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3083, !tbaa !1464
  %excobj74 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %101, i32 0, i32 5, !dbg !3085
  %102 = load %struct._object*, %struct._object** %excobj74, align 8, !dbg !3085, !tbaa !2510
  %cmp75 = icmp eq %struct._object* %102, null, !dbg !3086
  br i1 %cmp75, label %if.then.76, label %if.end.77, !dbg !3087

if.then.76:                                       ; preds = %if.then.71
  br label %errorexit, !dbg !3088

if.end.77:                                        ; preds = %if.then.71
  br label %if.end.92, !dbg !3089

if.else.78:                                       ; preds = %if.end.67
  %103 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3090, !tbaa !1464
  %excobj79 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %103, i32 0, i32 5, !dbg !3092
  %104 = load %struct._object*, %struct._object** %excobj79, align 8, !dbg !3092, !tbaa !2510
  %105 = load i64, i64* %start, align 8, !dbg !3093, !tbaa !1876
  %call80 = call i32 @PyUnicodeEncodeError_SetStart(%struct._object* %104, i64 %105), !dbg !3094
  %cmp81 = icmp ne i32 %call80, 0, !dbg !3095
  br i1 %cmp81, label %if.then.90, label %lor.lhs.false.82, !dbg !3096

lor.lhs.false.82:                                 ; preds = %if.else.78
  %106 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3097, !tbaa !1464
  %excobj83 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %106, i32 0, i32 5, !dbg !3098
  %107 = load %struct._object*, %struct._object** %excobj83, align 8, !dbg !3098, !tbaa !2510
  %108 = load i64, i64* %end, align 8, !dbg !3099, !tbaa !1876
  %call84 = call i32 @PyUnicodeEncodeError_SetEnd(%struct._object* %107, i64 %108), !dbg !3100
  %cmp85 = icmp ne i32 %call84, 0, !dbg !3101
  br i1 %cmp85, label %if.then.90, label %lor.lhs.false.86, !dbg !3102

lor.lhs.false.86:                                 ; preds = %lor.lhs.false.82
  %109 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3103, !tbaa !1464
  %excobj87 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %109, i32 0, i32 5, !dbg !3104
  %110 = load %struct._object*, %struct._object** %excobj87, align 8, !dbg !3104, !tbaa !2510
  %111 = load i8*, i8** %reason, align 8, !dbg !3105, !tbaa !1464
  %call88 = call i32 @PyUnicodeEncodeError_SetReason(%struct._object* %110, i8* %111), !dbg !3106
  %cmp89 = icmp ne i32 %call88, 0, !dbg !3107
  br i1 %cmp89, label %if.then.90, label %if.end.91, !dbg !3108

if.then.90:                                       ; preds = %lor.lhs.false.86, %lor.lhs.false.82, %if.else.78
  br label %errorexit, !dbg !3109

if.end.91:                                        ; preds = %lor.lhs.false.86
  br label %if.end.92

if.end.92:                                        ; preds = %if.end.91, %if.end.77
  %112 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !3110, !tbaa !1464
  %cmp93 = icmp eq %struct._object* %112, inttoptr (i64 1 to %struct._object*), !dbg !3112
  br i1 %cmp93, label %if.then.94, label %if.end.97, !dbg !3113

if.then.94:                                       ; preds = %if.end.92
  %113 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3114, !tbaa !1464
  %excobj95 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %113, i32 0, i32 5, !dbg !3116
  %114 = load %struct._object*, %struct._object** %excobj95, align 8, !dbg !3116, !tbaa !2510
  %call96 = call %struct._object* @PyCodec_StrictErrors(%struct._object* %114), !dbg !3117
  br label %errorexit, !dbg !3118

if.end.97:                                        ; preds = %if.end.92
  %115 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !3119, !tbaa !1464
  %116 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3120, !tbaa !1464
  %excobj98 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %116, i32 0, i32 5, !dbg !3121
  %117 = load %struct._object*, %struct._object** %excobj98, align 8, !dbg !3121, !tbaa !2510
  %call99 = call %struct._object* @call_error_callback(%struct._object* %115, %struct._object* %117), !dbg !3122
  store %struct._object* %call99, %struct._object** %retobj, align 8, !dbg !3123, !tbaa !1464
  %118 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !3124, !tbaa !1464
  %cmp100 = icmp eq %struct._object* %118, null, !dbg !3126
  br i1 %cmp100, label %if.then.101, label %if.end.102, !dbg !3127

if.then.101:                                      ; preds = %if.end.97
  br label %errorexit, !dbg !3128

if.end.102:                                       ; preds = %if.end.97
  %119 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !3129, !tbaa !1464
  %ob_type103 = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 1, !dbg !3131
  %120 = load %struct._typeobject*, %struct._typeobject** %ob_type103, align 8, !dbg !3131, !tbaa !1563
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %120, i32 0, i32 19, !dbg !3132
  %121 = load i64, i64* %tp_flags, align 8, !dbg !3132, !tbaa !1947
  %and = and i64 %121, 67108864, !dbg !3133
  %cmp104 = icmp ne i64 %and, 0, !dbg !3134
  br i1 %cmp104, label %lor.lhs.false.105, label %if.then.123, !dbg !3135

lor.lhs.false.105:                                ; preds = %if.end.102
  %122 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !3136, !tbaa !1464
  %123 = bitcast %struct._object* %122 to %struct.PyVarObject*, !dbg !3138
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %123, i32 0, i32 1, !dbg !3139
  %124 = load i64, i64* %ob_size, align 8, !dbg !3139, !tbaa !2592
  %cmp106 = icmp ne i64 %124, 2, !dbg !3140
  br i1 %cmp106, label %if.then.123, label %lor.lhs.false.107, !dbg !3141

lor.lhs.false.107:                                ; preds = %lor.lhs.false.105
  %125 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !3142, !tbaa !1464
  %126 = bitcast %struct._object* %125 to %struct.PyTupleObject*, !dbg !3143
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %126, i32 0, i32 1, !dbg !3144
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !3145
  %127 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !3145, !tbaa !1464
  store %struct._object* %127, %struct._object** %tobj, align 8, !dbg !3146, !tbaa !1464
  %ob_type108 = getelementptr inbounds %struct._object, %struct._object* %127, i32 0, i32 1, !dbg !3147
  %128 = load %struct._typeobject*, %struct._typeobject** %ob_type108, align 8, !dbg !3147, !tbaa !1563
  %tp_flags109 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %128, i32 0, i32 19, !dbg !3148
  %129 = load i64, i64* %tp_flags109, align 8, !dbg !3148, !tbaa !1947
  %and110 = and i64 %129, 268435456, !dbg !3149
  %cmp111 = icmp ne i64 %and110, 0, !dbg !3150
  br i1 %cmp111, label %lor.lhs.false.116, label %land.lhs.true, !dbg !3151

land.lhs.true:                                    ; preds = %lor.lhs.false.107
  %130 = load %struct._object*, %struct._object** %tobj, align 8, !dbg !3152, !tbaa !1464
  %ob_type112 = getelementptr inbounds %struct._object, %struct._object* %130, i32 0, i32 1, !dbg !3153
  %131 = load %struct._typeobject*, %struct._typeobject** %ob_type112, align 8, !dbg !3153, !tbaa !1563
  %tp_flags113 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %131, i32 0, i32 19, !dbg !3154
  %132 = load i64, i64* %tp_flags113, align 8, !dbg !3154, !tbaa !1947
  %and114 = and i64 %132, 134217728, !dbg !3155
  %cmp115 = icmp ne i64 %and114, 0, !dbg !3156
  br i1 %cmp115, label %lor.lhs.false.116, label %if.then.123, !dbg !3157

lor.lhs.false.116:                                ; preds = %land.lhs.true, %lor.lhs.false.107
  %133 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !3158, !tbaa !1464
  %134 = bitcast %struct._object* %133 to %struct.PyTupleObject*, !dbg !3159
  %ob_item117 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %134, i32 0, i32 1, !dbg !3160
  %arrayidx118 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item117, i32 0, i64 1, !dbg !3161
  %135 = load %struct._object*, %struct._object** %arrayidx118, align 8, !dbg !3161, !tbaa !1464
  %ob_type119 = getelementptr inbounds %struct._object, %struct._object* %135, i32 0, i32 1, !dbg !3162
  %136 = load %struct._typeobject*, %struct._typeobject** %ob_type119, align 8, !dbg !3162, !tbaa !1563
  %tp_flags120 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %136, i32 0, i32 19, !dbg !3163
  %137 = load i64, i64* %tp_flags120, align 8, !dbg !3163, !tbaa !1947
  %and121 = and i64 %137, 16777216, !dbg !3164
  %cmp122 = icmp ne i64 %and121, 0, !dbg !3165
  br i1 %cmp122, label %if.end.124, label %if.then.123, !dbg !3166

if.then.123:                                      ; preds = %lor.lhs.false.116, %land.lhs.true, %lor.lhs.false.105, %if.end.102
  %138 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3167, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %138, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14, i32 0, i32 0)), !dbg !3169
  br label %errorexit, !dbg !3170

if.end.124:                                       ; preds = %lor.lhs.false.116
  %139 = load %struct._object*, %struct._object** %tobj, align 8, !dbg !3171, !tbaa !1464
  %ob_type125 = getelementptr inbounds %struct._object, %struct._object* %139, i32 0, i32 1, !dbg !3172
  %140 = load %struct._typeobject*, %struct._typeobject** %ob_type125, align 8, !dbg !3172, !tbaa !1563
  %tp_flags126 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %140, i32 0, i32 19, !dbg !3173
  %141 = load i64, i64* %tp_flags126, align 8, !dbg !3173, !tbaa !1947
  %and127 = and i64 %141, 268435456, !dbg !3174
  %cmp128 = icmp ne i64 %and127, 0, !dbg !3175
  br i1 %cmp128, label %if.then.129, label %if.else.138, !dbg !3176

if.then.129:                                      ; preds = %if.end.124
  %142 = bitcast i64* %inpos130 to i8*, !dbg !3177
  call void @llvm.lifetime.start(i64 8, i8* %142) #1, !dbg !3177
  call void @llvm.dbg.declare(metadata i64* %inpos130, metadata !756, metadata !1451), !dbg !3178
  %143 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec.addr, align 8, !dbg !3179, !tbaa !1464
  %144 = load %union.MultibyteCodec_State*, %union.MultibyteCodec_State** %state.addr, align 8, !dbg !3180, !tbaa !1464
  %145 = load %struct._object*, %struct._object** %tobj, align 8, !dbg !3181, !tbaa !1464
  %call131 = call %struct._object* @multibytecodec_encode(%struct.MultibyteCodec* %143, %union.MultibyteCodec_State* %144, %struct._object* %145, i64* %inpos130, %struct._object* inttoptr (i64 1 to %struct._object*), i32 1), !dbg !3182
  store %struct._object* %call131, %struct._object** %retstr, align 8, !dbg !3183, !tbaa !1464
  %146 = load %struct._object*, %struct._object** %retstr, align 8, !dbg !3184, !tbaa !1464
  %cmp132 = icmp eq %struct._object* %146, null, !dbg !3186
  br i1 %cmp132, label %if.then.133, label %if.end.134, !dbg !3187

if.then.133:                                      ; preds = %if.then.129
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.135, !dbg !3188

if.end.134:                                       ; preds = %if.then.129
  store i32 0, i32* %cleanup.dest.slot, !dbg !3189
  br label %cleanup.135, !dbg !3189

cleanup.135:                                      ; preds = %if.then.133, %if.end.134
  %147 = bitcast i64* %inpos130 to i8*, !dbg !3190
  call void @llvm.lifetime.end(i64 8, i8* %147) #1, !dbg !3190
  %cleanup.dest.136 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.136, label %cleanup.236 [
    i32 0, label %cleanup.cont.137
    i32 3, label %errorexit
  ]

cleanup.cont.137:                                 ; preds = %cleanup.135
  br label %if.end.140, !dbg !3192

if.else.138:                                      ; preds = %if.end.124
  %148 = load %struct._object*, %struct._object** %tobj, align 8, !dbg !3193, !tbaa !1464
  %ob_refcnt139 = getelementptr inbounds %struct._object, %struct._object* %148, i32 0, i32 0, !dbg !3195
  %149 = load i64, i64* %ob_refcnt139, align 8, !dbg !3196, !tbaa !1498
  %inc = add i64 %149, 1, !dbg !3196
  store i64 %inc, i64* %ob_refcnt139, align 8, !dbg !3196, !tbaa !1498
  %150 = load %struct._object*, %struct._object** %tobj, align 8, !dbg !3197, !tbaa !1464
  store %struct._object* %150, %struct._object** %retstr, align 8, !dbg !3198, !tbaa !1464
  br label %if.end.140

if.end.140:                                       ; preds = %if.else.138, %cleanup.cont.137
  %151 = load %struct._object*, %struct._object** %retstr, align 8, !dbg !3199, !tbaa !1464
  %152 = bitcast %struct._object* %151 to %struct.PyVarObject*, !dbg !3200
  %ob_size141 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %152, i32 0, i32 1, !dbg !3201
  %153 = load i64, i64* %ob_size141, align 8, !dbg !3201, !tbaa !2592
  store i64 %153, i64* %retstrsize, align 8, !dbg !3202, !tbaa !1876
  %154 = load i64, i64* %retstrsize, align 8, !dbg !3203, !tbaa !1876
  %cmp142 = icmp slt i64 %154, 1, !dbg !3206
  br i1 %cmp142, label %if.then.148, label %lor.lhs.false.143, !dbg !3207

lor.lhs.false.143:                                ; preds = %if.end.140
  %155 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3208, !tbaa !1464
  %outbuf144 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %155, i32 0, i32 3, !dbg !3210
  %156 = load i8*, i8** %outbuf144, align 8, !dbg !3210, !tbaa !2587
  %157 = load i64, i64* %retstrsize, align 8, !dbg !3211, !tbaa !1876
  %add.ptr145 = getelementptr i8, i8* %156, i64 %157, !dbg !3212
  %158 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3213, !tbaa !1464
  %outbuf_end146 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %158, i32 0, i32 4, !dbg !3214
  %159 = load i8*, i8** %outbuf_end146, align 8, !dbg !3214, !tbaa !2596
  %cmp147 = icmp ugt i8* %add.ptr145, %159, !dbg !3215
  br i1 %cmp147, label %if.then.148, label %if.end.153, !dbg !3216

if.then.148:                                      ; preds = %lor.lhs.false.143, %if.end.140
  %160 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3217, !tbaa !1464
  %161 = load i64, i64* %retstrsize, align 8, !dbg !3221, !tbaa !1876
  %call149 = call i32 @expand_encodebuffer(%struct.MultibyteEncodeBuffer* %160, i64 %161), !dbg !3222
  %cmp150 = icmp eq i32 %call149, -1, !dbg !3223
  br i1 %cmp150, label %if.then.151, label %if.end.152, !dbg !3224

if.then.151:                                      ; preds = %if.then.148
  br label %errorexit, !dbg !3225

if.end.152:                                       ; preds = %if.then.148
  br label %if.end.153, !dbg !3227

if.end.153:                                       ; preds = %if.end.152, %lor.lhs.false.143
  %162 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3229, !tbaa !1464
  %outbuf154 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %162, i32 0, i32 3, !dbg !3230
  %163 = load i8*, i8** %outbuf154, align 8, !dbg !3230, !tbaa !2587
  %164 = load %struct._object*, %struct._object** %retstr, align 8, !dbg !3231, !tbaa !1464
  %165 = bitcast %struct._object* %164 to %struct.PyBytesObject*, !dbg !3232
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %165, i32 0, i32 2, !dbg !3233
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !3234
  %166 = load i64, i64* %retstrsize, align 8, !dbg !3235, !tbaa !1876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %163, i8* %arraydecay, i64 %166, i32 1, i1 false), !dbg !3236
  %167 = load i64, i64* %retstrsize, align 8, !dbg !3237, !tbaa !1876
  %168 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3238, !tbaa !1464
  %outbuf155 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %168, i32 0, i32 3, !dbg !3239
  %169 = load i8*, i8** %outbuf155, align 8, !dbg !3240, !tbaa !2587
  %add.ptr156 = getelementptr i8, i8* %169, i64 %167, !dbg !3240
  store i8* %add.ptr156, i8** %outbuf155, align 8, !dbg !3240, !tbaa !2587
  %170 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !3241, !tbaa !1464
  %171 = bitcast %struct._object* %170 to %struct.PyTupleObject*, !dbg !3242
  %ob_item157 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %171, i32 0, i32 1, !dbg !3243
  %arrayidx158 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item157, i32 0, i64 1, !dbg !3244
  %172 = load %struct._object*, %struct._object** %arrayidx158, align 8, !dbg !3244, !tbaa !1464
  %call159 = call i64 @PyLong_AsSsize_t(%struct._object* %172), !dbg !3245
  store i64 %call159, i64* %newpos, align 8, !dbg !3246, !tbaa !1876
  %173 = load i64, i64* %newpos, align 8, !dbg !3247, !tbaa !1876
  %cmp160 = icmp slt i64 %173, 0, !dbg !3249
  br i1 %cmp160, label %land.lhs.true.161, label %if.end.166, !dbg !3250

land.lhs.true.161:                                ; preds = %if.end.153
  %call162 = call %struct._object* @PyErr_Occurred(), !dbg !3251
  %tobool163 = icmp ne %struct._object* %call162, null, !dbg !3251
  br i1 %tobool163, label %if.end.166, label %if.then.164, !dbg !3253

if.then.164:                                      ; preds = %land.lhs.true.161
  %174 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3254, !tbaa !1464
  %inlen = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %174, i32 0, i32 2, !dbg !3255
  %175 = load i64, i64* %inlen, align 8, !dbg !3255, !tbaa !2525
  %176 = load i64, i64* %newpos, align 8, !dbg !3256, !tbaa !1876
  %add165 = add i64 %176, %175, !dbg !3256
  store i64 %add165, i64* %newpos, align 8, !dbg !3256, !tbaa !1876
  br label %if.end.166, !dbg !3257

if.end.166:                                       ; preds = %if.then.164, %land.lhs.true.161, %if.end.153
  %177 = load i64, i64* %newpos, align 8, !dbg !3258, !tbaa !1876
  %cmp167 = icmp slt i64 %177, 0, !dbg !3260
  br i1 %cmp167, label %if.then.171, label %lor.lhs.false.168, !dbg !3261

lor.lhs.false.168:                                ; preds = %if.end.166
  %178 = load i64, i64* %newpos, align 8, !dbg !3262, !tbaa !1876
  %179 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3264, !tbaa !1464
  %inlen169 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %179, i32 0, i32 2, !dbg !3265
  %180 = load i64, i64* %inlen169, align 8, !dbg !3265, !tbaa !2525
  %cmp170 = icmp sgt i64 %178, %180, !dbg !3266
  br i1 %cmp170, label %if.then.171, label %if.end.173, !dbg !3267

if.then.171:                                      ; preds = %lor.lhs.false.168, %if.end.166
  call void @PyErr_Clear(), !dbg !3268
  %181 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !3270, !tbaa !1464
  %182 = load i64, i64* %newpos, align 8, !dbg !3271, !tbaa !1876
  %call172 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %181, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.15, i32 0, i32 0), i64 %182), !dbg !3272
  br label %errorexit, !dbg !3273

if.end.173:                                       ; preds = %lor.lhs.false.168
  %183 = load i64, i64* %newpos, align 8, !dbg !3274, !tbaa !1876
  %184 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3275, !tbaa !1464
  %inpos174 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %184, i32 0, i32 1, !dbg !3276
  store i64 %183, i64* %inpos174, align 8, !dbg !3277, !tbaa !2521
  br label %do.body.175, !dbg !3278

do.body.175:                                      ; preds = %if.end.173
  %185 = bitcast %struct._object** %_py_decref_tmp176 to i8*, !dbg !3279
  call void @llvm.lifetime.start(i64 8, i8* %185) #1, !dbg !3279
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp176, metadata !759, metadata !1451), !dbg !3281
  %186 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !3282, !tbaa !1464
  store %struct._object* %186, %struct._object** %_py_decref_tmp176, align 8, !dbg !3281, !tbaa !1464
  %187 = load %struct._object*, %struct._object** %_py_decref_tmp176, align 8, !dbg !3283, !tbaa !1464
  %ob_refcnt177 = getelementptr inbounds %struct._object, %struct._object* %187, i32 0, i32 0, !dbg !3285
  %188 = load i64, i64* %ob_refcnt177, align 8, !dbg !3286, !tbaa !1498
  %dec178 = add i64 %188, -1, !dbg !3286
  store i64 %dec178, i64* %ob_refcnt177, align 8, !dbg !3286, !tbaa !1498
  %cmp179 = icmp ne i64 %dec178, 0, !dbg !3287
  br i1 %cmp179, label %if.then.180, label %if.else.181, !dbg !3288

if.then.180:                                      ; preds = %do.body.175
  br label %if.end.184, !dbg !3289

if.else.181:                                      ; preds = %do.body.175
  %189 = load %struct._object*, %struct._object** %_py_decref_tmp176, align 8, !dbg !3291, !tbaa !1464
  %ob_type182 = getelementptr inbounds %struct._object, %struct._object* %189, i32 0, i32 1, !dbg !3293
  %190 = load %struct._typeobject*, %struct._typeobject** %ob_type182, align 8, !dbg !3293, !tbaa !1563
  %tp_dealloc183 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %190, i32 0, i32 4, !dbg !3294
  %191 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc183, align 8, !dbg !3294, !tbaa !1565
  %192 = load %struct._object*, %struct._object** %_py_decref_tmp176, align 8, !dbg !3295, !tbaa !1464
  call void %191(%struct._object* %192), !dbg !3296
  br label %if.end.184

if.end.184:                                       ; preds = %if.else.181, %if.then.180
  %193 = bitcast %struct._object** %_py_decref_tmp176 to i8*, !dbg !3297
  call void @llvm.lifetime.end(i64 8, i8* %193) #1, !dbg !3297
  br label %do.cond.185, !dbg !3299

do.cond.185:                                      ; preds = %if.end.184
  br label %do.end.186, !dbg !3300

do.end.186:                                       ; preds = %do.cond.185
  br label %do.body.187, !dbg !3302

do.body.187:                                      ; preds = %do.end.186
  %194 = bitcast %struct._object** %_py_decref_tmp188 to i8*, !dbg !3303
  call void @llvm.lifetime.start(i64 8, i8* %194) #1, !dbg !3303
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp188, metadata !761, metadata !1451), !dbg !3305
  %195 = load %struct._object*, %struct._object** %retstr, align 8, !dbg !3306, !tbaa !1464
  store %struct._object* %195, %struct._object** %_py_decref_tmp188, align 8, !dbg !3305, !tbaa !1464
  %196 = load %struct._object*, %struct._object** %_py_decref_tmp188, align 8, !dbg !3307, !tbaa !1464
  %ob_refcnt189 = getelementptr inbounds %struct._object, %struct._object* %196, i32 0, i32 0, !dbg !3309
  %197 = load i64, i64* %ob_refcnt189, align 8, !dbg !3310, !tbaa !1498
  %dec190 = add i64 %197, -1, !dbg !3310
  store i64 %dec190, i64* %ob_refcnt189, align 8, !dbg !3310, !tbaa !1498
  %cmp191 = icmp ne i64 %dec190, 0, !dbg !3311
  br i1 %cmp191, label %if.then.192, label %if.else.193, !dbg !3312

if.then.192:                                      ; preds = %do.body.187
  br label %if.end.196, !dbg !3313

if.else.193:                                      ; preds = %do.body.187
  %198 = load %struct._object*, %struct._object** %_py_decref_tmp188, align 8, !dbg !3315, !tbaa !1464
  %ob_type194 = getelementptr inbounds %struct._object, %struct._object* %198, i32 0, i32 1, !dbg !3317
  %199 = load %struct._typeobject*, %struct._typeobject** %ob_type194, align 8, !dbg !3317, !tbaa !1563
  %tp_dealloc195 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %199, i32 0, i32 4, !dbg !3318
  %200 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc195, align 8, !dbg !3318, !tbaa !1565
  %201 = load %struct._object*, %struct._object** %_py_decref_tmp188, align 8, !dbg !3319, !tbaa !1464
  call void %200(%struct._object* %201), !dbg !3320
  br label %if.end.196

if.end.196:                                       ; preds = %if.else.193, %if.then.192
  %202 = bitcast %struct._object** %_py_decref_tmp188 to i8*, !dbg !3321
  call void @llvm.lifetime.end(i64 8, i8* %202) #1, !dbg !3321
  br label %do.cond.197, !dbg !3322

do.cond.197:                                      ; preds = %if.end.196
  br label %do.end.198, !dbg !3323

do.end.198:                                       ; preds = %do.cond.197
  store i32 0, i32* %retval, !dbg !3325
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.236, !dbg !3325

errorexit:                                        ; preds = %cleanup.135, %cleanup.56, %if.then.171, %if.then.151, %if.then.123, %if.then.101, %if.then.94, %if.then.90, %if.then.76, %if.then.2
  br label %do.body.199, !dbg !3326

do.body.199:                                      ; preds = %errorexit
  %203 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3327
  call void @llvm.lifetime.start(i64 8, i8* %203) #1, !dbg !3327
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !763, metadata !1451), !dbg !3329
  %204 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !3330, !tbaa !1464
  store %struct._object* %204, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3329, !tbaa !1464
  %205 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3331, !tbaa !1464
  %cmp200 = icmp ne %struct._object* %205, null, !dbg !3332
  br i1 %cmp200, label %if.then.201, label %if.end.214, !dbg !3333

if.then.201:                                      ; preds = %do.body.199
  br label %do.body.202, !dbg !3334

do.body.202:                                      ; preds = %if.then.201
  %206 = bitcast %struct._object** %_py_decref_tmp203 to i8*, !dbg !3336
  call void @llvm.lifetime.start(i64 8, i8* %206) #1, !dbg !3336
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp203, metadata !765, metadata !1451), !dbg !3338
  %207 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3339, !tbaa !1464
  store %struct._object* %207, %struct._object** %_py_decref_tmp203, align 8, !dbg !3338, !tbaa !1464
  %208 = load %struct._object*, %struct._object** %_py_decref_tmp203, align 8, !dbg !3340, !tbaa !1464
  %ob_refcnt204 = getelementptr inbounds %struct._object, %struct._object* %208, i32 0, i32 0, !dbg !3342
  %209 = load i64, i64* %ob_refcnt204, align 8, !dbg !3343, !tbaa !1498
  %dec205 = add i64 %209, -1, !dbg !3343
  store i64 %dec205, i64* %ob_refcnt204, align 8, !dbg !3343, !tbaa !1498
  %cmp206 = icmp ne i64 %dec205, 0, !dbg !3344
  br i1 %cmp206, label %if.then.207, label %if.else.208, !dbg !3345

if.then.207:                                      ; preds = %do.body.202
  br label %if.end.211, !dbg !3346

if.else.208:                                      ; preds = %do.body.202
  %210 = load %struct._object*, %struct._object** %_py_decref_tmp203, align 8, !dbg !3348, !tbaa !1464
  %ob_type209 = getelementptr inbounds %struct._object, %struct._object* %210, i32 0, i32 1, !dbg !3350
  %211 = load %struct._typeobject*, %struct._typeobject** %ob_type209, align 8, !dbg !3350, !tbaa !1563
  %tp_dealloc210 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %211, i32 0, i32 4, !dbg !3351
  %212 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc210, align 8, !dbg !3351, !tbaa !1565
  %213 = load %struct._object*, %struct._object** %_py_decref_tmp203, align 8, !dbg !3352, !tbaa !1464
  call void %212(%struct._object* %213), !dbg !3353
  br label %if.end.211

if.end.211:                                       ; preds = %if.else.208, %if.then.207
  %214 = bitcast %struct._object** %_py_decref_tmp203 to i8*, !dbg !3354
  call void @llvm.lifetime.end(i64 8, i8* %214) #1, !dbg !3354
  br label %do.cond.212, !dbg !3356

do.cond.212:                                      ; preds = %if.end.211
  br label %do.end.213, !dbg !3357

do.end.213:                                       ; preds = %do.cond.212
  br label %if.end.214, !dbg !3359

if.end.214:                                       ; preds = %do.end.213, %do.body.199
  %215 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3361
  call void @llvm.lifetime.end(i64 8, i8* %215) #1, !dbg !3361
  br label %do.cond.215, !dbg !3364

do.cond.215:                                      ; preds = %if.end.214
  br label %do.end.216, !dbg !3365

do.end.216:                                       ; preds = %do.cond.215
  br label %do.body.217, !dbg !3367

do.body.217:                                      ; preds = %do.end.216
  %216 = bitcast %struct._object** %_py_xdecref_tmp218 to i8*, !dbg !3368
  call void @llvm.lifetime.start(i64 8, i8* %216) #1, !dbg !3368
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp218, metadata !768, metadata !1451), !dbg !3370
  %217 = load %struct._object*, %struct._object** %retstr, align 8, !dbg !3371, !tbaa !1464
  store %struct._object* %217, %struct._object** %_py_xdecref_tmp218, align 8, !dbg !3370, !tbaa !1464
  %218 = load %struct._object*, %struct._object** %_py_xdecref_tmp218, align 8, !dbg !3372, !tbaa !1464
  %cmp219 = icmp ne %struct._object* %218, null, !dbg !3373
  br i1 %cmp219, label %if.then.220, label %if.end.233, !dbg !3374

if.then.220:                                      ; preds = %do.body.217
  br label %do.body.221, !dbg !3375

do.body.221:                                      ; preds = %if.then.220
  %219 = bitcast %struct._object** %_py_decref_tmp222 to i8*, !dbg !3377
  call void @llvm.lifetime.start(i64 8, i8* %219) #1, !dbg !3377
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp222, metadata !770, metadata !1451), !dbg !3379
  %220 = load %struct._object*, %struct._object** %_py_xdecref_tmp218, align 8, !dbg !3380, !tbaa !1464
  store %struct._object* %220, %struct._object** %_py_decref_tmp222, align 8, !dbg !3379, !tbaa !1464
  %221 = load %struct._object*, %struct._object** %_py_decref_tmp222, align 8, !dbg !3381, !tbaa !1464
  %ob_refcnt223 = getelementptr inbounds %struct._object, %struct._object* %221, i32 0, i32 0, !dbg !3383
  %222 = load i64, i64* %ob_refcnt223, align 8, !dbg !3384, !tbaa !1498
  %dec224 = add i64 %222, -1, !dbg !3384
  store i64 %dec224, i64* %ob_refcnt223, align 8, !dbg !3384, !tbaa !1498
  %cmp225 = icmp ne i64 %dec224, 0, !dbg !3385
  br i1 %cmp225, label %if.then.226, label %if.else.227, !dbg !3386

if.then.226:                                      ; preds = %do.body.221
  br label %if.end.230, !dbg !3387

if.else.227:                                      ; preds = %do.body.221
  %223 = load %struct._object*, %struct._object** %_py_decref_tmp222, align 8, !dbg !3389, !tbaa !1464
  %ob_type228 = getelementptr inbounds %struct._object, %struct._object* %223, i32 0, i32 1, !dbg !3391
  %224 = load %struct._typeobject*, %struct._typeobject** %ob_type228, align 8, !dbg !3391, !tbaa !1563
  %tp_dealloc229 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %224, i32 0, i32 4, !dbg !3392
  %225 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc229, align 8, !dbg !3392, !tbaa !1565
  %226 = load %struct._object*, %struct._object** %_py_decref_tmp222, align 8, !dbg !3393, !tbaa !1464
  call void %225(%struct._object* %226), !dbg !3394
  br label %if.end.230

if.end.230:                                       ; preds = %if.else.227, %if.then.226
  %227 = bitcast %struct._object** %_py_decref_tmp222 to i8*, !dbg !3395
  call void @llvm.lifetime.end(i64 8, i8* %227) #1, !dbg !3395
  br label %do.cond.231, !dbg !3397

do.cond.231:                                      ; preds = %if.end.230
  br label %do.end.232, !dbg !3398

do.end.232:                                       ; preds = %do.cond.231
  br label %if.end.233, !dbg !3400

if.end.233:                                       ; preds = %do.end.232, %do.body.217
  %228 = bitcast %struct._object** %_py_xdecref_tmp218 to i8*, !dbg !3402
  call void @llvm.lifetime.end(i64 8, i8* %228) #1, !dbg !3402
  br label %do.cond.234, !dbg !3403

do.cond.234:                                      ; preds = %if.end.233
  br label %do.end.235, !dbg !3404

do.end.235:                                       ; preds = %do.cond.234
  store i32 -1, i32* %retval, !dbg !3406
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.236, !dbg !3406

cleanup.236:                                      ; preds = %do.end.235, %do.end.198, %cleanup.135, %if.then.65, %cleanup.56, %sw.default, %sw.bb.4, %if.end
  %229 = bitcast i8** %reason to i8*, !dbg !3407
  call void @llvm.lifetime.end(i64 8, i8* %229) #1, !dbg !3407
  %230 = bitcast i64* %end to i8*, !dbg !3407
  call void @llvm.lifetime.end(i64 8, i8* %230) #1, !dbg !3407
  %231 = bitcast i64* %start to i8*, !dbg !3407
  call void @llvm.lifetime.end(i64 8, i8* %231) #1, !dbg !3407
  %232 = bitcast i64* %esize to i8*, !dbg !3407
  call void @llvm.lifetime.end(i64 8, i8* %232) #1, !dbg !3407
  %233 = bitcast i64* %newpos to i8*, !dbg !3407
  call void @llvm.lifetime.end(i64 8, i8* %233) #1, !dbg !3407
  %234 = bitcast i64* %retstrsize to i8*, !dbg !3407
  call void @llvm.lifetime.end(i64 8, i8* %234) #1, !dbg !3407
  %235 = bitcast %struct._object** %tobj to i8*, !dbg !3407
  call void @llvm.lifetime.end(i64 8, i8* %235) #1, !dbg !3407
  %236 = bitcast %struct._object** %retstr to i8*, !dbg !3407
  call void @llvm.lifetime.end(i64 8, i8* %236) #1, !dbg !3407
  %237 = bitcast %struct._object** %retobj to i8*, !dbg !3407
  call void @llvm.lifetime.end(i64 8, i8* %237) #1, !dbg !3407
  %238 = load i32, i32* %retval, !dbg !3407
  ret i32 %238, !dbg !3407
}

declare i32 @_PyBytes_Resize(%struct._object**, i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @expand_encodebuffer(%struct.MultibyteEncodeBuffer* %buf, i64 %esize) #0 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca %struct.MultibyteEncodeBuffer*, align 8
  %esize.addr = alloca i64, align 8
  %orgpos = alloca i64, align 8
  %orgsize = alloca i64, align 8
  %incsize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.MultibyteEncodeBuffer* %buf, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteEncodeBuffer** %buf.addr, metadata !777, metadata !1451), !dbg !3408
  store i64 %esize, i64* %esize.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i64* %esize.addr, metadata !778, metadata !1451), !dbg !3409
  %0 = bitcast i64* %orgpos to i8*, !dbg !3410
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3410
  call void @llvm.dbg.declare(metadata i64* %orgpos, metadata !779, metadata !1451), !dbg !3411
  %1 = bitcast i64* %orgsize to i8*, !dbg !3410
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3410
  call void @llvm.dbg.declare(metadata i64* %orgsize, metadata !780, metadata !1451), !dbg !3412
  %2 = bitcast i64* %incsize to i8*, !dbg !3410
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3410
  call void @llvm.dbg.declare(metadata i64* %incsize, metadata !781, metadata !1451), !dbg !3413
  %3 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3414, !tbaa !1464
  %outbuf = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %3, i32 0, i32 3, !dbg !3415
  %4 = load i8*, i8** %outbuf, align 8, !dbg !3415, !tbaa !2587
  %5 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3416, !tbaa !1464
  %outobj = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %5, i32 0, i32 6, !dbg !3417
  %6 = load %struct._object*, %struct._object** %outobj, align 8, !dbg !3417, !tbaa !2514
  %7 = bitcast %struct._object* %6 to %struct.PyBytesObject*, !dbg !3418
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %7, i32 0, i32 2, !dbg !3419
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !3420
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !3421
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay to i64, !dbg !3421
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3421
  store i64 %sub.ptr.sub, i64* %orgpos, align 8, !dbg !3422, !tbaa !1876
  %8 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3423, !tbaa !1464
  %outobj1 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %8, i32 0, i32 6, !dbg !3424
  %9 = load %struct._object*, %struct._object** %outobj1, align 8, !dbg !3424, !tbaa !2514
  %10 = bitcast %struct._object* %9 to %struct.PyVarObject*, !dbg !3425
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1, !dbg !3426
  %11 = load i64, i64* %ob_size, align 8, !dbg !3426, !tbaa !2592
  store i64 %11, i64* %orgsize, align 8, !dbg !3427, !tbaa !1876
  %12 = load i64, i64* %esize.addr, align 8, !dbg !3428, !tbaa !1876
  %13 = load i64, i64* %orgsize, align 8, !dbg !3429, !tbaa !1876
  %shr = ashr i64 %13, 1, !dbg !3430
  %cmp = icmp slt i64 %12, %shr, !dbg !3431
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3428

cond.true:                                        ; preds = %entry
  %14 = load i64, i64* %orgsize, align 8, !dbg !3432, !tbaa !1876
  %shr2 = ashr i64 %14, 1, !dbg !3434
  %or = or i64 %shr2, 1, !dbg !3435
  br label %cond.end, !dbg !3428

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %esize.addr, align 8, !dbg !3436, !tbaa !1876
  br label %cond.end, !dbg !3428

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %or, %cond.true ], [ %15, %cond.false ], !dbg !3428
  store i64 %cond, i64* %incsize, align 8, !dbg !3438, !tbaa !1876
  %16 = load i64, i64* %orgsize, align 8, !dbg !3441, !tbaa !1876
  %17 = load i64, i64* %incsize, align 8, !dbg !3443, !tbaa !1876
  %sub = sub i64 9223372036854775807, %17, !dbg !3444
  %cmp3 = icmp sgt i64 %16, %sub, !dbg !3445
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3446

if.then:                                          ; preds = %cond.end
  store i32 -1, i32* %retval, !dbg !3447
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3447

if.end:                                           ; preds = %cond.end
  %18 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3448, !tbaa !1464
  %outobj4 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %18, i32 0, i32 6, !dbg !3450
  %19 = load i64, i64* %orgsize, align 8, !dbg !3451, !tbaa !1876
  %20 = load i64, i64* %incsize, align 8, !dbg !3452, !tbaa !1876
  %add = add i64 %19, %20, !dbg !3453
  %call = call i32 @_PyBytes_Resize(%struct._object** %outobj4, i64 %add), !dbg !3454
  %cmp5 = icmp eq i32 %call, -1, !dbg !3455
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !3456

if.then.6:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !3457
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3457

if.end.7:                                         ; preds = %if.end
  %21 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3458, !tbaa !1464
  %outobj8 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %21, i32 0, i32 6, !dbg !3459
  %22 = load %struct._object*, %struct._object** %outobj8, align 8, !dbg !3459, !tbaa !2514
  %23 = bitcast %struct._object* %22 to %struct.PyBytesObject*, !dbg !3460
  %ob_sval9 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %23, i32 0, i32 2, !dbg !3461
  %arraydecay10 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval9, i32 0, i32 0, !dbg !3462
  %24 = load i64, i64* %orgpos, align 8, !dbg !3463, !tbaa !1876
  %add.ptr = getelementptr i8, i8* %arraydecay10, i64 %24, !dbg !3464
  %25 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3465, !tbaa !1464
  %outbuf11 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %25, i32 0, i32 3, !dbg !3466
  store i8* %add.ptr, i8** %outbuf11, align 8, !dbg !3467, !tbaa !2587
  %26 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3468, !tbaa !1464
  %outobj12 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %26, i32 0, i32 6, !dbg !3469
  %27 = load %struct._object*, %struct._object** %outobj12, align 8, !dbg !3469, !tbaa !2514
  %28 = bitcast %struct._object* %27 to %struct.PyBytesObject*, !dbg !3470
  %ob_sval13 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %28, i32 0, i32 2, !dbg !3471
  %arraydecay14 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval13, i32 0, i32 0, !dbg !3472
  %29 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3473, !tbaa !1464
  %outobj15 = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %29, i32 0, i32 6, !dbg !3474
  %30 = load %struct._object*, %struct._object** %outobj15, align 8, !dbg !3474, !tbaa !2514
  %31 = bitcast %struct._object* %30 to %struct.PyVarObject*, !dbg !3475
  %ob_size16 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %31, i32 0, i32 1, !dbg !3476
  %32 = load i64, i64* %ob_size16, align 8, !dbg !3476, !tbaa !2592
  %add.ptr17 = getelementptr i8, i8* %arraydecay14, i64 %32, !dbg !3477
  %33 = load %struct.MultibyteEncodeBuffer*, %struct.MultibyteEncodeBuffer** %buf.addr, align 8, !dbg !3478, !tbaa !1464
  %outbuf_end = getelementptr inbounds %struct.MultibyteEncodeBuffer, %struct.MultibyteEncodeBuffer* %33, i32 0, i32 4, !dbg !3479
  store i8* %add.ptr17, i8** %outbuf_end, align 8, !dbg !3480, !tbaa !2596
  store i32 0, i32* %retval, !dbg !3481
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3481

cleanup:                                          ; preds = %if.end.7, %if.then.6, %if.then
  %34 = bitcast i64* %incsize to i8*, !dbg !3482
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !3482
  %35 = bitcast i64* %orgsize to i8*, !dbg !3482
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !3482
  %36 = bitcast i64* %orgpos to i8*, !dbg !3482
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !3482
  %37 = load i32, i32* %retval, !dbg !3482
  ret i32 %37, !dbg !3482
}

declare %struct._object* @PyUnicode_FromOrdinal(i32) #3

declare %struct._object* @_PyObject_CallFunction_SizeT(%struct._object*, i8*, ...) #3

declare i32 @PyUnicodeEncodeError_SetStart(%struct._object*, i64) #3

declare i32 @PyUnicodeEncodeError_SetEnd(%struct._object*, i64) #3

declare i32 @PyUnicodeEncodeError_SetReason(%struct._object*, i8*) #3

declare %struct._object* @PyCodec_StrictErrors(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @call_error_callback(%struct._object* %errors, %struct._object* %exc) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %errors.addr = alloca %struct._object*, align 8
  %exc.addr = alloca %struct._object*, align 8
  %args = alloca %struct._object*, align 8
  %cb = alloca %struct._object*, align 8
  %r = alloca %struct._object*, align 8
  %str = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp27 = alloca %struct._object*, align 8
  store %struct._object* %errors, %struct._object** %errors.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %errors.addr, metadata !784, metadata !1451), !dbg !3483
  store %struct._object* %exc, %struct._object** %exc.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %exc.addr, metadata !785, metadata !1451), !dbg !3484
  %0 = bitcast %struct._object** %args to i8*, !dbg !3485
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3485
  call void @llvm.dbg.declare(metadata %struct._object** %args, metadata !786, metadata !1451), !dbg !3486
  %1 = bitcast %struct._object** %cb to i8*, !dbg !3485
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3485
  call void @llvm.dbg.declare(metadata %struct._object** %cb, metadata !787, metadata !1451), !dbg !3487
  %2 = bitcast %struct._object** %r to i8*, !dbg !3485
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3485
  call void @llvm.dbg.declare(metadata %struct._object** %r, metadata !788, metadata !1451), !dbg !3488
  %3 = bitcast i8** %str to i8*, !dbg !3489
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3489
  call void @llvm.dbg.declare(metadata i8** %str, metadata !789, metadata !1451), !dbg !3490
  %4 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !3491, !tbaa !1464
  %call = call i8* @PyUnicode_AsUTF8(%struct._object* %4), !dbg !3492
  store i8* %call, i8** %str, align 8, !dbg !3493, !tbaa !1464
  %5 = load i8*, i8** %str, align 8, !dbg !3494, !tbaa !1464
  %cmp = icmp eq i8* %5, null, !dbg !3496
  br i1 %cmp, label %if.then, label %if.end, !dbg !3497

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3498
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3498

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %str, align 8, !dbg !3499, !tbaa !1464
  %call1 = call %struct._object* @PyCodec_LookupError(i8* %6), !dbg !3500
  store %struct._object* %call1, %struct._object** %cb, align 8, !dbg !3501, !tbaa !1464
  %7 = load %struct._object*, %struct._object** %cb, align 8, !dbg !3502, !tbaa !1464
  %cmp2 = icmp eq %struct._object* %7, null, !dbg !3504
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !3505

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !3506
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3506

if.end.4:                                         ; preds = %if.end
  %call5 = call %struct._object* @PyTuple_New(i64 1), !dbg !3507
  store %struct._object* %call5, %struct._object** %args, align 8, !dbg !3508, !tbaa !1464
  %8 = load %struct._object*, %struct._object** %args, align 8, !dbg !3509, !tbaa !1464
  %cmp6 = icmp eq %struct._object* %8, null, !dbg !3510
  br i1 %cmp6, label %if.then.7, label %if.end.11, !dbg !3511

if.then.7:                                        ; preds = %if.end.4
  br label %do.body, !dbg !3512

do.body:                                          ; preds = %if.then.7
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3513
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !3513
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !790, metadata !1451), !dbg !3515
  %10 = load %struct._object*, %struct._object** %cb, align 8, !dbg !3516, !tbaa !1464
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !3515, !tbaa !1464
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3517, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !3519
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !3520, !tbaa !1498
  %dec = add i64 %12, -1, !dbg !3520
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3520, !tbaa !1498
  %cmp8 = icmp ne i64 %dec, 0, !dbg !3521
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !3522

if.then.9:                                        ; preds = %do.body
  br label %if.end.10, !dbg !3523

if.else:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3525, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !3527
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3527, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !3528
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3528, !tbaa !1565
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3529, !tbaa !1464
  call void %15(%struct._object* %16), !dbg !3530
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.9
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3531
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !3531
  br label %do.cond, !dbg !3533

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !3534

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !3536
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3536

if.end.11:                                        ; preds = %if.end.4
  %18 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !3537, !tbaa !1464
  %19 = load %struct._object*, %struct._object** %args, align 8, !dbg !3538, !tbaa !1464
  %20 = bitcast %struct._object* %19 to %struct.PyTupleObject*, !dbg !3539
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %20, i32 0, i32 1, !dbg !3540
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !3541
  store %struct._object* %18, %struct._object** %arrayidx, align 8, !dbg !3542, !tbaa !1464
  %21 = load %struct._object*, %struct._object** %exc.addr, align 8, !dbg !3543, !tbaa !1464
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !3544
  %22 = load i64, i64* %ob_refcnt12, align 8, !dbg !3545, !tbaa !1498
  %inc = add i64 %22, 1, !dbg !3545
  store i64 %inc, i64* %ob_refcnt12, align 8, !dbg !3545, !tbaa !1498
  %23 = load %struct._object*, %struct._object** %cb, align 8, !dbg !3546, !tbaa !1464
  %24 = load %struct._object*, %struct._object** %args, align 8, !dbg !3547, !tbaa !1464
  %call13 = call %struct._object* @PyObject_CallObject(%struct._object* %23, %struct._object* %24), !dbg !3548
  store %struct._object* %call13, %struct._object** %r, align 8, !dbg !3549, !tbaa !1464
  br label %do.body.14, !dbg !3550

do.body.14:                                       ; preds = %if.end.11
  %25 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !3551
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !3551
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !794, metadata !1451), !dbg !3553
  %26 = load %struct._object*, %struct._object** %args, align 8, !dbg !3554, !tbaa !1464
  store %struct._object* %26, %struct._object** %_py_decref_tmp15, align 8, !dbg !3553, !tbaa !1464
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !3555, !tbaa !1464
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !3557
  %28 = load i64, i64* %ob_refcnt16, align 8, !dbg !3558, !tbaa !1498
  %dec17 = add i64 %28, -1, !dbg !3558
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !3558, !tbaa !1498
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !3559
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !3560

if.then.19:                                       ; preds = %do.body.14
  br label %if.end.23, !dbg !3561

if.else.20:                                       ; preds = %do.body.14
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !3563, !tbaa !1464
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !3565
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !3565, !tbaa !1563
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !3566
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8, !dbg !3566, !tbaa !1565
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !3567, !tbaa !1464
  call void %31(%struct._object* %32), !dbg !3568
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  %33 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !3569
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !3569
  br label %do.cond.24, !dbg !3571

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !3572

do.end.25:                                        ; preds = %do.cond.24
  br label %do.body.26, !dbg !3574

do.body.26:                                       ; preds = %do.end.25
  %34 = bitcast %struct._object** %_py_decref_tmp27 to i8*, !dbg !3575
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !3575
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp27, metadata !796, metadata !1451), !dbg !3577
  %35 = load %struct._object*, %struct._object** %cb, align 8, !dbg !3578, !tbaa !1464
  store %struct._object* %35, %struct._object** %_py_decref_tmp27, align 8, !dbg !3577, !tbaa !1464
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !3579, !tbaa !1464
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !3581
  %37 = load i64, i64* %ob_refcnt28, align 8, !dbg !3582, !tbaa !1498
  %dec29 = add i64 %37, -1, !dbg !3582
  store i64 %dec29, i64* %ob_refcnt28, align 8, !dbg !3582, !tbaa !1498
  %cmp30 = icmp ne i64 %dec29, 0, !dbg !3583
  br i1 %cmp30, label %if.then.31, label %if.else.32, !dbg !3584

if.then.31:                                       ; preds = %do.body.26
  br label %if.end.35, !dbg !3585

if.else.32:                                       ; preds = %do.body.26
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !3587, !tbaa !1464
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !3589
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8, !dbg !3589, !tbaa !1563
  %tp_dealloc34 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !3590
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc34, align 8, !dbg !3590, !tbaa !1565
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !3591, !tbaa !1464
  call void %40(%struct._object* %41), !dbg !3592
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.32, %if.then.31
  %42 = bitcast %struct._object** %_py_decref_tmp27 to i8*, !dbg !3593
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !3593
  br label %do.cond.36, !dbg !3594

do.cond.36:                                       ; preds = %if.end.35
  br label %do.end.37, !dbg !3595

do.end.37:                                        ; preds = %do.cond.36
  %43 = load %struct._object*, %struct._object** %r, align 8, !dbg !3597, !tbaa !1464
  store %struct._object* %43, %struct._object** %retval, !dbg !3598
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3598

cleanup:                                          ; preds = %do.end.37, %do.end, %if.then.3, %if.then
  %44 = bitcast i8** %str to i8*, !dbg !3599
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !3599
  %45 = bitcast %struct._object** %r to i8*, !dbg !3599
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !3599
  %46 = bitcast %struct._object** %cb to i8*, !dbg !3599
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !3599
  %47 = bitcast %struct._object** %args to i8*, !dbg !3599
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !3599
  %48 = load %struct._object*, %struct._object** %retval, !dbg !3599
  ret %struct._object* %48, !dbg !3599
}

declare i64 @PyLong_AsSsize_t(%struct._object*) #3

declare void @PyErr_Clear() #3

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

declare i8* @PyUnicode_AsUTF8(%struct._object*) #3

declare %struct._object* @PyCodec_LookupError(i8*) #3

declare %struct._object* @PyTuple_New(i64) #3

declare %struct._object* @PyObject_CallObject(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @codecctx_errors_get(%struct.MultibyteStatefulCodecContext* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteStatefulCodecContext*, align 8
  %errors = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.MultibyteStatefulCodecContext* %self, %struct.MultibyteStatefulCodecContext** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStatefulCodecContext** %self.addr, metadata !825, metadata !1451), !dbg !3600
  %0 = bitcast i8** %errors to i8*, !dbg !3601
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3601
  call void @llvm.dbg.declare(metadata i8** %errors, metadata !826, metadata !1451), !dbg !3602
  %1 = load %struct.MultibyteStatefulCodecContext*, %struct.MultibyteStatefulCodecContext** %self.addr, align 8, !dbg !3603, !tbaa !1464
  %errors1 = getelementptr inbounds %struct.MultibyteStatefulCodecContext, %struct.MultibyteStatefulCodecContext* %1, i32 0, i32 3, !dbg !3605
  %2 = load %struct._object*, %struct._object** %errors1, align 8, !dbg !3605, !tbaa !3606
  %cmp = icmp eq %struct._object* %2, inttoptr (i64 1 to %struct._object*), !dbg !3608
  br i1 %cmp, label %if.then, label %if.else, !dbg !3609

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i8** %errors, align 8, !dbg !3610, !tbaa !1464
  br label %if.end.13, !dbg !3611

if.else:                                          ; preds = %entry
  %3 = load %struct.MultibyteStatefulCodecContext*, %struct.MultibyteStatefulCodecContext** %self.addr, align 8, !dbg !3612, !tbaa !1464
  %errors2 = getelementptr inbounds %struct.MultibyteStatefulCodecContext, %struct.MultibyteStatefulCodecContext* %3, i32 0, i32 3, !dbg !3614
  %4 = load %struct._object*, %struct._object** %errors2, align 8, !dbg !3614, !tbaa !3606
  %cmp3 = icmp eq %struct._object* %4, inttoptr (i64 2 to %struct._object*), !dbg !3615
  br i1 %cmp3, label %if.then.4, label %if.else.5, !dbg !3616

if.then.4:                                        ; preds = %if.else
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i8** %errors, align 8, !dbg !3617, !tbaa !1464
  br label %if.end.12, !dbg !3618

if.else.5:                                        ; preds = %if.else
  %5 = load %struct.MultibyteStatefulCodecContext*, %struct.MultibyteStatefulCodecContext** %self.addr, align 8, !dbg !3619, !tbaa !1464
  %errors6 = getelementptr inbounds %struct.MultibyteStatefulCodecContext, %struct.MultibyteStatefulCodecContext* %5, i32 0, i32 3, !dbg !3621
  %6 = load %struct._object*, %struct._object** %errors6, align 8, !dbg !3621, !tbaa !3606
  %cmp7 = icmp eq %struct._object* %6, inttoptr (i64 3 to %struct._object*), !dbg !3622
  br i1 %cmp7, label %if.then.8, label %if.else.9, !dbg !3623

if.then.8:                                        ; preds = %if.else.5
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), i8** %errors, align 8, !dbg !3624, !tbaa !1464
  br label %if.end, !dbg !3625

if.else.9:                                        ; preds = %if.else.5
  %7 = load %struct.MultibyteStatefulCodecContext*, %struct.MultibyteStatefulCodecContext** %self.addr, align 8, !dbg !3626, !tbaa !1464
  %errors10 = getelementptr inbounds %struct.MultibyteStatefulCodecContext, %struct.MultibyteStatefulCodecContext* %7, i32 0, i32 3, !dbg !3628
  %8 = load %struct._object*, %struct._object** %errors10, align 8, !dbg !3628, !tbaa !3606
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !3629
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !3630, !tbaa !1498
  %inc = add i64 %9, 1, !dbg !3630
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3630, !tbaa !1498
  %10 = load %struct.MultibyteStatefulCodecContext*, %struct.MultibyteStatefulCodecContext** %self.addr, align 8, !dbg !3631, !tbaa !1464
  %errors11 = getelementptr inbounds %struct.MultibyteStatefulCodecContext, %struct.MultibyteStatefulCodecContext* %10, i32 0, i32 3, !dbg !3632
  %11 = load %struct._object*, %struct._object** %errors11, align 8, !dbg !3632, !tbaa !3606
  store %struct._object* %11, %struct._object** %retval, !dbg !3633
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3633

if.end:                                           ; preds = %if.then.8
  br label %if.end.12

if.end.12:                                        ; preds = %if.end, %if.then.4
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %if.then
  %12 = load i8*, i8** %errors, align 8, !dbg !3634, !tbaa !1464
  %call = call %struct._object* @PyUnicode_FromString(i8* %12), !dbg !3635
  store %struct._object* %call, %struct._object** %retval, !dbg !3636
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3636

cleanup:                                          ; preds = %if.end.13, %if.else.9
  %13 = bitcast i8** %errors to i8*, !dbg !3637
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !3637
  %14 = load %struct._object*, %struct._object** %retval, !dbg !3637
  ret %struct._object* %14, !dbg !3637
}

; Function Attrs: nounwind uwtable
define internal i32 @codecctx_errors_set(%struct.MultibyteStatefulCodecContext* %self, %struct._object* %value, i8* %closure) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.MultibyteStatefulCodecContext*, align 8
  %value.addr = alloca %struct._object*, align 8
  %closure.addr = alloca i8*, align 8
  %cb = alloca %struct._object*, align 8
  %str = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.MultibyteStatefulCodecContext* %self, %struct.MultibyteStatefulCodecContext** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStatefulCodecContext** %self.addr, metadata !831, metadata !1451), !dbg !3638
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !832, metadata !1451), !dbg !3639
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !833, metadata !1451), !dbg !3640
  %0 = bitcast %struct._object** %cb to i8*, !dbg !3641
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3641
  call void @llvm.dbg.declare(metadata %struct._object** %cb, metadata !834, metadata !1451), !dbg !3642
  %1 = bitcast i8** %str to i8*, !dbg !3643
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3643
  call void @llvm.dbg.declare(metadata i8** %str, metadata !835, metadata !1451), !dbg !3644
  %2 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !3645, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !3647
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3647, !tbaa !1563
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 19, !dbg !3648
  %4 = load i64, i64* %tp_flags, align 8, !dbg !3648, !tbaa !1947
  %and = and i64 %4, 268435456, !dbg !3649
  %cmp = icmp ne i64 %and, 0, !dbg !3650
  br i1 %cmp, label %if.end, label %if.then, !dbg !3651

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3652, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0)), !dbg !3654
  store i32 -1, i32* %retval, !dbg !3655
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3655

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !3656, !tbaa !1464
  %call = call i8* @PyUnicode_AsUTF8(%struct._object* %6), !dbg !3657
  store i8* %call, i8** %str, align 8, !dbg !3658, !tbaa !1464
  %7 = load i8*, i8** %str, align 8, !dbg !3659, !tbaa !1464
  %cmp1 = icmp eq i8* %7, null, !dbg !3661
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !3662

if.then.2:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !3663
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3663

if.end.3:                                         ; preds = %if.end
  %8 = load i8*, i8** %str, align 8, !dbg !3664, !tbaa !1464
  %call4 = call %struct._object* @internal_error_callback(i8* %8), !dbg !3665
  store %struct._object* %call4, %struct._object** %cb, align 8, !dbg !3666, !tbaa !1464
  %9 = load %struct._object*, %struct._object** %cb, align 8, !dbg !3667, !tbaa !1464
  %cmp5 = icmp eq %struct._object* %9, null, !dbg !3669
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !3670

if.then.6:                                        ; preds = %if.end.3
  store i32 -1, i32* %retval, !dbg !3671
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3671

if.end.7:                                         ; preds = %if.end.3
  br label %do.body, !dbg !3672

do.body:                                          ; preds = %if.end.7
  %10 = load %struct.MultibyteStatefulCodecContext*, %struct.MultibyteStatefulCodecContext** %self.addr, align 8, !dbg !3673, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteStatefulCodecContext, %struct.MultibyteStatefulCodecContext* %10, i32 0, i32 3, !dbg !3675
  %11 = load %struct._object*, %struct._object** %errors, align 8, !dbg !3675, !tbaa !3606
  %cmp8 = icmp ne %struct._object* %11, null, !dbg !3676
  br i1 %cmp8, label %land.lhs.true, label %if.end.20, !dbg !3677

land.lhs.true:                                    ; preds = %do.body
  %12 = load %struct.MultibyteStatefulCodecContext*, %struct.MultibyteStatefulCodecContext** %self.addr, align 8, !dbg !3678, !tbaa !1464
  %errors9 = getelementptr inbounds %struct.MultibyteStatefulCodecContext, %struct.MultibyteStatefulCodecContext* %12, i32 0, i32 3, !dbg !3680
  %13 = load %struct._object*, %struct._object** %errors9, align 8, !dbg !3680, !tbaa !3606
  %cmp10 = icmp ult %struct._object* %13, inttoptr (i64 1 to %struct._object*), !dbg !3681
  br i1 %cmp10, label %if.then.13, label %lor.lhs.false, !dbg !3682

lor.lhs.false:                                    ; preds = %land.lhs.true
  %14 = load %struct.MultibyteStatefulCodecContext*, %struct.MultibyteStatefulCodecContext** %self.addr, align 8, !dbg !3683, !tbaa !1464
  %errors11 = getelementptr inbounds %struct.MultibyteStatefulCodecContext, %struct.MultibyteStatefulCodecContext* %14, i32 0, i32 3, !dbg !3685
  %15 = load %struct._object*, %struct._object** %errors11, align 8, !dbg !3685, !tbaa !3606
  %cmp12 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %15, !dbg !3686
  br i1 %cmp12, label %if.then.13, label %if.end.20, !dbg !3687

if.then.13:                                       ; preds = %lor.lhs.false, %land.lhs.true
  br label %do.body.14, !dbg !3688

do.body.14:                                       ; preds = %if.then.13
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3691
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !3691
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !836, metadata !1451), !dbg !3693
  %17 = load %struct.MultibyteStatefulCodecContext*, %struct.MultibyteStatefulCodecContext** %self.addr, align 8, !dbg !3694, !tbaa !1464
  %errors15 = getelementptr inbounds %struct.MultibyteStatefulCodecContext, %struct.MultibyteStatefulCodecContext* %17, i32 0, i32 3, !dbg !3695
  %18 = load %struct._object*, %struct._object** %errors15, align 8, !dbg !3695, !tbaa !3606
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !3693, !tbaa !1464
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3696, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !3698
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !3699, !tbaa !1498
  %dec = add i64 %20, -1, !dbg !3699
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3699, !tbaa !1498
  %cmp16 = icmp ne i64 %dec, 0, !dbg !3700
  br i1 %cmp16, label %if.then.17, label %if.else, !dbg !3701

if.then.17:                                       ; preds = %do.body.14
  br label %if.end.19, !dbg !3702

if.else:                                          ; preds = %do.body.14
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3704, !tbaa !1464
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !3706
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !3706, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !3707
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3707, !tbaa !1565
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3708, !tbaa !1464
  call void %23(%struct._object* %24), !dbg !3709
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.then.17
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3710
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !3710
  br label %do.cond, !dbg !3712

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !3713

do.end:                                           ; preds = %do.cond
  br label %if.end.20, !dbg !3715

if.end.20:                                        ; preds = %do.end, %lor.lhs.false, %do.body
  br label %do.cond.21, !dbg !3717

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !3721

do.end.22:                                        ; preds = %do.cond.21
  %26 = load %struct._object*, %struct._object** %cb, align 8, !dbg !3723, !tbaa !1464
  %27 = load %struct.MultibyteStatefulCodecContext*, %struct.MultibyteStatefulCodecContext** %self.addr, align 8, !dbg !3724, !tbaa !1464
  %errors23 = getelementptr inbounds %struct.MultibyteStatefulCodecContext, %struct.MultibyteStatefulCodecContext* %27, i32 0, i32 3, !dbg !3725
  store %struct._object* %26, %struct._object** %errors23, align 8, !dbg !3726, !tbaa !3606
  store i32 0, i32* %retval, !dbg !3727
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3727

cleanup:                                          ; preds = %do.end.22, %if.then.6, %if.then.2, %if.then
  %28 = bitcast i8** %str to i8*, !dbg !3728
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !3728
  %29 = bitcast %struct._object** %cb to i8*, !dbg !3728
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !3728
  %30 = load i32, i32* %retval, !dbg !3728
  ret i32 %30, !dbg !3728
}

declare %struct._object* @PyUnicode_FromString(i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @internal_error_callback(i8* %errors) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %errors.addr = alloca i8*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp36 = alloca i32, align 4
  %__s1_len41 = alloca i64, align 8
  %__s2_len43 = alloca i64, align 8
  %tmp44 = alloca i32, align 4
  %__s150 = alloca i8*, align 8
  %__result52 = alloca i32, align 4
  %tmp90 = alloca i32, align 4
  %__s1_len100 = alloca i64, align 8
  %__s2_len102 = alloca i64, align 8
  %tmp103 = alloca i32, align 4
  %__s1109 = alloca i8*, align 8
  %__result111 = alloca i32, align 4
  %tmp149 = alloca i32, align 4
  store i8* %errors, i8** %errors.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i8** %errors.addr, metadata !844, metadata !1451), !dbg !3729
  %0 = load i8*, i8** %errors.addr, align 8, !dbg !3730, !tbaa !1464
  %cmp = icmp eq i8* %0, null, !dbg !3731
  br i1 %cmp, label %if.then.39, label %lor.lhs.false, !dbg !3732

lor.lhs.false:                                    ; preds = %entry
  %1 = bitcast i64* %__s1_len to i8*, !dbg !3733
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3733
  call void @llvm.dbg.declare(metadata i64* %__s1_len, metadata !845, metadata !1451), !dbg !3735
  %2 = bitcast i64* %__s2_len to i8*, !dbg !3736
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3736
  call void @llvm.dbg.declare(metadata i64* %__s2_len, metadata !848, metadata !1451), !dbg !3737
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i64 1) to i64), i64 ptrtoint ([7 x i8]* @.str.18 to i64)), i64 1), label %land.lhs.true, label %cond.false, !dbg !3738

land.lhs.true:                                    ; preds = %lor.lhs.false
  store i64 6, i64* %__s2_len, align 8, !dbg !3739, !tbaa !1876
  %3 = load i64, i64* %__s2_len, align 8, !dbg !3741, !tbaa !1876
  %cmp1 = icmp ult i64 %3, 4, !dbg !3742
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !3743

cond.true:                                        ; preds = %land.lhs.true
  %4 = bitcast i8** %__s1 to i8*, !dbg !3744
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !3744
  call void @llvm.dbg.declare(metadata i8** %__s1, metadata !849, metadata !1451), !dbg !3746
  %5 = load i8*, i8** %errors.addr, align 8, !dbg !3747, !tbaa !1464
  store i8* %5, i8** %__s1, align 8, !dbg !3746, !tbaa !1464
  %6 = bitcast i32* %__result to i8*, !dbg !3748
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !3748
  call void @llvm.dbg.declare(metadata i32* %__result, metadata !851, metadata !1451), !dbg !3749
  %7 = load i8*, i8** %__s1, align 8, !dbg !3750, !tbaa !1464
  %arrayidx = getelementptr i8, i8* %7, i64 0, !dbg !3750
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3750, !tbaa !3037
  %conv = zext i8 %8 to i32, !dbg !3750
  %9 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), align 1, !dbg !3751, !tbaa !3037
  %conv4 = zext i8 %9 to i32, !dbg !3751
  %sub = sub i32 %conv, %conv4, !dbg !3752
  store i32 %sub, i32* %__result, align 4, !dbg !3749, !tbaa !1475
  %10 = load i64, i64* %__s2_len, align 8, !dbg !3753, !tbaa !1876
  %cmp5 = icmp ugt i64 %10, 0, !dbg !3755
  br i1 %cmp5, label %land.lhs.true.7, label %if.end.35, !dbg !3756

land.lhs.true.7:                                  ; preds = %cond.true
  %11 = load i32, i32* %__result, align 4, !dbg !3757, !tbaa !1475
  %cmp8 = icmp eq i32 %11, 0, !dbg !3759
  br i1 %cmp8, label %if.then, label %if.end.35, !dbg !3760

if.then:                                          ; preds = %land.lhs.true.7
  %12 = load i8*, i8** %__s1, align 8, !dbg !3761, !tbaa !1464
  %arrayidx10 = getelementptr i8, i8* %12, i64 1, !dbg !3761
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !3761, !tbaa !3037
  %conv11 = zext i8 %13 to i32, !dbg !3761
  %14 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i64 1), align 1, !dbg !3764, !tbaa !3037
  %conv12 = zext i8 %14 to i32, !dbg !3764
  %sub13 = sub i32 %conv11, %conv12, !dbg !3765
  store i32 %sub13, i32* %__result, align 4, !dbg !3766, !tbaa !1475
  %15 = load i64, i64* %__s2_len, align 8, !dbg !3767, !tbaa !1876
  %cmp14 = icmp ugt i64 %15, 1, !dbg !3769
  br i1 %cmp14, label %land.lhs.true.16, label %if.end.34, !dbg !3770

land.lhs.true.16:                                 ; preds = %if.then
  %16 = load i32, i32* %__result, align 4, !dbg !3771, !tbaa !1475
  %cmp17 = icmp eq i32 %16, 0, !dbg !3773
  br i1 %cmp17, label %if.then.19, label %if.end.34, !dbg !3774

if.then.19:                                       ; preds = %land.lhs.true.16
  %17 = load i8*, i8** %__s1, align 8, !dbg !3775, !tbaa !1464
  %arrayidx20 = getelementptr i8, i8* %17, i64 2, !dbg !3775
  %18 = load i8, i8* %arrayidx20, align 1, !dbg !3775, !tbaa !3037
  %conv21 = zext i8 %18 to i32, !dbg !3775
  %19 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i64 2), align 1, !dbg !3778, !tbaa !3037
  %conv22 = zext i8 %19 to i32, !dbg !3778
  %sub23 = sub i32 %conv21, %conv22, !dbg !3779
  store i32 %sub23, i32* %__result, align 4, !dbg !3780, !tbaa !1475
  %20 = load i64, i64* %__s2_len, align 8, !dbg !3781, !tbaa !1876
  %cmp24 = icmp ugt i64 %20, 2, !dbg !3783
  br i1 %cmp24, label %land.lhs.true.26, label %if.end, !dbg !3784

land.lhs.true.26:                                 ; preds = %if.then.19
  %21 = load i32, i32* %__result, align 4, !dbg !3785, !tbaa !1475
  %cmp27 = icmp eq i32 %21, 0, !dbg !3787
  br i1 %cmp27, label %if.then.29, label %if.end, !dbg !3788

if.then.29:                                       ; preds = %land.lhs.true.26
  %22 = load i8*, i8** %__s1, align 8, !dbg !3789, !tbaa !1464
  %arrayidx30 = getelementptr i8, i8* %22, i64 3, !dbg !3789
  %23 = load i8, i8* %arrayidx30, align 1, !dbg !3789, !tbaa !3037
  %conv31 = zext i8 %23 to i32, !dbg !3789
  %24 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i64 3), align 1, !dbg !3791, !tbaa !3037
  %conv32 = zext i8 %24 to i32, !dbg !3791
  %sub33 = sub i32 %conv31, %conv32, !dbg !3792
  store i32 %sub33, i32* %__result, align 4, !dbg !3793, !tbaa !1475
  br label %if.end, !dbg !3794

if.end:                                           ; preds = %if.then.29, %land.lhs.true.26, %if.then.19
  br label %if.end.34, !dbg !3795

if.end.34:                                        ; preds = %if.end, %land.lhs.true.16, %if.then
  br label %if.end.35, !dbg !3799

if.end.35:                                        ; preds = %if.end.34, %land.lhs.true.7, %cond.true
  %25 = load i32, i32* %__result, align 4, !dbg !3803, !tbaa !1475
  store i32 %25, i32* %tmp36, !dbg !3807, !tbaa !1475
  %26 = bitcast i32* %__result to i8*, !dbg !3808
  call void @llvm.lifetime.end(i64 4, i8* %26) #1, !dbg !3808
  %27 = bitcast i8** %__s1 to i8*, !dbg !3808
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !3808
  %28 = load i32, i32* %tmp36, !dbg !3809, !tbaa !1475
  br label %cond.end, !dbg !3743

cond.false:                                       ; preds = %land.lhs.true, %lor.lhs.false
  %29 = load i8*, i8** %errors.addr, align 8, !dbg !3810, !tbaa !1464
  %call = call i32 @strcmp(i8* %29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0)) #1, !dbg !3813
  br label %cond.end, !dbg !3743

cond.end:                                         ; preds = %cond.false, %if.end.35
  %cond = phi i32 [ %28, %if.end.35 ], [ %call, %cond.false ], !dbg !3743
  store i32 %cond, i32* %tmp, !dbg !3814, !tbaa !1475
  %30 = bitcast i64* %__s2_len to i8*, !dbg !3817
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !3817
  %31 = bitcast i64* %__s1_len to i8*, !dbg !3817
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !3817
  %32 = load i32, i32* %tmp, !dbg !3818, !tbaa !1475
  %cmp37 = icmp eq i32 %32, 0, !dbg !3819
  br i1 %cmp37, label %if.then.39, label %if.else, !dbg !3820

if.then.39:                                       ; preds = %cond.end, %entry
  store %struct._object* inttoptr (i64 1 to %struct._object*), %struct._object** %retval, !dbg !3821
  br label %return, !dbg !3821

if.else:                                          ; preds = %cond.end
  %33 = bitcast i64* %__s1_len41 to i8*, !dbg !3822
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !3822
  call void @llvm.dbg.declare(metadata i64* %__s1_len41, metadata !852, metadata !1451), !dbg !3823
  %34 = bitcast i64* %__s2_len43 to i8*, !dbg !3822
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !3822
  call void @llvm.dbg.declare(metadata i64* %__s2_len43, metadata !855, metadata !1451), !dbg !3824
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i64 1) to i64), i64 ptrtoint ([7 x i8]* @.str.19 to i64)), i64 1), label %land.lhs.true.45, label %cond.false.91, !dbg !3825

land.lhs.true.45:                                 ; preds = %if.else
  store i64 6, i64* %__s2_len43, align 8, !dbg !3826, !tbaa !1876
  %35 = load i64, i64* %__s2_len43, align 8, !dbg !3828, !tbaa !1876
  %cmp46 = icmp ult i64 %35, 4, !dbg !3829
  br i1 %cmp46, label %cond.true.48, label %cond.false.91, !dbg !3830

cond.true.48:                                     ; preds = %land.lhs.true.45
  %36 = bitcast i8** %__s150 to i8*, !dbg !3831
  call void @llvm.lifetime.start(i64 8, i8* %36) #1, !dbg !3831
  call void @llvm.dbg.declare(metadata i8** %__s150, metadata !856, metadata !1451), !dbg !3833
  %37 = load i8*, i8** %errors.addr, align 8, !dbg !3834, !tbaa !1464
  store i8* %37, i8** %__s150, align 8, !dbg !3833, !tbaa !1464
  %38 = bitcast i32* %__result52 to i8*, !dbg !3835
  call void @llvm.lifetime.start(i64 4, i8* %38) #1, !dbg !3835
  call void @llvm.dbg.declare(metadata i32* %__result52, metadata !858, metadata !1451), !dbg !3836
  %39 = load i8*, i8** %__s150, align 8, !dbg !3837, !tbaa !1464
  %arrayidx53 = getelementptr i8, i8* %39, i64 0, !dbg !3837
  %40 = load i8, i8* %arrayidx53, align 1, !dbg !3837, !tbaa !3037
  %conv54 = zext i8 %40 to i32, !dbg !3837
  %41 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), align 1, !dbg !3838, !tbaa !3037
  %conv55 = zext i8 %41 to i32, !dbg !3838
  %sub56 = sub i32 %conv54, %conv55, !dbg !3839
  store i32 %sub56, i32* %__result52, align 4, !dbg !3836, !tbaa !1475
  %42 = load i64, i64* %__s2_len43, align 8, !dbg !3840, !tbaa !1876
  %cmp57 = icmp ugt i64 %42, 0, !dbg !3842
  br i1 %cmp57, label %land.lhs.true.59, label %if.end.89, !dbg !3843

land.lhs.true.59:                                 ; preds = %cond.true.48
  %43 = load i32, i32* %__result52, align 4, !dbg !3844, !tbaa !1475
  %cmp60 = icmp eq i32 %43, 0, !dbg !3846
  br i1 %cmp60, label %if.then.62, label %if.end.89, !dbg !3847

if.then.62:                                       ; preds = %land.lhs.true.59
  %44 = load i8*, i8** %__s150, align 8, !dbg !3848, !tbaa !1464
  %arrayidx63 = getelementptr i8, i8* %44, i64 1, !dbg !3848
  %45 = load i8, i8* %arrayidx63, align 1, !dbg !3848, !tbaa !3037
  %conv64 = zext i8 %45 to i32, !dbg !3848
  %46 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i64 1), align 1, !dbg !3851, !tbaa !3037
  %conv65 = zext i8 %46 to i32, !dbg !3851
  %sub66 = sub i32 %conv64, %conv65, !dbg !3852
  store i32 %sub66, i32* %__result52, align 4, !dbg !3853, !tbaa !1475
  %47 = load i64, i64* %__s2_len43, align 8, !dbg !3854, !tbaa !1876
  %cmp67 = icmp ugt i64 %47, 1, !dbg !3856
  br i1 %cmp67, label %land.lhs.true.69, label %if.end.88, !dbg !3857

land.lhs.true.69:                                 ; preds = %if.then.62
  %48 = load i32, i32* %__result52, align 4, !dbg !3858, !tbaa !1475
  %cmp70 = icmp eq i32 %48, 0, !dbg !3860
  br i1 %cmp70, label %if.then.72, label %if.end.88, !dbg !3861

if.then.72:                                       ; preds = %land.lhs.true.69
  %49 = load i8*, i8** %__s150, align 8, !dbg !3862, !tbaa !1464
  %arrayidx73 = getelementptr i8, i8* %49, i64 2, !dbg !3862
  %50 = load i8, i8* %arrayidx73, align 1, !dbg !3862, !tbaa !3037
  %conv74 = zext i8 %50 to i32, !dbg !3862
  %51 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i64 2), align 1, !dbg !3865, !tbaa !3037
  %conv75 = zext i8 %51 to i32, !dbg !3865
  %sub76 = sub i32 %conv74, %conv75, !dbg !3866
  store i32 %sub76, i32* %__result52, align 4, !dbg !3867, !tbaa !1475
  %52 = load i64, i64* %__s2_len43, align 8, !dbg !3868, !tbaa !1876
  %cmp77 = icmp ugt i64 %52, 2, !dbg !3870
  br i1 %cmp77, label %land.lhs.true.79, label %if.end.87, !dbg !3871

land.lhs.true.79:                                 ; preds = %if.then.72
  %53 = load i32, i32* %__result52, align 4, !dbg !3872, !tbaa !1475
  %cmp80 = icmp eq i32 %53, 0, !dbg !3874
  br i1 %cmp80, label %if.then.82, label %if.end.87, !dbg !3875

if.then.82:                                       ; preds = %land.lhs.true.79
  %54 = load i8*, i8** %__s150, align 8, !dbg !3876, !tbaa !1464
  %arrayidx83 = getelementptr i8, i8* %54, i64 3, !dbg !3876
  %55 = load i8, i8* %arrayidx83, align 1, !dbg !3876, !tbaa !3037
  %conv84 = zext i8 %55 to i32, !dbg !3876
  %56 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i64 3), align 1, !dbg !3878, !tbaa !3037
  %conv85 = zext i8 %56 to i32, !dbg !3878
  %sub86 = sub i32 %conv84, %conv85, !dbg !3879
  store i32 %sub86, i32* %__result52, align 4, !dbg !3880, !tbaa !1475
  br label %if.end.87, !dbg !3881

if.end.87:                                        ; preds = %if.then.82, %land.lhs.true.79, %if.then.72
  br label %if.end.88, !dbg !3882

if.end.88:                                        ; preds = %if.end.87, %land.lhs.true.69, %if.then.62
  br label %if.end.89, !dbg !3886

if.end.89:                                        ; preds = %if.end.88, %land.lhs.true.59, %cond.true.48
  %57 = load i32, i32* %__result52, align 4, !dbg !3890, !tbaa !1475
  store i32 %57, i32* %tmp90, !dbg !3894, !tbaa !1475
  %58 = bitcast i32* %__result52 to i8*, !dbg !3895
  call void @llvm.lifetime.end(i64 4, i8* %58) #1, !dbg !3895
  %59 = bitcast i8** %__s150 to i8*, !dbg !3895
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !3895
  %60 = load i32, i32* %tmp90, !dbg !3896, !tbaa !1475
  br label %cond.end.93, !dbg !3830

cond.false.91:                                    ; preds = %land.lhs.true.45, %if.else
  %61 = load i8*, i8** %errors.addr, align 8, !dbg !3897, !tbaa !1464
  %call92 = call i32 @strcmp(i8* %61, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0)) #1, !dbg !3900
  br label %cond.end.93, !dbg !3830

cond.end.93:                                      ; preds = %cond.false.91, %if.end.89
  %cond94 = phi i32 [ %60, %if.end.89 ], [ %call92, %cond.false.91 ], !dbg !3830
  store i32 %cond94, i32* %tmp44, !dbg !3901, !tbaa !1475
  %62 = bitcast i64* %__s2_len43 to i8*, !dbg !3904
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !3904
  %63 = bitcast i64* %__s1_len41 to i8*, !dbg !3904
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !3904
  %64 = load i32, i32* %tmp44, !dbg !3905, !tbaa !1475
  %cmp95 = icmp eq i32 %64, 0, !dbg !3906
  br i1 %cmp95, label %if.then.97, label %if.else.98, !dbg !3907

if.then.97:                                       ; preds = %cond.end.93
  store %struct._object* inttoptr (i64 2 to %struct._object*), %struct._object** %retval, !dbg !3908
  br label %return, !dbg !3908

if.else.98:                                       ; preds = %cond.end.93
  %65 = bitcast i64* %__s1_len100 to i8*, !dbg !3909
  call void @llvm.lifetime.start(i64 8, i8* %65) #1, !dbg !3909
  call void @llvm.dbg.declare(metadata i64* %__s1_len100, metadata !859, metadata !1451), !dbg !3910
  %66 = bitcast i64* %__s2_len102 to i8*, !dbg !3909
  call void @llvm.lifetime.start(i64 8, i8* %66) #1, !dbg !3909
  call void @llvm.dbg.declare(metadata i64* %__s2_len102, metadata !862, metadata !1451), !dbg !3911
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i64 1) to i64), i64 ptrtoint ([8 x i8]* @.str.20 to i64)), i64 1), label %land.lhs.true.104, label %cond.false.150, !dbg !3912

land.lhs.true.104:                                ; preds = %if.else.98
  store i64 7, i64* %__s2_len102, align 8, !dbg !3913, !tbaa !1876
  %67 = load i64, i64* %__s2_len102, align 8, !dbg !3915, !tbaa !1876
  %cmp105 = icmp ult i64 %67, 4, !dbg !3916
  br i1 %cmp105, label %cond.true.107, label %cond.false.150, !dbg !3917

cond.true.107:                                    ; preds = %land.lhs.true.104
  %68 = bitcast i8** %__s1109 to i8*, !dbg !3918
  call void @llvm.lifetime.start(i64 8, i8* %68) #1, !dbg !3918
  call void @llvm.dbg.declare(metadata i8** %__s1109, metadata !863, metadata !1451), !dbg !3920
  %69 = load i8*, i8** %errors.addr, align 8, !dbg !3921, !tbaa !1464
  store i8* %69, i8** %__s1109, align 8, !dbg !3920, !tbaa !1464
  %70 = bitcast i32* %__result111 to i8*, !dbg !3922
  call void @llvm.lifetime.start(i64 4, i8* %70) #1, !dbg !3922
  call void @llvm.dbg.declare(metadata i32* %__result111, metadata !865, metadata !1451), !dbg !3923
  %71 = load i8*, i8** %__s1109, align 8, !dbg !3924, !tbaa !1464
  %arrayidx112 = getelementptr i8, i8* %71, i64 0, !dbg !3924
  %72 = load i8, i8* %arrayidx112, align 1, !dbg !3924, !tbaa !3037
  %conv113 = zext i8 %72 to i32, !dbg !3924
  %73 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), align 1, !dbg !3925, !tbaa !3037
  %conv114 = zext i8 %73 to i32, !dbg !3925
  %sub115 = sub i32 %conv113, %conv114, !dbg !3926
  store i32 %sub115, i32* %__result111, align 4, !dbg !3923, !tbaa !1475
  %74 = load i64, i64* %__s2_len102, align 8, !dbg !3927, !tbaa !1876
  %cmp116 = icmp ugt i64 %74, 0, !dbg !3929
  br i1 %cmp116, label %land.lhs.true.118, label %if.end.148, !dbg !3930

land.lhs.true.118:                                ; preds = %cond.true.107
  %75 = load i32, i32* %__result111, align 4, !dbg !3931, !tbaa !1475
  %cmp119 = icmp eq i32 %75, 0, !dbg !3933
  br i1 %cmp119, label %if.then.121, label %if.end.148, !dbg !3934

if.then.121:                                      ; preds = %land.lhs.true.118
  %76 = load i8*, i8** %__s1109, align 8, !dbg !3935, !tbaa !1464
  %arrayidx122 = getelementptr i8, i8* %76, i64 1, !dbg !3935
  %77 = load i8, i8* %arrayidx122, align 1, !dbg !3935, !tbaa !3037
  %conv123 = zext i8 %77 to i32, !dbg !3935
  %78 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i64 1), align 1, !dbg !3938, !tbaa !3037
  %conv124 = zext i8 %78 to i32, !dbg !3938
  %sub125 = sub i32 %conv123, %conv124, !dbg !3939
  store i32 %sub125, i32* %__result111, align 4, !dbg !3940, !tbaa !1475
  %79 = load i64, i64* %__s2_len102, align 8, !dbg !3941, !tbaa !1876
  %cmp126 = icmp ugt i64 %79, 1, !dbg !3943
  br i1 %cmp126, label %land.lhs.true.128, label %if.end.147, !dbg !3944

land.lhs.true.128:                                ; preds = %if.then.121
  %80 = load i32, i32* %__result111, align 4, !dbg !3945, !tbaa !1475
  %cmp129 = icmp eq i32 %80, 0, !dbg !3947
  br i1 %cmp129, label %if.then.131, label %if.end.147, !dbg !3948

if.then.131:                                      ; preds = %land.lhs.true.128
  %81 = load i8*, i8** %__s1109, align 8, !dbg !3949, !tbaa !1464
  %arrayidx132 = getelementptr i8, i8* %81, i64 2, !dbg !3949
  %82 = load i8, i8* %arrayidx132, align 1, !dbg !3949, !tbaa !3037
  %conv133 = zext i8 %82 to i32, !dbg !3949
  %83 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i64 2), align 1, !dbg !3952, !tbaa !3037
  %conv134 = zext i8 %83 to i32, !dbg !3952
  %sub135 = sub i32 %conv133, %conv134, !dbg !3953
  store i32 %sub135, i32* %__result111, align 4, !dbg !3954, !tbaa !1475
  %84 = load i64, i64* %__s2_len102, align 8, !dbg !3955, !tbaa !1876
  %cmp136 = icmp ugt i64 %84, 2, !dbg !3957
  br i1 %cmp136, label %land.lhs.true.138, label %if.end.146, !dbg !3958

land.lhs.true.138:                                ; preds = %if.then.131
  %85 = load i32, i32* %__result111, align 4, !dbg !3959, !tbaa !1475
  %cmp139 = icmp eq i32 %85, 0, !dbg !3961
  br i1 %cmp139, label %if.then.141, label %if.end.146, !dbg !3962

if.then.141:                                      ; preds = %land.lhs.true.138
  %86 = load i8*, i8** %__s1109, align 8, !dbg !3963, !tbaa !1464
  %arrayidx142 = getelementptr i8, i8* %86, i64 3, !dbg !3963
  %87 = load i8, i8* %arrayidx142, align 1, !dbg !3963, !tbaa !3037
  %conv143 = zext i8 %87 to i32, !dbg !3963
  %88 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i64 3), align 1, !dbg !3965, !tbaa !3037
  %conv144 = zext i8 %88 to i32, !dbg !3965
  %sub145 = sub i32 %conv143, %conv144, !dbg !3966
  store i32 %sub145, i32* %__result111, align 4, !dbg !3967, !tbaa !1475
  br label %if.end.146, !dbg !3968

if.end.146:                                       ; preds = %if.then.141, %land.lhs.true.138, %if.then.131
  br label %if.end.147, !dbg !3969

if.end.147:                                       ; preds = %if.end.146, %land.lhs.true.128, %if.then.121
  br label %if.end.148, !dbg !3973

if.end.148:                                       ; preds = %if.end.147, %land.lhs.true.118, %cond.true.107
  %89 = load i32, i32* %__result111, align 4, !dbg !3977, !tbaa !1475
  store i32 %89, i32* %tmp149, !dbg !3981, !tbaa !1475
  %90 = bitcast i32* %__result111 to i8*, !dbg !3982
  call void @llvm.lifetime.end(i64 4, i8* %90) #1, !dbg !3982
  %91 = bitcast i8** %__s1109 to i8*, !dbg !3982
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !3982
  %92 = load i32, i32* %tmp149, !dbg !3983, !tbaa !1475
  br label %cond.end.152, !dbg !3917

cond.false.150:                                   ; preds = %land.lhs.true.104, %if.else.98
  %93 = load i8*, i8** %errors.addr, align 8, !dbg !3984, !tbaa !1464
  %call151 = call i32 @strcmp(i8* %93, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0)) #1, !dbg !3987
  br label %cond.end.152, !dbg !3917

cond.end.152:                                     ; preds = %cond.false.150, %if.end.148
  %cond153 = phi i32 [ %92, %if.end.148 ], [ %call151, %cond.false.150 ], !dbg !3917
  store i32 %cond153, i32* %tmp103, !dbg !3988, !tbaa !1475
  %94 = bitcast i64* %__s2_len102 to i8*, !dbg !3991
  call void @llvm.lifetime.end(i64 8, i8* %94) #1, !dbg !3991
  %95 = bitcast i64* %__s1_len100 to i8*, !dbg !3991
  call void @llvm.lifetime.end(i64 8, i8* %95) #1, !dbg !3991
  %96 = load i32, i32* %tmp103, !dbg !3992, !tbaa !1475
  %cmp154 = icmp eq i32 %96, 0, !dbg !3993
  br i1 %cmp154, label %if.then.156, label %if.else.157, !dbg !3994

if.then.156:                                      ; preds = %cond.end.152
  store %struct._object* inttoptr (i64 3 to %struct._object*), %struct._object** %retval, !dbg !3995
  br label %return, !dbg !3995

if.else.157:                                      ; preds = %cond.end.152
  %97 = load i8*, i8** %errors.addr, align 8, !dbg !3996, !tbaa !1464
  %call158 = call %struct._object* @PyUnicode_FromString(i8* %97), !dbg !3997
  store %struct._object* %call158, %struct._object** %retval, !dbg !3998
  br label %return, !dbg !3998

return:                                           ; preds = %if.else.157, %if.then.156, %if.then.97, %if.then.39
  %98 = load %struct._object*, %struct._object** %retval, !dbg !3999
  ret %struct._object* %98, !dbg !3999
}

; Function Attrs: nounwind
declare i32 @strcmp(i8*, i8*) #5

declare %struct._object* @PyObject_GetAttrString(%struct._object*, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @mbidecoder_dealloc(%struct.MultibyteIncrementalDecoderObject* %self) #0 {
entry:
  %self.addr = alloca %struct.MultibyteIncrementalDecoderObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.MultibyteIncrementalDecoderObject* %self, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteIncrementalDecoderObject** %self.addr, metadata !897, metadata !1451), !dbg !4000
  %0 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4001, !tbaa !1464
  %1 = bitcast %struct.MultibyteIncrementalDecoderObject* %0 to i8*, !dbg !4001
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !4002
  br label %do.body, !dbg !4003

do.body:                                          ; preds = %entry
  %2 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4004, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %2, i32 0, i32 3, !dbg !4006
  %3 = load %struct._object*, %struct._object** %errors, align 8, !dbg !4006, !tbaa !4007
  %cmp = icmp ne %struct._object* %3, null, !dbg !4009
  br i1 %cmp, label %land.lhs.true, label %if.end.9, !dbg !4010

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4011, !tbaa !1464
  %errors1 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %4, i32 0, i32 3, !dbg !4013
  %5 = load %struct._object*, %struct._object** %errors1, align 8, !dbg !4013, !tbaa !4007
  %cmp2 = icmp ult %struct._object* %5, inttoptr (i64 1 to %struct._object*), !dbg !4014
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !4015

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4016, !tbaa !1464
  %errors3 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %6, i32 0, i32 3, !dbg !4018
  %7 = load %struct._object*, %struct._object** %errors3, align 8, !dbg !4018, !tbaa !4007
  %cmp4 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %7, !dbg !4019
  br i1 %cmp4, label %if.then, label %if.end.9, !dbg !4020

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %do.body.5, !dbg !4021

do.body.5:                                        ; preds = %if.then
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4024
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !4024
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !898, metadata !1451), !dbg !4026
  %9 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4027, !tbaa !1464
  %errors6 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %9, i32 0, i32 3, !dbg !4028
  %10 = load %struct._object*, %struct._object** %errors6, align 8, !dbg !4028, !tbaa !4007
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !4026, !tbaa !1464
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4029, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !4031
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !4032, !tbaa !1498
  %dec = add i64 %12, -1, !dbg !4032
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4032, !tbaa !1498
  %cmp7 = icmp ne i64 %dec, 0, !dbg !4033
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !4034

if.then.8:                                        ; preds = %do.body.5
  br label %if.end, !dbg !4035

if.else:                                          ; preds = %do.body.5
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4037, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !4039
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4039, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !4040
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4040, !tbaa !1565
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4041, !tbaa !1464
  call void %15(%struct._object* %16), !dbg !4042
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4043
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !4043
  br label %do.end, !dbg !4045

do.end:                                           ; preds = %if.end
  br label %if.end.9, !dbg !4046

if.end.9:                                         ; preds = %do.end, %lor.lhs.false, %do.body
  br label %do.end.10, !dbg !4048

do.end.10:                                        ; preds = %if.end.9
  %18 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4052, !tbaa !1464
  %19 = bitcast %struct.MultibyteIncrementalDecoderObject* %18 to %struct._object*, !dbg !4053
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !4054
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !4054, !tbaa !1563
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 38, !dbg !4055
  %21 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4055, !tbaa !1581
  %22 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4056, !tbaa !1464
  %23 = bitcast %struct.MultibyteIncrementalDecoderObject* %22 to i8*, !dbg !4056
  call void %21(i8* %23), !dbg !4057
  ret void, !dbg !4058
}

; Function Attrs: nounwind uwtable
define internal i32 @mbidecoder_traverse(%struct.MultibyteIncrementalDecoderObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.MultibyteIncrementalDecoderObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.MultibyteIncrementalDecoderObject* %self, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteIncrementalDecoderObject** %self.addr, metadata !906, metadata !1451), !dbg !4059
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !907, metadata !1451), !dbg !4060
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !908, metadata !1451), !dbg !4061
  %0 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4062, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %0, i32 0, i32 3, !dbg !4063
  %1 = load %struct._object*, %struct._object** %errors, align 8, !dbg !4063, !tbaa !4007
  %cmp = icmp ult %struct._object* %1, inttoptr (i64 1 to %struct._object*), !dbg !4064
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4065

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4066, !tbaa !1464
  %errors1 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %2, i32 0, i32 3, !dbg !4068
  %3 = load %struct._object*, %struct._object** %errors1, align 8, !dbg !4068, !tbaa !4007
  %cmp2 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %3, !dbg !4069
  br i1 %cmp2, label %if.then, label %if.end.9, !dbg !4070

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %do.body, !dbg !4071

do.body:                                          ; preds = %if.then
  %4 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4072, !tbaa !1464
  %errors3 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %4, i32 0, i32 3, !dbg !4074
  %5 = load %struct._object*, %struct._object** %errors3, align 8, !dbg !4074, !tbaa !4007
  %tobool = icmp ne %struct._object* %5, null, !dbg !4075
  br i1 %tobool, label %if.then.4, label %if.end.8, !dbg !4076

if.then.4:                                        ; preds = %do.body
  %6 = bitcast i32* %vret to i8*, !dbg !4077
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !4077
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !909, metadata !1451), !dbg !4079
  %7 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4080, !tbaa !1464
  %8 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4081, !tbaa !1464
  %errors5 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %8, i32 0, i32 3, !dbg !4082
  %9 = load %struct._object*, %struct._object** %errors5, align 8, !dbg !4082, !tbaa !4007
  %10 = load i8*, i8** %arg.addr, align 8, !dbg !4083, !tbaa !1464
  %call = call i32 %7(%struct._object* %9, i8* %10), !dbg !4080
  store i32 %call, i32* %vret, align 4, !dbg !4079, !tbaa !1475
  %11 = load i32, i32* %vret, align 4, !dbg !4084, !tbaa !1475
  %tobool6 = icmp ne i32 %11, 0, !dbg !4084
  br i1 %tobool6, label %if.then.7, label %if.end, !dbg !4086

if.then.7:                                        ; preds = %if.then.4
  %12 = load i32, i32* %vret, align 4, !dbg !4087, !tbaa !1475
  store i32 %12, i32* %retval, !dbg !4089
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4089

if.end:                                           ; preds = %if.then.4
  store i32 0, i32* %cleanup.dest.slot, !dbg !4090
  br label %cleanup, !dbg !4090

cleanup:                                          ; preds = %if.end, %if.then.7
  %13 = bitcast i32* %vret to i8*, !dbg !4092
  call void @llvm.lifetime.end(i64 4, i8* %13) #1, !dbg !4092
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.8, !dbg !4095

if.end.8:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !4096

do.end:                                           ; preds = %if.end.8
  br label %if.end.9, !dbg !4099

if.end.9:                                         ; preds = %do.end, %lor.lhs.false
  store i32 0, i32* %retval, !dbg !4101
  br label %return, !dbg !4101

return:                                           ; preds = %if.end.9, %cleanup
  %14 = load i32, i32* %retval, !dbg !4102
  ret i32 %14, !dbg !4102

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @mbidecoder_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1000, metadata !1451), !dbg !4103
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1001, metadata !1451), !dbg !4104
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1002, metadata !1451), !dbg !4105
  ret i32 0, !dbg !4106
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbidecoder_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %self = alloca %struct.MultibyteIncrementalDecoderObject*, align 8
  %codec = alloca %struct._object*, align 8
  %errors = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  %_py_xdecref_tmp51 = alloca %struct._object*, align 8
  %_py_decref_tmp55 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1005, metadata !1451), !dbg !4107
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1006, metadata !1451), !dbg !4108
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1007, metadata !1451), !dbg !4109
  %0 = bitcast %struct.MultibyteIncrementalDecoderObject** %self to i8*, !dbg !4110
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4110
  call void @llvm.dbg.declare(metadata %struct.MultibyteIncrementalDecoderObject** %self, metadata !1008, metadata !1451), !dbg !4111
  %1 = bitcast %struct._object** %codec to i8*, !dbg !4112
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4112
  call void @llvm.dbg.declare(metadata %struct._object** %codec, metadata !1009, metadata !1451), !dbg !4113
  store %struct._object* null, %struct._object** %codec, align 8, !dbg !4113, !tbaa !1464
  %2 = bitcast i8** %errors to i8*, !dbg !4114
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4114
  call void @llvm.dbg.declare(metadata i8** %errors, metadata !1010, metadata !1451), !dbg !4115
  store i8* null, i8** %errors, align 8, !dbg !4115, !tbaa !1464
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4116, !tbaa !1464
  %4 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !4118, !tbaa !1464
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %3, %struct._object* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @incnewkwarglist, i32 0, i32 0), i8** %errors), !dbg !4119
  %tobool = icmp ne i32 %call, 0, !dbg !4119
  br i1 %tobool, label %if.end, label %if.then, !dbg !4120

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4121
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4121

if.end:                                           ; preds = %entry
  %5 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !4122, !tbaa !1464
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 36, !dbg !4123
  %6 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !4123, !tbaa !1650
  %7 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !4124, !tbaa !1464
  %call1 = call %struct._object* %6(%struct._typeobject* %7, i64 0), !dbg !4122
  %8 = bitcast %struct._object* %call1 to %struct.MultibyteIncrementalDecoderObject*, !dbg !4125
  store %struct.MultibyteIncrementalDecoderObject* %8, %struct.MultibyteIncrementalDecoderObject** %self, align 8, !dbg !4126, !tbaa !1464
  %9 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self, align 8, !dbg !4127, !tbaa !1464
  %cmp = icmp eq %struct.MultibyteIncrementalDecoderObject* %9, null, !dbg !4129
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !4130

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !4131
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4131

if.end.3:                                         ; preds = %if.end
  %10 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !4132, !tbaa !1464
  %11 = bitcast %struct._typeobject* %10 to %struct._object*, !dbg !4133
  %call4 = call %struct._object* @PyObject_GetAttrString(%struct._object* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0)), !dbg !4134
  store %struct._object* %call4, %struct._object** %codec, align 8, !dbg !4135, !tbaa !1464
  %12 = load %struct._object*, %struct._object** %codec, align 8, !dbg !4136, !tbaa !1464
  %cmp5 = icmp eq %struct._object* %12, null, !dbg !4138
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !4139

if.then.6:                                        ; preds = %if.end.3
  br label %errorexit, !dbg !4140

if.end.7:                                         ; preds = %if.end.3
  %13 = load %struct._object*, %struct._object** %codec, align 8, !dbg !4141, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !4143
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4143, !tbaa !1563
  %cmp8 = icmp eq %struct._typeobject* %14, @MultibyteCodec_Type, !dbg !4144
  br i1 %cmp8, label %if.end.10, label %if.then.9, !dbg !4145

if.then.9:                                        ; preds = %if.end.7
  %15 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4146, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i32 0, i32 0)), !dbg !4148
  br label %errorexit, !dbg !4149

if.end.10:                                        ; preds = %if.end.7
  %16 = load %struct._object*, %struct._object** %codec, align 8, !dbg !4150, !tbaa !1464
  %17 = bitcast %struct._object* %16 to %struct.MultibyteCodecObject*, !dbg !4151
  %codec11 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %17, i32 0, i32 1, !dbg !4152
  %18 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec11, align 8, !dbg !4152, !tbaa !1680
  %19 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self, align 8, !dbg !4153, !tbaa !1464
  %codec12 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %19, i32 0, i32 1, !dbg !4154
  store %struct.MultibyteCodec* %18, %struct.MultibyteCodec** %codec12, align 8, !dbg !4155, !tbaa !4156
  %20 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self, align 8, !dbg !4157, !tbaa !1464
  %pendingsize = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %20, i32 0, i32 5, !dbg !4158
  store i64 0, i64* %pendingsize, align 8, !dbg !4159, !tbaa !4160
  %21 = load i8*, i8** %errors, align 8, !dbg !4161, !tbaa !1464
  %call13 = call %struct._object* @internal_error_callback(i8* %21), !dbg !4162
  %22 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self, align 8, !dbg !4163, !tbaa !1464
  %errors14 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %22, i32 0, i32 3, !dbg !4164
  store %struct._object* %call13, %struct._object** %errors14, align 8, !dbg !4165, !tbaa !4007
  %23 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self, align 8, !dbg !4166, !tbaa !1464
  %errors15 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %23, i32 0, i32 3, !dbg !4168
  %24 = load %struct._object*, %struct._object** %errors15, align 8, !dbg !4168, !tbaa !4007
  %cmp16 = icmp eq %struct._object* %24, null, !dbg !4169
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !4170

if.then.17:                                       ; preds = %if.end.10
  br label %errorexit, !dbg !4171

if.end.18:                                        ; preds = %if.end.10
  %25 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self, align 8, !dbg !4172, !tbaa !1464
  %codec19 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %25, i32 0, i32 1, !dbg !4174
  %26 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec19, align 8, !dbg !4174, !tbaa !4156
  %decinit = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %26, i32 0, i32 7, !dbg !4175
  %27 = load i32 (%union.MultibyteCodec_State*, i8*)*, i32 (%union.MultibyteCodec_State*, i8*)** %decinit, align 8, !dbg !4175, !tbaa !4176
  %cmp20 = icmp ne i32 (%union.MultibyteCodec_State*, i8*)* %27, null, !dbg !4177
  br i1 %cmp20, label %land.lhs.true, label %if.end.27, !dbg !4178

land.lhs.true:                                    ; preds = %if.end.18
  %28 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self, align 8, !dbg !4179, !tbaa !1464
  %codec21 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %28, i32 0, i32 1, !dbg !4180
  %29 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec21, align 8, !dbg !4180, !tbaa !4156
  %decinit22 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %29, i32 0, i32 7, !dbg !4181
  %30 = load i32 (%union.MultibyteCodec_State*, i8*)*, i32 (%union.MultibyteCodec_State*, i8*)** %decinit22, align 8, !dbg !4181, !tbaa !4176
  %31 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self, align 8, !dbg !4182, !tbaa !1464
  %state = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %31, i32 0, i32 2, !dbg !4183
  %32 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self, align 8, !dbg !4184, !tbaa !1464
  %codec23 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %32, i32 0, i32 1, !dbg !4185
  %33 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec23, align 8, !dbg !4185, !tbaa !4156
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %33, i32 0, i32 1, !dbg !4186
  %34 = load i8*, i8** %config, align 8, !dbg !4186, !tbaa !1717
  %call24 = call i32 %30(%union.MultibyteCodec_State* %state, i8* %34), !dbg !4179
  %cmp25 = icmp ne i32 %call24, 0, !dbg !4187
  br i1 %cmp25, label %if.then.26, label %if.end.27, !dbg !4188

if.then.26:                                       ; preds = %land.lhs.true
  br label %errorexit, !dbg !4189

if.end.27:                                        ; preds = %land.lhs.true, %if.end.18
  br label %do.body, !dbg !4190

do.body:                                          ; preds = %if.end.27
  %35 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4191
  call void @llvm.lifetime.start(i64 8, i8* %35) #1, !dbg !4191
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1011, metadata !1451), !dbg !4193
  %36 = load %struct._object*, %struct._object** %codec, align 8, !dbg !4194, !tbaa !1464
  store %struct._object* %36, %struct._object** %_py_decref_tmp, align 8, !dbg !4193, !tbaa !1464
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4195, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !4197
  %38 = load i64, i64* %ob_refcnt, align 8, !dbg !4198, !tbaa !1498
  %dec = add i64 %38, -1, !dbg !4198
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4198, !tbaa !1498
  %cmp28 = icmp ne i64 %dec, 0, !dbg !4199
  br i1 %cmp28, label %if.then.29, label %if.else, !dbg !4200

if.then.29:                                       ; preds = %do.body
  br label %if.end.31, !dbg !4201

if.else:                                          ; preds = %do.body
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4203, !tbaa !1464
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !4205
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !4205, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !4206
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4206, !tbaa !1565
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4207, !tbaa !1464
  call void %41(%struct._object* %42), !dbg !4208
  br label %if.end.31

if.end.31:                                        ; preds = %if.else, %if.then.29
  %43 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4209
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !4209
  br label %do.cond, !dbg !4211

do.cond:                                          ; preds = %if.end.31
  br label %do.end, !dbg !4212

do.end:                                           ; preds = %do.cond
  %44 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self, align 8, !dbg !4214, !tbaa !1464
  %45 = bitcast %struct.MultibyteIncrementalDecoderObject* %44 to %struct._object*, !dbg !4215
  store %struct._object* %45, %struct._object** %retval, !dbg !4216
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4216

errorexit:                                        ; preds = %if.then.26, %if.then.17, %if.then.9, %if.then.6
  br label %do.body.32, !dbg !4217

do.body.32:                                       ; preds = %errorexit
  %46 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4218
  call void @llvm.lifetime.start(i64 8, i8* %46) #1, !dbg !4218
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1013, metadata !1451), !dbg !4220
  %47 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self, align 8, !dbg !4221, !tbaa !1464
  %48 = bitcast %struct.MultibyteIncrementalDecoderObject* %47 to %struct._object*, !dbg !4222
  store %struct._object* %48, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4220, !tbaa !1464
  %49 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4223, !tbaa !1464
  %cmp33 = icmp ne %struct._object* %49, null, !dbg !4224
  br i1 %cmp33, label %if.then.34, label %if.end.47, !dbg !4225

if.then.34:                                       ; preds = %do.body.32
  br label %do.body.35, !dbg !4226

do.body.35:                                       ; preds = %if.then.34
  %50 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !4228
  call void @llvm.lifetime.start(i64 8, i8* %50) #1, !dbg !4228
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !1015, metadata !1451), !dbg !4230
  %51 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4231, !tbaa !1464
  store %struct._object* %51, %struct._object** %_py_decref_tmp36, align 8, !dbg !4230, !tbaa !1464
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !4232, !tbaa !1464
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !4234
  %53 = load i64, i64* %ob_refcnt37, align 8, !dbg !4235, !tbaa !1498
  %dec38 = add i64 %53, -1, !dbg !4235
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !4235, !tbaa !1498
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !4236
  br i1 %cmp39, label %if.then.40, label %if.else.41, !dbg !4237

if.then.40:                                       ; preds = %do.body.35
  br label %if.end.44, !dbg !4238

if.else.41:                                       ; preds = %do.body.35
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !4240, !tbaa !1464
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !4242
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !4242, !tbaa !1563
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !4243
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8, !dbg !4243, !tbaa !1565
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !4244, !tbaa !1464
  call void %56(%struct._object* %57), !dbg !4245
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.then.40
  %58 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !4246
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !4246
  br label %do.cond.45, !dbg !4248

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !4249

do.end.46:                                        ; preds = %do.cond.45
  br label %if.end.47, !dbg !4251

if.end.47:                                        ; preds = %do.end.46, %do.body.32
  %59 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4253
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !4253
  br label %do.cond.48, !dbg !4256

do.cond.48:                                       ; preds = %if.end.47
  br label %do.end.49, !dbg !4257

do.end.49:                                        ; preds = %do.cond.48
  br label %do.body.50, !dbg !4259

do.body.50:                                       ; preds = %do.end.49
  %60 = bitcast %struct._object** %_py_xdecref_tmp51 to i8*, !dbg !4260
  call void @llvm.lifetime.start(i64 8, i8* %60) #1, !dbg !4260
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp51, metadata !1018, metadata !1451), !dbg !4262
  %61 = load %struct._object*, %struct._object** %codec, align 8, !dbg !4263, !tbaa !1464
  store %struct._object* %61, %struct._object** %_py_xdecref_tmp51, align 8, !dbg !4262, !tbaa !1464
  %62 = load %struct._object*, %struct._object** %_py_xdecref_tmp51, align 8, !dbg !4264, !tbaa !1464
  %cmp52 = icmp ne %struct._object* %62, null, !dbg !4265
  br i1 %cmp52, label %if.then.53, label %if.end.66, !dbg !4266

if.then.53:                                       ; preds = %do.body.50
  br label %do.body.54, !dbg !4267

do.body.54:                                       ; preds = %if.then.53
  %63 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !4269
  call void @llvm.lifetime.start(i64 8, i8* %63) #1, !dbg !4269
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp55, metadata !1020, metadata !1451), !dbg !4271
  %64 = load %struct._object*, %struct._object** %_py_xdecref_tmp51, align 8, !dbg !4272, !tbaa !1464
  store %struct._object* %64, %struct._object** %_py_decref_tmp55, align 8, !dbg !4271, !tbaa !1464
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !4273, !tbaa !1464
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !4275
  %66 = load i64, i64* %ob_refcnt56, align 8, !dbg !4276, !tbaa !1498
  %dec57 = add i64 %66, -1, !dbg !4276
  store i64 %dec57, i64* %ob_refcnt56, align 8, !dbg !4276, !tbaa !1498
  %cmp58 = icmp ne i64 %dec57, 0, !dbg !4277
  br i1 %cmp58, label %if.then.59, label %if.else.60, !dbg !4278

if.then.59:                                       ; preds = %do.body.54
  br label %if.end.63, !dbg !4279

if.else.60:                                       ; preds = %do.body.54
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !4281, !tbaa !1464
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !4283
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !4283, !tbaa !1563
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !4284
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8, !dbg !4284, !tbaa !1565
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !4285, !tbaa !1464
  call void %69(%struct._object* %70), !dbg !4286
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.59
  %71 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !4287
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !4287
  br label %do.cond.64, !dbg !4289

do.cond.64:                                       ; preds = %if.end.63
  br label %do.end.65, !dbg !4290

do.end.65:                                        ; preds = %do.cond.64
  br label %if.end.66, !dbg !4292

if.end.66:                                        ; preds = %do.end.65, %do.body.50
  %72 = bitcast %struct._object** %_py_xdecref_tmp51 to i8*, !dbg !4294
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !4294
  br label %do.cond.67, !dbg !4295

do.cond.67:                                       ; preds = %if.end.66
  br label %do.end.68, !dbg !4296

do.end.68:                                        ; preds = %do.cond.67
  store %struct._object* null, %struct._object** %retval, !dbg !4298
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4298

cleanup:                                          ; preds = %do.end.68, %do.end, %if.then.2, %if.then
  %73 = bitcast i8** %errors to i8*, !dbg !4299
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !4299
  %74 = bitcast %struct._object** %codec to i8*, !dbg !4299
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !4299
  %75 = bitcast %struct.MultibyteIncrementalDecoderObject** %self to i8*, !dbg !4299
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !4299
  %76 = load %struct._object*, %struct._object** %retval, !dbg !4299
  ret %struct._object* %76, !dbg !4299
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbidecoder_decode(%struct.MultibyteIncrementalDecoderObject* %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteIncrementalDecoderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwargs.addr = alloca %struct._object*, align 8
  %buf = alloca %struct.MultibyteDecodeBuffer, align 8
  %data = alloca i8*, align 8
  %wdata = alloca i8*, align 8
  %pdata = alloca %struct.bufferinfo, align 8
  %wsize = alloca i64, align 8
  %size = alloca i64, align 8
  %origpending = alloca i64, align 8
  %final = alloca i32, align 4
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp71 = alloca %struct._object*, align 8
  %_py_decref_tmp76 = alloca %struct._object*, align 8
  store %struct.MultibyteIncrementalDecoderObject* %self, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteIncrementalDecoderObject** %self.addr, metadata !918, metadata !1451), !dbg !4300
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !919, metadata !1451), !dbg !4301
  store %struct._object* %kwargs, %struct._object** %kwargs.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %kwargs.addr, metadata !920, metadata !1451), !dbg !4302
  %0 = bitcast %struct.MultibyteDecodeBuffer* %buf to i8*, !dbg !4303
  call void @llvm.lifetime.start(i64 88, i8* %0) #1, !dbg !4303
  call void @llvm.dbg.declare(metadata %struct.MultibyteDecodeBuffer* %buf, metadata !921, metadata !1451), !dbg !4304
  %1 = bitcast i8** %data to i8*, !dbg !4305
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4305
  call void @llvm.dbg.declare(metadata i8** %data, metadata !930, metadata !1451), !dbg !4306
  %2 = bitcast i8** %wdata to i8*, !dbg !4305
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4305
  call void @llvm.dbg.declare(metadata i8** %wdata, metadata !931, metadata !1451), !dbg !4307
  store i8* null, i8** %wdata, align 8, !dbg !4307, !tbaa !1464
  %3 = bitcast %struct.bufferinfo* %pdata to i8*, !dbg !4308
  call void @llvm.lifetime.start(i64 80, i8* %3) #1, !dbg !4308
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %pdata, metadata !932, metadata !1451), !dbg !4309
  %4 = bitcast i64* %wsize to i8*, !dbg !4310
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4310
  call void @llvm.dbg.declare(metadata i64* %wsize, metadata !933, metadata !1451), !dbg !4311
  %5 = bitcast i64* %size to i8*, !dbg !4310
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4310
  call void @llvm.dbg.declare(metadata i64* %size, metadata !934, metadata !1451), !dbg !4312
  %6 = bitcast i64* %origpending to i8*, !dbg !4310
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !4310
  call void @llvm.dbg.declare(metadata i64* %origpending, metadata !935, metadata !1451), !dbg !4313
  %7 = bitcast i32* %final to i8*, !dbg !4314
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !4314
  call void @llvm.dbg.declare(metadata i32* %final, metadata !936, metadata !1451), !dbg !4315
  store i32 0, i32* %final, align 4, !dbg !4315, !tbaa !1475
  %8 = bitcast %struct._object** %res to i8*, !dbg !4316
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !4316
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !937, metadata !1451), !dbg !4317
  %9 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4318, !tbaa !1464
  %10 = load %struct._object*, %struct._object** %kwargs.addr, align 8, !dbg !4320, !tbaa !1464
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %9, %struct._object* %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @incrementalkwarglist, i32 0, i32 0), %struct.bufferinfo* %pdata, i32* %final), !dbg !4321
  %tobool = icmp ne i32 %call, 0, !dbg !4321
  br i1 %tobool, label %if.end, label %if.then, !dbg !4322

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4323
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4323

if.end:                                           ; preds = %entry
  %buf1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %pdata, i32 0, i32 0, !dbg !4324
  %11 = load i8*, i8** %buf1, align 8, !dbg !4324, !tbaa !4325
  store i8* %11, i8** %data, align 8, !dbg !4327, !tbaa !1464
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %pdata, i32 0, i32 2, !dbg !4328
  %12 = load i64, i64* %len, align 8, !dbg !4328, !tbaa !4329
  store i64 %12, i64* %size, align 8, !dbg !4330, !tbaa !1876
  %writer = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 4, !dbg !4331
  call void @_PyUnicodeWriter_Init(%struct._PyUnicodeWriter* %writer), !dbg !4332
  %excobj = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 3, !dbg !4333
  store %struct._object* null, %struct._object** %excobj, align 8, !dbg !4334, !tbaa !4335
  %13 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4338, !tbaa !1464
  %pendingsize = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %13, i32 0, i32 5, !dbg !4339
  %14 = load i64, i64* %pendingsize, align 8, !dbg !4339, !tbaa !4160
  store i64 %14, i64* %origpending, align 8, !dbg !4340, !tbaa !1876
  %15 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4341, !tbaa !1464
  %pendingsize2 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %15, i32 0, i32 5, !dbg !4343
  %16 = load i64, i64* %pendingsize2, align 8, !dbg !4343, !tbaa !4160
  %cmp = icmp eq i64 %16, 0, !dbg !4344
  br i1 %cmp, label %if.then.3, label %if.else, !dbg !4345

if.then.3:                                        ; preds = %if.end
  %17 = load i64, i64* %size, align 8, !dbg !4346, !tbaa !1876
  store i64 %17, i64* %wsize, align 8, !dbg !4348, !tbaa !1876
  %18 = load i8*, i8** %data, align 8, !dbg !4349, !tbaa !1464
  store i8* %18, i8** %wdata, align 8, !dbg !4350, !tbaa !1464
  br label %if.end.18, !dbg !4351

if.else:                                          ; preds = %if.end
  %19 = load i64, i64* %size, align 8, !dbg !4352, !tbaa !1876
  %20 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4355, !tbaa !1464
  %pendingsize4 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %20, i32 0, i32 5, !dbg !4356
  %21 = load i64, i64* %pendingsize4, align 8, !dbg !4356, !tbaa !4160
  %sub = sub i64 9223372036854775807, %21, !dbg !4357
  %cmp5 = icmp sgt i64 %19, %sub, !dbg !4358
  br i1 %cmp5, label %if.then.6, label %if.end.8, !dbg !4359

if.then.6:                                        ; preds = %if.else
  %call7 = call %struct._object* @PyErr_NoMemory(), !dbg !4360
  br label %errorexit, !dbg !4362

if.end.8:                                         ; preds = %if.else
  %22 = load i64, i64* %size, align 8, !dbg !4363, !tbaa !1876
  %23 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4364, !tbaa !1464
  %pendingsize9 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %23, i32 0, i32 5, !dbg !4365
  %24 = load i64, i64* %pendingsize9, align 8, !dbg !4365, !tbaa !4160
  %add = add i64 %22, %24, !dbg !4366
  store i64 %add, i64* %wsize, align 8, !dbg !4367, !tbaa !1876
  %25 = load i64, i64* %wsize, align 8, !dbg !4368, !tbaa !1876
  %call10 = call i8* @PyMem_Malloc(i64 %25), !dbg !4369
  store i8* %call10, i8** %wdata, align 8, !dbg !4370, !tbaa !1464
  %26 = load i8*, i8** %wdata, align 8, !dbg !4371, !tbaa !1464
  %cmp11 = icmp eq i8* %26, null, !dbg !4373
  br i1 %cmp11, label %if.then.12, label %if.end.14, !dbg !4374

if.then.12:                                       ; preds = %if.end.8
  %call13 = call %struct._object* @PyErr_NoMemory(), !dbg !4375
  br label %errorexit, !dbg !4377

if.end.14:                                        ; preds = %if.end.8
  %27 = load i8*, i8** %wdata, align 8, !dbg !4378, !tbaa !1464
  %28 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4379, !tbaa !1464
  %pending = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %28, i32 0, i32 4, !dbg !4380
  %29 = bitcast [8 x i8]* %pending to i8*, !dbg !4381
  %30 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4382, !tbaa !1464
  %pendingsize15 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %30, i32 0, i32 5, !dbg !4383
  %31 = load i64, i64* %pendingsize15, align 8, !dbg !4383, !tbaa !4160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %29, i64 %31, i32 1, i1 false), !dbg !4381
  %32 = load i8*, i8** %wdata, align 8, !dbg !4384, !tbaa !1464
  %33 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4385, !tbaa !1464
  %pendingsize16 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %33, i32 0, i32 5, !dbg !4386
  %34 = load i64, i64* %pendingsize16, align 8, !dbg !4386, !tbaa !4160
  %add.ptr = getelementptr i8, i8* %32, i64 %34, !dbg !4387
  %35 = load i8*, i8** %data, align 8, !dbg !4388, !tbaa !1464
  %36 = load i64, i64* %size, align 8, !dbg !4389, !tbaa !1876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %35, i64 %36, i32 1, i1 false), !dbg !4390
  %37 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4391, !tbaa !1464
  %pendingsize17 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %37, i32 0, i32 5, !dbg !4392
  store i64 0, i64* %pendingsize17, align 8, !dbg !4393, !tbaa !4160
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.14, %if.then.3
  %38 = load i8*, i8** %wdata, align 8, !dbg !4394, !tbaa !1464
  %39 = load i64, i64* %wsize, align 8, !dbg !4396, !tbaa !1876
  %call19 = call i32 @decoder_prepare_buffer(%struct.MultibyteDecodeBuffer* %buf, i8* %38, i64 %39), !dbg !4397
  %cmp20 = icmp ne i32 %call19, 0, !dbg !4398
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !4399

if.then.21:                                       ; preds = %if.end.18
  br label %errorexit, !dbg !4400

if.end.22:                                        ; preds = %if.end.18
  %40 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4401, !tbaa !1464
  %41 = bitcast %struct.MultibyteIncrementalDecoderObject* %40 to %struct.MultibyteStatefulDecoderContext*, !dbg !4403
  %call23 = call i32 @decoder_feed_buffer(%struct.MultibyteStatefulDecoderContext* %41, %struct.MultibyteDecodeBuffer* %buf), !dbg !4404
  %tobool24 = icmp ne i32 %call23, 0, !dbg !4404
  br i1 %tobool24, label %if.then.25, label %if.end.26, !dbg !4405

if.then.25:                                       ; preds = %if.end.22
  br label %errorexit, !dbg !4406

if.end.26:                                        ; preds = %if.end.22
  %42 = load i32, i32* %final, align 4, !dbg !4407, !tbaa !1475
  %tobool27 = icmp ne i32 %42, 0, !dbg !4407
  br i1 %tobool27, label %land.lhs.true, label %if.end.36, !dbg !4409

land.lhs.true:                                    ; preds = %if.end.26
  %inbuf = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 0, !dbg !4410
  %43 = load i8*, i8** %inbuf, align 8, !dbg !4410, !tbaa !4412
  %inbuf_end = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 2, !dbg !4413
  %44 = load i8*, i8** %inbuf_end, align 8, !dbg !4413, !tbaa !4414
  %cmp28 = icmp ult i8* %43, %44, !dbg !4415
  br i1 %cmp28, label %if.then.29, label %if.end.36, !dbg !4416

if.then.29:                                       ; preds = %land.lhs.true
  %45 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4417, !tbaa !1464
  %codec = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %45, i32 0, i32 1, !dbg !4420
  %46 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !4420, !tbaa !4156
  %47 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4421, !tbaa !1464
  %state = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %47, i32 0, i32 2, !dbg !4422
  %48 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4423, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %48, i32 0, i32 3, !dbg !4424
  %49 = load %struct._object*, %struct._object** %errors, align 8, !dbg !4424, !tbaa !4007
  %call30 = call i32 @multibytecodec_decerror(%struct.MultibyteCodec* %46, %union.MultibyteCodec_State* %state, %struct.MultibyteDecodeBuffer* %buf, %struct._object* %49, i64 -2), !dbg !4425
  %tobool31 = icmp ne i32 %call30, 0, !dbg !4425
  br i1 %tobool31, label %if.then.32, label %if.end.35, !dbg !4426

if.then.32:                                       ; preds = %if.then.29
  %50 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4427, !tbaa !1464
  %pending33 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %50, i32 0, i32 4, !dbg !4429
  %51 = bitcast [8 x i8]* %pending33 to i8*, !dbg !4430
  %52 = load i8*, i8** %wdata, align 8, !dbg !4431, !tbaa !1464
  %53 = load i64, i64* %origpending, align 8, !dbg !4432, !tbaa !1876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 %53, i32 1, i1 false), !dbg !4430
  %54 = load i64, i64* %origpending, align 8, !dbg !4433, !tbaa !1876
  %55 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4434, !tbaa !1464
  %pendingsize34 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %55, i32 0, i32 5, !dbg !4435
  store i64 %54, i64* %pendingsize34, align 8, !dbg !4436, !tbaa !4160
  br label %errorexit, !dbg !4437

if.end.35:                                        ; preds = %if.then.29
  br label %if.end.36, !dbg !4438

if.end.36:                                        ; preds = %if.end.35, %land.lhs.true, %if.end.26
  %inbuf37 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 0, !dbg !4439
  %56 = load i8*, i8** %inbuf37, align 8, !dbg !4439, !tbaa !4412
  %inbuf_end38 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 2, !dbg !4441
  %57 = load i8*, i8** %inbuf_end38, align 8, !dbg !4441, !tbaa !4414
  %cmp39 = icmp ult i8* %56, %57, !dbg !4442
  br i1 %cmp39, label %if.then.40, label %if.end.45, !dbg !4443

if.then.40:                                       ; preds = %if.end.36
  %58 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4444, !tbaa !1464
  %59 = bitcast %struct.MultibyteIncrementalDecoderObject* %58 to %struct.MultibyteStatefulDecoderContext*, !dbg !4447
  %call41 = call i32 @decoder_append_pending(%struct.MultibyteStatefulDecoderContext* %59, %struct.MultibyteDecodeBuffer* %buf), !dbg !4448
  %cmp42 = icmp ne i32 %call41, 0, !dbg !4449
  br i1 %cmp42, label %if.then.43, label %if.end.44, !dbg !4450

if.then.43:                                       ; preds = %if.then.40
  br label %errorexit, !dbg !4451

if.end.44:                                        ; preds = %if.then.40
  br label %if.end.45, !dbg !4452

if.end.45:                                        ; preds = %if.end.44, %if.end.36
  %writer46 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 4, !dbg !4453
  %call47 = call %struct._object* @_PyUnicodeWriter_Finish(%struct._PyUnicodeWriter* %writer46), !dbg !4454
  store %struct._object* %call47, %struct._object** %res, align 8, !dbg !4455, !tbaa !1464
  %60 = load %struct._object*, %struct._object** %res, align 8, !dbg !4456, !tbaa !1464
  %cmp48 = icmp eq %struct._object* %60, null, !dbg !4458
  br i1 %cmp48, label %if.then.49, label %if.end.50, !dbg !4459

if.then.49:                                       ; preds = %if.end.45
  br label %errorexit, !dbg !4460

if.end.50:                                        ; preds = %if.end.45
  call void @PyBuffer_Release(%struct.bufferinfo* %pdata), !dbg !4461
  %61 = load i8*, i8** %wdata, align 8, !dbg !4462, !tbaa !1464
  %62 = load i8*, i8** %data, align 8, !dbg !4464, !tbaa !1464
  %cmp51 = icmp ne i8* %61, %62, !dbg !4465
  br i1 %cmp51, label %if.then.52, label %if.end.53, !dbg !4466

if.then.52:                                       ; preds = %if.end.50
  %63 = load i8*, i8** %wdata, align 8, !dbg !4467, !tbaa !1464
  call void @PyMem_Free(i8* %63), !dbg !4468
  br label %if.end.53, !dbg !4468

if.end.53:                                        ; preds = %if.then.52, %if.end.50
  br label %do.body, !dbg !4469

do.body:                                          ; preds = %if.end.53
  %64 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4470
  call void @llvm.lifetime.start(i64 8, i8* %64) #1, !dbg !4470
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !938, metadata !1451), !dbg !4472
  %excobj54 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 3, !dbg !4473
  %65 = load %struct._object*, %struct._object** %excobj54, align 8, !dbg !4473, !tbaa !4335
  store %struct._object* %65, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4472, !tbaa !1464
  %66 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4474, !tbaa !1464
  %cmp55 = icmp ne %struct._object* %66, null, !dbg !4475
  br i1 %cmp55, label %if.then.56, label %if.end.62, !dbg !4476

if.then.56:                                       ; preds = %do.body
  br label %do.body.57, !dbg !4477

do.body.57:                                       ; preds = %if.then.56
  %67 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4479
  call void @llvm.lifetime.start(i64 8, i8* %67) #1, !dbg !4479
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !940, metadata !1451), !dbg !4481
  %68 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4482, !tbaa !1464
  store %struct._object* %68, %struct._object** %_py_decref_tmp, align 8, !dbg !4481, !tbaa !1464
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4483, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !4485
  %70 = load i64, i64* %ob_refcnt, align 8, !dbg !4486, !tbaa !1498
  %dec = add i64 %70, -1, !dbg !4486
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4486, !tbaa !1498
  %cmp58 = icmp ne i64 %dec, 0, !dbg !4487
  br i1 %cmp58, label %if.then.59, label %if.else.60, !dbg !4488

if.then.59:                                       ; preds = %do.body.57
  br label %if.end.61, !dbg !4489

if.else.60:                                       ; preds = %do.body.57
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4491, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !4493
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4493, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4, !dbg !4494
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4494, !tbaa !1565
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4495, !tbaa !1464
  call void %73(%struct._object* %74), !dbg !4496
  br label %if.end.61

if.end.61:                                        ; preds = %if.else.60, %if.then.59
  %75 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4497
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !4497
  br label %do.cond, !dbg !4499

do.cond:                                          ; preds = %if.end.61
  br label %do.end, !dbg !4500

do.end:                                           ; preds = %do.cond
  br label %if.end.62, !dbg !4502

if.end.62:                                        ; preds = %do.end, %do.body
  %76 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4504
  call void @llvm.lifetime.end(i64 8, i8* %76) #1, !dbg !4504
  br label %do.cond.63, !dbg !4507

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !4508

do.end.64:                                        ; preds = %do.cond.63
  %77 = load %struct._object*, %struct._object** %res, align 8, !dbg !4510, !tbaa !1464
  store %struct._object* %77, %struct._object** %retval, !dbg !4511
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4511

errorexit:                                        ; preds = %if.then.49, %if.then.43, %if.then.32, %if.then.25, %if.then.21, %if.then.12, %if.then.6
  call void @PyBuffer_Release(%struct.bufferinfo* %pdata), !dbg !4512
  %78 = load i8*, i8** %wdata, align 8, !dbg !4513, !tbaa !1464
  %cmp65 = icmp ne i8* %78, null, !dbg !4515
  br i1 %cmp65, label %land.lhs.true.66, label %if.end.69, !dbg !4516

land.lhs.true.66:                                 ; preds = %errorexit
  %79 = load i8*, i8** %wdata, align 8, !dbg !4517, !tbaa !1464
  %80 = load i8*, i8** %data, align 8, !dbg !4519, !tbaa !1464
  %cmp67 = icmp ne i8* %79, %80, !dbg !4520
  br i1 %cmp67, label %if.then.68, label %if.end.69, !dbg !4521

if.then.68:                                       ; preds = %land.lhs.true.66
  %81 = load i8*, i8** %wdata, align 8, !dbg !4522, !tbaa !1464
  call void @PyMem_Free(i8* %81), !dbg !4523
  br label %if.end.69, !dbg !4523

if.end.69:                                        ; preds = %if.then.68, %land.lhs.true.66, %errorexit
  br label %do.body.70, !dbg !4524

do.body.70:                                       ; preds = %if.end.69
  %82 = bitcast %struct._object** %_py_xdecref_tmp71 to i8*, !dbg !4525
  call void @llvm.lifetime.start(i64 8, i8* %82) #1, !dbg !4525
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp71, metadata !943, metadata !1451), !dbg !4527
  %excobj72 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 3, !dbg !4528
  %83 = load %struct._object*, %struct._object** %excobj72, align 8, !dbg !4528, !tbaa !4335
  store %struct._object* %83, %struct._object** %_py_xdecref_tmp71, align 8, !dbg !4527, !tbaa !1464
  %84 = load %struct._object*, %struct._object** %_py_xdecref_tmp71, align 8, !dbg !4529, !tbaa !1464
  %cmp73 = icmp ne %struct._object* %84, null, !dbg !4530
  br i1 %cmp73, label %if.then.74, label %if.end.87, !dbg !4531

if.then.74:                                       ; preds = %do.body.70
  br label %do.body.75, !dbg !4532

do.body.75:                                       ; preds = %if.then.74
  %85 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !4534
  call void @llvm.lifetime.start(i64 8, i8* %85) #1, !dbg !4534
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp76, metadata !945, metadata !1451), !dbg !4536
  %86 = load %struct._object*, %struct._object** %_py_xdecref_tmp71, align 8, !dbg !4537, !tbaa !1464
  store %struct._object* %86, %struct._object** %_py_decref_tmp76, align 8, !dbg !4536, !tbaa !1464
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !4538, !tbaa !1464
  %ob_refcnt77 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 0, !dbg !4540
  %88 = load i64, i64* %ob_refcnt77, align 8, !dbg !4541, !tbaa !1498
  %dec78 = add i64 %88, -1, !dbg !4541
  store i64 %dec78, i64* %ob_refcnt77, align 8, !dbg !4541, !tbaa !1498
  %cmp79 = icmp ne i64 %dec78, 0, !dbg !4542
  br i1 %cmp79, label %if.then.80, label %if.else.81, !dbg !4543

if.then.80:                                       ; preds = %do.body.75
  br label %if.end.84, !dbg !4544

if.else.81:                                       ; preds = %do.body.75
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !4546, !tbaa !1464
  %ob_type82 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 1, !dbg !4548
  %90 = load %struct._typeobject*, %struct._typeobject** %ob_type82, align 8, !dbg !4548, !tbaa !1563
  %tp_dealloc83 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %90, i32 0, i32 4, !dbg !4549
  %91 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc83, align 8, !dbg !4549, !tbaa !1565
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !4550, !tbaa !1464
  call void %91(%struct._object* %92), !dbg !4551
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.81, %if.then.80
  %93 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !4552
  call void @llvm.lifetime.end(i64 8, i8* %93) #1, !dbg !4552
  br label %do.cond.85, !dbg !4554

do.cond.85:                                       ; preds = %if.end.84
  br label %do.end.86, !dbg !4555

do.end.86:                                        ; preds = %do.cond.85
  br label %if.end.87, !dbg !4557

if.end.87:                                        ; preds = %do.end.86, %do.body.70
  %94 = bitcast %struct._object** %_py_xdecref_tmp71 to i8*, !dbg !4559
  call void @llvm.lifetime.end(i64 8, i8* %94) #1, !dbg !4559
  br label %do.cond.88, !dbg !4560

do.cond.88:                                       ; preds = %if.end.87
  br label %do.end.89, !dbg !4561

do.end.89:                                        ; preds = %do.cond.88
  %writer90 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 4, !dbg !4563
  call void @_PyUnicodeWriter_Dealloc(%struct._PyUnicodeWriter* %writer90), !dbg !4564
  store %struct._object* null, %struct._object** %retval, !dbg !4565
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4565

cleanup:                                          ; preds = %do.end.89, %do.end.64, %if.then
  %95 = bitcast %struct._object** %res to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %95) #1, !dbg !4566
  %96 = bitcast i32* %final to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 4, i8* %96) #1, !dbg !4566
  %97 = bitcast i64* %origpending to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %97) #1, !dbg !4566
  %98 = bitcast i64* %size to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %98) #1, !dbg !4566
  %99 = bitcast i64* %wsize to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %99) #1, !dbg !4566
  %100 = bitcast %struct.bufferinfo* %pdata to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 80, i8* %100) #1, !dbg !4566
  %101 = bitcast i8** %wdata to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !4566
  %102 = bitcast i8** %data to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %102) #1, !dbg !4566
  %103 = bitcast %struct.MultibyteDecodeBuffer* %buf to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 88, i8* %103) #1, !dbg !4566
  %104 = load %struct._object*, %struct._object** %retval, !dbg !4566
  ret %struct._object* %104, !dbg !4566
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbidecoder_reset(%struct.MultibyteIncrementalDecoderObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteIncrementalDecoderObject*, align 8
  store %struct.MultibyteIncrementalDecoderObject* %self, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteIncrementalDecoderObject** %self.addr, metadata !997, metadata !1451), !dbg !4567
  %0 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4568, !tbaa !1464
  %codec = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %0, i32 0, i32 1, !dbg !4570
  %1 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !4570, !tbaa !4156
  %decreset = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %1, i32 0, i32 8, !dbg !4571
  %2 = load i64 (%union.MultibyteCodec_State*, i8*)*, i64 (%union.MultibyteCodec_State*, i8*)** %decreset, align 8, !dbg !4571, !tbaa !4572
  %cmp = icmp ne i64 (%union.MultibyteCodec_State*, i8*)* %2, null, !dbg !4573
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4574

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4575, !tbaa !1464
  %codec1 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %3, i32 0, i32 1, !dbg !4576
  %4 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec1, align 8, !dbg !4576, !tbaa !4156
  %decreset2 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %4, i32 0, i32 8, !dbg !4577
  %5 = load i64 (%union.MultibyteCodec_State*, i8*)*, i64 (%union.MultibyteCodec_State*, i8*)** %decreset2, align 8, !dbg !4577, !tbaa !4572
  %6 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4578, !tbaa !1464
  %state = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %6, i32 0, i32 2, !dbg !4579
  %7 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4580, !tbaa !1464
  %codec3 = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %7, i32 0, i32 1, !dbg !4581
  %8 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec3, align 8, !dbg !4581, !tbaa !4156
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %8, i32 0, i32 1, !dbg !4582
  %9 = load i8*, i8** %config, align 8, !dbg !4582, !tbaa !1717
  %call = call i64 %5(%union.MultibyteCodec_State* %state, i8* %9), !dbg !4575
  %cmp4 = icmp ne i64 %call, 0, !dbg !4583
  br i1 %cmp4, label %if.then, label %if.end, !dbg !4584

if.then:                                          ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !4585
  br label %return, !dbg !4585

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load %struct.MultibyteIncrementalDecoderObject*, %struct.MultibyteIncrementalDecoderObject** %self.addr, align 8, !dbg !4586, !tbaa !1464
  %pendingsize = getelementptr inbounds %struct.MultibyteIncrementalDecoderObject, %struct.MultibyteIncrementalDecoderObject* %10, i32 0, i32 5, !dbg !4587
  store i64 0, i64* %pendingsize, align 8, !dbg !4588, !tbaa !4160
  %11 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4589, !tbaa !1498
  %inc = add i64 %11, 1, !dbg !4589
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4589, !tbaa !1498
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !4590
  br label %return, !dbg !4590

return:                                           ; preds = %if.end, %if.then
  %12 = load %struct._object*, %struct._object** %retval, !dbg !4591
  ret %struct._object* %12, !dbg !4591
}

declare void @_PyUnicodeWriter_Init(%struct._PyUnicodeWriter*) #3

declare i8* @PyMem_Malloc(i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @decoder_prepare_buffer(%struct.MultibyteDecodeBuffer* %buf, i8* %data, i64 %size) #0 {
entry:
  %buf.addr = alloca %struct.MultibyteDecodeBuffer*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.MultibyteDecodeBuffer* %buf, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteDecodeBuffer** %buf.addr, metadata !953, metadata !1451), !dbg !4592
  store i8* %data, i8** %data.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !954, metadata !1451), !dbg !4593
  store i64 %size, i64* %size.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !955, metadata !1451), !dbg !4594
  %0 = load i8*, i8** %data.addr, align 8, !dbg !4595, !tbaa !1464
  %1 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4596, !tbaa !1464
  %inbuf_top = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %1, i32 0, i32 1, !dbg !4597
  store i8* %0, i8** %inbuf_top, align 8, !dbg !4598, !tbaa !4599
  %2 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4600, !tbaa !1464
  %inbuf = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %2, i32 0, i32 0, !dbg !4601
  store i8* %0, i8** %inbuf, align 8, !dbg !4602, !tbaa !4412
  %3 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4603, !tbaa !1464
  %inbuf_top1 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %3, i32 0, i32 1, !dbg !4604
  %4 = load i8*, i8** %inbuf_top1, align 8, !dbg !4604, !tbaa !4599
  %5 = load i64, i64* %size.addr, align 8, !dbg !4605, !tbaa !1876
  %add.ptr = getelementptr i8, i8* %4, i64 %5, !dbg !4606
  %6 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4607, !tbaa !1464
  %inbuf_end = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %6, i32 0, i32 2, !dbg !4608
  store i8* %add.ptr, i8** %inbuf_end, align 8, !dbg !4609, !tbaa !4414
  %7 = load i64, i64* %size.addr, align 8, !dbg !4610, !tbaa !1876
  %8 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4611, !tbaa !1464
  %writer = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %8, i32 0, i32 4, !dbg !4612
  %min_length = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %writer, i32 0, i32 6, !dbg !4613
  %9 = load i64, i64* %min_length, align 8, !dbg !4614, !tbaa !4615
  %add = add i64 %9, %7, !dbg !4614
  store i64 %add, i64* %min_length, align 8, !dbg !4614, !tbaa !4615
  ret i32 0, !dbg !4616
}

; Function Attrs: nounwind uwtable
define internal i32 @decoder_feed_buffer(%struct.MultibyteStatefulDecoderContext* %ctx, %struct.MultibyteDecodeBuffer* %buf) #0 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.MultibyteStatefulDecoderContext*, align 8
  %buf.addr = alloca %struct.MultibyteDecodeBuffer*, align 8
  %inleft = alloca i64, align 8
  %r = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.MultibyteStatefulDecoderContext* %ctx, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStatefulDecoderContext** %ctx.addr, metadata !960, metadata !1451), !dbg !4617
  store %struct.MultibyteDecodeBuffer* %buf, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteDecodeBuffer** %buf.addr, metadata !961, metadata !1451), !dbg !4618
  br label %while.cond, !dbg !4619

while.cond:                                       ; preds = %cleanup.cont, %entry
  %0 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4620, !tbaa !1464
  %inbuf = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %0, i32 0, i32 0, !dbg !4623
  %1 = load i8*, i8** %inbuf, align 8, !dbg !4623, !tbaa !4412
  %2 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4624, !tbaa !1464
  %inbuf_end = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %2, i32 0, i32 2, !dbg !4625
  %3 = load i8*, i8** %inbuf_end, align 8, !dbg !4625, !tbaa !4414
  %cmp = icmp ult i8* %1, %3, !dbg !4626
  br i1 %cmp, label %while.body, label %while.end, !dbg !4619

while.body:                                       ; preds = %while.cond
  %4 = bitcast i64* %inleft to i8*, !dbg !4627
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4627
  call void @llvm.dbg.declare(metadata i64* %inleft, metadata !962, metadata !1451), !dbg !4628
  %5 = bitcast i64* %r to i8*, !dbg !4629
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4629
  call void @llvm.dbg.declare(metadata i64* %r, metadata !964, metadata !1451), !dbg !4630
  %6 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4631, !tbaa !1464
  %inbuf_end1 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %6, i32 0, i32 2, !dbg !4632
  %7 = load i8*, i8** %inbuf_end1, align 8, !dbg !4632, !tbaa !4414
  %8 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4633, !tbaa !1464
  %inbuf2 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %8, i32 0, i32 0, !dbg !4634
  %9 = load i8*, i8** %inbuf2, align 8, !dbg !4634, !tbaa !4412
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64, !dbg !4635
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !4635
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4635
  store i64 %sub.ptr.sub, i64* %inleft, align 8, !dbg !4636, !tbaa !1876
  %10 = load %struct.MultibyteStatefulDecoderContext*, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !dbg !4637, !tbaa !1464
  %codec = getelementptr inbounds %struct.MultibyteStatefulDecoderContext, %struct.MultibyteStatefulDecoderContext* %10, i32 0, i32 1, !dbg !4638
  %11 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !4638, !tbaa !4156
  %decode = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %11, i32 0, i32 6, !dbg !4639
  %12 = load i64 (%union.MultibyteCodec_State*, i8*, i8**, i64, %struct._PyUnicodeWriter*)*, i64 (%union.MultibyteCodec_State*, i8*, i8**, i64, %struct._PyUnicodeWriter*)** %decode, align 8, !dbg !4639, !tbaa !4640
  %13 = load %struct.MultibyteStatefulDecoderContext*, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !dbg !4641, !tbaa !1464
  %state = getelementptr inbounds %struct.MultibyteStatefulDecoderContext, %struct.MultibyteStatefulDecoderContext* %13, i32 0, i32 2, !dbg !4642
  %14 = load %struct.MultibyteStatefulDecoderContext*, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !dbg !4643, !tbaa !1464
  %codec3 = getelementptr inbounds %struct.MultibyteStatefulDecoderContext, %struct.MultibyteStatefulDecoderContext* %14, i32 0, i32 1, !dbg !4644
  %15 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec3, align 8, !dbg !4644, !tbaa !4156
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %15, i32 0, i32 1, !dbg !4645
  %16 = load i8*, i8** %config, align 8, !dbg !4645, !tbaa !1717
  %17 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4646, !tbaa !1464
  %inbuf4 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %17, i32 0, i32 0, !dbg !4647
  %18 = load i64, i64* %inleft, align 8, !dbg !4648, !tbaa !1876
  %19 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4649, !tbaa !1464
  %writer = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %19, i32 0, i32 4, !dbg !4650
  %call = call i64 %12(%union.MultibyteCodec_State* %state, i8* %16, i8** %inbuf4, i64 %18, %struct._PyUnicodeWriter* %writer), !dbg !4637
  store i64 %call, i64* %r, align 8, !dbg !4651, !tbaa !1876
  %20 = load i64, i64* %r, align 8, !dbg !4652, !tbaa !1876
  %cmp5 = icmp eq i64 %20, 0, !dbg !4654
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !4655

lor.lhs.false:                                    ; preds = %while.body
  %21 = load i64, i64* %r, align 8, !dbg !4656, !tbaa !1876
  %cmp6 = icmp eq i64 %21, -2, !dbg !4658
  br i1 %cmp6, label %if.then, label %if.else, !dbg !4659

if.then:                                          ; preds = %lor.lhs.false, %while.body
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4660

if.else:                                          ; preds = %lor.lhs.false
  %22 = load %struct.MultibyteStatefulDecoderContext*, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !dbg !4661, !tbaa !1464
  %codec7 = getelementptr inbounds %struct.MultibyteStatefulDecoderContext, %struct.MultibyteStatefulDecoderContext* %22, i32 0, i32 1, !dbg !4663
  %23 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec7, align 8, !dbg !4663, !tbaa !4156
  %24 = load %struct.MultibyteStatefulDecoderContext*, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !dbg !4664, !tbaa !1464
  %state8 = getelementptr inbounds %struct.MultibyteStatefulDecoderContext, %struct.MultibyteStatefulDecoderContext* %24, i32 0, i32 2, !dbg !4665
  %25 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4666, !tbaa !1464
  %26 = load %struct.MultibyteStatefulDecoderContext*, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !dbg !4667, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteStatefulDecoderContext, %struct.MultibyteStatefulDecoderContext* %26, i32 0, i32 3, !dbg !4668
  %27 = load %struct._object*, %struct._object** %errors, align 8, !dbg !4668, !tbaa !4007
  %28 = load i64, i64* %r, align 8, !dbg !4669, !tbaa !1876
  %call9 = call i32 @multibytecodec_decerror(%struct.MultibyteCodec* %23, %union.MultibyteCodec_State* %state8, %struct.MultibyteDecodeBuffer* %25, %struct._object* %27, i64 %28), !dbg !4670
  %tobool = icmp ne i32 %call9, 0, !dbg !4670
  br i1 %tobool, label %if.then.10, label %if.end, !dbg !4671

if.then.10:                                       ; preds = %if.else
  store i32 -1, i32* %retval, !dbg !4672
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4672

if.end:                                           ; preds = %if.else
  br label %if.end.11

if.end.11:                                        ; preds = %if.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !4673
  br label %cleanup, !dbg !4673

cleanup:                                          ; preds = %if.end.11, %if.then.10, %if.then
  %29 = bitcast i64* %r to i8*, !dbg !4674
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !4674
  %30 = bitcast i64* %inleft to i8*, !dbg !4674
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !4674
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 3, label %while.end
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond, !dbg !4619

while.end:                                        ; preds = %cleanup, %while.cond
  store i32 0, i32* %retval, !dbg !4675
  br label %return, !dbg !4675

return:                                           ; preds = %while.end, %cleanup
  %31 = load i32, i32* %retval, !dbg !4676
  ret i32 %31, !dbg !4676

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @multibytecodec_decerror(%struct.MultibyteCodec* %codec, %union.MultibyteCodec_State* %state, %struct.MultibyteDecodeBuffer* %buf, %struct._object* %errors, i64 %e) #0 {
entry:
  %retval = alloca i32, align 4
  %codec.addr = alloca %struct.MultibyteCodec*, align 8
  %state.addr = alloca %union.MultibyteCodec_State*, align 8
  %buf.addr = alloca %struct.MultibyteDecodeBuffer*, align 8
  %errors.addr = alloca %struct._object*, align 8
  %e.addr = alloca i64, align 8
  %retobj = alloca %struct._object*, align 8
  %retuni = alloca %struct._object*, align 8
  %newpos = alloca i64, align 8
  %reason = alloca i8*, align 8
  %esize = alloca i64, align 8
  %start = alloca i64, align 8
  %end = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  store %struct.MultibyteCodec* %codec, %struct.MultibyteCodec** %codec.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteCodec** %codec.addr, metadata !969, metadata !1451), !dbg !4677
  store %union.MultibyteCodec_State* %state, %union.MultibyteCodec_State** %state.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %union.MultibyteCodec_State** %state.addr, metadata !970, metadata !1451), !dbg !4678
  store %struct.MultibyteDecodeBuffer* %buf, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteDecodeBuffer** %buf.addr, metadata !971, metadata !1451), !dbg !4679
  store %struct._object* %errors, %struct._object** %errors.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %errors.addr, metadata !972, metadata !1451), !dbg !4680
  store i64 %e, i64* %e.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i64* %e.addr, metadata !973, metadata !1451), !dbg !4681
  %0 = bitcast %struct._object** %retobj to i8*, !dbg !4682
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4682
  call void @llvm.dbg.declare(metadata %struct._object** %retobj, metadata !974, metadata !1451), !dbg !4683
  store %struct._object* null, %struct._object** %retobj, align 8, !dbg !4683, !tbaa !1464
  %1 = bitcast %struct._object** %retuni to i8*, !dbg !4682
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4682
  call void @llvm.dbg.declare(metadata %struct._object** %retuni, metadata !975, metadata !1451), !dbg !4684
  store %struct._object* null, %struct._object** %retuni, align 8, !dbg !4684, !tbaa !1464
  %2 = bitcast i64* %newpos to i8*, !dbg !4685
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4685
  call void @llvm.dbg.declare(metadata i64* %newpos, metadata !976, metadata !1451), !dbg !4686
  %3 = bitcast i8** %reason to i8*, !dbg !4687
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !4687
  call void @llvm.dbg.declare(metadata i8** %reason, metadata !977, metadata !1451), !dbg !4688
  %4 = bitcast i64* %esize to i8*, !dbg !4689
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4689
  call void @llvm.dbg.declare(metadata i64* %esize, metadata !978, metadata !1451), !dbg !4690
  %5 = bitcast i64* %start to i8*, !dbg !4689
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4689
  call void @llvm.dbg.declare(metadata i64* %start, metadata !979, metadata !1451), !dbg !4691
  %6 = bitcast i64* %end to i8*, !dbg !4689
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !4689
  call void @llvm.dbg.declare(metadata i64* %end, metadata !980, metadata !1451), !dbg !4692
  %7 = load i64, i64* %e.addr, align 8, !dbg !4693, !tbaa !1876
  %cmp = icmp sgt i64 %7, 0, !dbg !4695
  br i1 %cmp, label %if.then, label %if.else, !dbg !4696

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i32 0, i32 0), i8** %reason, align 8, !dbg !4697, !tbaa !1464
  %8 = load i64, i64* %e.addr, align 8, !dbg !4699, !tbaa !1876
  store i64 %8, i64* %esize, align 8, !dbg !4700, !tbaa !1876
  br label %if.end, !dbg !4701

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %e.addr, align 8, !dbg !4702, !tbaa !1876
  switch i64 %9, label %sw.default [
    i64 -1, label %sw.bb
    i64 -2, label %sw.bb.1
    i64 -3, label %sw.bb.2
    i64 -4, label %sw.bb.3
  ], !dbg !4704

sw.bb:                                            ; preds = %if.else
  store i32 0, i32* %retval, !dbg !4705
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4705

sw.bb.1:                                          ; preds = %if.else
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i32 0, i32 0), i8** %reason, align 8, !dbg !4707, !tbaa !1464
  %10 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4708, !tbaa !1464
  %inbuf_end = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %10, i32 0, i32 2, !dbg !4709
  %11 = load i8*, i8** %inbuf_end, align 8, !dbg !4709, !tbaa !4414
  %12 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4710, !tbaa !1464
  %inbuf = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %12, i32 0, i32 0, !dbg !4711
  %13 = load i8*, i8** %inbuf, align 8, !dbg !4711, !tbaa !4412
  %sub.ptr.lhs.cast = ptrtoint i8* %11 to i64, !dbg !4712
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !4712
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4712
  store i64 %sub.ptr.sub, i64* %esize, align 8, !dbg !4713, !tbaa !1876
  br label %sw.epilog, !dbg !4714

sw.bb.2:                                          ; preds = %if.else
  %14 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !4715, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i32 0, i32 0)), !dbg !4716
  store i32 -1, i32* %retval, !dbg !4717
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4717

sw.bb.3:                                          ; preds = %if.else
  store i32 -1, i32* %retval, !dbg !4718
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4718

sw.default:                                       ; preds = %if.else
  %15 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !4719, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i32 0, i32 0)), !dbg !4720
  store i32 -1, i32* %retval, !dbg !4721
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4721

sw.epilog:                                        ; preds = %sw.bb.1
  br label %if.end

if.end:                                           ; preds = %sw.epilog, %if.then
  %16 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !4722, !tbaa !1464
  %cmp4 = icmp eq %struct._object* %16, inttoptr (i64 3 to %struct._object*), !dbg !4724
  br i1 %cmp4, label %if.then.5, label %if.end.9, !dbg !4725

if.then.5:                                        ; preds = %if.end
  %17 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4726, !tbaa !1464
  %writer = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %17, i32 0, i32 4, !dbg !4729
  %call = call i32 @_PyUnicodeWriter_WriteChar(%struct._PyUnicodeWriter* %writer, i32 65533), !dbg !4730
  %cmp6 = icmp slt i32 %call, 0, !dbg !4731
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !4732

if.then.7:                                        ; preds = %if.then.5
  br label %errorexit, !dbg !4733

if.end.8:                                         ; preds = %if.then.5
  br label %if.end.9, !dbg !4734

if.end.9:                                         ; preds = %if.end.8, %if.end
  %18 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !4735, !tbaa !1464
  %cmp10 = icmp eq %struct._object* %18, inttoptr (i64 2 to %struct._object*), !dbg !4737
  br i1 %cmp10, label %if.then.12, label %lor.lhs.false, !dbg !4738

lor.lhs.false:                                    ; preds = %if.end.9
  %19 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !4739, !tbaa !1464
  %cmp11 = icmp eq %struct._object* %19, inttoptr (i64 3 to %struct._object*), !dbg !4741
  br i1 %cmp11, label %if.then.12, label %if.end.14, !dbg !4742

if.then.12:                                       ; preds = %lor.lhs.false, %if.end.9
  %20 = load i64, i64* %esize, align 8, !dbg !4743, !tbaa !1876
  %21 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4745, !tbaa !1464
  %inbuf13 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %21, i32 0, i32 0, !dbg !4746
  %22 = load i8*, i8** %inbuf13, align 8, !dbg !4747, !tbaa !4412
  %add.ptr = getelementptr i8, i8* %22, i64 %20, !dbg !4747
  store i8* %add.ptr, i8** %inbuf13, align 8, !dbg !4747, !tbaa !4412
  store i32 0, i32* %retval, !dbg !4748
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4748

if.end.14:                                        ; preds = %lor.lhs.false
  %23 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4749, !tbaa !1464
  %inbuf15 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %23, i32 0, i32 0, !dbg !4750
  %24 = load i8*, i8** %inbuf15, align 8, !dbg !4750, !tbaa !4412
  %25 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4751, !tbaa !1464
  %inbuf_top = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %25, i32 0, i32 1, !dbg !4752
  %26 = load i8*, i8** %inbuf_top, align 8, !dbg !4752, !tbaa !4599
  %sub.ptr.lhs.cast16 = ptrtoint i8* %24 to i64, !dbg !4753
  %sub.ptr.rhs.cast17 = ptrtoint i8* %26 to i64, !dbg !4753
  %sub.ptr.sub18 = sub i64 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17, !dbg !4753
  store i64 %sub.ptr.sub18, i64* %start, align 8, !dbg !4754, !tbaa !1876
  %27 = load i64, i64* %start, align 8, !dbg !4755, !tbaa !1876
  %28 = load i64, i64* %esize, align 8, !dbg !4756, !tbaa !1876
  %add = add i64 %27, %28, !dbg !4757
  store i64 %add, i64* %end, align 8, !dbg !4758, !tbaa !1876
  %29 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4759, !tbaa !1464
  %excobj = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %29, i32 0, i32 3, !dbg !4761
  %30 = load %struct._object*, %struct._object** %excobj, align 8, !dbg !4761, !tbaa !4335
  %cmp19 = icmp eq %struct._object* %30, null, !dbg !4762
  br i1 %cmp19, label %if.then.20, label %if.else.33, !dbg !4763

if.then.20:                                       ; preds = %if.end.14
  %31 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec.addr, align 8, !dbg !4764, !tbaa !1464
  %encoding = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %31, i32 0, i32 0, !dbg !4766
  %32 = load i8*, i8** %encoding, align 8, !dbg !4766, !tbaa !3073
  %33 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4767, !tbaa !1464
  %inbuf_top21 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %33, i32 0, i32 1, !dbg !4768
  %34 = load i8*, i8** %inbuf_top21, align 8, !dbg !4768, !tbaa !4599
  %35 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4769, !tbaa !1464
  %inbuf_end22 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %35, i32 0, i32 2, !dbg !4770
  %36 = load i8*, i8** %inbuf_end22, align 8, !dbg !4770, !tbaa !4414
  %37 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4771, !tbaa !1464
  %inbuf_top23 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %37, i32 0, i32 1, !dbg !4772
  %38 = load i8*, i8** %inbuf_top23, align 8, !dbg !4772, !tbaa !4599
  %sub.ptr.lhs.cast24 = ptrtoint i8* %36 to i64, !dbg !4773
  %sub.ptr.rhs.cast25 = ptrtoint i8* %38 to i64, !dbg !4773
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25, !dbg !4773
  %39 = load i64, i64* %start, align 8, !dbg !4774, !tbaa !1876
  %40 = load i64, i64* %end, align 8, !dbg !4775, !tbaa !1876
  %41 = load i8*, i8** %reason, align 8, !dbg !4776, !tbaa !1464
  %call27 = call %struct._object* @PyUnicodeDecodeError_Create(i8* %32, i8* %34, i64 %sub.ptr.sub26, i64 %39, i64 %40, i8* %41), !dbg !4777
  %42 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4778, !tbaa !1464
  %excobj28 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %42, i32 0, i32 3, !dbg !4779
  store %struct._object* %call27, %struct._object** %excobj28, align 8, !dbg !4780, !tbaa !4335
  %43 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4781, !tbaa !1464
  %excobj29 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %43, i32 0, i32 3, !dbg !4783
  %44 = load %struct._object*, %struct._object** %excobj29, align 8, !dbg !4783, !tbaa !4335
  %cmp30 = icmp eq %struct._object* %44, null, !dbg !4784
  br i1 %cmp30, label %if.then.31, label %if.end.32, !dbg !4785

if.then.31:                                       ; preds = %if.then.20
  br label %errorexit, !dbg !4786

if.end.32:                                        ; preds = %if.then.20
  br label %if.end.46, !dbg !4787

if.else.33:                                       ; preds = %if.end.14
  %45 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4788, !tbaa !1464
  %excobj34 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %45, i32 0, i32 3, !dbg !4790
  %46 = load %struct._object*, %struct._object** %excobj34, align 8, !dbg !4790, !tbaa !4335
  %47 = load i64, i64* %start, align 8, !dbg !4791, !tbaa !1876
  %call35 = call i32 @PyUnicodeDecodeError_SetStart(%struct._object* %46, i64 %47), !dbg !4792
  %tobool = icmp ne i32 %call35, 0, !dbg !4792
  br i1 %tobool, label %if.then.44, label %lor.lhs.false.36, !dbg !4793

lor.lhs.false.36:                                 ; preds = %if.else.33
  %48 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4794, !tbaa !1464
  %excobj37 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %48, i32 0, i32 3, !dbg !4795
  %49 = load %struct._object*, %struct._object** %excobj37, align 8, !dbg !4795, !tbaa !4335
  %50 = load i64, i64* %end, align 8, !dbg !4796, !tbaa !1876
  %call38 = call i32 @PyUnicodeDecodeError_SetEnd(%struct._object* %49, i64 %50), !dbg !4797
  %tobool39 = icmp ne i32 %call38, 0, !dbg !4797
  br i1 %tobool39, label %if.then.44, label %lor.lhs.false.40, !dbg !4798

lor.lhs.false.40:                                 ; preds = %lor.lhs.false.36
  %51 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4799, !tbaa !1464
  %excobj41 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %51, i32 0, i32 3, !dbg !4800
  %52 = load %struct._object*, %struct._object** %excobj41, align 8, !dbg !4800, !tbaa !4335
  %53 = load i8*, i8** %reason, align 8, !dbg !4801, !tbaa !1464
  %call42 = call i32 @PyUnicodeDecodeError_SetReason(%struct._object* %52, i8* %53), !dbg !4802
  %tobool43 = icmp ne i32 %call42, 0, !dbg !4802
  br i1 %tobool43, label %if.then.44, label %if.end.45, !dbg !4803

if.then.44:                                       ; preds = %lor.lhs.false.40, %lor.lhs.false.36, %if.else.33
  br label %errorexit, !dbg !4804

if.end.45:                                        ; preds = %lor.lhs.false.40
  br label %if.end.46

if.end.46:                                        ; preds = %if.end.45, %if.end.32
  %54 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !4805, !tbaa !1464
  %cmp47 = icmp eq %struct._object* %54, inttoptr (i64 1 to %struct._object*), !dbg !4807
  br i1 %cmp47, label %if.then.48, label %if.end.51, !dbg !4808

if.then.48:                                       ; preds = %if.end.46
  %55 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4809, !tbaa !1464
  %excobj49 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %55, i32 0, i32 3, !dbg !4811
  %56 = load %struct._object*, %struct._object** %excobj49, align 8, !dbg !4811, !tbaa !4335
  %call50 = call %struct._object* @PyCodec_StrictErrors(%struct._object* %56), !dbg !4812
  br label %errorexit, !dbg !4813

if.end.51:                                        ; preds = %if.end.46
  %57 = load %struct._object*, %struct._object** %errors.addr, align 8, !dbg !4814, !tbaa !1464
  %58 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4815, !tbaa !1464
  %excobj52 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %58, i32 0, i32 3, !dbg !4816
  %59 = load %struct._object*, %struct._object** %excobj52, align 8, !dbg !4816, !tbaa !4335
  %call53 = call %struct._object* @call_error_callback(%struct._object* %57, %struct._object* %59), !dbg !4817
  store %struct._object* %call53, %struct._object** %retobj, align 8, !dbg !4818, !tbaa !1464
  %60 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !4819, !tbaa !1464
  %cmp54 = icmp eq %struct._object* %60, null, !dbg !4821
  br i1 %cmp54, label %if.then.55, label %if.end.56, !dbg !4822

if.then.55:                                       ; preds = %if.end.51
  br label %errorexit, !dbg !4823

if.end.56:                                        ; preds = %if.end.51
  %61 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !4824, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 1, !dbg !4826
  %62 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4826, !tbaa !1563
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %62, i32 0, i32 19, !dbg !4827
  %63 = load i64, i64* %tp_flags, align 8, !dbg !4827, !tbaa !1947
  %and = and i64 %63, 67108864, !dbg !4828
  %cmp57 = icmp ne i64 %and, 0, !dbg !4829
  br i1 %cmp57, label %lor.lhs.false.58, label %if.then.72, !dbg !4830

lor.lhs.false.58:                                 ; preds = %if.end.56
  %64 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !4831, !tbaa !1464
  %65 = bitcast %struct._object* %64 to %struct.PyVarObject*, !dbg !4833
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %65, i32 0, i32 1, !dbg !4834
  %66 = load i64, i64* %ob_size, align 8, !dbg !4834, !tbaa !2592
  %cmp59 = icmp ne i64 %66, 2, !dbg !4835
  br i1 %cmp59, label %if.then.72, label %lor.lhs.false.60, !dbg !4836

lor.lhs.false.60:                                 ; preds = %lor.lhs.false.58
  %67 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !4837, !tbaa !1464
  %68 = bitcast %struct._object* %67 to %struct.PyTupleObject*, !dbg !4838
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %68, i32 0, i32 1, !dbg !4839
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !4840
  %69 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !4840, !tbaa !1464
  store %struct._object* %69, %struct._object** %retuni, align 8, !dbg !4841, !tbaa !1464
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 1, !dbg !4842
  %70 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !4842, !tbaa !1563
  %tp_flags62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %70, i32 0, i32 19, !dbg !4843
  %71 = load i64, i64* %tp_flags62, align 8, !dbg !4843, !tbaa !1947
  %and63 = and i64 %71, 268435456, !dbg !4844
  %cmp64 = icmp ne i64 %and63, 0, !dbg !4845
  br i1 %cmp64, label %lor.lhs.false.65, label %if.then.72, !dbg !4846

lor.lhs.false.65:                                 ; preds = %lor.lhs.false.60
  %72 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !4847, !tbaa !1464
  %73 = bitcast %struct._object* %72 to %struct.PyTupleObject*, !dbg !4848
  %ob_item66 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %73, i32 0, i32 1, !dbg !4849
  %arrayidx67 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item66, i32 0, i64 1, !dbg !4850
  %74 = load %struct._object*, %struct._object** %arrayidx67, align 8, !dbg !4850, !tbaa !1464
  %ob_type68 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1, !dbg !4851
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type68, align 8, !dbg !4851, !tbaa !1563
  %tp_flags69 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 19, !dbg !4852
  %76 = load i64, i64* %tp_flags69, align 8, !dbg !4852, !tbaa !1947
  %and70 = and i64 %76, 16777216, !dbg !4853
  %cmp71 = icmp ne i64 %and70, 0, !dbg !4854
  br i1 %cmp71, label %if.end.73, label %if.then.72, !dbg !4855

if.then.72:                                       ; preds = %lor.lhs.false.65, %lor.lhs.false.60, %lor.lhs.false.58, %if.end.56
  %77 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4856, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %77, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i32 0, i32 0)), !dbg !4858
  br label %errorexit, !dbg !4859

if.end.73:                                        ; preds = %lor.lhs.false.65
  %78 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4860, !tbaa !1464
  %writer74 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %78, i32 0, i32 4, !dbg !4862
  %79 = load %struct._object*, %struct._object** %retuni, align 8, !dbg !4863, !tbaa !1464
  %call75 = call i32 @_PyUnicodeWriter_WriteStr(%struct._PyUnicodeWriter* %writer74, %struct._object* %79), !dbg !4864
  %cmp76 = icmp slt i32 %call75, 0, !dbg !4865
  br i1 %cmp76, label %if.then.77, label %if.end.78, !dbg !4866

if.then.77:                                       ; preds = %if.end.73
  br label %errorexit, !dbg !4867

if.end.78:                                        ; preds = %if.end.73
  %80 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !4868, !tbaa !1464
  %81 = bitcast %struct._object* %80 to %struct.PyTupleObject*, !dbg !4869
  %ob_item79 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %81, i32 0, i32 1, !dbg !4870
  %arrayidx80 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item79, i32 0, i64 1, !dbg !4871
  %82 = load %struct._object*, %struct._object** %arrayidx80, align 8, !dbg !4871, !tbaa !1464
  %call81 = call i64 @PyLong_AsSsize_t(%struct._object* %82), !dbg !4872
  store i64 %call81, i64* %newpos, align 8, !dbg !4873, !tbaa !1876
  %83 = load i64, i64* %newpos, align 8, !dbg !4874, !tbaa !1876
  %cmp82 = icmp slt i64 %83, 0, !dbg !4876
  br i1 %cmp82, label %land.lhs.true, label %if.end.92, !dbg !4877

land.lhs.true:                                    ; preds = %if.end.78
  %call83 = call %struct._object* @PyErr_Occurred(), !dbg !4878
  %tobool84 = icmp ne %struct._object* %call83, null, !dbg !4878
  br i1 %tobool84, label %if.end.92, label %if.then.85, !dbg !4880

if.then.85:                                       ; preds = %land.lhs.true
  %84 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4881, !tbaa !1464
  %inbuf_end86 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %84, i32 0, i32 2, !dbg !4882
  %85 = load i8*, i8** %inbuf_end86, align 8, !dbg !4882, !tbaa !4414
  %86 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4883, !tbaa !1464
  %inbuf_top87 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %86, i32 0, i32 1, !dbg !4884
  %87 = load i8*, i8** %inbuf_top87, align 8, !dbg !4884, !tbaa !4599
  %sub.ptr.lhs.cast88 = ptrtoint i8* %85 to i64, !dbg !4885
  %sub.ptr.rhs.cast89 = ptrtoint i8* %87 to i64, !dbg !4885
  %sub.ptr.sub90 = sub i64 %sub.ptr.lhs.cast88, %sub.ptr.rhs.cast89, !dbg !4885
  %88 = load i64, i64* %newpos, align 8, !dbg !4886, !tbaa !1876
  %add91 = add i64 %88, %sub.ptr.sub90, !dbg !4886
  store i64 %add91, i64* %newpos, align 8, !dbg !4886, !tbaa !1876
  br label %if.end.92, !dbg !4887

if.end.92:                                        ; preds = %if.then.85, %land.lhs.true, %if.end.78
  %89 = load i64, i64* %newpos, align 8, !dbg !4888, !tbaa !1876
  %cmp93 = icmp slt i64 %89, 0, !dbg !4890
  br i1 %cmp93, label %if.then.99, label %lor.lhs.false.94, !dbg !4891

lor.lhs.false.94:                                 ; preds = %if.end.92
  %90 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4892, !tbaa !1464
  %inbuf_top95 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %90, i32 0, i32 1, !dbg !4894
  %91 = load i8*, i8** %inbuf_top95, align 8, !dbg !4894, !tbaa !4599
  %92 = load i64, i64* %newpos, align 8, !dbg !4895, !tbaa !1876
  %add.ptr96 = getelementptr i8, i8* %91, i64 %92, !dbg !4896
  %93 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4897, !tbaa !1464
  %inbuf_end97 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %93, i32 0, i32 2, !dbg !4898
  %94 = load i8*, i8** %inbuf_end97, align 8, !dbg !4898, !tbaa !4414
  %cmp98 = icmp ugt i8* %add.ptr96, %94, !dbg !4899
  br i1 %cmp98, label %if.then.99, label %if.end.101, !dbg !4900

if.then.99:                                       ; preds = %lor.lhs.false.94, %if.end.92
  call void @PyErr_Clear(), !dbg !4901
  %95 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !4903, !tbaa !1464
  %96 = load i64, i64* %newpos, align 8, !dbg !4904, !tbaa !1876
  %call100 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %95, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.15, i32 0, i32 0), i64 %96), !dbg !4905
  br label %errorexit, !dbg !4906

if.end.101:                                       ; preds = %lor.lhs.false.94
  %97 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4907, !tbaa !1464
  %inbuf_top102 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %97, i32 0, i32 1, !dbg !4908
  %98 = load i8*, i8** %inbuf_top102, align 8, !dbg !4908, !tbaa !4599
  %99 = load i64, i64* %newpos, align 8, !dbg !4909, !tbaa !1876
  %add.ptr103 = getelementptr i8, i8* %98, i64 %99, !dbg !4910
  %100 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4911, !tbaa !1464
  %inbuf104 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %100, i32 0, i32 0, !dbg !4912
  store i8* %add.ptr103, i8** %inbuf104, align 8, !dbg !4913, !tbaa !4412
  br label %do.body, !dbg !4914

do.body:                                          ; preds = %if.end.101
  %101 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4915
  call void @llvm.lifetime.start(i64 8, i8* %101) #1, !dbg !4915
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !981, metadata !1451), !dbg !4917
  %102 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !4918, !tbaa !1464
  store %struct._object* %102, %struct._object** %_py_decref_tmp, align 8, !dbg !4917, !tbaa !1464
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4919, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 0, !dbg !4921
  %104 = load i64, i64* %ob_refcnt, align 8, !dbg !4922, !tbaa !1498
  %dec = add i64 %104, -1, !dbg !4922
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4922, !tbaa !1498
  %cmp105 = icmp ne i64 %dec, 0, !dbg !4923
  br i1 %cmp105, label %if.then.106, label %if.else.107, !dbg !4924

if.then.106:                                      ; preds = %do.body
  br label %if.end.109, !dbg !4925

if.else.107:                                      ; preds = %do.body
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4927, !tbaa !1464
  %ob_type108 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 1, !dbg !4929
  %106 = load %struct._typeobject*, %struct._typeobject** %ob_type108, align 8, !dbg !4929, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %106, i32 0, i32 4, !dbg !4930
  %107 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4930, !tbaa !1565
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4931, !tbaa !1464
  call void %107(%struct._object* %108), !dbg !4932
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.107, %if.then.106
  %109 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4933
  call void @llvm.lifetime.end(i64 8, i8* %109) #1, !dbg !4933
  br label %do.cond, !dbg !4935

do.cond:                                          ; preds = %if.end.109
  br label %do.end, !dbg !4936

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !4938
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4938

errorexit:                                        ; preds = %if.then.99, %if.then.77, %if.then.72, %if.then.55, %if.then.48, %if.then.44, %if.then.31, %if.then.7
  br label %do.body.110, !dbg !4939

do.body.110:                                      ; preds = %errorexit
  %110 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4940
  call void @llvm.lifetime.start(i64 8, i8* %110) #1, !dbg !4940
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !983, metadata !1451), !dbg !4942
  %111 = load %struct._object*, %struct._object** %retobj, align 8, !dbg !4943, !tbaa !1464
  store %struct._object* %111, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4942, !tbaa !1464
  %112 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4944, !tbaa !1464
  %cmp111 = icmp ne %struct._object* %112, null, !dbg !4945
  br i1 %cmp111, label %if.then.112, label %if.end.125, !dbg !4946

if.then.112:                                      ; preds = %do.body.110
  br label %do.body.113, !dbg !4947

do.body.113:                                      ; preds = %if.then.112
  %113 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !4949
  call void @llvm.lifetime.start(i64 8, i8* %113) #1, !dbg !4949
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp114, metadata !985, metadata !1451), !dbg !4951
  %114 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4952, !tbaa !1464
  store %struct._object* %114, %struct._object** %_py_decref_tmp114, align 8, !dbg !4951, !tbaa !1464
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !4953, !tbaa !1464
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 0, !dbg !4955
  %116 = load i64, i64* %ob_refcnt115, align 8, !dbg !4956, !tbaa !1498
  %dec116 = add i64 %116, -1, !dbg !4956
  store i64 %dec116, i64* %ob_refcnt115, align 8, !dbg !4956, !tbaa !1498
  %cmp117 = icmp ne i64 %dec116, 0, !dbg !4957
  br i1 %cmp117, label %if.then.118, label %if.else.119, !dbg !4958

if.then.118:                                      ; preds = %do.body.113
  br label %if.end.122, !dbg !4959

if.else.119:                                      ; preds = %do.body.113
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !4961, !tbaa !1464
  %ob_type120 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 1, !dbg !4963
  %118 = load %struct._typeobject*, %struct._typeobject** %ob_type120, align 8, !dbg !4963, !tbaa !1563
  %tp_dealloc121 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %118, i32 0, i32 4, !dbg !4964
  %119 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc121, align 8, !dbg !4964, !tbaa !1565
  %120 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !4965, !tbaa !1464
  call void %119(%struct._object* %120), !dbg !4966
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.119, %if.then.118
  %121 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !4967
  call void @llvm.lifetime.end(i64 8, i8* %121) #1, !dbg !4967
  br label %do.cond.123, !dbg !4969

do.cond.123:                                      ; preds = %if.end.122
  br label %do.end.124, !dbg !4970

do.end.124:                                       ; preds = %do.cond.123
  br label %if.end.125, !dbg !4972

if.end.125:                                       ; preds = %do.end.124, %do.body.110
  %122 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4974
  call void @llvm.lifetime.end(i64 8, i8* %122) #1, !dbg !4974
  br label %do.cond.126, !dbg !4977

do.cond.126:                                      ; preds = %if.end.125
  br label %do.end.127, !dbg !4978

do.end.127:                                       ; preds = %do.cond.126
  store i32 -1, i32* %retval, !dbg !4980
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4980

cleanup:                                          ; preds = %do.end.127, %do.end, %if.then.12, %sw.default, %sw.bb.3, %sw.bb.2, %sw.bb
  %123 = bitcast i64* %end to i8*, !dbg !4981
  call void @llvm.lifetime.end(i64 8, i8* %123) #1, !dbg !4981
  %124 = bitcast i64* %start to i8*, !dbg !4981
  call void @llvm.lifetime.end(i64 8, i8* %124) #1, !dbg !4981
  %125 = bitcast i64* %esize to i8*, !dbg !4981
  call void @llvm.lifetime.end(i64 8, i8* %125) #1, !dbg !4981
  %126 = bitcast i8** %reason to i8*, !dbg !4981
  call void @llvm.lifetime.end(i64 8, i8* %126) #1, !dbg !4981
  %127 = bitcast i64* %newpos to i8*, !dbg !4981
  call void @llvm.lifetime.end(i64 8, i8* %127) #1, !dbg !4981
  %128 = bitcast %struct._object** %retuni to i8*, !dbg !4981
  call void @llvm.lifetime.end(i64 8, i8* %128) #1, !dbg !4981
  %129 = bitcast %struct._object** %retobj to i8*, !dbg !4981
  call void @llvm.lifetime.end(i64 8, i8* %129) #1, !dbg !4981
  %130 = load i32, i32* %retval, !dbg !4981
  ret i32 %130, !dbg !4981
}

; Function Attrs: nounwind uwtable
define internal i32 @decoder_append_pending(%struct.MultibyteStatefulDecoderContext* %ctx, %struct.MultibyteDecodeBuffer* %buf) #0 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.MultibyteStatefulDecoderContext*, align 8
  %buf.addr = alloca %struct.MultibyteDecodeBuffer*, align 8
  %npendings = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.MultibyteStatefulDecoderContext* %ctx, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStatefulDecoderContext** %ctx.addr, metadata !990, metadata !1451), !dbg !4982
  store %struct.MultibyteDecodeBuffer* %buf, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteDecodeBuffer** %buf.addr, metadata !991, metadata !1451), !dbg !4983
  %0 = bitcast i64* %npendings to i8*, !dbg !4984
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4984
  call void @llvm.dbg.declare(metadata i64* %npendings, metadata !992, metadata !1451), !dbg !4985
  %1 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4986, !tbaa !1464
  %inbuf_end = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %1, i32 0, i32 2, !dbg !4987
  %2 = load i8*, i8** %inbuf_end, align 8, !dbg !4987, !tbaa !4414
  %3 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !4988, !tbaa !1464
  %inbuf = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %3, i32 0, i32 0, !dbg !4989
  %4 = load i8*, i8** %inbuf, align 8, !dbg !4989, !tbaa !4412
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !4990
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !4990
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4990
  store i64 %sub.ptr.sub, i64* %npendings, align 8, !dbg !4991, !tbaa !1876
  %5 = load i64, i64* %npendings, align 8, !dbg !4992, !tbaa !1876
  %6 = load %struct.MultibyteStatefulDecoderContext*, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !dbg !4994, !tbaa !1464
  %pendingsize = getelementptr inbounds %struct.MultibyteStatefulDecoderContext, %struct.MultibyteStatefulDecoderContext* %6, i32 0, i32 5, !dbg !4995
  %7 = load i64, i64* %pendingsize, align 8, !dbg !4995, !tbaa !4160
  %add = add i64 %5, %7, !dbg !4996
  %cmp = icmp sgt i64 %add, 8, !dbg !4997
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4998

lor.lhs.false:                                    ; preds = %entry
  %8 = load i64, i64* %npendings, align 8, !dbg !4999, !tbaa !1876
  %9 = load %struct.MultibyteStatefulDecoderContext*, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !dbg !5000, !tbaa !1464
  %pendingsize1 = getelementptr inbounds %struct.MultibyteStatefulDecoderContext, %struct.MultibyteStatefulDecoderContext* %9, i32 0, i32 5, !dbg !5001
  %10 = load i64, i64* %pendingsize1, align 8, !dbg !5001, !tbaa !4160
  %sub = sub i64 9223372036854775807, %10, !dbg !5002
  %cmp2 = icmp sgt i64 %8, %sub, !dbg !5003
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5004

if.then:                                          ; preds = %lor.lhs.false, %entry
  %11 = load %struct._object*, %struct._object** @PyExc_UnicodeError, align 8, !dbg !5005, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i32 0, i32 0)), !dbg !5007
  store i32 -1, i32* %retval, !dbg !5008
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5008

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.MultibyteStatefulDecoderContext*, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !dbg !5009, !tbaa !1464
  %pending = getelementptr inbounds %struct.MultibyteStatefulDecoderContext, %struct.MultibyteStatefulDecoderContext* %12, i32 0, i32 4, !dbg !5010
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %pending, i32 0, i32 0, !dbg !5009
  %13 = load %struct.MultibyteStatefulDecoderContext*, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !dbg !5011, !tbaa !1464
  %pendingsize3 = getelementptr inbounds %struct.MultibyteStatefulDecoderContext, %struct.MultibyteStatefulDecoderContext* %13, i32 0, i32 5, !dbg !5012
  %14 = load i64, i64* %pendingsize3, align 8, !dbg !5012, !tbaa !4160
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 %14, !dbg !5013
  %15 = load %struct.MultibyteDecodeBuffer*, %struct.MultibyteDecodeBuffer** %buf.addr, align 8, !dbg !5014, !tbaa !1464
  %inbuf4 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %15, i32 0, i32 0, !dbg !5015
  %16 = load i8*, i8** %inbuf4, align 8, !dbg !5015, !tbaa !4412
  %17 = load i64, i64* %npendings, align 8, !dbg !5016, !tbaa !1876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %16, i64 %17, i32 1, i1 false), !dbg !5017
  %18 = load i64, i64* %npendings, align 8, !dbg !5018, !tbaa !1876
  %19 = load %struct.MultibyteStatefulDecoderContext*, %struct.MultibyteStatefulDecoderContext** %ctx.addr, align 8, !dbg !5019, !tbaa !1464
  %pendingsize5 = getelementptr inbounds %struct.MultibyteStatefulDecoderContext, %struct.MultibyteStatefulDecoderContext* %19, i32 0, i32 5, !dbg !5020
  %20 = load i64, i64* %pendingsize5, align 8, !dbg !5021, !tbaa !4160
  %add6 = add i64 %20, %18, !dbg !5021
  store i64 %add6, i64* %pendingsize5, align 8, !dbg !5021, !tbaa !4160
  store i32 0, i32* %retval, !dbg !5022
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5022

cleanup:                                          ; preds = %if.end, %if.then
  %21 = bitcast i64* %npendings to i8*, !dbg !5023
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !5023
  %22 = load i32, i32* %retval, !dbg !5023
  ret i32 %22, !dbg !5023
}

declare %struct._object* @_PyUnicodeWriter_Finish(%struct._PyUnicodeWriter*) #3

declare void @PyBuffer_Release(%struct.bufferinfo*) #3

declare void @PyMem_Free(i8*) #3

declare void @_PyUnicodeWriter_Dealloc(%struct._PyUnicodeWriter*) #3

declare i32 @_PyUnicodeWriter_WriteChar(%struct._PyUnicodeWriter*, i32) #3

declare %struct._object* @PyUnicodeDecodeError_Create(i8*, i8*, i64, i64, i64, i8*) #3

declare i32 @PyUnicodeDecodeError_SetStart(%struct._object*, i64) #3

declare i32 @PyUnicodeDecodeError_SetEnd(%struct._object*, i64) #3

declare i32 @PyUnicodeDecodeError_SetReason(%struct._object*, i8*) #3

declare i32 @_PyUnicodeWriter_WriteStr(%struct._PyUnicodeWriter*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @mbstreamreader_dealloc(%struct.MultibyteStreamReaderObject* %self) #0 {
entry:
  %self.addr = alloca %struct.MultibyteStreamReaderObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  store %struct.MultibyteStreamReaderObject* %self, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamReaderObject** %self.addr, metadata !1027, metadata !1451), !dbg !5024
  %0 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5025, !tbaa !1464
  %1 = bitcast %struct.MultibyteStreamReaderObject* %0 to i8*, !dbg !5025
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !5026
  br label %do.body, !dbg !5027

do.body:                                          ; preds = %entry
  %2 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5028, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %2, i32 0, i32 3, !dbg !5030
  %3 = load %struct._object*, %struct._object** %errors, align 8, !dbg !5030, !tbaa !5031
  %cmp = icmp ne %struct._object* %3, null, !dbg !5033
  br i1 %cmp, label %land.lhs.true, label %if.end.9, !dbg !5034

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5035, !tbaa !1464
  %errors1 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %4, i32 0, i32 3, !dbg !5037
  %5 = load %struct._object*, %struct._object** %errors1, align 8, !dbg !5037, !tbaa !5031
  %cmp2 = icmp ult %struct._object* %5, inttoptr (i64 1 to %struct._object*), !dbg !5038
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !5039

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5040, !tbaa !1464
  %errors3 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %6, i32 0, i32 3, !dbg !5042
  %7 = load %struct._object*, %struct._object** %errors3, align 8, !dbg !5042, !tbaa !5031
  %cmp4 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %7, !dbg !5043
  br i1 %cmp4, label %if.then, label %if.end.9, !dbg !5044

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %do.body.5, !dbg !5045

do.body.5:                                        ; preds = %if.then
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5048
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !5048
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1028, metadata !1451), !dbg !5050
  %9 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5051, !tbaa !1464
  %errors6 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %9, i32 0, i32 3, !dbg !5052
  %10 = load %struct._object*, %struct._object** %errors6, align 8, !dbg !5052, !tbaa !5031
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !5050, !tbaa !1464
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5053, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !5055
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !5056, !tbaa !1498
  %dec = add i64 %12, -1, !dbg !5056
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5056, !tbaa !1498
  %cmp7 = icmp ne i64 %dec, 0, !dbg !5057
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !5058

if.then.8:                                        ; preds = %do.body.5
  br label %if.end, !dbg !5059

if.else:                                          ; preds = %do.body.5
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5061, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !5063
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5063, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !5064
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5064, !tbaa !1565
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5065, !tbaa !1464
  call void %15(%struct._object* %16), !dbg !5066
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5067
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !5067
  br label %do.end, !dbg !5069

do.end:                                           ; preds = %if.end
  br label %if.end.9, !dbg !5070

if.end.9:                                         ; preds = %do.end, %lor.lhs.false, %do.body
  br label %do.end.10, !dbg !5072

do.end.10:                                        ; preds = %if.end.9
  br label %do.body.11, !dbg !5076

do.body.11:                                       ; preds = %do.end.10
  %18 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5077
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !5077
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1032, metadata !1451), !dbg !5079
  %19 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5080, !tbaa !1464
  %stream = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %19, i32 0, i32 6, !dbg !5081
  %20 = load %struct._object*, %struct._object** %stream, align 8, !dbg !5081, !tbaa !5082
  store %struct._object* %20, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5079, !tbaa !1464
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5083, !tbaa !1464
  %cmp12 = icmp ne %struct._object* %21, null, !dbg !5084
  br i1 %cmp12, label %if.then.13, label %if.end.25, !dbg !5085

if.then.13:                                       ; preds = %do.body.11
  br label %do.body.14, !dbg !5086

do.body.14:                                       ; preds = %if.then.13
  %22 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !5088
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !5088
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !1034, metadata !1451), !dbg !5090
  %23 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5091, !tbaa !1464
  store %struct._object* %23, %struct._object** %_py_decref_tmp15, align 8, !dbg !5090, !tbaa !1464
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !5092, !tbaa !1464
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !5094
  %25 = load i64, i64* %ob_refcnt16, align 8, !dbg !5095, !tbaa !1498
  %dec17 = add i64 %25, -1, !dbg !5095
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !5095, !tbaa !1498
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !5096
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !5097

if.then.19:                                       ; preds = %do.body.14
  br label %if.end.23, !dbg !5098

if.else.20:                                       ; preds = %do.body.14
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !5100, !tbaa !1464
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !5102
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !5102, !tbaa !1563
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !5103
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8, !dbg !5103, !tbaa !1565
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !5104, !tbaa !1464
  call void %28(%struct._object* %29), !dbg !5105
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  %30 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !5106
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !5106
  br label %do.cond, !dbg !5108

do.cond:                                          ; preds = %if.end.23
  br label %do.end.24, !dbg !5109

do.end.24:                                        ; preds = %do.cond
  br label %if.end.25, !dbg !5111

if.end.25:                                        ; preds = %do.end.24, %do.body.11
  %31 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5113
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !5113
  br label %do.end.27, !dbg !5116

do.end.27:                                        ; preds = %if.end.25
  %32 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5117, !tbaa !1464
  %33 = bitcast %struct.MultibyteStreamReaderObject* %32 to %struct._object*, !dbg !5118
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !5119
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !5119, !tbaa !1563
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 38, !dbg !5120
  %35 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !5120, !tbaa !1581
  %36 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5121, !tbaa !1464
  %37 = bitcast %struct.MultibyteStreamReaderObject* %36 to i8*, !dbg !5121
  call void %35(i8* %37), !dbg !5122
  ret void, !dbg !5123
}

; Function Attrs: nounwind uwtable
define internal i32 @mbstreamreader_traverse(%struct.MultibyteStreamReaderObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.MultibyteStreamReaderObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret13 = alloca i32, align 4
  store %struct.MultibyteStreamReaderObject* %self, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamReaderObject** %self.addr, metadata !1041, metadata !1451), !dbg !5124
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1042, metadata !1451), !dbg !5125
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1043, metadata !1451), !dbg !5126
  %0 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5127, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %0, i32 0, i32 3, !dbg !5128
  %1 = load %struct._object*, %struct._object** %errors, align 8, !dbg !5128, !tbaa !5031
  %cmp = icmp ult %struct._object* %1, inttoptr (i64 1 to %struct._object*), !dbg !5129
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5130

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5131, !tbaa !1464
  %errors1 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %2, i32 0, i32 3, !dbg !5133
  %3 = load %struct._object*, %struct._object** %errors1, align 8, !dbg !5133, !tbaa !5031
  %cmp2 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %3, !dbg !5134
  br i1 %cmp2, label %if.then, label %if.end.9, !dbg !5135

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %do.body, !dbg !5136

do.body:                                          ; preds = %if.then
  %4 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5137, !tbaa !1464
  %errors3 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %4, i32 0, i32 3, !dbg !5139
  %5 = load %struct._object*, %struct._object** %errors3, align 8, !dbg !5139, !tbaa !5031
  %tobool = icmp ne %struct._object* %5, null, !dbg !5140
  br i1 %tobool, label %if.then.4, label %if.end.8, !dbg !5141

if.then.4:                                        ; preds = %do.body
  %6 = bitcast i32* %vret to i8*, !dbg !5142
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !5142
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1044, metadata !1451), !dbg !5144
  %7 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !5145, !tbaa !1464
  %8 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5146, !tbaa !1464
  %errors5 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %8, i32 0, i32 3, !dbg !5147
  %9 = load %struct._object*, %struct._object** %errors5, align 8, !dbg !5147, !tbaa !5031
  %10 = load i8*, i8** %arg.addr, align 8, !dbg !5148, !tbaa !1464
  %call = call i32 %7(%struct._object* %9, i8* %10), !dbg !5145
  store i32 %call, i32* %vret, align 4, !dbg !5144, !tbaa !1475
  %11 = load i32, i32* %vret, align 4, !dbg !5149, !tbaa !1475
  %tobool6 = icmp ne i32 %11, 0, !dbg !5149
  br i1 %tobool6, label %if.then.7, label %if.end, !dbg !5151

if.then.7:                                        ; preds = %if.then.4
  %12 = load i32, i32* %vret, align 4, !dbg !5152, !tbaa !1475
  store i32 %12, i32* %retval, !dbg !5154
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5154

if.end:                                           ; preds = %if.then.4
  store i32 0, i32* %cleanup.dest.slot, !dbg !5155
  br label %cleanup, !dbg !5155

cleanup:                                          ; preds = %if.end, %if.then.7
  %13 = bitcast i32* %vret to i8*, !dbg !5157
  call void @llvm.lifetime.end(i64 4, i8* %13) #1, !dbg !5157
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.8, !dbg !5160

if.end.8:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !5161

do.end:                                           ; preds = %if.end.8
  br label %if.end.9, !dbg !5164

if.end.9:                                         ; preds = %do.end, %lor.lhs.false
  br label %do.body.10, !dbg !5166

do.body.10:                                       ; preds = %if.end.9
  %14 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5167, !tbaa !1464
  %stream = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %14, i32 0, i32 6, !dbg !5169
  %15 = load %struct._object*, %struct._object** %stream, align 8, !dbg !5169, !tbaa !5082
  %tobool11 = icmp ne %struct._object* %15, null, !dbg !5170
  br i1 %tobool11, label %if.then.12, label %if.end.22, !dbg !5171

if.then.12:                                       ; preds = %do.body.10
  %16 = bitcast i32* %vret13 to i8*, !dbg !5172
  call void @llvm.lifetime.start(i64 4, i8* %16) #1, !dbg !5172
  call void @llvm.dbg.declare(metadata i32* %vret13, metadata !1049, metadata !1451), !dbg !5174
  %17 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !5175, !tbaa !1464
  %18 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5176, !tbaa !1464
  %stream14 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %18, i32 0, i32 6, !dbg !5177
  %19 = load %struct._object*, %struct._object** %stream14, align 8, !dbg !5177, !tbaa !5082
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !5178, !tbaa !1464
  %call15 = call i32 %17(%struct._object* %19, i8* %20), !dbg !5175
  store i32 %call15, i32* %vret13, align 4, !dbg !5174, !tbaa !1475
  %21 = load i32, i32* %vret13, align 4, !dbg !5179, !tbaa !1475
  %tobool16 = icmp ne i32 %21, 0, !dbg !5179
  br i1 %tobool16, label %if.then.17, label %if.end.18, !dbg !5181

if.then.17:                                       ; preds = %if.then.12
  %22 = load i32, i32* %vret13, align 4, !dbg !5182, !tbaa !1475
  store i32 %22, i32* %retval, !dbg !5184
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.19, !dbg !5184

if.end.18:                                        ; preds = %if.then.12
  store i32 0, i32* %cleanup.dest.slot, !dbg !5185
  br label %cleanup.19, !dbg !5185

cleanup.19:                                       ; preds = %if.end.18, %if.then.17
  %23 = bitcast i32* %vret13 to i8*, !dbg !5187
  call void @llvm.lifetime.end(i64 4, i8* %23) #1, !dbg !5187
  %cleanup.dest.20 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.20, label %unreachable [
    i32 0, label %cleanup.cont.21
    i32 1, label %return
  ]

cleanup.cont.21:                                  ; preds = %cleanup.19
  br label %if.end.22, !dbg !5190

if.end.22:                                        ; preds = %cleanup.cont.21, %do.body.10
  br label %do.end.23, !dbg !5191

do.end.23:                                        ; preds = %if.end.22
  store i32 0, i32* %retval, !dbg !5194
  br label %return, !dbg !5194

return:                                           ; preds = %do.end.23, %cleanup.19, %cleanup
  %24 = load i32, i32* %retval, !dbg !5195
  ret i32 %24, !dbg !5195

unreachable:                                      ; preds = %cleanup.19, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @mbstreamreader_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1127, metadata !1451), !dbg !5196
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1128, metadata !1451), !dbg !5197
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1129, metadata !1451), !dbg !5198
  ret i32 0, !dbg !5199
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbstreamreader_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %self = alloca %struct.MultibyteStreamReaderObject*, align 8
  %stream = alloca %struct._object*, align 8
  %codec = alloca %struct._object*, align 8
  %errors = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp38 = alloca %struct._object*, align 8
  %_py_xdecref_tmp53 = alloca %struct._object*, align 8
  %_py_decref_tmp57 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1132, metadata !1451), !dbg !5200
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1133, metadata !1451), !dbg !5201
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1134, metadata !1451), !dbg !5202
  %0 = bitcast %struct.MultibyteStreamReaderObject** %self to i8*, !dbg !5203
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5203
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamReaderObject** %self, metadata !1135, metadata !1451), !dbg !5204
  %1 = bitcast %struct._object** %stream to i8*, !dbg !5205
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5205
  call void @llvm.dbg.declare(metadata %struct._object** %stream, metadata !1136, metadata !1451), !dbg !5206
  %2 = bitcast %struct._object** %codec to i8*, !dbg !5205
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5205
  call void @llvm.dbg.declare(metadata %struct._object** %codec, metadata !1137, metadata !1451), !dbg !5207
  store %struct._object* null, %struct._object** %codec, align 8, !dbg !5207, !tbaa !1464
  %3 = bitcast i8** %errors to i8*, !dbg !5208
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5208
  call void @llvm.dbg.declare(metadata i8** %errors, metadata !1138, metadata !1451), !dbg !5209
  store i8* null, i8** %errors, align 8, !dbg !5209, !tbaa !1464
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5210, !tbaa !1464
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !5212, !tbaa !1464
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %4, %struct._object* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @streamkwarglist, i32 0, i32 0), %struct._object** %stream, i8** %errors), !dbg !5213
  %tobool = icmp ne i32 %call, 0, !dbg !5213
  br i1 %tobool, label %if.end, label %if.then, !dbg !5214

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5215
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5215

if.end:                                           ; preds = %entry
  %6 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5216, !tbaa !1464
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 36, !dbg !5217
  %7 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !5217, !tbaa !1650
  %8 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5218, !tbaa !1464
  %call1 = call %struct._object* %7(%struct._typeobject* %8, i64 0), !dbg !5216
  %9 = bitcast %struct._object* %call1 to %struct.MultibyteStreamReaderObject*, !dbg !5219
  store %struct.MultibyteStreamReaderObject* %9, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5220, !tbaa !1464
  %10 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5221, !tbaa !1464
  %cmp = icmp eq %struct.MultibyteStreamReaderObject* %10, null, !dbg !5223
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !5224

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !5225
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5225

if.end.3:                                         ; preds = %if.end
  %11 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5226, !tbaa !1464
  %12 = bitcast %struct._typeobject* %11 to %struct._object*, !dbg !5227
  %call4 = call %struct._object* @PyObject_GetAttrString(%struct._object* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0)), !dbg !5228
  store %struct._object* %call4, %struct._object** %codec, align 8, !dbg !5229, !tbaa !1464
  %13 = load %struct._object*, %struct._object** %codec, align 8, !dbg !5230, !tbaa !1464
  %cmp5 = icmp eq %struct._object* %13, null, !dbg !5232
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !5233

if.then.6:                                        ; preds = %if.end.3
  br label %errorexit, !dbg !5234

if.end.7:                                         ; preds = %if.end.3
  %14 = load %struct._object*, %struct._object** %codec, align 8, !dbg !5235, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !5237
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5237, !tbaa !1563
  %cmp8 = icmp eq %struct._typeobject* %15, @MultibyteCodec_Type, !dbg !5238
  br i1 %cmp8, label %if.end.10, label %if.then.9, !dbg !5239

if.then.9:                                        ; preds = %if.end.7
  %16 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5240, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i32 0, i32 0)), !dbg !5242
  br label %errorexit, !dbg !5243

if.end.10:                                        ; preds = %if.end.7
  %17 = load %struct._object*, %struct._object** %codec, align 8, !dbg !5244, !tbaa !1464
  %18 = bitcast %struct._object* %17 to %struct.MultibyteCodecObject*, !dbg !5245
  %codec11 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %18, i32 0, i32 1, !dbg !5246
  %19 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec11, align 8, !dbg !5246, !tbaa !1680
  %20 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5247, !tbaa !1464
  %codec12 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %20, i32 0, i32 1, !dbg !5248
  store %struct.MultibyteCodec* %19, %struct.MultibyteCodec** %codec12, align 8, !dbg !5249, !tbaa !5250
  %21 = load %struct._object*, %struct._object** %stream, align 8, !dbg !5251, !tbaa !1464
  %22 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5252, !tbaa !1464
  %stream13 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %22, i32 0, i32 6, !dbg !5253
  store %struct._object* %21, %struct._object** %stream13, align 8, !dbg !5254, !tbaa !5082
  %23 = load %struct._object*, %struct._object** %stream, align 8, !dbg !5255, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !5256
  %24 = load i64, i64* %ob_refcnt, align 8, !dbg !5257, !tbaa !1498
  %inc = add i64 %24, 1, !dbg !5257
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5257, !tbaa !1498
  %25 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5258, !tbaa !1464
  %pendingsize = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %25, i32 0, i32 5, !dbg !5259
  store i64 0, i64* %pendingsize, align 8, !dbg !5260, !tbaa !5261
  %26 = load i8*, i8** %errors, align 8, !dbg !5262, !tbaa !1464
  %call14 = call %struct._object* @internal_error_callback(i8* %26), !dbg !5263
  %27 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5264, !tbaa !1464
  %errors15 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %27, i32 0, i32 3, !dbg !5265
  store %struct._object* %call14, %struct._object** %errors15, align 8, !dbg !5266, !tbaa !5031
  %28 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5267, !tbaa !1464
  %errors16 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %28, i32 0, i32 3, !dbg !5269
  %29 = load %struct._object*, %struct._object** %errors16, align 8, !dbg !5269, !tbaa !5031
  %cmp17 = icmp eq %struct._object* %29, null, !dbg !5270
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !5271

if.then.18:                                       ; preds = %if.end.10
  br label %errorexit, !dbg !5272

if.end.19:                                        ; preds = %if.end.10
  %30 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5273, !tbaa !1464
  %codec20 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %30, i32 0, i32 1, !dbg !5275
  %31 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec20, align 8, !dbg !5275, !tbaa !5250
  %decinit = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %31, i32 0, i32 7, !dbg !5276
  %32 = load i32 (%union.MultibyteCodec_State*, i8*)*, i32 (%union.MultibyteCodec_State*, i8*)** %decinit, align 8, !dbg !5276, !tbaa !4176
  %cmp21 = icmp ne i32 (%union.MultibyteCodec_State*, i8*)* %32, null, !dbg !5277
  br i1 %cmp21, label %land.lhs.true, label %if.end.28, !dbg !5278

land.lhs.true:                                    ; preds = %if.end.19
  %33 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5279, !tbaa !1464
  %codec22 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %33, i32 0, i32 1, !dbg !5280
  %34 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec22, align 8, !dbg !5280, !tbaa !5250
  %decinit23 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %34, i32 0, i32 7, !dbg !5281
  %35 = load i32 (%union.MultibyteCodec_State*, i8*)*, i32 (%union.MultibyteCodec_State*, i8*)** %decinit23, align 8, !dbg !5281, !tbaa !4176
  %36 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5282, !tbaa !1464
  %state = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %36, i32 0, i32 2, !dbg !5283
  %37 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5284, !tbaa !1464
  %codec24 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %37, i32 0, i32 1, !dbg !5285
  %38 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec24, align 8, !dbg !5285, !tbaa !5250
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %38, i32 0, i32 1, !dbg !5286
  %39 = load i8*, i8** %config, align 8, !dbg !5286, !tbaa !1717
  %call25 = call i32 %35(%union.MultibyteCodec_State* %state, i8* %39), !dbg !5279
  %cmp26 = icmp ne i32 %call25, 0, !dbg !5287
  br i1 %cmp26, label %if.then.27, label %if.end.28, !dbg !5288

if.then.27:                                       ; preds = %land.lhs.true
  br label %errorexit, !dbg !5289

if.end.28:                                        ; preds = %land.lhs.true, %if.end.19
  br label %do.body, !dbg !5290

do.body:                                          ; preds = %if.end.28
  %40 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5291
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !5291
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1139, metadata !1451), !dbg !5293
  %41 = load %struct._object*, %struct._object** %codec, align 8, !dbg !5294, !tbaa !1464
  store %struct._object* %41, %struct._object** %_py_decref_tmp, align 8, !dbg !5293, !tbaa !1464
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5295, !tbaa !1464
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !5297
  %43 = load i64, i64* %ob_refcnt29, align 8, !dbg !5298, !tbaa !1498
  %dec = add i64 %43, -1, !dbg !5298
  store i64 %dec, i64* %ob_refcnt29, align 8, !dbg !5298, !tbaa !1498
  %cmp30 = icmp ne i64 %dec, 0, !dbg !5299
  br i1 %cmp30, label %if.then.31, label %if.else, !dbg !5300

if.then.31:                                       ; preds = %do.body
  br label %if.end.33, !dbg !5301

if.else:                                          ; preds = %do.body
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5303, !tbaa !1464
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !5305
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8, !dbg !5305, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4, !dbg !5306
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5306, !tbaa !1565
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5307, !tbaa !1464
  call void %46(%struct._object* %47), !dbg !5308
  br label %if.end.33

if.end.33:                                        ; preds = %if.else, %if.then.31
  %48 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5309
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !5309
  br label %do.cond, !dbg !5311

do.cond:                                          ; preds = %if.end.33
  br label %do.end, !dbg !5312

do.end:                                           ; preds = %do.cond
  %49 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5314, !tbaa !1464
  %50 = bitcast %struct.MultibyteStreamReaderObject* %49 to %struct._object*, !dbg !5315
  store %struct._object* %50, %struct._object** %retval, !dbg !5316
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5316

errorexit:                                        ; preds = %if.then.27, %if.then.18, %if.then.9, %if.then.6
  br label %do.body.34, !dbg !5317

do.body.34:                                       ; preds = %errorexit
  %51 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5318
  call void @llvm.lifetime.start(i64 8, i8* %51) #1, !dbg !5318
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1141, metadata !1451), !dbg !5320
  %52 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self, align 8, !dbg !5321, !tbaa !1464
  %53 = bitcast %struct.MultibyteStreamReaderObject* %52 to %struct._object*, !dbg !5322
  store %struct._object* %53, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5320, !tbaa !1464
  %54 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5323, !tbaa !1464
  %cmp35 = icmp ne %struct._object* %54, null, !dbg !5324
  br i1 %cmp35, label %if.then.36, label %if.end.49, !dbg !5325

if.then.36:                                       ; preds = %do.body.34
  br label %do.body.37, !dbg !5326

do.body.37:                                       ; preds = %if.then.36
  %55 = bitcast %struct._object** %_py_decref_tmp38 to i8*, !dbg !5328
  call void @llvm.lifetime.start(i64 8, i8* %55) #1, !dbg !5328
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp38, metadata !1143, metadata !1451), !dbg !5330
  %56 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5331, !tbaa !1464
  store %struct._object* %56, %struct._object** %_py_decref_tmp38, align 8, !dbg !5330, !tbaa !1464
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !5332, !tbaa !1464
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !5334
  %58 = load i64, i64* %ob_refcnt39, align 8, !dbg !5335, !tbaa !1498
  %dec40 = add i64 %58, -1, !dbg !5335
  store i64 %dec40, i64* %ob_refcnt39, align 8, !dbg !5335, !tbaa !1498
  %cmp41 = icmp ne i64 %dec40, 0, !dbg !5336
  br i1 %cmp41, label %if.then.42, label %if.else.43, !dbg !5337

if.then.42:                                       ; preds = %do.body.37
  br label %if.end.46, !dbg !5338

if.else.43:                                       ; preds = %do.body.37
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !5340, !tbaa !1464
  %ob_type44 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !5342
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type44, align 8, !dbg !5342, !tbaa !1563
  %tp_dealloc45 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !5343
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc45, align 8, !dbg !5343, !tbaa !1565
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !5344, !tbaa !1464
  call void %61(%struct._object* %62), !dbg !5345
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.43, %if.then.42
  %63 = bitcast %struct._object** %_py_decref_tmp38 to i8*, !dbg !5346
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !5346
  br label %do.cond.47, !dbg !5348

do.cond.47:                                       ; preds = %if.end.46
  br label %do.end.48, !dbg !5349

do.end.48:                                        ; preds = %do.cond.47
  br label %if.end.49, !dbg !5351

if.end.49:                                        ; preds = %do.end.48, %do.body.34
  %64 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5353
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !5353
  br label %do.cond.50, !dbg !5356

do.cond.50:                                       ; preds = %if.end.49
  br label %do.end.51, !dbg !5357

do.end.51:                                        ; preds = %do.cond.50
  br label %do.body.52, !dbg !5359

do.body.52:                                       ; preds = %do.end.51
  %65 = bitcast %struct._object** %_py_xdecref_tmp53 to i8*, !dbg !5360
  call void @llvm.lifetime.start(i64 8, i8* %65) #1, !dbg !5360
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp53, metadata !1146, metadata !1451), !dbg !5362
  %66 = load %struct._object*, %struct._object** %codec, align 8, !dbg !5363, !tbaa !1464
  store %struct._object* %66, %struct._object** %_py_xdecref_tmp53, align 8, !dbg !5362, !tbaa !1464
  %67 = load %struct._object*, %struct._object** %_py_xdecref_tmp53, align 8, !dbg !5364, !tbaa !1464
  %cmp54 = icmp ne %struct._object* %67, null, !dbg !5365
  br i1 %cmp54, label %if.then.55, label %if.end.68, !dbg !5366

if.then.55:                                       ; preds = %do.body.52
  br label %do.body.56, !dbg !5367

do.body.56:                                       ; preds = %if.then.55
  %68 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !5369
  call void @llvm.lifetime.start(i64 8, i8* %68) #1, !dbg !5369
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp57, metadata !1148, metadata !1451), !dbg !5371
  %69 = load %struct._object*, %struct._object** %_py_xdecref_tmp53, align 8, !dbg !5372, !tbaa !1464
  store %struct._object* %69, %struct._object** %_py_decref_tmp57, align 8, !dbg !5371, !tbaa !1464
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !5373, !tbaa !1464
  %ob_refcnt58 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 0, !dbg !5375
  %71 = load i64, i64* %ob_refcnt58, align 8, !dbg !5376, !tbaa !1498
  %dec59 = add i64 %71, -1, !dbg !5376
  store i64 %dec59, i64* %ob_refcnt58, align 8, !dbg !5376, !tbaa !1498
  %cmp60 = icmp ne i64 %dec59, 0, !dbg !5377
  br i1 %cmp60, label %if.then.61, label %if.else.62, !dbg !5378

if.then.61:                                       ; preds = %do.body.56
  br label %if.end.65, !dbg !5379

if.else.62:                                       ; preds = %do.body.56
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !5381, !tbaa !1464
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 1, !dbg !5383
  %73 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !5383, !tbaa !1563
  %tp_dealloc64 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %73, i32 0, i32 4, !dbg !5384
  %74 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc64, align 8, !dbg !5384, !tbaa !1565
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !5385, !tbaa !1464
  call void %74(%struct._object* %75), !dbg !5386
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.62, %if.then.61
  %76 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !5387
  call void @llvm.lifetime.end(i64 8, i8* %76) #1, !dbg !5387
  br label %do.cond.66, !dbg !5389

do.cond.66:                                       ; preds = %if.end.65
  br label %do.end.67, !dbg !5390

do.end.67:                                        ; preds = %do.cond.66
  br label %if.end.68, !dbg !5392

if.end.68:                                        ; preds = %do.end.67, %do.body.52
  %77 = bitcast %struct._object** %_py_xdecref_tmp53 to i8*, !dbg !5394
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !5394
  br label %do.cond.69, !dbg !5395

do.cond.69:                                       ; preds = %if.end.68
  br label %do.end.70, !dbg !5396

do.end.70:                                        ; preds = %do.cond.69
  store %struct._object* null, %struct._object** %retval, !dbg !5398
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5398

cleanup:                                          ; preds = %do.end.70, %do.end, %if.then.2, %if.then
  %78 = bitcast i8** %errors to i8*, !dbg !5399
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !5399
  %79 = bitcast %struct._object** %codec to i8*, !dbg !5399
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !5399
  %80 = bitcast %struct._object** %stream to i8*, !dbg !5399
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !5399
  %81 = bitcast %struct.MultibyteStreamReaderObject** %self to i8*, !dbg !5399
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !5399
  %82 = load %struct._object*, %struct._object** %retval, !dbg !5399
  ret %struct._object* %82, !dbg !5399
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbstreamreader_read(%struct.MultibyteStreamReaderObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteStreamReaderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %sizeobj = alloca %struct._object*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.MultibyteStreamReaderObject* %self, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamReaderObject** %self.addr, metadata !1057, metadata !1451), !dbg !5400
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1058, metadata !1451), !dbg !5401
  %0 = bitcast %struct._object** %sizeobj to i8*, !dbg !5402
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5402
  call void @llvm.dbg.declare(metadata %struct._object** %sizeobj, metadata !1059, metadata !1451), !dbg !5403
  store %struct._object* null, %struct._object** %sizeobj, align 8, !dbg !5403, !tbaa !1464
  %1 = bitcast i64* %size to i8*, !dbg !5404
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5404
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1060, metadata !1451), !dbg !5405
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5406, !tbaa !1464
  %call = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), i64 0, i64 1, %struct._object** %sizeobj), !dbg !5408
  %tobool = icmp ne i32 %call, 0, !dbg !5408
  br i1 %tobool, label %if.end, label %if.then, !dbg !5409

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5410
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5410

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %sizeobj, align 8, !dbg !5411, !tbaa !1464
  %cmp = icmp eq %struct._object* %3, @_Py_NoneStruct, !dbg !5413
  br i1 %cmp, label %if.then.2, label %lor.lhs.false, !dbg !5414

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._object*, %struct._object** %sizeobj, align 8, !dbg !5415, !tbaa !1464
  %cmp1 = icmp eq %struct._object* %4, null, !dbg !5417
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !5418

if.then.2:                                        ; preds = %lor.lhs.false, %if.end
  store i64 -1, i64* %size, align 8, !dbg !5419, !tbaa !1876
  br label %if.end.8, !dbg !5420

if.else:                                          ; preds = %lor.lhs.false
  %5 = load %struct._object*, %struct._object** %sizeobj, align 8, !dbg !5421, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !5423
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5423, !tbaa !1563
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19, !dbg !5424
  %7 = load i64, i64* %tp_flags, align 8, !dbg !5424, !tbaa !1947
  %and = and i64 %7, 16777216, !dbg !5425
  %cmp3 = icmp ne i64 %and, 0, !dbg !5426
  br i1 %cmp3, label %if.then.4, label %if.else.6, !dbg !5427

if.then.4:                                        ; preds = %if.else
  %8 = load %struct._object*, %struct._object** %sizeobj, align 8, !dbg !5428, !tbaa !1464
  %call5 = call i64 @PyLong_AsSsize_t(%struct._object* %8), !dbg !5429
  store i64 %call5, i64* %size, align 8, !dbg !5430, !tbaa !1876
  br label %if.end.7, !dbg !5431

if.else.6:                                        ; preds = %if.else
  %9 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5432, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34, i32 0, i32 0)), !dbg !5434
  store %struct._object* null, %struct._object** %retval, !dbg !5435
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5435

if.end.7:                                         ; preds = %if.then.4
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7, %if.then.2
  %10 = load i64, i64* %size, align 8, !dbg !5436, !tbaa !1876
  %cmp9 = icmp eq i64 %10, -1, !dbg !5438
  br i1 %cmp9, label %land.lhs.true, label %if.end.13, !dbg !5439

land.lhs.true:                                    ; preds = %if.end.8
  %call10 = call %struct._object* @PyErr_Occurred(), !dbg !5440
  %tobool11 = icmp ne %struct._object* %call10, null, !dbg !5440
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !5442

if.then.12:                                       ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !5443
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5443

if.end.13:                                        ; preds = %land.lhs.true, %if.end.8
  %11 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5444, !tbaa !1464
  %12 = load i64, i64* %size, align 8, !dbg !5445, !tbaa !1876
  %call14 = call %struct._object* @mbstreamreader_iread(%struct.MultibyteStreamReaderObject* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), i64 %12), !dbg !5446
  store %struct._object* %call14, %struct._object** %retval, !dbg !5447
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5447

cleanup:                                          ; preds = %if.end.13, %if.then.12, %if.else.6, %if.then
  %13 = bitcast i64* %size to i8*, !dbg !5448
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !5448
  %14 = bitcast %struct._object** %sizeobj to i8*, !dbg !5448
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !5448
  %15 = load %struct._object*, %struct._object** %retval, !dbg !5448
  ret %struct._object* %15, !dbg !5448
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbstreamreader_readline(%struct.MultibyteStreamReaderObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteStreamReaderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %sizeobj = alloca %struct._object*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.MultibyteStreamReaderObject* %self, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamReaderObject** %self.addr, metadata !1106, metadata !1451), !dbg !5449
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1107, metadata !1451), !dbg !5450
  %0 = bitcast %struct._object** %sizeobj to i8*, !dbg !5451
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5451
  call void @llvm.dbg.declare(metadata %struct._object** %sizeobj, metadata !1108, metadata !1451), !dbg !5452
  store %struct._object* null, %struct._object** %sizeobj, align 8, !dbg !5452, !tbaa !1464
  %1 = bitcast i64* %size to i8*, !dbg !5453
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5453
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1109, metadata !1451), !dbg !5454
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5455, !tbaa !1464
  %call = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), i64 0, i64 1, %struct._object** %sizeobj), !dbg !5457
  %tobool = icmp ne i32 %call, 0, !dbg !5457
  br i1 %tobool, label %if.end, label %if.then, !dbg !5458

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5459
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5459

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %sizeobj, align 8, !dbg !5460, !tbaa !1464
  %cmp = icmp eq %struct._object* %3, @_Py_NoneStruct, !dbg !5462
  br i1 %cmp, label %if.then.2, label %lor.lhs.false, !dbg !5463

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._object*, %struct._object** %sizeobj, align 8, !dbg !5464, !tbaa !1464
  %cmp1 = icmp eq %struct._object* %4, null, !dbg !5466
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !5467

if.then.2:                                        ; preds = %lor.lhs.false, %if.end
  store i64 -1, i64* %size, align 8, !dbg !5468, !tbaa !1876
  br label %if.end.8, !dbg !5469

if.else:                                          ; preds = %lor.lhs.false
  %5 = load %struct._object*, %struct._object** %sizeobj, align 8, !dbg !5470, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !5472
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5472, !tbaa !1563
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19, !dbg !5473
  %7 = load i64, i64* %tp_flags, align 8, !dbg !5473, !tbaa !1947
  %and = and i64 %7, 16777216, !dbg !5474
  %cmp3 = icmp ne i64 %and, 0, !dbg !5475
  br i1 %cmp3, label %if.then.4, label %if.else.6, !dbg !5476

if.then.4:                                        ; preds = %if.else
  %8 = load %struct._object*, %struct._object** %sizeobj, align 8, !dbg !5477, !tbaa !1464
  %call5 = call i64 @PyLong_AsSsize_t(%struct._object* %8), !dbg !5478
  store i64 %call5, i64* %size, align 8, !dbg !5479, !tbaa !1876
  br label %if.end.7, !dbg !5480

if.else.6:                                        ; preds = %if.else
  %9 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5481, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34, i32 0, i32 0)), !dbg !5483
  store %struct._object* null, %struct._object** %retval, !dbg !5484
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5484

if.end.7:                                         ; preds = %if.then.4
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7, %if.then.2
  %10 = load i64, i64* %size, align 8, !dbg !5485, !tbaa !1876
  %cmp9 = icmp eq i64 %10, -1, !dbg !5487
  br i1 %cmp9, label %land.lhs.true, label %if.end.13, !dbg !5488

land.lhs.true:                                    ; preds = %if.end.8
  %call10 = call %struct._object* @PyErr_Occurred(), !dbg !5489
  %tobool11 = icmp ne %struct._object* %call10, null, !dbg !5489
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !5491

if.then.12:                                       ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !5492
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5492

if.end.13:                                        ; preds = %land.lhs.true, %if.end.8
  %11 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5493, !tbaa !1464
  %12 = load i64, i64* %size, align 8, !dbg !5494, !tbaa !1876
  %call14 = call %struct._object* @mbstreamreader_iread(%struct.MultibyteStreamReaderObject* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), i64 %12), !dbg !5495
  store %struct._object* %call14, %struct._object** %retval, !dbg !5496
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5496

cleanup:                                          ; preds = %if.end.13, %if.then.12, %if.else.6, %if.then
  %13 = bitcast i64* %size to i8*, !dbg !5497
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !5497
  %14 = bitcast %struct._object** %sizeobj to i8*, !dbg !5497
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !5497
  %15 = load %struct._object*, %struct._object** %retval, !dbg !5497
  ret %struct._object* %15, !dbg !5497
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbstreamreader_readlines(%struct.MultibyteStreamReaderObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteStreamReaderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %sizehintobj = alloca %struct._object*, align 8
  %r = alloca %struct._object*, align 8
  %sr = alloca %struct._object*, align 8
  %sizehint = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.MultibyteStreamReaderObject* %self, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamReaderObject** %self.addr, metadata !1112, metadata !1451), !dbg !5498
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1113, metadata !1451), !dbg !5499
  %0 = bitcast %struct._object** %sizehintobj to i8*, !dbg !5500
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5500
  call void @llvm.dbg.declare(metadata %struct._object** %sizehintobj, metadata !1114, metadata !1451), !dbg !5501
  store %struct._object* null, %struct._object** %sizehintobj, align 8, !dbg !5501, !tbaa !1464
  %1 = bitcast %struct._object** %r to i8*, !dbg !5500
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5500
  call void @llvm.dbg.declare(metadata %struct._object** %r, metadata !1115, metadata !1451), !dbg !5502
  %2 = bitcast %struct._object** %sr to i8*, !dbg !5500
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5500
  call void @llvm.dbg.declare(metadata %struct._object** %sr, metadata !1116, metadata !1451), !dbg !5503
  %3 = bitcast i64* %sizehint to i8*, !dbg !5504
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5504
  call void @llvm.dbg.declare(metadata i64* %sizehint, metadata !1117, metadata !1451), !dbg !5505
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5506, !tbaa !1464
  %call = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), i64 0, i64 1, %struct._object** %sizehintobj), !dbg !5508
  %tobool = icmp ne i32 %call, 0, !dbg !5508
  br i1 %tobool, label %if.end, label %if.then, !dbg !5509

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5510
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5510

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %sizehintobj, align 8, !dbg !5511, !tbaa !1464
  %cmp = icmp eq %struct._object* %5, @_Py_NoneStruct, !dbg !5513
  br i1 %cmp, label %if.then.2, label %lor.lhs.false, !dbg !5514

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %sizehintobj, align 8, !dbg !5515, !tbaa !1464
  %cmp1 = icmp eq %struct._object* %6, null, !dbg !5517
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !5518

if.then.2:                                        ; preds = %lor.lhs.false, %if.end
  store i64 -1, i64* %sizehint, align 8, !dbg !5519, !tbaa !1876
  br label %if.end.8, !dbg !5520

if.else:                                          ; preds = %lor.lhs.false
  %7 = load %struct._object*, %struct._object** %sizehintobj, align 8, !dbg !5521, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !5523
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5523, !tbaa !1563
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 19, !dbg !5524
  %9 = load i64, i64* %tp_flags, align 8, !dbg !5524, !tbaa !1947
  %and = and i64 %9, 16777216, !dbg !5525
  %cmp3 = icmp ne i64 %and, 0, !dbg !5526
  br i1 %cmp3, label %if.then.4, label %if.else.6, !dbg !5527

if.then.4:                                        ; preds = %if.else
  %10 = load %struct._object*, %struct._object** %sizehintobj, align 8, !dbg !5528, !tbaa !1464
  %call5 = call i64 @PyLong_AsSsize_t(%struct._object* %10), !dbg !5529
  store i64 %call5, i64* %sizehint, align 8, !dbg !5530, !tbaa !1876
  br label %if.end.7, !dbg !5531

if.else.6:                                        ; preds = %if.else
  %11 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5532, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34, i32 0, i32 0)), !dbg !5534
  store %struct._object* null, %struct._object** %retval, !dbg !5535
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5535

if.end.7:                                         ; preds = %if.then.4
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7, %if.then.2
  %12 = load i64, i64* %sizehint, align 8, !dbg !5536, !tbaa !1876
  %cmp9 = icmp eq i64 %12, -1, !dbg !5538
  br i1 %cmp9, label %land.lhs.true, label %if.end.13, !dbg !5539

land.lhs.true:                                    ; preds = %if.end.8
  %call10 = call %struct._object* @PyErr_Occurred(), !dbg !5540
  %tobool11 = icmp ne %struct._object* %call10, null, !dbg !5540
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !5542

if.then.12:                                       ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !5543
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5543

if.end.13:                                        ; preds = %land.lhs.true, %if.end.8
  %13 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5544, !tbaa !1464
  %14 = load i64, i64* %sizehint, align 8, !dbg !5545, !tbaa !1876
  %call14 = call %struct._object* @mbstreamreader_iread(%struct.MultibyteStreamReaderObject* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), i64 %14), !dbg !5546
  store %struct._object* %call14, %struct._object** %r, align 8, !dbg !5547, !tbaa !1464
  %15 = load %struct._object*, %struct._object** %r, align 8, !dbg !5548, !tbaa !1464
  %cmp15 = icmp eq %struct._object* %15, null, !dbg !5550
  br i1 %cmp15, label %if.then.16, label %if.end.17, !dbg !5551

if.then.16:                                       ; preds = %if.end.13
  store %struct._object* null, %struct._object** %retval, !dbg !5552
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5552

if.end.17:                                        ; preds = %if.end.13
  %16 = load %struct._object*, %struct._object** %r, align 8, !dbg !5553, !tbaa !1464
  %call18 = call %struct._object* @PyUnicode_Splitlines(%struct._object* %16, i32 1), !dbg !5554
  store %struct._object* %call18, %struct._object** %sr, align 8, !dbg !5555, !tbaa !1464
  br label %do.body, !dbg !5556

do.body:                                          ; preds = %if.end.17
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5557
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !5557
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1118, metadata !1451), !dbg !5559
  %18 = load %struct._object*, %struct._object** %r, align 8, !dbg !5560, !tbaa !1464
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !5559, !tbaa !1464
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5561, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !5563
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !5564, !tbaa !1498
  %dec = add i64 %20, -1, !dbg !5564
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5564, !tbaa !1498
  %cmp19 = icmp ne i64 %dec, 0, !dbg !5565
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !5566

if.then.20:                                       ; preds = %do.body
  br label %if.end.23, !dbg !5567

if.else.21:                                       ; preds = %do.body
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5569, !tbaa !1464
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !5571
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !5571, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !5572
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5572, !tbaa !1565
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5573, !tbaa !1464
  call void %23(%struct._object* %24), !dbg !5574
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.21, %if.then.20
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5575
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !5575
  br label %do.cond, !dbg !5577

do.cond:                                          ; preds = %if.end.23
  br label %do.end, !dbg !5578

do.end:                                           ; preds = %do.cond
  %26 = load %struct._object*, %struct._object** %sr, align 8, !dbg !5580, !tbaa !1464
  store %struct._object* %26, %struct._object** %retval, !dbg !5581
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5581

cleanup:                                          ; preds = %do.end, %if.then.16, %if.then.12, %if.else.6, %if.then
  %27 = bitcast i64* %sizehint to i8*, !dbg !5582
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !5582
  %28 = bitcast %struct._object** %sr to i8*, !dbg !5582
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !5582
  %29 = bitcast %struct._object** %r to i8*, !dbg !5582
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !5582
  %30 = bitcast %struct._object** %sizehintobj to i8*, !dbg !5582
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !5582
  %31 = load %struct._object*, %struct._object** %retval, !dbg !5582
  ret %struct._object* %31, !dbg !5582
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbstreamreader_reset(%struct.MultibyteStreamReaderObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteStreamReaderObject*, align 8
  store %struct.MultibyteStreamReaderObject* %self, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamReaderObject** %self.addr, metadata !1124, metadata !1451), !dbg !5583
  %0 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5584, !tbaa !1464
  %codec = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %0, i32 0, i32 1, !dbg !5586
  %1 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !5586, !tbaa !5250
  %decreset = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %1, i32 0, i32 8, !dbg !5587
  %2 = load i64 (%union.MultibyteCodec_State*, i8*)*, i64 (%union.MultibyteCodec_State*, i8*)** %decreset, align 8, !dbg !5587, !tbaa !4572
  %cmp = icmp ne i64 (%union.MultibyteCodec_State*, i8*)* %2, null, !dbg !5588
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5589

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5590, !tbaa !1464
  %codec1 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %3, i32 0, i32 1, !dbg !5591
  %4 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec1, align 8, !dbg !5591, !tbaa !5250
  %decreset2 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %4, i32 0, i32 8, !dbg !5592
  %5 = load i64 (%union.MultibyteCodec_State*, i8*)*, i64 (%union.MultibyteCodec_State*, i8*)** %decreset2, align 8, !dbg !5592, !tbaa !4572
  %6 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5593, !tbaa !1464
  %state = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %6, i32 0, i32 2, !dbg !5594
  %7 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5595, !tbaa !1464
  %codec3 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %7, i32 0, i32 1, !dbg !5596
  %8 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec3, align 8, !dbg !5596, !tbaa !5250
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %8, i32 0, i32 1, !dbg !5597
  %9 = load i8*, i8** %config, align 8, !dbg !5597, !tbaa !1717
  %call = call i64 %5(%union.MultibyteCodec_State* %state, i8* %9), !dbg !5590
  %cmp4 = icmp ne i64 %call, 0, !dbg !5598
  br i1 %cmp4, label %if.then, label %if.end, !dbg !5599

if.then:                                          ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !5600
  br label %return, !dbg !5600

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5601, !tbaa !1464
  %pendingsize = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %10, i32 0, i32 5, !dbg !5602
  store i64 0, i64* %pendingsize, align 8, !dbg !5603, !tbaa !5261
  %11 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5604, !tbaa !1498
  %inc = add i64 %11, 1, !dbg !5604
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5604, !tbaa !1498
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5605
  br label %return, !dbg !5605

return:                                           ; preds = %if.end, %if.then
  %12 = load %struct._object*, %struct._object** %retval, !dbg !5606
  ret %struct._object* %12, !dbg !5606
}

declare i32 @PyArg_UnpackTuple(%struct._object*, i8*, i64, i64, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbstreamreader_iread(%struct.MultibyteStreamReaderObject* %self, i8* %method, i64 %sizehint) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteStreamReaderObject*, align 8
  %method.addr = alloca i8*, align 8
  %sizehint.addr = alloca i64, align 8
  %buf = alloca %struct.MultibyteDecodeBuffer, align 8
  %cres = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %rsize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %endoffile = alloca i32, align 4
  %ctr = alloca %struct._object*, align 8
  %ctrdata = alloca i8*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp84 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp121 = alloca %struct._object*, align 8
  %_py_xdecref_tmp137 = alloca %struct._object*, align 8
  %_py_decref_tmp143 = alloca %struct._object*, align 8
  %_py_xdecref_tmp159 = alloca %struct._object*, align 8
  %_py_decref_tmp164 = alloca %struct._object*, align 8
  %_py_xdecref_tmp180 = alloca %struct._object*, align 8
  %_py_decref_tmp186 = alloca %struct._object*, align 8
  store %struct.MultibyteStreamReaderObject* %self, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamReaderObject** %self.addr, metadata !1065, metadata !1451), !dbg !5607
  store i8* %method, i8** %method.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i8** %method.addr, metadata !1066, metadata !1451), !dbg !5608
  store i64 %sizehint, i64* %sizehint.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i64* %sizehint.addr, metadata !1067, metadata !1451), !dbg !5609
  %0 = bitcast %struct.MultibyteDecodeBuffer* %buf to i8*, !dbg !5610
  call void @llvm.lifetime.start(i64 88, i8* %0) #1, !dbg !5610
  call void @llvm.dbg.declare(metadata %struct.MultibyteDecodeBuffer* %buf, metadata !1068, metadata !1451), !dbg !5611
  %1 = bitcast %struct._object** %cres to i8*, !dbg !5612
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5612
  call void @llvm.dbg.declare(metadata %struct._object** %cres, metadata !1069, metadata !1451), !dbg !5613
  %2 = bitcast %struct._object** %res to i8*, !dbg !5612
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5612
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1070, metadata !1451), !dbg !5614
  %3 = bitcast i64* %rsize to i8*, !dbg !5615
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5615
  call void @llvm.dbg.declare(metadata i64* %rsize, metadata !1071, metadata !1451), !dbg !5616
  %4 = load i64, i64* %sizehint.addr, align 8, !dbg !5617, !tbaa !1876
  %cmp = icmp eq i64 %4, 0, !dbg !5619
  br i1 %cmp, label %if.then, label %if.end, !dbg !5620

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyUnicode_New(i64 0, i32 0), !dbg !5621
  store %struct._object* %call, %struct._object** %retval, !dbg !5622
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.202, !dbg !5622

if.end:                                           ; preds = %entry
  %writer = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 4, !dbg !5623
  call void @_PyUnicodeWriter_Init(%struct._PyUnicodeWriter* %writer), !dbg !5624
  %excobj = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 3, !dbg !5625
  store %struct._object* null, %struct._object** %excobj, align 8, !dbg !5626, !tbaa !4335
  store %struct._object* null, %struct._object** %cres, align 8, !dbg !5627, !tbaa !1464
  br label %for.cond, !dbg !5628

for.cond:                                         ; preds = %cleanup.cont.109, %if.end
  %5 = bitcast i32* %endoffile to i8*, !dbg !5629
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !5629
  call void @llvm.dbg.declare(metadata i32* %endoffile, metadata !1072, metadata !1451), !dbg !5630
  %6 = load i64, i64* %sizehint.addr, align 8, !dbg !5631, !tbaa !1876
  %cmp1 = icmp slt i64 %6, 0, !dbg !5633
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !5634

if.then.2:                                        ; preds = %for.cond
  %7 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5635, !tbaa !1464
  %stream = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %7, i32 0, i32 6, !dbg !5636
  %8 = load %struct._object*, %struct._object** %stream, align 8, !dbg !5636, !tbaa !5082
  %9 = load i8*, i8** %method.addr, align 8, !dbg !5637, !tbaa !1464
  %call3 = call %struct._object* (%struct._object*, i8*, i8*, ...) @_PyObject_CallMethod_SizeT(%struct._object* %8, i8* %9, i8* null), !dbg !5638
  store %struct._object* %call3, %struct._object** %cres, align 8, !dbg !5639, !tbaa !1464
  br label %if.end.6, !dbg !5640

if.else:                                          ; preds = %for.cond
  %10 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5641, !tbaa !1464
  %stream4 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %10, i32 0, i32 6, !dbg !5642
  %11 = load %struct._object*, %struct._object** %stream4, align 8, !dbg !5642, !tbaa !5082
  %12 = load i8*, i8** %method.addr, align 8, !dbg !5643, !tbaa !1464
  %13 = load i64, i64* %sizehint.addr, align 8, !dbg !5644, !tbaa !1876
  %call5 = call %struct._object* (%struct._object*, i8*, i8*, ...) @_PyObject_CallMethod_SizeT(%struct._object* %11, i8* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i32 0, i32 0), i64 %13), !dbg !5645
  store %struct._object* %call5, %struct._object** %cres, align 8, !dbg !5646, !tbaa !1464
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %14 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5647, !tbaa !1464
  %cmp7 = icmp eq %struct._object* %14, null, !dbg !5649
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !5650

if.then.8:                                        ; preds = %if.end.6
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.107, !dbg !5651

if.end.9:                                         ; preds = %if.end.6
  %15 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5652, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !5654
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5654, !tbaa !1563
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 19, !dbg !5655
  %17 = load i64, i64* %tp_flags, align 8, !dbg !5655, !tbaa !1947
  %and = and i64 %17, 134217728, !dbg !5656
  %cmp10 = icmp ne i64 %and, 0, !dbg !5657
  br i1 %cmp10, label %if.end.14, label %if.then.11, !dbg !5658

if.then.11:                                       ; preds = %if.end.9
  %18 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5659, !tbaa !1464
  %19 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5661, !tbaa !1464
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !5662
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8, !dbg !5662, !tbaa !1563
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 1, !dbg !5663
  %21 = load i8*, i8** %tp_name, align 8, !dbg !5663, !tbaa !1505
  %call13 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %18, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.36, i32 0, i32 0), i8* %21), !dbg !5664
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.107, !dbg !5665

if.end.14:                                        ; preds = %if.end.9
  %22 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5666, !tbaa !1464
  %23 = bitcast %struct._object* %22 to %struct.PyVarObject*, !dbg !5667
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %23, i32 0, i32 1, !dbg !5668
  %24 = load i64, i64* %ob_size, align 8, !dbg !5668, !tbaa !2592
  %cmp15 = icmp eq i64 %24, 0, !dbg !5669
  %conv = zext i1 %cmp15 to i32, !dbg !5669
  store i32 %conv, i32* %endoffile, align 4, !dbg !5670, !tbaa !1475
  %25 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5671, !tbaa !1464
  %pendingsize = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %25, i32 0, i32 5, !dbg !5672
  %26 = load i64, i64* %pendingsize, align 8, !dbg !5672, !tbaa !5261
  %cmp16 = icmp sgt i64 %26, 0, !dbg !5673
  br i1 %cmp16, label %if.then.18, label %if.end.46, !dbg !5674

if.then.18:                                       ; preds = %if.end.14
  %27 = bitcast %struct._object** %ctr to i8*, !dbg !5675
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !5675
  call void @llvm.dbg.declare(metadata %struct._object** %ctr, metadata !1076, metadata !1451), !dbg !5676
  %28 = bitcast i8** %ctrdata to i8*, !dbg !5677
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !5677
  call void @llvm.dbg.declare(metadata i8** %ctrdata, metadata !1079, metadata !1451), !dbg !5678
  %29 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5679, !tbaa !1464
  %30 = bitcast %struct._object* %29 to %struct.PyVarObject*, !dbg !5681
  %ob_size19 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %30, i32 0, i32 1, !dbg !5682
  %31 = load i64, i64* %ob_size19, align 8, !dbg !5682, !tbaa !2592
  %32 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5683, !tbaa !1464
  %pendingsize20 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %32, i32 0, i32 5, !dbg !5684
  %33 = load i64, i64* %pendingsize20, align 8, !dbg !5684, !tbaa !5261
  %sub = sub i64 9223372036854775807, %33, !dbg !5685
  %cmp21 = icmp sgt i64 %31, %sub, !dbg !5686
  br i1 %cmp21, label %if.then.23, label %if.end.25, !dbg !5687

if.then.23:                                       ; preds = %if.then.18
  %call24 = call %struct._object* @PyErr_NoMemory(), !dbg !5688
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5690

if.end.25:                                        ; preds = %if.then.18
  %34 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5691, !tbaa !1464
  %35 = bitcast %struct._object* %34 to %struct.PyVarObject*, !dbg !5692
  %ob_size26 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %35, i32 0, i32 1, !dbg !5693
  %36 = load i64, i64* %ob_size26, align 8, !dbg !5693, !tbaa !2592
  %37 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5694, !tbaa !1464
  %pendingsize27 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %37, i32 0, i32 5, !dbg !5695
  %38 = load i64, i64* %pendingsize27, align 8, !dbg !5695, !tbaa !5261
  %add = add i64 %36, %38, !dbg !5696
  store i64 %add, i64* %rsize, align 8, !dbg !5697, !tbaa !1876
  %39 = load i64, i64* %rsize, align 8, !dbg !5698, !tbaa !1876
  %call28 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %39), !dbg !5699
  store %struct._object* %call28, %struct._object** %ctr, align 8, !dbg !5700, !tbaa !1464
  %40 = load %struct._object*, %struct._object** %ctr, align 8, !dbg !5701, !tbaa !1464
  %cmp29 = icmp eq %struct._object* %40, null, !dbg !5703
  br i1 %cmp29, label %if.then.31, label %if.end.32, !dbg !5704

if.then.31:                                       ; preds = %if.end.25
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5705

if.end.32:                                        ; preds = %if.end.25
  %41 = load %struct._object*, %struct._object** %ctr, align 8, !dbg !5706, !tbaa !1464
  %42 = bitcast %struct._object* %41 to %struct.PyBytesObject*, !dbg !5707
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %42, i32 0, i32 2, !dbg !5708
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !5709
  store i8* %arraydecay, i8** %ctrdata, align 8, !dbg !5710, !tbaa !1464
  %43 = load i8*, i8** %ctrdata, align 8, !dbg !5711, !tbaa !1464
  %44 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5712, !tbaa !1464
  %pending = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %44, i32 0, i32 4, !dbg !5713
  %45 = bitcast [8 x i8]* %pending to i8*, !dbg !5714
  %46 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5715, !tbaa !1464
  %pendingsize33 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %46, i32 0, i32 5, !dbg !5716
  %47 = load i64, i64* %pendingsize33, align 8, !dbg !5716, !tbaa !5261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %45, i64 %47, i32 1, i1 false), !dbg !5714
  %48 = load i8*, i8** %ctrdata, align 8, !dbg !5717, !tbaa !1464
  %49 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5718, !tbaa !1464
  %pendingsize34 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %49, i32 0, i32 5, !dbg !5719
  %50 = load i64, i64* %pendingsize34, align 8, !dbg !5719, !tbaa !5261
  %add.ptr = getelementptr i8, i8* %48, i64 %50, !dbg !5720
  %51 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5721, !tbaa !1464
  %52 = bitcast %struct._object* %51 to %struct.PyBytesObject*, !dbg !5722
  %ob_sval35 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %52, i32 0, i32 2, !dbg !5723
  %arraydecay36 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval35, i32 0, i32 0, !dbg !5724
  %53 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5725, !tbaa !1464
  %54 = bitcast %struct._object* %53 to %struct.PyVarObject*, !dbg !5726
  %ob_size37 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %54, i32 0, i32 1, !dbg !5727
  %55 = load i64, i64* %ob_size37, align 8, !dbg !5727, !tbaa !2592
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %arraydecay36, i64 %55, i32 1, i1 false), !dbg !5728
  br label %do.body, !dbg !5729

do.body:                                          ; preds = %if.end.32
  %56 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5730
  call void @llvm.lifetime.start(i64 8, i8* %56) #1, !dbg !5730
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1080, metadata !1451), !dbg !5732
  %57 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5733, !tbaa !1464
  store %struct._object* %57, %struct._object** %_py_decref_tmp, align 8, !dbg !5732, !tbaa !1464
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5734, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 0, !dbg !5736
  %59 = load i64, i64* %ob_refcnt, align 8, !dbg !5737, !tbaa !1498
  %dec = add i64 %59, -1, !dbg !5737
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5737, !tbaa !1498
  %cmp38 = icmp ne i64 %dec, 0, !dbg !5738
  br i1 %cmp38, label %if.then.40, label %if.else.41, !dbg !5739

if.then.40:                                       ; preds = %do.body
  br label %if.end.43, !dbg !5740

if.else.41:                                       ; preds = %do.body
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5742, !tbaa !1464
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 1, !dbg !5744
  %61 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !5744, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 4, !dbg !5745
  %62 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5745, !tbaa !1565
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5746, !tbaa !1464
  call void %62(%struct._object* %63), !dbg !5747
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.41, %if.then.40
  %64 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5748
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !5748
  br label %do.cond, !dbg !5750

do.cond:                                          ; preds = %if.end.43
  br label %do.end, !dbg !5751

do.end:                                           ; preds = %do.cond
  %65 = load %struct._object*, %struct._object** %ctr, align 8, !dbg !5753, !tbaa !1464
  store %struct._object* %65, %struct._object** %cres, align 8, !dbg !5754, !tbaa !1464
  %66 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5755, !tbaa !1464
  %pendingsize44 = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %66, i32 0, i32 5, !dbg !5756
  store i64 0, i64* %pendingsize44, align 8, !dbg !5757, !tbaa !5261
  store i32 0, i32* %cleanup.dest.slot, !dbg !5758
  br label %cleanup, !dbg !5758

cleanup:                                          ; preds = %if.then.31, %if.then.23, %do.end
  %67 = bitcast i8** %ctrdata to i8*, !dbg !5759
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !5759
  %68 = bitcast %struct._object** %ctr to i8*, !dbg !5759
  call void @llvm.lifetime.end(i64 8, i8* %68) #1, !dbg !5759
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.107 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.46, !dbg !5761

if.end.46:                                        ; preds = %cleanup.cont, %if.end.14
  %69 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5762, !tbaa !1464
  %70 = bitcast %struct._object* %69 to %struct.PyVarObject*, !dbg !5763
  %ob_size47 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %70, i32 0, i32 1, !dbg !5764
  %71 = load i64, i64* %ob_size47, align 8, !dbg !5764, !tbaa !2592
  store i64 %71, i64* %rsize, align 8, !dbg !5765, !tbaa !1876
  %72 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5766, !tbaa !1464
  %73 = bitcast %struct._object* %72 to %struct.PyBytesObject*, !dbg !5768
  %ob_sval48 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %73, i32 0, i32 2, !dbg !5769
  %arraydecay49 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval48, i32 0, i32 0, !dbg !5770
  %74 = load i64, i64* %rsize, align 8, !dbg !5771, !tbaa !1876
  %call50 = call i32 @decoder_prepare_buffer(%struct.MultibyteDecodeBuffer* %buf, i8* %arraydecay49, i64 %74), !dbg !5772
  %cmp51 = icmp ne i32 %call50, 0, !dbg !5773
  br i1 %cmp51, label %if.then.53, label %if.end.54, !dbg !5774

if.then.53:                                       ; preds = %if.end.46
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.107, !dbg !5775

if.end.54:                                        ; preds = %if.end.46
  %75 = load i64, i64* %rsize, align 8, !dbg !5776, !tbaa !1876
  %cmp55 = icmp sgt i64 %75, 0, !dbg !5778
  br i1 %cmp55, label %land.lhs.true, label %if.end.59, !dbg !5779

land.lhs.true:                                    ; preds = %if.end.54
  %76 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5780, !tbaa !1464
  %77 = bitcast %struct.MultibyteStreamReaderObject* %76 to %struct.MultibyteStatefulDecoderContext*, !dbg !5781
  %call57 = call i32 @decoder_feed_buffer(%struct.MultibyteStatefulDecoderContext* %77, %struct.MultibyteDecodeBuffer* %buf), !dbg !5782
  %tobool = icmp ne i32 %call57, 0, !dbg !5782
  br i1 %tobool, label %if.then.58, label %if.end.59, !dbg !5783

if.then.58:                                       ; preds = %land.lhs.true
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.107, !dbg !5784

if.end.59:                                        ; preds = %land.lhs.true, %if.end.54
  %78 = load i32, i32* %endoffile, align 4, !dbg !5785, !tbaa !1475
  %tobool60 = icmp ne i32 %78, 0, !dbg !5785
  br i1 %tobool60, label %if.then.63, label %lor.lhs.false, !dbg !5787

lor.lhs.false:                                    ; preds = %if.end.59
  %79 = load i64, i64* %sizehint.addr, align 8, !dbg !5788, !tbaa !1876
  %cmp61 = icmp slt i64 %79, 0, !dbg !5790
  br i1 %cmp61, label %if.then.63, label %if.end.71, !dbg !5791

if.then.63:                                       ; preds = %lor.lhs.false, %if.end.59
  %inbuf = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 0, !dbg !5792
  %80 = load i8*, i8** %inbuf, align 8, !dbg !5792, !tbaa !4412
  %inbuf_end = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 2, !dbg !5795
  %81 = load i8*, i8** %inbuf_end, align 8, !dbg !5795, !tbaa !4414
  %cmp64 = icmp ult i8* %80, %81, !dbg !5796
  br i1 %cmp64, label %land.lhs.true.66, label %if.end.70, !dbg !5797

land.lhs.true.66:                                 ; preds = %if.then.63
  %82 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5798, !tbaa !1464
  %codec = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %82, i32 0, i32 1, !dbg !5799
  %83 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !5799, !tbaa !5250
  %84 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5800, !tbaa !1464
  %state = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %84, i32 0, i32 2, !dbg !5801
  %85 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5802, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteStreamReaderObject, %struct.MultibyteStreamReaderObject* %85, i32 0, i32 3, !dbg !5803
  %86 = load %struct._object*, %struct._object** %errors, align 8, !dbg !5803, !tbaa !5031
  %call67 = call i32 @multibytecodec_decerror(%struct.MultibyteCodec* %83, %union.MultibyteCodec_State* %state, %struct.MultibyteDecodeBuffer* %buf, %struct._object* %86, i64 -2), !dbg !5804
  %tobool68 = icmp ne i32 %call67, 0, !dbg !5804
  br i1 %tobool68, label %if.then.69, label %if.end.70, !dbg !5805

if.then.69:                                       ; preds = %land.lhs.true.66
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.107, !dbg !5806

if.end.70:                                        ; preds = %land.lhs.true.66, %if.then.63
  br label %if.end.71, !dbg !5807

if.end.71:                                        ; preds = %if.end.70, %lor.lhs.false
  %inbuf72 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 0, !dbg !5808
  %87 = load i8*, i8** %inbuf72, align 8, !dbg !5808, !tbaa !4412
  %inbuf_end73 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 2, !dbg !5810
  %88 = load i8*, i8** %inbuf_end73, align 8, !dbg !5810, !tbaa !4414
  %cmp74 = icmp ult i8* %87, %88, !dbg !5811
  br i1 %cmp74, label %if.then.76, label %if.end.82, !dbg !5812

if.then.76:                                       ; preds = %if.end.71
  %89 = load %struct.MultibyteStreamReaderObject*, %struct.MultibyteStreamReaderObject** %self.addr, align 8, !dbg !5813, !tbaa !1464
  %90 = bitcast %struct.MultibyteStreamReaderObject* %89 to %struct.MultibyteStatefulDecoderContext*, !dbg !5816
  %call77 = call i32 @decoder_append_pending(%struct.MultibyteStatefulDecoderContext* %90, %struct.MultibyteDecodeBuffer* %buf), !dbg !5817
  %cmp78 = icmp ne i32 %call77, 0, !dbg !5818
  br i1 %cmp78, label %if.then.80, label %if.end.81, !dbg !5819

if.then.80:                                       ; preds = %if.then.76
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.107, !dbg !5820

if.end.81:                                        ; preds = %if.then.76
  br label %if.end.82, !dbg !5821

if.end.82:                                        ; preds = %if.end.81, %if.end.71
  br label %do.body.83, !dbg !5822

do.body.83:                                       ; preds = %if.end.82
  %91 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !5823
  call void @llvm.lifetime.start(i64 8, i8* %91) #1, !dbg !5823
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp84, metadata !1082, metadata !1451), !dbg !5825
  %92 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5826, !tbaa !1464
  store %struct._object* %92, %struct._object** %_py_decref_tmp84, align 8, !dbg !5825, !tbaa !1464
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !5827, !tbaa !1464
  %ob_refcnt85 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0, !dbg !5829
  %94 = load i64, i64* %ob_refcnt85, align 8, !dbg !5830, !tbaa !1498
  %dec86 = add i64 %94, -1, !dbg !5830
  store i64 %dec86, i64* %ob_refcnt85, align 8, !dbg !5830, !tbaa !1498
  %cmp87 = icmp ne i64 %dec86, 0, !dbg !5831
  br i1 %cmp87, label %if.then.89, label %if.else.90, !dbg !5832

if.then.89:                                       ; preds = %do.body.83
  br label %if.end.93, !dbg !5833

if.else.90:                                       ; preds = %do.body.83
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !5835, !tbaa !1464
  %ob_type91 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 1, !dbg !5837
  %96 = load %struct._typeobject*, %struct._typeobject** %ob_type91, align 8, !dbg !5837, !tbaa !1563
  %tp_dealloc92 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %96, i32 0, i32 4, !dbg !5838
  %97 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc92, align 8, !dbg !5838, !tbaa !1565
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !5839, !tbaa !1464
  call void %97(%struct._object* %98), !dbg !5840
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.90, %if.then.89
  %99 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !5841
  call void @llvm.lifetime.end(i64 8, i8* %99) #1, !dbg !5841
  br label %do.cond.94, !dbg !5843

do.cond.94:                                       ; preds = %if.end.93
  br label %do.end.95, !dbg !5844

do.end.95:                                        ; preds = %do.cond.94
  store %struct._object* null, %struct._object** %cres, align 8, !dbg !5846, !tbaa !1464
  %100 = load i64, i64* %sizehint.addr, align 8, !dbg !5847, !tbaa !1876
  %cmp96 = icmp slt i64 %100, 0, !dbg !5849
  br i1 %cmp96, label %if.then.105, label %lor.lhs.false.98, !dbg !5850

lor.lhs.false.98:                                 ; preds = %do.end.95
  %writer99 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 4, !dbg !5851
  %pos = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %writer99, i32 0, i32 5, !dbg !5853
  %101 = load i64, i64* %pos, align 8, !dbg !5853, !tbaa !5854
  %cmp100 = icmp ne i64 %101, 0, !dbg !5855
  br i1 %cmp100, label %if.then.105, label %lor.lhs.false.102, !dbg !5856

lor.lhs.false.102:                                ; preds = %lor.lhs.false.98
  %102 = load i64, i64* %rsize, align 8, !dbg !5857, !tbaa !1876
  %cmp103 = icmp eq i64 %102, 0, !dbg !5859
  br i1 %cmp103, label %if.then.105, label %if.end.106, !dbg !5860

if.then.105:                                      ; preds = %lor.lhs.false.102, %lor.lhs.false.98, %do.end.95
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.107, !dbg !5861

if.end.106:                                       ; preds = %lor.lhs.false.102
  store i64 1, i64* %sizehint.addr, align 8, !dbg !5862, !tbaa !1876
  store i32 0, i32* %cleanup.dest.slot, !dbg !5863
  br label %cleanup.107, !dbg !5863

cleanup.107:                                      ; preds = %if.then.80, %if.then.69, %if.then.58, %if.then.53, %if.then.11, %if.then.8, %if.end.106, %if.then.105, %cleanup
  %103 = bitcast i32* %endoffile to i8*, !dbg !5864
  call void @llvm.lifetime.end(i64 4, i8* %103) #1, !dbg !5864
  %cleanup.dest.108 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.108, label %cleanup.202 [
    i32 0, label %cleanup.cont.109
    i32 2, label %for.end
    i32 4, label %errorexit
  ]

cleanup.cont.109:                                 ; preds = %cleanup.107
  br label %for.cond, !dbg !5866

for.end:                                          ; preds = %cleanup.107
  %writer110 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 4, !dbg !5867
  %call111 = call %struct._object* @_PyUnicodeWriter_Finish(%struct._PyUnicodeWriter* %writer110), !dbg !5868
  store %struct._object* %call111, %struct._object** %res, align 8, !dbg !5869, !tbaa !1464
  %104 = load %struct._object*, %struct._object** %res, align 8, !dbg !5870, !tbaa !1464
  %cmp112 = icmp eq %struct._object* %104, null, !dbg !5872
  br i1 %cmp112, label %if.then.114, label %if.end.115, !dbg !5873

if.then.114:                                      ; preds = %for.end
  br label %errorexit, !dbg !5874

if.end.115:                                       ; preds = %for.end
  br label %do.body.116, !dbg !5875

do.body.116:                                      ; preds = %if.end.115
  %105 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5876
  call void @llvm.lifetime.start(i64 8, i8* %105) #1, !dbg !5876
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1084, metadata !1451), !dbg !5878
  %106 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5879, !tbaa !1464
  store %struct._object* %106, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5878, !tbaa !1464
  %107 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5880, !tbaa !1464
  %cmp117 = icmp ne %struct._object* %107, null, !dbg !5881
  br i1 %cmp117, label %if.then.119, label %if.end.133, !dbg !5882

if.then.119:                                      ; preds = %do.body.116
  br label %do.body.120, !dbg !5883

do.body.120:                                      ; preds = %if.then.119
  %108 = bitcast %struct._object** %_py_decref_tmp121 to i8*, !dbg !5885
  call void @llvm.lifetime.start(i64 8, i8* %108) #1, !dbg !5885
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp121, metadata !1086, metadata !1451), !dbg !5887
  %109 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5888, !tbaa !1464
  store %struct._object* %109, %struct._object** %_py_decref_tmp121, align 8, !dbg !5887, !tbaa !1464
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !5889, !tbaa !1464
  %ob_refcnt122 = getelementptr inbounds %struct._object, %struct._object* %110, i32 0, i32 0, !dbg !5891
  %111 = load i64, i64* %ob_refcnt122, align 8, !dbg !5892, !tbaa !1498
  %dec123 = add i64 %111, -1, !dbg !5892
  store i64 %dec123, i64* %ob_refcnt122, align 8, !dbg !5892, !tbaa !1498
  %cmp124 = icmp ne i64 %dec123, 0, !dbg !5893
  br i1 %cmp124, label %if.then.126, label %if.else.127, !dbg !5894

if.then.126:                                      ; preds = %do.body.120
  br label %if.end.130, !dbg !5895

if.else.127:                                      ; preds = %do.body.120
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !5897, !tbaa !1464
  %ob_type128 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 1, !dbg !5899
  %113 = load %struct._typeobject*, %struct._typeobject** %ob_type128, align 8, !dbg !5899, !tbaa !1563
  %tp_dealloc129 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %113, i32 0, i32 4, !dbg !5900
  %114 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc129, align 8, !dbg !5900, !tbaa !1565
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !5901, !tbaa !1464
  call void %114(%struct._object* %115), !dbg !5902
  br label %if.end.130

if.end.130:                                       ; preds = %if.else.127, %if.then.126
  %116 = bitcast %struct._object** %_py_decref_tmp121 to i8*, !dbg !5903
  call void @llvm.lifetime.end(i64 8, i8* %116) #1, !dbg !5903
  br label %do.cond.131, !dbg !5905

do.cond.131:                                      ; preds = %if.end.130
  br label %do.end.132, !dbg !5906

do.end.132:                                       ; preds = %do.cond.131
  br label %if.end.133, !dbg !5908

if.end.133:                                       ; preds = %do.end.132, %do.body.116
  %117 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5910
  call void @llvm.lifetime.end(i64 8, i8* %117) #1, !dbg !5910
  br label %do.cond.134, !dbg !5913

do.cond.134:                                      ; preds = %if.end.133
  br label %do.end.135, !dbg !5914

do.end.135:                                       ; preds = %do.cond.134
  br label %do.body.136, !dbg !5916

do.body.136:                                      ; preds = %do.end.135
  %118 = bitcast %struct._object** %_py_xdecref_tmp137 to i8*, !dbg !5917
  call void @llvm.lifetime.start(i64 8, i8* %118) #1, !dbg !5917
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp137, metadata !1089, metadata !1451), !dbg !5919
  %excobj138 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 3, !dbg !5920
  %119 = load %struct._object*, %struct._object** %excobj138, align 8, !dbg !5920, !tbaa !4335
  store %struct._object* %119, %struct._object** %_py_xdecref_tmp137, align 8, !dbg !5919, !tbaa !1464
  %120 = load %struct._object*, %struct._object** %_py_xdecref_tmp137, align 8, !dbg !5921, !tbaa !1464
  %cmp139 = icmp ne %struct._object* %120, null, !dbg !5922
  br i1 %cmp139, label %if.then.141, label %if.end.155, !dbg !5923

if.then.141:                                      ; preds = %do.body.136
  br label %do.body.142, !dbg !5924

do.body.142:                                      ; preds = %if.then.141
  %121 = bitcast %struct._object** %_py_decref_tmp143 to i8*, !dbg !5926
  call void @llvm.lifetime.start(i64 8, i8* %121) #1, !dbg !5926
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp143, metadata !1091, metadata !1451), !dbg !5928
  %122 = load %struct._object*, %struct._object** %_py_xdecref_tmp137, align 8, !dbg !5929, !tbaa !1464
  store %struct._object* %122, %struct._object** %_py_decref_tmp143, align 8, !dbg !5928, !tbaa !1464
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8, !dbg !5930, !tbaa !1464
  %ob_refcnt144 = getelementptr inbounds %struct._object, %struct._object* %123, i32 0, i32 0, !dbg !5932
  %124 = load i64, i64* %ob_refcnt144, align 8, !dbg !5933, !tbaa !1498
  %dec145 = add i64 %124, -1, !dbg !5933
  store i64 %dec145, i64* %ob_refcnt144, align 8, !dbg !5933, !tbaa !1498
  %cmp146 = icmp ne i64 %dec145, 0, !dbg !5934
  br i1 %cmp146, label %if.then.148, label %if.else.149, !dbg !5935

if.then.148:                                      ; preds = %do.body.142
  br label %if.end.152, !dbg !5936

if.else.149:                                      ; preds = %do.body.142
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8, !dbg !5938, !tbaa !1464
  %ob_type150 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 1, !dbg !5940
  %126 = load %struct._typeobject*, %struct._typeobject** %ob_type150, align 8, !dbg !5940, !tbaa !1563
  %tp_dealloc151 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %126, i32 0, i32 4, !dbg !5941
  %127 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc151, align 8, !dbg !5941, !tbaa !1565
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8, !dbg !5942, !tbaa !1464
  call void %127(%struct._object* %128), !dbg !5943
  br label %if.end.152

if.end.152:                                       ; preds = %if.else.149, %if.then.148
  %129 = bitcast %struct._object** %_py_decref_tmp143 to i8*, !dbg !5944
  call void @llvm.lifetime.end(i64 8, i8* %129) #1, !dbg !5944
  br label %do.cond.153, !dbg !5946

do.cond.153:                                      ; preds = %if.end.152
  br label %do.end.154, !dbg !5947

do.end.154:                                       ; preds = %do.cond.153
  br label %if.end.155, !dbg !5949

if.end.155:                                       ; preds = %do.end.154, %do.body.136
  %130 = bitcast %struct._object** %_py_xdecref_tmp137 to i8*, !dbg !5951
  call void @llvm.lifetime.end(i64 8, i8* %130) #1, !dbg !5951
  br label %do.cond.156, !dbg !5952

do.cond.156:                                      ; preds = %if.end.155
  br label %do.end.157, !dbg !5953

do.end.157:                                       ; preds = %do.cond.156
  %131 = load %struct._object*, %struct._object** %res, align 8, !dbg !5955, !tbaa !1464
  store %struct._object* %131, %struct._object** %retval, !dbg !5956
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.202, !dbg !5956

errorexit:                                        ; preds = %cleanup.107, %if.then.114
  br label %do.body.158, !dbg !5957

do.body.158:                                      ; preds = %errorexit
  %132 = bitcast %struct._object** %_py_xdecref_tmp159 to i8*, !dbg !5958
  call void @llvm.lifetime.start(i64 8, i8* %132) #1, !dbg !5958
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp159, metadata !1094, metadata !1451), !dbg !5960
  %133 = load %struct._object*, %struct._object** %cres, align 8, !dbg !5961, !tbaa !1464
  store %struct._object* %133, %struct._object** %_py_xdecref_tmp159, align 8, !dbg !5960, !tbaa !1464
  %134 = load %struct._object*, %struct._object** %_py_xdecref_tmp159, align 8, !dbg !5962, !tbaa !1464
  %cmp160 = icmp ne %struct._object* %134, null, !dbg !5963
  br i1 %cmp160, label %if.then.162, label %if.end.176, !dbg !5964

if.then.162:                                      ; preds = %do.body.158
  br label %do.body.163, !dbg !5965

do.body.163:                                      ; preds = %if.then.162
  %135 = bitcast %struct._object** %_py_decref_tmp164 to i8*, !dbg !5967
  call void @llvm.lifetime.start(i64 8, i8* %135) #1, !dbg !5967
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp164, metadata !1096, metadata !1451), !dbg !5969
  %136 = load %struct._object*, %struct._object** %_py_xdecref_tmp159, align 8, !dbg !5970, !tbaa !1464
  store %struct._object* %136, %struct._object** %_py_decref_tmp164, align 8, !dbg !5969, !tbaa !1464
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp164, align 8, !dbg !5971, !tbaa !1464
  %ob_refcnt165 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 0, !dbg !5973
  %138 = load i64, i64* %ob_refcnt165, align 8, !dbg !5974, !tbaa !1498
  %dec166 = add i64 %138, -1, !dbg !5974
  store i64 %dec166, i64* %ob_refcnt165, align 8, !dbg !5974, !tbaa !1498
  %cmp167 = icmp ne i64 %dec166, 0, !dbg !5975
  br i1 %cmp167, label %if.then.169, label %if.else.170, !dbg !5976

if.then.169:                                      ; preds = %do.body.163
  br label %if.end.173, !dbg !5977

if.else.170:                                      ; preds = %do.body.163
  %139 = load %struct._object*, %struct._object** %_py_decref_tmp164, align 8, !dbg !5979, !tbaa !1464
  %ob_type171 = getelementptr inbounds %struct._object, %struct._object* %139, i32 0, i32 1, !dbg !5981
  %140 = load %struct._typeobject*, %struct._typeobject** %ob_type171, align 8, !dbg !5981, !tbaa !1563
  %tp_dealloc172 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %140, i32 0, i32 4, !dbg !5982
  %141 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc172, align 8, !dbg !5982, !tbaa !1565
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp164, align 8, !dbg !5983, !tbaa !1464
  call void %141(%struct._object* %142), !dbg !5984
  br label %if.end.173

if.end.173:                                       ; preds = %if.else.170, %if.then.169
  %143 = bitcast %struct._object** %_py_decref_tmp164 to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 8, i8* %143) #1, !dbg !5985
  br label %do.cond.174, !dbg !5987

do.cond.174:                                      ; preds = %if.end.173
  br label %do.end.175, !dbg !5988

do.end.175:                                       ; preds = %do.cond.174
  br label %if.end.176, !dbg !5990

if.end.176:                                       ; preds = %do.end.175, %do.body.158
  %144 = bitcast %struct._object** %_py_xdecref_tmp159 to i8*, !dbg !5992
  call void @llvm.lifetime.end(i64 8, i8* %144) #1, !dbg !5992
  br label %do.cond.177, !dbg !5993

do.cond.177:                                      ; preds = %if.end.176
  br label %do.end.178, !dbg !5994

do.end.178:                                       ; preds = %do.cond.177
  br label %do.body.179, !dbg !5996

do.body.179:                                      ; preds = %do.end.178
  %145 = bitcast %struct._object** %_py_xdecref_tmp180 to i8*, !dbg !5997
  call void @llvm.lifetime.start(i64 8, i8* %145) #1, !dbg !5997
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp180, metadata !1099, metadata !1451), !dbg !5999
  %excobj181 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 3, !dbg !6000
  %146 = load %struct._object*, %struct._object** %excobj181, align 8, !dbg !6000, !tbaa !4335
  store %struct._object* %146, %struct._object** %_py_xdecref_tmp180, align 8, !dbg !5999, !tbaa !1464
  %147 = load %struct._object*, %struct._object** %_py_xdecref_tmp180, align 8, !dbg !6001, !tbaa !1464
  %cmp182 = icmp ne %struct._object* %147, null, !dbg !6002
  br i1 %cmp182, label %if.then.184, label %if.end.198, !dbg !6003

if.then.184:                                      ; preds = %do.body.179
  br label %do.body.185, !dbg !6004

do.body.185:                                      ; preds = %if.then.184
  %148 = bitcast %struct._object** %_py_decref_tmp186 to i8*, !dbg !6006
  call void @llvm.lifetime.start(i64 8, i8* %148) #1, !dbg !6006
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp186, metadata !1101, metadata !1451), !dbg !6008
  %149 = load %struct._object*, %struct._object** %_py_xdecref_tmp180, align 8, !dbg !6009, !tbaa !1464
  store %struct._object* %149, %struct._object** %_py_decref_tmp186, align 8, !dbg !6008, !tbaa !1464
  %150 = load %struct._object*, %struct._object** %_py_decref_tmp186, align 8, !dbg !6010, !tbaa !1464
  %ob_refcnt187 = getelementptr inbounds %struct._object, %struct._object* %150, i32 0, i32 0, !dbg !6012
  %151 = load i64, i64* %ob_refcnt187, align 8, !dbg !6013, !tbaa !1498
  %dec188 = add i64 %151, -1, !dbg !6013
  store i64 %dec188, i64* %ob_refcnt187, align 8, !dbg !6013, !tbaa !1498
  %cmp189 = icmp ne i64 %dec188, 0, !dbg !6014
  br i1 %cmp189, label %if.then.191, label %if.else.192, !dbg !6015

if.then.191:                                      ; preds = %do.body.185
  br label %if.end.195, !dbg !6016

if.else.192:                                      ; preds = %do.body.185
  %152 = load %struct._object*, %struct._object** %_py_decref_tmp186, align 8, !dbg !6018, !tbaa !1464
  %ob_type193 = getelementptr inbounds %struct._object, %struct._object* %152, i32 0, i32 1, !dbg !6020
  %153 = load %struct._typeobject*, %struct._typeobject** %ob_type193, align 8, !dbg !6020, !tbaa !1563
  %tp_dealloc194 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %153, i32 0, i32 4, !dbg !6021
  %154 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc194, align 8, !dbg !6021, !tbaa !1565
  %155 = load %struct._object*, %struct._object** %_py_decref_tmp186, align 8, !dbg !6022, !tbaa !1464
  call void %154(%struct._object* %155), !dbg !6023
  br label %if.end.195

if.end.195:                                       ; preds = %if.else.192, %if.then.191
  %156 = bitcast %struct._object** %_py_decref_tmp186 to i8*, !dbg !6024
  call void @llvm.lifetime.end(i64 8, i8* %156) #1, !dbg !6024
  br label %do.cond.196, !dbg !6026

do.cond.196:                                      ; preds = %if.end.195
  br label %do.end.197, !dbg !6027

do.end.197:                                       ; preds = %do.cond.196
  br label %if.end.198, !dbg !6029

if.end.198:                                       ; preds = %do.end.197, %do.body.179
  %157 = bitcast %struct._object** %_py_xdecref_tmp180 to i8*, !dbg !6031
  call void @llvm.lifetime.end(i64 8, i8* %157) #1, !dbg !6031
  br label %do.cond.199, !dbg !6032

do.cond.199:                                      ; preds = %if.end.198
  br label %do.end.200, !dbg !6033

do.end.200:                                       ; preds = %do.cond.199
  %writer201 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 4, !dbg !6035
  call void @_PyUnicodeWriter_Dealloc(%struct._PyUnicodeWriter* %writer201), !dbg !6036
  store %struct._object* null, %struct._object** %retval, !dbg !6037
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.202, !dbg !6037

cleanup.202:                                      ; preds = %do.end.200, %do.end.157, %cleanup.107, %if.then
  %158 = bitcast i64* %rsize to i8*, !dbg !6038
  call void @llvm.lifetime.end(i64 8, i8* %158) #1, !dbg !6038
  %159 = bitcast %struct._object** %res to i8*, !dbg !6038
  call void @llvm.lifetime.end(i64 8, i8* %159) #1, !dbg !6038
  %160 = bitcast %struct._object** %cres to i8*, !dbg !6038
  call void @llvm.lifetime.end(i64 8, i8* %160) #1, !dbg !6038
  %161 = bitcast %struct.MultibyteDecodeBuffer* %buf to i8*, !dbg !6038
  call void @llvm.lifetime.end(i64 88, i8* %161) #1, !dbg !6038
  %162 = load %struct._object*, %struct._object** %retval, !dbg !6038
  ret %struct._object* %162, !dbg !6038
}

declare %struct._object* @PyUnicode_New(i64, i32) #3

declare %struct._object* @_PyObject_CallMethod_SizeT(%struct._object*, i8*, i8*, ...) #3

declare %struct._object* @PyUnicode_Splitlines(%struct._object*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @mbstreamwriter_dealloc(%struct.MultibyteStreamWriterObject* %self) #0 {
entry:
  %self.addr = alloca %struct.MultibyteStreamWriterObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  store %struct.MultibyteStreamWriterObject* %self, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamWriterObject** %self.addr, metadata !1155, metadata !1451), !dbg !6039
  %0 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6040, !tbaa !1464
  %1 = bitcast %struct.MultibyteStreamWriterObject* %0 to i8*, !dbg !6040
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !6041
  br label %do.body, !dbg !6042

do.body:                                          ; preds = %entry
  %2 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6043, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %2, i32 0, i32 3, !dbg !6045
  %3 = load %struct._object*, %struct._object** %errors, align 8, !dbg !6045, !tbaa !6046
  %cmp = icmp ne %struct._object* %3, null, !dbg !6048
  br i1 %cmp, label %land.lhs.true, label %if.end.9, !dbg !6049

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6050, !tbaa !1464
  %errors1 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %4, i32 0, i32 3, !dbg !6052
  %5 = load %struct._object*, %struct._object** %errors1, align 8, !dbg !6052, !tbaa !6046
  %cmp2 = icmp ult %struct._object* %5, inttoptr (i64 1 to %struct._object*), !dbg !6053
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !6054

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6055, !tbaa !1464
  %errors3 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %6, i32 0, i32 3, !dbg !6057
  %7 = load %struct._object*, %struct._object** %errors3, align 8, !dbg !6057, !tbaa !6046
  %cmp4 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %7, !dbg !6058
  br i1 %cmp4, label %if.then, label %if.end.9, !dbg !6059

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %do.body.5, !dbg !6060

do.body.5:                                        ; preds = %if.then
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6063
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !6063
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1156, metadata !1451), !dbg !6065
  %9 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6066, !tbaa !1464
  %errors6 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %9, i32 0, i32 3, !dbg !6067
  %10 = load %struct._object*, %struct._object** %errors6, align 8, !dbg !6067, !tbaa !6046
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !6065, !tbaa !1464
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6068, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !6070
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !6071, !tbaa !1498
  %dec = add i64 %12, -1, !dbg !6071
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6071, !tbaa !1498
  %cmp7 = icmp ne i64 %dec, 0, !dbg !6072
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !6073

if.then.8:                                        ; preds = %do.body.5
  br label %if.end, !dbg !6074

if.else:                                          ; preds = %do.body.5
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6076, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !6078
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6078, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !6079
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6079, !tbaa !1565
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6080, !tbaa !1464
  call void %15(%struct._object* %16), !dbg !6081
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6082
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !6082
  br label %do.end, !dbg !6084

do.end:                                           ; preds = %if.end
  br label %if.end.9, !dbg !6085

if.end.9:                                         ; preds = %do.end, %lor.lhs.false, %do.body
  br label %do.end.10, !dbg !6087

do.end.10:                                        ; preds = %if.end.9
  br label %do.body.11, !dbg !6091

do.body.11:                                       ; preds = %do.end.10
  %18 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6092
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !6092
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1160, metadata !1451), !dbg !6094
  %19 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6095, !tbaa !1464
  %stream = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %19, i32 0, i32 5, !dbg !6096
  %20 = load %struct._object*, %struct._object** %stream, align 8, !dbg !6096, !tbaa !6097
  store %struct._object* %20, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6094, !tbaa !1464
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6098, !tbaa !1464
  %cmp12 = icmp ne %struct._object* %21, null, !dbg !6099
  br i1 %cmp12, label %if.then.13, label %if.end.25, !dbg !6100

if.then.13:                                       ; preds = %do.body.11
  br label %do.body.14, !dbg !6101

do.body.14:                                       ; preds = %if.then.13
  %22 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !6103
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !6103
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !1162, metadata !1451), !dbg !6105
  %23 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6106, !tbaa !1464
  store %struct._object* %23, %struct._object** %_py_decref_tmp15, align 8, !dbg !6105, !tbaa !1464
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !6107, !tbaa !1464
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !6109
  %25 = load i64, i64* %ob_refcnt16, align 8, !dbg !6110, !tbaa !1498
  %dec17 = add i64 %25, -1, !dbg !6110
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !6110, !tbaa !1498
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !6111
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !6112

if.then.19:                                       ; preds = %do.body.14
  br label %if.end.23, !dbg !6113

if.else.20:                                       ; preds = %do.body.14
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !6115, !tbaa !1464
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !6117
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !6117, !tbaa !1563
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !6118
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8, !dbg !6118, !tbaa !1565
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !6119, !tbaa !1464
  call void %28(%struct._object* %29), !dbg !6120
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  %30 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !6121
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !6121
  br label %do.cond, !dbg !6123

do.cond:                                          ; preds = %if.end.23
  br label %do.end.24, !dbg !6124

do.end.24:                                        ; preds = %do.cond
  br label %if.end.25, !dbg !6126

if.end.25:                                        ; preds = %do.end.24, %do.body.11
  %31 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6128
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !6128
  br label %do.end.27, !dbg !6131

do.end.27:                                        ; preds = %if.end.25
  %32 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6132, !tbaa !1464
  %33 = bitcast %struct.MultibyteStreamWriterObject* %32 to %struct._object*, !dbg !6133
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !6134
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !6134, !tbaa !1563
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 38, !dbg !6135
  %35 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6135, !tbaa !1581
  %36 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6136, !tbaa !1464
  %37 = bitcast %struct.MultibyteStreamWriterObject* %36 to i8*, !dbg !6136
  call void %35(i8* %37), !dbg !6137
  ret void, !dbg !6138
}

; Function Attrs: nounwind uwtable
define internal i32 @mbstreamwriter_traverse(%struct.MultibyteStreamWriterObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.MultibyteStreamWriterObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret13 = alloca i32, align 4
  store %struct.MultibyteStreamWriterObject* %self, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamWriterObject** %self.addr, metadata !1169, metadata !1451), !dbg !6139
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1170, metadata !1451), !dbg !6140
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1171, metadata !1451), !dbg !6141
  %0 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6142, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %0, i32 0, i32 3, !dbg !6143
  %1 = load %struct._object*, %struct._object** %errors, align 8, !dbg !6143, !tbaa !6046
  %cmp = icmp ult %struct._object* %1, inttoptr (i64 1 to %struct._object*), !dbg !6144
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6145

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6146, !tbaa !1464
  %errors1 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %2, i32 0, i32 3, !dbg !6148
  %3 = load %struct._object*, %struct._object** %errors1, align 8, !dbg !6148, !tbaa !6046
  %cmp2 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %3, !dbg !6149
  br i1 %cmp2, label %if.then, label %if.end.9, !dbg !6150

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %do.body, !dbg !6151

do.body:                                          ; preds = %if.then
  %4 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6152, !tbaa !1464
  %errors3 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %4, i32 0, i32 3, !dbg !6154
  %5 = load %struct._object*, %struct._object** %errors3, align 8, !dbg !6154, !tbaa !6046
  %tobool = icmp ne %struct._object* %5, null, !dbg !6155
  br i1 %tobool, label %if.then.4, label %if.end.8, !dbg !6156

if.then.4:                                        ; preds = %do.body
  %6 = bitcast i32* %vret to i8*, !dbg !6157
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !6157
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1172, metadata !1451), !dbg !6159
  %7 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6160, !tbaa !1464
  %8 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6161, !tbaa !1464
  %errors5 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %8, i32 0, i32 3, !dbg !6162
  %9 = load %struct._object*, %struct._object** %errors5, align 8, !dbg !6162, !tbaa !6046
  %10 = load i8*, i8** %arg.addr, align 8, !dbg !6163, !tbaa !1464
  %call = call i32 %7(%struct._object* %9, i8* %10), !dbg !6160
  store i32 %call, i32* %vret, align 4, !dbg !6159, !tbaa !1475
  %11 = load i32, i32* %vret, align 4, !dbg !6164, !tbaa !1475
  %tobool6 = icmp ne i32 %11, 0, !dbg !6164
  br i1 %tobool6, label %if.then.7, label %if.end, !dbg !6166

if.then.7:                                        ; preds = %if.then.4
  %12 = load i32, i32* %vret, align 4, !dbg !6167, !tbaa !1475
  store i32 %12, i32* %retval, !dbg !6169
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6169

if.end:                                           ; preds = %if.then.4
  store i32 0, i32* %cleanup.dest.slot, !dbg !6170
  br label %cleanup, !dbg !6170

cleanup:                                          ; preds = %if.end, %if.then.7
  %13 = bitcast i32* %vret to i8*, !dbg !6172
  call void @llvm.lifetime.end(i64 4, i8* %13) #1, !dbg !6172
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.8, !dbg !6175

if.end.8:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !6176

do.end:                                           ; preds = %if.end.8
  br label %if.end.9, !dbg !6179

if.end.9:                                         ; preds = %do.end, %lor.lhs.false
  br label %do.body.10, !dbg !6181

do.body.10:                                       ; preds = %if.end.9
  %14 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6182, !tbaa !1464
  %stream = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %14, i32 0, i32 5, !dbg !6184
  %15 = load %struct._object*, %struct._object** %stream, align 8, !dbg !6184, !tbaa !6097
  %tobool11 = icmp ne %struct._object* %15, null, !dbg !6185
  br i1 %tobool11, label %if.then.12, label %if.end.22, !dbg !6186

if.then.12:                                       ; preds = %do.body.10
  %16 = bitcast i32* %vret13 to i8*, !dbg !6187
  call void @llvm.lifetime.start(i64 4, i8* %16) #1, !dbg !6187
  call void @llvm.dbg.declare(metadata i32* %vret13, metadata !1177, metadata !1451), !dbg !6189
  %17 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6190, !tbaa !1464
  %18 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6191, !tbaa !1464
  %stream14 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %18, i32 0, i32 5, !dbg !6192
  %19 = load %struct._object*, %struct._object** %stream14, align 8, !dbg !6192, !tbaa !6097
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !6193, !tbaa !1464
  %call15 = call i32 %17(%struct._object* %19, i8* %20), !dbg !6190
  store i32 %call15, i32* %vret13, align 4, !dbg !6189, !tbaa !1475
  %21 = load i32, i32* %vret13, align 4, !dbg !6194, !tbaa !1475
  %tobool16 = icmp ne i32 %21, 0, !dbg !6194
  br i1 %tobool16, label %if.then.17, label %if.end.18, !dbg !6196

if.then.17:                                       ; preds = %if.then.12
  %22 = load i32, i32* %vret13, align 4, !dbg !6197, !tbaa !1475
  store i32 %22, i32* %retval, !dbg !6199
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.19, !dbg !6199

if.end.18:                                        ; preds = %if.then.12
  store i32 0, i32* %cleanup.dest.slot, !dbg !6200
  br label %cleanup.19, !dbg !6200

cleanup.19:                                       ; preds = %if.end.18, %if.then.17
  %23 = bitcast i32* %vret13 to i8*, !dbg !6202
  call void @llvm.lifetime.end(i64 4, i8* %23) #1, !dbg !6202
  %cleanup.dest.20 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.20, label %unreachable [
    i32 0, label %cleanup.cont.21
    i32 1, label %return
  ]

cleanup.cont.21:                                  ; preds = %cleanup.19
  br label %if.end.22, !dbg !6205

if.end.22:                                        ; preds = %cleanup.cont.21, %do.body.10
  br label %do.end.23, !dbg !6206

do.end.23:                                        ; preds = %if.end.22
  store i32 0, i32* %retval, !dbg !6209
  br label %return, !dbg !6209

return:                                           ; preds = %do.end.23, %cleanup.19, %cleanup
  %24 = load i32, i32* %retval, !dbg !6210
  ret i32 %24, !dbg !6210

unreachable:                                      ; preds = %cleanup.19, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @mbstreamwriter_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1234, metadata !1451), !dbg !6211
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1235, metadata !1451), !dbg !6212
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1236, metadata !1451), !dbg !6213
  ret i32 0, !dbg !6214
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbstreamwriter_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %self = alloca %struct.MultibyteStreamWriterObject*, align 8
  %stream = alloca %struct._object*, align 8
  %codec = alloca %struct._object*, align 8
  %errors = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp38 = alloca %struct._object*, align 8
  %_py_xdecref_tmp53 = alloca %struct._object*, align 8
  %_py_decref_tmp57 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1239, metadata !1451), !dbg !6215
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1240, metadata !1451), !dbg !6216
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1241, metadata !1451), !dbg !6217
  %0 = bitcast %struct.MultibyteStreamWriterObject** %self to i8*, !dbg !6218
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6218
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamWriterObject** %self, metadata !1242, metadata !1451), !dbg !6219
  %1 = bitcast %struct._object** %stream to i8*, !dbg !6220
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6220
  call void @llvm.dbg.declare(metadata %struct._object** %stream, metadata !1243, metadata !1451), !dbg !6221
  %2 = bitcast %struct._object** %codec to i8*, !dbg !6220
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6220
  call void @llvm.dbg.declare(metadata %struct._object** %codec, metadata !1244, metadata !1451), !dbg !6222
  store %struct._object* null, %struct._object** %codec, align 8, !dbg !6222, !tbaa !1464
  %3 = bitcast i8** %errors to i8*, !dbg !6223
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !6223
  call void @llvm.dbg.declare(metadata i8** %errors, metadata !1245, metadata !1451), !dbg !6224
  store i8* null, i8** %errors, align 8, !dbg !6224, !tbaa !1464
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6225, !tbaa !1464
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !6227, !tbaa !1464
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %4, %struct._object* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @streamkwarglist, i32 0, i32 0), %struct._object** %stream, i8** %errors), !dbg !6228
  %tobool = icmp ne i32 %call, 0, !dbg !6228
  br i1 %tobool, label %if.end, label %if.then, !dbg !6229

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6230
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6230

if.end:                                           ; preds = %entry
  %6 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6231, !tbaa !1464
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 36, !dbg !6232
  %7 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !6232, !tbaa !1650
  %8 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6233, !tbaa !1464
  %call1 = call %struct._object* %7(%struct._typeobject* %8, i64 0), !dbg !6231
  %9 = bitcast %struct._object* %call1 to %struct.MultibyteStreamWriterObject*, !dbg !6234
  store %struct.MultibyteStreamWriterObject* %9, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6235, !tbaa !1464
  %10 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6236, !tbaa !1464
  %cmp = icmp eq %struct.MultibyteStreamWriterObject* %10, null, !dbg !6238
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !6239

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !6240
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6240

if.end.3:                                         ; preds = %if.end
  %11 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6241, !tbaa !1464
  %12 = bitcast %struct._typeobject* %11 to %struct._object*, !dbg !6242
  %call4 = call %struct._object* @PyObject_GetAttrString(%struct._object* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0)), !dbg !6243
  store %struct._object* %call4, %struct._object** %codec, align 8, !dbg !6244, !tbaa !1464
  %13 = load %struct._object*, %struct._object** %codec, align 8, !dbg !6245, !tbaa !1464
  %cmp5 = icmp eq %struct._object* %13, null, !dbg !6247
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !6248

if.then.6:                                        ; preds = %if.end.3
  br label %errorexit, !dbg !6249

if.end.7:                                         ; preds = %if.end.3
  %14 = load %struct._object*, %struct._object** %codec, align 8, !dbg !6250, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !6252
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6252, !tbaa !1563
  %cmp8 = icmp eq %struct._typeobject* %15, @MultibyteCodec_Type, !dbg !6253
  br i1 %cmp8, label %if.end.10, label %if.then.9, !dbg !6254

if.then.9:                                        ; preds = %if.end.7
  %16 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6255, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i32 0, i32 0)), !dbg !6257
  br label %errorexit, !dbg !6258

if.end.10:                                        ; preds = %if.end.7
  %17 = load %struct._object*, %struct._object** %codec, align 8, !dbg !6259, !tbaa !1464
  %18 = bitcast %struct._object* %17 to %struct.MultibyteCodecObject*, !dbg !6260
  %codec11 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %18, i32 0, i32 1, !dbg !6261
  %19 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec11, align 8, !dbg !6261, !tbaa !1680
  %20 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6262, !tbaa !1464
  %codec12 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %20, i32 0, i32 1, !dbg !6263
  store %struct.MultibyteCodec* %19, %struct.MultibyteCodec** %codec12, align 8, !dbg !6264, !tbaa !6265
  %21 = load %struct._object*, %struct._object** %stream, align 8, !dbg !6266, !tbaa !1464
  %22 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6267, !tbaa !1464
  %stream13 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %22, i32 0, i32 5, !dbg !6268
  store %struct._object* %21, %struct._object** %stream13, align 8, !dbg !6269, !tbaa !6097
  %23 = load %struct._object*, %struct._object** %stream, align 8, !dbg !6270, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !6271
  %24 = load i64, i64* %ob_refcnt, align 8, !dbg !6272, !tbaa !1498
  %inc = add i64 %24, 1, !dbg !6272
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6272, !tbaa !1498
  %25 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6273, !tbaa !1464
  %pending = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %25, i32 0, i32 4, !dbg !6274
  store %struct._object* null, %struct._object** %pending, align 8, !dbg !6275, !tbaa !6276
  %26 = load i8*, i8** %errors, align 8, !dbg !6277, !tbaa !1464
  %call14 = call %struct._object* @internal_error_callback(i8* %26), !dbg !6278
  %27 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6279, !tbaa !1464
  %errors15 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %27, i32 0, i32 3, !dbg !6280
  store %struct._object* %call14, %struct._object** %errors15, align 8, !dbg !6281, !tbaa !6046
  %28 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6282, !tbaa !1464
  %errors16 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %28, i32 0, i32 3, !dbg !6284
  %29 = load %struct._object*, %struct._object** %errors16, align 8, !dbg !6284, !tbaa !6046
  %cmp17 = icmp eq %struct._object* %29, null, !dbg !6285
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !6286

if.then.18:                                       ; preds = %if.end.10
  br label %errorexit, !dbg !6287

if.end.19:                                        ; preds = %if.end.10
  %30 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6288, !tbaa !1464
  %codec20 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %30, i32 0, i32 1, !dbg !6290
  %31 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec20, align 8, !dbg !6290, !tbaa !6265
  %encinit = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %31, i32 0, i32 4, !dbg !6291
  %32 = load i32 (%union.MultibyteCodec_State*, i8*)*, i32 (%union.MultibyteCodec_State*, i8*)** %encinit, align 8, !dbg !6291, !tbaa !1705
  %cmp21 = icmp ne i32 (%union.MultibyteCodec_State*, i8*)* %32, null, !dbg !6292
  br i1 %cmp21, label %land.lhs.true, label %if.end.28, !dbg !6293

land.lhs.true:                                    ; preds = %if.end.19
  %33 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6294, !tbaa !1464
  %codec22 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %33, i32 0, i32 1, !dbg !6295
  %34 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec22, align 8, !dbg !6295, !tbaa !6265
  %encinit23 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %34, i32 0, i32 4, !dbg !6296
  %35 = load i32 (%union.MultibyteCodec_State*, i8*)*, i32 (%union.MultibyteCodec_State*, i8*)** %encinit23, align 8, !dbg !6296, !tbaa !1705
  %36 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6297, !tbaa !1464
  %state = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %36, i32 0, i32 2, !dbg !6298
  %37 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6299, !tbaa !1464
  %codec24 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %37, i32 0, i32 1, !dbg !6300
  %38 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec24, align 8, !dbg !6300, !tbaa !6265
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %38, i32 0, i32 1, !dbg !6301
  %39 = load i8*, i8** %config, align 8, !dbg !6301, !tbaa !1717
  %call25 = call i32 %35(%union.MultibyteCodec_State* %state, i8* %39), !dbg !6294
  %cmp26 = icmp ne i32 %call25, 0, !dbg !6302
  br i1 %cmp26, label %if.then.27, label %if.end.28, !dbg !6303

if.then.27:                                       ; preds = %land.lhs.true
  br label %errorexit, !dbg !6304

if.end.28:                                        ; preds = %land.lhs.true, %if.end.19
  br label %do.body, !dbg !6305

do.body:                                          ; preds = %if.end.28
  %40 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6306
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !6306
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1246, metadata !1451), !dbg !6308
  %41 = load %struct._object*, %struct._object** %codec, align 8, !dbg !6309, !tbaa !1464
  store %struct._object* %41, %struct._object** %_py_decref_tmp, align 8, !dbg !6308, !tbaa !1464
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6310, !tbaa !1464
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !6312
  %43 = load i64, i64* %ob_refcnt29, align 8, !dbg !6313, !tbaa !1498
  %dec = add i64 %43, -1, !dbg !6313
  store i64 %dec, i64* %ob_refcnt29, align 8, !dbg !6313, !tbaa !1498
  %cmp30 = icmp ne i64 %dec, 0, !dbg !6314
  br i1 %cmp30, label %if.then.31, label %if.else, !dbg !6315

if.then.31:                                       ; preds = %do.body
  br label %if.end.33, !dbg !6316

if.else:                                          ; preds = %do.body
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6318, !tbaa !1464
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !6320
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8, !dbg !6320, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4, !dbg !6321
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6321, !tbaa !1565
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6322, !tbaa !1464
  call void %46(%struct._object* %47), !dbg !6323
  br label %if.end.33

if.end.33:                                        ; preds = %if.else, %if.then.31
  %48 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6324
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !6324
  br label %do.cond, !dbg !6326

do.cond:                                          ; preds = %if.end.33
  br label %do.end, !dbg !6327

do.end:                                           ; preds = %do.cond
  %49 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6329, !tbaa !1464
  %50 = bitcast %struct.MultibyteStreamWriterObject* %49 to %struct._object*, !dbg !6330
  store %struct._object* %50, %struct._object** %retval, !dbg !6331
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6331

errorexit:                                        ; preds = %if.then.27, %if.then.18, %if.then.9, %if.then.6
  br label %do.body.34, !dbg !6332

do.body.34:                                       ; preds = %errorexit
  %51 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6333
  call void @llvm.lifetime.start(i64 8, i8* %51) #1, !dbg !6333
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1248, metadata !1451), !dbg !6335
  %52 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self, align 8, !dbg !6336, !tbaa !1464
  %53 = bitcast %struct.MultibyteStreamWriterObject* %52 to %struct._object*, !dbg !6337
  store %struct._object* %53, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6335, !tbaa !1464
  %54 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6338, !tbaa !1464
  %cmp35 = icmp ne %struct._object* %54, null, !dbg !6339
  br i1 %cmp35, label %if.then.36, label %if.end.49, !dbg !6340

if.then.36:                                       ; preds = %do.body.34
  br label %do.body.37, !dbg !6341

do.body.37:                                       ; preds = %if.then.36
  %55 = bitcast %struct._object** %_py_decref_tmp38 to i8*, !dbg !6343
  call void @llvm.lifetime.start(i64 8, i8* %55) #1, !dbg !6343
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp38, metadata !1250, metadata !1451), !dbg !6345
  %56 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6346, !tbaa !1464
  store %struct._object* %56, %struct._object** %_py_decref_tmp38, align 8, !dbg !6345, !tbaa !1464
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !6347, !tbaa !1464
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !6349
  %58 = load i64, i64* %ob_refcnt39, align 8, !dbg !6350, !tbaa !1498
  %dec40 = add i64 %58, -1, !dbg !6350
  store i64 %dec40, i64* %ob_refcnt39, align 8, !dbg !6350, !tbaa !1498
  %cmp41 = icmp ne i64 %dec40, 0, !dbg !6351
  br i1 %cmp41, label %if.then.42, label %if.else.43, !dbg !6352

if.then.42:                                       ; preds = %do.body.37
  br label %if.end.46, !dbg !6353

if.else.43:                                       ; preds = %do.body.37
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !6355, !tbaa !1464
  %ob_type44 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !6357
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type44, align 8, !dbg !6357, !tbaa !1563
  %tp_dealloc45 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !6358
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc45, align 8, !dbg !6358, !tbaa !1565
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !6359, !tbaa !1464
  call void %61(%struct._object* %62), !dbg !6360
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.43, %if.then.42
  %63 = bitcast %struct._object** %_py_decref_tmp38 to i8*, !dbg !6361
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !6361
  br label %do.cond.47, !dbg !6363

do.cond.47:                                       ; preds = %if.end.46
  br label %do.end.48, !dbg !6364

do.end.48:                                        ; preds = %do.cond.47
  br label %if.end.49, !dbg !6366

if.end.49:                                        ; preds = %do.end.48, %do.body.34
  %64 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6368
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !6368
  br label %do.cond.50, !dbg !6371

do.cond.50:                                       ; preds = %if.end.49
  br label %do.end.51, !dbg !6372

do.end.51:                                        ; preds = %do.cond.50
  br label %do.body.52, !dbg !6374

do.body.52:                                       ; preds = %do.end.51
  %65 = bitcast %struct._object** %_py_xdecref_tmp53 to i8*, !dbg !6375
  call void @llvm.lifetime.start(i64 8, i8* %65) #1, !dbg !6375
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp53, metadata !1253, metadata !1451), !dbg !6377
  %66 = load %struct._object*, %struct._object** %codec, align 8, !dbg !6378, !tbaa !1464
  store %struct._object* %66, %struct._object** %_py_xdecref_tmp53, align 8, !dbg !6377, !tbaa !1464
  %67 = load %struct._object*, %struct._object** %_py_xdecref_tmp53, align 8, !dbg !6379, !tbaa !1464
  %cmp54 = icmp ne %struct._object* %67, null, !dbg !6380
  br i1 %cmp54, label %if.then.55, label %if.end.68, !dbg !6381

if.then.55:                                       ; preds = %do.body.52
  br label %do.body.56, !dbg !6382

do.body.56:                                       ; preds = %if.then.55
  %68 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !6384
  call void @llvm.lifetime.start(i64 8, i8* %68) #1, !dbg !6384
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp57, metadata !1255, metadata !1451), !dbg !6386
  %69 = load %struct._object*, %struct._object** %_py_xdecref_tmp53, align 8, !dbg !6387, !tbaa !1464
  store %struct._object* %69, %struct._object** %_py_decref_tmp57, align 8, !dbg !6386, !tbaa !1464
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !6388, !tbaa !1464
  %ob_refcnt58 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 0, !dbg !6390
  %71 = load i64, i64* %ob_refcnt58, align 8, !dbg !6391, !tbaa !1498
  %dec59 = add i64 %71, -1, !dbg !6391
  store i64 %dec59, i64* %ob_refcnt58, align 8, !dbg !6391, !tbaa !1498
  %cmp60 = icmp ne i64 %dec59, 0, !dbg !6392
  br i1 %cmp60, label %if.then.61, label %if.else.62, !dbg !6393

if.then.61:                                       ; preds = %do.body.56
  br label %if.end.65, !dbg !6394

if.else.62:                                       ; preds = %do.body.56
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !6396, !tbaa !1464
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 1, !dbg !6398
  %73 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !6398, !tbaa !1563
  %tp_dealloc64 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %73, i32 0, i32 4, !dbg !6399
  %74 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc64, align 8, !dbg !6399, !tbaa !1565
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !6400, !tbaa !1464
  call void %74(%struct._object* %75), !dbg !6401
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.62, %if.then.61
  %76 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !6402
  call void @llvm.lifetime.end(i64 8, i8* %76) #1, !dbg !6402
  br label %do.cond.66, !dbg !6404

do.cond.66:                                       ; preds = %if.end.65
  br label %do.end.67, !dbg !6405

do.end.67:                                        ; preds = %do.cond.66
  br label %if.end.68, !dbg !6407

if.end.68:                                        ; preds = %do.end.67, %do.body.52
  %77 = bitcast %struct._object** %_py_xdecref_tmp53 to i8*, !dbg !6409
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !6409
  br label %do.cond.69, !dbg !6410

do.cond.69:                                       ; preds = %if.end.68
  br label %do.end.70, !dbg !6411

do.end.70:                                        ; preds = %do.cond.69
  store %struct._object* null, %struct._object** %retval, !dbg !6413
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6413

cleanup:                                          ; preds = %do.end.70, %do.end, %if.then.2, %if.then
  %78 = bitcast i8** %errors to i8*, !dbg !6414
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !6414
  %79 = bitcast %struct._object** %codec to i8*, !dbg !6414
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !6414
  %80 = bitcast %struct._object** %stream to i8*, !dbg !6414
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !6414
  %81 = bitcast %struct.MultibyteStreamWriterObject** %self to i8*, !dbg !6414
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !6414
  %82 = load %struct._object*, %struct._object** %retval, !dbg !6414
  ret %struct._object* %82, !dbg !6414
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbstreamwriter_write(%struct.MultibyteStreamWriterObject* %self, %struct._object* %strobj) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteStreamWriterObject*, align 8
  %strobj.addr = alloca %struct._object*, align 8
  store %struct.MultibyteStreamWriterObject* %self, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamWriterObject** %self.addr, metadata !1185, metadata !1451), !dbg !6415
  store %struct._object* %strobj, %struct._object** %strobj.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %strobj.addr, metadata !1186, metadata !1451), !dbg !6416
  %0 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6417, !tbaa !1464
  %1 = load %struct._object*, %struct._object** %strobj.addr, align 8, !dbg !6419, !tbaa !1464
  %call = call i32 @mbstreamwriter_iwrite(%struct.MultibyteStreamWriterObject* %0, %struct._object* %1), !dbg !6420
  %tobool = icmp ne i32 %call, 0, !dbg !6420
  br i1 %tobool, label %if.then, label %if.else, !dbg !6421

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6422
  br label %return, !dbg !6422

if.else:                                          ; preds = %entry
  %2 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6423, !tbaa !1498
  %inc = add i64 %2, 1, !dbg !6423
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6423, !tbaa !1498
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6424
  br label %return, !dbg !6424

return:                                           ; preds = %if.else, %if.then
  %3 = load %struct._object*, %struct._object** %retval, !dbg !6425
  ret %struct._object* %3, !dbg !6425
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbstreamwriter_writelines(%struct.MultibyteStreamWriterObject* %self, %struct._object* %lines) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteStreamWriterObject*, align 8
  %lines.addr = alloca %struct._object*, align 8
  %strobj = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.MultibyteStreamWriterObject* %self, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamWriterObject** %self.addr, metadata !1201, metadata !1451), !dbg !6426
  store %struct._object* %lines, %struct._object** %lines.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %lines.addr, metadata !1202, metadata !1451), !dbg !6427
  %0 = bitcast %struct._object** %strobj to i8*, !dbg !6428
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6428
  call void @llvm.dbg.declare(metadata %struct._object** %strobj, metadata !1203, metadata !1451), !dbg !6429
  %1 = bitcast i32* %i to i8*, !dbg !6430
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !6430
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1204, metadata !1451), !dbg !6431
  %2 = bitcast i32* %r to i8*, !dbg !6430
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !6430
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1205, metadata !1451), !dbg !6432
  %3 = load %struct._object*, %struct._object** %lines.addr, align 8, !dbg !6433, !tbaa !1464
  %call = call i32 @PySequence_Check(%struct._object* %3), !dbg !6435
  %tobool = icmp ne i32 %call, 0, !dbg !6435
  br i1 %tobool, label %if.end, label %if.then, !dbg !6436

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6437, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43, i32 0, i32 0)), !dbg !6439
  store %struct._object* null, %struct._object** %retval, !dbg !6440
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6440

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6441, !tbaa !1475
  br label %for.cond, !dbg !6442

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !6443, !tbaa !1475
  %conv = sext i32 %5 to i64, !dbg !6443
  %6 = load %struct._object*, %struct._object** %lines.addr, align 8, !dbg !6446, !tbaa !1464
  %call1 = call i64 @PySequence_Size(%struct._object* %6), !dbg !6447
  %cmp = icmp slt i64 %conv, %call1, !dbg !6448
  br i1 %cmp, label %for.body, label %for.end, !dbg !6449

for.body:                                         ; preds = %for.cond
  %7 = load %struct._object*, %struct._object** %lines.addr, align 8, !dbg !6450, !tbaa !1464
  %8 = load i32, i32* %i, align 4, !dbg !6451, !tbaa !1475
  %conv3 = sext i32 %8 to i64, !dbg !6451
  %call4 = call %struct._object* @PySequence_GetItem(%struct._object* %7, i64 %conv3), !dbg !6452
  store %struct._object* %call4, %struct._object** %strobj, align 8, !dbg !6453, !tbaa !1464
  %9 = load %struct._object*, %struct._object** %strobj, align 8, !dbg !6454, !tbaa !1464
  %cmp5 = icmp eq %struct._object* %9, null, !dbg !6456
  br i1 %cmp5, label %if.then.7, label %if.end.8, !dbg !6457

if.then.7:                                        ; preds = %for.body
  store %struct._object* null, %struct._object** %retval, !dbg !6458
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6458

if.end.8:                                         ; preds = %for.body
  %10 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6459, !tbaa !1464
  %11 = load %struct._object*, %struct._object** %strobj, align 8, !dbg !6460, !tbaa !1464
  %call9 = call i32 @mbstreamwriter_iwrite(%struct.MultibyteStreamWriterObject* %10, %struct._object* %11), !dbg !6461
  store i32 %call9, i32* %r, align 4, !dbg !6462, !tbaa !1475
  br label %do.body, !dbg !6463

do.body:                                          ; preds = %if.end.8
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6464
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !6464
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1206, metadata !1451), !dbg !6466
  %13 = load %struct._object*, %struct._object** %strobj, align 8, !dbg !6467, !tbaa !1464
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !6466, !tbaa !1464
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6468, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !6470
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !6471, !tbaa !1498
  %dec = add i64 %15, -1, !dbg !6471
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6471, !tbaa !1498
  %cmp10 = icmp ne i64 %dec, 0, !dbg !6472
  br i1 %cmp10, label %if.then.12, label %if.else, !dbg !6473

if.then.12:                                       ; preds = %do.body
  br label %if.end.13, !dbg !6474

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6476, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !6478
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6478, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !6479
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6479, !tbaa !1565
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6480, !tbaa !1464
  call void %18(%struct._object* %19), !dbg !6481
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6482
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !6482
  br label %do.cond, !dbg !6484

do.cond:                                          ; preds = %if.end.13
  br label %do.end, !dbg !6485

do.end:                                           ; preds = %do.cond
  %21 = load i32, i32* %r, align 4, !dbg !6487, !tbaa !1475
  %cmp14 = icmp eq i32 %21, -1, !dbg !6489
  br i1 %cmp14, label %if.then.16, label %if.end.17, !dbg !6490

if.then.16:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !6491
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6491

if.end.17:                                        ; preds = %do.end
  br label %for.inc, !dbg !6492

for.inc:                                          ; preds = %if.end.17
  %22 = load i32, i32* %i, align 4, !dbg !6493, !tbaa !1475
  %inc = add i32 %22, 1, !dbg !6493
  store i32 %inc, i32* %i, align 4, !dbg !6493, !tbaa !1475
  br label %for.cond, !dbg !6494

for.end:                                          ; preds = %for.cond
  %23 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6495, !tbaa !1498
  %inc18 = add i64 %23, 1, !dbg !6495
  store i64 %inc18, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6495, !tbaa !1498
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6496
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6496

cleanup:                                          ; preds = %for.end, %if.then.16, %if.then.7, %if.then
  %24 = bitcast i32* %r to i8*, !dbg !6497
  call void @llvm.lifetime.end(i64 4, i8* %24) #1, !dbg !6497
  %25 = bitcast i32* %i to i8*, !dbg !6497
  call void @llvm.lifetime.end(i64 4, i8* %25) #1, !dbg !6497
  %26 = bitcast %struct._object** %strobj to i8*, !dbg !6497
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !6497
  %27 = load %struct._object*, %struct._object** %retval, !dbg !6497
  ret %struct._object* %27, !dbg !6497
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @mbstreamwriter_reset(%struct.MultibyteStreamWriterObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteStreamWriterObject*, align 8
  %pwrt = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %wr = alloca %struct._object*, align 8
  %_py_decref_tmp19 = alloca %struct._object*, align 8
  %_py_decref_tmp33 = alloca %struct._object*, align 8
  store %struct.MultibyteStreamWriterObject* %self, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamWriterObject** %self.addr, metadata !1215, metadata !1451), !dbg !6498
  %0 = bitcast %struct._object** %pwrt to i8*, !dbg !6499
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6499
  call void @llvm.dbg.declare(metadata %struct._object** %pwrt, metadata !1216, metadata !1451), !dbg !6500
  %1 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6501, !tbaa !1464
  %codec = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %1, i32 0, i32 1, !dbg !6502
  %2 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !6502, !tbaa !6265
  %3 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6503, !tbaa !1464
  %state = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %3, i32 0, i32 2, !dbg !6504
  %4 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6505, !tbaa !1464
  %pending = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %4, i32 0, i32 4, !dbg !6506
  %5 = load %struct._object*, %struct._object** %pending, align 8, !dbg !6506, !tbaa !6276
  %6 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6507, !tbaa !1464
  %errors = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %6, i32 0, i32 3, !dbg !6508
  %7 = load %struct._object*, %struct._object** %errors, align 8, !dbg !6508, !tbaa !6046
  %call = call %struct._object* @multibytecodec_encode(%struct.MultibyteCodec* %2, %union.MultibyteCodec_State* %state, %struct._object* %5, i64* null, %struct._object* %7, i32 3), !dbg !6509
  store %struct._object* %call, %struct._object** %pwrt, align 8, !dbg !6510, !tbaa !1464
  br label %do.body, !dbg !6511

do.body:                                          ; preds = %entry
  %8 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6512
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !6512
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1217, metadata !1451), !dbg !6514
  %9 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6515, !tbaa !1464
  %pending1 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %9, i32 0, i32 4, !dbg !6516
  %10 = load %struct._object*, %struct._object** %pending1, align 8, !dbg !6516, !tbaa !6276
  store %struct._object* %10, %struct._object** %_py_tmp, align 8, !dbg !6514, !tbaa !1464
  %11 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6517, !tbaa !1464
  %cmp = icmp ne %struct._object* %11, null, !dbg !6518
  br i1 %cmp, label %if.then, label %if.end.6, !dbg !6519

if.then:                                          ; preds = %do.body
  %12 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6520, !tbaa !1464
  %pending2 = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %12, i32 0, i32 4, !dbg !6522
  store %struct._object* null, %struct._object** %pending2, align 8, !dbg !6523, !tbaa !6276
  br label %do.body.3, !dbg !6524

do.body.3:                                        ; preds = %if.then
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6525
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !6525
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1219, metadata !1451), !dbg !6527
  %14 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6528, !tbaa !1464
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !6527, !tbaa !1464
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6529, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !6531
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !6532, !tbaa !1498
  %dec = add i64 %16, -1, !dbg !6532
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6532, !tbaa !1498
  %cmp4 = icmp ne i64 %dec, 0, !dbg !6533
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !6534

if.then.5:                                        ; preds = %do.body.3
  br label %if.end, !dbg !6535

if.else:                                          ; preds = %do.body.3
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6537, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !6539
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6539, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !6540
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6540, !tbaa !1565
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6541, !tbaa !1464
  call void %19(%struct._object* %20), !dbg !6542
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.5
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6543
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !6543
  br label %do.cond, !dbg !6545

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !6546

do.end:                                           ; preds = %do.cond
  br label %if.end.6, !dbg !6548

if.end.6:                                         ; preds = %do.end, %do.body
  %22 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6550
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !6550
  br label %do.cond.7, !dbg !6553

do.cond.7:                                        ; preds = %if.end.6
  br label %do.end.8, !dbg !6554

do.end.8:                                         ; preds = %do.cond.7
  %23 = load %struct._object*, %struct._object** %pwrt, align 8, !dbg !6556, !tbaa !1464
  %cmp9 = icmp eq %struct._object* %23, null, !dbg !6558
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !6559

if.then.10:                                       ; preds = %do.end.8
  store %struct._object* null, %struct._object** %retval, !dbg !6560
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.44, !dbg !6560

if.end.11:                                        ; preds = %do.end.8
  %24 = load %struct._object*, %struct._object** %pwrt, align 8, !dbg !6561, !tbaa !1464
  %call12 = call i64 @PyBytes_Size(%struct._object* %24), !dbg !6562
  %cmp13 = icmp sgt i64 %call12, 0, !dbg !6563
  br i1 %cmp13, label %if.then.14, label %if.end.31, !dbg !6564

if.then.14:                                       ; preds = %if.end.11
  %25 = bitcast %struct._object** %wr to i8*, !dbg !6565
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !6565
  call void @llvm.dbg.declare(metadata %struct._object** %wr, metadata !1223, metadata !1451), !dbg !6566
  %26 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6567, !tbaa !1464
  %stream = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %26, i32 0, i32 5, !dbg !6568
  %27 = load %struct._object*, %struct._object** %stream, align 8, !dbg !6568, !tbaa !6097
  %28 = load %struct._object*, %struct._object** %pwrt, align 8, !dbg !6569, !tbaa !1464
  %call15 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %27, %struct._Py_Identifier* @PyId_write, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i32 0, i32 0), %struct._object* %28), !dbg !6570
  store %struct._object* %call15, %struct._object** %wr, align 8, !dbg !6571, !tbaa !1464
  %29 = load %struct._object*, %struct._object** %wr, align 8, !dbg !6572, !tbaa !1464
  %cmp16 = icmp eq %struct._object* %29, null, !dbg !6573
  br i1 %cmp16, label %if.then.17, label %if.end.30, !dbg !6574

if.then.17:                                       ; preds = %if.then.14
  br label %do.body.18, !dbg !6575

do.body.18:                                       ; preds = %if.then.17
  %30 = bitcast %struct._object** %_py_decref_tmp19 to i8*, !dbg !6576
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !6576
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp19, metadata !1226, metadata !1451), !dbg !6578
  %31 = load %struct._object*, %struct._object** %pwrt, align 8, !dbg !6579, !tbaa !1464
  store %struct._object* %31, %struct._object** %_py_decref_tmp19, align 8, !dbg !6578, !tbaa !1464
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !6580, !tbaa !1464
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !6582
  %33 = load i64, i64* %ob_refcnt20, align 8, !dbg !6583, !tbaa !1498
  %dec21 = add i64 %33, -1, !dbg !6583
  store i64 %dec21, i64* %ob_refcnt20, align 8, !dbg !6583, !tbaa !1498
  %cmp22 = icmp ne i64 %dec21, 0, !dbg !6584
  br i1 %cmp22, label %if.then.23, label %if.else.24, !dbg !6585

if.then.23:                                       ; preds = %do.body.18
  br label %if.end.27, !dbg !6586

if.else.24:                                       ; preds = %do.body.18
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !6588, !tbaa !1464
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !6590
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !6590, !tbaa !1563
  %tp_dealloc26 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !6591
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc26, align 8, !dbg !6591, !tbaa !1565
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !6592, !tbaa !1464
  call void %36(%struct._object* %37), !dbg !6593
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.24, %if.then.23
  %38 = bitcast %struct._object** %_py_decref_tmp19 to i8*, !dbg !6594
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !6594
  br label %do.cond.28, !dbg !6596

do.cond.28:                                       ; preds = %if.end.27
  br label %do.end.29, !dbg !6597

do.end.29:                                        ; preds = %do.cond.28
  store %struct._object* null, %struct._object** %retval, !dbg !6599
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6599

if.end.30:                                        ; preds = %if.then.14
  store i32 0, i32* %cleanup.dest.slot, !dbg !6600
  br label %cleanup, !dbg !6600

cleanup:                                          ; preds = %if.end.30, %do.end.29
  %39 = bitcast %struct._object** %wr to i8*, !dbg !6601
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !6601
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.44 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.31, !dbg !6603

if.end.31:                                        ; preds = %cleanup.cont, %if.end.11
  br label %do.body.32, !dbg !6604

do.body.32:                                       ; preds = %if.end.31
  %40 = bitcast %struct._object** %_py_decref_tmp33 to i8*, !dbg !6605
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !6605
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp33, metadata !1230, metadata !1451), !dbg !6607
  %41 = load %struct._object*, %struct._object** %pwrt, align 8, !dbg !6608, !tbaa !1464
  store %struct._object* %41, %struct._object** %_py_decref_tmp33, align 8, !dbg !6607, !tbaa !1464
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !6609, !tbaa !1464
  %ob_refcnt34 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !6611
  %43 = load i64, i64* %ob_refcnt34, align 8, !dbg !6612, !tbaa !1498
  %dec35 = add i64 %43, -1, !dbg !6612
  store i64 %dec35, i64* %ob_refcnt34, align 8, !dbg !6612, !tbaa !1498
  %cmp36 = icmp ne i64 %dec35, 0, !dbg !6613
  br i1 %cmp36, label %if.then.37, label %if.else.38, !dbg !6614

if.then.37:                                       ; preds = %do.body.32
  br label %if.end.41, !dbg !6615

if.else.38:                                       ; preds = %do.body.32
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !6617, !tbaa !1464
  %ob_type39 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !6619
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type39, align 8, !dbg !6619, !tbaa !1563
  %tp_dealloc40 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4, !dbg !6620
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc40, align 8, !dbg !6620, !tbaa !1565
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !6621, !tbaa !1464
  call void %46(%struct._object* %47), !dbg !6622
  br label %if.end.41

if.end.41:                                        ; preds = %if.else.38, %if.then.37
  %48 = bitcast %struct._object** %_py_decref_tmp33 to i8*, !dbg !6623
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !6623
  br label %do.cond.42, !dbg !6625

do.cond.42:                                       ; preds = %if.end.41
  br label %do.end.43, !dbg !6626

do.end.43:                                        ; preds = %do.cond.42
  %49 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6628, !tbaa !1498
  %inc = add i64 %49, 1, !dbg !6628
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6628, !tbaa !1498
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6629
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.44, !dbg !6629

cleanup.44:                                       ; preds = %do.end.43, %cleanup, %if.then.10
  %50 = bitcast %struct._object** %pwrt to i8*, !dbg !6630
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !6630
  %51 = load %struct._object*, %struct._object** %retval, !dbg !6630
  ret %struct._object* %51, !dbg !6630
}

; Function Attrs: nounwind uwtable
define internal i32 @mbstreamwriter_iwrite(%struct.MultibyteStreamWriterObject* %self, %struct._object* %unistr) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.MultibyteStreamWriterObject*, align 8
  %unistr.addr = alloca %struct._object*, align 8
  %str = alloca %struct._object*, align 8
  %wr = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp9 = alloca %struct._object*, align 8
  store %struct.MultibyteStreamWriterObject* %self, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteStreamWriterObject** %self.addr, metadata !1191, metadata !1451), !dbg !6631
  store %struct._object* %unistr, %struct._object** %unistr.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %unistr.addr, metadata !1192, metadata !1451), !dbg !6632
  %0 = bitcast %struct._object** %str to i8*, !dbg !6633
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6633
  call void @llvm.dbg.declare(metadata %struct._object** %str, metadata !1193, metadata !1451), !dbg !6634
  %1 = bitcast %struct._object** %wr to i8*, !dbg !6633
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6633
  call void @llvm.dbg.declare(metadata %struct._object** %wr, metadata !1194, metadata !1451), !dbg !6635
  %2 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6636, !tbaa !1464
  %3 = bitcast %struct.MultibyteStreamWriterObject* %2 to %struct.MultibyteStatefulEncoderContext*, !dbg !6637
  %4 = load %struct._object*, %struct._object** %unistr.addr, align 8, !dbg !6638, !tbaa !1464
  %call = call %struct._object* @encoder_encode_stateful(%struct.MultibyteStatefulEncoderContext* %3, %struct._object* %4, i32 0), !dbg !6639
  store %struct._object* %call, %struct._object** %str, align 8, !dbg !6640, !tbaa !1464
  %5 = load %struct._object*, %struct._object** %str, align 8, !dbg !6641, !tbaa !1464
  %cmp = icmp eq %struct._object* %5, null, !dbg !6643
  br i1 %cmp, label %if.then, label %if.end, !dbg !6644

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !6645
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6645

if.end:                                           ; preds = %entry
  %6 = load %struct.MultibyteStreamWriterObject*, %struct.MultibyteStreamWriterObject** %self.addr, align 8, !dbg !6646, !tbaa !1464
  %stream = getelementptr inbounds %struct.MultibyteStreamWriterObject, %struct.MultibyteStreamWriterObject* %6, i32 0, i32 5, !dbg !6647
  %7 = load %struct._object*, %struct._object** %stream, align 8, !dbg !6647, !tbaa !6097
  %8 = load %struct._object*, %struct._object** %str, align 8, !dbg !6648, !tbaa !1464
  %call1 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %7, %struct._Py_Identifier* @PyId_write, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i32 0, i32 0), %struct._object* %8), !dbg !6649
  store %struct._object* %call1, %struct._object** %wr, align 8, !dbg !6650, !tbaa !1464
  br label %do.body, !dbg !6651

do.body:                                          ; preds = %if.end
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6652
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !6652
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1195, metadata !1451), !dbg !6654
  %10 = load %struct._object*, %struct._object** %str, align 8, !dbg !6655, !tbaa !1464
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !6654, !tbaa !1464
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6656, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !6658
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !6659, !tbaa !1498
  %dec = add i64 %12, -1, !dbg !6659
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6659, !tbaa !1498
  %cmp2 = icmp ne i64 %dec, 0, !dbg !6660
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !6661

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !6662

if.else:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6664, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !6666
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6666, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !6667
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6667, !tbaa !1565
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6668, !tbaa !1464
  call void %15(%struct._object* %16), !dbg !6669
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6670
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !6670
  br label %do.cond, !dbg !6672

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !6673

do.end:                                           ; preds = %do.cond
  %18 = load %struct._object*, %struct._object** %wr, align 8, !dbg !6675, !tbaa !1464
  %cmp5 = icmp eq %struct._object* %18, null, !dbg !6677
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !6678

if.then.6:                                        ; preds = %do.end
  store i32 -1, i32* %retval, !dbg !6679
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6679

if.end.7:                                         ; preds = %do.end
  br label %do.body.8, !dbg !6680

do.body.8:                                        ; preds = %if.end.7
  %19 = bitcast %struct._object** %_py_decref_tmp9 to i8*, !dbg !6681
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !6681
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp9, metadata !1197, metadata !1451), !dbg !6683
  %20 = load %struct._object*, %struct._object** %wr, align 8, !dbg !6684, !tbaa !1464
  store %struct._object* %20, %struct._object** %_py_decref_tmp9, align 8, !dbg !6683, !tbaa !1464
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !6685, !tbaa !1464
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !6687
  %22 = load i64, i64* %ob_refcnt10, align 8, !dbg !6688, !tbaa !1498
  %dec11 = add i64 %22, -1, !dbg !6688
  store i64 %dec11, i64* %ob_refcnt10, align 8, !dbg !6688, !tbaa !1498
  %cmp12 = icmp ne i64 %dec11, 0, !dbg !6689
  br i1 %cmp12, label %if.then.13, label %if.else.14, !dbg !6690

if.then.13:                                       ; preds = %do.body.8
  br label %if.end.17, !dbg !6691

if.else.14:                                       ; preds = %do.body.8
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !6693, !tbaa !1464
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1, !dbg !6695
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8, !dbg !6695, !tbaa !1563
  %tp_dealloc16 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 4, !dbg !6696
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc16, align 8, !dbg !6696, !tbaa !1565
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !6697, !tbaa !1464
  call void %25(%struct._object* %26), !dbg !6698
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.14, %if.then.13
  %27 = bitcast %struct._object** %_py_decref_tmp9 to i8*, !dbg !6699
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !6699
  br label %do.cond.18, !dbg !6700

do.cond.18:                                       ; preds = %if.end.17
  br label %do.end.19, !dbg !6701

do.end.19:                                        ; preds = %do.cond.18
  store i32 0, i32* %retval, !dbg !6703
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6703

cleanup:                                          ; preds = %do.end.19, %if.then.6, %if.then
  %28 = bitcast %struct._object** %wr to i8*, !dbg !6704
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !6704
  %29 = bitcast %struct._object** %str to i8*, !dbg !6704
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !6704
  %30 = load i32, i32* %retval, !dbg !6704
  ret i32 %30, !dbg !6704
}

declare %struct._object* @_PyObject_CallMethodId_SizeT(%struct._object*, %struct._Py_Identifier*, i8*, ...) #3

declare i32 @PySequence_Check(%struct._object*) #3

declare i64 @PySequence_Size(%struct._object*) #3

declare %struct._object* @PySequence_GetItem(%struct._object*, i64) #3

declare i64 @PyBytes_Size(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @multibytecodec_dealloc(%struct.MultibyteCodecObject* %self) #0 {
entry:
  %self.addr = alloca %struct.MultibyteCodecObject*, align 8
  store %struct.MultibyteCodecObject* %self, %struct.MultibyteCodecObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteCodecObject** %self.addr, metadata !1262, metadata !1451), !dbg !6705
  %0 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self.addr, align 8, !dbg !6706, !tbaa !1464
  %1 = bitcast %struct.MultibyteCodecObject* %0 to i8*, !dbg !6706
  call void @PyObject_Free(i8* %1), !dbg !6707
  ret void, !dbg !6708
}

declare void @PyObject_Free(i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @MultibyteCodec_Encode(%struct.MultibyteCodecObject* %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteCodecObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwargs.addr = alloca %struct._object*, align 8
  %state = alloca %union.MultibyteCodec_State, align 8
  %errorcb = alloca %struct._object*, align 8
  %r = alloca %struct._object*, align 8
  %arg = alloca %struct._object*, align 8
  %ucvt = alloca %struct._object*, align 8
  %errors = alloca i8*, align 8
  %datalen = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp28 = alloca %struct._object*, align 8
  %_py_xdecref_tmp47 = alloca %struct._object*, align 8
  %_py_decref_tmp51 = alloca %struct._object*, align 8
  %_py_decref_tmp86 = alloca %struct._object*, align 8
  %_py_xdecref_tmp101 = alloca %struct._object*, align 8
  %_py_decref_tmp105 = alloca %struct._object*, align 8
  %_py_decref_tmp128 = alloca %struct._object*, align 8
  %_py_xdecref_tmp143 = alloca %struct._object*, align 8
  %_py_decref_tmp147 = alloca %struct._object*, align 8
  store %struct.MultibyteCodecObject* %self, %struct.MultibyteCodecObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteCodecObject** %self.addr, metadata !1267, metadata !1451), !dbg !6709
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1268, metadata !1451), !dbg !6710
  store %struct._object* %kwargs, %struct._object** %kwargs.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %kwargs.addr, metadata !1269, metadata !1451), !dbg !6711
  %0 = bitcast %union.MultibyteCodec_State* %state to i8*, !dbg !6712
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6712
  call void @llvm.dbg.declare(metadata %union.MultibyteCodec_State* %state, metadata !1270, metadata !1451), !dbg !6713
  %1 = bitcast %struct._object** %errorcb to i8*, !dbg !6714
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6714
  call void @llvm.dbg.declare(metadata %struct._object** %errorcb, metadata !1271, metadata !1451), !dbg !6715
  %2 = bitcast %struct._object** %r to i8*, !dbg !6714
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6714
  call void @llvm.dbg.declare(metadata %struct._object** %r, metadata !1272, metadata !1451), !dbg !6716
  %3 = bitcast %struct._object** %arg to i8*, !dbg !6714
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !6714
  call void @llvm.dbg.declare(metadata %struct._object** %arg, metadata !1273, metadata !1451), !dbg !6717
  %4 = bitcast %struct._object** %ucvt to i8*, !dbg !6714
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !6714
  call void @llvm.dbg.declare(metadata %struct._object** %ucvt, metadata !1274, metadata !1451), !dbg !6718
  %5 = bitcast i8** %errors to i8*, !dbg !6719
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !6719
  call void @llvm.dbg.declare(metadata i8** %errors, metadata !1275, metadata !1451), !dbg !6720
  store i8* null, i8** %errors, align 8, !dbg !6720, !tbaa !1464
  %6 = bitcast i64* %datalen to i8*, !dbg !6721
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !6721
  call void @llvm.dbg.declare(metadata i64* %datalen, metadata !1276, metadata !1451), !dbg !6722
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6723, !tbaa !1464
  %8 = load %struct._object*, %struct._object** %kwargs.addr, align 8, !dbg !6725, !tbaa !1464
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %7, %struct._object* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @codeckwarglist, i32 0, i32 0), %struct._object** %arg, i8** %errors), !dbg !6726
  %tobool = icmp ne i32 %call, 0, !dbg !6726
  br i1 %tobool, label %if.end, label %if.then, !dbg !6727

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6728
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6728

if.end:                                           ; preds = %entry
  %9 = load %struct._object*, %struct._object** %arg, align 8, !dbg !6729, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !6730
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6730, !tbaa !1563
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 19, !dbg !6731
  %11 = load i64, i64* %tp_flags, align 8, !dbg !6731, !tbaa !1947
  %and = and i64 %11, 268435456, !dbg !6732
  %cmp = icmp ne i64 %and, 0, !dbg !6733
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !6734

if.then.1:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %ucvt, align 8, !dbg !6735, !tbaa !1464
  br label %if.end.18, !dbg !6736

if.else:                                          ; preds = %if.end
  %12 = load %struct._object*, %struct._object** %arg, align 8, !dbg !6737, !tbaa !1464
  %call2 = call %struct._object* @PyObject_Str(%struct._object* %12), !dbg !6738
  store %struct._object* %call2, %struct._object** %ucvt, align 8, !dbg !6739, !tbaa !1464
  store %struct._object* %call2, %struct._object** %arg, align 8, !dbg !6740, !tbaa !1464
  %13 = load %struct._object*, %struct._object** %arg, align 8, !dbg !6741, !tbaa !1464
  %cmp3 = icmp eq %struct._object* %13, null, !dbg !6742
  br i1 %cmp3, label %if.then.4, label %if.else.5, !dbg !6743

if.then.4:                                        ; preds = %if.else
  store %struct._object* null, %struct._object** %retval, !dbg !6744
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6744

if.else.5:                                        ; preds = %if.else
  %14 = load %struct._object*, %struct._object** %arg, align 8, !dbg !6745, !tbaa !1464
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !6746
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !6746, !tbaa !1563
  %tp_flags7 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 19, !dbg !6747
  %16 = load i64, i64* %tp_flags7, align 8, !dbg !6747, !tbaa !1947
  %and8 = and i64 %16, 268435456, !dbg !6748
  %cmp9 = icmp ne i64 %and8, 0, !dbg !6749
  br i1 %cmp9, label %if.end.16, label %if.then.10, !dbg !6750

if.then.10:                                       ; preds = %if.else.5
  %17 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6751, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i32 0, i32 0)), !dbg !6752
  br label %do.body, !dbg !6753

do.body:                                          ; preds = %if.then.10
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6754
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !6754
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1277, metadata !1451), !dbg !6756
  %19 = load %struct._object*, %struct._object** %ucvt, align 8, !dbg !6757, !tbaa !1464
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8, !dbg !6756, !tbaa !1464
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6758, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !6760
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !6761, !tbaa !1498
  %dec = add i64 %21, -1, !dbg !6761
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6761, !tbaa !1498
  %cmp11 = icmp ne i64 %dec, 0, !dbg !6762
  br i1 %cmp11, label %if.then.12, label %if.else.13, !dbg !6763

if.then.12:                                       ; preds = %do.body
  br label %if.end.15, !dbg !6764

if.else.13:                                       ; preds = %do.body
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6766, !tbaa !1464
  %ob_type14 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !6768
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type14, align 8, !dbg !6768, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !6769
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6769, !tbaa !1565
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6770, !tbaa !1464
  call void %24(%struct._object* %25), !dbg !6771
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.13, %if.then.12
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6772
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !6772
  br label %do.cond, !dbg !6774

do.cond:                                          ; preds = %if.end.15
  br label %do.end, !dbg !6775

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !6777
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6777

if.end.16:                                        ; preds = %if.else.5
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.16
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.then.1
  %27 = load %struct._object*, %struct._object** %arg, align 8, !dbg !6778, !tbaa !1464
  %28 = bitcast %struct._object* %27 to %struct.PyASCIIObject*, !dbg !6779
  %state19 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %28, i32 0, i32 3, !dbg !6780
  %29 = bitcast %struct.anon* %state19 to i32*, !dbg !6781
  %bf.load = load i32, i32* %29, align 4, !dbg !6781
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !6781
  %bf.clear = and i32 %bf.lshr, 1, !dbg !6781
  %tobool20 = icmp ne i32 %bf.clear, 0, !dbg !6782
  br i1 %tobool20, label %cond.true, label %cond.false, !dbg !6782

cond.true:                                        ; preds = %if.end.18
  br label %cond.end, !dbg !6783

cond.false:                                       ; preds = %if.end.18
  %30 = load %struct._object*, %struct._object** %arg, align 8, !dbg !6785, !tbaa !1464
  %call21 = call i32 @_PyUnicode_Ready(%struct._object* %30), !dbg !6787
  br label %cond.end, !dbg !6782

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call21, %cond.false ], !dbg !6782
  %cmp22 = icmp slt i32 %cond, 0, !dbg !6788
  br i1 %cmp22, label %if.then.23, label %if.end.42, !dbg !6791

if.then.23:                                       ; preds = %cond.end
  br label %do.body.24, !dbg !6792

do.body.24:                                       ; preds = %if.then.23
  %31 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6793
  call void @llvm.lifetime.start(i64 8, i8* %31) #1, !dbg !6793
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1284, metadata !1451), !dbg !6795
  %32 = load %struct._object*, %struct._object** %ucvt, align 8, !dbg !6796, !tbaa !1464
  store %struct._object* %32, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6795, !tbaa !1464
  %33 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6797, !tbaa !1464
  %cmp25 = icmp ne %struct._object* %33, null, !dbg !6798
  br i1 %cmp25, label %if.then.26, label %if.end.39, !dbg !6799

if.then.26:                                       ; preds = %do.body.24
  br label %do.body.27, !dbg !6800

do.body.27:                                       ; preds = %if.then.26
  %34 = bitcast %struct._object** %_py_decref_tmp28 to i8*, !dbg !6802
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !6802
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp28, metadata !1288, metadata !1451), !dbg !6804
  %35 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !6805, !tbaa !1464
  store %struct._object* %35, %struct._object** %_py_decref_tmp28, align 8, !dbg !6804, !tbaa !1464
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !6806, !tbaa !1464
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !6808
  %37 = load i64, i64* %ob_refcnt29, align 8, !dbg !6809, !tbaa !1498
  %dec30 = add i64 %37, -1, !dbg !6809
  store i64 %dec30, i64* %ob_refcnt29, align 8, !dbg !6809, !tbaa !1498
  %cmp31 = icmp ne i64 %dec30, 0, !dbg !6810
  br i1 %cmp31, label %if.then.32, label %if.else.33, !dbg !6811

if.then.32:                                       ; preds = %do.body.27
  br label %if.end.36, !dbg !6812

if.else.33:                                       ; preds = %do.body.27
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !6814, !tbaa !1464
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !6816
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !6816, !tbaa !1563
  %tp_dealloc35 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !6817
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc35, align 8, !dbg !6817, !tbaa !1565
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !6818, !tbaa !1464
  call void %40(%struct._object* %41), !dbg !6819
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.33, %if.then.32
  %42 = bitcast %struct._object** %_py_decref_tmp28 to i8*, !dbg !6820
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !6820
  br label %do.cond.37, !dbg !6822

do.cond.37:                                       ; preds = %if.end.36
  br label %do.end.38, !dbg !6823

do.end.38:                                        ; preds = %do.cond.37
  br label %if.end.39, !dbg !6825

if.end.39:                                        ; preds = %do.end.38, %do.body.24
  %43 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6827
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !6827
  br label %do.cond.40, !dbg !6830

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !6831

do.end.41:                                        ; preds = %do.cond.40
  store %struct._object* null, %struct._object** %retval, !dbg !6833
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6833

if.end.42:                                        ; preds = %cond.end
  %44 = load %struct._object*, %struct._object** %arg, align 8, !dbg !6834, !tbaa !1464
  %45 = bitcast %struct._object* %44 to %struct.PyASCIIObject*, !dbg !6835
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %45, i32 0, i32 1, !dbg !6836
  %46 = load i64, i64* %length, align 8, !dbg !6836, !tbaa !2098
  store i64 %46, i64* %datalen, align 8, !dbg !6837, !tbaa !1876
  %47 = load i8*, i8** %errors, align 8, !dbg !6838, !tbaa !1464
  %call43 = call %struct._object* @internal_error_callback(i8* %47), !dbg !6839
  store %struct._object* %call43, %struct._object** %errorcb, align 8, !dbg !6840, !tbaa !1464
  %48 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !6841, !tbaa !1464
  %cmp44 = icmp eq %struct._object* %48, null, !dbg !6842
  br i1 %cmp44, label %if.then.45, label %if.end.65, !dbg !6843

if.then.45:                                       ; preds = %if.end.42
  br label %do.body.46, !dbg !6844

do.body.46:                                       ; preds = %if.then.45
  %49 = bitcast %struct._object** %_py_xdecref_tmp47 to i8*, !dbg !6845
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !6845
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp47, metadata !1291, metadata !1451), !dbg !6847
  %50 = load %struct._object*, %struct._object** %ucvt, align 8, !dbg !6848, !tbaa !1464
  store %struct._object* %50, %struct._object** %_py_xdecref_tmp47, align 8, !dbg !6847, !tbaa !1464
  %51 = load %struct._object*, %struct._object** %_py_xdecref_tmp47, align 8, !dbg !6849, !tbaa !1464
  %cmp48 = icmp ne %struct._object* %51, null, !dbg !6850
  br i1 %cmp48, label %if.then.49, label %if.end.62, !dbg !6851

if.then.49:                                       ; preds = %do.body.46
  br label %do.body.50, !dbg !6852

do.body.50:                                       ; preds = %if.then.49
  %52 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !6854
  call void @llvm.lifetime.start(i64 8, i8* %52) #1, !dbg !6854
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp51, metadata !1295, metadata !1451), !dbg !6856
  %53 = load %struct._object*, %struct._object** %_py_xdecref_tmp47, align 8, !dbg !6857, !tbaa !1464
  store %struct._object* %53, %struct._object** %_py_decref_tmp51, align 8, !dbg !6856, !tbaa !1464
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !6858, !tbaa !1464
  %ob_refcnt52 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !6860
  %55 = load i64, i64* %ob_refcnt52, align 8, !dbg !6861, !tbaa !1498
  %dec53 = add i64 %55, -1, !dbg !6861
  store i64 %dec53, i64* %ob_refcnt52, align 8, !dbg !6861, !tbaa !1498
  %cmp54 = icmp ne i64 %dec53, 0, !dbg !6862
  br i1 %cmp54, label %if.then.55, label %if.else.56, !dbg !6863

if.then.55:                                       ; preds = %do.body.50
  br label %if.end.59, !dbg !6864

if.else.56:                                       ; preds = %do.body.50
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !6866, !tbaa !1464
  %ob_type57 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 1, !dbg !6868
  %57 = load %struct._typeobject*, %struct._typeobject** %ob_type57, align 8, !dbg !6868, !tbaa !1563
  %tp_dealloc58 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %57, i32 0, i32 4, !dbg !6869
  %58 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc58, align 8, !dbg !6869, !tbaa !1565
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !6870, !tbaa !1464
  call void %58(%struct._object* %59), !dbg !6871
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.56, %if.then.55
  %60 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !6872
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !6872
  br label %do.cond.60, !dbg !6874

do.cond.60:                                       ; preds = %if.end.59
  br label %do.end.61, !dbg !6875

do.end.61:                                        ; preds = %do.cond.60
  br label %if.end.62, !dbg !6877

if.end.62:                                        ; preds = %do.end.61, %do.body.46
  %61 = bitcast %struct._object** %_py_xdecref_tmp47 to i8*, !dbg !6879
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !6879
  br label %do.cond.63, !dbg !6882

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !6883

do.end.64:                                        ; preds = %do.cond.63
  store %struct._object* null, %struct._object** %retval, !dbg !6885
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6885

if.end.65:                                        ; preds = %if.end.42
  %62 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self.addr, align 8, !dbg !6886, !tbaa !1464
  %codec = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %62, i32 0, i32 1, !dbg !6888
  %63 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !6888, !tbaa !1680
  %encinit = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %63, i32 0, i32 4, !dbg !6889
  %64 = load i32 (%union.MultibyteCodec_State*, i8*)*, i32 (%union.MultibyteCodec_State*, i8*)** %encinit, align 8, !dbg !6889, !tbaa !1705
  %cmp66 = icmp ne i32 (%union.MultibyteCodec_State*, i8*)* %64, null, !dbg !6890
  br i1 %cmp66, label %land.lhs.true, label %if.end.73, !dbg !6891

land.lhs.true:                                    ; preds = %if.end.65
  %65 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self.addr, align 8, !dbg !6892, !tbaa !1464
  %codec67 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %65, i32 0, i32 1, !dbg !6893
  %66 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec67, align 8, !dbg !6893, !tbaa !1680
  %encinit68 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %66, i32 0, i32 4, !dbg !6894
  %67 = load i32 (%union.MultibyteCodec_State*, i8*)*, i32 (%union.MultibyteCodec_State*, i8*)** %encinit68, align 8, !dbg !6894, !tbaa !1705
  %68 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self.addr, align 8, !dbg !6895, !tbaa !1464
  %codec69 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %68, i32 0, i32 1, !dbg !6896
  %69 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec69, align 8, !dbg !6896, !tbaa !1680
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %69, i32 0, i32 1, !dbg !6897
  %70 = load i8*, i8** %config, align 8, !dbg !6897, !tbaa !1717
  %call70 = call i32 %67(%union.MultibyteCodec_State* %state, i8* %70), !dbg !6892
  %cmp71 = icmp ne i32 %call70, 0, !dbg !6898
  br i1 %cmp71, label %if.then.72, label %if.end.73, !dbg !6899

if.then.72:                                       ; preds = %land.lhs.true
  br label %errorexit, !dbg !6900

if.end.73:                                        ; preds = %land.lhs.true, %if.end.65
  %71 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self.addr, align 8, !dbg !6901, !tbaa !1464
  %codec74 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %71, i32 0, i32 1, !dbg !6902
  %72 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec74, align 8, !dbg !6902, !tbaa !1680
  %73 = load %struct._object*, %struct._object** %arg, align 8, !dbg !6903, !tbaa !1464
  %74 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !6904, !tbaa !1464
  %call75 = call %struct._object* @multibytecodec_encode(%struct.MultibyteCodec* %72, %union.MultibyteCodec_State* %state, %struct._object* %73, i64* null, %struct._object* %74, i32 3), !dbg !6905
  store %struct._object* %call75, %struct._object** %r, align 8, !dbg !6906, !tbaa !1464
  %75 = load %struct._object*, %struct._object** %r, align 8, !dbg !6907, !tbaa !1464
  %cmp76 = icmp eq %struct._object* %75, null, !dbg !6909
  br i1 %cmp76, label %if.then.77, label %if.end.78, !dbg !6910

if.then.77:                                       ; preds = %if.end.73
  br label %errorexit, !dbg !6911

if.end.78:                                        ; preds = %if.end.73
  br label %do.body.79, !dbg !6912

do.body.79:                                       ; preds = %if.end.78
  %76 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !6913, !tbaa !1464
  %cmp80 = icmp ne %struct._object* %76, null, !dbg !6915
  br i1 %cmp80, label %land.lhs.true.81, label %if.end.97, !dbg !6916

land.lhs.true.81:                                 ; preds = %do.body.79
  %77 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !6917, !tbaa !1464
  %cmp82 = icmp ult %struct._object* %77, inttoptr (i64 1 to %struct._object*), !dbg !6919
  br i1 %cmp82, label %if.then.84, label %lor.lhs.false, !dbg !6920

lor.lhs.false:                                    ; preds = %land.lhs.true.81
  %78 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !6921, !tbaa !1464
  %cmp83 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %78, !dbg !6923
  br i1 %cmp83, label %if.then.84, label %if.end.97, !dbg !6924

if.then.84:                                       ; preds = %lor.lhs.false, %land.lhs.true.81
  br label %do.body.85, !dbg !6925

do.body.85:                                       ; preds = %if.then.84
  %79 = bitcast %struct._object** %_py_decref_tmp86 to i8*, !dbg !6928
  call void @llvm.lifetime.start(i64 8, i8* %79) #1, !dbg !6928
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp86, metadata !1298, metadata !1451), !dbg !6930
  %80 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !6931, !tbaa !1464
  store %struct._object* %80, %struct._object** %_py_decref_tmp86, align 8, !dbg !6930, !tbaa !1464
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8, !dbg !6932, !tbaa !1464
  %ob_refcnt87 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 0, !dbg !6934
  %82 = load i64, i64* %ob_refcnt87, align 8, !dbg !6935, !tbaa !1498
  %dec88 = add i64 %82, -1, !dbg !6935
  store i64 %dec88, i64* %ob_refcnt87, align 8, !dbg !6935, !tbaa !1498
  %cmp89 = icmp ne i64 %dec88, 0, !dbg !6936
  br i1 %cmp89, label %if.then.90, label %if.else.91, !dbg !6937

if.then.90:                                       ; preds = %do.body.85
  br label %if.end.94, !dbg !6938

if.else.91:                                       ; preds = %do.body.85
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8, !dbg !6940, !tbaa !1464
  %ob_type92 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 1, !dbg !6942
  %84 = load %struct._typeobject*, %struct._typeobject** %ob_type92, align 8, !dbg !6942, !tbaa !1563
  %tp_dealloc93 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %84, i32 0, i32 4, !dbg !6943
  %85 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc93, align 8, !dbg !6943, !tbaa !1565
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp86, align 8, !dbg !6944, !tbaa !1464
  call void %85(%struct._object* %86), !dbg !6945
  br label %if.end.94

if.end.94:                                        ; preds = %if.else.91, %if.then.90
  %87 = bitcast %struct._object** %_py_decref_tmp86 to i8*, !dbg !6946
  call void @llvm.lifetime.end(i64 8, i8* %87) #1, !dbg !6946
  br label %do.cond.95, !dbg !6948

do.cond.95:                                       ; preds = %if.end.94
  br label %do.end.96, !dbg !6949

do.end.96:                                        ; preds = %do.cond.95
  br label %if.end.97, !dbg !6951

if.end.97:                                        ; preds = %do.end.96, %lor.lhs.false, %do.body.79
  br label %do.cond.98, !dbg !6953

do.cond.98:                                       ; preds = %if.end.97
  br label %do.end.99, !dbg !6957

do.end.99:                                        ; preds = %do.cond.98
  br label %do.body.100, !dbg !6959

do.body.100:                                      ; preds = %do.end.99
  %88 = bitcast %struct._object** %_py_xdecref_tmp101 to i8*, !dbg !6960
  call void @llvm.lifetime.start(i64 8, i8* %88) #1, !dbg !6960
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp101, metadata !1302, metadata !1451), !dbg !6962
  %89 = load %struct._object*, %struct._object** %ucvt, align 8, !dbg !6963, !tbaa !1464
  store %struct._object* %89, %struct._object** %_py_xdecref_tmp101, align 8, !dbg !6962, !tbaa !1464
  %90 = load %struct._object*, %struct._object** %_py_xdecref_tmp101, align 8, !dbg !6964, !tbaa !1464
  %cmp102 = icmp ne %struct._object* %90, null, !dbg !6965
  br i1 %cmp102, label %if.then.103, label %if.end.116, !dbg !6966

if.then.103:                                      ; preds = %do.body.100
  br label %do.body.104, !dbg !6967

do.body.104:                                      ; preds = %if.then.103
  %91 = bitcast %struct._object** %_py_decref_tmp105 to i8*, !dbg !6969
  call void @llvm.lifetime.start(i64 8, i8* %91) #1, !dbg !6969
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp105, metadata !1304, metadata !1451), !dbg !6971
  %92 = load %struct._object*, %struct._object** %_py_xdecref_tmp101, align 8, !dbg !6972, !tbaa !1464
  store %struct._object* %92, %struct._object** %_py_decref_tmp105, align 8, !dbg !6971, !tbaa !1464
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !6973, !tbaa !1464
  %ob_refcnt106 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0, !dbg !6975
  %94 = load i64, i64* %ob_refcnt106, align 8, !dbg !6976, !tbaa !1498
  %dec107 = add i64 %94, -1, !dbg !6976
  store i64 %dec107, i64* %ob_refcnt106, align 8, !dbg !6976, !tbaa !1498
  %cmp108 = icmp ne i64 %dec107, 0, !dbg !6977
  br i1 %cmp108, label %if.then.109, label %if.else.110, !dbg !6978

if.then.109:                                      ; preds = %do.body.104
  br label %if.end.113, !dbg !6979

if.else.110:                                      ; preds = %do.body.104
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !6981, !tbaa !1464
  %ob_type111 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 1, !dbg !6983
  %96 = load %struct._typeobject*, %struct._typeobject** %ob_type111, align 8, !dbg !6983, !tbaa !1563
  %tp_dealloc112 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %96, i32 0, i32 4, !dbg !6984
  %97 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc112, align 8, !dbg !6984, !tbaa !1565
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !6985, !tbaa !1464
  call void %97(%struct._object* %98), !dbg !6986
  br label %if.end.113

if.end.113:                                       ; preds = %if.else.110, %if.then.109
  %99 = bitcast %struct._object** %_py_decref_tmp105 to i8*, !dbg !6987
  call void @llvm.lifetime.end(i64 8, i8* %99) #1, !dbg !6987
  br label %do.cond.114, !dbg !6989

do.cond.114:                                      ; preds = %if.end.113
  br label %do.end.115, !dbg !6990

do.end.115:                                       ; preds = %do.cond.114
  br label %if.end.116, !dbg !6992

if.end.116:                                       ; preds = %do.end.115, %do.body.100
  %100 = bitcast %struct._object** %_py_xdecref_tmp101 to i8*, !dbg !6994
  call void @llvm.lifetime.end(i64 8, i8* %100) #1, !dbg !6994
  br label %do.cond.117, !dbg !6997

do.cond.117:                                      ; preds = %if.end.116
  br label %do.end.118, !dbg !6998

do.end.118:                                       ; preds = %do.cond.117
  %101 = load %struct._object*, %struct._object** %r, align 8, !dbg !7000, !tbaa !1464
  %102 = load i64, i64* %datalen, align 8, !dbg !7001, !tbaa !1876
  %call119 = call %struct._object* @make_tuple(%struct._object* %101, i64 %102), !dbg !7002
  store %struct._object* %call119, %struct._object** %retval, !dbg !7003
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7003

errorexit:                                        ; preds = %if.then.77, %if.then.72
  br label %do.body.120, !dbg !7004

do.body.120:                                      ; preds = %errorexit
  %103 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7005, !tbaa !1464
  %cmp121 = icmp ne %struct._object* %103, null, !dbg !7007
  br i1 %cmp121, label %land.lhs.true.122, label %if.end.139, !dbg !7008

land.lhs.true.122:                                ; preds = %do.body.120
  %104 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7009, !tbaa !1464
  %cmp123 = icmp ult %struct._object* %104, inttoptr (i64 1 to %struct._object*), !dbg !7011
  br i1 %cmp123, label %if.then.126, label %lor.lhs.false.124, !dbg !7012

lor.lhs.false.124:                                ; preds = %land.lhs.true.122
  %105 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7013, !tbaa !1464
  %cmp125 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %105, !dbg !7015
  br i1 %cmp125, label %if.then.126, label %if.end.139, !dbg !7016

if.then.126:                                      ; preds = %lor.lhs.false.124, %land.lhs.true.122
  br label %do.body.127, !dbg !7017

do.body.127:                                      ; preds = %if.then.126
  %106 = bitcast %struct._object** %_py_decref_tmp128 to i8*, !dbg !7020
  call void @llvm.lifetime.start(i64 8, i8* %106) #1, !dbg !7020
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp128, metadata !1307, metadata !1451), !dbg !7022
  %107 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7023, !tbaa !1464
  store %struct._object* %107, %struct._object** %_py_decref_tmp128, align 8, !dbg !7022, !tbaa !1464
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8, !dbg !7024, !tbaa !1464
  %ob_refcnt129 = getelementptr inbounds %struct._object, %struct._object* %108, i32 0, i32 0, !dbg !7026
  %109 = load i64, i64* %ob_refcnt129, align 8, !dbg !7027, !tbaa !1498
  %dec130 = add i64 %109, -1, !dbg !7027
  store i64 %dec130, i64* %ob_refcnt129, align 8, !dbg !7027, !tbaa !1498
  %cmp131 = icmp ne i64 %dec130, 0, !dbg !7028
  br i1 %cmp131, label %if.then.132, label %if.else.133, !dbg !7029

if.then.132:                                      ; preds = %do.body.127
  br label %if.end.136, !dbg !7030

if.else.133:                                      ; preds = %do.body.127
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8, !dbg !7032, !tbaa !1464
  %ob_type134 = getelementptr inbounds %struct._object, %struct._object* %110, i32 0, i32 1, !dbg !7034
  %111 = load %struct._typeobject*, %struct._typeobject** %ob_type134, align 8, !dbg !7034, !tbaa !1563
  %tp_dealloc135 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %111, i32 0, i32 4, !dbg !7035
  %112 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc135, align 8, !dbg !7035, !tbaa !1565
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8, !dbg !7036, !tbaa !1464
  call void %112(%struct._object* %113), !dbg !7037
  br label %if.end.136

if.end.136:                                       ; preds = %if.else.133, %if.then.132
  %114 = bitcast %struct._object** %_py_decref_tmp128 to i8*, !dbg !7038
  call void @llvm.lifetime.end(i64 8, i8* %114) #1, !dbg !7038
  br label %do.cond.137, !dbg !7040

do.cond.137:                                      ; preds = %if.end.136
  br label %do.end.138, !dbg !7041

do.end.138:                                       ; preds = %do.cond.137
  br label %if.end.139, !dbg !7043

if.end.139:                                       ; preds = %do.end.138, %lor.lhs.false.124, %do.body.120
  br label %do.cond.140, !dbg !7045

do.cond.140:                                      ; preds = %if.end.139
  br label %do.end.141, !dbg !7049

do.end.141:                                       ; preds = %do.cond.140
  br label %do.body.142, !dbg !7051

do.body.142:                                      ; preds = %do.end.141
  %115 = bitcast %struct._object** %_py_xdecref_tmp143 to i8*, !dbg !7052
  call void @llvm.lifetime.start(i64 8, i8* %115) #1, !dbg !7052
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp143, metadata !1311, metadata !1451), !dbg !7054
  %116 = load %struct._object*, %struct._object** %ucvt, align 8, !dbg !7055, !tbaa !1464
  store %struct._object* %116, %struct._object** %_py_xdecref_tmp143, align 8, !dbg !7054, !tbaa !1464
  %117 = load %struct._object*, %struct._object** %_py_xdecref_tmp143, align 8, !dbg !7056, !tbaa !1464
  %cmp144 = icmp ne %struct._object* %117, null, !dbg !7057
  br i1 %cmp144, label %if.then.145, label %if.end.158, !dbg !7058

if.then.145:                                      ; preds = %do.body.142
  br label %do.body.146, !dbg !7059

do.body.146:                                      ; preds = %if.then.145
  %118 = bitcast %struct._object** %_py_decref_tmp147 to i8*, !dbg !7061
  call void @llvm.lifetime.start(i64 8, i8* %118) #1, !dbg !7061
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp147, metadata !1313, metadata !1451), !dbg !7063
  %119 = load %struct._object*, %struct._object** %_py_xdecref_tmp143, align 8, !dbg !7064, !tbaa !1464
  store %struct._object* %119, %struct._object** %_py_decref_tmp147, align 8, !dbg !7063, !tbaa !1464
  %120 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !7065, !tbaa !1464
  %ob_refcnt148 = getelementptr inbounds %struct._object, %struct._object* %120, i32 0, i32 0, !dbg !7067
  %121 = load i64, i64* %ob_refcnt148, align 8, !dbg !7068, !tbaa !1498
  %dec149 = add i64 %121, -1, !dbg !7068
  store i64 %dec149, i64* %ob_refcnt148, align 8, !dbg !7068, !tbaa !1498
  %cmp150 = icmp ne i64 %dec149, 0, !dbg !7069
  br i1 %cmp150, label %if.then.151, label %if.else.152, !dbg !7070

if.then.151:                                      ; preds = %do.body.146
  br label %if.end.155, !dbg !7071

if.else.152:                                      ; preds = %do.body.146
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !7073, !tbaa !1464
  %ob_type153 = getelementptr inbounds %struct._object, %struct._object* %122, i32 0, i32 1, !dbg !7075
  %123 = load %struct._typeobject*, %struct._typeobject** %ob_type153, align 8, !dbg !7075, !tbaa !1563
  %tp_dealloc154 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %123, i32 0, i32 4, !dbg !7076
  %124 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc154, align 8, !dbg !7076, !tbaa !1565
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !7077, !tbaa !1464
  call void %124(%struct._object* %125), !dbg !7078
  br label %if.end.155

if.end.155:                                       ; preds = %if.else.152, %if.then.151
  %126 = bitcast %struct._object** %_py_decref_tmp147 to i8*, !dbg !7079
  call void @llvm.lifetime.end(i64 8, i8* %126) #1, !dbg !7079
  br label %do.cond.156, !dbg !7081

do.cond.156:                                      ; preds = %if.end.155
  br label %do.end.157, !dbg !7082

do.end.157:                                       ; preds = %do.cond.156
  br label %if.end.158, !dbg !7084

if.end.158:                                       ; preds = %do.end.157, %do.body.142
  %127 = bitcast %struct._object** %_py_xdecref_tmp143 to i8*, !dbg !7086
  call void @llvm.lifetime.end(i64 8, i8* %127) #1, !dbg !7086
  br label %do.cond.159, !dbg !7087

do.cond.159:                                      ; preds = %if.end.158
  br label %do.end.160, !dbg !7088

do.end.160:                                       ; preds = %do.cond.159
  store %struct._object* null, %struct._object** %retval, !dbg !7090
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7090

cleanup:                                          ; preds = %do.end.160, %do.end.118, %do.end.64, %do.end.41, %do.end, %if.then.4, %if.then
  %128 = bitcast i64* %datalen to i8*, !dbg !7091
  call void @llvm.lifetime.end(i64 8, i8* %128) #1, !dbg !7091
  %129 = bitcast i8** %errors to i8*, !dbg !7091
  call void @llvm.lifetime.end(i64 8, i8* %129) #1, !dbg !7091
  %130 = bitcast %struct._object** %ucvt to i8*, !dbg !7091
  call void @llvm.lifetime.end(i64 8, i8* %130) #1, !dbg !7091
  %131 = bitcast %struct._object** %arg to i8*, !dbg !7091
  call void @llvm.lifetime.end(i64 8, i8* %131) #1, !dbg !7091
  %132 = bitcast %struct._object** %r to i8*, !dbg !7091
  call void @llvm.lifetime.end(i64 8, i8* %132) #1, !dbg !7091
  %133 = bitcast %struct._object** %errorcb to i8*, !dbg !7091
  call void @llvm.lifetime.end(i64 8, i8* %133) #1, !dbg !7091
  %134 = bitcast %union.MultibyteCodec_State* %state to i8*, !dbg !7091
  call void @llvm.lifetime.end(i64 8, i8* %134) #1, !dbg !7091
  %135 = load %struct._object*, %struct._object** %retval, !dbg !7091
  ret %struct._object* %135, !dbg !7091
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @MultibyteCodec_Decode(%struct.MultibyteCodecObject* %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.MultibyteCodecObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwargs.addr = alloca %struct._object*, align 8
  %state = alloca %union.MultibyteCodec_State, align 8
  %buf = alloca %struct.MultibyteDecodeBuffer, align 8
  %errorcb = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %pdata = alloca %struct.bufferinfo, align 8
  %data = alloca i8*, align 8
  %errors = alloca i8*, align 8
  %datalen = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %inleft = alloca i64, align 8
  %r = alloca i64, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp63 = alloca %struct._object*, align 8
  %_py_decref_tmp85 = alloca %struct._object*, align 8
  %_py_decref_tmp108 = alloca %struct._object*, align 8
  %_py_xdecref_tmp123 = alloca %struct._object*, align 8
  %_py_decref_tmp128 = alloca %struct._object*, align 8
  store %struct.MultibyteCodecObject* %self, %struct.MultibyteCodecObject** %self.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct.MultibyteCodecObject** %self.addr, metadata !1332, metadata !1451), !dbg !7092
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1333, metadata !1451), !dbg !7093
  store %struct._object* %kwargs, %struct._object** %kwargs.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %kwargs.addr, metadata !1334, metadata !1451), !dbg !7094
  %0 = bitcast %union.MultibyteCodec_State* %state to i8*, !dbg !7095
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7095
  call void @llvm.dbg.declare(metadata %union.MultibyteCodec_State* %state, metadata !1335, metadata !1451), !dbg !7096
  %1 = bitcast %struct.MultibyteDecodeBuffer* %buf to i8*, !dbg !7097
  call void @llvm.lifetime.start(i64 88, i8* %1) #1, !dbg !7097
  call void @llvm.dbg.declare(metadata %struct.MultibyteDecodeBuffer* %buf, metadata !1336, metadata !1451), !dbg !7098
  %2 = bitcast %struct._object** %errorcb to i8*, !dbg !7099
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7099
  call void @llvm.dbg.declare(metadata %struct._object** %errorcb, metadata !1337, metadata !1451), !dbg !7100
  %3 = bitcast %struct._object** %res to i8*, !dbg !7099
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !7099
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1338, metadata !1451), !dbg !7101
  %4 = bitcast %struct.bufferinfo* %pdata to i8*, !dbg !7102
  call void @llvm.lifetime.start(i64 80, i8* %4) #1, !dbg !7102
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %pdata, metadata !1339, metadata !1451), !dbg !7103
  %5 = bitcast i8** %data to i8*, !dbg !7104
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !7104
  call void @llvm.dbg.declare(metadata i8** %data, metadata !1340, metadata !1451), !dbg !7105
  %6 = bitcast i8** %errors to i8*, !dbg !7104
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !7104
  call void @llvm.dbg.declare(metadata i8** %errors, metadata !1341, metadata !1451), !dbg !7106
  store i8* null, i8** %errors, align 8, !dbg !7106, !tbaa !1464
  %7 = bitcast i64* %datalen to i8*, !dbg !7107
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !7107
  call void @llvm.dbg.declare(metadata i64* %datalen, metadata !1342, metadata !1451), !dbg !7108
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7109, !tbaa !1464
  %9 = load %struct._object*, %struct._object** %kwargs.addr, align 8, !dbg !7111, !tbaa !1464
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %8, %struct._object* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.48, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @codeckwarglist, i32 0, i32 0), %struct.bufferinfo* %pdata, i8** %errors), !dbg !7112
  %tobool = icmp ne i32 %call, 0, !dbg !7112
  br i1 %tobool, label %if.end, label %if.then, !dbg !7113

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7114
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.143, !dbg !7114

if.end:                                           ; preds = %entry
  %buf1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %pdata, i32 0, i32 0, !dbg !7115
  %10 = load i8*, i8** %buf1, align 8, !dbg !7115, !tbaa !4325
  store i8* %10, i8** %data, align 8, !dbg !7116, !tbaa !1464
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %pdata, i32 0, i32 2, !dbg !7117
  %11 = load i64, i64* %len, align 8, !dbg !7117, !tbaa !4329
  store i64 %11, i64* %datalen, align 8, !dbg !7118, !tbaa !1876
  %12 = load i8*, i8** %errors, align 8, !dbg !7119, !tbaa !1464
  %call2 = call %struct._object* @internal_error_callback(i8* %12), !dbg !7120
  store %struct._object* %call2, %struct._object** %errorcb, align 8, !dbg !7121, !tbaa !1464
  %13 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7122, !tbaa !1464
  %cmp = icmp eq %struct._object* %13, null, !dbg !7124
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !7125

if.then.3:                                        ; preds = %if.end
  call void @PyBuffer_Release(%struct.bufferinfo* %pdata), !dbg !7126
  store %struct._object* null, %struct._object** %retval, !dbg !7128
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.143, !dbg !7128

if.end.4:                                         ; preds = %if.end
  %14 = load i64, i64* %datalen, align 8, !dbg !7129, !tbaa !1876
  %cmp5 = icmp eq i64 %14, 0, !dbg !7130
  br i1 %cmp5, label %if.then.6, label %if.end.20, !dbg !7131

if.then.6:                                        ; preds = %if.end.4
  call void @PyBuffer_Release(%struct.bufferinfo* %pdata), !dbg !7132
  br label %do.body, !dbg !7133

do.body:                                          ; preds = %if.then.6
  %15 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7134, !tbaa !1464
  %cmp7 = icmp ne %struct._object* %15, null, !dbg !7136
  br i1 %cmp7, label %land.lhs.true, label %if.end.15, !dbg !7137

land.lhs.true:                                    ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7138, !tbaa !1464
  %cmp8 = icmp ult %struct._object* %16, inttoptr (i64 1 to %struct._object*), !dbg !7140
  br i1 %cmp8, label %if.then.10, label %lor.lhs.false, !dbg !7141

lor.lhs.false:                                    ; preds = %land.lhs.true
  %17 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7142, !tbaa !1464
  %cmp9 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %17, !dbg !7144
  br i1 %cmp9, label %if.then.10, label %if.end.15, !dbg !7145

if.then.10:                                       ; preds = %lor.lhs.false, %land.lhs.true
  br label %do.body.11, !dbg !7146

do.body.11:                                       ; preds = %if.then.10
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7149
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !7149
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1343, metadata !1451), !dbg !7151
  %19 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7152, !tbaa !1464
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8, !dbg !7151, !tbaa !1464
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7153, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !7155
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !7156, !tbaa !1498
  %dec = add i64 %21, -1, !dbg !7156
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7156, !tbaa !1498
  %cmp12 = icmp ne i64 %dec, 0, !dbg !7157
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !7158

if.then.13:                                       ; preds = %do.body.11
  br label %if.end.14, !dbg !7159

if.else:                                          ; preds = %do.body.11
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7161, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !7163
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7163, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !7164
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7164, !tbaa !1565
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7165, !tbaa !1464
  call void %24(%struct._object* %25), !dbg !7166
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7167
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !7167
  br label %do.cond, !dbg !7169

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !7170

do.end:                                           ; preds = %do.cond
  br label %if.end.15, !dbg !7172

if.end.15:                                        ; preds = %do.end, %lor.lhs.false, %do.body
  br label %do.cond.16, !dbg !7174

do.cond.16:                                       ; preds = %if.end.15
  br label %do.end.17, !dbg !7178

do.end.17:                                        ; preds = %do.cond.16
  %call18 = call %struct._object* @PyUnicode_New(i64 0, i32 0), !dbg !7180
  %call19 = call %struct._object* @make_tuple(%struct._object* %call18, i64 0), !dbg !7181
  store %struct._object* %call19, %struct._object** %retval, !dbg !7182
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.143, !dbg !7182

if.end.20:                                        ; preds = %if.end.4
  %writer = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 4, !dbg !7183
  call void @_PyUnicodeWriter_Init(%struct._PyUnicodeWriter* %writer), !dbg !7184
  %27 = load i64, i64* %datalen, align 8, !dbg !7185, !tbaa !1876
  %writer21 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 4, !dbg !7186
  %min_length = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %writer21, i32 0, i32 6, !dbg !7187
  store i64 %27, i64* %min_length, align 8, !dbg !7188, !tbaa !4615
  %excobj = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 3, !dbg !7189
  store %struct._object* null, %struct._object** %excobj, align 8, !dbg !7190, !tbaa !4335
  %28 = load i8*, i8** %data, align 8, !dbg !7191, !tbaa !1464
  %inbuf_top = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 1, !dbg !7192
  store i8* %28, i8** %inbuf_top, align 8, !dbg !7193, !tbaa !4599
  %inbuf = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 0, !dbg !7194
  store i8* %28, i8** %inbuf, align 8, !dbg !7195, !tbaa !4412
  %inbuf_top22 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 1, !dbg !7196
  %29 = load i8*, i8** %inbuf_top22, align 8, !dbg !7196, !tbaa !4599
  %30 = load i64, i64* %datalen, align 8, !dbg !7197, !tbaa !1876
  %add.ptr = getelementptr i8, i8* %29, i64 %30, !dbg !7198
  %inbuf_end = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 2, !dbg !7199
  store i8* %add.ptr, i8** %inbuf_end, align 8, !dbg !7200, !tbaa !4414
  %31 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self.addr, align 8, !dbg !7201, !tbaa !1464
  %codec = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %31, i32 0, i32 1, !dbg !7203
  %32 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !7203, !tbaa !1680
  %decinit = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %32, i32 0, i32 7, !dbg !7204
  %33 = load i32 (%union.MultibyteCodec_State*, i8*)*, i32 (%union.MultibyteCodec_State*, i8*)** %decinit, align 8, !dbg !7204, !tbaa !4176
  %cmp23 = icmp ne i32 (%union.MultibyteCodec_State*, i8*)* %33, null, !dbg !7205
  br i1 %cmp23, label %land.lhs.true.24, label %if.end.31, !dbg !7206

land.lhs.true.24:                                 ; preds = %if.end.20
  %34 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self.addr, align 8, !dbg !7207, !tbaa !1464
  %codec25 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %34, i32 0, i32 1, !dbg !7208
  %35 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec25, align 8, !dbg !7208, !tbaa !1680
  %decinit26 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %35, i32 0, i32 7, !dbg !7209
  %36 = load i32 (%union.MultibyteCodec_State*, i8*)*, i32 (%union.MultibyteCodec_State*, i8*)** %decinit26, align 8, !dbg !7209, !tbaa !4176
  %37 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self.addr, align 8, !dbg !7210, !tbaa !1464
  %codec27 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %37, i32 0, i32 1, !dbg !7211
  %38 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec27, align 8, !dbg !7211, !tbaa !1680
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %38, i32 0, i32 1, !dbg !7212
  %39 = load i8*, i8** %config, align 8, !dbg !7212, !tbaa !1717
  %call28 = call i32 %36(%union.MultibyteCodec_State* %state, i8* %39), !dbg !7207
  %cmp29 = icmp ne i32 %call28, 0, !dbg !7213
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !7214

if.then.30:                                       ; preds = %land.lhs.true.24
  br label %errorexit, !dbg !7215

if.end.31:                                        ; preds = %land.lhs.true.24, %if.end.20
  br label %while.cond, !dbg !7216

while.cond:                                       ; preds = %cleanup.cont, %if.end.31
  %inbuf32 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 0, !dbg !7217
  %40 = load i8*, i8** %inbuf32, align 8, !dbg !7217, !tbaa !4412
  %inbuf_end33 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 2, !dbg !7220
  %41 = load i8*, i8** %inbuf_end33, align 8, !dbg !7220, !tbaa !4414
  %cmp34 = icmp ult i8* %40, %41, !dbg !7221
  br i1 %cmp34, label %while.body, label %while.end, !dbg !7216

while.body:                                       ; preds = %while.cond
  %42 = bitcast i64* %inleft to i8*, !dbg !7222
  call void @llvm.lifetime.start(i64 8, i8* %42) #1, !dbg !7222
  call void @llvm.dbg.declare(metadata i64* %inleft, metadata !1349, metadata !1451), !dbg !7223
  %43 = bitcast i64* %r to i8*, !dbg !7222
  call void @llvm.lifetime.start(i64 8, i8* %43) #1, !dbg !7222
  call void @llvm.dbg.declare(metadata i64* %r, metadata !1351, metadata !1451), !dbg !7224
  %inbuf_end35 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 2, !dbg !7225
  %44 = load i8*, i8** %inbuf_end35, align 8, !dbg !7225, !tbaa !4414
  %inbuf36 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 0, !dbg !7226
  %45 = load i8*, i8** %inbuf36, align 8, !dbg !7226, !tbaa !4412
  %sub.ptr.lhs.cast = ptrtoint i8* %44 to i64, !dbg !7227
  %sub.ptr.rhs.cast = ptrtoint i8* %45 to i64, !dbg !7227
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7227
  store i64 %sub.ptr.sub, i64* %inleft, align 8, !dbg !7228, !tbaa !1876
  %46 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self.addr, align 8, !dbg !7229, !tbaa !1464
  %codec37 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %46, i32 0, i32 1, !dbg !7230
  %47 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec37, align 8, !dbg !7230, !tbaa !1680
  %decode = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %47, i32 0, i32 6, !dbg !7231
  %48 = load i64 (%union.MultibyteCodec_State*, i8*, i8**, i64, %struct._PyUnicodeWriter*)*, i64 (%union.MultibyteCodec_State*, i8*, i8**, i64, %struct._PyUnicodeWriter*)** %decode, align 8, !dbg !7231, !tbaa !4640
  %49 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self.addr, align 8, !dbg !7232, !tbaa !1464
  %codec38 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %49, i32 0, i32 1, !dbg !7233
  %50 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec38, align 8, !dbg !7233, !tbaa !1680
  %config39 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %50, i32 0, i32 1, !dbg !7234
  %51 = load i8*, i8** %config39, align 8, !dbg !7234, !tbaa !1717
  %inbuf40 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 0, !dbg !7235
  %52 = load i64, i64* %inleft, align 8, !dbg !7236, !tbaa !1876
  %writer41 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 4, !dbg !7237
  %call42 = call i64 %48(%union.MultibyteCodec_State* %state, i8* %51, i8** %inbuf40, i64 %52, %struct._PyUnicodeWriter* %writer41), !dbg !7229
  store i64 %call42, i64* %r, align 8, !dbg !7238, !tbaa !1876
  %53 = load i64, i64* %r, align 8, !dbg !7239, !tbaa !1876
  %cmp43 = icmp eq i64 %53, 0, !dbg !7241
  br i1 %cmp43, label %if.then.44, label %if.else.45, !dbg !7242

if.then.44:                                       ; preds = %while.body
  store i32 8, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7243

if.else.45:                                       ; preds = %while.body
  %54 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self.addr, align 8, !dbg !7244, !tbaa !1464
  %codec46 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %54, i32 0, i32 1, !dbg !7246
  %55 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec46, align 8, !dbg !7246, !tbaa !1680
  %56 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7247, !tbaa !1464
  %57 = load i64, i64* %r, align 8, !dbg !7248, !tbaa !1876
  %call47 = call i32 @multibytecodec_decerror(%struct.MultibyteCodec* %55, %union.MultibyteCodec_State* %state, %struct.MultibyteDecodeBuffer* %buf, %struct._object* %56, i64 %57), !dbg !7249
  %tobool48 = icmp ne i32 %call47, 0, !dbg !7249
  br i1 %tobool48, label %if.then.49, label %if.end.50, !dbg !7250

if.then.49:                                       ; preds = %if.else.45
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7251

if.end.50:                                        ; preds = %if.else.45
  br label %if.end.51

if.end.51:                                        ; preds = %if.end.50
  store i32 0, i32* %cleanup.dest.slot, !dbg !7252
  br label %cleanup, !dbg !7252

cleanup:                                          ; preds = %if.then.49, %if.end.51, %if.then.44
  %58 = bitcast i64* %r to i8*, !dbg !7253
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !7253
  %59 = bitcast i64* %inleft to i8*, !dbg !7253
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !7253
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.143 [
    i32 0, label %cleanup.cont
    i32 8, label %while.end
    i32 6, label %errorexit
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond, !dbg !7216

while.end:                                        ; preds = %cleanup, %while.cond
  %writer53 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 4, !dbg !7254
  %call54 = call %struct._object* @_PyUnicodeWriter_Finish(%struct._PyUnicodeWriter* %writer53), !dbg !7255
  store %struct._object* %call54, %struct._object** %res, align 8, !dbg !7256, !tbaa !1464
  %60 = load %struct._object*, %struct._object** %res, align 8, !dbg !7257, !tbaa !1464
  %cmp55 = icmp eq %struct._object* %60, null, !dbg !7259
  br i1 %cmp55, label %if.then.56, label %if.end.57, !dbg !7260

if.then.56:                                       ; preds = %while.end
  br label %errorexit, !dbg !7261

if.end.57:                                        ; preds = %while.end
  call void @PyBuffer_Release(%struct.bufferinfo* %pdata), !dbg !7262
  br label %do.body.58, !dbg !7263

do.body.58:                                       ; preds = %if.end.57
  %61 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7264
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !7264
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1352, metadata !1451), !dbg !7266
  %excobj59 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 3, !dbg !7267
  %62 = load %struct._object*, %struct._object** %excobj59, align 8, !dbg !7267, !tbaa !4335
  store %struct._object* %62, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7266, !tbaa !1464
  %63 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7268, !tbaa !1464
  %cmp60 = icmp ne %struct._object* %63, null, !dbg !7269
  br i1 %cmp60, label %if.then.61, label %if.end.74, !dbg !7270

if.then.61:                                       ; preds = %do.body.58
  br label %do.body.62, !dbg !7271

do.body.62:                                       ; preds = %if.then.61
  %64 = bitcast %struct._object** %_py_decref_tmp63 to i8*, !dbg !7273
  call void @llvm.lifetime.start(i64 8, i8* %64) #1, !dbg !7273
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp63, metadata !1354, metadata !1451), !dbg !7275
  %65 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7276, !tbaa !1464
  store %struct._object* %65, %struct._object** %_py_decref_tmp63, align 8, !dbg !7275, !tbaa !1464
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !7277, !tbaa !1464
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 0, !dbg !7279
  %67 = load i64, i64* %ob_refcnt64, align 8, !dbg !7280, !tbaa !1498
  %dec65 = add i64 %67, -1, !dbg !7280
  store i64 %dec65, i64* %ob_refcnt64, align 8, !dbg !7280, !tbaa !1498
  %cmp66 = icmp ne i64 %dec65, 0, !dbg !7281
  br i1 %cmp66, label %if.then.67, label %if.else.68, !dbg !7282

if.then.67:                                       ; preds = %do.body.62
  br label %if.end.71, !dbg !7283

if.else.68:                                       ; preds = %do.body.62
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !7285, !tbaa !1464
  %ob_type69 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 1, !dbg !7287
  %69 = load %struct._typeobject*, %struct._typeobject** %ob_type69, align 8, !dbg !7287, !tbaa !1563
  %tp_dealloc70 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %69, i32 0, i32 4, !dbg !7288
  %70 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc70, align 8, !dbg !7288, !tbaa !1565
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !7289, !tbaa !1464
  call void %70(%struct._object* %71), !dbg !7290
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.68, %if.then.67
  %72 = bitcast %struct._object** %_py_decref_tmp63 to i8*, !dbg !7291
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !7291
  br label %do.cond.72, !dbg !7293

do.cond.72:                                       ; preds = %if.end.71
  br label %do.end.73, !dbg !7294

do.end.73:                                        ; preds = %do.cond.72
  br label %if.end.74, !dbg !7296

if.end.74:                                        ; preds = %do.end.73, %do.body.58
  %73 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7298
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !7298
  br label %do.cond.75, !dbg !7301

do.cond.75:                                       ; preds = %if.end.74
  br label %do.end.76, !dbg !7302

do.end.76:                                        ; preds = %do.cond.75
  br label %do.body.77, !dbg !7304

do.body.77:                                       ; preds = %do.end.76
  %74 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7305, !tbaa !1464
  %cmp78 = icmp ne %struct._object* %74, null, !dbg !7307
  br i1 %cmp78, label %land.lhs.true.79, label %if.end.96, !dbg !7308

land.lhs.true.79:                                 ; preds = %do.body.77
  %75 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7309, !tbaa !1464
  %cmp80 = icmp ult %struct._object* %75, inttoptr (i64 1 to %struct._object*), !dbg !7311
  br i1 %cmp80, label %if.then.83, label %lor.lhs.false.81, !dbg !7312

lor.lhs.false.81:                                 ; preds = %land.lhs.true.79
  %76 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7313, !tbaa !1464
  %cmp82 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %76, !dbg !7315
  br i1 %cmp82, label %if.then.83, label %if.end.96, !dbg !7316

if.then.83:                                       ; preds = %lor.lhs.false.81, %land.lhs.true.79
  br label %do.body.84, !dbg !7317

do.body.84:                                       ; preds = %if.then.83
  %77 = bitcast %struct._object** %_py_decref_tmp85 to i8*, !dbg !7320
  call void @llvm.lifetime.start(i64 8, i8* %77) #1, !dbg !7320
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp85, metadata !1357, metadata !1451), !dbg !7322
  %78 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7323, !tbaa !1464
  store %struct._object* %78, %struct._object** %_py_decref_tmp85, align 8, !dbg !7322, !tbaa !1464
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8, !dbg !7324, !tbaa !1464
  %ob_refcnt86 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 0, !dbg !7326
  %80 = load i64, i64* %ob_refcnt86, align 8, !dbg !7327, !tbaa !1498
  %dec87 = add i64 %80, -1, !dbg !7327
  store i64 %dec87, i64* %ob_refcnt86, align 8, !dbg !7327, !tbaa !1498
  %cmp88 = icmp ne i64 %dec87, 0, !dbg !7328
  br i1 %cmp88, label %if.then.89, label %if.else.90, !dbg !7329

if.then.89:                                       ; preds = %do.body.84
  br label %if.end.93, !dbg !7330

if.else.90:                                       ; preds = %do.body.84
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8, !dbg !7332, !tbaa !1464
  %ob_type91 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 1, !dbg !7334
  %82 = load %struct._typeobject*, %struct._typeobject** %ob_type91, align 8, !dbg !7334, !tbaa !1563
  %tp_dealloc92 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %82, i32 0, i32 4, !dbg !7335
  %83 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc92, align 8, !dbg !7335, !tbaa !1565
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8, !dbg !7336, !tbaa !1464
  call void %83(%struct._object* %84), !dbg !7337
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.90, %if.then.89
  %85 = bitcast %struct._object** %_py_decref_tmp85 to i8*, !dbg !7338
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !7338
  br label %do.cond.94, !dbg !7340

do.cond.94:                                       ; preds = %if.end.93
  br label %do.end.95, !dbg !7341

do.end.95:                                        ; preds = %do.cond.94
  br label %if.end.96, !dbg !7343

if.end.96:                                        ; preds = %do.end.95, %lor.lhs.false.81, %do.body.77
  br label %do.cond.97, !dbg !7345

do.cond.97:                                       ; preds = %if.end.96
  br label %do.end.98, !dbg !7349

do.end.98:                                        ; preds = %do.cond.97
  %86 = load %struct._object*, %struct._object** %res, align 8, !dbg !7351, !tbaa !1464
  %87 = load i64, i64* %datalen, align 8, !dbg !7352, !tbaa !1876
  %call99 = call %struct._object* @make_tuple(%struct._object* %86, i64 %87), !dbg !7353
  store %struct._object* %call99, %struct._object** %retval, !dbg !7354
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.143, !dbg !7354

errorexit:                                        ; preds = %cleanup, %if.then.56, %if.then.30
  call void @PyBuffer_Release(%struct.bufferinfo* %pdata), !dbg !7355
  br label %do.body.100, !dbg !7356

do.body.100:                                      ; preds = %errorexit
  %88 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7357, !tbaa !1464
  %cmp101 = icmp ne %struct._object* %88, null, !dbg !7359
  br i1 %cmp101, label %land.lhs.true.102, label %if.end.119, !dbg !7360

land.lhs.true.102:                                ; preds = %do.body.100
  %89 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7361, !tbaa !1464
  %cmp103 = icmp ult %struct._object* %89, inttoptr (i64 1 to %struct._object*), !dbg !7363
  br i1 %cmp103, label %if.then.106, label %lor.lhs.false.104, !dbg !7364

lor.lhs.false.104:                                ; preds = %land.lhs.true.102
  %90 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7365, !tbaa !1464
  %cmp105 = icmp ult %struct._object* inttoptr (i64 3 to %struct._object*), %90, !dbg !7367
  br i1 %cmp105, label %if.then.106, label %if.end.119, !dbg !7368

if.then.106:                                      ; preds = %lor.lhs.false.104, %land.lhs.true.102
  br label %do.body.107, !dbg !7369

do.body.107:                                      ; preds = %if.then.106
  %91 = bitcast %struct._object** %_py_decref_tmp108 to i8*, !dbg !7372
  call void @llvm.lifetime.start(i64 8, i8* %91) #1, !dbg !7372
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp108, metadata !1361, metadata !1451), !dbg !7374
  %92 = load %struct._object*, %struct._object** %errorcb, align 8, !dbg !7375, !tbaa !1464
  store %struct._object* %92, %struct._object** %_py_decref_tmp108, align 8, !dbg !7374, !tbaa !1464
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8, !dbg !7376, !tbaa !1464
  %ob_refcnt109 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0, !dbg !7378
  %94 = load i64, i64* %ob_refcnt109, align 8, !dbg !7379, !tbaa !1498
  %dec110 = add i64 %94, -1, !dbg !7379
  store i64 %dec110, i64* %ob_refcnt109, align 8, !dbg !7379, !tbaa !1498
  %cmp111 = icmp ne i64 %dec110, 0, !dbg !7380
  br i1 %cmp111, label %if.then.112, label %if.else.113, !dbg !7381

if.then.112:                                      ; preds = %do.body.107
  br label %if.end.116, !dbg !7382

if.else.113:                                      ; preds = %do.body.107
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8, !dbg !7384, !tbaa !1464
  %ob_type114 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 1, !dbg !7386
  %96 = load %struct._typeobject*, %struct._typeobject** %ob_type114, align 8, !dbg !7386, !tbaa !1563
  %tp_dealloc115 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %96, i32 0, i32 4, !dbg !7387
  %97 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc115, align 8, !dbg !7387, !tbaa !1565
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8, !dbg !7388, !tbaa !1464
  call void %97(%struct._object* %98), !dbg !7389
  br label %if.end.116

if.end.116:                                       ; preds = %if.else.113, %if.then.112
  %99 = bitcast %struct._object** %_py_decref_tmp108 to i8*, !dbg !7390
  call void @llvm.lifetime.end(i64 8, i8* %99) #1, !dbg !7390
  br label %do.cond.117, !dbg !7392

do.cond.117:                                      ; preds = %if.end.116
  br label %do.end.118, !dbg !7393

do.end.118:                                       ; preds = %do.cond.117
  br label %if.end.119, !dbg !7395

if.end.119:                                       ; preds = %do.end.118, %lor.lhs.false.104, %do.body.100
  br label %do.cond.120, !dbg !7397

do.cond.120:                                      ; preds = %if.end.119
  br label %do.end.121, !dbg !7401

do.end.121:                                       ; preds = %do.cond.120
  br label %do.body.122, !dbg !7403

do.body.122:                                      ; preds = %do.end.121
  %100 = bitcast %struct._object** %_py_xdecref_tmp123 to i8*, !dbg !7404
  call void @llvm.lifetime.start(i64 8, i8* %100) #1, !dbg !7404
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp123, metadata !1365, metadata !1451), !dbg !7406
  %excobj124 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 3, !dbg !7407
  %101 = load %struct._object*, %struct._object** %excobj124, align 8, !dbg !7407, !tbaa !4335
  store %struct._object* %101, %struct._object** %_py_xdecref_tmp123, align 8, !dbg !7406, !tbaa !1464
  %102 = load %struct._object*, %struct._object** %_py_xdecref_tmp123, align 8, !dbg !7408, !tbaa !1464
  %cmp125 = icmp ne %struct._object* %102, null, !dbg !7409
  br i1 %cmp125, label %if.then.126, label %if.end.139, !dbg !7410

if.then.126:                                      ; preds = %do.body.122
  br label %do.body.127, !dbg !7411

do.body.127:                                      ; preds = %if.then.126
  %103 = bitcast %struct._object** %_py_decref_tmp128 to i8*, !dbg !7413
  call void @llvm.lifetime.start(i64 8, i8* %103) #1, !dbg !7413
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp128, metadata !1367, metadata !1451), !dbg !7415
  %104 = load %struct._object*, %struct._object** %_py_xdecref_tmp123, align 8, !dbg !7416, !tbaa !1464
  store %struct._object* %104, %struct._object** %_py_decref_tmp128, align 8, !dbg !7415, !tbaa !1464
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8, !dbg !7417, !tbaa !1464
  %ob_refcnt129 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 0, !dbg !7419
  %106 = load i64, i64* %ob_refcnt129, align 8, !dbg !7420, !tbaa !1498
  %dec130 = add i64 %106, -1, !dbg !7420
  store i64 %dec130, i64* %ob_refcnt129, align 8, !dbg !7420, !tbaa !1498
  %cmp131 = icmp ne i64 %dec130, 0, !dbg !7421
  br i1 %cmp131, label %if.then.132, label %if.else.133, !dbg !7422

if.then.132:                                      ; preds = %do.body.127
  br label %if.end.136, !dbg !7423

if.else.133:                                      ; preds = %do.body.127
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8, !dbg !7425, !tbaa !1464
  %ob_type134 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 1, !dbg !7427
  %108 = load %struct._typeobject*, %struct._typeobject** %ob_type134, align 8, !dbg !7427, !tbaa !1563
  %tp_dealloc135 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %108, i32 0, i32 4, !dbg !7428
  %109 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc135, align 8, !dbg !7428, !tbaa !1565
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8, !dbg !7429, !tbaa !1464
  call void %109(%struct._object* %110), !dbg !7430
  br label %if.end.136

if.end.136:                                       ; preds = %if.else.133, %if.then.132
  %111 = bitcast %struct._object** %_py_decref_tmp128 to i8*, !dbg !7431
  call void @llvm.lifetime.end(i64 8, i8* %111) #1, !dbg !7431
  br label %do.cond.137, !dbg !7433

do.cond.137:                                      ; preds = %if.end.136
  br label %do.end.138, !dbg !7434

do.end.138:                                       ; preds = %do.cond.137
  br label %if.end.139, !dbg !7436

if.end.139:                                       ; preds = %do.end.138, %do.body.122
  %112 = bitcast %struct._object** %_py_xdecref_tmp123 to i8*, !dbg !7438
  call void @llvm.lifetime.end(i64 8, i8* %112) #1, !dbg !7438
  br label %do.cond.140, !dbg !7439

do.cond.140:                                      ; preds = %if.end.139
  br label %do.end.141, !dbg !7440

do.end.141:                                       ; preds = %do.cond.140
  %writer142 = getelementptr inbounds %struct.MultibyteDecodeBuffer, %struct.MultibyteDecodeBuffer* %buf, i32 0, i32 4, !dbg !7442
  call void @_PyUnicodeWriter_Dealloc(%struct._PyUnicodeWriter* %writer142), !dbg !7443
  store %struct._object* null, %struct._object** %retval, !dbg !7444
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.143, !dbg !7444

cleanup.143:                                      ; preds = %do.end.141, %do.end.98, %cleanup, %do.end.17, %if.then.3, %if.then
  %113 = bitcast i64* %datalen to i8*, !dbg !7445
  call void @llvm.lifetime.end(i64 8, i8* %113) #1, !dbg !7445
  %114 = bitcast i8** %errors to i8*, !dbg !7445
  call void @llvm.lifetime.end(i64 8, i8* %114) #1, !dbg !7445
  %115 = bitcast i8** %data to i8*, !dbg !7445
  call void @llvm.lifetime.end(i64 8, i8* %115) #1, !dbg !7445
  %116 = bitcast %struct.bufferinfo* %pdata to i8*, !dbg !7445
  call void @llvm.lifetime.end(i64 80, i8* %116) #1, !dbg !7445
  %117 = bitcast %struct._object** %res to i8*, !dbg !7445
  call void @llvm.lifetime.end(i64 8, i8* %117) #1, !dbg !7445
  %118 = bitcast %struct._object** %errorcb to i8*, !dbg !7445
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !7445
  %119 = bitcast %struct.MultibyteDecodeBuffer* %buf to i8*, !dbg !7445
  call void @llvm.lifetime.end(i64 88, i8* %119) #1, !dbg !7445
  %120 = bitcast %union.MultibyteCodec_State* %state to i8*, !dbg !7445
  call void @llvm.lifetime.end(i64 8, i8* %120) #1, !dbg !7445
  %121 = load %struct._object*, %struct._object** %retval, !dbg !7445
  ret %struct._object* %121, !dbg !7445
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @make_tuple(%struct._object* %object, i64 %len) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %object.addr = alloca %struct._object*, align 8
  %len.addr = alloca i64, align 8
  %v = alloca %struct._object*, align 8
  %w = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp11 = alloca %struct._object*, align 8
  store %struct._object* %object, %struct._object** %object.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %object.addr, metadata !1318, metadata !1451), !dbg !7446
  store i64 %len, i64* %len.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !1319, metadata !1451), !dbg !7447
  %0 = bitcast %struct._object** %v to i8*, !dbg !7448
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7448
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !1320, metadata !1451), !dbg !7449
  %1 = bitcast %struct._object** %w to i8*, !dbg !7448
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7448
  call void @llvm.dbg.declare(metadata %struct._object** %w, metadata !1321, metadata !1451), !dbg !7450
  %2 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !7451, !tbaa !1464
  %cmp = icmp eq %struct._object* %2, null, !dbg !7453
  br i1 %cmp, label %if.then, label %if.end, !dbg !7454

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7455
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7455

if.end:                                           ; preds = %entry
  %call = call %struct._object* @PyTuple_New(i64 2), !dbg !7456
  store %struct._object* %call, %struct._object** %v, align 8, !dbg !7457, !tbaa !1464
  %3 = load %struct._object*, %struct._object** %v, align 8, !dbg !7458, !tbaa !1464
  %cmp1 = icmp eq %struct._object* %3, null, !dbg !7459
  br i1 %cmp1, label %if.then.2, label %if.end.6, !dbg !7460

if.then.2:                                        ; preds = %if.end
  br label %do.body, !dbg !7461

do.body:                                          ; preds = %if.then.2
  %4 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7462
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !7462
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1322, metadata !1451), !dbg !7464
  %5 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !7465, !tbaa !1464
  store %struct._object* %5, %struct._object** %_py_decref_tmp, align 8, !dbg !7464, !tbaa !1464
  %6 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7466, !tbaa !1464
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !7468
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !7469, !tbaa !1498
  %dec = add i64 %7, -1, !dbg !7469
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7469, !tbaa !1498
  %cmp3 = icmp ne i64 %dec, 0, !dbg !7470
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !7471

if.then.4:                                        ; preds = %do.body
  br label %if.end.5, !dbg !7472

if.else:                                          ; preds = %do.body
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7474, !tbaa !1464
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !7476
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7476, !tbaa !1563
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 4, !dbg !7477
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7477, !tbaa !1565
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7478, !tbaa !1464
  call void %10(%struct._object* %11), !dbg !7479
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then.4
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7480
  call void @llvm.lifetime.end(i64 8, i8* %12) #1, !dbg !7480
  br label %do.cond, !dbg !7482

do.cond:                                          ; preds = %if.end.5
  br label %do.end, !dbg !7483

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !7485
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7485

if.end.6:                                         ; preds = %if.end
  %13 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !7486, !tbaa !1464
  %14 = load %struct._object*, %struct._object** %v, align 8, !dbg !7487, !tbaa !1464
  %15 = bitcast %struct._object* %14 to %struct.PyTupleObject*, !dbg !7488
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %15, i32 0, i32 1, !dbg !7489
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !7490
  store %struct._object* %13, %struct._object** %arrayidx, align 8, !dbg !7491, !tbaa !1464
  %16 = load i64, i64* %len.addr, align 8, !dbg !7492, !tbaa !1876
  %call7 = call %struct._object* @PyLong_FromSsize_t(i64 %16), !dbg !7493
  store %struct._object* %call7, %struct._object** %w, align 8, !dbg !7494, !tbaa !1464
  %17 = load %struct._object*, %struct._object** %w, align 8, !dbg !7495, !tbaa !1464
  %cmp8 = icmp eq %struct._object* %17, null, !dbg !7496
  br i1 %cmp8, label %if.then.9, label %if.end.22, !dbg !7497

if.then.9:                                        ; preds = %if.end.6
  br label %do.body.10, !dbg !7498

do.body.10:                                       ; preds = %if.then.9
  %18 = bitcast %struct._object** %_py_decref_tmp11 to i8*, !dbg !7499
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !7499
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp11, metadata !1326, metadata !1451), !dbg !7501
  %19 = load %struct._object*, %struct._object** %v, align 8, !dbg !7502, !tbaa !1464
  store %struct._object* %19, %struct._object** %_py_decref_tmp11, align 8, !dbg !7501, !tbaa !1464
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp11, align 8, !dbg !7503, !tbaa !1464
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !7505
  %21 = load i64, i64* %ob_refcnt12, align 8, !dbg !7506, !tbaa !1498
  %dec13 = add i64 %21, -1, !dbg !7506
  store i64 %dec13, i64* %ob_refcnt12, align 8, !dbg !7506, !tbaa !1498
  %cmp14 = icmp ne i64 %dec13, 0, !dbg !7507
  br i1 %cmp14, label %if.then.15, label %if.else.16, !dbg !7508

if.then.15:                                       ; preds = %do.body.10
  br label %if.end.19, !dbg !7509

if.else.16:                                       ; preds = %do.body.10
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp11, align 8, !dbg !7511, !tbaa !1464
  %ob_type17 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !7513
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type17, align 8, !dbg !7513, !tbaa !1563
  %tp_dealloc18 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !7514
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc18, align 8, !dbg !7514, !tbaa !1565
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp11, align 8, !dbg !7515, !tbaa !1464
  call void %24(%struct._object* %25), !dbg !7516
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.16, %if.then.15
  %26 = bitcast %struct._object** %_py_decref_tmp11 to i8*, !dbg !7517
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !7517
  br label %do.cond.20, !dbg !7519

do.cond.20:                                       ; preds = %if.end.19
  br label %do.end.21, !dbg !7520

do.end.21:                                        ; preds = %do.cond.20
  store %struct._object* null, %struct._object** %retval, !dbg !7522
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7522

if.end.22:                                        ; preds = %if.end.6
  %27 = load %struct._object*, %struct._object** %w, align 8, !dbg !7523, !tbaa !1464
  %28 = load %struct._object*, %struct._object** %v, align 8, !dbg !7524, !tbaa !1464
  %29 = bitcast %struct._object* %28 to %struct.PyTupleObject*, !dbg !7525
  %ob_item23 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %29, i32 0, i32 1, !dbg !7526
  %arrayidx24 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item23, i32 0, i64 1, !dbg !7527
  store %struct._object* %27, %struct._object** %arrayidx24, align 8, !dbg !7528, !tbaa !1464
  %30 = load %struct._object*, %struct._object** %v, align 8, !dbg !7529, !tbaa !1464
  store %struct._object* %30, %struct._object** %retval, !dbg !7530
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7530

cleanup:                                          ; preds = %if.end.22, %do.end.21, %do.end, %if.then
  %31 = bitcast %struct._object** %w to i8*, !dbg !7531
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !7531
  %32 = bitcast %struct._object** %v to i8*, !dbg !7531
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !7531
  %33 = load %struct._object*, %struct._object** %retval, !dbg !7531
  ret %struct._object* %33, !dbg !7531
}

declare %struct._object* @PyLong_FromSsize_t(i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @__create_codec(%struct._object* %ignore, %struct._object* %arg) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ignore.addr = alloca %struct._object*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %self = alloca %struct.MultibyteCodecObject*, align 8
  %codec = alloca %struct.MultibyteCodec*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %ignore, %struct._object** %ignore.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %ignore.addr, metadata !1372, metadata !1451), !dbg !7532
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !1464
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !1373, metadata !1451), !dbg !7533
  %0 = bitcast %struct.MultibyteCodecObject** %self to i8*, !dbg !7534
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7534
  call void @llvm.dbg.declare(metadata %struct.MultibyteCodecObject** %self, metadata !1374, metadata !1451), !dbg !7535
  %1 = bitcast %struct.MultibyteCodec** %codec to i8*, !dbg !7536
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7536
  call void @llvm.dbg.declare(metadata %struct.MultibyteCodec** %codec, metadata !1375, metadata !1451), !dbg !7537
  %2 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !7538, !tbaa !1464
  %call = call i32 @PyCapsule_IsValid(%struct._object* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.51, i32 0, i32 0)), !dbg !7540
  %tobool = icmp ne i32 %call, 0, !dbg !7540
  br i1 %tobool, label %if.end, label %if.then, !dbg !7541

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7542, !tbaa !1464
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.52, i32 0, i32 0)), !dbg !7544
  store %struct._object* null, %struct._object** %retval, !dbg !7545
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7545

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !7546, !tbaa !1464
  %call1 = call i8* @PyCapsule_GetPointer(%struct._object* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.51, i32 0, i32 0)), !dbg !7547
  %5 = bitcast i8* %call1 to %struct.MultibyteCodec*, !dbg !7547
  store %struct.MultibyteCodec* %5, %struct.MultibyteCodec** %codec, align 8, !dbg !7548, !tbaa !1464
  %6 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !7549, !tbaa !1464
  %codecinit = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %6, i32 0, i32 2, !dbg !7551
  %7 = load i32 (i8*)*, i32 (i8*)** %codecinit, align 8, !dbg !7551, !tbaa !7552
  %cmp = icmp ne i32 (i8*)* %7, null, !dbg !7553
  br i1 %cmp, label %land.lhs.true, label %if.end.6, !dbg !7554

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !7555, !tbaa !1464
  %codecinit2 = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %8, i32 0, i32 2, !dbg !7557
  %9 = load i32 (i8*)*, i32 (i8*)** %codecinit2, align 8, !dbg !7557, !tbaa !7552
  %10 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !7558, !tbaa !1464
  %config = getelementptr inbounds %struct.MultibyteCodec, %struct.MultibyteCodec* %10, i32 0, i32 1, !dbg !7559
  %11 = load i8*, i8** %config, align 8, !dbg !7559, !tbaa !1717
  %call3 = call i32 %9(i8* %11), !dbg !7560
  %cmp4 = icmp ne i32 %call3, 0, !dbg !7561
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !7562

if.then.5:                                        ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !7563
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7563

if.end.6:                                         ; preds = %land.lhs.true, %if.end
  %call7 = call %struct._object* @_PyObject_New(%struct._typeobject* @MultibyteCodec_Type), !dbg !7564
  %12 = bitcast %struct._object* %call7 to %struct.MultibyteCodecObject*, !dbg !7565
  store %struct.MultibyteCodecObject* %12, %struct.MultibyteCodecObject** %self, align 8, !dbg !7566, !tbaa !1464
  %13 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self, align 8, !dbg !7567, !tbaa !1464
  %cmp8 = icmp eq %struct.MultibyteCodecObject* %13, null, !dbg !7569
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !7570

if.then.9:                                        ; preds = %if.end.6
  store %struct._object* null, %struct._object** %retval, !dbg !7571
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7571

if.end.10:                                        ; preds = %if.end.6
  %14 = load %struct.MultibyteCodec*, %struct.MultibyteCodec** %codec, align 8, !dbg !7572, !tbaa !1464
  %15 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self, align 8, !dbg !7573, !tbaa !1464
  %codec11 = getelementptr inbounds %struct.MultibyteCodecObject, %struct.MultibyteCodecObject* %15, i32 0, i32 1, !dbg !7574
  store %struct.MultibyteCodec* %14, %struct.MultibyteCodec** %codec11, align 8, !dbg !7575, !tbaa !1680
  %16 = load %struct.MultibyteCodecObject*, %struct.MultibyteCodecObject** %self, align 8, !dbg !7576, !tbaa !1464
  %17 = bitcast %struct.MultibyteCodecObject* %16 to %struct._object*, !dbg !7577
  store %struct._object* %17, %struct._object** %retval, !dbg !7578
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7578

cleanup:                                          ; preds = %if.end.10, %if.then.9, %if.then.5, %if.then
  %18 = bitcast %struct.MultibyteCodec** %codec to i8*, !dbg !7579
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !7579
  %19 = bitcast %struct.MultibyteCodecObject** %self to i8*, !dbg !7579
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !7579
  %20 = load %struct._object*, %struct._object** %retval, !dbg !7579
  ret %struct._object* %20, !dbg !7579
}

declare i32 @PyCapsule_IsValid(%struct._object*, i8*) #3

declare i8* @PyCapsule_GetPointer(%struct._object*, i8*) #3

declare %struct._object* @_PyObject_New(%struct._typeobject*) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1446, !1447, !1448}
!llvm.ident = !{!1449}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !10, subprograms: !563, globals: !1376)
!1 = !DIFile(filename: "multibytecodec.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PyUnicode_Kind", file: !4, line: 451, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./Include/unicodeobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!5 = !{!6, !7, !8, !9}
!6 = !DIEnumerator(name: "PyUnicode_WCHAR_KIND", value: 0)
!7 = !DIEnumerator(name: "PyUnicode_1BYTE_KIND", value: 1)
!8 = !DIEnumerator(name: "PyUnicode_2BYTE_KIND", value: 2)
!9 = !DIEnumerator(name: "PyUnicode_4BYTE_KIND", value: 4)
!10 = !{!11, !12, !357, !447, !465, !473, !18, !101, !404, !490, !498, !59, !499, !370, !421, !36, !507, !516, !522, !400, !532, !542, !553}
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64)
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !14, line: 109, baseType: !15)
!14 = !DIFile(filename: "./Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!15 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !14, line: 105, size: 128, align: 64, elements: !16)
!16 = !{!17, !25}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !15, file: !14, line: 107, baseType: !18, size: 64, align: 64)
!18 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !19, line: 177, baseType: !20)
!19 = !DIFile(filename: "./Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!20 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !21, line: 102, baseType: !22)
!21 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !23, line: 181, baseType: !24)
!23 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!24 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !15, file: !14, line: 108, baseType: !26, size: 64, align: 64, offset: 64)
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64, align: 64)
!27 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !14, line: 334, size: 3200, align: 64, elements: !28)
!28 = !{!29, !35, !39, !40, !41, !46, !109, !114, !119, !120, !125, !177, !208, !220, !226, !227, !228, !230, !232, !263, !264, !265, !274, !275, !280, !281, !283, !285, !295, !305, !323, !324, !325, !327, !329, !330, !332, !337, !342, !347, !348, !349, !350, !351, !352, !353, !354, !356}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !27, file: !14, line: 335, baseType: !30, size: 192, align: 64)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !14, line: 114, baseType: !31)
!31 = !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 111, size: 192, align: 64, elements: !32)
!32 = !{!33, !34}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !31, file: !14, line: 112, baseType: !13, size: 128, align: 64)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !31, file: !14, line: 113, baseType: !18, size: 64, align: 64, offset: 128)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !27, file: !14, line: 336, baseType: !36, size: 64, align: 64, offset: 192)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64, align: 64)
!37 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !38)
!38 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !27, file: !14, line: 337, baseType: !18, size: 64, align: 64, offset: 256)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !27, file: !14, line: 337, baseType: !18, size: 64, align: 64, offset: 320)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !27, file: !14, line: 341, baseType: !42, size: 64, align: 64, offset: 384)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !14, line: 308, baseType: !43)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64, align: 64)
!44 = !DISubroutineType(types: !45)
!45 = !{null, !12}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !27, file: !14, line: 342, baseType: !47, size: 64, align: 64, offset: 448)
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !14, line: 314, baseType: !48)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64, align: 64)
!49 = !DISubroutineType(types: !50)
!50 = !{!51, !12, !52, !51}
!51 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64, align: 64)
!53 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !21, line: 48, baseType: !54)
!54 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !55, line: 246, size: 1728, align: 64, elements: !56)
!55 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!56 = !{!57, !58, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !78, !79, !80, !81, !83, !85, !87, !91, !94, !96, !97, !98, !99, !100, !104, !105}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !54, file: !55, line: 247, baseType: !51, size: 32, align: 32)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !54, file: !55, line: 252, baseType: !59, size: 64, align: 64, offset: 64)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64, align: 64)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !54, file: !55, line: 253, baseType: !59, size: 64, align: 64, offset: 128)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !54, file: !55, line: 254, baseType: !59, size: 64, align: 64, offset: 192)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !54, file: !55, line: 255, baseType: !59, size: 64, align: 64, offset: 256)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !54, file: !55, line: 256, baseType: !59, size: 64, align: 64, offset: 320)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !54, file: !55, line: 257, baseType: !59, size: 64, align: 64, offset: 384)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !54, file: !55, line: 258, baseType: !59, size: 64, align: 64, offset: 448)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !54, file: !55, line: 259, baseType: !59, size: 64, align: 64, offset: 512)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !54, file: !55, line: 261, baseType: !59, size: 64, align: 64, offset: 576)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !54, file: !55, line: 262, baseType: !59, size: 64, align: 64, offset: 640)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !54, file: !55, line: 263, baseType: !59, size: 64, align: 64, offset: 704)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !54, file: !55, line: 265, baseType: !71, size: 64, align: 64, offset: 768)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64, align: 64)
!72 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !55, line: 161, size: 192, align: 64, elements: !73)
!73 = !{!74, !75, !77}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !72, file: !55, line: 162, baseType: !71, size: 64, align: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !72, file: !55, line: 163, baseType: !76, size: 64, align: 64, offset: 64)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64, align: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !72, file: !55, line: 167, baseType: !51, size: 32, align: 32, offset: 128)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !54, file: !55, line: 267, baseType: !76, size: 64, align: 64, offset: 832)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !54, file: !55, line: 269, baseType: !51, size: 32, align: 32, offset: 896)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !54, file: !55, line: 273, baseType: !51, size: 32, align: 32, offset: 928)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !54, file: !55, line: 275, baseType: !82, size: 64, align: 64, offset: 960)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !23, line: 140, baseType: !24)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !54, file: !55, line: 279, baseType: !84, size: 16, align: 16, offset: 1024)
!84 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !54, file: !55, line: 280, baseType: !86, size: 8, align: 8, offset: 1040)
!86 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !54, file: !55, line: 281, baseType: !88, size: 8, align: 8, offset: 1048)
!88 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 8, align: 8, elements: !89)
!89 = !{!90}
!90 = !DISubrange(count: 1)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !54, file: !55, line: 285, baseType: !92, size: 64, align: 64, offset: 1088)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64, align: 64)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !55, line: 155, baseType: null)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !54, file: !55, line: 294, baseType: !95, size: 64, align: 64, offset: 1152)
!95 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !23, line: 141, baseType: !24)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !54, file: !55, line: 303, baseType: !11, size: 64, align: 64, offset: 1216)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !54, file: !55, line: 304, baseType: !11, size: 64, align: 64, offset: 1280)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !54, file: !55, line: 305, baseType: !11, size: 64, align: 64, offset: 1344)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !54, file: !55, line: 306, baseType: !11, size: 64, align: 64, offset: 1408)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !54, file: !55, line: 307, baseType: !101, size: 64, align: 64, offset: 1472)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !102, line: 62, baseType: !103)
!102 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!103 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !54, file: !55, line: 309, baseType: !51, size: 32, align: 32, offset: 1536)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !54, file: !55, line: 311, baseType: !106, size: 160, align: 8, offset: 1568)
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 160, align: 8, elements: !107)
!107 = !{!108}
!108 = !DISubrange(count: 20)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !27, file: !14, line: 343, baseType: !110, size: 64, align: 64, offset: 512)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !14, line: 316, baseType: !111)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64, align: 64)
!112 = !DISubroutineType(types: !113)
!113 = !{!12, !12, !59}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !27, file: !14, line: 344, baseType: !115, size: 64, align: 64, offset: 576)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !14, line: 318, baseType: !116)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64, align: 64)
!117 = !DISubroutineType(types: !118)
!118 = !{!51, !12, !59, !12}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !27, file: !14, line: 345, baseType: !11, size: 64, align: 64, offset: 640)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !27, file: !14, line: 346, baseType: !121, size: 64, align: 64, offset: 704)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !14, line: 320, baseType: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64)
!123 = !DISubroutineType(types: !124)
!124 = !{!12, !12}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !27, file: !14, line: 350, baseType: !126, size: 64, align: 64, offset: 768)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64, align: 64)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !14, line: 278, baseType: !128)
!128 = !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 236, size: 2176, align: 64, elements: !129)
!129 = !{!130, !135, !136, !137, !138, !139, !144, !146, !147, !148, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !128, file: !14, line: 241, baseType: !131, size: 64, align: 64)
!131 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !14, line: 166, baseType: !132)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64, align: 64)
!133 = !DISubroutineType(types: !134)
!134 = !{!12, !12, !12}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !128, file: !14, line: 242, baseType: !131, size: 64, align: 64, offset: 64)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !128, file: !14, line: 243, baseType: !131, size: 64, align: 64, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !128, file: !14, line: 244, baseType: !131, size: 64, align: 64, offset: 192)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !128, file: !14, line: 245, baseType: !131, size: 64, align: 64, offset: 256)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !128, file: !14, line: 246, baseType: !140, size: 64, align: 64, offset: 320)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !14, line: 167, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64, align: 64)
!142 = !DISubroutineType(types: !143)
!143 = !{!12, !12, !12, !12}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !128, file: !14, line: 247, baseType: !145, size: 64, align: 64, offset: 384)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !14, line: 165, baseType: !122)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !128, file: !14, line: 248, baseType: !145, size: 64, align: 64, offset: 448)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !128, file: !14, line: 249, baseType: !145, size: 64, align: 64, offset: 512)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !128, file: !14, line: 250, baseType: !149, size: 64, align: 64, offset: 576)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !14, line: 168, baseType: !150)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64, align: 64)
!151 = !DISubroutineType(types: !152)
!152 = !{!51, !12}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !128, file: !14, line: 251, baseType: !145, size: 64, align: 64, offset: 640)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !128, file: !14, line: 252, baseType: !131, size: 64, align: 64, offset: 704)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !128, file: !14, line: 253, baseType: !131, size: 64, align: 64, offset: 768)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !128, file: !14, line: 254, baseType: !131, size: 64, align: 64, offset: 832)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !128, file: !14, line: 255, baseType: !131, size: 64, align: 64, offset: 896)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !128, file: !14, line: 256, baseType: !131, size: 64, align: 64, offset: 960)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !128, file: !14, line: 257, baseType: !145, size: 64, align: 64, offset: 1024)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !128, file: !14, line: 258, baseType: !11, size: 64, align: 64, offset: 1088)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !128, file: !14, line: 259, baseType: !145, size: 64, align: 64, offset: 1152)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !128, file: !14, line: 261, baseType: !131, size: 64, align: 64, offset: 1216)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !128, file: !14, line: 262, baseType: !131, size: 64, align: 64, offset: 1280)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !128, file: !14, line: 263, baseType: !131, size: 64, align: 64, offset: 1344)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !128, file: !14, line: 264, baseType: !131, size: 64, align: 64, offset: 1408)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !128, file: !14, line: 265, baseType: !140, size: 64, align: 64, offset: 1472)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !128, file: !14, line: 266, baseType: !131, size: 64, align: 64, offset: 1536)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !128, file: !14, line: 267, baseType: !131, size: 64, align: 64, offset: 1600)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !128, file: !14, line: 268, baseType: !131, size: 64, align: 64, offset: 1664)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !128, file: !14, line: 269, baseType: !131, size: 64, align: 64, offset: 1728)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !128, file: !14, line: 270, baseType: !131, size: 64, align: 64, offset: 1792)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !128, file: !14, line: 272, baseType: !131, size: 64, align: 64, offset: 1856)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !128, file: !14, line: 273, baseType: !131, size: 64, align: 64, offset: 1920)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !128, file: !14, line: 274, baseType: !131, size: 64, align: 64, offset: 1984)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !128, file: !14, line: 275, baseType: !131, size: 64, align: 64, offset: 2048)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !128, file: !14, line: 277, baseType: !145, size: 64, align: 64, offset: 2112)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !27, file: !14, line: 351, baseType: !178, size: 64, align: 64, offset: 832)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !14, line: 292, baseType: !180)
!180 = !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 280, size: 640, align: 64, elements: !181)
!181 = !{!182, !187, !188, !193, !194, !195, !200, !201, !206, !207}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !180, file: !14, line: 281, baseType: !183, size: 64, align: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !14, line: 169, baseType: !184)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = !DISubroutineType(types: !186)
!186 = !{!18, !12}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !180, file: !14, line: 282, baseType: !131, size: 64, align: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !180, file: !14, line: 283, baseType: !189, size: 64, align: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !14, line: 170, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!12, !12, !18}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !180, file: !14, line: 284, baseType: !189, size: 64, align: 64, offset: 192)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !180, file: !14, line: 285, baseType: !11, size: 64, align: 64, offset: 256)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !180, file: !14, line: 286, baseType: !196, size: 64, align: 64, offset: 320)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !14, line: 172, baseType: !197)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64, align: 64)
!198 = !DISubroutineType(types: !199)
!199 = !{!51, !12, !18, !12}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !180, file: !14, line: 287, baseType: !11, size: 64, align: 64, offset: 384)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !180, file: !14, line: 288, baseType: !202, size: 64, align: 64, offset: 448)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !14, line: 231, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64, align: 64)
!204 = !DISubroutineType(types: !205)
!205 = !{!51, !12, !12}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !180, file: !14, line: 290, baseType: !131, size: 64, align: 64, offset: 512)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !180, file: !14, line: 291, baseType: !189, size: 64, align: 64, offset: 576)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !27, file: !14, line: 352, baseType: !209, size: 64, align: 64, offset: 896)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !14, line: 298, baseType: !211)
!211 = !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 294, size: 192, align: 64, elements: !212)
!212 = !{!213, !214, !215}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !211, file: !14, line: 295, baseType: !183, size: 64, align: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !211, file: !14, line: 296, baseType: !131, size: 64, align: 64, offset: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !211, file: !14, line: 297, baseType: !216, size: 64, align: 64, offset: 128)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !14, line: 174, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64, align: 64)
!218 = !DISubroutineType(types: !219)
!219 = !{!51, !12, !12, !12}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !27, file: !14, line: 356, baseType: !221, size: 64, align: 64, offset: 960)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !14, line: 321, baseType: !222)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64, align: 64)
!223 = !DISubroutineType(types: !224)
!224 = !{!225, !12}
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !19, line: 186, baseType: !18)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !27, file: !14, line: 357, baseType: !140, size: 64, align: 64, offset: 1024)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !27, file: !14, line: 358, baseType: !121, size: 64, align: 64, offset: 1088)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !27, file: !14, line: 359, baseType: !229, size: 64, align: 64, offset: 1152)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !14, line: 317, baseType: !132)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !27, file: !14, line: 360, baseType: !231, size: 64, align: 64, offset: 1216)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !14, line: 319, baseType: !217)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !27, file: !14, line: 363, baseType: !233, size: 64, align: 64, offset: 1280)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64, align: 64)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !14, line: 304, baseType: !235)
!235 = !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 301, size: 128, align: 64, elements: !236)
!236 = !{!237, !258}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !235, file: !14, line: 302, baseType: !238, size: 64, align: 64)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !14, line: 193, baseType: !239)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!51, !12, !242, !51}
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64, align: 64)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !14, line: 191, baseType: !244)
!244 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !14, line: 178, size: 640, align: 64, elements: !245)
!245 = !{!246, !247, !248, !249, !250, !251, !252, !253, !255, !256, !257}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !244, file: !14, line: 179, baseType: !11, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !244, file: !14, line: 180, baseType: !12, size: 64, align: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !244, file: !14, line: 181, baseType: !18, size: 64, align: 64, offset: 128)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !244, file: !14, line: 182, baseType: !18, size: 64, align: 64, offset: 192)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !244, file: !14, line: 184, baseType: !51, size: 32, align: 32, offset: 256)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !244, file: !14, line: 185, baseType: !51, size: 32, align: 32, offset: 288)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !244, file: !14, line: 186, baseType: !59, size: 64, align: 64, offset: 320)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !244, file: !14, line: 187, baseType: !254, size: 64, align: 64, offset: 384)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 64, align: 64)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !244, file: !14, line: 188, baseType: !254, size: 64, align: 64, offset: 448)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !244, file: !14, line: 189, baseType: !254, size: 64, align: 64, offset: 512)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !244, file: !14, line: 190, baseType: !11, size: 64, align: 64, offset: 576)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !235, file: !14, line: 303, baseType: !259, size: 64, align: 64, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !14, line: 194, baseType: !260)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64, align: 64)
!261 = !DISubroutineType(types: !262)
!262 = !{null, !12, !242}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !27, file: !14, line: 366, baseType: !103, size: 64, align: 64, offset: 1344)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !27, file: !14, line: 368, baseType: !36, size: 64, align: 64, offset: 1408)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !27, file: !14, line: 372, baseType: !266, size: 64, align: 64, offset: 1472)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !14, line: 233, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64, align: 64)
!268 = !DISubroutineType(types: !269)
!269 = !{!51, !12, !270, !11}
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !14, line: 232, baseType: !271)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64, align: 64)
!272 = !DISubroutineType(types: !273)
!273 = !{!51, !12, !11}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !27, file: !14, line: 375, baseType: !149, size: 64, align: 64, offset: 1536)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !27, file: !14, line: 379, baseType: !276, size: 64, align: 64, offset: 1600)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !14, line: 322, baseType: !277)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!278 = !DISubroutineType(types: !279)
!279 = !{!12, !12, !12, !51}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !27, file: !14, line: 382, baseType: !18, size: 64, align: 64, offset: 1664)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !27, file: !14, line: 385, baseType: !282, size: 64, align: 64, offset: 1728)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !14, line: 323, baseType: !122)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !27, file: !14, line: 386, baseType: !284, size: 64, align: 64, offset: 1792)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !14, line: 324, baseType: !122)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !27, file: !14, line: 389, baseType: !286, size: 64, align: 64, offset: 1856)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64, align: 64)
!287 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !288, line: 40, size: 256, align: 64, elements: !289)
!288 = !DIFile(filename: "./Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!289 = !{!290, !291, !293, !294}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !287, file: !288, line: 41, baseType: !36, size: 64, align: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !287, file: !288, line: 42, baseType: !292, size: 64, align: 64, offset: 64)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !288, line: 18, baseType: !132)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !287, file: !288, line: 43, baseType: !51, size: 32, align: 32, offset: 128)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !287, file: !288, line: 45, baseType: !36, size: 64, align: 64, offset: 192)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !27, file: !14, line: 390, baseType: !296, size: 64, align: 64, offset: 1920)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64, align: 64)
!297 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !298, line: 18, size: 320, align: 64, elements: !299)
!298 = !DIFile(filename: "./Include/structmember.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!299 = !{!300, !301, !302, !303, !304}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !297, file: !298, line: 19, baseType: !59, size: 64, align: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !297, file: !298, line: 20, baseType: !51, size: 32, align: 32, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !297, file: !298, line: 21, baseType: !18, size: 64, align: 64, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !297, file: !298, line: 22, baseType: !51, size: 32, align: 32, offset: 192)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !297, file: !298, line: 23, baseType: !59, size: 64, align: 64, offset: 256)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !27, file: !14, line: 391, baseType: !306, size: 64, align: 64, offset: 1984)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64, align: 64)
!307 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !308, line: 11, size: 320, align: 64, elements: !309)
!308 = !DIFile(filename: "./Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!309 = !{!310, !311, !316, !321, !322}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !307, file: !308, line: 12, baseType: !59, size: 64, align: 64)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !307, file: !308, line: 13, baseType: !312, size: 64, align: 64, offset: 64)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !308, line: 8, baseType: !313)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64, align: 64)
!314 = !DISubroutineType(types: !315)
!315 = !{!12, !12, !11}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !307, file: !308, line: 14, baseType: !317, size: 64, align: 64, offset: 128)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !308, line: 9, baseType: !318)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64, align: 64)
!319 = !DISubroutineType(types: !320)
!320 = !{!51, !12, !12, !11}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !307, file: !308, line: 15, baseType: !59, size: 64, align: 64, offset: 192)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !307, file: !308, line: 16, baseType: !11, size: 64, align: 64, offset: 256)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !27, file: !14, line: 392, baseType: !26, size: 64, align: 64, offset: 2048)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !27, file: !14, line: 393, baseType: !12, size: 64, align: 64, offset: 2112)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !27, file: !14, line: 394, baseType: !326, size: 64, align: 64, offset: 2176)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !14, line: 325, baseType: !141)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !27, file: !14, line: 395, baseType: !328, size: 64, align: 64, offset: 2240)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !14, line: 326, baseType: !217)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !27, file: !14, line: 396, baseType: !18, size: 64, align: 64, offset: 2304)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !27, file: !14, line: 397, baseType: !331, size: 64, align: 64, offset: 2368)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !14, line: 327, baseType: !217)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !27, file: !14, line: 398, baseType: !333, size: 64, align: 64, offset: 2432)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !14, line: 329, baseType: !334)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64, align: 64)
!335 = !DISubroutineType(types: !336)
!336 = !{!12, !26, !18}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !27, file: !14, line: 399, baseType: !338, size: 64, align: 64, offset: 2496)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !14, line: 328, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64, align: 64)
!340 = !DISubroutineType(types: !341)
!341 = !{!12, !26, !12, !12}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !27, file: !14, line: 400, baseType: !343, size: 64, align: 64, offset: 2560)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !14, line: 307, baseType: !344)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64, align: 64)
!345 = !DISubroutineType(types: !346)
!346 = !{null, !11}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !27, file: !14, line: 401, baseType: !149, size: 64, align: 64, offset: 2624)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !27, file: !14, line: 402, baseType: !12, size: 64, align: 64, offset: 2688)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !27, file: !14, line: 403, baseType: !12, size: 64, align: 64, offset: 2752)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !27, file: !14, line: 404, baseType: !12, size: 64, align: 64, offset: 2816)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !27, file: !14, line: 405, baseType: !12, size: 64, align: 64, offset: 2880)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !27, file: !14, line: 406, baseType: !12, size: 64, align: 64, offset: 2944)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !27, file: !14, line: 407, baseType: !42, size: 64, align: 64, offset: 3008)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !27, file: !14, line: 410, baseType: !355, size: 32, align: 32, offset: 3072)
!355 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !27, file: !14, line: 412, baseType: !42, size: 64, align: 64, offset: 3136)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64, align: 64)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultibyteStatefulEncoderContext", file: !359, line: 82, baseType: !360)
!359 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/cjkcodecs/multibytecodec.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!360 = !DICompositeType(tag: DW_TAG_structure_type, file: !359, line: 80, size: 384, align: 64, elements: !361)
!361 = !{!362, !363, !444, !445, !446}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !360, file: !359, line: 81, baseType: !13, size: 128, align: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !360, file: !359, line: 81, baseType: !364, size: 64, align: 64, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64, align: 64)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultibyteCodec", file: !359, line: 58, baseType: !366)
!366 = !DICompositeType(tag: DW_TAG_structure_type, file: !359, line: 48, size: 576, align: 64, elements: !367)
!367 = !{!368, !369, !372, !377, !405, !410, !415, !437, !439}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !366, file: !359, line: 49, baseType: !36, size: 64, align: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !366, file: !359, line: 50, baseType: !370, size: 64, align: 64, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64, align: 64)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "codecinit", scope: !366, file: !359, line: 51, baseType: !373, size: 64, align: 64, offset: 128)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbcodec_init", file: !359, line: 27, baseType: !374)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64, align: 64)
!375 = !DISubroutineType(types: !376)
!376 = !{!51, !370}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "encode", scope: !366, file: !359, line: 52, baseType: !378, size: 64, align: 64, offset: 192)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbencode_func", file: !359, line: 28, baseType: !379)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64, align: 64)
!380 = !DISubroutineType(types: !381)
!381 = !{!18, !382, !370, !51, !11, !254, !18, !403, !18, !51}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64, align: 64)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultibyteCodec_State", file: !359, line: 25, baseType: !384)
!384 = !DICompositeType(tag: DW_TAG_union_type, file: !359, line: 19, size: 64, align: 64, elements: !385)
!385 = !{!386, !387, !388, !393, !398}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !384, file: !359, line: 20, baseType: !11, size: 64, align: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !384, file: !359, line: 21, baseType: !51, size: 32, align: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !384, file: !359, line: 22, baseType: !389, size: 64, align: 8)
!389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !390, size: 64, align: 8, elements: !391)
!390 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!391 = !{!392}
!392 = !DISubrange(count: 8)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "u2", scope: !384, file: !359, line: 23, baseType: !394, size: 64, align: 16)
!394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, size: 64, align: 16, elements: !396)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "ucs2_t", file: !359, line: 16, baseType: !84)
!396 = !{!397}
!397 = !DISubrange(count: 4)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "u4", scope: !384, file: !359, line: 24, baseType: !399, size: 64, align: 32)
!399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 64, align: 32, elements: !401)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS4", file: !4, line: 121, baseType: !355)
!401 = !{!402}
!402 = !DISubrange(count: 2)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64, align: 64)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64, align: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "encinit", scope: !366, file: !359, line: 53, baseType: !406, size: 64, align: 64, offset: 256)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbencodeinit_func", file: !359, line: 34, baseType: !407)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64, align: 64)
!408 = !DISubroutineType(types: !409)
!409 = !{!51, !382, !370}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "encreset", scope: !366, file: !359, line: 54, baseType: !411, size: 64, align: 64, offset: 320)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbencodereset_func", file: !359, line: 36, baseType: !412)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64, align: 64)
!413 = !DISubroutineType(types: !414)
!414 = !{!18, !382, !370, !403, !18}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !366, file: !359, line: 55, baseType: !416, size: 64, align: 64, offset: 384)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbdecode_func", file: !359, line: 39, baseType: !417)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64, align: 64)
!418 = !DISubroutineType(types: !419)
!419 = !{!18, !382, !370, !420, !18, !423}
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64, align: 64)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64, align: 64)
!422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !390)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64, align: 64)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyUnicodeWriter", file: !4, line: 917, baseType: !425)
!425 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 897, size: 448, align: 64, elements: !426)
!426 = !{!427, !428, !429, !430, !431, !432, !433, !434, !435, !436}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !425, file: !4, line: 898, baseType: !12, size: 64, align: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !425, file: !4, line: 899, baseType: !11, size: 64, align: 64, offset: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !425, file: !4, line: 900, baseType: !3, size: 32, align: 32, offset: 128)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "maxchar", scope: !425, file: !4, line: 901, baseType: !400, size: 32, align: 32, offset: 160)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !425, file: !4, line: 902, baseType: !18, size: 64, align: 64, offset: 192)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !425, file: !4, line: 903, baseType: !18, size: 64, align: 64, offset: 256)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "min_length", scope: !425, file: !4, line: 906, baseType: !18, size: 64, align: 64, offset: 320)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "min_char", scope: !425, file: !4, line: 909, baseType: !400, size: 32, align: 32, offset: 384)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "overallocate", scope: !425, file: !4, line: 912, baseType: !390, size: 8, align: 8, offset: 416)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !425, file: !4, line: 916, baseType: !390, size: 8, align: 8, offset: 424)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "decinit", scope: !366, file: !359, line: 56, baseType: !438, size: 64, align: 64, offset: 448)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbdecodeinit_func", file: !359, line: 43, baseType: !407)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "decreset", scope: !366, file: !359, line: 57, baseType: !440, size: 64, align: 64, offset: 512)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbdecodereset_func", file: !359, line: 45, baseType: !441)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64, align: 64)
!442 = !DISubroutineType(types: !443)
!443 = !{!18, !382, !370}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !360, file: !359, line: 81, baseType: !383, size: 64, align: 64, offset: 192)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !360, file: !359, line: 81, baseType: !12, size: 64, align: 64, offset: 256)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !360, file: !359, line: 81, baseType: !12, size: 64, align: 64, offset: 320)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64, align: 64)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyASCIIObject", file: !4, line: 351, baseType: !449)
!449 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 217, size: 384, align: 64, elements: !450)
!450 = !{!451, !452, !453, !454, !462}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !449, file: !4, line: 291, baseType: !13, size: 128, align: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !449, file: !4, line: 292, baseType: !18, size: 64, align: 64, offset: 128)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !449, file: !4, line: 293, baseType: !225, size: 64, align: 64, offset: 192)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !449, file: !4, line: 349, baseType: !455, size: 32, align: 32, offset: 256)
!455 = !DICompositeType(tag: DW_TAG_structure_type, scope: !449, file: !4, line: 294, size: 32, align: 32, elements: !456)
!456 = !{!457, !458, !459, !460, !461}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "interned", scope: !455, file: !4, line: 303, baseType: !355, size: 2, align: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !455, file: !4, line: 331, baseType: !355, size: 3, align: 32, offset: 2)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !455, file: !4, line: 336, baseType: !355, size: 1, align: 32, offset: 5)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !455, file: !4, line: 340, baseType: !355, size: 1, align: 32, offset: 6)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !455, file: !4, line: 345, baseType: !355, size: 1, align: 32, offset: 7)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "wstr", scope: !449, file: !4, line: 350, baseType: !463, size: 64, align: 64, offset: 320)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64, align: 64)
!464 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !102, line: 90, baseType: !51)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64, align: 64)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCompactUnicodeObject", file: !4, line: 363, baseType: !467)
!467 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 356, size: 576, align: 64, elements: !468)
!468 = !{!469, !470, !471, !472}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !467, file: !4, line: 357, baseType: !448, size: 384, align: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_length", scope: !467, file: !4, line: 358, baseType: !18, size: 64, align: 64, offset: 384)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !467, file: !4, line: 360, baseType: !59, size: 64, align: 64, offset: 448)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "wstr_length", scope: !467, file: !4, line: 361, baseType: !18, size: 64, align: 64, offset: 512)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64, align: 64)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyUnicodeObject", file: !4, line: 376, baseType: !475)
!475 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 368, size: 640, align: 64, elements: !476)
!476 = !{!477, !478}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !475, file: !4, line: 369, baseType: !466, size: 576, align: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !475, file: !4, line: 375, baseType: !479, size: 64, align: 64, offset: 576)
!479 = !DICompositeType(tag: DW_TAG_union_type, scope: !475, file: !4, line: 370, size: 64, align: 64, elements: !480)
!480 = !{!481, !482, !485, !488}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "any", scope: !479, file: !4, line: 371, baseType: !11, size: 64, align: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "latin1", scope: !479, file: !4, line: 372, baseType: !483, size: 64, align: 64)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64, align: 64)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS1", file: !4, line: 134, baseType: !390)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "ucs2", scope: !479, file: !4, line: 373, baseType: !486, size: 64, align: 64)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64, align: 64)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS2", file: !4, line: 129, baseType: !84)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "ucs4", scope: !479, file: !4, line: 374, baseType: !489, size: 64, align: 64)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64, align: 64)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64, align: 64)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !492, line: 41, baseType: !493)
!492 = !DIFile(filename: "./Include/bytesobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!493 = !DICompositeType(tag: DW_TAG_structure_type, file: !492, line: 31, size: 320, align: 64, elements: !494)
!494 = !{!495, !496, !497}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !493, file: !492, line: 32, baseType: !30, size: 192, align: 64)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !493, file: !492, line: 33, baseType: !225, size: 64, align: 64, offset: 192)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !493, file: !492, line: 34, baseType: !88, size: 8, align: 8, offset: 256)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64, align: 64)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64, align: 64)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !501, line: 33, baseType: !502)
!501 = !DIFile(filename: "./Include/tupleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!502 = !DICompositeType(tag: DW_TAG_structure_type, file: !501, line: 25, size: 256, align: 64, elements: !503)
!503 = !{!504, !505}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !502, file: !501, line: 26, baseType: !30, size: 192, align: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !502, file: !501, line: 27, baseType: !506, size: 64, align: 64, offset: 192)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 64, align: 64, elements: !89)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64, align: 64)
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultibyteIncrementalEncoderObject", file: !359, line: 95, baseType: !509)
!509 = !DICompositeType(tag: DW_TAG_structure_type, file: !359, line: 93, size: 384, align: 64, elements: !510)
!510 = !{!511, !512, !513, !514, !515}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !509, file: !359, line: 94, baseType: !13, size: 128, align: 64)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !509, file: !359, line: 94, baseType: !364, size: 64, align: 64, offset: 128)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !509, file: !359, line: 94, baseType: !383, size: 64, align: 64, offset: 192)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !509, file: !359, line: 94, baseType: !12, size: 64, align: 64, offset: 256)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !509, file: !359, line: 94, baseType: !12, size: 64, align: 64, offset: 320)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64, align: 64)
!517 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultibyteCodecObject", file: !359, line: 63, baseType: !518)
!518 = !DICompositeType(tag: DW_TAG_structure_type, file: !359, line: 60, size: 192, align: 64, elements: !519)
!519 = !{!520, !521}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !518, file: !359, line: 61, baseType: !13, size: 128, align: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !518, file: !359, line: 62, baseType: !364, size: 64, align: 64, offset: 128)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64, align: 64)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultibyteStatefulDecoderContext", file: !359, line: 91, baseType: !524)
!524 = !DICompositeType(tag: DW_TAG_structure_type, file: !359, line: 89, size: 448, align: 64, elements: !525)
!525 = !{!526, !527, !528, !529, !530, !531}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !524, file: !359, line: 90, baseType: !13, size: 128, align: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !524, file: !359, line: 90, baseType: !364, size: 64, align: 64, offset: 128)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !524, file: !359, line: 90, baseType: !383, size: 64, align: 64, offset: 192)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !524, file: !359, line: 90, baseType: !12, size: 64, align: 64, offset: 256)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !524, file: !359, line: 90, baseType: !389, size: 64, align: 8, offset: 320)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "pendingsize", scope: !524, file: !359, line: 90, baseType: !18, size: 64, align: 64, offset: 384)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64, align: 64)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultibyteIncrementalDecoderObject", file: !359, line: 99, baseType: !534)
!534 = !DICompositeType(tag: DW_TAG_structure_type, file: !359, line: 97, size: 448, align: 64, elements: !535)
!535 = !{!536, !537, !538, !539, !540, !541}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !534, file: !359, line: 98, baseType: !13, size: 128, align: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !534, file: !359, line: 98, baseType: !364, size: 64, align: 64, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !534, file: !359, line: 98, baseType: !383, size: 64, align: 64, offset: 192)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !534, file: !359, line: 98, baseType: !12, size: 64, align: 64, offset: 256)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !534, file: !359, line: 98, baseType: !389, size: 64, align: 8, offset: 320)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "pendingsize", scope: !534, file: !359, line: 98, baseType: !18, size: 64, align: 64, offset: 384)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64, align: 64)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultibyteStreamReaderObject", file: !359, line: 104, baseType: !544)
!544 = !DICompositeType(tag: DW_TAG_structure_type, file: !359, line: 101, size: 512, align: 64, elements: !545)
!545 = !{!546, !547, !548, !549, !550, !551, !552}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !544, file: !359, line: 102, baseType: !13, size: 128, align: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !544, file: !359, line: 102, baseType: !364, size: 64, align: 64, offset: 128)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !544, file: !359, line: 102, baseType: !383, size: 64, align: 64, offset: 192)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !544, file: !359, line: 102, baseType: !12, size: 64, align: 64, offset: 256)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !544, file: !359, line: 102, baseType: !389, size: 64, align: 8, offset: 320)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "pendingsize", scope: !544, file: !359, line: 102, baseType: !18, size: 64, align: 64, offset: 384)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !544, file: !359, line: 103, baseType: !12, size: 64, align: 64, offset: 448)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64, align: 64)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultibyteStreamWriterObject", file: !359, line: 109, baseType: !555)
!555 = !DICompositeType(tag: DW_TAG_structure_type, file: !359, line: 106, size: 448, align: 64, elements: !556)
!556 = !{!557, !558, !559, !560, !561, !562}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !555, file: !359, line: 107, baseType: !13, size: 128, align: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !555, file: !359, line: 107, baseType: !364, size: 64, align: 64, offset: 128)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !555, file: !359, line: 107, baseType: !383, size: 64, align: 64, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !555, file: !359, line: 107, baseType: !12, size: 64, align: 64, offset: 256)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !555, file: !359, line: 107, baseType: !12, size: 64, align: 64, offset: 320)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !555, file: !359, line: 108, baseType: !12, size: 64, align: 64, offset: 384)
!563 = !{!564, !577, !586, !598, !607, !676, !724, !773, !782, !798, !813, !827, !840, !866, !871, !893, !902, !914, !948, !956, !965, !988, !993, !998, !1003, !1023, !1037, !1053, !1061, !1104, !1110, !1120, !1125, !1130, !1151, !1165, !1181, !1187, !1199, !1211, !1232, !1237, !1258, !1263, !1316, !1330, !1370}
!564 = !DISubprogram(name: "PyInit__multibytecodec", scope: !565, file: !565, line: 1830, type: !566, isLocal: false, isDefinition: true, scopeLine: 1831, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* ()* @PyInit__multibytecodec, variables: !568)
!565 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/cjkcodecs/multibytecodec.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!566 = !DISubroutineType(types: !567)
!567 = !{!12}
!568 = !{!569, !570, !571}
!569 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !564, file: !565, line: 1832, type: !51)
!570 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !564, file: !565, line: 1833, type: !12)
!571 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "typelist", scope: !564, file: !565, line: 1834, type: !572)
!572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !573, size: 320, align: 64, elements: !575)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64, align: 64)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !14, line: 422, baseType: !27)
!575 = !{!576}
!576 = !DISubrange(count: 5)
!577 = !DISubprogram(name: "mbiencoder_dealloc", scope: !565, file: !565, line: 973, type: !578, isLocal: true, isDefinition: true, scopeLine: 974, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.MultibyteIncrementalEncoderObject*)* @mbiencoder_dealloc, variables: !580)
!578 = !DISubroutineType(types: !579)
!579 = !{null, !507}
!580 = !{!581, !582}
!581 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !577, file: !565, line: 973, type: !507)
!582 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !583, file: !565, line: 976, type: !12)
!583 = distinct !DILexicalBlock(scope: !584, file: !565, line: 976, column: 119)
!584 = distinct !DILexicalBlock(scope: !585, file: !565, line: 976, column: 14)
!585 = distinct !DILexicalBlock(scope: !577, file: !565, line: 976, column: 8)
!586 = !DISubprogram(name: "mbiencoder_traverse", scope: !565, file: !565, line: 964, type: !587, isLocal: true, isDefinition: true, scopeLine: 966, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.MultibyteIncrementalEncoderObject*, i32 (%struct._object*, i8*)*, i8*)* @mbiencoder_traverse, variables: !589)
!587 = !DISubroutineType(types: !588)
!588 = !{!51, !507, !270, !11}
!589 = !{!590, !591, !592, !593}
!590 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !586, file: !565, line: 964, type: !507)
!591 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !586, file: !565, line: 965, type: !270)
!592 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !586, file: !565, line: 965, type: !11)
!593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !594, file: !565, line: 968, type: !51)
!594 = distinct !DILexicalBlock(scope: !595, file: !565, line: 968, column: 32)
!595 = distinct !DILexicalBlock(scope: !596, file: !565, line: 968, column: 18)
!596 = distinct !DILexicalBlock(scope: !597, file: !565, line: 968, column: 12)
!597 = distinct !DILexicalBlock(scope: !586, file: !565, line: 967, column: 9)
!598 = !DISubprogram(name: "mbiencoder_encode", scope: !565, file: !565, line: 878, type: !599, isLocal: true, isDefinition: true, scopeLine: 880, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteIncrementalEncoderObject*, %struct._object*, %struct._object*)* @mbiencoder_encode, variables: !601)
!599 = !DISubroutineType(types: !600)
!600 = !{!12, !507, !12, !12}
!601 = !{!602, !603, !604, !605, !606}
!602 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !598, file: !565, line: 878, type: !507)
!603 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !598, file: !565, line: 879, type: !12)
!604 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !598, file: !565, line: 879, type: !12)
!605 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !598, file: !565, line: 881, type: !12)
!606 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "final", scope: !598, file: !565, line: 882, type: !51)
!607 = !DISubprogram(name: "encoder_encode_stateful", scope: !565, file: !565, line: 739, type: !608, isLocal: true, isDefinition: true, scopeLine: 741, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteStatefulEncoderContext*, %struct._object*, i32)* @encoder_encode_stateful, variables: !610)
!608 = !DISubroutineType(types: !609)
!609 = !{!12, !357, !12, !51}
!610 = !{!611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !627, !630, !632, !636, !640, !644, !646, !649, !651, !653, !656, !658, !661, !663, !666, !668, !671, !673}
!611 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 1, scope: !607, file: !565, line: 739, type: !357)
!612 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unistr", arg: 2, scope: !607, file: !565, line: 740, type: !12)
!613 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "final", arg: 3, scope: !607, file: !565, line: 740, type: !51)
!614 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ucvt", scope: !607, file: !565, line: 742, type: !12)
!615 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !607, file: !565, line: 742, type: !12)
!616 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inbuf", scope: !607, file: !565, line: 743, type: !12)
!617 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inpos", scope: !607, file: !565, line: 744, type: !18)
!618 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "datalen", scope: !607, file: !565, line: 744, type: !18)
!619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "origpending", scope: !607, file: !565, line: 745, type: !12)
!620 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !621, file: !565, line: 756, type: !12)
!621 = distinct !DILexicalBlock(scope: !622, file: !565, line: 756, column: 16)
!622 = distinct !DILexicalBlock(scope: !623, file: !565, line: 753, column: 90)
!623 = distinct !DILexicalBlock(scope: !624, file: !565, line: 753, column: 18)
!624 = distinct !DILexicalBlock(scope: !625, file: !565, line: 751, column: 13)
!625 = distinct !DILexicalBlock(scope: !626, file: !565, line: 749, column: 10)
!626 = distinct !DILexicalBlock(scope: !607, file: !565, line: 747, column: 9)
!627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inbuf_tmp", scope: !628, file: !565, line: 762, type: !12)
!628 = distinct !DILexicalBlock(scope: !629, file: !565, line: 761, column: 23)
!629 = distinct !DILexicalBlock(scope: !607, file: !565, line: 761, column: 9)
!630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !631, file: !565, line: 772, type: !12)
!631 = distinct !DILexicalBlock(scope: !628, file: !565, line: 772, column: 12)
!632 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !633, file: !565, line: 772, type: !12)
!633 = distinct !DILexicalBlock(scope: !634, file: !565, line: 772, column: 123)
!634 = distinct !DILexicalBlock(scope: !635, file: !565, line: 772, column: 89)
!635 = distinct !DILexicalBlock(scope: !631, file: !565, line: 772, column: 66)
!636 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !637, file: !565, line: 791, type: !12)
!637 = distinct !DILexicalBlock(scope: !638, file: !565, line: 791, column: 12)
!638 = distinct !DILexicalBlock(scope: !639, file: !565, line: 789, column: 26)
!639 = distinct !DILexicalBlock(scope: !607, file: !565, line: 789, column: 9)
!640 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !641, file: !565, line: 791, type: !12)
!641 = distinct !DILexicalBlock(scope: !642, file: !565, line: 791, column: 123)
!642 = distinct !DILexicalBlock(scope: !643, file: !565, line: 791, column: 89)
!643 = distinct !DILexicalBlock(scope: !637, file: !565, line: 791, column: 66)
!644 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !645, file: !565, line: 796, type: !12)
!645 = distinct !DILexicalBlock(scope: !607, file: !565, line: 796, column: 8)
!646 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !647, file: !565, line: 796, type: !12)
!647 = distinct !DILexicalBlock(scope: !648, file: !565, line: 796, column: 103)
!648 = distinct !DILexicalBlock(scope: !645, file: !565, line: 796, column: 69)
!649 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !650, file: !565, line: 812, type: !12)
!650 = distinct !DILexicalBlock(scope: !607, file: !565, line: 812, column: 8)
!651 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !652, file: !565, line: 813, type: !12)
!652 = distinct !DILexicalBlock(scope: !607, file: !565, line: 813, column: 8)
!653 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !654, file: !565, line: 813, type: !12)
!654 = distinct !DILexicalBlock(scope: !655, file: !565, line: 813, column: 96)
!655 = distinct !DILexicalBlock(scope: !652, file: !565, line: 813, column: 62)
!656 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !657, file: !565, line: 817, type: !12)
!657 = distinct !DILexicalBlock(scope: !607, file: !565, line: 817, column: 8)
!658 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !659, file: !565, line: 817, type: !12)
!659 = distinct !DILexicalBlock(scope: !660, file: !565, line: 817, column: 93)
!660 = distinct !DILexicalBlock(scope: !657, file: !565, line: 817, column: 59)
!661 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !662, file: !565, line: 818, type: !12)
!662 = distinct !DILexicalBlock(scope: !607, file: !565, line: 818, column: 8)
!663 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !664, file: !565, line: 818, type: !12)
!664 = distinct !DILexicalBlock(scope: !665, file: !565, line: 818, column: 96)
!665 = distinct !DILexicalBlock(scope: !662, file: !565, line: 818, column: 62)
!666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !667, file: !565, line: 819, type: !12)
!667 = distinct !DILexicalBlock(scope: !607, file: !565, line: 819, column: 8)
!668 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !669, file: !565, line: 819, type: !12)
!669 = distinct !DILexicalBlock(scope: !670, file: !565, line: 819, column: 103)
!670 = distinct !DILexicalBlock(scope: !667, file: !565, line: 819, column: 69)
!671 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !672, file: !565, line: 820, type: !12)
!672 = distinct !DILexicalBlock(scope: !607, file: !565, line: 820, column: 8)
!673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !674, file: !565, line: 820, type: !12)
!674 = distinct !DILexicalBlock(scope: !675, file: !565, line: 820, column: 97)
!675 = distinct !DILexicalBlock(scope: !672, file: !565, line: 820, column: 63)
!676 = !DISubprogram(name: "multibytecodec_encode", scope: !565, file: !565, line: 467, type: !677, isLocal: true, isDefinition: true, scopeLine: 471, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteCodec*, %union.MultibyteCodec_State*, %struct._object*, i64*, %struct._object*, i32)* @multibytecodec_encode, variables: !679)
!677 = !DISubroutineType(types: !678)
!678 = !{!12, !364, !382, !12, !254, !12, !51}
!679 = !{!680, !681, !682, !683, !684, !685, !686, !697, !698, !699, !700, !701, !702, !704, !709, !711, !714, !716, !719, !721}
!680 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "codec", arg: 1, scope: !676, file: !565, line: 467, type: !364)
!681 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !676, file: !565, line: 468, type: !382)
!682 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 3, scope: !676, file: !565, line: 469, type: !12)
!683 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "inpos_t", arg: 4, scope: !676, file: !565, line: 469, type: !254)
!684 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "errors", arg: 5, scope: !676, file: !565, line: 470, type: !12)
!685 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 6, scope: !676, file: !565, line: 470, type: !51)
!686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !676, file: !565, line: 472, type: !687)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultibyteEncodeBuffer", file: !565, line: 17, baseType: !688)
!688 = !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 12, size: 448, align: 64, elements: !689)
!689 = !{!690, !691, !692, !693, !694, !695, !696}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "inobj", scope: !688, file: !565, line: 13, baseType: !12, size: 64, align: 64)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "inpos", scope: !688, file: !565, line: 14, baseType: !18, size: 64, align: 64, offset: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "inlen", scope: !688, file: !565, line: 14, baseType: !18, size: 64, align: 64, offset: 128)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "outbuf", scope: !688, file: !565, line: 15, baseType: !404, size: 64, align: 64, offset: 192)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "outbuf_end", scope: !688, file: !565, line: 15, baseType: !404, size: 64, align: 64, offset: 256)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "excobj", scope: !688, file: !565, line: 16, baseType: !12, size: 64, align: 64, offset: 320)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "outobj", scope: !688, file: !565, line: 16, baseType: !12, size: 64, align: 64, offset: 384)
!697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "finalsize", scope: !676, file: !565, line: 473, type: !18)
!698 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !676, file: !565, line: 473, type: !18)
!699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "datalen", scope: !676, file: !565, line: 474, type: !18)
!700 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !676, file: !565, line: 475, type: !51)
!701 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !676, file: !565, line: 476, type: !11)
!702 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "outleft", scope: !703, file: !565, line: 507, type: !18)
!703 = distinct !DILexicalBlock(scope: !676, file: !565, line: 504, column: 35)
!704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "outleft", scope: !705, file: !565, line: 523, type: !18)
!705 = distinct !DILexicalBlock(scope: !706, file: !565, line: 522, column: 18)
!706 = distinct !DILexicalBlock(scope: !707, file: !565, line: 522, column: 9)
!707 = distinct !DILexicalBlock(scope: !708, file: !565, line: 522, column: 9)
!708 = distinct !DILexicalBlock(scope: !676, file: !565, line: 521, column: 9)
!709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !710, file: !565, line: 544, type: !12)
!710 = distinct !DILexicalBlock(scope: !676, file: !565, line: 544, column: 8)
!711 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !712, file: !565, line: 544, type: !12)
!712 = distinct !DILexicalBlock(scope: !713, file: !565, line: 544, column: 102)
!713 = distinct !DILexicalBlock(scope: !710, file: !565, line: 544, column: 68)
!714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !715, file: !565, line: 548, type: !12)
!715 = distinct !DILexicalBlock(scope: !676, file: !565, line: 548, column: 8)
!716 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !717, file: !565, line: 548, type: !12)
!717 = distinct !DILexicalBlock(scope: !718, file: !565, line: 548, column: 102)
!718 = distinct !DILexicalBlock(scope: !715, file: !565, line: 548, column: 68)
!719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !720, file: !565, line: 549, type: !12)
!720 = distinct !DILexicalBlock(scope: !676, file: !565, line: 549, column: 8)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !722, file: !565, line: 549, type: !12)
!722 = distinct !DILexicalBlock(scope: !723, file: !565, line: 549, column: 102)
!723 = distinct !DILexicalBlock(scope: !720, file: !565, line: 549, column: 68)
!724 = !DISubprogram(name: "multibytecodec_encerror", scope: !565, file: !565, line: 209, type: !725, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.MultibyteCodec*, %union.MultibyteCodec_State*, %struct.MultibyteEncodeBuffer*, %struct._object*, i64)* @multibytecodec_encerror, variables: !728)
!725 = !DISubroutineType(types: !726)
!726 = !{!51, !364, !382, !727, !12, !18}
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64, align: 64)
!728 = !{!729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !746, !747, !748, !749, !750, !754, !756, !759, !761, !763, !765, !768, !770}
!729 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "codec", arg: 1, scope: !724, file: !565, line: 209, type: !364)
!730 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !724, file: !565, line: 210, type: !382)
!731 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 3, scope: !724, file: !565, line: 211, type: !727)
!732 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "errors", arg: 4, scope: !724, file: !565, line: 212, type: !12)
!733 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "e", arg: 5, scope: !724, file: !565, line: 212, type: !18)
!734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retobj", scope: !724, file: !565, line: 214, type: !12)
!735 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retstr", scope: !724, file: !565, line: 214, type: !12)
!736 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tobj", scope: !724, file: !565, line: 214, type: !12)
!737 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retstrsize", scope: !724, file: !565, line: 215, type: !18)
!738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newpos", scope: !724, file: !565, line: 215, type: !18)
!739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "esize", scope: !724, file: !565, line: 216, type: !18)
!740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !724, file: !565, line: 216, type: !18)
!741 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "end", scope: !724, file: !565, line: 216, type: !18)
!742 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reason", scope: !724, file: !565, line: 217, type: !36)
!743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "replchar", scope: !744, file: !565, line: 244, type: !12)
!744 = distinct !DILexicalBlock(scope: !745, file: !565, line: 243, column: 36)
!745 = distinct !DILexicalBlock(scope: !724, file: !565, line: 243, column: 9)
!746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !744, file: !565, line: 245, type: !18)
!747 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inpos", scope: !744, file: !565, line: 246, type: !18)
!748 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !744, file: !565, line: 247, type: !51)
!749 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !744, file: !565, line: 248, type: !11)
!750 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "outleft", scope: !751, file: !565, line: 258, type: !18)
!751 = distinct !DILexicalBlock(scope: !752, file: !565, line: 257, column: 18)
!752 = distinct !DILexicalBlock(scope: !753, file: !565, line: 257, column: 9)
!753 = distinct !DILexicalBlock(scope: !744, file: !565, line: 257, column: 9)
!754 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !755, file: !565, line: 271, type: !12)
!755 = distinct !DILexicalBlock(scope: !744, file: !565, line: 271, column: 12)
!756 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inpos", scope: !757, file: !565, line: 320, type: !18)
!757 = distinct !DILexicalBlock(scope: !758, file: !565, line: 319, column: 78)
!758 = distinct !DILexicalBlock(scope: !724, file: !565, line: 319, column: 9)
!759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !760, file: !565, line: 352, type: !12)
!760 = distinct !DILexicalBlock(scope: !724, file: !565, line: 352, column: 8)
!761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !762, file: !565, line: 353, type: !12)
!762 = distinct !DILexicalBlock(scope: !724, file: !565, line: 353, column: 8)
!763 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !764, file: !565, line: 357, type: !12)
!764 = distinct !DILexicalBlock(scope: !724, file: !565, line: 357, column: 8)
!765 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !766, file: !565, line: 357, type: !12)
!766 = distinct !DILexicalBlock(scope: !767, file: !565, line: 357, column: 98)
!767 = distinct !DILexicalBlock(scope: !764, file: !565, line: 357, column: 64)
!768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !769, file: !565, line: 358, type: !12)
!769 = distinct !DILexicalBlock(scope: !724, file: !565, line: 358, column: 8)
!770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !771, file: !565, line: 358, type: !12)
!771 = distinct !DILexicalBlock(scope: !772, file: !565, line: 358, column: 98)
!772 = distinct !DILexicalBlock(scope: !769, file: !565, line: 358, column: 64)
!773 = !DISubprogram(name: "expand_encodebuffer", scope: !565, file: !565, line: 176, type: !774, isLocal: true, isDefinition: true, scopeLine: 177, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.MultibyteEncodeBuffer*, i64)* @expand_encodebuffer, variables: !776)
!774 = !DISubroutineType(types: !775)
!775 = !{!51, !727, !18}
!776 = !{!777, !778, !779, !780, !781}
!777 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 1, scope: !773, file: !565, line: 176, type: !727)
!778 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "esize", arg: 2, scope: !773, file: !565, line: 176, type: !18)
!779 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "orgpos", scope: !773, file: !565, line: 178, type: !18)
!780 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "orgsize", scope: !773, file: !565, line: 178, type: !18)
!781 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "incsize", scope: !773, file: !565, line: 178, type: !18)
!782 = !DISubprogram(name: "call_error_callback", scope: !565, file: !565, line: 95, type: !133, isLocal: true, isDefinition: true, scopeLine: 96, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @call_error_callback, variables: !783)
!783 = !{!784, !785, !786, !787, !788, !789, !790, !794, !796}
!784 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "errors", arg: 1, scope: !782, file: !565, line: 95, type: !12)
!785 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exc", arg: 2, scope: !782, file: !565, line: 95, type: !12)
!786 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !782, file: !565, line: 97, type: !12)
!787 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cb", scope: !782, file: !565, line: 97, type: !12)
!788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !782, file: !565, line: 97, type: !12)
!789 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !782, file: !565, line: 98, type: !36)
!790 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !791, file: !565, line: 110, type: !12)
!791 = distinct !DILexicalBlock(scope: !792, file: !565, line: 110, column: 12)
!792 = distinct !DILexicalBlock(scope: !793, file: !565, line: 109, column: 29)
!793 = distinct !DILexicalBlock(scope: !782, file: !565, line: 109, column: 9)
!794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !795, file: !565, line: 118, type: !12)
!795 = distinct !DILexicalBlock(scope: !782, file: !565, line: 118, column: 8)
!796 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !797, file: !565, line: 119, type: !12)
!797 = distinct !DILexicalBlock(scope: !782, file: !565, line: 119, column: 8)
!798 = !DISubprogram(name: "mbiencoder_reset", scope: !565, file: !565, line: 892, type: !799, isLocal: true, isDefinition: true, scopeLine: 893, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteIncrementalEncoderObject*)* @mbiencoder_reset, variables: !801)
!799 = !DISubroutineType(types: !800)
!800 = !{!12, !507}
!801 = !{!802, !803, !805, !806, !807, !809}
!802 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !798, file: !565, line: 892, type: !507)
!803 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !798, file: !565, line: 895, type: !804)
!804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !390, size: 32, align: 8, elements: !396)
!805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "outbuf", scope: !798, file: !565, line: 895, type: !404)
!806 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !798, file: !565, line: 896, type: !18)
!807 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !808, file: !565, line: 904, type: !12)
!808 = distinct !DILexicalBlock(scope: !798, file: !565, line: 904, column: 8)
!809 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !810, file: !565, line: 904, type: !12)
!810 = distinct !DILexicalBlock(scope: !811, file: !565, line: 904, column: 121)
!811 = distinct !DILexicalBlock(scope: !812, file: !565, line: 904, column: 86)
!812 = distinct !DILexicalBlock(scope: !808, file: !565, line: 904, column: 63)
!813 = !DISubprogram(name: "codecctx_errors_get", scope: !565, file: !565, line: 124, type: !814, isLocal: true, isDefinition: true, scopeLine: 125, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteStatefulCodecContext*)* @codecctx_errors_get, variables: !824)
!814 = !DISubroutineType(types: !815)
!815 = !{!12, !816}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64, align: 64)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultibyteStatefulCodecContext", file: !359, line: 74, baseType: !818)
!818 = !DICompositeType(tag: DW_TAG_structure_type, file: !359, line: 72, size: 320, align: 64, elements: !819)
!819 = !{!820, !821, !822, !823}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !818, file: !359, line: 73, baseType: !13, size: 128, align: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !818, file: !359, line: 73, baseType: !364, size: 64, align: 64, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !818, file: !359, line: 73, baseType: !383, size: 64, align: 64, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !818, file: !359, line: 73, baseType: !12, size: 64, align: 64, offset: 256)
!824 = !{!825, !826}
!825 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !813, file: !565, line: 124, type: !816)
!826 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !813, file: !565, line: 126, type: !36)
!827 = !DISubprogram(name: "codecctx_errors_set", scope: !565, file: !565, line: 143, type: !828, isLocal: true, isDefinition: true, scopeLine: 145, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.MultibyteStatefulCodecContext*, %struct._object*, i8*)* @codecctx_errors_set, variables: !830)
!828 = !DISubroutineType(types: !829)
!829 = !{!51, !816, !12, !11}
!830 = !{!831, !832, !833, !834, !835, !836}
!831 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !827, file: !565, line: 143, type: !816)
!832 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !827, file: !565, line: 143, type: !12)
!833 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 3, scope: !827, file: !565, line: 144, type: !11)
!834 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cb", scope: !827, file: !565, line: 146, type: !12)
!835 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !827, file: !565, line: 147, type: !36)
!836 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !837, file: !565, line: 162, type: !12)
!837 = distinct !DILexicalBlock(scope: !838, file: !565, line: 162, column: 119)
!838 = distinct !DILexicalBlock(scope: !839, file: !565, line: 162, column: 14)
!839 = distinct !DILexicalBlock(scope: !827, file: !565, line: 162, column: 8)
!840 = !DISubprogram(name: "internal_error_callback", scope: !565, file: !565, line: 82, type: !841, isLocal: true, isDefinition: true, scopeLine: 83, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*)* @internal_error_callback, variables: !843)
!841 = !DISubroutineType(types: !842)
!842 = !{!12, !36}
!843 = !{!844, !845, !848, !849, !851, !852, !855, !856, !858, !859, !862, !863, !865}
!844 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "errors", arg: 1, scope: !840, file: !565, line: 82, type: !36)
!845 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !846, file: !565, line: 84, type: !101)
!846 = distinct !DILexicalBlock(scope: !847, file: !565, line: 84, column: 48)
!847 = distinct !DILexicalBlock(scope: !840, file: !565, line: 84, column: 9)
!848 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !846, file: !565, line: 84, type: !101)
!849 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !850, file: !565, line: 84, type: !421)
!850 = distinct !DILexicalBlock(scope: !846, file: !565, line: 84, column: 1645)
!851 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !850, file: !565, line: 84, type: !51)
!852 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !853, file: !565, line: 86, type: !101)
!853 = distinct !DILexicalBlock(scope: !854, file: !565, line: 86, column: 29)
!854 = distinct !DILexicalBlock(scope: !847, file: !565, line: 86, column: 14)
!855 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !853, file: !565, line: 86, type: !101)
!856 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !857, file: !565, line: 86, type: !421)
!857 = distinct !DILexicalBlock(scope: !853, file: !565, line: 86, column: 1626)
!858 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !857, file: !565, line: 86, type: !51)
!859 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !860, file: !565, line: 88, type: !101)
!860 = distinct !DILexicalBlock(scope: !861, file: !565, line: 88, column: 29)
!861 = distinct !DILexicalBlock(scope: !854, file: !565, line: 88, column: 14)
!862 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !860, file: !565, line: 88, type: !101)
!863 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !864, file: !565, line: 88, type: !421)
!864 = distinct !DILexicalBlock(scope: !860, file: !565, line: 88, column: 1641)
!865 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !864, file: !565, line: 88, type: !51)
!866 = !DISubprogram(name: "mbiencoder_init", scope: !565, file: !565, line: 958, type: !218, isLocal: true, isDefinition: true, scopeLine: 959, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @mbiencoder_init, variables: !867)
!867 = !{!868, !869, !870}
!868 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !866, file: !565, line: 958, type: !12)
!869 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !866, file: !565, line: 958, type: !12)
!870 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !866, file: !565, line: 958, type: !12)
!871 = !DISubprogram(name: "mbiencoder_new", scope: !565, file: !565, line: 917, type: !872, isLocal: true, isDefinition: true, scopeLine: 918, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @mbiencoder_new, variables: !874)
!872 = !DISubroutineType(types: !873)
!873 = !{!12, !573, !12, !12}
!874 = !{!875, !876, !877, !878, !879, !880, !881, !883, !885, !888, !890}
!875 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !871, file: !565, line: 917, type: !573)
!876 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !871, file: !565, line: 917, type: !12)
!877 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !871, file: !565, line: 917, type: !12)
!878 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !871, file: !565, line: 919, type: !507)
!879 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "codec", scope: !871, file: !565, line: 920, type: !12)
!880 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !871, file: !565, line: 921, type: !59)
!881 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !882, file: !565, line: 948, type: !12)
!882 = distinct !DILexicalBlock(scope: !871, file: !565, line: 948, column: 8)
!883 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !884, file: !565, line: 952, type: !12)
!884 = distinct !DILexicalBlock(scope: !871, file: !565, line: 952, column: 8)
!885 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !886, file: !565, line: 952, type: !12)
!886 = distinct !DILexicalBlock(scope: !887, file: !565, line: 952, column: 96)
!887 = distinct !DILexicalBlock(scope: !884, file: !565, line: 952, column: 62)
!888 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !889, file: !565, line: 953, type: !12)
!889 = distinct !DILexicalBlock(scope: !871, file: !565, line: 953, column: 8)
!890 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !891, file: !565, line: 953, type: !12)
!891 = distinct !DILexicalBlock(scope: !892, file: !565, line: 953, column: 97)
!892 = distinct !DILexicalBlock(scope: !889, file: !565, line: 953, column: 63)
!893 = !DISubprogram(name: "mbidecoder_dealloc", scope: !565, file: !565, line: 1185, type: !894, isLocal: true, isDefinition: true, scopeLine: 1186, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.MultibyteIncrementalDecoderObject*)* @mbidecoder_dealloc, variables: !896)
!894 = !DISubroutineType(types: !895)
!895 = !{null, !532}
!896 = !{!897, !898}
!897 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !893, file: !565, line: 1185, type: !532)
!898 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !899, file: !565, line: 1188, type: !12)
!899 = distinct !DILexicalBlock(scope: !900, file: !565, line: 1188, column: 119)
!900 = distinct !DILexicalBlock(scope: !901, file: !565, line: 1188, column: 14)
!901 = distinct !DILexicalBlock(scope: !893, file: !565, line: 1188, column: 8)
!902 = !DISubprogram(name: "mbidecoder_traverse", scope: !565, file: !565, line: 1176, type: !903, isLocal: true, isDefinition: true, scopeLine: 1178, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.MultibyteIncrementalDecoderObject*, i32 (%struct._object*, i8*)*, i8*)* @mbidecoder_traverse, variables: !905)
!903 = !DISubroutineType(types: !904)
!904 = !{!51, !532, !270, !11}
!905 = !{!906, !907, !908, !909}
!906 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !902, file: !565, line: 1176, type: !532)
!907 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !902, file: !565, line: 1177, type: !270)
!908 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !902, file: !565, line: 1177, type: !11)
!909 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !910, file: !565, line: 1180, type: !51)
!910 = distinct !DILexicalBlock(scope: !911, file: !565, line: 1180, column: 32)
!911 = distinct !DILexicalBlock(scope: !912, file: !565, line: 1180, column: 18)
!912 = distinct !DILexicalBlock(scope: !913, file: !565, line: 1180, column: 12)
!913 = distinct !DILexicalBlock(scope: !902, file: !565, line: 1179, column: 9)
!914 = !DISubprogram(name: "mbidecoder_decode", scope: !565, file: !565, line: 1029, type: !915, isLocal: true, isDefinition: true, scopeLine: 1031, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteIncrementalDecoderObject*, %struct._object*, %struct._object*)* @mbidecoder_decode, variables: !917)
!915 = !DISubroutineType(types: !916)
!916 = !{!12, !532, !12, !12}
!917 = !{!918, !919, !920, !921, !930, !931, !932, !933, !934, !935, !936, !937, !938, !940, !943, !945}
!918 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !914, file: !565, line: 1029, type: !532)
!919 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !914, file: !565, line: 1030, type: !12)
!920 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !914, file: !565, line: 1030, type: !12)
!921 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !914, file: !565, line: 1032, type: !922)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultibyteDecodeBuffer", file: !565, line: 23, baseType: !923)
!923 = !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 19, size: 704, align: 64, elements: !924)
!924 = !{!925, !926, !927, !928, !929}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "inbuf", scope: !923, file: !565, line: 20, baseType: !421, size: 64, align: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "inbuf_top", scope: !923, file: !565, line: 20, baseType: !421, size: 64, align: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "inbuf_end", scope: !923, file: !565, line: 20, baseType: !421, size: 64, align: 64, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "excobj", scope: !923, file: !565, line: 21, baseType: !12, size: 64, align: 64, offset: 192)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !923, file: !565, line: 22, baseType: !424, size: 448, align: 64, offset: 256)
!930 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !914, file: !565, line: 1033, type: !59)
!931 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wdata", scope: !914, file: !565, line: 1033, type: !59)
!932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pdata", scope: !914, file: !565, line: 1034, type: !243)
!933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wsize", scope: !914, file: !565, line: 1035, type: !18)
!934 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !914, file: !565, line: 1035, type: !18)
!935 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "origpending", scope: !914, file: !565, line: 1035, type: !18)
!936 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "final", scope: !914, file: !565, line: 1036, type: !51)
!937 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !914, file: !565, line: 1037, type: !12)
!938 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !939, file: !565, line: 1097, type: !12)
!939 = distinct !DILexicalBlock(scope: !914, file: !565, line: 1097, column: 8)
!940 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !941, file: !565, line: 1097, type: !12)
!941 = distinct !DILexicalBlock(scope: !942, file: !565, line: 1097, column: 102)
!942 = distinct !DILexicalBlock(scope: !939, file: !565, line: 1097, column: 68)
!943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !944, file: !565, line: 1104, type: !12)
!944 = distinct !DILexicalBlock(scope: !914, file: !565, line: 1104, column: 8)
!945 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !946, file: !565, line: 1104, type: !12)
!946 = distinct !DILexicalBlock(scope: !947, file: !565, line: 1104, column: 102)
!947 = distinct !DILexicalBlock(scope: !944, file: !565, line: 1104, column: 68)
!948 = !DISubprogram(name: "decoder_prepare_buffer", scope: !565, file: !565, line: 842, type: !949, isLocal: true, isDefinition: true, scopeLine: 844, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.MultibyteDecodeBuffer*, i8*, i64)* @decoder_prepare_buffer, variables: !952)
!949 = !DISubroutineType(types: !950)
!950 = !{!51, !951, !36, !18}
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64, align: 64)
!952 = !{!953, !954, !955}
!953 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 1, scope: !948, file: !565, line: 842, type: !951)
!954 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 2, scope: !948, file: !565, line: 842, type: !36)
!955 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 3, scope: !948, file: !565, line: 843, type: !18)
!956 = !DISubprogram(name: "decoder_feed_buffer", scope: !565, file: !565, line: 852, type: !957, isLocal: true, isDefinition: true, scopeLine: 854, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.MultibyteStatefulDecoderContext*, %struct.MultibyteDecodeBuffer*)* @decoder_feed_buffer, variables: !959)
!957 = !DISubroutineType(types: !958)
!958 = !{!51, !522, !951}
!959 = !{!960, !961, !962, !964}
!960 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 1, scope: !956, file: !565, line: 852, type: !522)
!961 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !956, file: !565, line: 853, type: !951)
!962 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inleft", scope: !963, file: !565, line: 856, type: !18)
!963 = distinct !DILexicalBlock(scope: !956, file: !565, line: 855, column: 41)
!964 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !963, file: !565, line: 857, type: !18)
!965 = !DISubprogram(name: "multibytecodec_decerror", scope: !565, file: !565, line: 363, type: !966, isLocal: true, isDefinition: true, scopeLine: 367, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.MultibyteCodec*, %union.MultibyteCodec_State*, %struct.MultibyteDecodeBuffer*, %struct._object*, i64)* @multibytecodec_decerror, variables: !968)
!966 = !DISubroutineType(types: !967)
!967 = !{!51, !364, !382, !951, !12, !18}
!968 = !{!969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !983, !985}
!969 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "codec", arg: 1, scope: !965, file: !565, line: 363, type: !364)
!970 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !965, file: !565, line: 364, type: !382)
!971 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 3, scope: !965, file: !565, line: 365, type: !951)
!972 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "errors", arg: 4, scope: !965, file: !565, line: 366, type: !12)
!973 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "e", arg: 5, scope: !965, file: !565, line: 366, type: !18)
!974 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retobj", scope: !965, file: !565, line: 368, type: !12)
!975 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retuni", scope: !965, file: !565, line: 368, type: !12)
!976 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newpos", scope: !965, file: !565, line: 369, type: !18)
!977 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reason", scope: !965, file: !565, line: 370, type: !36)
!978 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "esize", scope: !965, file: !565, line: 371, type: !18)
!979 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !965, file: !565, line: 371, type: !18)
!980 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "end", scope: !965, file: !565, line: 371, type: !18)
!981 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !982, file: !565, line: 458, type: !12)
!982 = distinct !DILexicalBlock(scope: !965, file: !565, line: 458, column: 8)
!983 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !984, file: !565, line: 462, type: !12)
!984 = distinct !DILexicalBlock(scope: !965, file: !565, line: 462, column: 8)
!985 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !986, file: !565, line: 462, type: !12)
!986 = distinct !DILexicalBlock(scope: !987, file: !565, line: 462, column: 98)
!987 = distinct !DILexicalBlock(scope: !984, file: !565, line: 462, column: 64)
!988 = !DISubprogram(name: "decoder_append_pending", scope: !565, file: !565, line: 825, type: !957, isLocal: true, isDefinition: true, scopeLine: 827, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.MultibyteStatefulDecoderContext*, %struct.MultibyteDecodeBuffer*)* @decoder_append_pending, variables: !989)
!989 = !{!990, !991, !992}
!990 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 1, scope: !988, file: !565, line: 825, type: !522)
!991 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !988, file: !565, line: 826, type: !951)
!992 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "npendings", scope: !988, file: !565, line: 828, type: !18)
!993 = !DISubprogram(name: "mbidecoder_reset", scope: !565, file: !565, line: 1110, type: !994, isLocal: true, isDefinition: true, scopeLine: 1111, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteIncrementalDecoderObject*)* @mbidecoder_reset, variables: !996)
!994 = !DISubroutineType(types: !995)
!995 = !{!12, !532}
!996 = !{!997}
!997 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !993, file: !565, line: 1110, type: !532)
!998 = !DISubprogram(name: "mbidecoder_init", scope: !565, file: !565, line: 1170, type: !218, isLocal: true, isDefinition: true, scopeLine: 1171, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @mbidecoder_init, variables: !999)
!999 = !{!1000, !1001, !1002}
!1000 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !998, file: !565, line: 1170, type: !12)
!1001 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !998, file: !565, line: 1170, type: !12)
!1002 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !998, file: !565, line: 1170, type: !12)
!1003 = !DISubprogram(name: "mbidecoder_new", scope: !565, file: !565, line: 1129, type: !872, isLocal: true, isDefinition: true, scopeLine: 1130, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @mbidecoder_new, variables: !1004)
!1004 = !{!1005, !1006, !1007, !1008, !1009, !1010, !1011, !1013, !1015, !1018, !1020}
!1005 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1003, file: !565, line: 1129, type: !573)
!1006 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1003, file: !565, line: 1129, type: !12)
!1007 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1003, file: !565, line: 1129, type: !12)
!1008 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1003, file: !565, line: 1131, type: !532)
!1009 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "codec", scope: !1003, file: !565, line: 1132, type: !12)
!1010 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !1003, file: !565, line: 1133, type: !59)
!1011 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1012, file: !565, line: 1160, type: !12)
!1012 = distinct !DILexicalBlock(scope: !1003, file: !565, line: 1160, column: 8)
!1013 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1014, file: !565, line: 1164, type: !12)
!1014 = distinct !DILexicalBlock(scope: !1003, file: !565, line: 1164, column: 8)
!1015 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1016, file: !565, line: 1164, type: !12)
!1016 = distinct !DILexicalBlock(scope: !1017, file: !565, line: 1164, column: 96)
!1017 = distinct !DILexicalBlock(scope: !1014, file: !565, line: 1164, column: 62)
!1018 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1019, file: !565, line: 1165, type: !12)
!1019 = distinct !DILexicalBlock(scope: !1003, file: !565, line: 1165, column: 8)
!1020 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1021, file: !565, line: 1165, type: !12)
!1021 = distinct !DILexicalBlock(scope: !1022, file: !565, line: 1165, column: 97)
!1022 = distinct !DILexicalBlock(scope: !1019, file: !565, line: 1165, column: 63)
!1023 = !DISubprogram(name: "mbstreamreader_dealloc", scope: !565, file: !565, line: 1513, type: !1024, isLocal: true, isDefinition: true, scopeLine: 1514, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.MultibyteStreamReaderObject*)* @mbstreamreader_dealloc, variables: !1026)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{null, !542}
!1026 = !{!1027, !1028, !1032, !1034}
!1027 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1023, file: !565, line: 1513, type: !542)
!1028 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1029, file: !565, line: 1516, type: !12)
!1029 = distinct !DILexicalBlock(scope: !1030, file: !565, line: 1516, column: 119)
!1030 = distinct !DILexicalBlock(scope: !1031, file: !565, line: 1516, column: 14)
!1031 = distinct !DILexicalBlock(scope: !1023, file: !565, line: 1516, column: 8)
!1032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1033, file: !565, line: 1517, type: !12)
!1033 = distinct !DILexicalBlock(scope: !1023, file: !565, line: 1517, column: 8)
!1034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1035, file: !565, line: 1517, type: !12)
!1035 = distinct !DILexicalBlock(scope: !1036, file: !565, line: 1517, column: 104)
!1036 = distinct !DILexicalBlock(scope: !1033, file: !565, line: 1517, column: 70)
!1037 = !DISubprogram(name: "mbstreamreader_traverse", scope: !565, file: !565, line: 1503, type: !1038, isLocal: true, isDefinition: true, scopeLine: 1505, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.MultibyteStreamReaderObject*, i32 (%struct._object*, i8*)*, i8*)* @mbstreamreader_traverse, variables: !1040)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!51, !542, !270, !11}
!1040 = !{!1041, !1042, !1043, !1044, !1049}
!1041 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1037, file: !565, line: 1503, type: !542)
!1042 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1037, file: !565, line: 1504, type: !270)
!1043 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1037, file: !565, line: 1504, type: !11)
!1044 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1045, file: !565, line: 1507, type: !51)
!1045 = distinct !DILexicalBlock(scope: !1046, file: !565, line: 1507, column: 32)
!1046 = distinct !DILexicalBlock(scope: !1047, file: !565, line: 1507, column: 18)
!1047 = distinct !DILexicalBlock(scope: !1048, file: !565, line: 1507, column: 12)
!1048 = distinct !DILexicalBlock(scope: !1037, file: !565, line: 1506, column: 9)
!1049 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1050, file: !565, line: 1508, type: !51)
!1050 = distinct !DILexicalBlock(scope: !1051, file: !565, line: 1508, column: 28)
!1051 = distinct !DILexicalBlock(scope: !1052, file: !565, line: 1508, column: 14)
!1052 = distinct !DILexicalBlock(scope: !1037, file: !565, line: 1508, column: 8)
!1053 = !DISubprogram(name: "mbstreamreader_read", scope: !565, file: !565, line: 1346, type: !1054, isLocal: true, isDefinition: true, scopeLine: 1347, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteStreamReaderObject*, %struct._object*)* @mbstreamreader_read, variables: !1056)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!12, !542, !12}
!1056 = !{!1057, !1058, !1059, !1060}
!1057 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1053, file: !565, line: 1346, type: !542)
!1058 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1053, file: !565, line: 1346, type: !12)
!1059 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sizeobj", scope: !1053, file: !565, line: 1348, type: !12)
!1060 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1053, file: !565, line: 1349, type: !18)
!1061 = !DISubprogram(name: "mbstreamreader_iread", scope: !565, file: !565, line: 1241, type: !1062, isLocal: true, isDefinition: true, scopeLine: 1243, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteStreamReaderObject*, i8*, i64)* @mbstreamreader_iread, variables: !1064)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!12, !542, !36, !18}
!1064 = !{!1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1076, !1079, !1080, !1082, !1084, !1086, !1089, !1091, !1094, !1096, !1099, !1101}
!1065 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1061, file: !565, line: 1241, type: !542)
!1066 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "method", arg: 2, scope: !1061, file: !565, line: 1242, type: !36)
!1067 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sizehint", arg: 3, scope: !1061, file: !565, line: 1242, type: !18)
!1068 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1061, file: !565, line: 1244, type: !922)
!1069 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cres", scope: !1061, file: !565, line: 1245, type: !12)
!1070 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1061, file: !565, line: 1245, type: !12)
!1071 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rsize", scope: !1061, file: !565, line: 1246, type: !18)
!1072 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "endoffile", scope: !1073, file: !565, line: 1256, type: !51)
!1073 = distinct !DILexicalBlock(scope: !1074, file: !565, line: 1255, column: 14)
!1074 = distinct !DILexicalBlock(scope: !1075, file: !565, line: 1255, column: 5)
!1075 = distinct !DILexicalBlock(scope: !1061, file: !565, line: 1255, column: 5)
!1076 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ctr", scope: !1077, file: !565, line: 1278, type: !12)
!1077 = distinct !DILexicalBlock(scope: !1078, file: !565, line: 1277, column: 36)
!1078 = distinct !DILexicalBlock(scope: !1073, file: !565, line: 1277, column: 13)
!1079 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ctrdata", scope: !1077, file: !565, line: 1279, type: !59)
!1080 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1081, file: !565, line: 1294, type: !12)
!1081 = distinct !DILexicalBlock(scope: !1077, file: !565, line: 1294, column: 16)
!1082 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1083, file: !565, line: 1321, type: !12)
!1083 = distinct !DILexicalBlock(scope: !1073, file: !565, line: 1321, column: 12)
!1084 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1085, file: !565, line: 1334, type: !12)
!1085 = distinct !DILexicalBlock(scope: !1061, file: !565, line: 1334, column: 8)
!1086 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1087, file: !565, line: 1334, type: !12)
!1087 = distinct !DILexicalBlock(scope: !1088, file: !565, line: 1334, column: 96)
!1088 = distinct !DILexicalBlock(scope: !1085, file: !565, line: 1334, column: 62)
!1089 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1090, file: !565, line: 1335, type: !12)
!1090 = distinct !DILexicalBlock(scope: !1061, file: !565, line: 1335, column: 8)
!1091 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1092, file: !565, line: 1335, type: !12)
!1092 = distinct !DILexicalBlock(scope: !1093, file: !565, line: 1335, column: 102)
!1093 = distinct !DILexicalBlock(scope: !1090, file: !565, line: 1335, column: 68)
!1094 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1095, file: !565, line: 1339, type: !12)
!1095 = distinct !DILexicalBlock(scope: !1061, file: !565, line: 1339, column: 8)
!1096 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1097, file: !565, line: 1339, type: !12)
!1097 = distinct !DILexicalBlock(scope: !1098, file: !565, line: 1339, column: 96)
!1098 = distinct !DILexicalBlock(scope: !1095, file: !565, line: 1339, column: 62)
!1099 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1100, file: !565, line: 1340, type: !12)
!1100 = distinct !DILexicalBlock(scope: !1061, file: !565, line: 1340, column: 8)
!1101 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1102, file: !565, line: 1340, type: !12)
!1102 = distinct !DILexicalBlock(scope: !1103, file: !565, line: 1340, column: 102)
!1103 = distinct !DILexicalBlock(scope: !1100, file: !565, line: 1340, column: 68)
!1104 = !DISubprogram(name: "mbstreamreader_readline", scope: !565, file: !565, line: 1370, type: !1054, isLocal: true, isDefinition: true, scopeLine: 1371, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteStreamReaderObject*, %struct._object*)* @mbstreamreader_readline, variables: !1105)
!1105 = !{!1106, !1107, !1108, !1109}
!1106 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1104, file: !565, line: 1370, type: !542)
!1107 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1104, file: !565, line: 1370, type: !12)
!1108 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sizeobj", scope: !1104, file: !565, line: 1372, type: !12)
!1109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1104, file: !565, line: 1373, type: !18)
!1110 = !DISubprogram(name: "mbstreamreader_readlines", scope: !565, file: !565, line: 1394, type: !1054, isLocal: true, isDefinition: true, scopeLine: 1395, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteStreamReaderObject*, %struct._object*)* @mbstreamreader_readlines, variables: !1111)
!1111 = !{!1112, !1113, !1114, !1115, !1116, !1117, !1118}
!1112 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1110, file: !565, line: 1394, type: !542)
!1113 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1110, file: !565, line: 1394, type: !12)
!1114 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sizehintobj", scope: !1110, file: !565, line: 1396, type: !12)
!1115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1110, file: !565, line: 1396, type: !12)
!1116 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sr", scope: !1110, file: !565, line: 1396, type: !12)
!1117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sizehint", scope: !1110, file: !565, line: 1397, type: !18)
!1118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1119, file: !565, line: 1419, type: !12)
!1119 = distinct !DILexicalBlock(scope: !1110, file: !565, line: 1419, column: 8)
!1120 = !DISubprogram(name: "mbstreamreader_reset", scope: !565, file: !565, line: 1424, type: !1121, isLocal: true, isDefinition: true, scopeLine: 1425, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteStreamReaderObject*)* @mbstreamreader_reset, variables: !1123)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!12, !542}
!1123 = !{!1124}
!1124 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1120, file: !565, line: 1424, type: !542)
!1125 = !DISubprogram(name: "mbstreamreader_init", scope: !565, file: !565, line: 1497, type: !218, isLocal: true, isDefinition: true, scopeLine: 1498, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @mbstreamreader_init, variables: !1126)
!1126 = !{!1127, !1128, !1129}
!1127 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1125, file: !565, line: 1497, type: !12)
!1128 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1125, file: !565, line: 1497, type: !12)
!1129 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1125, file: !565, line: 1497, type: !12)
!1130 = !DISubprogram(name: "mbstreamreader_new", scope: !565, file: !565, line: 1454, type: !872, isLocal: true, isDefinition: true, scopeLine: 1455, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @mbstreamreader_new, variables: !1131)
!1131 = !{!1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1141, !1143, !1146, !1148}
!1132 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1130, file: !565, line: 1454, type: !573)
!1133 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1130, file: !565, line: 1454, type: !12)
!1134 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1130, file: !565, line: 1454, type: !12)
!1135 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1130, file: !565, line: 1456, type: !542)
!1136 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stream", scope: !1130, file: !565, line: 1457, type: !12)
!1137 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "codec", scope: !1130, file: !565, line: 1457, type: !12)
!1138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !1130, file: !565, line: 1458, type: !59)
!1139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1140, file: !565, line: 1487, type: !12)
!1140 = distinct !DILexicalBlock(scope: !1130, file: !565, line: 1487, column: 8)
!1141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1142, file: !565, line: 1491, type: !12)
!1142 = distinct !DILexicalBlock(scope: !1130, file: !565, line: 1491, column: 8)
!1143 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1144, file: !565, line: 1491, type: !12)
!1144 = distinct !DILexicalBlock(scope: !1145, file: !565, line: 1491, column: 96)
!1145 = distinct !DILexicalBlock(scope: !1142, file: !565, line: 1491, column: 62)
!1146 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1147, file: !565, line: 1492, type: !12)
!1147 = distinct !DILexicalBlock(scope: !1130, file: !565, line: 1492, column: 8)
!1148 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1149, file: !565, line: 1492, type: !12)
!1149 = distinct !DILexicalBlock(scope: !1150, file: !565, line: 1492, column: 97)
!1150 = distinct !DILexicalBlock(scope: !1147, file: !565, line: 1492, column: 63)
!1151 = !DISubprogram(name: "mbstreamwriter_dealloc", scope: !565, file: !565, line: 1715, type: !1152, isLocal: true, isDefinition: true, scopeLine: 1716, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.MultibyteStreamWriterObject*)* @mbstreamwriter_dealloc, variables: !1154)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{null, !553}
!1154 = !{!1155, !1156, !1160, !1162}
!1155 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1151, file: !565, line: 1715, type: !553)
!1156 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1157, file: !565, line: 1718, type: !12)
!1157 = distinct !DILexicalBlock(scope: !1158, file: !565, line: 1718, column: 119)
!1158 = distinct !DILexicalBlock(scope: !1159, file: !565, line: 1718, column: 14)
!1159 = distinct !DILexicalBlock(scope: !1151, file: !565, line: 1718, column: 8)
!1160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1161, file: !565, line: 1719, type: !12)
!1161 = distinct !DILexicalBlock(scope: !1151, file: !565, line: 1719, column: 8)
!1162 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1163, file: !565, line: 1719, type: !12)
!1163 = distinct !DILexicalBlock(scope: !1164, file: !565, line: 1719, column: 104)
!1164 = distinct !DILexicalBlock(scope: !1161, file: !565, line: 1719, column: 70)
!1165 = !DISubprogram(name: "mbstreamwriter_traverse", scope: !565, file: !565, line: 1705, type: !1166, isLocal: true, isDefinition: true, scopeLine: 1707, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.MultibyteStreamWriterObject*, i32 (%struct._object*, i8*)*, i8*)* @mbstreamwriter_traverse, variables: !1168)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{!51, !553, !270, !11}
!1168 = !{!1169, !1170, !1171, !1172, !1177}
!1169 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1165, file: !565, line: 1705, type: !553)
!1170 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1165, file: !565, line: 1706, type: !270)
!1171 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1165, file: !565, line: 1706, type: !11)
!1172 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1173, file: !565, line: 1709, type: !51)
!1173 = distinct !DILexicalBlock(scope: !1174, file: !565, line: 1709, column: 32)
!1174 = distinct !DILexicalBlock(scope: !1175, file: !565, line: 1709, column: 18)
!1175 = distinct !DILexicalBlock(scope: !1176, file: !565, line: 1709, column: 12)
!1176 = distinct !DILexicalBlock(scope: !1165, file: !565, line: 1708, column: 9)
!1177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1178, file: !565, line: 1710, type: !51)
!1178 = distinct !DILexicalBlock(scope: !1179, file: !565, line: 1710, column: 28)
!1179 = distinct !DILexicalBlock(scope: !1180, file: !565, line: 1710, column: 14)
!1180 = distinct !DILexicalBlock(scope: !1165, file: !565, line: 1710, column: 8)
!1181 = !DISubprogram(name: "mbstreamwriter_write", scope: !565, file: !565, line: 1589, type: !1182, isLocal: true, isDefinition: true, scopeLine: 1590, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteStreamWriterObject*, %struct._object*)* @mbstreamwriter_write, variables: !1184)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!12, !553, !12}
!1184 = !{!1185, !1186}
!1185 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1181, file: !565, line: 1589, type: !553)
!1186 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strobj", arg: 2, scope: !1181, file: !565, line: 1589, type: !12)
!1187 = !DISubprogram(name: "mbstreamwriter_iwrite", scope: !565, file: !565, line: 1570, type: !1188, isLocal: true, isDefinition: true, scopeLine: 1572, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.MultibyteStreamWriterObject*, %struct._object*)* @mbstreamwriter_iwrite, variables: !1190)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!51, !553, !12}
!1190 = !{!1191, !1192, !1193, !1194, !1195, !1197}
!1191 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1187, file: !565, line: 1570, type: !553)
!1192 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unistr", arg: 2, scope: !1187, file: !565, line: 1571, type: !12)
!1193 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1187, file: !565, line: 1573, type: !12)
!1194 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wr", scope: !1187, file: !565, line: 1573, type: !12)
!1195 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1196, file: !565, line: 1580, type: !12)
!1196 = distinct !DILexicalBlock(scope: !1187, file: !565, line: 1580, column: 8)
!1197 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1198, file: !565, line: 1584, type: !12)
!1198 = distinct !DILexicalBlock(scope: !1187, file: !565, line: 1584, column: 8)
!1199 = !DISubprogram(name: "mbstreamwriter_writelines", scope: !565, file: !565, line: 1598, type: !1182, isLocal: true, isDefinition: true, scopeLine: 1599, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteStreamWriterObject*, %struct._object*)* @mbstreamwriter_writelines, variables: !1200)
!1200 = !{!1201, !1202, !1203, !1204, !1205, !1206}
!1201 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1199, file: !565, line: 1598, type: !553)
!1202 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lines", arg: 2, scope: !1199, file: !565, line: 1598, type: !12)
!1203 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "strobj", scope: !1199, file: !565, line: 1600, type: !12)
!1204 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1199, file: !565, line: 1601, type: !51)
!1205 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1199, file: !565, line: 1601, type: !51)
!1206 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1207, file: !565, line: 1616, type: !12)
!1207 = distinct !DILexicalBlock(scope: !1208, file: !565, line: 1616, column: 12)
!1208 = distinct !DILexicalBlock(scope: !1209, file: !565, line: 1609, column: 50)
!1209 = distinct !DILexicalBlock(scope: !1210, file: !565, line: 1609, column: 5)
!1210 = distinct !DILexicalBlock(scope: !1199, file: !565, line: 1609, column: 5)
!1211 = !DISubprogram(name: "mbstreamwriter_reset", scope: !565, file: !565, line: 1625, type: !1212, isLocal: true, isDefinition: true, scopeLine: 1626, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteStreamWriterObject*)* @mbstreamwriter_reset, variables: !1214)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!12, !553}
!1214 = !{!1215, !1216, !1217, !1219, !1223, !1226, !1230}
!1215 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1211, file: !565, line: 1625, type: !553)
!1216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pwrt", scope: !1211, file: !565, line: 1627, type: !12)
!1217 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1218, file: !565, line: 1636, type: !12)
!1218 = distinct !DILexicalBlock(scope: !1211, file: !565, line: 1636, column: 8)
!1219 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1220, file: !565, line: 1636, type: !12)
!1220 = distinct !DILexicalBlock(scope: !1221, file: !565, line: 1636, column: 121)
!1221 = distinct !DILexicalBlock(scope: !1222, file: !565, line: 1636, column: 86)
!1222 = distinct !DILexicalBlock(scope: !1218, file: !565, line: 1636, column: 63)
!1223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wr", scope: !1224, file: !565, line: 1642, type: !12)
!1224 = distinct !DILexicalBlock(scope: !1225, file: !565, line: 1641, column: 33)
!1225 = distinct !DILexicalBlock(scope: !1211, file: !565, line: 1641, column: 9)
!1226 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1227, file: !565, line: 1646, type: !12)
!1227 = distinct !DILexicalBlock(scope: !1228, file: !565, line: 1646, column: 16)
!1228 = distinct !DILexicalBlock(scope: !1229, file: !565, line: 1645, column: 31)
!1229 = distinct !DILexicalBlock(scope: !1224, file: !565, line: 1645, column: 13)
!1230 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1231, file: !565, line: 1650, type: !12)
!1231 = distinct !DILexicalBlock(scope: !1211, file: !565, line: 1650, column: 8)
!1232 = !DISubprogram(name: "mbstreamwriter_init", scope: !565, file: !565, line: 1699, type: !218, isLocal: true, isDefinition: true, scopeLine: 1700, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @mbstreamwriter_init, variables: !1233)
!1233 = !{!1234, !1235, !1236}
!1234 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1232, file: !565, line: 1699, type: !12)
!1235 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1232, file: !565, line: 1699, type: !12)
!1236 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1232, file: !565, line: 1699, type: !12)
!1237 = !DISubprogram(name: "mbstreamwriter_new", scope: !565, file: !565, line: 1656, type: !872, isLocal: true, isDefinition: true, scopeLine: 1657, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @mbstreamwriter_new, variables: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1248, !1250, !1253, !1255}
!1239 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1237, file: !565, line: 1656, type: !573)
!1240 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1237, file: !565, line: 1656, type: !12)
!1241 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1237, file: !565, line: 1656, type: !12)
!1242 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1237, file: !565, line: 1658, type: !553)
!1243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stream", scope: !1237, file: !565, line: 1659, type: !12)
!1244 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "codec", scope: !1237, file: !565, line: 1659, type: !12)
!1245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !1237, file: !565, line: 1660, type: !59)
!1246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1247, file: !565, line: 1689, type: !12)
!1247 = distinct !DILexicalBlock(scope: !1237, file: !565, line: 1689, column: 8)
!1248 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1249, file: !565, line: 1693, type: !12)
!1249 = distinct !DILexicalBlock(scope: !1237, file: !565, line: 1693, column: 8)
!1250 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1251, file: !565, line: 1693, type: !12)
!1251 = distinct !DILexicalBlock(scope: !1252, file: !565, line: 1693, column: 96)
!1252 = distinct !DILexicalBlock(scope: !1249, file: !565, line: 1693, column: 62)
!1253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1254, file: !565, line: 1694, type: !12)
!1254 = distinct !DILexicalBlock(scope: !1237, file: !565, line: 1694, column: 8)
!1255 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1256, file: !565, line: 1694, type: !12)
!1256 = distinct !DILexicalBlock(scope: !1257, file: !565, line: 1694, column: 97)
!1257 = distinct !DILexicalBlock(scope: !1254, file: !565, line: 1694, column: 63)
!1258 = !DISubprogram(name: "multibytecodec_dealloc", scope: !565, file: !565, line: 693, type: !1259, isLocal: true, isDefinition: true, scopeLine: 694, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.MultibyteCodecObject*)* @multibytecodec_dealloc, variables: !1261)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{null, !516}
!1261 = !{!1262}
!1262 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1258, file: !565, line: 693, type: !516)
!1263 = !DISubprogram(name: "MultibyteCodec_Encode", scope: !565, file: !565, line: 554, type: !1264, isLocal: true, isDefinition: true, scopeLine: 556, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteCodecObject*, %struct._object*, %struct._object*)* @MultibyteCodec_Encode, variables: !1266)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!12, !516, !12, !12}
!1266 = !{!1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1284, !1288, !1291, !1295, !1298, !1302, !1304, !1307, !1311, !1313}
!1267 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1263, file: !565, line: 554, type: !516)
!1268 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1263, file: !565, line: 555, type: !12)
!1269 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1263, file: !565, line: 555, type: !12)
!1270 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !1263, file: !565, line: 557, type: !383)
!1271 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errorcb", scope: !1263, file: !565, line: 558, type: !12)
!1272 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1263, file: !565, line: 558, type: !12)
!1273 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "arg", scope: !1263, file: !565, line: 558, type: !12)
!1274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ucvt", scope: !1263, file: !565, line: 558, type: !12)
!1275 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !1263, file: !565, line: 559, type: !36)
!1276 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "datalen", scope: !1263, file: !565, line: 560, type: !18)
!1277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1278, file: !565, line: 575, type: !12)
!1278 = distinct !DILexicalBlock(scope: !1279, file: !565, line: 575, column: 16)
!1279 = distinct !DILexicalBlock(scope: !1280, file: !565, line: 572, column: 87)
!1280 = distinct !DILexicalBlock(scope: !1281, file: !565, line: 572, column: 18)
!1281 = distinct !DILexicalBlock(scope: !1282, file: !565, line: 570, column: 13)
!1282 = distinct !DILexicalBlock(scope: !1283, file: !565, line: 568, column: 10)
!1283 = distinct !DILexicalBlock(scope: !1263, file: !565, line: 566, column: 9)
!1284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1285, file: !565, line: 581, type: !12)
!1285 = distinct !DILexicalBlock(scope: !1286, file: !565, line: 581, column: 12)
!1286 = distinct !DILexicalBlock(scope: !1287, file: !565, line: 580, column: 111)
!1287 = distinct !DILexicalBlock(scope: !1263, file: !565, line: 580, column: 9)
!1288 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1289, file: !565, line: 581, type: !12)
!1289 = distinct !DILexicalBlock(scope: !1290, file: !565, line: 581, column: 100)
!1290 = distinct !DILexicalBlock(scope: !1285, file: !565, line: 581, column: 66)
!1291 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1292, file: !565, line: 588, type: !12)
!1292 = distinct !DILexicalBlock(scope: !1293, file: !565, line: 588, column: 12)
!1293 = distinct !DILexicalBlock(scope: !1294, file: !565, line: 587, column: 32)
!1294 = distinct !DILexicalBlock(scope: !1263, file: !565, line: 587, column: 9)
!1295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1296, file: !565, line: 588, type: !12)
!1296 = distinct !DILexicalBlock(scope: !1297, file: !565, line: 588, column: 100)
!1297 = distinct !DILexicalBlock(scope: !1292, file: !565, line: 588, column: 66)
!1298 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1299, file: !565, line: 601, type: !12)
!1299 = distinct !DILexicalBlock(scope: !1300, file: !565, line: 601, column: 104)
!1300 = distinct !DILexicalBlock(scope: !1301, file: !565, line: 601, column: 14)
!1301 = distinct !DILexicalBlock(scope: !1263, file: !565, line: 601, column: 8)
!1302 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1303, file: !565, line: 602, type: !12)
!1303 = distinct !DILexicalBlock(scope: !1263, file: !565, line: 602, column: 8)
!1304 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1305, file: !565, line: 602, type: !12)
!1305 = distinct !DILexicalBlock(scope: !1306, file: !565, line: 602, column: 96)
!1306 = distinct !DILexicalBlock(scope: !1303, file: !565, line: 602, column: 62)
!1307 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1308, file: !565, line: 606, type: !12)
!1308 = distinct !DILexicalBlock(scope: !1309, file: !565, line: 606, column: 104)
!1309 = distinct !DILexicalBlock(scope: !1310, file: !565, line: 606, column: 14)
!1310 = distinct !DILexicalBlock(scope: !1263, file: !565, line: 606, column: 8)
!1311 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1312, file: !565, line: 607, type: !12)
!1312 = distinct !DILexicalBlock(scope: !1263, file: !565, line: 607, column: 8)
!1313 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1314, file: !565, line: 607, type: !12)
!1314 = distinct !DILexicalBlock(scope: !1315, file: !565, line: 607, column: 96)
!1315 = distinct !DILexicalBlock(scope: !1312, file: !565, line: 607, column: 62)
!1316 = !DISubprogram(name: "make_tuple", scope: !565, file: !565, line: 57, type: !191, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i64)* @make_tuple, variables: !1317)
!1317 = !{!1318, !1319, !1320, !1321, !1322, !1326}
!1318 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 1, scope: !1316, file: !565, line: 57, type: !12)
!1319 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !1316, file: !565, line: 57, type: !18)
!1320 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1316, file: !565, line: 59, type: !12)
!1321 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w", scope: !1316, file: !565, line: 59, type: !12)
!1322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1323, file: !565, line: 66, type: !12)
!1323 = distinct !DILexicalBlock(scope: !1324, file: !565, line: 66, column: 12)
!1324 = distinct !DILexicalBlock(scope: !1325, file: !565, line: 65, column: 26)
!1325 = distinct !DILexicalBlock(scope: !1316, file: !565, line: 65, column: 9)
!1326 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1327, file: !565, line: 73, type: !12)
!1327 = distinct !DILexicalBlock(scope: !1328, file: !565, line: 73, column: 12)
!1328 = distinct !DILexicalBlock(scope: !1329, file: !565, line: 72, column: 26)
!1329 = distinct !DILexicalBlock(scope: !1316, file: !565, line: 72, column: 9)
!1330 = !DISubprogram(name: "MultibyteCodec_Decode", scope: !565, file: !565, line: 612, type: !1264, isLocal: true, isDefinition: true, scopeLine: 614, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.MultibyteCodecObject*, %struct._object*, %struct._object*)* @MultibyteCodec_Decode, variables: !1331)
!1331 = !{!1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1349, !1351, !1352, !1354, !1357, !1361, !1365, !1367}
!1332 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1330, file: !565, line: 612, type: !516)
!1333 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1330, file: !565, line: 613, type: !12)
!1334 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1330, file: !565, line: 613, type: !12)
!1335 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !1330, file: !565, line: 615, type: !383)
!1336 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1330, file: !565, line: 616, type: !922)
!1337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errorcb", scope: !1330, file: !565, line: 617, type: !12)
!1338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1330, file: !565, line: 617, type: !12)
!1339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pdata", scope: !1330, file: !565, line: 618, type: !243)
!1340 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1330, file: !565, line: 619, type: !36)
!1341 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !1330, file: !565, line: 619, type: !36)
!1342 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "datalen", scope: !1330, file: !565, line: 620, type: !18)
!1343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1344, file: !565, line: 636, type: !12)
!1344 = distinct !DILexicalBlock(scope: !1345, file: !565, line: 636, column: 108)
!1345 = distinct !DILexicalBlock(scope: !1346, file: !565, line: 636, column: 18)
!1346 = distinct !DILexicalBlock(scope: !1347, file: !565, line: 636, column: 12)
!1347 = distinct !DILexicalBlock(scope: !1348, file: !565, line: 634, column: 23)
!1348 = distinct !DILexicalBlock(scope: !1330, file: !565, line: 634, column: 9)
!1349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inleft", scope: !1350, file: !565, line: 651, type: !18)
!1350 = distinct !DILexicalBlock(scope: !1330, file: !565, line: 650, column: 39)
!1351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1350, file: !565, line: 651, type: !18)
!1352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1353, file: !565, line: 669, type: !12)
!1353 = distinct !DILexicalBlock(scope: !1330, file: !565, line: 669, column: 8)
!1354 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1355, file: !565, line: 669, type: !12)
!1355 = distinct !DILexicalBlock(scope: !1356, file: !565, line: 669, column: 102)
!1356 = distinct !DILexicalBlock(scope: !1353, file: !565, line: 669, column: 68)
!1357 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1358, file: !565, line: 670, type: !12)
!1358 = distinct !DILexicalBlock(scope: !1359, file: !565, line: 670, column: 104)
!1359 = distinct !DILexicalBlock(scope: !1360, file: !565, line: 670, column: 14)
!1360 = distinct !DILexicalBlock(scope: !1330, file: !565, line: 670, column: 8)
!1361 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1362, file: !565, line: 675, type: !12)
!1362 = distinct !DILexicalBlock(scope: !1363, file: !565, line: 675, column: 104)
!1363 = distinct !DILexicalBlock(scope: !1364, file: !565, line: 675, column: 14)
!1364 = distinct !DILexicalBlock(scope: !1330, file: !565, line: 675, column: 8)
!1365 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1366, file: !565, line: 676, type: !12)
!1366 = distinct !DILexicalBlock(scope: !1330, file: !565, line: 676, column: 8)
!1367 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1368, file: !565, line: 676, type: !12)
!1368 = distinct !DILexicalBlock(scope: !1369, file: !565, line: 676, column: 102)
!1369 = distinct !DILexicalBlock(scope: !1366, file: !565, line: 676, column: 68)
!1370 = !DISubprogram(name: "__create_codec", scope: !565, file: !565, line: 1789, type: !133, isLocal: true, isDefinition: true, scopeLine: 1790, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @__create_codec, variables: !1371)
!1371 = !{!1372, !1373, !1374, !1375}
!1372 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ignore", arg: 1, scope: !1370, file: !565, line: 1789, type: !12)
!1373 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1370, file: !565, line: 1789, type: !12)
!1374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1370, file: !565, line: 1791, type: !516)
!1375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "codec", scope: !1370, file: !565, line: 1792, type: !364)
!1376 = !{!1377, !1378, !1382, !1384, !1387, !1389, !1390, !1391, !1392, !1394, !1397, !1398, !1399, !1401, !1409, !1410, !1411, !1412, !1413, !1417, !1421, !1444}
!1377 = !DIGlobalVariable(name: "MultibyteIncrementalEncoder_Type", scope: !0, file: !565, line: 980, type: !574, isLocal: true, isDefinition: true, variable: %struct._typeobject* @MultibyteIncrementalEncoder_Type)
!1378 = !DIGlobalVariable(name: "mbiencoder_methods", scope: !0, file: !565, line: 908, type: !1379, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @mbiencoder_methods)
!1379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !287, size: 768, align: 64, elements: !1380)
!1380 = !{!1381}
!1381 = !DISubrange(count: 3)
!1382 = !DIGlobalVariable(name: "incrementalkwarglist", scope: !0, file: !565, line: 45, type: !1383, isLocal: true, isDefinition: true, variable: [3 x i8*]* @incrementalkwarglist)
!1383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !59, size: 192, align: 64, elements: !1380)
!1384 = !DIGlobalVariable(name: "codecctx_getsets", scope: !0, file: !565, line: 168, type: !1385, isLocal: true, isDefinition: true, variable: [2 x %struct.PyGetSetDef]* @codecctx_getsets)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1386, size: 640, align: 64, elements: !401)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !308, line: 17, baseType: !307)
!1387 = !DIGlobalVariable(name: "incnewkwarglist", scope: !0, file: !565, line: 44, type: !1388, isLocal: true, isDefinition: true, variable: [2 x i8*]* @incnewkwarglist)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !59, size: 128, align: 64, elements: !401)
!1389 = !DIGlobalVariable(name: "MultibyteIncrementalDecoder_Type", scope: !0, file: !565, line: 1192, type: !574, isLocal: true, isDefinition: true, variable: %struct._typeobject* @MultibyteIncrementalDecoder_Type)
!1390 = !DIGlobalVariable(name: "mbidecoder_methods", scope: !0, file: !565, line: 1120, type: !1379, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @mbidecoder_methods)
!1391 = !DIGlobalVariable(name: "MultibyteStreamReader_Type", scope: !0, file: !565, line: 1521, type: !574, isLocal: true, isDefinition: true, variable: %struct._typeobject* @MultibyteStreamReader_Type)
!1392 = !DIGlobalVariable(name: "mbstreamreader_methods", scope: !0, file: !565, line: 1434, type: !1393, isLocal: true, isDefinition: true, variable: [5 x %struct.PyMethodDef]* @mbstreamreader_methods)
!1393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !287, size: 1280, align: 64, elements: !575)
!1394 = !DIGlobalVariable(name: "mbstreamreader_members", scope: !0, file: !565, line: 1446, type: !1395, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMemberDef]* @mbstreamreader_members)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 640, align: 64, elements: !401)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemberDef", file: !298, line: 24, baseType: !297)
!1397 = !DIGlobalVariable(name: "streamkwarglist", scope: !0, file: !565, line: 46, type: !1383, isLocal: true, isDefinition: true, variable: [3 x i8*]* @streamkwarglist)
!1398 = !DIGlobalVariable(name: "MultibyteStreamWriter_Type", scope: !0, file: !565, line: 1740, type: !574, isLocal: true, isDefinition: true, variable: %struct._typeobject* @MultibyteStreamWriter_Type)
!1399 = !DIGlobalVariable(name: "mbstreamwriter_methods", scope: !0, file: !565, line: 1723, type: !1400, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @mbstreamwriter_methods)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !287, size: 1024, align: 64, elements: !396)
!1401 = !DIGlobalVariable(name: "PyId_write", scope: !0, file: !565, line: 54, type: !1402, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_write)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_Identifier", file: !14, line: 144, baseType: !1403)
!1403 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_Identifier", file: !14, line: 140, size: 192, align: 64, elements: !1404)
!1404 = !{!1405, !1407, !1408}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1403, file: !14, line: 141, baseType: !1406, size: 64, align: 64)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64, align: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1403, file: !14, line: 142, baseType: !36, size: 64, align: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1403, file: !14, line: 143, baseType: !12, size: 64, align: 64, offset: 128)
!1409 = !DIGlobalVariable(name: "mbstreamwriter_members", scope: !0, file: !565, line: 1733, type: !1395, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMemberDef]* @mbstreamwriter_members)
!1410 = !DIGlobalVariable(name: "MultibyteCodec_Type", scope: !0, file: !565, line: 698, type: !574, isLocal: true, isDefinition: true, variable: %struct._typeobject* @MultibyteCodec_Type)
!1411 = !DIGlobalVariable(name: "multibytecodec_methods", scope: !0, file: !565, line: 682, type: !1379, isLocal: true, isDefinition: true, variable: [3 x %struct.PyMethodDef]* @multibytecodec_methods)
!1412 = !DIGlobalVariable(name: "codeckwarglist", scope: !0, file: !565, line: 43, type: !1383, isLocal: true, isDefinition: true, variable: [3 x i8*]* @codeckwarglist)
!1413 = !DIGlobalVariable(name: "MultibyteCodec_Encode__doc__", scope: !0, file: !565, line: 25, type: !1414, isLocal: true, isDefinition: true, variable: [415 x i8]* @MultibyteCodec_Encode__doc__)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 3320, align: 8, elements: !1415)
!1415 = !{!1416}
!1416 = !DISubrange(count: 415)
!1417 = !DIGlobalVariable(name: "MultibyteCodec_Decode__doc__", scope: !0, file: !565, line: 34, type: !1418, isLocal: true, isDefinition: true, variable: [414 x i8]* @MultibyteCodec_Decode__doc__)
!1418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 3312, align: 8, elements: !1419)
!1419 = !{!1420}
!1420 = !DISubrange(count: 414)
!1421 = !DIGlobalVariable(name: "_multibytecodecmodule", scope: !0, file: !565, line: 1817, type: !1422, isLocal: true, isDefinition: true, variable: %struct.PyModuleDef* @_multibytecodecmodule)
!1422 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !1423, line: 47, size: 832, align: 64, elements: !1424)
!1423 = !DIFile(filename: "./Include/moduleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1424 = !{!1425, !1434, !1435, !1436, !1437, !1440, !1441, !1442, !1443}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !1422, file: !1423, line: 48, baseType: !1426, size: 320, align: 64)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !1423, line: 38, baseType: !1427)
!1427 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !1423, line: 33, size: 320, align: 64, elements: !1428)
!1428 = !{!1429, !1430, !1432, !1433}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1427, file: !1423, line: 34, baseType: !13, size: 128, align: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !1427, file: !1423, line: 35, baseType: !1431, size: 64, align: 64, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64, align: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !1427, file: !1423, line: 36, baseType: !18, size: 64, align: 64, offset: 192)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !1427, file: !1423, line: 37, baseType: !12, size: 64, align: 64, offset: 256)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !1422, file: !1423, line: 49, baseType: !36, size: 64, align: 64, offset: 320)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !1422, file: !1423, line: 50, baseType: !36, size: 64, align: 64, offset: 384)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1422, file: !1423, line: 51, baseType: !18, size: 64, align: 64, offset: 448)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !1422, file: !1423, line: 52, baseType: !1438, size: 64, align: 64, offset: 512)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64, align: 64)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !288, line: 47, baseType: !287)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "m_reload", scope: !1422, file: !1423, line: 53, baseType: !149, size: 64, align: 64, offset: 576)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !1422, file: !1423, line: 54, baseType: !266, size: 64, align: 64, offset: 640)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !1422, file: !1423, line: 55, baseType: !149, size: 64, align: 64, offset: 704)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !1422, file: !1423, line: 56, baseType: !343, size: 64, align: 64, offset: 768)
!1444 = !DIGlobalVariable(name: "__methods", scope: !0, file: !565, line: 1811, type: !1445, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @__methods)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !287, size: 512, align: 64, elements: !401)
!1446 = !{i32 2, !"Dwarf Version", i32 4}
!1447 = !{i32 2, !"Debug Info Version", i32 3}
!1448 = !{i32 1, !"PIC Level", i32 2}
!1449 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!1450 = !DILocation(line: 1832, column: 5, scope: !564)
!1451 = !DIExpression()
!1452 = !DILocation(line: 1832, column: 9, scope: !564)
!1453 = !DILocation(line: 1833, column: 5, scope: !564)
!1454 = !DILocation(line: 1833, column: 15, scope: !564)
!1455 = !DILocation(line: 1834, column: 5, scope: !564)
!1456 = !DILocation(line: 1834, column: 19, scope: !564)
!1457 = !DILocation(line: 1842, column: 9, scope: !1458)
!1458 = distinct !DILexicalBlock(scope: !564, file: !565, line: 1842, column: 9)
!1459 = !DILocation(line: 1842, column: 44, scope: !1458)
!1460 = !DILocation(line: 1842, column: 9, scope: !564)
!1461 = !DILocation(line: 1843, column: 9, scope: !1458)
!1462 = !DILocation(line: 1845, column: 9, scope: !564)
!1463 = !DILocation(line: 1845, column: 7, scope: !564)
!1464 = !{!1465, !1465, i64 0}
!1465 = !{!"any pointer", !1466, i64 0}
!1466 = !{!"omnipotent char", !1467, i64 0}
!1467 = !{!"Simple C/C++ TBAA"}
!1468 = !DILocation(line: 1846, column: 9, scope: !1469)
!1469 = distinct !DILexicalBlock(scope: !564, file: !565, line: 1846, column: 9)
!1470 = !DILocation(line: 1846, column: 11, scope: !1469)
!1471 = !DILocation(line: 1846, column: 9, scope: !564)
!1472 = !DILocation(line: 1847, column: 9, scope: !1469)
!1473 = !DILocation(line: 1849, column: 12, scope: !1474)
!1474 = distinct !DILexicalBlock(scope: !564, file: !565, line: 1849, column: 5)
!1475 = !{!1476, !1476, i64 0}
!1476 = !{!"int", !1466, i64 0}
!1477 = !DILocation(line: 1849, column: 10, scope: !1474)
!1478 = !DILocation(line: 1849, column: 26, scope: !1479)
!1479 = !DILexicalBlockFile(scope: !1480, file: !565, discriminator: 2)
!1480 = !DILexicalBlockFile(scope: !1481, file: !565, discriminator: 1)
!1481 = distinct !DILexicalBlock(scope: !1474, file: !565, line: 1849, column: 5)
!1482 = !DILocation(line: 1849, column: 17, scope: !1481)
!1483 = !DILocation(line: 1849, column: 29, scope: !1481)
!1484 = !DILocation(line: 1849, column: 5, scope: !1474)
!1485 = !DILocation(line: 1850, column: 35, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !1487, file: !565, line: 1850, column: 13)
!1487 = distinct !DILexicalBlock(scope: !1481, file: !565, line: 1849, column: 49)
!1488 = !DILocation(line: 1850, column: 26, scope: !1486)
!1489 = !DILocation(line: 1850, column: 13, scope: !1486)
!1490 = !DILocation(line: 1850, column: 39, scope: !1486)
!1491 = !DILocation(line: 1850, column: 13, scope: !1487)
!1492 = !DILocation(line: 1851, column: 13, scope: !1486)
!1493 = !DILocation(line: 1852, column: 34, scope: !1487)
!1494 = !DILocation(line: 1852, column: 25, scope: !1487)
!1495 = !DILocation(line: 1852, column: 12, scope: !1487)
!1496 = !DILocation(line: 1852, column: 40, scope: !1487)
!1497 = !DILocation(line: 1852, column: 49, scope: !1487)
!1498 = !{!1499, !1500, i64 0}
!1499 = !{!"_object", !1500, i64 0, !1465, i64 8}
!1500 = !{!"long", !1466, i64 0}
!1501 = !DILocation(line: 1853, column: 28, scope: !1487)
!1502 = !DILocation(line: 1853, column: 40, scope: !1487)
!1503 = !DILocation(line: 1853, column: 31, scope: !1487)
!1504 = !DILocation(line: 1853, column: 44, scope: !1487)
!1505 = !{!1506, !1465, i64 24}
!1506 = !{!"_typeobject", !1507, i64 0, !1465, i64 24, !1500, i64 32, !1500, i64 40, !1465, i64 48, !1465, i64 56, !1465, i64 64, !1465, i64 72, !1465, i64 80, !1465, i64 88, !1465, i64 96, !1465, i64 104, !1465, i64 112, !1465, i64 120, !1465, i64 128, !1465, i64 136, !1465, i64 144, !1465, i64 152, !1465, i64 160, !1500, i64 168, !1465, i64 176, !1465, i64 184, !1465, i64 192, !1465, i64 200, !1500, i64 208, !1465, i64 216, !1465, i64 224, !1465, i64 232, !1465, i64 240, !1465, i64 248, !1465, i64 256, !1465, i64 264, !1465, i64 272, !1465, i64 280, !1500, i64 288, !1465, i64 296, !1465, i64 304, !1465, i64 312, !1465, i64 320, !1465, i64 328, !1465, i64 336, !1465, i64 344, !1465, i64 352, !1465, i64 360, !1465, i64 368, !1465, i64 376, !1476, i64 384, !1465, i64 392}
!1507 = !{!"", !1499, i64 0, !1500, i64 16}
!1508 = !DILocation(line: 1854, column: 49, scope: !1487)
!1509 = !DILocation(line: 1854, column: 40, scope: !1487)
!1510 = !DILocation(line: 1854, column: 28, scope: !1487)
!1511 = !DILocation(line: 1853, column: 9, scope: !1487)
!1512 = !DILocation(line: 1855, column: 5, scope: !1487)
!1513 = !DILocation(line: 1849, column: 45, scope: !1481)
!1514 = !DILocation(line: 1849, column: 5, scope: !1481)
!1515 = !DILocation(line: 1857, column: 9, scope: !1516)
!1516 = distinct !DILexicalBlock(scope: !564, file: !565, line: 1857, column: 9)
!1517 = !DILocation(line: 1857, column: 9, scope: !564)
!1518 = !DILocation(line: 1858, column: 9, scope: !1519)
!1519 = distinct !DILexicalBlock(scope: !1516, file: !565, line: 1857, column: 27)
!1520 = !DILocation(line: 1862, column: 12, scope: !564)
!1521 = !DILocation(line: 1862, column: 5, scope: !564)
!1522 = !DILocation(line: 1863, column: 1, scope: !564)
!1523 = !DILocation(line: 973, column: 55, scope: !577)
!1524 = !DILocation(line: 975, column: 25, scope: !577)
!1525 = !DILocation(line: 975, column: 5, scope: !577)
!1526 = !DILocation(line: 976, column: 5, scope: !577)
!1527 = !DILocation(line: 976, column: 14, scope: !1528)
!1528 = !DILexicalBlockFile(scope: !584, file: !565, discriminator: 1)
!1529 = !DILocation(line: 976, column: 20, scope: !584)
!1530 = !{!1531, !1465, i64 32}
!1531 = !{!"", !1499, i64 0, !1465, i64 16, !1466, i64 24, !1465, i64 32, !1465, i64 40}
!1532 = !DILocation(line: 976, column: 27, scope: !584)
!1533 = !DILocation(line: 976, column: 41, scope: !584)
!1534 = !DILocation(line: 976, column: 46, scope: !1535)
!1535 = !DILexicalBlockFile(scope: !584, file: !565, discriminator: 2)
!1536 = !DILocation(line: 976, column: 52, scope: !584)
!1537 = !DILocation(line: 976, column: 60, scope: !584)
!1538 = !DILocation(line: 976, column: 78, scope: !584)
!1539 = !DILocation(line: 976, column: 100, scope: !1540)
!1540 = !DILexicalBlockFile(scope: !584, file: !565, discriminator: 5)
!1541 = !DILocation(line: 976, column: 106, scope: !584)
!1542 = !DILocation(line: 976, column: 97, scope: !584)
!1543 = !DILocation(line: 976, column: 14, scope: !585)
!1544 = !DILocation(line: 976, column: 116, scope: !1545)
!1545 = !DILexicalBlockFile(scope: !1546, file: !565, discriminator: 6)
!1546 = !DILexicalBlockFile(scope: !584, file: !565, discriminator: 4)
!1547 = !DILocation(line: 976, column: 121, scope: !1548)
!1548 = !DILexicalBlockFile(scope: !583, file: !565, discriminator: 8)
!1549 = !DILocation(line: 976, column: 131, scope: !583)
!1550 = !DILocation(line: 976, column: 161, scope: !583)
!1551 = !DILocation(line: 976, column: 167, scope: !583)
!1552 = !DILocation(line: 976, column: 184, scope: !1553)
!1553 = distinct !DILexicalBlock(scope: !583, file: !565, line: 976, column: 181)
!1554 = !DILocation(line: 976, column: 201, scope: !1553)
!1555 = !DILocation(line: 976, column: 181, scope: !1553)
!1556 = !DILocation(line: 976, column: 211, scope: !1553)
!1557 = !DILocation(line: 976, column: 181, scope: !583)
!1558 = !DILocation(line: 976, column: 181, scope: !1559)
!1559 = !DILexicalBlockFile(scope: !583, file: !565, discriminator: 9)
!1560 = !DILocation(line: 976, column: 242, scope: !1561)
!1561 = !DILexicalBlockFile(scope: !1553, file: !565, discriminator: 10)
!1562 = !DILocation(line: 976, column: 260, scope: !1553)
!1563 = !{!1499, !1465, i64 8}
!1564 = !DILocation(line: 976, column: 270, scope: !1553)
!1565 = !{!1506, !1465, i64 48}
!1566 = !DILocation(line: 976, column: 295, scope: !1553)
!1567 = !DILocation(line: 976, column: 226, scope: !1553)
!1568 = !DILocation(line: 976, column: 314, scope: !1569)
!1569 = !DILexicalBlockFile(scope: !584, file: !565, discriminator: 11)
!1570 = !DILocation(line: 976, column: 314, scope: !583)
!1571 = !DILocation(line: 976, column: 314, scope: !1572)
!1572 = !DILexicalBlockFile(scope: !583, file: !565, discriminator: 12)
!1573 = !DILocation(line: 976, column: 327, scope: !1574)
!1574 = !DILexicalBlockFile(scope: !1575, file: !565, discriminator: 13)
!1575 = !DILexicalBlockFile(scope: !1576, file: !565, discriminator: 7)
!1576 = !DILexicalBlockFile(scope: !585, file: !565, discriminator: 3)
!1577 = !DILocation(line: 977, column: 19, scope: !577)
!1578 = !DILocation(line: 977, column: 7, scope: !577)
!1579 = !DILocation(line: 977, column: 27, scope: !577)
!1580 = !DILocation(line: 977, column: 37, scope: !577)
!1581 = !{!1506, !1465, i64 320}
!1582 = !DILocation(line: 977, column: 45, scope: !577)
!1583 = !DILocation(line: 977, column: 5, scope: !577)
!1584 = !DILocation(line: 978, column: 1, scope: !577)
!1585 = !DILocation(line: 964, column: 56, scope: !586)
!1586 = !DILocation(line: 965, column: 31, scope: !586)
!1587 = !DILocation(line: 965, column: 44, scope: !586)
!1588 = !DILocation(line: 967, column: 11, scope: !597)
!1589 = !DILocation(line: 967, column: 17, scope: !597)
!1590 = !DILocation(line: 967, column: 25, scope: !597)
!1591 = !DILocation(line: 967, column: 43, scope: !597)
!1592 = !DILocation(line: 967, column: 65, scope: !1593)
!1593 = !DILexicalBlockFile(scope: !597, file: !565, discriminator: 1)
!1594 = !DILocation(line: 967, column: 71, scope: !597)
!1595 = !DILocation(line: 967, column: 62, scope: !597)
!1596 = !DILocation(line: 967, column: 9, scope: !586)
!1597 = !DILocation(line: 968, column: 9, scope: !597)
!1598 = !DILocation(line: 968, column: 18, scope: !1599)
!1599 = !DILexicalBlockFile(scope: !595, file: !565, discriminator: 1)
!1600 = !DILocation(line: 968, column: 24, scope: !595)
!1601 = !DILocation(line: 968, column: 18, scope: !595)
!1602 = !DILocation(line: 968, column: 18, scope: !596)
!1603 = !DILocation(line: 968, column: 34, scope: !1604)
!1604 = !DILexicalBlockFile(scope: !594, file: !565, discriminator: 2)
!1605 = !DILocation(line: 968, column: 38, scope: !594)
!1606 = !DILocation(line: 968, column: 45, scope: !594)
!1607 = !DILocation(line: 968, column: 64, scope: !594)
!1608 = !DILocation(line: 968, column: 70, scope: !594)
!1609 = !DILocation(line: 968, column: 79, scope: !594)
!1610 = !DILocation(line: 968, column: 89, scope: !1611)
!1611 = distinct !DILexicalBlock(scope: !594, file: !565, line: 968, column: 89)
!1612 = !DILocation(line: 968, column: 89, scope: !594)
!1613 = !DILocation(line: 968, column: 102, scope: !1614)
!1614 = !DILexicalBlockFile(scope: !1611, file: !565, discriminator: 4)
!1615 = !DILocation(line: 968, column: 95, scope: !1611)
!1616 = !DILocation(line: 968, column: 108, scope: !1617)
!1617 = !DILexicalBlockFile(scope: !595, file: !565, discriminator: 5)
!1618 = !DILocation(line: 968, column: 108, scope: !1619)
!1619 = !DILexicalBlockFile(scope: !1620, file: !565, discriminator: 7)
!1620 = !DILexicalBlockFile(scope: !595, file: !565, discriminator: 6)
!1621 = !DILocation(line: 968, column: 108, scope: !594)
!1622 = !DILocation(line: 968, column: 110, scope: !1623)
!1623 = !DILexicalBlockFile(scope: !1624, file: !565, discriminator: 8)
!1624 = !DILexicalBlockFile(scope: !596, file: !565, discriminator: 3)
!1625 = !DILocation(line: 968, column: 110, scope: !1626)
!1626 = !DILexicalBlockFile(scope: !596, file: !565, discriminator: 9)
!1627 = !DILocation(line: 969, column: 5, scope: !586)
!1628 = !DILocation(line: 970, column: 1, scope: !586)
!1629 = !DILocation(line: 958, column: 27, scope: !866)
!1630 = !DILocation(line: 958, column: 43, scope: !866)
!1631 = !DILocation(line: 958, column: 59, scope: !866)
!1632 = !DILocation(line: 960, column: 5, scope: !866)
!1633 = !DILocation(line: 917, column: 30, scope: !871)
!1634 = !DILocation(line: 917, column: 46, scope: !871)
!1635 = !DILocation(line: 917, column: 62, scope: !871)
!1636 = !DILocation(line: 919, column: 5, scope: !871)
!1637 = !DILocation(line: 919, column: 40, scope: !871)
!1638 = !DILocation(line: 920, column: 5, scope: !871)
!1639 = !DILocation(line: 920, column: 15, scope: !871)
!1640 = !DILocation(line: 921, column: 5, scope: !871)
!1641 = !DILocation(line: 921, column: 11, scope: !871)
!1642 = !DILocation(line: 923, column: 45, scope: !1643)
!1643 = distinct !DILexicalBlock(scope: !871, file: !565, line: 923, column: 9)
!1644 = !DILocation(line: 923, column: 51, scope: !1643)
!1645 = !DILocation(line: 923, column: 10, scope: !1643)
!1646 = !DILocation(line: 923, column: 9, scope: !871)
!1647 = !DILocation(line: 925, column: 9, scope: !1643)
!1648 = !DILocation(line: 927, column: 49, scope: !871)
!1649 = !DILocation(line: 927, column: 55, scope: !871)
!1650 = !{!1506, !1465, i64 304}
!1651 = !DILocation(line: 927, column: 64, scope: !871)
!1652 = !DILocation(line: 927, column: 12, scope: !871)
!1653 = !DILocation(line: 927, column: 10, scope: !871)
!1654 = !DILocation(line: 928, column: 9, scope: !1655)
!1655 = distinct !DILexicalBlock(scope: !871, file: !565, line: 928, column: 9)
!1656 = !DILocation(line: 928, column: 14, scope: !1655)
!1657 = !DILocation(line: 928, column: 9, scope: !871)
!1658 = !DILocation(line: 929, column: 9, scope: !1655)
!1659 = !DILocation(line: 931, column: 48, scope: !871)
!1660 = !DILocation(line: 931, column: 36, scope: !871)
!1661 = !DILocation(line: 931, column: 13, scope: !871)
!1662 = !DILocation(line: 931, column: 11, scope: !871)
!1663 = !DILocation(line: 932, column: 9, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !871, file: !565, line: 932, column: 9)
!1665 = !DILocation(line: 932, column: 15, scope: !1664)
!1666 = !DILocation(line: 932, column: 9, scope: !871)
!1667 = !DILocation(line: 933, column: 9, scope: !1664)
!1668 = !DILocation(line: 934, column: 12, scope: !1669)
!1669 = distinct !DILexicalBlock(scope: !871, file: !565, line: 934, column: 9)
!1670 = !DILocation(line: 934, column: 20, scope: !1669)
!1671 = !DILocation(line: 934, column: 28, scope: !1669)
!1672 = !DILocation(line: 934, column: 9, scope: !871)
!1673 = !DILocation(line: 935, column: 25, scope: !1674)
!1674 = distinct !DILexicalBlock(scope: !1669, file: !565, line: 934, column: 54)
!1675 = !DILocation(line: 935, column: 9, scope: !1674)
!1676 = !DILocation(line: 936, column: 9, scope: !1674)
!1677 = !DILocation(line: 939, column: 44, scope: !871)
!1678 = !DILocation(line: 939, column: 20, scope: !871)
!1679 = !DILocation(line: 939, column: 52, scope: !871)
!1680 = !{!1681, !1465, i64 16}
!1681 = !{!"", !1499, i64 0, !1465, i64 16}
!1682 = !DILocation(line: 939, column: 5, scope: !871)
!1683 = !DILocation(line: 939, column: 11, scope: !871)
!1684 = !DILocation(line: 939, column: 17, scope: !871)
!1685 = !{!1531, !1465, i64 16}
!1686 = !DILocation(line: 940, column: 5, scope: !871)
!1687 = !DILocation(line: 940, column: 11, scope: !871)
!1688 = !DILocation(line: 940, column: 19, scope: !871)
!1689 = !{!1531, !1465, i64 40}
!1690 = !DILocation(line: 941, column: 44, scope: !871)
!1691 = !DILocation(line: 941, column: 20, scope: !871)
!1692 = !DILocation(line: 941, column: 5, scope: !871)
!1693 = !DILocation(line: 941, column: 11, scope: !871)
!1694 = !DILocation(line: 941, column: 18, scope: !871)
!1695 = !DILocation(line: 942, column: 9, scope: !1696)
!1696 = distinct !DILexicalBlock(scope: !871, file: !565, line: 942, column: 9)
!1697 = !DILocation(line: 942, column: 15, scope: !1696)
!1698 = !DILocation(line: 942, column: 22, scope: !1696)
!1699 = !DILocation(line: 942, column: 9, scope: !871)
!1700 = !DILocation(line: 943, column: 9, scope: !1696)
!1701 = !DILocation(line: 944, column: 9, scope: !1702)
!1702 = distinct !DILexicalBlock(scope: !871, file: !565, line: 944, column: 9)
!1703 = !DILocation(line: 944, column: 15, scope: !1702)
!1704 = !DILocation(line: 944, column: 22, scope: !1702)
!1705 = !{!1706, !1465, i64 32}
!1706 = !{!"", !1465, i64 0, !1465, i64 8, !1465, i64 16, !1465, i64 24, !1465, i64 32, !1465, i64 40, !1465, i64 48, !1465, i64 56, !1465, i64 64}
!1707 = !DILocation(line: 944, column: 30, scope: !1702)
!1708 = !DILocation(line: 944, column: 44, scope: !1702)
!1709 = !DILocation(line: 945, column: 9, scope: !1702)
!1710 = !DILocation(line: 945, column: 15, scope: !1702)
!1711 = !DILocation(line: 945, column: 22, scope: !1702)
!1712 = !DILocation(line: 945, column: 31, scope: !1702)
!1713 = !DILocation(line: 945, column: 37, scope: !1702)
!1714 = !DILocation(line: 945, column: 44, scope: !1702)
!1715 = !DILocation(line: 945, column: 50, scope: !1702)
!1716 = !DILocation(line: 945, column: 57, scope: !1702)
!1717 = !{!1706, !1465, i64 8}
!1718 = !DILocation(line: 945, column: 65, scope: !1702)
!1719 = !DILocation(line: 944, column: 9, scope: !871)
!1720 = !DILocation(line: 946, column: 9, scope: !1702)
!1721 = !DILocation(line: 948, column: 5, scope: !871)
!1722 = !DILocation(line: 948, column: 10, scope: !1723)
!1723 = !DILexicalBlockFile(scope: !882, file: !565, discriminator: 1)
!1724 = !DILocation(line: 948, column: 20, scope: !882)
!1725 = !DILocation(line: 948, column: 50, scope: !882)
!1726 = !DILocation(line: 948, column: 66, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !882, file: !565, line: 948, column: 63)
!1728 = !DILocation(line: 948, column: 83, scope: !1727)
!1729 = !DILocation(line: 948, column: 63, scope: !1727)
!1730 = !DILocation(line: 948, column: 93, scope: !1727)
!1731 = !DILocation(line: 948, column: 63, scope: !882)
!1732 = !DILocation(line: 948, column: 63, scope: !1733)
!1733 = !DILexicalBlockFile(scope: !882, file: !565, discriminator: 2)
!1734 = !DILocation(line: 948, column: 124, scope: !1735)
!1735 = !DILexicalBlockFile(scope: !1727, file: !565, discriminator: 3)
!1736 = !DILocation(line: 948, column: 142, scope: !1727)
!1737 = !DILocation(line: 948, column: 152, scope: !1727)
!1738 = !DILocation(line: 948, column: 177, scope: !1727)
!1739 = !DILocation(line: 948, column: 108, scope: !1727)
!1740 = !DILocation(line: 948, column: 196, scope: !1741)
!1741 = !DILexicalBlockFile(scope: !871, file: !565, discriminator: 4)
!1742 = !DILocation(line: 948, column: 196, scope: !882)
!1743 = !DILocation(line: 948, column: 196, scope: !1744)
!1744 = !DILexicalBlockFile(scope: !882, file: !565, discriminator: 5)
!1745 = !DILocation(line: 949, column: 24, scope: !871)
!1746 = !DILocation(line: 949, column: 12, scope: !871)
!1747 = !DILocation(line: 949, column: 5, scope: !871)
!1748 = !DILocation(line: 952, column: 5, scope: !871)
!1749 = !DILocation(line: 952, column: 10, scope: !1750)
!1750 = !DILexicalBlockFile(scope: !884, file: !565, discriminator: 1)
!1751 = !DILocation(line: 952, column: 20, scope: !884)
!1752 = !DILocation(line: 952, column: 51, scope: !884)
!1753 = !DILocation(line: 952, column: 38, scope: !884)
!1754 = !DILocation(line: 952, column: 62, scope: !887)
!1755 = !DILocation(line: 952, column: 78, scope: !887)
!1756 = !DILocation(line: 952, column: 62, scope: !884)
!1757 = !DILocation(line: 952, column: 93, scope: !1758)
!1758 = !DILexicalBlockFile(scope: !887, file: !565, discriminator: 2)
!1759 = !DILocation(line: 952, column: 98, scope: !1760)
!1760 = !DILexicalBlockFile(scope: !886, file: !565, discriminator: 4)
!1761 = !DILocation(line: 952, column: 108, scope: !886)
!1762 = !DILocation(line: 952, column: 138, scope: !886)
!1763 = !DILocation(line: 952, column: 164, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !886, file: !565, line: 952, column: 161)
!1765 = !DILocation(line: 952, column: 181, scope: !1764)
!1766 = !DILocation(line: 952, column: 161, scope: !1764)
!1767 = !DILocation(line: 952, column: 191, scope: !1764)
!1768 = !DILocation(line: 952, column: 161, scope: !886)
!1769 = !DILocation(line: 952, column: 161, scope: !1770)
!1770 = !DILexicalBlockFile(scope: !886, file: !565, discriminator: 5)
!1771 = !DILocation(line: 952, column: 222, scope: !1772)
!1772 = !DILexicalBlockFile(scope: !1764, file: !565, discriminator: 6)
!1773 = !DILocation(line: 952, column: 240, scope: !1764)
!1774 = !DILocation(line: 952, column: 250, scope: !1764)
!1775 = !DILocation(line: 952, column: 275, scope: !1764)
!1776 = !DILocation(line: 952, column: 206, scope: !1764)
!1777 = !DILocation(line: 952, column: 294, scope: !1778)
!1778 = !DILexicalBlockFile(scope: !887, file: !565, discriminator: 7)
!1779 = !DILocation(line: 952, column: 294, scope: !886)
!1780 = !DILocation(line: 952, column: 294, scope: !1781)
!1781 = !DILexicalBlockFile(scope: !886, file: !565, discriminator: 8)
!1782 = !DILocation(line: 952, column: 294, scope: !1783)
!1783 = !DILexicalBlockFile(scope: !886, file: !565, discriminator: 9)
!1784 = !DILocation(line: 952, column: 307, scope: !1785)
!1785 = !DILexicalBlockFile(scope: !1786, file: !565, discriminator: 10)
!1786 = !DILexicalBlockFile(scope: !871, file: !565, discriminator: 3)
!1787 = !DILocation(line: 952, column: 307, scope: !884)
!1788 = !DILocation(line: 952, column: 307, scope: !1789)
!1789 = !DILexicalBlockFile(scope: !884, file: !565, discriminator: 11)
!1790 = !DILocation(line: 953, column: 5, scope: !871)
!1791 = !DILocation(line: 953, column: 10, scope: !1792)
!1792 = !DILexicalBlockFile(scope: !889, file: !565, discriminator: 1)
!1793 = !DILocation(line: 953, column: 20, scope: !889)
!1794 = !DILocation(line: 953, column: 51, scope: !889)
!1795 = !DILocation(line: 953, column: 63, scope: !892)
!1796 = !DILocation(line: 953, column: 79, scope: !892)
!1797 = !DILocation(line: 953, column: 63, scope: !889)
!1798 = !DILocation(line: 953, column: 94, scope: !1799)
!1799 = !DILexicalBlockFile(scope: !892, file: !565, discriminator: 2)
!1800 = !DILocation(line: 953, column: 99, scope: !1801)
!1801 = !DILexicalBlockFile(scope: !891, file: !565, discriminator: 4)
!1802 = !DILocation(line: 953, column: 109, scope: !891)
!1803 = !DILocation(line: 953, column: 139, scope: !891)
!1804 = !DILocation(line: 953, column: 165, scope: !1805)
!1805 = distinct !DILexicalBlock(scope: !891, file: !565, line: 953, column: 162)
!1806 = !DILocation(line: 953, column: 182, scope: !1805)
!1807 = !DILocation(line: 953, column: 162, scope: !1805)
!1808 = !DILocation(line: 953, column: 192, scope: !1805)
!1809 = !DILocation(line: 953, column: 162, scope: !891)
!1810 = !DILocation(line: 953, column: 162, scope: !1811)
!1811 = !DILexicalBlockFile(scope: !891, file: !565, discriminator: 5)
!1812 = !DILocation(line: 953, column: 223, scope: !1813)
!1813 = !DILexicalBlockFile(scope: !1805, file: !565, discriminator: 6)
!1814 = !DILocation(line: 953, column: 241, scope: !1805)
!1815 = !DILocation(line: 953, column: 251, scope: !1805)
!1816 = !DILocation(line: 953, column: 276, scope: !1805)
!1817 = !DILocation(line: 953, column: 207, scope: !1805)
!1818 = !DILocation(line: 953, column: 295, scope: !1819)
!1819 = !DILexicalBlockFile(scope: !892, file: !565, discriminator: 7)
!1820 = !DILocation(line: 953, column: 295, scope: !891)
!1821 = !DILocation(line: 953, column: 295, scope: !1822)
!1822 = !DILexicalBlockFile(scope: !891, file: !565, discriminator: 8)
!1823 = !DILocation(line: 953, column: 295, scope: !1824)
!1824 = !DILexicalBlockFile(scope: !891, file: !565, discriminator: 9)
!1825 = !DILocation(line: 953, column: 308, scope: !1785)
!1826 = !DILocation(line: 953, column: 308, scope: !889)
!1827 = !DILocation(line: 953, column: 308, scope: !1828)
!1828 = !DILexicalBlockFile(scope: !889, file: !565, discriminator: 11)
!1829 = !DILocation(line: 954, column: 5, scope: !871)
!1830 = !DILocation(line: 955, column: 1, scope: !871)
!1831 = !DILocation(line: 878, column: 54, scope: !598)
!1832 = !DILocation(line: 879, column: 29, scope: !598)
!1833 = !DILocation(line: 879, column: 45, scope: !598)
!1834 = !DILocation(line: 881, column: 5, scope: !598)
!1835 = !DILocation(line: 881, column: 15, scope: !598)
!1836 = !DILocation(line: 882, column: 5, scope: !598)
!1837 = !DILocation(line: 882, column: 9, scope: !598)
!1838 = !DILocation(line: 884, column: 45, scope: !1839)
!1839 = distinct !DILexicalBlock(scope: !598, file: !565, line: 884, column: 9)
!1840 = !DILocation(line: 884, column: 51, scope: !1839)
!1841 = !DILocation(line: 884, column: 10, scope: !1839)
!1842 = !DILocation(line: 884, column: 9, scope: !598)
!1843 = !DILocation(line: 886, column: 9, scope: !1839)
!1844 = !DILocation(line: 888, column: 73, scope: !598)
!1845 = !DILocation(line: 888, column: 37, scope: !598)
!1846 = !DILocation(line: 888, column: 81, scope: !598)
!1847 = !DILocation(line: 888, column: 87, scope: !598)
!1848 = !DILocation(line: 888, column: 12, scope: !598)
!1849 = !DILocation(line: 888, column: 5, scope: !598)
!1850 = !DILocation(line: 889, column: 1, scope: !598)
!1851 = !DILocation(line: 892, column: 53, scope: !798)
!1852 = !DILocation(line: 895, column: 5, scope: !798)
!1853 = !DILocation(line: 895, column: 19, scope: !798)
!1854 = !DILocation(line: 895, column: 31, scope: !798)
!1855 = !DILocation(line: 896, column: 5, scope: !798)
!1856 = !DILocation(line: 896, column: 16, scope: !798)
!1857 = !DILocation(line: 897, column: 9, scope: !1858)
!1858 = distinct !DILexicalBlock(scope: !798, file: !565, line: 897, column: 9)
!1859 = !DILocation(line: 897, column: 15, scope: !1858)
!1860 = !DILocation(line: 897, column: 22, scope: !1858)
!1861 = !{!1706, !1465, i64 40}
!1862 = !DILocation(line: 897, column: 31, scope: !1858)
!1863 = !DILocation(line: 897, column: 9, scope: !798)
!1864 = !DILocation(line: 898, column: 18, scope: !1865)
!1865 = distinct !DILexicalBlock(scope: !1858, file: !565, line: 897, column: 46)
!1866 = !DILocation(line: 898, column: 16, scope: !1865)
!1867 = !DILocation(line: 899, column: 13, scope: !1865)
!1868 = !DILocation(line: 899, column: 19, scope: !1865)
!1869 = !DILocation(line: 899, column: 26, scope: !1865)
!1870 = !DILocation(line: 899, column: 36, scope: !1865)
!1871 = !DILocation(line: 899, column: 42, scope: !1865)
!1872 = !DILocation(line: 899, column: 49, scope: !1865)
!1873 = !DILocation(line: 899, column: 55, scope: !1865)
!1874 = !DILocation(line: 899, column: 62, scope: !1865)
!1875 = !DILocation(line: 899, column: 11, scope: !1865)
!1876 = !{!1500, !1500, i64 0}
!1877 = !DILocation(line: 901, column: 13, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !1865, file: !565, line: 901, column: 13)
!1879 = !DILocation(line: 901, column: 15, scope: !1878)
!1880 = !DILocation(line: 901, column: 13, scope: !1865)
!1881 = !DILocation(line: 902, column: 13, scope: !1878)
!1882 = !DILocation(line: 903, column: 5, scope: !1865)
!1883 = !DILocation(line: 904, column: 5, scope: !798)
!1884 = !DILocation(line: 904, column: 10, scope: !1885)
!1885 = !DILexicalBlockFile(scope: !808, file: !565, discriminator: 1)
!1886 = !DILocation(line: 904, column: 20, scope: !808)
!1887 = !DILocation(line: 904, column: 43, scope: !808)
!1888 = !DILocation(line: 904, column: 49, scope: !808)
!1889 = !DILocation(line: 904, column: 63, scope: !812)
!1890 = !DILocation(line: 904, column: 71, scope: !812)
!1891 = !DILocation(line: 904, column: 63, scope: !808)
!1892 = !DILocation(line: 904, column: 89, scope: !1893)
!1893 = !DILexicalBlockFile(scope: !811, file: !565, discriminator: 2)
!1894 = !DILocation(line: 904, column: 95, scope: !811)
!1895 = !DILocation(line: 904, column: 104, scope: !811)
!1896 = !DILocation(line: 904, column: 118, scope: !811)
!1897 = !DILocation(line: 904, column: 123, scope: !1898)
!1898 = !DILexicalBlockFile(scope: !810, file: !565, discriminator: 4)
!1899 = !DILocation(line: 904, column: 133, scope: !810)
!1900 = !DILocation(line: 904, column: 163, scope: !810)
!1901 = !DILocation(line: 904, column: 181, scope: !1902)
!1902 = distinct !DILexicalBlock(scope: !810, file: !565, line: 904, column: 178)
!1903 = !DILocation(line: 904, column: 198, scope: !1902)
!1904 = !DILocation(line: 904, column: 178, scope: !1902)
!1905 = !DILocation(line: 904, column: 208, scope: !1902)
!1906 = !DILocation(line: 904, column: 178, scope: !810)
!1907 = !DILocation(line: 904, column: 178, scope: !1908)
!1908 = !DILexicalBlockFile(scope: !810, file: !565, discriminator: 5)
!1909 = !DILocation(line: 904, column: 239, scope: !1910)
!1910 = !DILexicalBlockFile(scope: !1902, file: !565, discriminator: 6)
!1911 = !DILocation(line: 904, column: 257, scope: !1902)
!1912 = !DILocation(line: 904, column: 267, scope: !1902)
!1913 = !DILocation(line: 904, column: 292, scope: !1902)
!1914 = !DILocation(line: 904, column: 223, scope: !1902)
!1915 = !DILocation(line: 904, column: 311, scope: !1916)
!1916 = !DILexicalBlockFile(scope: !811, file: !565, discriminator: 7)
!1917 = !DILocation(line: 904, column: 311, scope: !810)
!1918 = !DILocation(line: 904, column: 311, scope: !1919)
!1919 = !DILexicalBlockFile(scope: !810, file: !565, discriminator: 8)
!1920 = !DILocation(line: 904, column: 324, scope: !1921)
!1921 = !DILexicalBlockFile(scope: !811, file: !565, discriminator: 9)
!1922 = !DILocation(line: 904, column: 326, scope: !1923)
!1923 = !DILexicalBlockFile(scope: !1924, file: !565, discriminator: 10)
!1924 = !DILexicalBlockFile(scope: !798, file: !565, discriminator: 3)
!1925 = !DILocation(line: 904, column: 326, scope: !808)
!1926 = !DILocation(line: 904, column: 326, scope: !1927)
!1927 = !DILexicalBlockFile(scope: !808, file: !565, discriminator: 11)
!1928 = !DILocation(line: 905, column: 58, scope: !798)
!1929 = !DILocation(line: 905, column: 5, scope: !798)
!1930 = !DILocation(line: 906, column: 1, scope: !798)
!1931 = !DILocation(line: 739, column: 58, scope: !607)
!1932 = !DILocation(line: 740, column: 35, scope: !607)
!1933 = !DILocation(line: 740, column: 47, scope: !607)
!1934 = !DILocation(line: 742, column: 5, scope: !607)
!1935 = !DILocation(line: 742, column: 15, scope: !607)
!1936 = !DILocation(line: 742, column: 22, scope: !607)
!1937 = !DILocation(line: 743, column: 5, scope: !607)
!1938 = !DILocation(line: 743, column: 15, scope: !607)
!1939 = !DILocation(line: 744, column: 5, scope: !607)
!1940 = !DILocation(line: 744, column: 16, scope: !607)
!1941 = !DILocation(line: 744, column: 23, scope: !607)
!1942 = !DILocation(line: 745, column: 5, scope: !607)
!1943 = !DILocation(line: 745, column: 15, scope: !607)
!1944 = !DILocation(line: 747, column: 26, scope: !626)
!1945 = !DILocation(line: 747, column: 36, scope: !626)
!1946 = !DILocation(line: 747, column: 47, scope: !626)
!1947 = !{!1506, !1500, i64 168}
!1948 = !DILocation(line: 747, column: 56, scope: !626)
!1949 = !DILocation(line: 747, column: 73, scope: !626)
!1950 = !DILocation(line: 747, column: 9, scope: !607)
!1951 = !DILocation(line: 748, column: 14, scope: !626)
!1952 = !DILocation(line: 748, column: 9, scope: !626)
!1953 = !DILocation(line: 750, column: 38, scope: !625)
!1954 = !DILocation(line: 750, column: 25, scope: !625)
!1955 = !DILocation(line: 750, column: 23, scope: !625)
!1956 = !DILocation(line: 750, column: 16, scope: !625)
!1957 = !DILocation(line: 751, column: 13, scope: !624)
!1958 = !DILocation(line: 751, column: 20, scope: !624)
!1959 = !DILocation(line: 751, column: 13, scope: !625)
!1960 = !DILocation(line: 752, column: 13, scope: !624)
!1961 = !DILocation(line: 753, column: 36, scope: !623)
!1962 = !DILocation(line: 753, column: 46, scope: !623)
!1963 = !DILocation(line: 753, column: 57, scope: !623)
!1964 = !DILocation(line: 753, column: 66, scope: !623)
!1965 = !DILocation(line: 753, column: 83, scope: !623)
!1966 = !DILocation(line: 753, column: 18, scope: !624)
!1967 = !DILocation(line: 754, column: 29, scope: !622)
!1968 = !DILocation(line: 754, column: 13, scope: !622)
!1969 = !DILocation(line: 756, column: 13, scope: !622)
!1970 = !DILocation(line: 756, column: 18, scope: !1971)
!1971 = !DILexicalBlockFile(scope: !621, file: !565, discriminator: 1)
!1972 = !DILocation(line: 756, column: 28, scope: !621)
!1973 = !DILocation(line: 756, column: 58, scope: !621)
!1974 = !DILocation(line: 756, column: 73, scope: !1975)
!1975 = distinct !DILexicalBlock(scope: !621, file: !565, line: 756, column: 70)
!1976 = !DILocation(line: 756, column: 90, scope: !1975)
!1977 = !DILocation(line: 756, column: 70, scope: !1975)
!1978 = !DILocation(line: 756, column: 100, scope: !1975)
!1979 = !DILocation(line: 756, column: 70, scope: !621)
!1980 = !DILocation(line: 756, column: 70, scope: !1981)
!1981 = !DILexicalBlockFile(scope: !621, file: !565, discriminator: 2)
!1982 = !DILocation(line: 756, column: 131, scope: !1983)
!1983 = !DILexicalBlockFile(scope: !1975, file: !565, discriminator: 3)
!1984 = !DILocation(line: 756, column: 149, scope: !1975)
!1985 = !DILocation(line: 756, column: 159, scope: !1975)
!1986 = !DILocation(line: 756, column: 184, scope: !1975)
!1987 = !DILocation(line: 756, column: 115, scope: !1975)
!1988 = !DILocation(line: 756, column: 203, scope: !1989)
!1989 = !DILexicalBlockFile(scope: !622, file: !565, discriminator: 4)
!1990 = !DILocation(line: 756, column: 203, scope: !621)
!1991 = !DILocation(line: 756, column: 203, scope: !1992)
!1992 = !DILexicalBlockFile(scope: !621, file: !565, discriminator: 5)
!1993 = !DILocation(line: 757, column: 13, scope: !622)
!1994 = !DILocation(line: 761, column: 9, scope: !629)
!1995 = !DILocation(line: 761, column: 14, scope: !629)
!1996 = !DILocation(line: 761, column: 9, scope: !607)
!1997 = !DILocation(line: 762, column: 9, scope: !628)
!1998 = !DILocation(line: 762, column: 19, scope: !628)
!1999 = !DILocation(line: 764, column: 25, scope: !628)
!2000 = !DILocation(line: 764, column: 30, scope: !628)
!2001 = !DILocation(line: 764, column: 41, scope: !628)
!2002 = !DILocation(line: 764, column: 50, scope: !628)
!2003 = !DILocation(line: 765, column: 23, scope: !628)
!2004 = !DILocation(line: 765, column: 28, scope: !628)
!2005 = !DILocation(line: 765, column: 21, scope: !628)
!2006 = !DILocation(line: 767, column: 25, scope: !628)
!2007 = !DILocation(line: 767, column: 30, scope: !628)
!2008 = !DILocation(line: 767, column: 41, scope: !628)
!2009 = !DILocation(line: 767, column: 50, scope: !628)
!2010 = !DILocation(line: 768, column: 21, scope: !628)
!2011 = !DILocation(line: 768, column: 26, scope: !628)
!2012 = !DILocation(line: 768, column: 19, scope: !628)
!2013 = !DILocation(line: 769, column: 38, scope: !628)
!2014 = !DILocation(line: 769, column: 9, scope: !628)
!2015 = !DILocation(line: 770, column: 13, scope: !2016)
!2016 = distinct !DILexicalBlock(scope: !628, file: !565, line: 770, column: 13)
!2017 = !DILocation(line: 770, column: 23, scope: !2016)
!2018 = !DILocation(line: 770, column: 13, scope: !628)
!2019 = !DILocation(line: 771, column: 13, scope: !2016)
!2020 = !DILocation(line: 772, column: 9, scope: !628)
!2021 = !DILocation(line: 772, column: 14, scope: !2022)
!2022 = !DILexicalBlockFile(scope: !631, file: !565, discriminator: 1)
!2023 = !DILocation(line: 772, column: 24, scope: !631)
!2024 = !DILocation(line: 772, column: 47, scope: !631)
!2025 = !DILocation(line: 772, column: 52, scope: !631)
!2026 = !DILocation(line: 772, column: 66, scope: !635)
!2027 = !DILocation(line: 772, column: 74, scope: !635)
!2028 = !DILocation(line: 772, column: 66, scope: !631)
!2029 = !DILocation(line: 772, column: 92, scope: !2030)
!2030 = !DILexicalBlockFile(scope: !634, file: !565, discriminator: 2)
!2031 = !DILocation(line: 772, column: 97, scope: !634)
!2032 = !DILocation(line: 772, column: 106, scope: !634)
!2033 = !DILocation(line: 772, column: 120, scope: !634)
!2034 = !DILocation(line: 772, column: 125, scope: !2035)
!2035 = !DILexicalBlockFile(scope: !633, file: !565, discriminator: 4)
!2036 = !DILocation(line: 772, column: 135, scope: !633)
!2037 = !DILocation(line: 772, column: 165, scope: !633)
!2038 = !DILocation(line: 772, column: 183, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !633, file: !565, line: 772, column: 180)
!2040 = !DILocation(line: 772, column: 200, scope: !2039)
!2041 = !DILocation(line: 772, column: 180, scope: !2039)
!2042 = !DILocation(line: 772, column: 210, scope: !2039)
!2043 = !DILocation(line: 772, column: 180, scope: !633)
!2044 = !DILocation(line: 772, column: 180, scope: !2045)
!2045 = !DILexicalBlockFile(scope: !633, file: !565, discriminator: 5)
!2046 = !DILocation(line: 772, column: 241, scope: !2047)
!2047 = !DILexicalBlockFile(scope: !2039, file: !565, discriminator: 6)
!2048 = !DILocation(line: 772, column: 259, scope: !2039)
!2049 = !DILocation(line: 772, column: 269, scope: !2039)
!2050 = !DILocation(line: 772, column: 294, scope: !2039)
!2051 = !DILocation(line: 772, column: 225, scope: !2039)
!2052 = !DILocation(line: 772, column: 313, scope: !2053)
!2053 = !DILexicalBlockFile(scope: !634, file: !565, discriminator: 7)
!2054 = !DILocation(line: 772, column: 313, scope: !633)
!2055 = !DILocation(line: 772, column: 313, scope: !2056)
!2056 = !DILexicalBlockFile(scope: !633, file: !565, discriminator: 8)
!2057 = !DILocation(line: 772, column: 326, scope: !2058)
!2058 = !DILexicalBlockFile(scope: !634, file: !565, discriminator: 9)
!2059 = !DILocation(line: 772, column: 328, scope: !2060)
!2060 = !DILexicalBlockFile(scope: !2061, file: !565, discriminator: 10)
!2061 = !DILexicalBlockFile(scope: !628, file: !565, discriminator: 3)
!2062 = !DILocation(line: 772, column: 328, scope: !631)
!2063 = !DILocation(line: 772, column: 328, scope: !2064)
!2064 = !DILexicalBlockFile(scope: !631, file: !565, discriminator: 11)
!2065 = !DILocation(line: 773, column: 17, scope: !628)
!2066 = !DILocation(line: 773, column: 15, scope: !628)
!2067 = !DILocation(line: 774, column: 5, scope: !629)
!2068 = !DILocation(line: 774, column: 5, scope: !2069)
!2069 = !DILexicalBlockFile(scope: !629, file: !565, discriminator: 1)
!2070 = !DILocation(line: 774, column: 5, scope: !628)
!2071 = !DILocation(line: 776, column: 21, scope: !2072)
!2072 = distinct !DILexicalBlock(scope: !629, file: !565, line: 775, column: 10)
!2073 = !DILocation(line: 778, column: 25, scope: !2072)
!2074 = !DILocation(line: 778, column: 35, scope: !2072)
!2075 = !DILocation(line: 778, column: 44, scope: !2072)
!2076 = !DILocation(line: 779, column: 17, scope: !2072)
!2077 = !DILocation(line: 779, column: 15, scope: !2072)
!2078 = !DILocation(line: 781, column: 43, scope: !2079)
!2079 = distinct !DILexicalBlock(scope: !607, file: !565, line: 781, column: 9)
!2080 = !DILocation(line: 781, column: 27, scope: !2079)
!2081 = !DILocation(line: 781, column: 51, scope: !2079)
!2082 = !DILocation(line: 781, column: 57, scope: !2079)
!2083 = !DILocation(line: 781, column: 25, scope: !2079)
!2084 = !DILocation(line: 781, column: 25, scope: !2085)
!2085 = !DILexicalBlockFile(scope: !2079, file: !565, discriminator: 1)
!2086 = !DILocation(line: 781, column: 100, scope: !2087)
!2087 = !DILexicalBlockFile(scope: !2079, file: !565, discriminator: 2)
!2088 = !DILocation(line: 781, column: 70, scope: !2079)
!2089 = !DILocation(line: 781, column: 110, scope: !2090)
!2090 = !DILexicalBlockFile(scope: !2091, file: !565, discriminator: 4)
!2091 = !DILexicalBlockFile(scope: !2079, file: !565, discriminator: 3)
!2092 = !DILocation(line: 781, column: 9, scope: !607)
!2093 = !DILocation(line: 782, column: 9, scope: !2079)
!2094 = !DILocation(line: 783, column: 11, scope: !607)
!2095 = !DILocation(line: 784, column: 63, scope: !607)
!2096 = !DILocation(line: 784, column: 45, scope: !607)
!2097 = !DILocation(line: 784, column: 72, scope: !607)
!2098 = !{!2099, !1500, i64 16}
!2099 = !{!"", !1499, i64 0, !1500, i64 16, !1500, i64 24, !2100, i64 32, !1465, i64 40}
!2100 = !{!"", !1476, i64 0, !1476, i64 0, !1476, i64 0, !1476, i64 0, !1476, i64 0, !1476, i64 1}
!2101 = !DILocation(line: 784, column: 13, scope: !607)
!2102 = !DILocation(line: 786, column: 31, scope: !607)
!2103 = !DILocation(line: 786, column: 36, scope: !607)
!2104 = !DILocation(line: 786, column: 44, scope: !607)
!2105 = !DILocation(line: 786, column: 49, scope: !607)
!2106 = !DILocation(line: 787, column: 31, scope: !607)
!2107 = !DILocation(line: 788, column: 31, scope: !607)
!2108 = !DILocation(line: 788, column: 36, scope: !607)
!2109 = !DILocation(line: 788, column: 44, scope: !607)
!2110 = !DILocation(line: 786, column: 9, scope: !607)
!2111 = !DILocation(line: 786, column: 7, scope: !607)
!2112 = !DILocation(line: 789, column: 9, scope: !639)
!2113 = !DILocation(line: 789, column: 11, scope: !639)
!2114 = !DILocation(line: 789, column: 9, scope: !607)
!2115 = !DILocation(line: 791, column: 9, scope: !638)
!2116 = !DILocation(line: 791, column: 14, scope: !2117)
!2117 = !DILexicalBlockFile(scope: !637, file: !565, discriminator: 1)
!2118 = !DILocation(line: 791, column: 24, scope: !637)
!2119 = !DILocation(line: 791, column: 47, scope: !637)
!2120 = !DILocation(line: 791, column: 52, scope: !637)
!2121 = !DILocation(line: 791, column: 66, scope: !643)
!2122 = !DILocation(line: 791, column: 74, scope: !643)
!2123 = !DILocation(line: 791, column: 66, scope: !637)
!2124 = !DILocation(line: 791, column: 92, scope: !2125)
!2125 = !DILexicalBlockFile(scope: !642, file: !565, discriminator: 2)
!2126 = !DILocation(line: 791, column: 97, scope: !642)
!2127 = !DILocation(line: 791, column: 106, scope: !642)
!2128 = !DILocation(line: 791, column: 120, scope: !642)
!2129 = !DILocation(line: 791, column: 125, scope: !2130)
!2130 = !DILexicalBlockFile(scope: !641, file: !565, discriminator: 4)
!2131 = !DILocation(line: 791, column: 135, scope: !641)
!2132 = !DILocation(line: 791, column: 165, scope: !641)
!2133 = !DILocation(line: 791, column: 183, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !641, file: !565, line: 791, column: 180)
!2135 = !DILocation(line: 791, column: 200, scope: !2134)
!2136 = !DILocation(line: 791, column: 180, scope: !2134)
!2137 = !DILocation(line: 791, column: 210, scope: !2134)
!2138 = !DILocation(line: 791, column: 180, scope: !641)
!2139 = !DILocation(line: 791, column: 180, scope: !2140)
!2140 = !DILexicalBlockFile(scope: !641, file: !565, discriminator: 5)
!2141 = !DILocation(line: 791, column: 241, scope: !2142)
!2142 = !DILexicalBlockFile(scope: !2134, file: !565, discriminator: 6)
!2143 = !DILocation(line: 791, column: 259, scope: !2134)
!2144 = !DILocation(line: 791, column: 269, scope: !2134)
!2145 = !DILocation(line: 791, column: 294, scope: !2134)
!2146 = !DILocation(line: 791, column: 225, scope: !2134)
!2147 = !DILocation(line: 791, column: 313, scope: !2148)
!2148 = !DILexicalBlockFile(scope: !642, file: !565, discriminator: 7)
!2149 = !DILocation(line: 791, column: 313, scope: !641)
!2150 = !DILocation(line: 791, column: 313, scope: !2151)
!2151 = !DILexicalBlockFile(scope: !641, file: !565, discriminator: 8)
!2152 = !DILocation(line: 791, column: 326, scope: !2153)
!2153 = !DILexicalBlockFile(scope: !642, file: !565, discriminator: 9)
!2154 = !DILocation(line: 791, column: 328, scope: !2155)
!2155 = !DILexicalBlockFile(scope: !2156, file: !565, discriminator: 10)
!2156 = !DILexicalBlockFile(scope: !638, file: !565, discriminator: 3)
!2157 = !DILocation(line: 791, column: 328, scope: !637)
!2158 = !DILocation(line: 791, column: 328, scope: !2159)
!2159 = !DILexicalBlockFile(scope: !637, file: !565, discriminator: 11)
!2160 = !DILocation(line: 792, column: 24, scope: !638)
!2161 = !DILocation(line: 792, column: 9, scope: !638)
!2162 = !DILocation(line: 792, column: 14, scope: !638)
!2163 = !DILocation(line: 792, column: 22, scope: !638)
!2164 = !DILocation(line: 793, column: 21, scope: !638)
!2165 = !DILocation(line: 794, column: 9, scope: !638)
!2166 = !DILocation(line: 796, column: 5, scope: !607)
!2167 = !DILocation(line: 796, column: 10, scope: !2168)
!2168 = !DILexicalBlockFile(scope: !645, file: !565, discriminator: 1)
!2169 = !DILocation(line: 796, column: 20, scope: !645)
!2170 = !DILocation(line: 796, column: 51, scope: !645)
!2171 = !DILocation(line: 796, column: 69, scope: !648)
!2172 = !DILocation(line: 796, column: 85, scope: !648)
!2173 = !DILocation(line: 796, column: 69, scope: !645)
!2174 = !DILocation(line: 796, column: 100, scope: !2175)
!2175 = !DILexicalBlockFile(scope: !648, file: !565, discriminator: 2)
!2176 = !DILocation(line: 796, column: 105, scope: !2177)
!2177 = !DILexicalBlockFile(scope: !647, file: !565, discriminator: 4)
!2178 = !DILocation(line: 796, column: 115, scope: !647)
!2179 = !DILocation(line: 796, column: 145, scope: !647)
!2180 = !DILocation(line: 796, column: 171, scope: !2181)
!2181 = distinct !DILexicalBlock(scope: !647, file: !565, line: 796, column: 168)
!2182 = !DILocation(line: 796, column: 188, scope: !2181)
!2183 = !DILocation(line: 796, column: 168, scope: !2181)
!2184 = !DILocation(line: 796, column: 198, scope: !2181)
!2185 = !DILocation(line: 796, column: 168, scope: !647)
!2186 = !DILocation(line: 796, column: 168, scope: !2187)
!2187 = !DILexicalBlockFile(scope: !647, file: !565, discriminator: 5)
!2188 = !DILocation(line: 796, column: 229, scope: !2189)
!2189 = !DILexicalBlockFile(scope: !2181, file: !565, discriminator: 6)
!2190 = !DILocation(line: 796, column: 247, scope: !2181)
!2191 = !DILocation(line: 796, column: 257, scope: !2181)
!2192 = !DILocation(line: 796, column: 282, scope: !2181)
!2193 = !DILocation(line: 796, column: 213, scope: !2181)
!2194 = !DILocation(line: 796, column: 301, scope: !2195)
!2195 = !DILexicalBlockFile(scope: !648, file: !565, discriminator: 7)
!2196 = !DILocation(line: 796, column: 301, scope: !647)
!2197 = !DILocation(line: 796, column: 301, scope: !2198)
!2198 = !DILexicalBlockFile(scope: !647, file: !565, discriminator: 8)
!2199 = !DILocation(line: 796, column: 301, scope: !2200)
!2200 = !DILexicalBlockFile(scope: !647, file: !565, discriminator: 9)
!2201 = !DILocation(line: 796, column: 314, scope: !2202)
!2202 = !DILexicalBlockFile(scope: !2203, file: !565, discriminator: 10)
!2203 = !DILexicalBlockFile(scope: !607, file: !565, discriminator: 3)
!2204 = !DILocation(line: 796, column: 314, scope: !645)
!2205 = !DILocation(line: 796, column: 314, scope: !2206)
!2206 = !DILexicalBlockFile(scope: !645, file: !565, discriminator: 11)
!2207 = !DILocation(line: 798, column: 9, scope: !2208)
!2208 = distinct !DILexicalBlock(scope: !607, file: !565, line: 798, column: 9)
!2209 = !DILocation(line: 798, column: 17, scope: !2208)
!2210 = !DILocation(line: 798, column: 15, scope: !2208)
!2211 = !DILocation(line: 798, column: 9, scope: !607)
!2212 = !DILocation(line: 799, column: 13, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2214, file: !565, line: 799, column: 13)
!2214 = distinct !DILexicalBlock(scope: !2208, file: !565, line: 798, column: 26)
!2215 = !DILocation(line: 799, column: 23, scope: !2213)
!2216 = !DILocation(line: 799, column: 21, scope: !2213)
!2217 = !DILocation(line: 799, column: 29, scope: !2213)
!2218 = !DILocation(line: 799, column: 13, scope: !2214)
!2219 = !DILocation(line: 801, column: 29, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2213, file: !565, line: 799, column: 34)
!2221 = !DILocation(line: 801, column: 13, scope: !2220)
!2222 = !DILocation(line: 803, column: 13, scope: !2220)
!2223 = !DILocation(line: 805, column: 44, scope: !2214)
!2224 = !DILocation(line: 805, column: 51, scope: !2214)
!2225 = !DILocation(line: 805, column: 58, scope: !2214)
!2226 = !DILocation(line: 805, column: 24, scope: !2214)
!2227 = !DILocation(line: 805, column: 9, scope: !2214)
!2228 = !DILocation(line: 805, column: 14, scope: !2214)
!2229 = !DILocation(line: 805, column: 22, scope: !2214)
!2230 = !DILocation(line: 806, column: 13, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2214, file: !565, line: 806, column: 13)
!2232 = !DILocation(line: 806, column: 18, scope: !2231)
!2233 = !DILocation(line: 806, column: 26, scope: !2231)
!2234 = !DILocation(line: 806, column: 13, scope: !2214)
!2235 = !DILocation(line: 808, column: 13, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2231, file: !565, line: 806, column: 41)
!2237 = !DILocation(line: 810, column: 5, scope: !2214)
!2238 = !DILocation(line: 812, column: 5, scope: !607)
!2239 = !DILocation(line: 812, column: 10, scope: !2240)
!2240 = !DILexicalBlockFile(scope: !650, file: !565, discriminator: 1)
!2241 = !DILocation(line: 812, column: 20, scope: !650)
!2242 = !DILocation(line: 812, column: 50, scope: !650)
!2243 = !DILocation(line: 812, column: 66, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !650, file: !565, line: 812, column: 63)
!2245 = !DILocation(line: 812, column: 83, scope: !2244)
!2246 = !DILocation(line: 812, column: 63, scope: !2244)
!2247 = !DILocation(line: 812, column: 93, scope: !2244)
!2248 = !DILocation(line: 812, column: 63, scope: !650)
!2249 = !DILocation(line: 812, column: 63, scope: !2250)
!2250 = !DILexicalBlockFile(scope: !650, file: !565, discriminator: 2)
!2251 = !DILocation(line: 812, column: 124, scope: !2252)
!2252 = !DILexicalBlockFile(scope: !2244, file: !565, discriminator: 3)
!2253 = !DILocation(line: 812, column: 142, scope: !2244)
!2254 = !DILocation(line: 812, column: 152, scope: !2244)
!2255 = !DILocation(line: 812, column: 177, scope: !2244)
!2256 = !DILocation(line: 812, column: 108, scope: !2244)
!2257 = !DILocation(line: 812, column: 196, scope: !2258)
!2258 = !DILexicalBlockFile(scope: !607, file: !565, discriminator: 4)
!2259 = !DILocation(line: 812, column: 196, scope: !650)
!2260 = !DILocation(line: 812, column: 196, scope: !2261)
!2261 = !DILexicalBlockFile(scope: !650, file: !565, discriminator: 5)
!2262 = !DILocation(line: 813, column: 5, scope: !607)
!2263 = !DILocation(line: 813, column: 10, scope: !2264)
!2264 = !DILexicalBlockFile(scope: !652, file: !565, discriminator: 1)
!2265 = !DILocation(line: 813, column: 20, scope: !652)
!2266 = !DILocation(line: 813, column: 51, scope: !652)
!2267 = !DILocation(line: 813, column: 62, scope: !655)
!2268 = !DILocation(line: 813, column: 78, scope: !655)
!2269 = !DILocation(line: 813, column: 62, scope: !652)
!2270 = !DILocation(line: 813, column: 93, scope: !2271)
!2271 = !DILexicalBlockFile(scope: !655, file: !565, discriminator: 2)
!2272 = !DILocation(line: 813, column: 98, scope: !2273)
!2273 = !DILexicalBlockFile(scope: !654, file: !565, discriminator: 4)
!2274 = !DILocation(line: 813, column: 108, scope: !654)
!2275 = !DILocation(line: 813, column: 138, scope: !654)
!2276 = !DILocation(line: 813, column: 164, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !654, file: !565, line: 813, column: 161)
!2278 = !DILocation(line: 813, column: 181, scope: !2277)
!2279 = !DILocation(line: 813, column: 161, scope: !2277)
!2280 = !DILocation(line: 813, column: 191, scope: !2277)
!2281 = !DILocation(line: 813, column: 161, scope: !654)
!2282 = !DILocation(line: 813, column: 161, scope: !2283)
!2283 = !DILexicalBlockFile(scope: !654, file: !565, discriminator: 5)
!2284 = !DILocation(line: 813, column: 222, scope: !2285)
!2285 = !DILexicalBlockFile(scope: !2277, file: !565, discriminator: 6)
!2286 = !DILocation(line: 813, column: 240, scope: !2277)
!2287 = !DILocation(line: 813, column: 250, scope: !2277)
!2288 = !DILocation(line: 813, column: 275, scope: !2277)
!2289 = !DILocation(line: 813, column: 206, scope: !2277)
!2290 = !DILocation(line: 813, column: 294, scope: !2291)
!2291 = !DILexicalBlockFile(scope: !655, file: !565, discriminator: 7)
!2292 = !DILocation(line: 813, column: 294, scope: !654)
!2293 = !DILocation(line: 813, column: 294, scope: !2294)
!2294 = !DILexicalBlockFile(scope: !654, file: !565, discriminator: 8)
!2295 = !DILocation(line: 813, column: 294, scope: !2296)
!2296 = !DILexicalBlockFile(scope: !654, file: !565, discriminator: 9)
!2297 = !DILocation(line: 813, column: 307, scope: !2202)
!2298 = !DILocation(line: 813, column: 307, scope: !652)
!2299 = !DILocation(line: 813, column: 307, scope: !2300)
!2300 = !DILexicalBlockFile(scope: !652, file: !565, discriminator: 11)
!2301 = !DILocation(line: 814, column: 12, scope: !607)
!2302 = !DILocation(line: 814, column: 5, scope: !607)
!2303 = !DILocation(line: 817, column: 5, scope: !607)
!2304 = !DILocation(line: 817, column: 10, scope: !2305)
!2305 = !DILexicalBlockFile(scope: !657, file: !565, discriminator: 1)
!2306 = !DILocation(line: 817, column: 20, scope: !657)
!2307 = !DILocation(line: 817, column: 51, scope: !657)
!2308 = !DILocation(line: 817, column: 59, scope: !660)
!2309 = !DILocation(line: 817, column: 75, scope: !660)
!2310 = !DILocation(line: 817, column: 59, scope: !657)
!2311 = !DILocation(line: 817, column: 90, scope: !2312)
!2312 = !DILexicalBlockFile(scope: !660, file: !565, discriminator: 2)
!2313 = !DILocation(line: 817, column: 95, scope: !2314)
!2314 = !DILexicalBlockFile(scope: !659, file: !565, discriminator: 4)
!2315 = !DILocation(line: 817, column: 105, scope: !659)
!2316 = !DILocation(line: 817, column: 135, scope: !659)
!2317 = !DILocation(line: 817, column: 161, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !659, file: !565, line: 817, column: 158)
!2319 = !DILocation(line: 817, column: 178, scope: !2318)
!2320 = !DILocation(line: 817, column: 158, scope: !2318)
!2321 = !DILocation(line: 817, column: 188, scope: !2318)
!2322 = !DILocation(line: 817, column: 158, scope: !659)
!2323 = !DILocation(line: 817, column: 158, scope: !2324)
!2324 = !DILexicalBlockFile(scope: !659, file: !565, discriminator: 5)
!2325 = !DILocation(line: 817, column: 219, scope: !2326)
!2326 = !DILexicalBlockFile(scope: !2318, file: !565, discriminator: 6)
!2327 = !DILocation(line: 817, column: 237, scope: !2318)
!2328 = !DILocation(line: 817, column: 247, scope: !2318)
!2329 = !DILocation(line: 817, column: 272, scope: !2318)
!2330 = !DILocation(line: 817, column: 203, scope: !2318)
!2331 = !DILocation(line: 817, column: 291, scope: !2332)
!2332 = !DILexicalBlockFile(scope: !660, file: !565, discriminator: 7)
!2333 = !DILocation(line: 817, column: 291, scope: !659)
!2334 = !DILocation(line: 817, column: 291, scope: !2335)
!2335 = !DILexicalBlockFile(scope: !659, file: !565, discriminator: 8)
!2336 = !DILocation(line: 817, column: 291, scope: !2337)
!2337 = !DILexicalBlockFile(scope: !659, file: !565, discriminator: 9)
!2338 = !DILocation(line: 817, column: 304, scope: !2202)
!2339 = !DILocation(line: 817, column: 304, scope: !657)
!2340 = !DILocation(line: 817, column: 304, scope: !2341)
!2341 = !DILexicalBlockFile(scope: !657, file: !565, discriminator: 11)
!2342 = !DILocation(line: 818, column: 5, scope: !607)
!2343 = !DILocation(line: 818, column: 10, scope: !2344)
!2344 = !DILexicalBlockFile(scope: !662, file: !565, discriminator: 1)
!2345 = !DILocation(line: 818, column: 20, scope: !662)
!2346 = !DILocation(line: 818, column: 51, scope: !662)
!2347 = !DILocation(line: 818, column: 62, scope: !665)
!2348 = !DILocation(line: 818, column: 78, scope: !665)
!2349 = !DILocation(line: 818, column: 62, scope: !662)
!2350 = !DILocation(line: 818, column: 93, scope: !2351)
!2351 = !DILexicalBlockFile(scope: !665, file: !565, discriminator: 2)
!2352 = !DILocation(line: 818, column: 98, scope: !2353)
!2353 = !DILexicalBlockFile(scope: !664, file: !565, discriminator: 4)
!2354 = !DILocation(line: 818, column: 108, scope: !664)
!2355 = !DILocation(line: 818, column: 138, scope: !664)
!2356 = !DILocation(line: 818, column: 164, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !664, file: !565, line: 818, column: 161)
!2358 = !DILocation(line: 818, column: 181, scope: !2357)
!2359 = !DILocation(line: 818, column: 161, scope: !2357)
!2360 = !DILocation(line: 818, column: 191, scope: !2357)
!2361 = !DILocation(line: 818, column: 161, scope: !664)
!2362 = !DILocation(line: 818, column: 161, scope: !2363)
!2363 = !DILexicalBlockFile(scope: !664, file: !565, discriminator: 5)
!2364 = !DILocation(line: 818, column: 222, scope: !2365)
!2365 = !DILexicalBlockFile(scope: !2357, file: !565, discriminator: 6)
!2366 = !DILocation(line: 818, column: 240, scope: !2357)
!2367 = !DILocation(line: 818, column: 250, scope: !2357)
!2368 = !DILocation(line: 818, column: 275, scope: !2357)
!2369 = !DILocation(line: 818, column: 206, scope: !2357)
!2370 = !DILocation(line: 818, column: 294, scope: !2371)
!2371 = !DILexicalBlockFile(scope: !665, file: !565, discriminator: 7)
!2372 = !DILocation(line: 818, column: 294, scope: !664)
!2373 = !DILocation(line: 818, column: 294, scope: !2374)
!2374 = !DILexicalBlockFile(scope: !664, file: !565, discriminator: 8)
!2375 = !DILocation(line: 818, column: 294, scope: !2376)
!2376 = !DILexicalBlockFile(scope: !664, file: !565, discriminator: 9)
!2377 = !DILocation(line: 818, column: 307, scope: !2202)
!2378 = !DILocation(line: 818, column: 307, scope: !662)
!2379 = !DILocation(line: 818, column: 307, scope: !2380)
!2380 = !DILexicalBlockFile(scope: !662, file: !565, discriminator: 11)
!2381 = !DILocation(line: 819, column: 5, scope: !607)
!2382 = !DILocation(line: 819, column: 10, scope: !2383)
!2383 = !DILexicalBlockFile(scope: !667, file: !565, discriminator: 1)
!2384 = !DILocation(line: 819, column: 20, scope: !667)
!2385 = !DILocation(line: 819, column: 51, scope: !667)
!2386 = !DILocation(line: 819, column: 69, scope: !670)
!2387 = !DILocation(line: 819, column: 85, scope: !670)
!2388 = !DILocation(line: 819, column: 69, scope: !667)
!2389 = !DILocation(line: 819, column: 100, scope: !2390)
!2390 = !DILexicalBlockFile(scope: !670, file: !565, discriminator: 2)
!2391 = !DILocation(line: 819, column: 105, scope: !2392)
!2392 = !DILexicalBlockFile(scope: !669, file: !565, discriminator: 4)
!2393 = !DILocation(line: 819, column: 115, scope: !669)
!2394 = !DILocation(line: 819, column: 145, scope: !669)
!2395 = !DILocation(line: 819, column: 171, scope: !2396)
!2396 = distinct !DILexicalBlock(scope: !669, file: !565, line: 819, column: 168)
!2397 = !DILocation(line: 819, column: 188, scope: !2396)
!2398 = !DILocation(line: 819, column: 168, scope: !2396)
!2399 = !DILocation(line: 819, column: 198, scope: !2396)
!2400 = !DILocation(line: 819, column: 168, scope: !669)
!2401 = !DILocation(line: 819, column: 168, scope: !2402)
!2402 = !DILexicalBlockFile(scope: !669, file: !565, discriminator: 5)
!2403 = !DILocation(line: 819, column: 229, scope: !2404)
!2404 = !DILexicalBlockFile(scope: !2396, file: !565, discriminator: 6)
!2405 = !DILocation(line: 819, column: 247, scope: !2396)
!2406 = !DILocation(line: 819, column: 257, scope: !2396)
!2407 = !DILocation(line: 819, column: 282, scope: !2396)
!2408 = !DILocation(line: 819, column: 213, scope: !2396)
!2409 = !DILocation(line: 819, column: 301, scope: !2410)
!2410 = !DILexicalBlockFile(scope: !670, file: !565, discriminator: 7)
!2411 = !DILocation(line: 819, column: 301, scope: !669)
!2412 = !DILocation(line: 819, column: 301, scope: !2413)
!2413 = !DILexicalBlockFile(scope: !669, file: !565, discriminator: 8)
!2414 = !DILocation(line: 819, column: 301, scope: !2415)
!2415 = !DILexicalBlockFile(scope: !669, file: !565, discriminator: 9)
!2416 = !DILocation(line: 819, column: 314, scope: !2202)
!2417 = !DILocation(line: 819, column: 314, scope: !667)
!2418 = !DILocation(line: 819, column: 314, scope: !2419)
!2419 = !DILexicalBlockFile(scope: !667, file: !565, discriminator: 11)
!2420 = !DILocation(line: 820, column: 5, scope: !607)
!2421 = !DILocation(line: 820, column: 10, scope: !2422)
!2422 = !DILexicalBlockFile(scope: !672, file: !565, discriminator: 1)
!2423 = !DILocation(line: 820, column: 20, scope: !672)
!2424 = !DILocation(line: 820, column: 51, scope: !672)
!2425 = !DILocation(line: 820, column: 63, scope: !675)
!2426 = !DILocation(line: 820, column: 79, scope: !675)
!2427 = !DILocation(line: 820, column: 63, scope: !672)
!2428 = !DILocation(line: 820, column: 94, scope: !2429)
!2429 = !DILexicalBlockFile(scope: !675, file: !565, discriminator: 2)
!2430 = !DILocation(line: 820, column: 99, scope: !2431)
!2431 = !DILexicalBlockFile(scope: !674, file: !565, discriminator: 4)
!2432 = !DILocation(line: 820, column: 109, scope: !674)
!2433 = !DILocation(line: 820, column: 139, scope: !674)
!2434 = !DILocation(line: 820, column: 165, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !674, file: !565, line: 820, column: 162)
!2436 = !DILocation(line: 820, column: 182, scope: !2435)
!2437 = !DILocation(line: 820, column: 162, scope: !2435)
!2438 = !DILocation(line: 820, column: 192, scope: !2435)
!2439 = !DILocation(line: 820, column: 162, scope: !674)
!2440 = !DILocation(line: 820, column: 162, scope: !2441)
!2441 = !DILexicalBlockFile(scope: !674, file: !565, discriminator: 5)
!2442 = !DILocation(line: 820, column: 223, scope: !2443)
!2443 = !DILexicalBlockFile(scope: !2435, file: !565, discriminator: 6)
!2444 = !DILocation(line: 820, column: 241, scope: !2435)
!2445 = !DILocation(line: 820, column: 251, scope: !2435)
!2446 = !DILocation(line: 820, column: 276, scope: !2435)
!2447 = !DILocation(line: 820, column: 207, scope: !2435)
!2448 = !DILocation(line: 820, column: 295, scope: !2449)
!2449 = !DILexicalBlockFile(scope: !675, file: !565, discriminator: 7)
!2450 = !DILocation(line: 820, column: 295, scope: !674)
!2451 = !DILocation(line: 820, column: 295, scope: !2452)
!2452 = !DILexicalBlockFile(scope: !674, file: !565, discriminator: 8)
!2453 = !DILocation(line: 820, column: 295, scope: !2454)
!2454 = !DILexicalBlockFile(scope: !674, file: !565, discriminator: 9)
!2455 = !DILocation(line: 820, column: 308, scope: !2202)
!2456 = !DILocation(line: 820, column: 308, scope: !672)
!2457 = !DILocation(line: 820, column: 308, scope: !2458)
!2458 = !DILexicalBlockFile(scope: !672, file: !565, discriminator: 11)
!2459 = !DILocation(line: 821, column: 5, scope: !607)
!2460 = !DILocation(line: 822, column: 1, scope: !607)
!2461 = !DILocation(line: 467, column: 39, scope: !676)
!2462 = !DILocation(line: 468, column: 45, scope: !676)
!2463 = !DILocation(line: 469, column: 33, scope: !676)
!2464 = !DILocation(line: 469, column: 51, scope: !676)
!2465 = !DILocation(line: 470, column: 33, scope: !676)
!2466 = !DILocation(line: 470, column: 45, scope: !676)
!2467 = !DILocation(line: 472, column: 5, scope: !676)
!2468 = !DILocation(line: 472, column: 27, scope: !676)
!2469 = !DILocation(line: 473, column: 5, scope: !676)
!2470 = !DILocation(line: 473, column: 16, scope: !676)
!2471 = !DILocation(line: 473, column: 27, scope: !676)
!2472 = !DILocation(line: 474, column: 5, scope: !676)
!2473 = !DILocation(line: 474, column: 16, scope: !676)
!2474 = !DILocation(line: 475, column: 5, scope: !676)
!2475 = !DILocation(line: 475, column: 9, scope: !676)
!2476 = !DILocation(line: 476, column: 5, scope: !676)
!2477 = !DILocation(line: 476, column: 11, scope: !676)
!2478 = !DILocation(line: 478, column: 43, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !676, file: !565, line: 478, column: 9)
!2480 = !DILocation(line: 478, column: 27, scope: !2479)
!2481 = !DILocation(line: 478, column: 50, scope: !2479)
!2482 = !DILocation(line: 478, column: 56, scope: !2479)
!2483 = !DILocation(line: 478, column: 25, scope: !2479)
!2484 = !DILocation(line: 478, column: 25, scope: !2485)
!2485 = !DILexicalBlockFile(scope: !2479, file: !565, discriminator: 1)
!2486 = !DILocation(line: 478, column: 99, scope: !2487)
!2487 = !DILexicalBlockFile(scope: !2479, file: !565, discriminator: 2)
!2488 = !DILocation(line: 478, column: 69, scope: !2479)
!2489 = !DILocation(line: 478, column: 108, scope: !2490)
!2490 = !DILexicalBlockFile(scope: !2491, file: !565, discriminator: 4)
!2491 = !DILexicalBlockFile(scope: !2479, file: !565, discriminator: 3)
!2492 = !DILocation(line: 478, column: 9, scope: !676)
!2493 = !DILocation(line: 479, column: 9, scope: !2479)
!2494 = !DILocation(line: 480, column: 63, scope: !676)
!2495 = !DILocation(line: 480, column: 45, scope: !676)
!2496 = !DILocation(line: 480, column: 71, scope: !676)
!2497 = !DILocation(line: 480, column: 13, scope: !676)
!2498 = !DILocation(line: 482, column: 9, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !676, file: !565, line: 482, column: 9)
!2500 = !DILocation(line: 482, column: 17, scope: !2499)
!2501 = !DILocation(line: 482, column: 22, scope: !2499)
!2502 = !DILocation(line: 482, column: 27, scope: !2503)
!2503 = !DILexicalBlockFile(scope: !2499, file: !565, discriminator: 1)
!2504 = !DILocation(line: 482, column: 33, scope: !2499)
!2505 = !DILocation(line: 482, column: 9, scope: !676)
!2506 = !DILocation(line: 483, column: 16, scope: !2499)
!2507 = !DILocation(line: 483, column: 9, scope: !2499)
!2508 = !DILocation(line: 485, column: 9, scope: !676)
!2509 = !DILocation(line: 485, column: 16, scope: !676)
!2510 = !{!2511, !1465, i64 40}
!2511 = !{!"", !1465, i64 0, !1500, i64 8, !1500, i64 16, !1465, i64 24, !1465, i64 32, !1465, i64 40, !1465, i64 48}
!2512 = !DILocation(line: 486, column: 9, scope: !676)
!2513 = !DILocation(line: 486, column: 16, scope: !676)
!2514 = !{!2511, !1465, i64 48}
!2515 = !DILocation(line: 487, column: 17, scope: !676)
!2516 = !DILocation(line: 487, column: 9, scope: !676)
!2517 = !DILocation(line: 487, column: 15, scope: !676)
!2518 = !{!2511, !1465, i64 0}
!2519 = !DILocation(line: 488, column: 9, scope: !676)
!2520 = !DILocation(line: 488, column: 15, scope: !676)
!2521 = !{!2511, !1500, i64 8}
!2522 = !DILocation(line: 489, column: 17, scope: !676)
!2523 = !DILocation(line: 489, column: 9, scope: !676)
!2524 = !DILocation(line: 489, column: 15, scope: !676)
!2525 = !{!2511, !1500, i64 16}
!2526 = !DILocation(line: 490, column: 64, scope: !676)
!2527 = !DILocation(line: 490, column: 42, scope: !676)
!2528 = !DILocation(line: 490, column: 73, scope: !676)
!2529 = !DILocation(line: 490, column: 79, scope: !676)
!2530 = !DILocation(line: 490, column: 10, scope: !676)
!2531 = !DILocation(line: 491, column: 50, scope: !676)
!2532 = !DILocation(line: 491, column: 29, scope: !676)
!2533 = !DILocation(line: 491, column: 59, scope: !676)
!2534 = !DILocation(line: 491, column: 65, scope: !676)
!2535 = !DILocation(line: 491, column: 27, scope: !676)
!2536 = !DILocation(line: 491, column: 127, scope: !2537)
!2537 = !DILexicalBlockFile(scope: !676, file: !565, discriminator: 1)
!2538 = !DILocation(line: 491, column: 107, scope: !676)
!2539 = !DILocation(line: 491, column: 135, scope: !676)
!2540 = !DILocation(line: 491, column: 141, scope: !676)
!2541 = !DILocation(line: 491, column: 77, scope: !676)
!2542 = !DILocation(line: 491, column: 180, scope: !2543)
!2543 = !DILexicalBlockFile(scope: !676, file: !565, discriminator: 3)
!2544 = !DILocation(line: 491, column: 159, scope: !676)
!2545 = !DILocation(line: 491, column: 187, scope: !676)
!2546 = !DILocation(line: 491, column: 151, scope: !676)
!2547 = !DILocation(line: 491, column: 234, scope: !2548)
!2548 = !DILexicalBlockFile(scope: !676, file: !565, discriminator: 4)
!2549 = !DILocation(line: 491, column: 204, scope: !676)
!2550 = !DILocation(line: 491, column: 241, scope: !676)
!2551 = !DILocation(line: 491, column: 196, scope: !676)
!2552 = !DILocation(line: 491, column: 27, scope: !2553)
!2553 = !DILexicalBlockFile(scope: !2554, file: !565, discriminator: 6)
!2554 = !DILexicalBlockFile(scope: !676, file: !565, discriminator: 5)
!2555 = !DILocation(line: 491, column: 292, scope: !2556)
!2556 = !DILexicalBlockFile(scope: !676, file: !565, discriminator: 2)
!2557 = !DILocation(line: 491, column: 268, scope: !676)
!2558 = !DILocation(line: 491, column: 301, scope: !676)
!2559 = !DILocation(line: 491, column: 306, scope: !676)
!2560 = !DILocation(line: 491, column: 10, scope: !2561)
!2561 = !DILexicalBlockFile(scope: !2562, file: !565, discriminator: 8)
!2562 = !DILexicalBlockFile(scope: !676, file: !565, discriminator: 7)
!2563 = !DILocation(line: 493, column: 9, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !676, file: !565, line: 493, column: 9)
!2565 = !DILocation(line: 493, column: 17, scope: !2564)
!2566 = !DILocation(line: 493, column: 9, scope: !676)
!2567 = !DILocation(line: 494, column: 9, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2564, file: !565, line: 493, column: 63)
!2569 = !DILocation(line: 495, column: 9, scope: !2568)
!2570 = !DILocation(line: 498, column: 56, scope: !676)
!2571 = !DILocation(line: 498, column: 64, scope: !676)
!2572 = !DILocation(line: 498, column: 68, scope: !676)
!2573 = !DILocation(line: 498, column: 18, scope: !676)
!2574 = !DILocation(line: 498, column: 9, scope: !676)
!2575 = !DILocation(line: 498, column: 16, scope: !676)
!2576 = !DILocation(line: 499, column: 13, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !676, file: !565, line: 499, column: 9)
!2578 = !DILocation(line: 499, column: 20, scope: !2577)
!2579 = !DILocation(line: 499, column: 9, scope: !676)
!2580 = !DILocation(line: 500, column: 9, scope: !2577)
!2581 = !DILocation(line: 501, column: 74, scope: !676)
!2582 = !DILocation(line: 501, column: 52, scope: !676)
!2583 = !DILocation(line: 501, column: 84, scope: !676)
!2584 = !DILocation(line: 501, column: 50, scope: !676)
!2585 = !DILocation(line: 501, column: 9, scope: !676)
!2586 = !DILocation(line: 501, column: 16, scope: !676)
!2587 = !{!2511, !1465, i64 24}
!2588 = !DILocation(line: 502, column: 26, scope: !676)
!2589 = !DILocation(line: 502, column: 70, scope: !676)
!2590 = !DILocation(line: 502, column: 51, scope: !676)
!2591 = !DILocation(line: 502, column: 80, scope: !676)
!2592 = !{!1507, !1500, i64 16}
!2593 = !DILocation(line: 502, column: 33, scope: !676)
!2594 = !DILocation(line: 502, column: 9, scope: !676)
!2595 = !DILocation(line: 502, column: 20, scope: !676)
!2596 = !{!2511, !1465, i64 32}
!2597 = !DILocation(line: 504, column: 5, scope: !676)
!2598 = !DILocation(line: 504, column: 16, scope: !2599)
!2599 = !DILexicalBlockFile(scope: !2537, file: !565, discriminator: 2)
!2600 = !DILocation(line: 504, column: 28, scope: !676)
!2601 = !DILocation(line: 504, column: 22, scope: !676)
!2602 = !DILocation(line: 507, column: 9, scope: !703)
!2603 = !DILocation(line: 507, column: 20, scope: !703)
!2604 = !DILocation(line: 507, column: 47, scope: !703)
!2605 = !DILocation(line: 507, column: 64, scope: !703)
!2606 = !DILocation(line: 507, column: 58, scope: !703)
!2607 = !DILocation(line: 509, column: 13, scope: !703)
!2608 = !DILocation(line: 509, column: 20, scope: !703)
!2609 = !{!1706, !1465, i64 24}
!2610 = !DILocation(line: 509, column: 27, scope: !703)
!2611 = !DILocation(line: 509, column: 34, scope: !703)
!2612 = !DILocation(line: 509, column: 41, scope: !703)
!2613 = !DILocation(line: 510, column: 27, scope: !703)
!2614 = !DILocation(line: 510, column: 33, scope: !703)
!2615 = !DILocation(line: 511, column: 32, scope: !703)
!2616 = !DILocation(line: 511, column: 43, scope: !703)
!2617 = !DILocation(line: 512, column: 32, scope: !703)
!2618 = !DILocation(line: 512, column: 40, scope: !703)
!2619 = !DILocation(line: 512, column: 49, scope: !703)
!2620 = !DILocation(line: 509, column: 11, scope: !703)
!2621 = !DILocation(line: 513, column: 14, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !703, file: !565, line: 513, column: 13)
!2623 = !DILocation(line: 513, column: 16, scope: !2622)
!2624 = !DILocation(line: 513, column: 22, scope: !2622)
!2625 = !DILocation(line: 513, column: 26, scope: !2626)
!2626 = !DILexicalBlockFile(scope: !2622, file: !565, discriminator: 1)
!2627 = !DILocation(line: 513, column: 28, scope: !2622)
!2628 = !DILocation(line: 513, column: 36, scope: !2622)
!2629 = !DILocation(line: 513, column: 41, scope: !2630)
!2630 = !DILexicalBlockFile(scope: !2622, file: !565, discriminator: 2)
!2631 = !DILocation(line: 513, column: 47, scope: !2622)
!2632 = !DILocation(line: 513, column: 13, scope: !703)
!2633 = !DILocation(line: 514, column: 13, scope: !2622)
!2634 = !DILocation(line: 515, column: 42, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2622, file: !565, line: 515, column: 18)
!2636 = !DILocation(line: 515, column: 49, scope: !2635)
!2637 = !DILocation(line: 515, column: 62, scope: !2635)
!2638 = !DILocation(line: 515, column: 69, scope: !2635)
!2639 = !DILocation(line: 515, column: 18, scope: !2635)
!2640 = !DILocation(line: 515, column: 18, scope: !2622)
!2641 = !DILocation(line: 516, column: 13, scope: !2635)
!2642 = !DILocation(line: 517, column: 18, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2635, file: !565, line: 517, column: 18)
!2644 = !DILocation(line: 517, column: 20, scope: !2643)
!2645 = !DILocation(line: 517, column: 18, scope: !2635)
!2646 = !DILocation(line: 518, column: 13, scope: !2643)
!2647 = !DILocation(line: 519, column: 5, scope: !676)
!2648 = !DILocation(line: 519, column: 5, scope: !2537)
!2649 = !DILocation(line: 521, column: 9, scope: !708)
!2650 = !DILocation(line: 521, column: 16, scope: !708)
!2651 = !DILocation(line: 521, column: 25, scope: !708)
!2652 = !DILocation(line: 521, column: 39, scope: !708)
!2653 = !DILocation(line: 521, column: 43, scope: !2654)
!2654 = !DILexicalBlockFile(scope: !708, file: !565, discriminator: 1)
!2655 = !DILocation(line: 521, column: 49, scope: !708)
!2656 = !DILocation(line: 521, column: 9, scope: !676)
!2657 = !DILocation(line: 522, column: 9, scope: !708)
!2658 = !DILocation(line: 523, column: 13, scope: !705)
!2659 = !DILocation(line: 523, column: 24, scope: !705)
!2660 = !DILocation(line: 525, column: 40, scope: !705)
!2661 = !DILocation(line: 525, column: 57, scope: !705)
!2662 = !DILocation(line: 525, column: 51, scope: !705)
!2663 = !DILocation(line: 525, column: 21, scope: !705)
!2664 = !DILocation(line: 526, column: 17, scope: !705)
!2665 = !DILocation(line: 526, column: 24, scope: !705)
!2666 = !DILocation(line: 526, column: 33, scope: !705)
!2667 = !DILocation(line: 526, column: 40, scope: !705)
!2668 = !DILocation(line: 526, column: 47, scope: !705)
!2669 = !DILocation(line: 526, column: 60, scope: !705)
!2670 = !DILocation(line: 527, column: 33, scope: !705)
!2671 = !DILocation(line: 526, column: 15, scope: !705)
!2672 = !DILocation(line: 528, column: 17, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !705, file: !565, line: 528, column: 17)
!2674 = !DILocation(line: 528, column: 19, scope: !2673)
!2675 = !DILocation(line: 528, column: 17, scope: !705)
!2676 = !DILocation(line: 529, column: 17, scope: !2673)
!2677 = !DILocation(line: 530, column: 46, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2673, file: !565, line: 530, column: 22)
!2679 = !DILocation(line: 530, column: 53, scope: !2678)
!2680 = !DILocation(line: 531, column: 52, scope: !2678)
!2681 = !DILocation(line: 531, column: 60, scope: !2678)
!2682 = !DILocation(line: 530, column: 22, scope: !2678)
!2683 = !DILocation(line: 530, column: 22, scope: !2673)
!2684 = !DILocation(line: 532, column: 17, scope: !2678)
!2685 = !DILocation(line: 533, column: 9, scope: !706)
!2686 = !DILocation(line: 533, column: 9, scope: !2687)
!2687 = !DILexicalBlockFile(scope: !706, file: !565, discriminator: 1)
!2688 = !DILocation(line: 522, column: 9, scope: !706)
!2689 = !DILocation(line: 533, column: 9, scope: !707)
!2690 = !DILocation(line: 535, column: 42, scope: !676)
!2691 = !DILocation(line: 536, column: 69, scope: !676)
!2692 = !DILocation(line: 536, column: 47, scope: !676)
!2693 = !DILocation(line: 536, column: 79, scope: !676)
!2694 = !DILocation(line: 536, column: 45, scope: !676)
!2695 = !DILocation(line: 535, column: 49, scope: !676)
!2696 = !DILocation(line: 535, column: 15, scope: !676)
!2697 = !DILocation(line: 538, column: 9, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !676, file: !565, line: 538, column: 9)
!2699 = !DILocation(line: 538, column: 57, scope: !2698)
!2700 = !DILocation(line: 538, column: 38, scope: !2698)
!2701 = !DILocation(line: 538, column: 67, scope: !2698)
!2702 = !DILocation(line: 538, column: 19, scope: !2698)
!2703 = !DILocation(line: 538, column: 9, scope: !676)
!2704 = !DILocation(line: 539, column: 34, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2698, file: !565, line: 539, column: 13)
!2706 = !DILocation(line: 539, column: 42, scope: !2705)
!2707 = !DILocation(line: 539, column: 13, scope: !2705)
!2708 = !DILocation(line: 539, column: 53, scope: !2705)
!2709 = !DILocation(line: 539, column: 13, scope: !2698)
!2710 = !DILocation(line: 540, column: 13, scope: !2705)
!2711 = !DILocation(line: 539, column: 57, scope: !2712)
!2712 = !DILexicalBlockFile(scope: !2705, file: !565, discriminator: 1)
!2713 = !DILocation(line: 542, column: 9, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !676, file: !565, line: 542, column: 9)
!2715 = !DILocation(line: 542, column: 9, scope: !676)
!2716 = !DILocation(line: 543, column: 24, scope: !2714)
!2717 = !DILocation(line: 543, column: 10, scope: !2714)
!2718 = !DILocation(line: 543, column: 18, scope: !2714)
!2719 = !DILocation(line: 543, column: 9, scope: !2714)
!2720 = !DILocation(line: 544, column: 5, scope: !676)
!2721 = !DILocation(line: 544, column: 10, scope: !2722)
!2722 = !DILexicalBlockFile(scope: !710, file: !565, discriminator: 1)
!2723 = !DILocation(line: 544, column: 20, scope: !710)
!2724 = !DILocation(line: 544, column: 55, scope: !710)
!2725 = !DILocation(line: 544, column: 68, scope: !713)
!2726 = !DILocation(line: 544, column: 84, scope: !713)
!2727 = !DILocation(line: 544, column: 68, scope: !710)
!2728 = !DILocation(line: 544, column: 99, scope: !2729)
!2729 = !DILexicalBlockFile(scope: !713, file: !565, discriminator: 2)
!2730 = !DILocation(line: 544, column: 104, scope: !2731)
!2731 = !DILexicalBlockFile(scope: !712, file: !565, discriminator: 4)
!2732 = !DILocation(line: 544, column: 114, scope: !712)
!2733 = !DILocation(line: 544, column: 144, scope: !712)
!2734 = !DILocation(line: 544, column: 170, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !712, file: !565, line: 544, column: 167)
!2736 = !DILocation(line: 544, column: 187, scope: !2735)
!2737 = !DILocation(line: 544, column: 167, scope: !2735)
!2738 = !DILocation(line: 544, column: 197, scope: !2735)
!2739 = !DILocation(line: 544, column: 167, scope: !712)
!2740 = !DILocation(line: 544, column: 167, scope: !2741)
!2741 = !DILexicalBlockFile(scope: !712, file: !565, discriminator: 5)
!2742 = !DILocation(line: 544, column: 228, scope: !2743)
!2743 = !DILexicalBlockFile(scope: !2735, file: !565, discriminator: 6)
!2744 = !DILocation(line: 544, column: 246, scope: !2735)
!2745 = !DILocation(line: 544, column: 256, scope: !2735)
!2746 = !DILocation(line: 544, column: 281, scope: !2735)
!2747 = !DILocation(line: 544, column: 212, scope: !2735)
!2748 = !DILocation(line: 544, column: 300, scope: !2749)
!2749 = !DILexicalBlockFile(scope: !713, file: !565, discriminator: 7)
!2750 = !DILocation(line: 544, column: 300, scope: !712)
!2751 = !DILocation(line: 544, column: 300, scope: !2752)
!2752 = !DILexicalBlockFile(scope: !712, file: !565, discriminator: 8)
!2753 = !DILocation(line: 544, column: 300, scope: !2754)
!2754 = !DILexicalBlockFile(scope: !712, file: !565, discriminator: 9)
!2755 = !DILocation(line: 544, column: 313, scope: !2756)
!2756 = !DILexicalBlockFile(scope: !2543, file: !565, discriminator: 10)
!2757 = !DILocation(line: 544, column: 313, scope: !710)
!2758 = !DILocation(line: 544, column: 313, scope: !2759)
!2759 = !DILexicalBlockFile(scope: !710, file: !565, discriminator: 11)
!2760 = !DILocation(line: 545, column: 16, scope: !676)
!2761 = !DILocation(line: 545, column: 5, scope: !676)
!2762 = !DILocation(line: 548, column: 5, scope: !676)
!2763 = !DILocation(line: 548, column: 10, scope: !2764)
!2764 = !DILexicalBlockFile(scope: !715, file: !565, discriminator: 1)
!2765 = !DILocation(line: 548, column: 20, scope: !715)
!2766 = !DILocation(line: 548, column: 55, scope: !715)
!2767 = !DILocation(line: 548, column: 68, scope: !718)
!2768 = !DILocation(line: 548, column: 84, scope: !718)
!2769 = !DILocation(line: 548, column: 68, scope: !715)
!2770 = !DILocation(line: 548, column: 99, scope: !2771)
!2771 = !DILexicalBlockFile(scope: !718, file: !565, discriminator: 2)
!2772 = !DILocation(line: 548, column: 104, scope: !2773)
!2773 = !DILexicalBlockFile(scope: !717, file: !565, discriminator: 4)
!2774 = !DILocation(line: 548, column: 114, scope: !717)
!2775 = !DILocation(line: 548, column: 144, scope: !717)
!2776 = !DILocation(line: 548, column: 170, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !717, file: !565, line: 548, column: 167)
!2778 = !DILocation(line: 548, column: 187, scope: !2777)
!2779 = !DILocation(line: 548, column: 167, scope: !2777)
!2780 = !DILocation(line: 548, column: 197, scope: !2777)
!2781 = !DILocation(line: 548, column: 167, scope: !717)
!2782 = !DILocation(line: 548, column: 167, scope: !2783)
!2783 = !DILexicalBlockFile(scope: !717, file: !565, discriminator: 5)
!2784 = !DILocation(line: 548, column: 228, scope: !2785)
!2785 = !DILexicalBlockFile(scope: !2777, file: !565, discriminator: 6)
!2786 = !DILocation(line: 548, column: 246, scope: !2777)
!2787 = !DILocation(line: 548, column: 256, scope: !2777)
!2788 = !DILocation(line: 548, column: 281, scope: !2777)
!2789 = !DILocation(line: 548, column: 212, scope: !2777)
!2790 = !DILocation(line: 548, column: 300, scope: !2791)
!2791 = !DILexicalBlockFile(scope: !718, file: !565, discriminator: 7)
!2792 = !DILocation(line: 548, column: 300, scope: !717)
!2793 = !DILocation(line: 548, column: 300, scope: !2794)
!2794 = !DILexicalBlockFile(scope: !717, file: !565, discriminator: 8)
!2795 = !DILocation(line: 548, column: 300, scope: !2796)
!2796 = !DILexicalBlockFile(scope: !717, file: !565, discriminator: 9)
!2797 = !DILocation(line: 548, column: 313, scope: !2756)
!2798 = !DILocation(line: 548, column: 313, scope: !715)
!2799 = !DILocation(line: 548, column: 313, scope: !2800)
!2800 = !DILexicalBlockFile(scope: !715, file: !565, discriminator: 11)
!2801 = !DILocation(line: 549, column: 5, scope: !676)
!2802 = !DILocation(line: 549, column: 10, scope: !2803)
!2803 = !DILexicalBlockFile(scope: !720, file: !565, discriminator: 1)
!2804 = !DILocation(line: 549, column: 20, scope: !720)
!2805 = !DILocation(line: 549, column: 55, scope: !720)
!2806 = !DILocation(line: 549, column: 68, scope: !723)
!2807 = !DILocation(line: 549, column: 84, scope: !723)
!2808 = !DILocation(line: 549, column: 68, scope: !720)
!2809 = !DILocation(line: 549, column: 99, scope: !2810)
!2810 = !DILexicalBlockFile(scope: !723, file: !565, discriminator: 2)
!2811 = !DILocation(line: 549, column: 104, scope: !2812)
!2812 = !DILexicalBlockFile(scope: !722, file: !565, discriminator: 4)
!2813 = !DILocation(line: 549, column: 114, scope: !722)
!2814 = !DILocation(line: 549, column: 144, scope: !722)
!2815 = !DILocation(line: 549, column: 170, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !722, file: !565, line: 549, column: 167)
!2817 = !DILocation(line: 549, column: 187, scope: !2816)
!2818 = !DILocation(line: 549, column: 167, scope: !2816)
!2819 = !DILocation(line: 549, column: 197, scope: !2816)
!2820 = !DILocation(line: 549, column: 167, scope: !722)
!2821 = !DILocation(line: 549, column: 167, scope: !2822)
!2822 = !DILexicalBlockFile(scope: !722, file: !565, discriminator: 5)
!2823 = !DILocation(line: 549, column: 228, scope: !2824)
!2824 = !DILexicalBlockFile(scope: !2816, file: !565, discriminator: 6)
!2825 = !DILocation(line: 549, column: 246, scope: !2816)
!2826 = !DILocation(line: 549, column: 256, scope: !2816)
!2827 = !DILocation(line: 549, column: 281, scope: !2816)
!2828 = !DILocation(line: 549, column: 212, scope: !2816)
!2829 = !DILocation(line: 549, column: 300, scope: !2830)
!2830 = !DILexicalBlockFile(scope: !723, file: !565, discriminator: 7)
!2831 = !DILocation(line: 549, column: 300, scope: !722)
!2832 = !DILocation(line: 549, column: 300, scope: !2833)
!2833 = !DILexicalBlockFile(scope: !722, file: !565, discriminator: 8)
!2834 = !DILocation(line: 549, column: 300, scope: !2835)
!2835 = !DILexicalBlockFile(scope: !722, file: !565, discriminator: 9)
!2836 = !DILocation(line: 549, column: 313, scope: !2756)
!2837 = !DILocation(line: 549, column: 313, scope: !720)
!2838 = !DILocation(line: 549, column: 313, scope: !2839)
!2839 = !DILexicalBlockFile(scope: !720, file: !565, discriminator: 11)
!2840 = !DILocation(line: 550, column: 5, scope: !676)
!2841 = !DILocation(line: 551, column: 1, scope: !676)
!2842 = !DILocation(line: 209, column: 41, scope: !724)
!2843 = !DILocation(line: 210, column: 47, scope: !724)
!2844 = !DILocation(line: 211, column: 48, scope: !724)
!2845 = !DILocation(line: 212, column: 35, scope: !724)
!2846 = !DILocation(line: 212, column: 54, scope: !724)
!2847 = !DILocation(line: 214, column: 5, scope: !724)
!2848 = !DILocation(line: 214, column: 15, scope: !724)
!2849 = !DILocation(line: 214, column: 37, scope: !724)
!2850 = !DILocation(line: 214, column: 59, scope: !724)
!2851 = !DILocation(line: 215, column: 5, scope: !724)
!2852 = !DILocation(line: 215, column: 16, scope: !724)
!2853 = !DILocation(line: 215, column: 28, scope: !724)
!2854 = !DILocation(line: 216, column: 5, scope: !724)
!2855 = !DILocation(line: 216, column: 16, scope: !724)
!2856 = !DILocation(line: 216, column: 23, scope: !724)
!2857 = !DILocation(line: 216, column: 30, scope: !724)
!2858 = !DILocation(line: 217, column: 5, scope: !724)
!2859 = !DILocation(line: 217, column: 17, scope: !724)
!2860 = !DILocation(line: 219, column: 9, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !724, file: !565, line: 219, column: 9)
!2862 = !DILocation(line: 219, column: 11, scope: !2861)
!2863 = !DILocation(line: 219, column: 9, scope: !724)
!2864 = !DILocation(line: 220, column: 16, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2861, file: !565, line: 219, column: 16)
!2866 = !DILocation(line: 221, column: 17, scope: !2865)
!2867 = !DILocation(line: 221, column: 15, scope: !2865)
!2868 = !DILocation(line: 222, column: 5, scope: !2865)
!2869 = !DILocation(line: 224, column: 17, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2861, file: !565, line: 223, column: 10)
!2871 = !DILocation(line: 224, column: 9, scope: !2870)
!2872 = !DILocation(line: 226, column: 97, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2874, file: !565, line: 226, column: 77)
!2874 = distinct !DILexicalBlock(scope: !2875, file: !565, line: 226, column: 19)
!2875 = distinct !DILexicalBlock(scope: !2876, file: !565, line: 226, column: 13)
!2876 = distinct !DILexicalBlock(scope: !2870, file: !565, line: 224, column: 20)
!2877 = !DILocation(line: 226, column: 77, scope: !2873)
!2878 = !DILocation(line: 226, column: 106, scope: !2873)
!2879 = !DILocation(line: 226, column: 77, scope: !2874)
!2880 = !DILocation(line: 226, column: 113, scope: !2881)
!2881 = !DILexicalBlockFile(scope: !2873, file: !565, discriminator: 1)
!2882 = !DILocation(line: 227, column: 13, scope: !2876)
!2883 = !DILocation(line: 229, column: 20, scope: !2876)
!2884 = !DILocation(line: 230, column: 33, scope: !2876)
!2885 = !DILocation(line: 230, column: 38, scope: !2876)
!2886 = !DILocation(line: 230, column: 19, scope: !2876)
!2887 = !DILocation(line: 231, column: 13, scope: !2876)
!2888 = !DILocation(line: 233, column: 29, scope: !2876)
!2889 = !DILocation(line: 233, column: 13, scope: !2876)
!2890 = !DILocation(line: 235, column: 13, scope: !2876)
!2891 = !DILocation(line: 237, column: 29, scope: !2876)
!2892 = !DILocation(line: 237, column: 13, scope: !2876)
!2893 = !DILocation(line: 239, column: 13, scope: !2876)
!2894 = !DILocation(line: 243, column: 9, scope: !745)
!2895 = !DILocation(line: 243, column: 16, scope: !745)
!2896 = !DILocation(line: 243, column: 9, scope: !724)
!2897 = !DILocation(line: 244, column: 9, scope: !744)
!2898 = !DILocation(line: 244, column: 19, scope: !744)
!2899 = !DILocation(line: 245, column: 9, scope: !744)
!2900 = !DILocation(line: 245, column: 20, scope: !744)
!2901 = !DILocation(line: 246, column: 9, scope: !744)
!2902 = !DILocation(line: 246, column: 20, scope: !744)
!2903 = !DILocation(line: 247, column: 9, scope: !744)
!2904 = !DILocation(line: 247, column: 13, scope: !744)
!2905 = !DILocation(line: 248, column: 9, scope: !744)
!2906 = !DILocation(line: 248, column: 15, scope: !744)
!2907 = !DILocation(line: 250, column: 20, scope: !744)
!2908 = !DILocation(line: 250, column: 18, scope: !744)
!2909 = !DILocation(line: 251, column: 13, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !744, file: !565, line: 251, column: 13)
!2911 = !DILocation(line: 251, column: 22, scope: !2910)
!2912 = !DILocation(line: 251, column: 13, scope: !744)
!2913 = !DILocation(line: 252, column: 13, scope: !2910)
!2914 = !DILocation(line: 253, column: 64, scope: !744)
!2915 = !DILocation(line: 253, column: 46, scope: !744)
!2916 = !DILocation(line: 253, column: 76, scope: !744)
!2917 = !DILocation(line: 253, column: 82, scope: !744)
!2918 = !DILocation(line: 253, column: 14, scope: !744)
!2919 = !DILocation(line: 254, column: 50, scope: !744)
!2920 = !DILocation(line: 254, column: 33, scope: !744)
!2921 = !DILocation(line: 254, column: 62, scope: !744)
!2922 = !DILocation(line: 254, column: 68, scope: !744)
!2923 = !DILocation(line: 254, column: 31, scope: !744)
!2924 = !DILocation(line: 254, column: 126, scope: !2925)
!2925 = !DILexicalBlockFile(scope: !744, file: !565, discriminator: 1)
!2926 = !DILocation(line: 254, column: 110, scope: !744)
!2927 = !DILocation(line: 254, column: 137, scope: !744)
!2928 = !DILocation(line: 254, column: 143, scope: !744)
!2929 = !DILocation(line: 254, column: 80, scope: !744)
!2930 = !DILocation(line: 254, column: 178, scope: !2931)
!2931 = !DILexicalBlockFile(scope: !744, file: !565, discriminator: 3)
!2932 = !DILocation(line: 254, column: 161, scope: !744)
!2933 = !DILocation(line: 254, column: 188, scope: !744)
!2934 = !DILocation(line: 254, column: 153, scope: !744)
!2935 = !DILocation(line: 254, column: 231, scope: !2936)
!2936 = !DILexicalBlockFile(scope: !744, file: !565, discriminator: 4)
!2937 = !DILocation(line: 254, column: 205, scope: !744)
!2938 = !DILocation(line: 254, column: 241, scope: !744)
!2939 = !DILocation(line: 254, column: 197, scope: !744)
!2940 = !DILocation(line: 254, column: 31, scope: !2941)
!2941 = !DILexicalBlockFile(scope: !2942, file: !565, discriminator: 6)
!2942 = !DILexicalBlockFile(scope: !744, file: !565, discriminator: 5)
!2943 = !DILocation(line: 254, column: 288, scope: !2944)
!2944 = !DILexicalBlockFile(scope: !744, file: !565, discriminator: 2)
!2945 = !DILocation(line: 254, column: 268, scope: !744)
!2946 = !DILocation(line: 254, column: 300, scope: !744)
!2947 = !DILocation(line: 254, column: 305, scope: !744)
!2948 = !DILocation(line: 254, column: 14, scope: !2949)
!2949 = !DILexicalBlockFile(scope: !2950, file: !565, discriminator: 8)
!2950 = !DILexicalBlockFile(scope: !744, file: !565, discriminator: 7)
!2951 = !DILocation(line: 256, column: 15, scope: !744)
!2952 = !DILocation(line: 257, column: 9, scope: !744)
!2953 = !DILocation(line: 258, column: 13, scope: !751)
!2954 = !DILocation(line: 258, column: 24, scope: !751)
!2955 = !DILocation(line: 258, column: 47, scope: !751)
!2956 = !DILocation(line: 258, column: 52, scope: !751)
!2957 = !DILocation(line: 258, column: 65, scope: !751)
!2958 = !DILocation(line: 258, column: 70, scope: !751)
!2959 = !DILocation(line: 258, column: 63, scope: !751)
!2960 = !DILocation(line: 260, column: 17, scope: !751)
!2961 = !DILocation(line: 260, column: 24, scope: !751)
!2962 = !DILocation(line: 260, column: 31, scope: !751)
!2963 = !DILocation(line: 260, column: 38, scope: !751)
!2964 = !DILocation(line: 260, column: 45, scope: !751)
!2965 = !DILocation(line: 261, column: 31, scope: !751)
!2966 = !DILocation(line: 261, column: 37, scope: !751)
!2967 = !DILocation(line: 262, column: 32, scope: !751)
!2968 = !DILocation(line: 262, column: 37, scope: !751)
!2969 = !DILocation(line: 262, column: 45, scope: !751)
!2970 = !DILocation(line: 260, column: 15, scope: !751)
!2971 = !DILocation(line: 263, column: 17, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !751, file: !565, line: 263, column: 17)
!2973 = !DILocation(line: 263, column: 19, scope: !2972)
!2974 = !DILocation(line: 263, column: 17, scope: !751)
!2975 = !DILocation(line: 264, column: 101, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2977, file: !565, line: 264, column: 81)
!2977 = distinct !DILexicalBlock(scope: !2978, file: !565, line: 264, column: 23)
!2978 = distinct !DILexicalBlock(scope: !2979, file: !565, line: 264, column: 17)
!2979 = distinct !DILexicalBlock(scope: !2972, file: !565, line: 263, column: 28)
!2980 = !DILocation(line: 264, column: 81, scope: !2976)
!2981 = !DILocation(line: 264, column: 110, scope: !2976)
!2982 = !DILocation(line: 264, column: 81, scope: !2977)
!2983 = !DILocation(line: 264, column: 117, scope: !2976)
!2984 = !DILocation(line: 265, column: 17, scope: !2979)
!2985 = !DILocation(line: 268, column: 17, scope: !2972)
!2986 = !DILocation(line: 269, column: 9, scope: !752)
!2987 = !DILocation(line: 271, column: 9, scope: !744)
!2988 = !DILocation(line: 271, column: 14, scope: !2989)
!2989 = !DILexicalBlockFile(scope: !755, file: !565, discriminator: 1)
!2990 = !DILocation(line: 271, column: 24, scope: !755)
!2991 = !DILocation(line: 271, column: 54, scope: !755)
!2992 = !DILocation(line: 271, column: 73, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !755, file: !565, line: 271, column: 70)
!2994 = !DILocation(line: 271, column: 90, scope: !2993)
!2995 = !DILocation(line: 271, column: 70, scope: !2993)
!2996 = !DILocation(line: 271, column: 100, scope: !2993)
!2997 = !DILocation(line: 271, column: 70, scope: !755)
!2998 = !DILocation(line: 271, column: 70, scope: !2999)
!2999 = !DILexicalBlockFile(scope: !755, file: !565, discriminator: 2)
!3000 = !DILocation(line: 271, column: 131, scope: !3001)
!3001 = !DILexicalBlockFile(scope: !2993, file: !565, discriminator: 3)
!3002 = !DILocation(line: 271, column: 149, scope: !2993)
!3003 = !DILocation(line: 271, column: 159, scope: !2993)
!3004 = !DILocation(line: 271, column: 184, scope: !2993)
!3005 = !DILocation(line: 271, column: 115, scope: !2993)
!3006 = !DILocation(line: 271, column: 203, scope: !2936)
!3007 = !DILocation(line: 271, column: 203, scope: !755)
!3008 = !DILocation(line: 271, column: 203, scope: !3009)
!3009 = !DILexicalBlockFile(scope: !755, file: !565, discriminator: 5)
!3010 = !DILocation(line: 273, column: 13, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !744, file: !565, line: 273, column: 13)
!3012 = !DILocation(line: 273, column: 15, scope: !3011)
!3013 = !DILocation(line: 273, column: 13, scope: !744)
!3014 = !DILocation(line: 274, column: 31, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3016, file: !565, line: 274, column: 19)
!3016 = distinct !DILexicalBlock(scope: !3017, file: !565, line: 274, column: 13)
!3017 = distinct !DILexicalBlock(scope: !3011, file: !565, line: 273, column: 21)
!3018 = !DILocation(line: 274, column: 37, scope: !3015)
!3019 = !DILocation(line: 274, column: 44, scope: !3015)
!3020 = !DILocation(line: 274, column: 53, scope: !3015)
!3021 = !DILocation(line: 274, column: 59, scope: !3015)
!3022 = !DILocation(line: 274, column: 50, scope: !3015)
!3023 = !DILocation(line: 274, column: 19, scope: !3016)
!3024 = !DILocation(line: 274, column: 95, scope: !3025)
!3025 = !DILexicalBlockFile(scope: !3026, file: !565, discriminator: 1)
!3026 = distinct !DILexicalBlock(scope: !3015, file: !565, line: 274, column: 75)
!3027 = !DILocation(line: 274, column: 75, scope: !3026)
!3028 = !DILocation(line: 274, column: 103, scope: !3026)
!3029 = !DILocation(line: 274, column: 75, scope: !3015)
!3030 = !DILocation(line: 274, column: 110, scope: !3026)
!3031 = !DILocation(line: 274, column: 107, scope: !3032)
!3032 = !DILexicalBlockFile(scope: !3026, file: !565, discriminator: 2)
!3033 = !DILocation(line: 275, column: 14, scope: !3017)
!3034 = !DILocation(line: 275, column: 19, scope: !3017)
!3035 = !DILocation(line: 275, column: 25, scope: !3017)
!3036 = !DILocation(line: 275, column: 28, scope: !3017)
!3037 = !{!1466, !1466, i64 0}
!3038 = !DILocation(line: 276, column: 9, scope: !3017)
!3039 = !DILocation(line: 277, column: 5, scope: !745)
!3040 = !DILocation(line: 277, column: 5, scope: !3041)
!3041 = !DILexicalBlockFile(scope: !745, file: !565, discriminator: 1)
!3042 = !DILocation(line: 277, column: 5, scope: !744)
!3043 = !DILocation(line: 278, column: 9, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !724, file: !565, line: 278, column: 9)
!3045 = !DILocation(line: 278, column: 16, scope: !3044)
!3046 = !DILocation(line: 278, column: 35, scope: !3044)
!3047 = !DILocation(line: 278, column: 38, scope: !3048)
!3048 = !DILexicalBlockFile(scope: !3044, file: !565, discriminator: 1)
!3049 = !DILocation(line: 278, column: 45, scope: !3044)
!3050 = !DILocation(line: 278, column: 9, scope: !724)
!3051 = !DILocation(line: 279, column: 23, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3044, file: !565, line: 278, column: 65)
!3053 = !DILocation(line: 279, column: 9, scope: !3052)
!3054 = !DILocation(line: 279, column: 14, scope: !3052)
!3055 = !DILocation(line: 279, column: 20, scope: !3052)
!3056 = !DILocation(line: 280, column: 9, scope: !3052)
!3057 = !DILocation(line: 283, column: 25, scope: !724)
!3058 = !DILocation(line: 283, column: 30, scope: !724)
!3059 = !DILocation(line: 283, column: 11, scope: !724)
!3060 = !DILocation(line: 284, column: 11, scope: !724)
!3061 = !DILocation(line: 284, column: 19, scope: !724)
!3062 = !DILocation(line: 284, column: 17, scope: !724)
!3063 = !DILocation(line: 284, column: 9, scope: !724)
!3064 = !DILocation(line: 287, column: 9, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !724, file: !565, line: 287, column: 9)
!3066 = !DILocation(line: 287, column: 14, scope: !3065)
!3067 = !DILocation(line: 287, column: 21, scope: !3065)
!3068 = !DILocation(line: 287, column: 9, scope: !724)
!3069 = !DILocation(line: 288, column: 52, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3065, file: !565, line: 287, column: 36)
!3071 = !DILocation(line: 290, column: 46, scope: !3070)
!3072 = !DILocation(line: 290, column: 53, scope: !3070)
!3073 = !{!1706, !1465, i64 0}
!3074 = !DILocation(line: 290, column: 63, scope: !3070)
!3075 = !DILocation(line: 290, column: 68, scope: !3070)
!3076 = !DILocation(line: 291, column: 46, scope: !3070)
!3077 = !DILocation(line: 291, column: 53, scope: !3070)
!3078 = !DILocation(line: 291, column: 58, scope: !3070)
!3079 = !DILocation(line: 288, column: 23, scope: !3070)
!3080 = !DILocation(line: 288, column: 9, scope: !3070)
!3081 = !DILocation(line: 288, column: 14, scope: !3070)
!3082 = !DILocation(line: 288, column: 21, scope: !3070)
!3083 = !DILocation(line: 292, column: 13, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3070, file: !565, line: 292, column: 13)
!3085 = !DILocation(line: 292, column: 18, scope: !3084)
!3086 = !DILocation(line: 292, column: 25, scope: !3084)
!3087 = !DILocation(line: 292, column: 13, scope: !3070)
!3088 = !DILocation(line: 293, column: 13, scope: !3084)
!3089 = !DILocation(line: 294, column: 5, scope: !3070)
!3090 = !DILocation(line: 296, column: 43, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3065, file: !565, line: 296, column: 13)
!3092 = !DILocation(line: 296, column: 48, scope: !3091)
!3093 = !DILocation(line: 296, column: 56, scope: !3091)
!3094 = !DILocation(line: 296, column: 13, scope: !3091)
!3095 = !DILocation(line: 296, column: 63, scope: !3091)
!3096 = !DILocation(line: 296, column: 68, scope: !3091)
!3097 = !DILocation(line: 297, column: 41, scope: !3091)
!3098 = !DILocation(line: 297, column: 46, scope: !3091)
!3099 = !DILocation(line: 297, column: 54, scope: !3091)
!3100 = !DILocation(line: 297, column: 13, scope: !3091)
!3101 = !DILocation(line: 297, column: 59, scope: !3091)
!3102 = !DILocation(line: 297, column: 64, scope: !3091)
!3103 = !DILocation(line: 298, column: 44, scope: !3091)
!3104 = !DILocation(line: 298, column: 49, scope: !3091)
!3105 = !DILocation(line: 298, column: 57, scope: !3091)
!3106 = !DILocation(line: 298, column: 13, scope: !3091)
!3107 = !DILocation(line: 298, column: 65, scope: !3091)
!3108 = !DILocation(line: 296, column: 13, scope: !3065)
!3109 = !DILocation(line: 299, column: 13, scope: !3091)
!3110 = !DILocation(line: 301, column: 9, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !724, file: !565, line: 301, column: 9)
!3112 = !DILocation(line: 301, column: 16, scope: !3111)
!3113 = !DILocation(line: 301, column: 9, scope: !724)
!3114 = !DILocation(line: 302, column: 30, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3111, file: !565, line: 301, column: 36)
!3116 = !DILocation(line: 302, column: 35, scope: !3115)
!3117 = !DILocation(line: 302, column: 9, scope: !3115)
!3118 = !DILocation(line: 303, column: 9, scope: !3115)
!3119 = !DILocation(line: 306, column: 34, scope: !724)
!3120 = !DILocation(line: 306, column: 42, scope: !724)
!3121 = !DILocation(line: 306, column: 47, scope: !724)
!3122 = !DILocation(line: 306, column: 14, scope: !724)
!3123 = !DILocation(line: 306, column: 12, scope: !724)
!3124 = !DILocation(line: 307, column: 9, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !724, file: !565, line: 307, column: 9)
!3126 = !DILocation(line: 307, column: 16, scope: !3125)
!3127 = !DILocation(line: 307, column: 9, scope: !724)
!3128 = !DILocation(line: 308, column: 9, scope: !3125)
!3129 = !DILocation(line: 310, column: 27, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !724, file: !565, line: 310, column: 9)
!3131 = !DILocation(line: 310, column: 37, scope: !3130)
!3132 = !DILocation(line: 310, column: 48, scope: !3130)
!3133 = !DILocation(line: 310, column: 57, scope: !3130)
!3134 = !DILocation(line: 310, column: 74, scope: !3130)
!3135 = !DILocation(line: 310, column: 80, scope: !3130)
!3136 = !DILocation(line: 310, column: 100, scope: !3137)
!3137 = !DILexicalBlockFile(scope: !3130, file: !565, discriminator: 1)
!3138 = !DILocation(line: 310, column: 85, scope: !3130)
!3139 = !DILocation(line: 310, column: 110, scope: !3130)
!3140 = !DILocation(line: 310, column: 119, scope: !3130)
!3141 = !DILocation(line: 310, column: 124, scope: !3130)
!3142 = !DILocation(line: 311, column: 56, scope: !3130)
!3143 = !DILocation(line: 311, column: 38, scope: !3130)
!3144 = !DILocation(line: 311, column: 66, scope: !3130)
!3145 = !DILocation(line: 311, column: 37, scope: !3130)
!3146 = !DILocation(line: 311, column: 34, scope: !3130)
!3147 = !DILocation(line: 311, column: 82, scope: !3130)
!3148 = !DILocation(line: 311, column: 93, scope: !3130)
!3149 = !DILocation(line: 311, column: 102, scope: !3130)
!3150 = !DILocation(line: 311, column: 119, scope: !3130)
!3151 = !DILocation(line: 311, column: 125, scope: !3130)
!3152 = !DILocation(line: 311, column: 146, scope: !3137)
!3153 = !DILocation(line: 311, column: 154, scope: !3130)
!3154 = !DILocation(line: 311, column: 165, scope: !3130)
!3155 = !DILocation(line: 311, column: 174, scope: !3130)
!3156 = !DILocation(line: 311, column: 191, scope: !3130)
!3157 = !DILocation(line: 311, column: 198, scope: !3130)
!3158 = !DILocation(line: 312, column: 47, scope: !3130)
!3159 = !DILocation(line: 312, column: 29, scope: !3130)
!3160 = !DILocation(line: 312, column: 57, scope: !3130)
!3161 = !DILocation(line: 312, column: 28, scope: !3130)
!3162 = !DILocation(line: 312, column: 72, scope: !3130)
!3163 = !DILocation(line: 312, column: 83, scope: !3130)
!3164 = !DILocation(line: 312, column: 92, scope: !3130)
!3165 = !DILocation(line: 312, column: 109, scope: !3130)
!3166 = !DILocation(line: 310, column: 9, scope: !724)
!3167 = !DILocation(line: 313, column: 25, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3130, file: !565, line: 312, column: 116)
!3169 = !DILocation(line: 313, column: 9, scope: !3168)
!3170 = !DILocation(line: 316, column: 9, scope: !3168)
!3171 = !DILocation(line: 319, column: 26, scope: !758)
!3172 = !DILocation(line: 319, column: 34, scope: !758)
!3173 = !DILocation(line: 319, column: 45, scope: !758)
!3174 = !DILocation(line: 319, column: 54, scope: !758)
!3175 = !DILocation(line: 319, column: 71, scope: !758)
!3176 = !DILocation(line: 319, column: 9, scope: !724)
!3177 = !DILocation(line: 320, column: 9, scope: !757)
!3178 = !DILocation(line: 320, column: 20, scope: !757)
!3179 = !DILocation(line: 322, column: 40, scope: !757)
!3180 = !DILocation(line: 322, column: 47, scope: !757)
!3181 = !DILocation(line: 322, column: 54, scope: !757)
!3182 = !DILocation(line: 322, column: 18, scope: !757)
!3183 = !DILocation(line: 322, column: 16, scope: !757)
!3184 = !DILocation(line: 325, column: 13, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !757, file: !565, line: 325, column: 13)
!3186 = !DILocation(line: 325, column: 20, scope: !3185)
!3187 = !DILocation(line: 325, column: 13, scope: !757)
!3188 = !DILocation(line: 326, column: 13, scope: !3185)
!3189 = !DILocation(line: 327, column: 5, scope: !758)
!3190 = !DILocation(line: 327, column: 5, scope: !3191)
!3191 = !DILexicalBlockFile(scope: !758, file: !565, discriminator: 1)
!3192 = !DILocation(line: 327, column: 5, scope: !757)
!3193 = !DILocation(line: 329, column: 25, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !758, file: !565, line: 328, column: 10)
!3195 = !DILocation(line: 329, column: 33, scope: !3194)
!3196 = !DILocation(line: 329, column: 42, scope: !3194)
!3197 = !DILocation(line: 330, column: 18, scope: !3194)
!3198 = !DILocation(line: 330, column: 16, scope: !3194)
!3199 = !DILocation(line: 334, column: 49, scope: !724)
!3200 = !DILocation(line: 334, column: 34, scope: !724)
!3201 = !DILocation(line: 334, column: 59, scope: !724)
!3202 = !DILocation(line: 334, column: 16, scope: !724)
!3203 = !DILocation(line: 335, column: 12, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3205, file: !565, line: 335, column: 11)
!3205 = distinct !DILexicalBlock(scope: !724, file: !565, line: 335, column: 5)
!3206 = !DILocation(line: 335, column: 24, scope: !3204)
!3207 = !DILocation(line: 335, column: 28, scope: !3204)
!3208 = !DILocation(line: 335, column: 32, scope: !3209)
!3209 = !DILexicalBlockFile(scope: !3204, file: !565, discriminator: 2)
!3210 = !DILocation(line: 335, column: 38, scope: !3204)
!3211 = !DILocation(line: 335, column: 48, scope: !3204)
!3212 = !DILocation(line: 335, column: 45, scope: !3204)
!3213 = !DILocation(line: 335, column: 63, scope: !3204)
!3214 = !DILocation(line: 335, column: 69, scope: !3204)
!3215 = !DILocation(line: 335, column: 60, scope: !3204)
!3216 = !DILocation(line: 335, column: 11, scope: !3205)
!3217 = !DILocation(line: 335, column: 105, scope: !3218)
!3218 = !DILexicalBlockFile(scope: !3219, file: !565, discriminator: 3)
!3219 = !DILexicalBlockFile(scope: !3220, file: !565, discriminator: 1)
!3220 = distinct !DILexicalBlock(scope: !3204, file: !565, line: 335, column: 85)
!3221 = !DILocation(line: 335, column: 110, scope: !3220)
!3222 = !DILocation(line: 335, column: 85, scope: !3220)
!3223 = !DILocation(line: 335, column: 122, scope: !3220)
!3224 = !DILocation(line: 335, column: 85, scope: !3204)
!3225 = !DILocation(line: 335, column: 129, scope: !3226)
!3226 = !DILexicalBlockFile(scope: !3220, file: !565, discriminator: 4)
!3227 = !DILocation(line: 335, column: 126, scope: !3228)
!3228 = !DILexicalBlockFile(scope: !3220, file: !565, discriminator: 5)
!3229 = !DILocation(line: 337, column: 12, scope: !724)
!3230 = !DILocation(line: 337, column: 17, scope: !724)
!3231 = !DILocation(line: 337, column: 60, scope: !724)
!3232 = !DILocation(line: 337, column: 42, scope: !724)
!3233 = !DILocation(line: 337, column: 70, scope: !724)
!3234 = !DILocation(line: 337, column: 40, scope: !724)
!3235 = !DILocation(line: 337, column: 81, scope: !724)
!3236 = !DILocation(line: 337, column: 5, scope: !724)
!3237 = !DILocation(line: 338, column: 20, scope: !724)
!3238 = !DILocation(line: 338, column: 5, scope: !724)
!3239 = !DILocation(line: 338, column: 10, scope: !724)
!3240 = !DILocation(line: 338, column: 17, scope: !724)
!3241 = !DILocation(line: 340, column: 51, scope: !724)
!3242 = !DILocation(line: 340, column: 33, scope: !724)
!3243 = !DILocation(line: 340, column: 61, scope: !724)
!3244 = !DILocation(line: 340, column: 32, scope: !724)
!3245 = !DILocation(line: 340, column: 14, scope: !724)
!3246 = !DILocation(line: 340, column: 12, scope: !724)
!3247 = !DILocation(line: 341, column: 9, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !724, file: !565, line: 341, column: 9)
!3249 = !DILocation(line: 341, column: 16, scope: !3248)
!3250 = !DILocation(line: 341, column: 20, scope: !3248)
!3251 = !DILocation(line: 341, column: 24, scope: !3252)
!3252 = !DILexicalBlockFile(scope: !3248, file: !565, discriminator: 1)
!3253 = !DILocation(line: 341, column: 9, scope: !724)
!3254 = !DILocation(line: 342, column: 31, scope: !3248)
!3255 = !DILocation(line: 342, column: 36, scope: !3248)
!3256 = !DILocation(line: 342, column: 16, scope: !3248)
!3257 = !DILocation(line: 342, column: 9, scope: !3248)
!3258 = !DILocation(line: 343, column: 9, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !724, file: !565, line: 343, column: 9)
!3260 = !DILocation(line: 343, column: 16, scope: !3259)
!3261 = !DILocation(line: 343, column: 20, scope: !3259)
!3262 = !DILocation(line: 343, column: 23, scope: !3263)
!3263 = !DILexicalBlockFile(scope: !3259, file: !565, discriminator: 1)
!3264 = !DILocation(line: 343, column: 32, scope: !3259)
!3265 = !DILocation(line: 343, column: 37, scope: !3259)
!3266 = !DILocation(line: 343, column: 30, scope: !3259)
!3267 = !DILocation(line: 343, column: 9, scope: !724)
!3268 = !DILocation(line: 344, column: 9, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3259, file: !565, line: 343, column: 44)
!3270 = !DILocation(line: 345, column: 22, scope: !3269)
!3271 = !DILocation(line: 347, column: 22, scope: !3269)
!3272 = !DILocation(line: 345, column: 9, scope: !3269)
!3273 = !DILocation(line: 348, column: 9, scope: !3269)
!3274 = !DILocation(line: 350, column: 18, scope: !724)
!3275 = !DILocation(line: 350, column: 5, scope: !724)
!3276 = !DILocation(line: 350, column: 10, scope: !724)
!3277 = !DILocation(line: 350, column: 16, scope: !724)
!3278 = !DILocation(line: 352, column: 5, scope: !724)
!3279 = !DILocation(line: 352, column: 10, scope: !3280)
!3280 = !DILexicalBlockFile(scope: !760, file: !565, discriminator: 1)
!3281 = !DILocation(line: 352, column: 20, scope: !760)
!3282 = !DILocation(line: 352, column: 50, scope: !760)
!3283 = !DILocation(line: 352, column: 67, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !760, file: !565, line: 352, column: 64)
!3285 = !DILocation(line: 352, column: 84, scope: !3284)
!3286 = !DILocation(line: 352, column: 64, scope: !3284)
!3287 = !DILocation(line: 352, column: 94, scope: !3284)
!3288 = !DILocation(line: 352, column: 64, scope: !760)
!3289 = !DILocation(line: 352, column: 64, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !760, file: !565, discriminator: 2)
!3291 = !DILocation(line: 352, column: 125, scope: !3292)
!3292 = !DILexicalBlockFile(scope: !3284, file: !565, discriminator: 3)
!3293 = !DILocation(line: 352, column: 143, scope: !3284)
!3294 = !DILocation(line: 352, column: 153, scope: !3284)
!3295 = !DILocation(line: 352, column: 178, scope: !3284)
!3296 = !DILocation(line: 352, column: 109, scope: !3284)
!3297 = !DILocation(line: 352, column: 197, scope: !3298)
!3298 = !DILexicalBlockFile(scope: !724, file: !565, discriminator: 4)
!3299 = !DILocation(line: 352, column: 197, scope: !760)
!3300 = !DILocation(line: 352, column: 197, scope: !3301)
!3301 = !DILexicalBlockFile(scope: !760, file: !565, discriminator: 5)
!3302 = !DILocation(line: 353, column: 5, scope: !724)
!3303 = !DILocation(line: 353, column: 10, scope: !3304)
!3304 = !DILexicalBlockFile(scope: !762, file: !565, discriminator: 1)
!3305 = !DILocation(line: 353, column: 20, scope: !762)
!3306 = !DILocation(line: 353, column: 50, scope: !762)
!3307 = !DILocation(line: 353, column: 67, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !762, file: !565, line: 353, column: 64)
!3309 = !DILocation(line: 353, column: 84, scope: !3308)
!3310 = !DILocation(line: 353, column: 64, scope: !3308)
!3311 = !DILocation(line: 353, column: 94, scope: !3308)
!3312 = !DILocation(line: 353, column: 64, scope: !762)
!3313 = !DILocation(line: 353, column: 64, scope: !3314)
!3314 = !DILexicalBlockFile(scope: !762, file: !565, discriminator: 2)
!3315 = !DILocation(line: 353, column: 125, scope: !3316)
!3316 = !DILexicalBlockFile(scope: !3308, file: !565, discriminator: 3)
!3317 = !DILocation(line: 353, column: 143, scope: !3308)
!3318 = !DILocation(line: 353, column: 153, scope: !3308)
!3319 = !DILocation(line: 353, column: 178, scope: !3308)
!3320 = !DILocation(line: 353, column: 109, scope: !3308)
!3321 = !DILocation(line: 353, column: 197, scope: !3298)
!3322 = !DILocation(line: 353, column: 197, scope: !762)
!3323 = !DILocation(line: 353, column: 197, scope: !3324)
!3324 = !DILexicalBlockFile(scope: !762, file: !565, discriminator: 5)
!3325 = !DILocation(line: 354, column: 5, scope: !724)
!3326 = !DILocation(line: 357, column: 5, scope: !724)
!3327 = !DILocation(line: 357, column: 10, scope: !3328)
!3328 = !DILexicalBlockFile(scope: !764, file: !565, discriminator: 1)
!3329 = !DILocation(line: 357, column: 20, scope: !764)
!3330 = !DILocation(line: 357, column: 51, scope: !764)
!3331 = !DILocation(line: 357, column: 64, scope: !767)
!3332 = !DILocation(line: 357, column: 80, scope: !767)
!3333 = !DILocation(line: 357, column: 64, scope: !764)
!3334 = !DILocation(line: 357, column: 95, scope: !3335)
!3335 = !DILexicalBlockFile(scope: !767, file: !565, discriminator: 2)
!3336 = !DILocation(line: 357, column: 100, scope: !3337)
!3337 = !DILexicalBlockFile(scope: !766, file: !565, discriminator: 4)
!3338 = !DILocation(line: 357, column: 110, scope: !766)
!3339 = !DILocation(line: 357, column: 140, scope: !766)
!3340 = !DILocation(line: 357, column: 166, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !766, file: !565, line: 357, column: 163)
!3342 = !DILocation(line: 357, column: 183, scope: !3341)
!3343 = !DILocation(line: 357, column: 163, scope: !3341)
!3344 = !DILocation(line: 357, column: 193, scope: !3341)
!3345 = !DILocation(line: 357, column: 163, scope: !766)
!3346 = !DILocation(line: 357, column: 163, scope: !3347)
!3347 = !DILexicalBlockFile(scope: !766, file: !565, discriminator: 5)
!3348 = !DILocation(line: 357, column: 224, scope: !3349)
!3349 = !DILexicalBlockFile(scope: !3341, file: !565, discriminator: 6)
!3350 = !DILocation(line: 357, column: 242, scope: !3341)
!3351 = !DILocation(line: 357, column: 252, scope: !3341)
!3352 = !DILocation(line: 357, column: 277, scope: !3341)
!3353 = !DILocation(line: 357, column: 208, scope: !3341)
!3354 = !DILocation(line: 357, column: 296, scope: !3355)
!3355 = !DILexicalBlockFile(scope: !767, file: !565, discriminator: 7)
!3356 = !DILocation(line: 357, column: 296, scope: !766)
!3357 = !DILocation(line: 357, column: 296, scope: !3358)
!3358 = !DILexicalBlockFile(scope: !766, file: !565, discriminator: 8)
!3359 = !DILocation(line: 357, column: 296, scope: !3360)
!3360 = !DILexicalBlockFile(scope: !766, file: !565, discriminator: 9)
!3361 = !DILocation(line: 357, column: 309, scope: !3362)
!3362 = !DILexicalBlockFile(scope: !3363, file: !565, discriminator: 10)
!3363 = !DILexicalBlockFile(scope: !724, file: !565, discriminator: 3)
!3364 = !DILocation(line: 357, column: 309, scope: !764)
!3365 = !DILocation(line: 357, column: 309, scope: !3366)
!3366 = !DILexicalBlockFile(scope: !764, file: !565, discriminator: 11)
!3367 = !DILocation(line: 358, column: 5, scope: !724)
!3368 = !DILocation(line: 358, column: 10, scope: !3369)
!3369 = !DILexicalBlockFile(scope: !769, file: !565, discriminator: 1)
!3370 = !DILocation(line: 358, column: 20, scope: !769)
!3371 = !DILocation(line: 358, column: 51, scope: !769)
!3372 = !DILocation(line: 358, column: 64, scope: !772)
!3373 = !DILocation(line: 358, column: 80, scope: !772)
!3374 = !DILocation(line: 358, column: 64, scope: !769)
!3375 = !DILocation(line: 358, column: 95, scope: !3376)
!3376 = !DILexicalBlockFile(scope: !772, file: !565, discriminator: 2)
!3377 = !DILocation(line: 358, column: 100, scope: !3378)
!3378 = !DILexicalBlockFile(scope: !771, file: !565, discriminator: 4)
!3379 = !DILocation(line: 358, column: 110, scope: !771)
!3380 = !DILocation(line: 358, column: 140, scope: !771)
!3381 = !DILocation(line: 358, column: 166, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !771, file: !565, line: 358, column: 163)
!3383 = !DILocation(line: 358, column: 183, scope: !3382)
!3384 = !DILocation(line: 358, column: 163, scope: !3382)
!3385 = !DILocation(line: 358, column: 193, scope: !3382)
!3386 = !DILocation(line: 358, column: 163, scope: !771)
!3387 = !DILocation(line: 358, column: 163, scope: !3388)
!3388 = !DILexicalBlockFile(scope: !771, file: !565, discriminator: 5)
!3389 = !DILocation(line: 358, column: 224, scope: !3390)
!3390 = !DILexicalBlockFile(scope: !3382, file: !565, discriminator: 6)
!3391 = !DILocation(line: 358, column: 242, scope: !3382)
!3392 = !DILocation(line: 358, column: 252, scope: !3382)
!3393 = !DILocation(line: 358, column: 277, scope: !3382)
!3394 = !DILocation(line: 358, column: 208, scope: !3382)
!3395 = !DILocation(line: 358, column: 296, scope: !3396)
!3396 = !DILexicalBlockFile(scope: !772, file: !565, discriminator: 7)
!3397 = !DILocation(line: 358, column: 296, scope: !771)
!3398 = !DILocation(line: 358, column: 296, scope: !3399)
!3399 = !DILexicalBlockFile(scope: !771, file: !565, discriminator: 8)
!3400 = !DILocation(line: 358, column: 296, scope: !3401)
!3401 = !DILexicalBlockFile(scope: !771, file: !565, discriminator: 9)
!3402 = !DILocation(line: 358, column: 309, scope: !3362)
!3403 = !DILocation(line: 358, column: 309, scope: !769)
!3404 = !DILocation(line: 358, column: 309, scope: !3405)
!3405 = !DILexicalBlockFile(scope: !769, file: !565, discriminator: 11)
!3406 = !DILocation(line: 359, column: 5, scope: !724)
!3407 = !DILocation(line: 360, column: 1, scope: !724)
!3408 = !DILocation(line: 176, column: 44, scope: !773)
!3409 = !DILocation(line: 176, column: 60, scope: !773)
!3410 = !DILocation(line: 178, column: 5, scope: !773)
!3411 = !DILocation(line: 178, column: 16, scope: !773)
!3412 = !DILocation(line: 178, column: 24, scope: !773)
!3413 = !DILocation(line: 178, column: 33, scope: !773)
!3414 = !DILocation(line: 180, column: 35, scope: !773)
!3415 = !DILocation(line: 180, column: 40, scope: !773)
!3416 = !DILocation(line: 181, column: 64, scope: !773)
!3417 = !DILocation(line: 181, column: 69, scope: !773)
!3418 = !DILocation(line: 181, column: 46, scope: !773)
!3419 = !DILocation(line: 181, column: 79, scope: !773)
!3420 = !DILocation(line: 181, column: 44, scope: !773)
!3421 = !DILocation(line: 180, column: 47, scope: !773)
!3422 = !DILocation(line: 180, column: 12, scope: !773)
!3423 = !DILocation(line: 182, column: 46, scope: !773)
!3424 = !DILocation(line: 182, column: 51, scope: !773)
!3425 = !DILocation(line: 182, column: 31, scope: !773)
!3426 = !DILocation(line: 182, column: 61, scope: !773)
!3427 = !DILocation(line: 182, column: 13, scope: !773)
!3428 = !DILocation(line: 183, column: 16, scope: !773)
!3429 = !DILocation(line: 183, column: 25, scope: !773)
!3430 = !DILocation(line: 183, column: 33, scope: !773)
!3431 = !DILocation(line: 183, column: 22, scope: !773)
!3432 = !DILocation(line: 183, column: 42, scope: !3433)
!3433 = !DILexicalBlockFile(scope: !773, file: !565, discriminator: 1)
!3434 = !DILocation(line: 183, column: 50, scope: !773)
!3435 = !DILocation(line: 183, column: 56, scope: !773)
!3436 = !DILocation(line: 183, column: 62, scope: !3437)
!3437 = !DILexicalBlockFile(scope: !773, file: !565, discriminator: 2)
!3438 = !DILocation(line: 183, column: 13, scope: !3439)
!3439 = !DILexicalBlockFile(scope: !3440, file: !565, discriminator: 4)
!3440 = !DILexicalBlockFile(scope: !773, file: !565, discriminator: 3)
!3441 = !DILocation(line: 185, column: 9, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !773, file: !565, line: 185, column: 9)
!3443 = !DILocation(line: 185, column: 53, scope: !3442)
!3444 = !DILocation(line: 185, column: 51, scope: !3442)
!3445 = !DILocation(line: 185, column: 17, scope: !3442)
!3446 = !DILocation(line: 185, column: 9, scope: !773)
!3447 = !DILocation(line: 186, column: 9, scope: !3442)
!3448 = !DILocation(line: 188, column: 26, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !773, file: !565, line: 188, column: 9)
!3450 = !DILocation(line: 188, column: 31, scope: !3449)
!3451 = !DILocation(line: 188, column: 39, scope: !3449)
!3452 = !DILocation(line: 188, column: 49, scope: !3449)
!3453 = !DILocation(line: 188, column: 47, scope: !3449)
!3454 = !DILocation(line: 188, column: 9, scope: !3449)
!3455 = !DILocation(line: 188, column: 58, scope: !3449)
!3456 = !DILocation(line: 188, column: 9, scope: !773)
!3457 = !DILocation(line: 189, column: 9, scope: !3449)
!3458 = !DILocation(line: 191, column: 71, scope: !773)
!3459 = !DILocation(line: 191, column: 76, scope: !773)
!3460 = !DILocation(line: 191, column: 53, scope: !773)
!3461 = !DILocation(line: 191, column: 86, scope: !773)
!3462 = !DILocation(line: 191, column: 51, scope: !773)
!3463 = !DILocation(line: 191, column: 97, scope: !773)
!3464 = !DILocation(line: 191, column: 96, scope: !773)
!3465 = !DILocation(line: 191, column: 5, scope: !773)
!3466 = !DILocation(line: 191, column: 10, scope: !773)
!3467 = !DILocation(line: 191, column: 17, scope: !773)
!3468 = !DILocation(line: 192, column: 75, scope: !773)
!3469 = !DILocation(line: 192, column: 80, scope: !773)
!3470 = !DILocation(line: 192, column: 57, scope: !773)
!3471 = !DILocation(line: 192, column: 90, scope: !773)
!3472 = !DILocation(line: 192, column: 55, scope: !773)
!3473 = !DILocation(line: 193, column: 42, scope: !773)
!3474 = !DILocation(line: 193, column: 47, scope: !773)
!3475 = !DILocation(line: 193, column: 27, scope: !773)
!3476 = !DILocation(line: 193, column: 57, scope: !773)
!3477 = !DILocation(line: 193, column: 9, scope: !773)
!3478 = !DILocation(line: 192, column: 5, scope: !773)
!3479 = !DILocation(line: 192, column: 10, scope: !773)
!3480 = !DILocation(line: 192, column: 21, scope: !773)
!3481 = !DILocation(line: 195, column: 5, scope: !773)
!3482 = !DILocation(line: 196, column: 1, scope: !773)
!3483 = !DILocation(line: 95, column: 31, scope: !782)
!3484 = !DILocation(line: 95, column: 49, scope: !782)
!3485 = !DILocation(line: 97, column: 5, scope: !782)
!3486 = !DILocation(line: 97, column: 15, scope: !782)
!3487 = !DILocation(line: 97, column: 22, scope: !782)
!3488 = !DILocation(line: 97, column: 27, scope: !782)
!3489 = !DILocation(line: 98, column: 5, scope: !782)
!3490 = !DILocation(line: 98, column: 17, scope: !782)
!3491 = !DILocation(line: 101, column: 28, scope: !782)
!3492 = !DILocation(line: 101, column: 11, scope: !782)
!3493 = !DILocation(line: 101, column: 9, scope: !782)
!3494 = !DILocation(line: 102, column: 9, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !782, file: !565, line: 102, column: 9)
!3496 = !DILocation(line: 102, column: 13, scope: !3495)
!3497 = !DILocation(line: 102, column: 9, scope: !782)
!3498 = !DILocation(line: 103, column: 9, scope: !3495)
!3499 = !DILocation(line: 104, column: 30, scope: !782)
!3500 = !DILocation(line: 104, column: 10, scope: !782)
!3501 = !DILocation(line: 104, column: 8, scope: !782)
!3502 = !DILocation(line: 105, column: 9, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !782, file: !565, line: 105, column: 9)
!3504 = !DILocation(line: 105, column: 12, scope: !3503)
!3505 = !DILocation(line: 105, column: 9, scope: !782)
!3506 = !DILocation(line: 106, column: 9, scope: !3503)
!3507 = !DILocation(line: 108, column: 12, scope: !782)
!3508 = !DILocation(line: 108, column: 10, scope: !782)
!3509 = !DILocation(line: 109, column: 9, scope: !793)
!3510 = !DILocation(line: 109, column: 14, scope: !793)
!3511 = !DILocation(line: 109, column: 9, scope: !782)
!3512 = !DILocation(line: 110, column: 9, scope: !792)
!3513 = !DILocation(line: 110, column: 14, scope: !3514)
!3514 = !DILexicalBlockFile(scope: !791, file: !565, discriminator: 1)
!3515 = !DILocation(line: 110, column: 24, scope: !791)
!3516 = !DILocation(line: 110, column: 54, scope: !791)
!3517 = !DILocation(line: 110, column: 67, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !791, file: !565, line: 110, column: 64)
!3519 = !DILocation(line: 110, column: 84, scope: !3518)
!3520 = !DILocation(line: 110, column: 64, scope: !3518)
!3521 = !DILocation(line: 110, column: 94, scope: !3518)
!3522 = !DILocation(line: 110, column: 64, scope: !791)
!3523 = !DILocation(line: 110, column: 64, scope: !3524)
!3524 = !DILexicalBlockFile(scope: !791, file: !565, discriminator: 2)
!3525 = !DILocation(line: 110, column: 125, scope: !3526)
!3526 = !DILexicalBlockFile(scope: !3518, file: !565, discriminator: 3)
!3527 = !DILocation(line: 110, column: 143, scope: !3518)
!3528 = !DILocation(line: 110, column: 153, scope: !3518)
!3529 = !DILocation(line: 110, column: 178, scope: !3518)
!3530 = !DILocation(line: 110, column: 109, scope: !3518)
!3531 = !DILocation(line: 110, column: 197, scope: !3532)
!3532 = !DILexicalBlockFile(scope: !792, file: !565, discriminator: 4)
!3533 = !DILocation(line: 110, column: 197, scope: !791)
!3534 = !DILocation(line: 110, column: 197, scope: !3535)
!3535 = !DILexicalBlockFile(scope: !791, file: !565, discriminator: 5)
!3536 = !DILocation(line: 111, column: 9, scope: !792)
!3537 = !DILocation(line: 114, column: 46, scope: !782)
!3538 = !DILocation(line: 114, column: 25, scope: !782)
!3539 = !DILocation(line: 114, column: 7, scope: !782)
!3540 = !DILocation(line: 114, column: 33, scope: !782)
!3541 = !DILocation(line: 114, column: 6, scope: !782)
!3542 = !DILocation(line: 114, column: 44, scope: !782)
!3543 = !DILocation(line: 115, column: 21, scope: !782)
!3544 = !DILocation(line: 115, column: 28, scope: !782)
!3545 = !DILocation(line: 115, column: 37, scope: !782)
!3546 = !DILocation(line: 117, column: 29, scope: !782)
!3547 = !DILocation(line: 117, column: 33, scope: !782)
!3548 = !DILocation(line: 117, column: 9, scope: !782)
!3549 = !DILocation(line: 117, column: 7, scope: !782)
!3550 = !DILocation(line: 118, column: 5, scope: !782)
!3551 = !DILocation(line: 118, column: 10, scope: !3552)
!3552 = !DILexicalBlockFile(scope: !795, file: !565, discriminator: 1)
!3553 = !DILocation(line: 118, column: 20, scope: !795)
!3554 = !DILocation(line: 118, column: 50, scope: !795)
!3555 = !DILocation(line: 118, column: 65, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !795, file: !565, line: 118, column: 62)
!3557 = !DILocation(line: 118, column: 82, scope: !3556)
!3558 = !DILocation(line: 118, column: 62, scope: !3556)
!3559 = !DILocation(line: 118, column: 92, scope: !3556)
!3560 = !DILocation(line: 118, column: 62, scope: !795)
!3561 = !DILocation(line: 118, column: 62, scope: !3562)
!3562 = !DILexicalBlockFile(scope: !795, file: !565, discriminator: 2)
!3563 = !DILocation(line: 118, column: 123, scope: !3564)
!3564 = !DILexicalBlockFile(scope: !3556, file: !565, discriminator: 3)
!3565 = !DILocation(line: 118, column: 141, scope: !3556)
!3566 = !DILocation(line: 118, column: 151, scope: !3556)
!3567 = !DILocation(line: 118, column: 176, scope: !3556)
!3568 = !DILocation(line: 118, column: 107, scope: !3556)
!3569 = !DILocation(line: 118, column: 195, scope: !3570)
!3570 = !DILexicalBlockFile(scope: !782, file: !565, discriminator: 4)
!3571 = !DILocation(line: 118, column: 195, scope: !795)
!3572 = !DILocation(line: 118, column: 195, scope: !3573)
!3573 = !DILexicalBlockFile(scope: !795, file: !565, discriminator: 5)
!3574 = !DILocation(line: 119, column: 5, scope: !782)
!3575 = !DILocation(line: 119, column: 10, scope: !3576)
!3576 = !DILexicalBlockFile(scope: !797, file: !565, discriminator: 1)
!3577 = !DILocation(line: 119, column: 20, scope: !797)
!3578 = !DILocation(line: 119, column: 50, scope: !797)
!3579 = !DILocation(line: 119, column: 63, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !797, file: !565, line: 119, column: 60)
!3581 = !DILocation(line: 119, column: 80, scope: !3580)
!3582 = !DILocation(line: 119, column: 60, scope: !3580)
!3583 = !DILocation(line: 119, column: 90, scope: !3580)
!3584 = !DILocation(line: 119, column: 60, scope: !797)
!3585 = !DILocation(line: 119, column: 60, scope: !3586)
!3586 = !DILexicalBlockFile(scope: !797, file: !565, discriminator: 2)
!3587 = !DILocation(line: 119, column: 121, scope: !3588)
!3588 = !DILexicalBlockFile(scope: !3580, file: !565, discriminator: 3)
!3589 = !DILocation(line: 119, column: 139, scope: !3580)
!3590 = !DILocation(line: 119, column: 149, scope: !3580)
!3591 = !DILocation(line: 119, column: 174, scope: !3580)
!3592 = !DILocation(line: 119, column: 105, scope: !3580)
!3593 = !DILocation(line: 119, column: 193, scope: !3570)
!3594 = !DILocation(line: 119, column: 193, scope: !797)
!3595 = !DILocation(line: 119, column: 193, scope: !3596)
!3596 = !DILexicalBlockFile(scope: !797, file: !565, discriminator: 5)
!3597 = !DILocation(line: 120, column: 12, scope: !782)
!3598 = !DILocation(line: 120, column: 5, scope: !782)
!3599 = !DILocation(line: 121, column: 1, scope: !782)
!3600 = !DILocation(line: 124, column: 52, scope: !813)
!3601 = !DILocation(line: 126, column: 5, scope: !813)
!3602 = !DILocation(line: 126, column: 17, scope: !813)
!3603 = !DILocation(line: 128, column: 9, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !813, file: !565, line: 128, column: 9)
!3605 = !DILocation(line: 128, column: 15, scope: !3604)
!3606 = !{!3607, !1465, i64 32}
!3607 = !{!"", !1499, i64 0, !1465, i64 16, !1466, i64 24, !1465, i64 32}
!3608 = !DILocation(line: 128, column: 22, scope: !3604)
!3609 = !DILocation(line: 128, column: 9, scope: !813)
!3610 = !DILocation(line: 129, column: 16, scope: !3604)
!3611 = !DILocation(line: 129, column: 9, scope: !3604)
!3612 = !DILocation(line: 130, column: 14, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3604, file: !565, line: 130, column: 14)
!3614 = !DILocation(line: 130, column: 20, scope: !3613)
!3615 = !DILocation(line: 130, column: 27, scope: !3613)
!3616 = !DILocation(line: 130, column: 14, scope: !3604)
!3617 = !DILocation(line: 131, column: 16, scope: !3613)
!3618 = !DILocation(line: 131, column: 9, scope: !3613)
!3619 = !DILocation(line: 132, column: 14, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3613, file: !565, line: 132, column: 14)
!3621 = !DILocation(line: 132, column: 20, scope: !3620)
!3622 = !DILocation(line: 132, column: 27, scope: !3620)
!3623 = !DILocation(line: 132, column: 14, scope: !3613)
!3624 = !DILocation(line: 133, column: 16, scope: !3620)
!3625 = !DILocation(line: 133, column: 9, scope: !3620)
!3626 = !DILocation(line: 135, column: 25, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3620, file: !565, line: 134, column: 10)
!3628 = !DILocation(line: 135, column: 31, scope: !3627)
!3629 = !DILocation(line: 135, column: 41, scope: !3627)
!3630 = !DILocation(line: 135, column: 50, scope: !3627)
!3631 = !DILocation(line: 136, column: 16, scope: !3627)
!3632 = !DILocation(line: 136, column: 22, scope: !3627)
!3633 = !DILocation(line: 136, column: 9, scope: !3627)
!3634 = !DILocation(line: 139, column: 33, scope: !813)
!3635 = !DILocation(line: 139, column: 12, scope: !813)
!3636 = !DILocation(line: 139, column: 5, scope: !813)
!3637 = !DILocation(line: 140, column: 1, scope: !813)
!3638 = !DILocation(line: 143, column: 52, scope: !827)
!3639 = !DILocation(line: 143, column: 68, scope: !827)
!3640 = !DILocation(line: 144, column: 27, scope: !827)
!3641 = !DILocation(line: 146, column: 5, scope: !827)
!3642 = !DILocation(line: 146, column: 15, scope: !827)
!3643 = !DILocation(line: 147, column: 5, scope: !827)
!3644 = !DILocation(line: 147, column: 17, scope: !827)
!3645 = !DILocation(line: 149, column: 27, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !827, file: !565, line: 149, column: 9)
!3647 = !DILocation(line: 149, column: 36, scope: !3646)
!3648 = !DILocation(line: 149, column: 47, scope: !3646)
!3649 = !DILocation(line: 149, column: 56, scope: !3646)
!3650 = !DILocation(line: 149, column: 73, scope: !3646)
!3651 = !DILocation(line: 149, column: 9, scope: !827)
!3652 = !DILocation(line: 150, column: 25, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3646, file: !565, line: 149, column: 80)
!3654 = !DILocation(line: 150, column: 9, scope: !3653)
!3655 = !DILocation(line: 151, column: 9, scope: !3653)
!3656 = !DILocation(line: 154, column: 28, scope: !827)
!3657 = !DILocation(line: 154, column: 11, scope: !827)
!3658 = !DILocation(line: 154, column: 9, scope: !827)
!3659 = !DILocation(line: 155, column: 9, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !827, file: !565, line: 155, column: 9)
!3661 = !DILocation(line: 155, column: 13, scope: !3660)
!3662 = !DILocation(line: 155, column: 9, scope: !827)
!3663 = !DILocation(line: 156, column: 9, scope: !3660)
!3664 = !DILocation(line: 158, column: 34, scope: !827)
!3665 = !DILocation(line: 158, column: 10, scope: !827)
!3666 = !DILocation(line: 158, column: 8, scope: !827)
!3667 = !DILocation(line: 159, column: 9, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !827, file: !565, line: 159, column: 9)
!3669 = !DILocation(line: 159, column: 12, scope: !3668)
!3670 = !DILocation(line: 159, column: 9, scope: !827)
!3671 = !DILocation(line: 160, column: 9, scope: !3668)
!3672 = !DILocation(line: 162, column: 5, scope: !827)
!3673 = !DILocation(line: 162, column: 14, scope: !3674)
!3674 = !DILexicalBlockFile(scope: !838, file: !565, discriminator: 1)
!3675 = !DILocation(line: 162, column: 20, scope: !838)
!3676 = !DILocation(line: 162, column: 27, scope: !838)
!3677 = !DILocation(line: 162, column: 41, scope: !838)
!3678 = !DILocation(line: 162, column: 46, scope: !3679)
!3679 = !DILexicalBlockFile(scope: !838, file: !565, discriminator: 2)
!3680 = !DILocation(line: 162, column: 52, scope: !838)
!3681 = !DILocation(line: 162, column: 60, scope: !838)
!3682 = !DILocation(line: 162, column: 78, scope: !838)
!3683 = !DILocation(line: 162, column: 100, scope: !3684)
!3684 = !DILexicalBlockFile(scope: !838, file: !565, discriminator: 5)
!3685 = !DILocation(line: 162, column: 106, scope: !838)
!3686 = !DILocation(line: 162, column: 97, scope: !838)
!3687 = !DILocation(line: 162, column: 14, scope: !839)
!3688 = !DILocation(line: 162, column: 116, scope: !3689)
!3689 = !DILexicalBlockFile(scope: !3690, file: !565, discriminator: 6)
!3690 = !DILexicalBlockFile(scope: !838, file: !565, discriminator: 4)
!3691 = !DILocation(line: 162, column: 121, scope: !3692)
!3692 = !DILexicalBlockFile(scope: !837, file: !565, discriminator: 8)
!3693 = !DILocation(line: 162, column: 131, scope: !837)
!3694 = !DILocation(line: 162, column: 161, scope: !837)
!3695 = !DILocation(line: 162, column: 167, scope: !837)
!3696 = !DILocation(line: 162, column: 184, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !837, file: !565, line: 162, column: 181)
!3698 = !DILocation(line: 162, column: 201, scope: !3697)
!3699 = !DILocation(line: 162, column: 181, scope: !3697)
!3700 = !DILocation(line: 162, column: 211, scope: !3697)
!3701 = !DILocation(line: 162, column: 181, scope: !837)
!3702 = !DILocation(line: 162, column: 181, scope: !3703)
!3703 = !DILexicalBlockFile(scope: !837, file: !565, discriminator: 9)
!3704 = !DILocation(line: 162, column: 242, scope: !3705)
!3705 = !DILexicalBlockFile(scope: !3697, file: !565, discriminator: 10)
!3706 = !DILocation(line: 162, column: 260, scope: !3697)
!3707 = !DILocation(line: 162, column: 270, scope: !3697)
!3708 = !DILocation(line: 162, column: 295, scope: !3697)
!3709 = !DILocation(line: 162, column: 226, scope: !3697)
!3710 = !DILocation(line: 162, column: 314, scope: !3711)
!3711 = !DILexicalBlockFile(scope: !838, file: !565, discriminator: 11)
!3712 = !DILocation(line: 162, column: 314, scope: !837)
!3713 = !DILocation(line: 162, column: 314, scope: !3714)
!3714 = !DILexicalBlockFile(scope: !837, file: !565, discriminator: 12)
!3715 = !DILocation(line: 162, column: 314, scope: !3716)
!3716 = !DILexicalBlockFile(scope: !837, file: !565, discriminator: 13)
!3717 = !DILocation(line: 162, column: 327, scope: !3718)
!3718 = !DILexicalBlockFile(scope: !3719, file: !565, discriminator: 14)
!3719 = !DILexicalBlockFile(scope: !3720, file: !565, discriminator: 7)
!3720 = !DILexicalBlockFile(scope: !839, file: !565, discriminator: 3)
!3721 = !DILocation(line: 162, column: 327, scope: !3722)
!3722 = !DILexicalBlockFile(scope: !839, file: !565, discriminator: 15)
!3723 = !DILocation(line: 163, column: 20, scope: !827)
!3724 = !DILocation(line: 163, column: 5, scope: !827)
!3725 = !DILocation(line: 163, column: 11, scope: !827)
!3726 = !DILocation(line: 163, column: 18, scope: !827)
!3727 = !DILocation(line: 164, column: 5, scope: !827)
!3728 = !DILocation(line: 165, column: 1, scope: !827)
!3729 = !DILocation(line: 82, column: 37, scope: !840)
!3730 = !DILocation(line: 84, column: 9, scope: !847)
!3731 = !DILocation(line: 84, column: 16, scope: !847)
!3732 = !DILocation(line: 84, column: 30, scope: !847)
!3733 = !DILocation(line: 84, column: 50, scope: !3734)
!3734 = !DILexicalBlockFile(scope: !846, file: !565, discriminator: 1)
!3735 = !DILocation(line: 84, column: 57, scope: !846)
!3736 = !DILocation(line: 84, column: 50, scope: !846)
!3737 = !DILocation(line: 84, column: 67, scope: !846)
!3738 = !DILocation(line: 84, column: 1428, scope: !846)
!3739 = !DILocation(line: 84, column: 1441, scope: !3740)
!3740 = !DILexicalBlockFile(scope: !846, file: !565, discriminator: 2)
!3741 = !DILocation(line: 84, column: 1462, scope: !846)
!3742 = !DILocation(line: 84, column: 1471, scope: !846)
!3743 = !DILocation(line: 84, column: 1312, scope: !846)
!3744 = !DILocation(line: 84, column: 1647, scope: !3745)
!3745 = !DILexicalBlockFile(scope: !850, file: !565, discriminator: 4)
!3746 = !DILocation(line: 84, column: 1668, scope: !850)
!3747 = !DILocation(line: 84, column: 1715, scope: !850)
!3748 = !DILocation(line: 84, column: 1724, scope: !850)
!3749 = !DILocation(line: 84, column: 1737, scope: !850)
!3750 = !DILocation(line: 84, column: 1748, scope: !850)
!3751 = !DILocation(line: 84, column: 1758, scope: !850)
!3752 = !DILocation(line: 84, column: 1756, scope: !850)
!3753 = !DILocation(line: 84, column: 1818, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !850, file: !565, line: 84, column: 1818)
!3755 = !DILocation(line: 84, column: 1827, scope: !3754)
!3756 = !DILocation(line: 84, column: 1831, scope: !3754)
!3757 = !DILocation(line: 84, column: 1834, scope: !3758)
!3758 = !DILexicalBlockFile(scope: !3754, file: !565, discriminator: 6)
!3759 = !DILocation(line: 84, column: 1843, scope: !3754)
!3760 = !DILocation(line: 84, column: 1818, scope: !850)
!3761 = !DILocation(line: 84, column: 1863, scope: !3762)
!3762 = !DILexicalBlockFile(scope: !3763, file: !565, discriminator: 8)
!3763 = distinct !DILexicalBlock(scope: !3754, file: !565, line: 84, column: 1849)
!3764 = !DILocation(line: 84, column: 1873, scope: !3763)
!3765 = !DILocation(line: 84, column: 1871, scope: !3763)
!3766 = !DILocation(line: 84, column: 1860, scope: !3763)
!3767 = !DILocation(line: 84, column: 1934, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3763, file: !565, line: 84, column: 1934)
!3769 = !DILocation(line: 84, column: 1943, scope: !3768)
!3770 = !DILocation(line: 84, column: 1947, scope: !3768)
!3771 = !DILocation(line: 84, column: 1950, scope: !3772)
!3772 = !DILexicalBlockFile(scope: !3768, file: !565, discriminator: 10)
!3773 = !DILocation(line: 84, column: 1959, scope: !3768)
!3774 = !DILocation(line: 84, column: 1934, scope: !3763)
!3775 = !DILocation(line: 84, column: 1979, scope: !3776)
!3776 = !DILexicalBlockFile(scope: !3777, file: !565, discriminator: 12)
!3777 = distinct !DILexicalBlock(scope: !3768, file: !565, line: 84, column: 1965)
!3778 = !DILocation(line: 84, column: 1989, scope: !3777)
!3779 = !DILocation(line: 84, column: 1987, scope: !3777)
!3780 = !DILocation(line: 84, column: 1976, scope: !3777)
!3781 = !DILocation(line: 84, column: 2050, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3777, file: !565, line: 84, column: 2050)
!3783 = !DILocation(line: 84, column: 2059, scope: !3782)
!3784 = !DILocation(line: 84, column: 2063, scope: !3782)
!3785 = !DILocation(line: 84, column: 2066, scope: !3786)
!3786 = !DILexicalBlockFile(scope: !3782, file: !565, discriminator: 14)
!3787 = !DILocation(line: 84, column: 2075, scope: !3782)
!3788 = !DILocation(line: 84, column: 2050, scope: !3777)
!3789 = !DILocation(line: 84, column: 2093, scope: !3790)
!3790 = !DILexicalBlockFile(scope: !3782, file: !565, discriminator: 16)
!3791 = !DILocation(line: 84, column: 2103, scope: !3782)
!3792 = !DILocation(line: 84, column: 2101, scope: !3782)
!3793 = !DILocation(line: 84, column: 2090, scope: !3782)
!3794 = !DILocation(line: 84, column: 2081, scope: !3782)
!3795 = !DILocation(line: 84, column: 2160, scope: !3796)
!3796 = !DILexicalBlockFile(scope: !3797, file: !565, discriminator: 18)
!3797 = !DILexicalBlockFile(scope: !3798, file: !565, discriminator: 17)
!3798 = !DILexicalBlockFile(scope: !3777, file: !565, discriminator: 15)
!3799 = !DILocation(line: 84, column: 2162, scope: !3800)
!3800 = !DILexicalBlockFile(scope: !3801, file: !565, discriminator: 19)
!3801 = !DILexicalBlockFile(scope: !3802, file: !565, discriminator: 13)
!3802 = !DILexicalBlockFile(scope: !3763, file: !565, discriminator: 11)
!3803 = !DILocation(line: 84, column: 2164, scope: !3804)
!3804 = !DILexicalBlockFile(scope: !3805, file: !565, discriminator: 20)
!3805 = !DILexicalBlockFile(scope: !3806, file: !565, discriminator: 9)
!3806 = !DILexicalBlockFile(scope: !850, file: !565, discriminator: 7)
!3807 = !DILocation(line: 84, column: 1846, scope: !3754)
!3808 = !DILocation(line: 84, column: 2174, scope: !846)
!3809 = !DILocation(line: 84, column: 2174, scope: !850)
!3810 = !DILocation(line: 84, column: 2199, scope: !3811)
!3811 = !DILexicalBlockFile(scope: !3812, file: !565, discriminator: 5)
!3812 = !DILexicalBlockFile(scope: !846, file: !565, discriminator: 3)
!3813 = !DILocation(line: 84, column: 2181, scope: !846)
!3814 = !DILocation(line: 84, column: 50, scope: !3815)
!3815 = !DILexicalBlockFile(scope: !3816, file: !565, discriminator: 22)
!3816 = !DILexicalBlockFile(scope: !846, file: !565, discriminator: 21)
!3817 = !DILocation(line: 84, column: 2221, scope: !847)
!3818 = !DILocation(line: 84, column: 2221, scope: !846)
!3819 = !DILocation(line: 84, column: 2224, scope: !847)
!3820 = !DILocation(line: 84, column: 9, scope: !840)
!3821 = !DILocation(line: 85, column: 9, scope: !847)
!3822 = !DILocation(line: 86, column: 31, scope: !853)
!3823 = !DILocation(line: 86, column: 38, scope: !853)
!3824 = !DILocation(line: 86, column: 48, scope: !853)
!3825 = !DILocation(line: 86, column: 1409, scope: !853)
!3826 = !DILocation(line: 86, column: 1422, scope: !3827)
!3827 = !DILexicalBlockFile(scope: !853, file: !565, discriminator: 1)
!3828 = !DILocation(line: 86, column: 1443, scope: !853)
!3829 = !DILocation(line: 86, column: 1452, scope: !853)
!3830 = !DILocation(line: 86, column: 1293, scope: !853)
!3831 = !DILocation(line: 86, column: 1628, scope: !3832)
!3832 = !DILexicalBlockFile(scope: !857, file: !565, discriminator: 3)
!3833 = !DILocation(line: 86, column: 1649, scope: !857)
!3834 = !DILocation(line: 86, column: 1696, scope: !857)
!3835 = !DILocation(line: 86, column: 1705, scope: !857)
!3836 = !DILocation(line: 86, column: 1718, scope: !857)
!3837 = !DILocation(line: 86, column: 1729, scope: !857)
!3838 = !DILocation(line: 86, column: 1739, scope: !857)
!3839 = !DILocation(line: 86, column: 1737, scope: !857)
!3840 = !DILocation(line: 86, column: 1799, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !857, file: !565, line: 86, column: 1799)
!3842 = !DILocation(line: 86, column: 1808, scope: !3841)
!3843 = !DILocation(line: 86, column: 1812, scope: !3841)
!3844 = !DILocation(line: 86, column: 1815, scope: !3845)
!3845 = !DILexicalBlockFile(scope: !3841, file: !565, discriminator: 5)
!3846 = !DILocation(line: 86, column: 1824, scope: !3841)
!3847 = !DILocation(line: 86, column: 1799, scope: !857)
!3848 = !DILocation(line: 86, column: 1844, scope: !3849)
!3849 = !DILexicalBlockFile(scope: !3850, file: !565, discriminator: 7)
!3850 = distinct !DILexicalBlock(scope: !3841, file: !565, line: 86, column: 1830)
!3851 = !DILocation(line: 86, column: 1854, scope: !3850)
!3852 = !DILocation(line: 86, column: 1852, scope: !3850)
!3853 = !DILocation(line: 86, column: 1841, scope: !3850)
!3854 = !DILocation(line: 86, column: 1915, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3850, file: !565, line: 86, column: 1915)
!3856 = !DILocation(line: 86, column: 1924, scope: !3855)
!3857 = !DILocation(line: 86, column: 1928, scope: !3855)
!3858 = !DILocation(line: 86, column: 1931, scope: !3859)
!3859 = !DILexicalBlockFile(scope: !3855, file: !565, discriminator: 9)
!3860 = !DILocation(line: 86, column: 1940, scope: !3855)
!3861 = !DILocation(line: 86, column: 1915, scope: !3850)
!3862 = !DILocation(line: 86, column: 1960, scope: !3863)
!3863 = !DILexicalBlockFile(scope: !3864, file: !565, discriminator: 11)
!3864 = distinct !DILexicalBlock(scope: !3855, file: !565, line: 86, column: 1946)
!3865 = !DILocation(line: 86, column: 1970, scope: !3864)
!3866 = !DILocation(line: 86, column: 1968, scope: !3864)
!3867 = !DILocation(line: 86, column: 1957, scope: !3864)
!3868 = !DILocation(line: 86, column: 2031, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3864, file: !565, line: 86, column: 2031)
!3870 = !DILocation(line: 86, column: 2040, scope: !3869)
!3871 = !DILocation(line: 86, column: 2044, scope: !3869)
!3872 = !DILocation(line: 86, column: 2047, scope: !3873)
!3873 = !DILexicalBlockFile(scope: !3869, file: !565, discriminator: 13)
!3874 = !DILocation(line: 86, column: 2056, scope: !3869)
!3875 = !DILocation(line: 86, column: 2031, scope: !3864)
!3876 = !DILocation(line: 86, column: 2074, scope: !3877)
!3877 = !DILexicalBlockFile(scope: !3869, file: !565, discriminator: 15)
!3878 = !DILocation(line: 86, column: 2084, scope: !3869)
!3879 = !DILocation(line: 86, column: 2082, scope: !3869)
!3880 = !DILocation(line: 86, column: 2071, scope: !3869)
!3881 = !DILocation(line: 86, column: 2062, scope: !3869)
!3882 = !DILocation(line: 86, column: 2141, scope: !3883)
!3883 = !DILexicalBlockFile(scope: !3884, file: !565, discriminator: 17)
!3884 = !DILexicalBlockFile(scope: !3885, file: !565, discriminator: 16)
!3885 = !DILexicalBlockFile(scope: !3864, file: !565, discriminator: 14)
!3886 = !DILocation(line: 86, column: 2143, scope: !3887)
!3887 = !DILexicalBlockFile(scope: !3888, file: !565, discriminator: 18)
!3888 = !DILexicalBlockFile(scope: !3889, file: !565, discriminator: 12)
!3889 = !DILexicalBlockFile(scope: !3850, file: !565, discriminator: 10)
!3890 = !DILocation(line: 86, column: 2145, scope: !3891)
!3891 = !DILexicalBlockFile(scope: !3892, file: !565, discriminator: 19)
!3892 = !DILexicalBlockFile(scope: !3893, file: !565, discriminator: 8)
!3893 = !DILexicalBlockFile(scope: !857, file: !565, discriminator: 6)
!3894 = !DILocation(line: 86, column: 1827, scope: !3841)
!3895 = !DILocation(line: 86, column: 2155, scope: !853)
!3896 = !DILocation(line: 86, column: 2155, scope: !857)
!3897 = !DILocation(line: 86, column: 2180, scope: !3898)
!3898 = !DILexicalBlockFile(scope: !3899, file: !565, discriminator: 4)
!3899 = !DILexicalBlockFile(scope: !853, file: !565, discriminator: 2)
!3900 = !DILocation(line: 86, column: 2162, scope: !853)
!3901 = !DILocation(line: 86, column: 31, scope: !3902)
!3902 = !DILexicalBlockFile(scope: !3903, file: !565, discriminator: 21)
!3903 = !DILexicalBlockFile(scope: !853, file: !565, discriminator: 20)
!3904 = !DILocation(line: 86, column: 2202, scope: !854)
!3905 = !DILocation(line: 86, column: 2202, scope: !853)
!3906 = !DILocation(line: 86, column: 2205, scope: !854)
!3907 = !DILocation(line: 86, column: 14, scope: !847)
!3908 = !DILocation(line: 87, column: 9, scope: !854)
!3909 = !DILocation(line: 88, column: 31, scope: !860)
!3910 = !DILocation(line: 88, column: 38, scope: !860)
!3911 = !DILocation(line: 88, column: 48, scope: !860)
!3912 = !DILocation(line: 88, column: 1422, scope: !860)
!3913 = !DILocation(line: 88, column: 1435, scope: !3914)
!3914 = !DILexicalBlockFile(scope: !860, file: !565, discriminator: 1)
!3915 = !DILocation(line: 88, column: 1457, scope: !860)
!3916 = !DILocation(line: 88, column: 1466, scope: !860)
!3917 = !DILocation(line: 88, column: 1303, scope: !860)
!3918 = !DILocation(line: 88, column: 1643, scope: !3919)
!3919 = !DILexicalBlockFile(scope: !864, file: !565, discriminator: 3)
!3920 = !DILocation(line: 88, column: 1664, scope: !864)
!3921 = !DILocation(line: 88, column: 1711, scope: !864)
!3922 = !DILocation(line: 88, column: 1720, scope: !864)
!3923 = !DILocation(line: 88, column: 1733, scope: !864)
!3924 = !DILocation(line: 88, column: 1744, scope: !864)
!3925 = !DILocation(line: 88, column: 1754, scope: !864)
!3926 = !DILocation(line: 88, column: 1752, scope: !864)
!3927 = !DILocation(line: 88, column: 1815, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !864, file: !565, line: 88, column: 1815)
!3929 = !DILocation(line: 88, column: 1824, scope: !3928)
!3930 = !DILocation(line: 88, column: 1828, scope: !3928)
!3931 = !DILocation(line: 88, column: 1831, scope: !3932)
!3932 = !DILexicalBlockFile(scope: !3928, file: !565, discriminator: 5)
!3933 = !DILocation(line: 88, column: 1840, scope: !3928)
!3934 = !DILocation(line: 88, column: 1815, scope: !864)
!3935 = !DILocation(line: 88, column: 1860, scope: !3936)
!3936 = !DILexicalBlockFile(scope: !3937, file: !565, discriminator: 7)
!3937 = distinct !DILexicalBlock(scope: !3928, file: !565, line: 88, column: 1846)
!3938 = !DILocation(line: 88, column: 1870, scope: !3937)
!3939 = !DILocation(line: 88, column: 1868, scope: !3937)
!3940 = !DILocation(line: 88, column: 1857, scope: !3937)
!3941 = !DILocation(line: 88, column: 1932, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3937, file: !565, line: 88, column: 1932)
!3943 = !DILocation(line: 88, column: 1941, scope: !3942)
!3944 = !DILocation(line: 88, column: 1945, scope: !3942)
!3945 = !DILocation(line: 88, column: 1948, scope: !3946)
!3946 = !DILexicalBlockFile(scope: !3942, file: !565, discriminator: 9)
!3947 = !DILocation(line: 88, column: 1957, scope: !3942)
!3948 = !DILocation(line: 88, column: 1932, scope: !3937)
!3949 = !DILocation(line: 88, column: 1977, scope: !3950)
!3950 = !DILexicalBlockFile(scope: !3951, file: !565, discriminator: 11)
!3951 = distinct !DILexicalBlock(scope: !3942, file: !565, line: 88, column: 1963)
!3952 = !DILocation(line: 88, column: 1987, scope: !3951)
!3953 = !DILocation(line: 88, column: 1985, scope: !3951)
!3954 = !DILocation(line: 88, column: 1974, scope: !3951)
!3955 = !DILocation(line: 88, column: 2049, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3951, file: !565, line: 88, column: 2049)
!3957 = !DILocation(line: 88, column: 2058, scope: !3956)
!3958 = !DILocation(line: 88, column: 2062, scope: !3956)
!3959 = !DILocation(line: 88, column: 2065, scope: !3960)
!3960 = !DILexicalBlockFile(scope: !3956, file: !565, discriminator: 13)
!3961 = !DILocation(line: 88, column: 2074, scope: !3956)
!3962 = !DILocation(line: 88, column: 2049, scope: !3951)
!3963 = !DILocation(line: 88, column: 2092, scope: !3964)
!3964 = !DILexicalBlockFile(scope: !3956, file: !565, discriminator: 15)
!3965 = !DILocation(line: 88, column: 2102, scope: !3956)
!3966 = !DILocation(line: 88, column: 2100, scope: !3956)
!3967 = !DILocation(line: 88, column: 2089, scope: !3956)
!3968 = !DILocation(line: 88, column: 2080, scope: !3956)
!3969 = !DILocation(line: 88, column: 2160, scope: !3970)
!3970 = !DILexicalBlockFile(scope: !3971, file: !565, discriminator: 17)
!3971 = !DILexicalBlockFile(scope: !3972, file: !565, discriminator: 16)
!3972 = !DILexicalBlockFile(scope: !3951, file: !565, discriminator: 14)
!3973 = !DILocation(line: 88, column: 2162, scope: !3974)
!3974 = !DILexicalBlockFile(scope: !3975, file: !565, discriminator: 18)
!3975 = !DILexicalBlockFile(scope: !3976, file: !565, discriminator: 12)
!3976 = !DILexicalBlockFile(scope: !3937, file: !565, discriminator: 10)
!3977 = !DILocation(line: 88, column: 2164, scope: !3978)
!3978 = !DILexicalBlockFile(scope: !3979, file: !565, discriminator: 19)
!3979 = !DILexicalBlockFile(scope: !3980, file: !565, discriminator: 8)
!3980 = !DILexicalBlockFile(scope: !864, file: !565, discriminator: 6)
!3981 = !DILocation(line: 88, column: 1843, scope: !3928)
!3982 = !DILocation(line: 88, column: 2174, scope: !860)
!3983 = !DILocation(line: 88, column: 2174, scope: !864)
!3984 = !DILocation(line: 88, column: 2199, scope: !3985)
!3985 = !DILexicalBlockFile(scope: !3986, file: !565, discriminator: 4)
!3986 = !DILexicalBlockFile(scope: !860, file: !565, discriminator: 2)
!3987 = !DILocation(line: 88, column: 2181, scope: !860)
!3988 = !DILocation(line: 88, column: 31, scope: !3989)
!3989 = !DILexicalBlockFile(scope: !3990, file: !565, discriminator: 21)
!3990 = !DILexicalBlockFile(scope: !860, file: !565, discriminator: 20)
!3991 = !DILocation(line: 88, column: 2222, scope: !861)
!3992 = !DILocation(line: 88, column: 2222, scope: !860)
!3993 = !DILocation(line: 88, column: 2225, scope: !861)
!3994 = !DILocation(line: 88, column: 14, scope: !854)
!3995 = !DILocation(line: 89, column: 9, scope: !861)
!3996 = !DILocation(line: 91, column: 37, scope: !861)
!3997 = !DILocation(line: 91, column: 16, scope: !861)
!3998 = !DILocation(line: 91, column: 9, scope: !861)
!3999 = !DILocation(line: 92, column: 1, scope: !840)
!4000 = !DILocation(line: 1185, column: 55, scope: !893)
!4001 = !DILocation(line: 1187, column: 25, scope: !893)
!4002 = !DILocation(line: 1187, column: 5, scope: !893)
!4003 = !DILocation(line: 1188, column: 5, scope: !893)
!4004 = !DILocation(line: 1188, column: 14, scope: !4005)
!4005 = !DILexicalBlockFile(scope: !900, file: !565, discriminator: 1)
!4006 = !DILocation(line: 1188, column: 20, scope: !900)
!4007 = !{!4008, !1465, i64 32}
!4008 = !{!"", !1499, i64 0, !1465, i64 16, !1466, i64 24, !1465, i64 32, !1466, i64 40, !1500, i64 48}
!4009 = !DILocation(line: 1188, column: 27, scope: !900)
!4010 = !DILocation(line: 1188, column: 41, scope: !900)
!4011 = !DILocation(line: 1188, column: 46, scope: !4012)
!4012 = !DILexicalBlockFile(scope: !900, file: !565, discriminator: 2)
!4013 = !DILocation(line: 1188, column: 52, scope: !900)
!4014 = !DILocation(line: 1188, column: 60, scope: !900)
!4015 = !DILocation(line: 1188, column: 78, scope: !900)
!4016 = !DILocation(line: 1188, column: 100, scope: !4017)
!4017 = !DILexicalBlockFile(scope: !900, file: !565, discriminator: 5)
!4018 = !DILocation(line: 1188, column: 106, scope: !900)
!4019 = !DILocation(line: 1188, column: 97, scope: !900)
!4020 = !DILocation(line: 1188, column: 14, scope: !901)
!4021 = !DILocation(line: 1188, column: 116, scope: !4022)
!4022 = !DILexicalBlockFile(scope: !4023, file: !565, discriminator: 6)
!4023 = !DILexicalBlockFile(scope: !900, file: !565, discriminator: 4)
!4024 = !DILocation(line: 1188, column: 121, scope: !4025)
!4025 = !DILexicalBlockFile(scope: !899, file: !565, discriminator: 8)
!4026 = !DILocation(line: 1188, column: 131, scope: !899)
!4027 = !DILocation(line: 1188, column: 161, scope: !899)
!4028 = !DILocation(line: 1188, column: 167, scope: !899)
!4029 = !DILocation(line: 1188, column: 184, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !899, file: !565, line: 1188, column: 181)
!4031 = !DILocation(line: 1188, column: 201, scope: !4030)
!4032 = !DILocation(line: 1188, column: 181, scope: !4030)
!4033 = !DILocation(line: 1188, column: 211, scope: !4030)
!4034 = !DILocation(line: 1188, column: 181, scope: !899)
!4035 = !DILocation(line: 1188, column: 181, scope: !4036)
!4036 = !DILexicalBlockFile(scope: !899, file: !565, discriminator: 9)
!4037 = !DILocation(line: 1188, column: 242, scope: !4038)
!4038 = !DILexicalBlockFile(scope: !4030, file: !565, discriminator: 10)
!4039 = !DILocation(line: 1188, column: 260, scope: !4030)
!4040 = !DILocation(line: 1188, column: 270, scope: !4030)
!4041 = !DILocation(line: 1188, column: 295, scope: !4030)
!4042 = !DILocation(line: 1188, column: 226, scope: !4030)
!4043 = !DILocation(line: 1188, column: 314, scope: !4044)
!4044 = !DILexicalBlockFile(scope: !900, file: !565, discriminator: 11)
!4045 = !DILocation(line: 1188, column: 314, scope: !899)
!4046 = !DILocation(line: 1188, column: 314, scope: !4047)
!4047 = !DILexicalBlockFile(scope: !899, file: !565, discriminator: 12)
!4048 = !DILocation(line: 1188, column: 327, scope: !4049)
!4049 = !DILexicalBlockFile(scope: !4050, file: !565, discriminator: 13)
!4050 = !DILexicalBlockFile(scope: !4051, file: !565, discriminator: 7)
!4051 = !DILexicalBlockFile(scope: !901, file: !565, discriminator: 3)
!4052 = !DILocation(line: 1189, column: 19, scope: !893)
!4053 = !DILocation(line: 1189, column: 7, scope: !893)
!4054 = !DILocation(line: 1189, column: 27, scope: !893)
!4055 = !DILocation(line: 1189, column: 37, scope: !893)
!4056 = !DILocation(line: 1189, column: 45, scope: !893)
!4057 = !DILocation(line: 1189, column: 5, scope: !893)
!4058 = !DILocation(line: 1190, column: 1, scope: !893)
!4059 = !DILocation(line: 1176, column: 56, scope: !902)
!4060 = !DILocation(line: 1177, column: 31, scope: !902)
!4061 = !DILocation(line: 1177, column: 44, scope: !902)
!4062 = !DILocation(line: 1179, column: 11, scope: !913)
!4063 = !DILocation(line: 1179, column: 17, scope: !913)
!4064 = !DILocation(line: 1179, column: 25, scope: !913)
!4065 = !DILocation(line: 1179, column: 43, scope: !913)
!4066 = !DILocation(line: 1179, column: 65, scope: !4067)
!4067 = !DILexicalBlockFile(scope: !913, file: !565, discriminator: 1)
!4068 = !DILocation(line: 1179, column: 71, scope: !913)
!4069 = !DILocation(line: 1179, column: 62, scope: !913)
!4070 = !DILocation(line: 1179, column: 9, scope: !902)
!4071 = !DILocation(line: 1180, column: 9, scope: !913)
!4072 = !DILocation(line: 1180, column: 18, scope: !4073)
!4073 = !DILexicalBlockFile(scope: !911, file: !565, discriminator: 1)
!4074 = !DILocation(line: 1180, column: 24, scope: !911)
!4075 = !DILocation(line: 1180, column: 18, scope: !911)
!4076 = !DILocation(line: 1180, column: 18, scope: !912)
!4077 = !DILocation(line: 1180, column: 34, scope: !4078)
!4078 = !DILexicalBlockFile(scope: !910, file: !565, discriminator: 2)
!4079 = !DILocation(line: 1180, column: 38, scope: !910)
!4080 = !DILocation(line: 1180, column: 45, scope: !910)
!4081 = !DILocation(line: 1180, column: 64, scope: !910)
!4082 = !DILocation(line: 1180, column: 70, scope: !910)
!4083 = !DILocation(line: 1180, column: 79, scope: !910)
!4084 = !DILocation(line: 1180, column: 89, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !910, file: !565, line: 1180, column: 89)
!4086 = !DILocation(line: 1180, column: 89, scope: !910)
!4087 = !DILocation(line: 1180, column: 102, scope: !4088)
!4088 = !DILexicalBlockFile(scope: !4085, file: !565, discriminator: 4)
!4089 = !DILocation(line: 1180, column: 95, scope: !4085)
!4090 = !DILocation(line: 1180, column: 108, scope: !4091)
!4091 = !DILexicalBlockFile(scope: !911, file: !565, discriminator: 5)
!4092 = !DILocation(line: 1180, column: 108, scope: !4093)
!4093 = !DILexicalBlockFile(scope: !4094, file: !565, discriminator: 7)
!4094 = !DILexicalBlockFile(scope: !911, file: !565, discriminator: 6)
!4095 = !DILocation(line: 1180, column: 108, scope: !910)
!4096 = !DILocation(line: 1180, column: 110, scope: !4097)
!4097 = !DILexicalBlockFile(scope: !4098, file: !565, discriminator: 8)
!4098 = !DILexicalBlockFile(scope: !912, file: !565, discriminator: 3)
!4099 = !DILocation(line: 1180, column: 110, scope: !4100)
!4100 = !DILexicalBlockFile(scope: !912, file: !565, discriminator: 9)
!4101 = !DILocation(line: 1181, column: 5, scope: !902)
!4102 = !DILocation(line: 1182, column: 1, scope: !902)
!4103 = !DILocation(line: 1170, column: 27, scope: !998)
!4104 = !DILocation(line: 1170, column: 43, scope: !998)
!4105 = !DILocation(line: 1170, column: 59, scope: !998)
!4106 = !DILocation(line: 1172, column: 5, scope: !998)
!4107 = !DILocation(line: 1129, column: 30, scope: !1003)
!4108 = !DILocation(line: 1129, column: 46, scope: !1003)
!4109 = !DILocation(line: 1129, column: 62, scope: !1003)
!4110 = !DILocation(line: 1131, column: 5, scope: !1003)
!4111 = !DILocation(line: 1131, column: 40, scope: !1003)
!4112 = !DILocation(line: 1132, column: 5, scope: !1003)
!4113 = !DILocation(line: 1132, column: 15, scope: !1003)
!4114 = !DILocation(line: 1133, column: 5, scope: !1003)
!4115 = !DILocation(line: 1133, column: 11, scope: !1003)
!4116 = !DILocation(line: 1135, column: 45, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !1003, file: !565, line: 1135, column: 9)
!4118 = !DILocation(line: 1135, column: 51, scope: !4117)
!4119 = !DILocation(line: 1135, column: 10, scope: !4117)
!4120 = !DILocation(line: 1135, column: 9, scope: !1003)
!4121 = !DILocation(line: 1137, column: 9, scope: !4117)
!4122 = !DILocation(line: 1139, column: 49, scope: !1003)
!4123 = !DILocation(line: 1139, column: 55, scope: !1003)
!4124 = !DILocation(line: 1139, column: 64, scope: !1003)
!4125 = !DILocation(line: 1139, column: 12, scope: !1003)
!4126 = !DILocation(line: 1139, column: 10, scope: !1003)
!4127 = !DILocation(line: 1140, column: 9, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !1003, file: !565, line: 1140, column: 9)
!4129 = !DILocation(line: 1140, column: 14, scope: !4128)
!4130 = !DILocation(line: 1140, column: 9, scope: !1003)
!4131 = !DILocation(line: 1141, column: 9, scope: !4128)
!4132 = !DILocation(line: 1143, column: 48, scope: !1003)
!4133 = !DILocation(line: 1143, column: 36, scope: !1003)
!4134 = !DILocation(line: 1143, column: 13, scope: !1003)
!4135 = !DILocation(line: 1143, column: 11, scope: !1003)
!4136 = !DILocation(line: 1144, column: 9, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !1003, file: !565, line: 1144, column: 9)
!4138 = !DILocation(line: 1144, column: 15, scope: !4137)
!4139 = !DILocation(line: 1144, column: 9, scope: !1003)
!4140 = !DILocation(line: 1145, column: 9, scope: !4137)
!4141 = !DILocation(line: 1146, column: 12, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !1003, file: !565, line: 1146, column: 9)
!4143 = !DILocation(line: 1146, column: 20, scope: !4142)
!4144 = !DILocation(line: 1146, column: 28, scope: !4142)
!4145 = !DILocation(line: 1146, column: 9, scope: !1003)
!4146 = !DILocation(line: 1147, column: 25, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4142, file: !565, line: 1146, column: 54)
!4148 = !DILocation(line: 1147, column: 9, scope: !4147)
!4149 = !DILocation(line: 1148, column: 9, scope: !4147)
!4150 = !DILocation(line: 1151, column: 44, scope: !1003)
!4151 = !DILocation(line: 1151, column: 20, scope: !1003)
!4152 = !DILocation(line: 1151, column: 52, scope: !1003)
!4153 = !DILocation(line: 1151, column: 5, scope: !1003)
!4154 = !DILocation(line: 1151, column: 11, scope: !1003)
!4155 = !DILocation(line: 1151, column: 17, scope: !1003)
!4156 = !{!4008, !1465, i64 16}
!4157 = !DILocation(line: 1152, column: 5, scope: !1003)
!4158 = !DILocation(line: 1152, column: 11, scope: !1003)
!4159 = !DILocation(line: 1152, column: 23, scope: !1003)
!4160 = !{!4008, !1500, i64 48}
!4161 = !DILocation(line: 1153, column: 44, scope: !1003)
!4162 = !DILocation(line: 1153, column: 20, scope: !1003)
!4163 = !DILocation(line: 1153, column: 5, scope: !1003)
!4164 = !DILocation(line: 1153, column: 11, scope: !1003)
!4165 = !DILocation(line: 1153, column: 18, scope: !1003)
!4166 = !DILocation(line: 1154, column: 9, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !1003, file: !565, line: 1154, column: 9)
!4168 = !DILocation(line: 1154, column: 15, scope: !4167)
!4169 = !DILocation(line: 1154, column: 22, scope: !4167)
!4170 = !DILocation(line: 1154, column: 9, scope: !1003)
!4171 = !DILocation(line: 1155, column: 9, scope: !4167)
!4172 = !DILocation(line: 1156, column: 9, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !1003, file: !565, line: 1156, column: 9)
!4174 = !DILocation(line: 1156, column: 15, scope: !4173)
!4175 = !DILocation(line: 1156, column: 22, scope: !4173)
!4176 = !{!1706, !1465, i64 56}
!4177 = !DILocation(line: 1156, column: 30, scope: !4173)
!4178 = !DILocation(line: 1156, column: 44, scope: !4173)
!4179 = !DILocation(line: 1157, column: 9, scope: !4173)
!4180 = !DILocation(line: 1157, column: 15, scope: !4173)
!4181 = !DILocation(line: 1157, column: 22, scope: !4173)
!4182 = !DILocation(line: 1157, column: 31, scope: !4173)
!4183 = !DILocation(line: 1157, column: 37, scope: !4173)
!4184 = !DILocation(line: 1157, column: 44, scope: !4173)
!4185 = !DILocation(line: 1157, column: 50, scope: !4173)
!4186 = !DILocation(line: 1157, column: 57, scope: !4173)
!4187 = !DILocation(line: 1157, column: 65, scope: !4173)
!4188 = !DILocation(line: 1156, column: 9, scope: !1003)
!4189 = !DILocation(line: 1158, column: 9, scope: !4173)
!4190 = !DILocation(line: 1160, column: 5, scope: !1003)
!4191 = !DILocation(line: 1160, column: 10, scope: !4192)
!4192 = !DILexicalBlockFile(scope: !1012, file: !565, discriminator: 1)
!4193 = !DILocation(line: 1160, column: 20, scope: !1012)
!4194 = !DILocation(line: 1160, column: 50, scope: !1012)
!4195 = !DILocation(line: 1160, column: 66, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !1012, file: !565, line: 1160, column: 63)
!4197 = !DILocation(line: 1160, column: 83, scope: !4196)
!4198 = !DILocation(line: 1160, column: 63, scope: !4196)
!4199 = !DILocation(line: 1160, column: 93, scope: !4196)
!4200 = !DILocation(line: 1160, column: 63, scope: !1012)
!4201 = !DILocation(line: 1160, column: 63, scope: !4202)
!4202 = !DILexicalBlockFile(scope: !1012, file: !565, discriminator: 2)
!4203 = !DILocation(line: 1160, column: 124, scope: !4204)
!4204 = !DILexicalBlockFile(scope: !4196, file: !565, discriminator: 3)
!4205 = !DILocation(line: 1160, column: 142, scope: !4196)
!4206 = !DILocation(line: 1160, column: 152, scope: !4196)
!4207 = !DILocation(line: 1160, column: 177, scope: !4196)
!4208 = !DILocation(line: 1160, column: 108, scope: !4196)
!4209 = !DILocation(line: 1160, column: 196, scope: !4210)
!4210 = !DILexicalBlockFile(scope: !1003, file: !565, discriminator: 4)
!4211 = !DILocation(line: 1160, column: 196, scope: !1012)
!4212 = !DILocation(line: 1160, column: 196, scope: !4213)
!4213 = !DILexicalBlockFile(scope: !1012, file: !565, discriminator: 5)
!4214 = !DILocation(line: 1161, column: 24, scope: !1003)
!4215 = !DILocation(line: 1161, column: 12, scope: !1003)
!4216 = !DILocation(line: 1161, column: 5, scope: !1003)
!4217 = !DILocation(line: 1164, column: 5, scope: !1003)
!4218 = !DILocation(line: 1164, column: 10, scope: !4219)
!4219 = !DILexicalBlockFile(scope: !1014, file: !565, discriminator: 1)
!4220 = !DILocation(line: 1164, column: 20, scope: !1014)
!4221 = !DILocation(line: 1164, column: 51, scope: !1014)
!4222 = !DILocation(line: 1164, column: 38, scope: !1014)
!4223 = !DILocation(line: 1164, column: 62, scope: !1017)
!4224 = !DILocation(line: 1164, column: 78, scope: !1017)
!4225 = !DILocation(line: 1164, column: 62, scope: !1014)
!4226 = !DILocation(line: 1164, column: 93, scope: !4227)
!4227 = !DILexicalBlockFile(scope: !1017, file: !565, discriminator: 2)
!4228 = !DILocation(line: 1164, column: 98, scope: !4229)
!4229 = !DILexicalBlockFile(scope: !1016, file: !565, discriminator: 4)
!4230 = !DILocation(line: 1164, column: 108, scope: !1016)
!4231 = !DILocation(line: 1164, column: 138, scope: !1016)
!4232 = !DILocation(line: 1164, column: 164, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !1016, file: !565, line: 1164, column: 161)
!4234 = !DILocation(line: 1164, column: 181, scope: !4233)
!4235 = !DILocation(line: 1164, column: 161, scope: !4233)
!4236 = !DILocation(line: 1164, column: 191, scope: !4233)
!4237 = !DILocation(line: 1164, column: 161, scope: !1016)
!4238 = !DILocation(line: 1164, column: 161, scope: !4239)
!4239 = !DILexicalBlockFile(scope: !1016, file: !565, discriminator: 5)
!4240 = !DILocation(line: 1164, column: 222, scope: !4241)
!4241 = !DILexicalBlockFile(scope: !4233, file: !565, discriminator: 6)
!4242 = !DILocation(line: 1164, column: 240, scope: !4233)
!4243 = !DILocation(line: 1164, column: 250, scope: !4233)
!4244 = !DILocation(line: 1164, column: 275, scope: !4233)
!4245 = !DILocation(line: 1164, column: 206, scope: !4233)
!4246 = !DILocation(line: 1164, column: 294, scope: !4247)
!4247 = !DILexicalBlockFile(scope: !1017, file: !565, discriminator: 7)
!4248 = !DILocation(line: 1164, column: 294, scope: !1016)
!4249 = !DILocation(line: 1164, column: 294, scope: !4250)
!4250 = !DILexicalBlockFile(scope: !1016, file: !565, discriminator: 8)
!4251 = !DILocation(line: 1164, column: 294, scope: !4252)
!4252 = !DILexicalBlockFile(scope: !1016, file: !565, discriminator: 9)
!4253 = !DILocation(line: 1164, column: 307, scope: !4254)
!4254 = !DILexicalBlockFile(scope: !4255, file: !565, discriminator: 10)
!4255 = !DILexicalBlockFile(scope: !1003, file: !565, discriminator: 3)
!4256 = !DILocation(line: 1164, column: 307, scope: !1014)
!4257 = !DILocation(line: 1164, column: 307, scope: !4258)
!4258 = !DILexicalBlockFile(scope: !1014, file: !565, discriminator: 11)
!4259 = !DILocation(line: 1165, column: 5, scope: !1003)
!4260 = !DILocation(line: 1165, column: 10, scope: !4261)
!4261 = !DILexicalBlockFile(scope: !1019, file: !565, discriminator: 1)
!4262 = !DILocation(line: 1165, column: 20, scope: !1019)
!4263 = !DILocation(line: 1165, column: 51, scope: !1019)
!4264 = !DILocation(line: 1165, column: 63, scope: !1022)
!4265 = !DILocation(line: 1165, column: 79, scope: !1022)
!4266 = !DILocation(line: 1165, column: 63, scope: !1019)
!4267 = !DILocation(line: 1165, column: 94, scope: !4268)
!4268 = !DILexicalBlockFile(scope: !1022, file: !565, discriminator: 2)
!4269 = !DILocation(line: 1165, column: 99, scope: !4270)
!4270 = !DILexicalBlockFile(scope: !1021, file: !565, discriminator: 4)
!4271 = !DILocation(line: 1165, column: 109, scope: !1021)
!4272 = !DILocation(line: 1165, column: 139, scope: !1021)
!4273 = !DILocation(line: 1165, column: 165, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !1021, file: !565, line: 1165, column: 162)
!4275 = !DILocation(line: 1165, column: 182, scope: !4274)
!4276 = !DILocation(line: 1165, column: 162, scope: !4274)
!4277 = !DILocation(line: 1165, column: 192, scope: !4274)
!4278 = !DILocation(line: 1165, column: 162, scope: !1021)
!4279 = !DILocation(line: 1165, column: 162, scope: !4280)
!4280 = !DILexicalBlockFile(scope: !1021, file: !565, discriminator: 5)
!4281 = !DILocation(line: 1165, column: 223, scope: !4282)
!4282 = !DILexicalBlockFile(scope: !4274, file: !565, discriminator: 6)
!4283 = !DILocation(line: 1165, column: 241, scope: !4274)
!4284 = !DILocation(line: 1165, column: 251, scope: !4274)
!4285 = !DILocation(line: 1165, column: 276, scope: !4274)
!4286 = !DILocation(line: 1165, column: 207, scope: !4274)
!4287 = !DILocation(line: 1165, column: 295, scope: !4288)
!4288 = !DILexicalBlockFile(scope: !1022, file: !565, discriminator: 7)
!4289 = !DILocation(line: 1165, column: 295, scope: !1021)
!4290 = !DILocation(line: 1165, column: 295, scope: !4291)
!4291 = !DILexicalBlockFile(scope: !1021, file: !565, discriminator: 8)
!4292 = !DILocation(line: 1165, column: 295, scope: !4293)
!4293 = !DILexicalBlockFile(scope: !1021, file: !565, discriminator: 9)
!4294 = !DILocation(line: 1165, column: 308, scope: !4254)
!4295 = !DILocation(line: 1165, column: 308, scope: !1019)
!4296 = !DILocation(line: 1165, column: 308, scope: !4297)
!4297 = !DILexicalBlockFile(scope: !1019, file: !565, discriminator: 11)
!4298 = !DILocation(line: 1166, column: 5, scope: !1003)
!4299 = !DILocation(line: 1167, column: 1, scope: !1003)
!4300 = !DILocation(line: 1029, column: 54, scope: !914)
!4301 = !DILocation(line: 1030, column: 29, scope: !914)
!4302 = !DILocation(line: 1030, column: 45, scope: !914)
!4303 = !DILocation(line: 1032, column: 5, scope: !914)
!4304 = !DILocation(line: 1032, column: 27, scope: !914)
!4305 = !DILocation(line: 1033, column: 5, scope: !914)
!4306 = !DILocation(line: 1033, column: 11, scope: !914)
!4307 = !DILocation(line: 1033, column: 18, scope: !914)
!4308 = !DILocation(line: 1034, column: 5, scope: !914)
!4309 = !DILocation(line: 1034, column: 15, scope: !914)
!4310 = !DILocation(line: 1035, column: 5, scope: !914)
!4311 = !DILocation(line: 1035, column: 16, scope: !914)
!4312 = !DILocation(line: 1035, column: 23, scope: !914)
!4313 = !DILocation(line: 1035, column: 29, scope: !914)
!4314 = !DILocation(line: 1036, column: 5, scope: !914)
!4315 = !DILocation(line: 1036, column: 9, scope: !914)
!4316 = !DILocation(line: 1037, column: 5, scope: !914)
!4317 = !DILocation(line: 1037, column: 15, scope: !914)
!4318 = !DILocation(line: 1039, column: 45, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !914, file: !565, line: 1039, column: 9)
!4320 = !DILocation(line: 1039, column: 51, scope: !4319)
!4321 = !DILocation(line: 1039, column: 10, scope: !4319)
!4322 = !DILocation(line: 1039, column: 9, scope: !914)
!4323 = !DILocation(line: 1041, column: 9, scope: !4319)
!4324 = !DILocation(line: 1042, column: 18, scope: !914)
!4325 = !{!4326, !1465, i64 0}
!4326 = !{!"bufferinfo", !1465, i64 0, !1465, i64 8, !1500, i64 16, !1500, i64 24, !1476, i64 32, !1476, i64 36, !1465, i64 40, !1465, i64 48, !1465, i64 56, !1465, i64 64, !1465, i64 72}
!4327 = !DILocation(line: 1042, column: 10, scope: !914)
!4328 = !DILocation(line: 1043, column: 18, scope: !914)
!4329 = !{!4326, !1500, i64 16}
!4330 = !DILocation(line: 1043, column: 10, scope: !914)
!4331 = !DILocation(line: 1045, column: 32, scope: !914)
!4332 = !DILocation(line: 1045, column: 5, scope: !914)
!4333 = !DILocation(line: 1046, column: 9, scope: !914)
!4334 = !DILocation(line: 1046, column: 16, scope: !914)
!4335 = !{!4336, !1465, i64 24}
!4336 = !{!"", !1465, i64 0, !1465, i64 8, !1465, i64 16, !1465, i64 24, !4337, i64 32}
!4337 = !{!"", !1465, i64 0, !1465, i64 8, !1466, i64 16, !1476, i64 20, !1500, i64 24, !1500, i64 32, !1500, i64 40, !1476, i64 48, !1466, i64 52, !1466, i64 53}
!4338 = !DILocation(line: 1047, column: 19, scope: !914)
!4339 = !DILocation(line: 1047, column: 25, scope: !914)
!4340 = !DILocation(line: 1047, column: 17, scope: !914)
!4341 = !DILocation(line: 1049, column: 9, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !914, file: !565, line: 1049, column: 9)
!4343 = !DILocation(line: 1049, column: 15, scope: !4342)
!4344 = !DILocation(line: 1049, column: 27, scope: !4342)
!4345 = !DILocation(line: 1049, column: 9, scope: !914)
!4346 = !DILocation(line: 1050, column: 17, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4342, file: !565, line: 1049, column: 33)
!4348 = !DILocation(line: 1050, column: 15, scope: !4347)
!4349 = !DILocation(line: 1051, column: 17, scope: !4347)
!4350 = !DILocation(line: 1051, column: 15, scope: !4347)
!4351 = !DILocation(line: 1052, column: 5, scope: !4347)
!4352 = !DILocation(line: 1054, column: 13, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4354, file: !565, line: 1054, column: 13)
!4354 = distinct !DILexicalBlock(scope: !4342, file: !565, line: 1053, column: 10)
!4355 = !DILocation(line: 1054, column: 54, scope: !4353)
!4356 = !DILocation(line: 1054, column: 60, scope: !4353)
!4357 = !DILocation(line: 1054, column: 52, scope: !4353)
!4358 = !DILocation(line: 1054, column: 18, scope: !4353)
!4359 = !DILocation(line: 1054, column: 13, scope: !4354)
!4360 = !DILocation(line: 1055, column: 13, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4353, file: !565, line: 1054, column: 73)
!4362 = !DILocation(line: 1056, column: 13, scope: !4361)
!4363 = !DILocation(line: 1058, column: 17, scope: !4354)
!4364 = !DILocation(line: 1058, column: 24, scope: !4354)
!4365 = !DILocation(line: 1058, column: 30, scope: !4354)
!4366 = !DILocation(line: 1058, column: 22, scope: !4354)
!4367 = !DILocation(line: 1058, column: 15, scope: !4354)
!4368 = !DILocation(line: 1059, column: 30, scope: !4354)
!4369 = !DILocation(line: 1059, column: 17, scope: !4354)
!4370 = !DILocation(line: 1059, column: 15, scope: !4354)
!4371 = !DILocation(line: 1060, column: 13, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4354, file: !565, line: 1060, column: 13)
!4373 = !DILocation(line: 1060, column: 19, scope: !4372)
!4374 = !DILocation(line: 1060, column: 13, scope: !4354)
!4375 = !DILocation(line: 1061, column: 13, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4372, file: !565, line: 1060, column: 34)
!4377 = !DILocation(line: 1062, column: 13, scope: !4376)
!4378 = !DILocation(line: 1064, column: 16, scope: !4354)
!4379 = !DILocation(line: 1064, column: 23, scope: !4354)
!4380 = !DILocation(line: 1064, column: 29, scope: !4354)
!4381 = !DILocation(line: 1064, column: 9, scope: !4354)
!4382 = !DILocation(line: 1064, column: 38, scope: !4354)
!4383 = !DILocation(line: 1064, column: 44, scope: !4354)
!4384 = !DILocation(line: 1065, column: 16, scope: !4354)
!4385 = !DILocation(line: 1065, column: 24, scope: !4354)
!4386 = !DILocation(line: 1065, column: 30, scope: !4354)
!4387 = !DILocation(line: 1065, column: 22, scope: !4354)
!4388 = !DILocation(line: 1065, column: 43, scope: !4354)
!4389 = !DILocation(line: 1065, column: 49, scope: !4354)
!4390 = !DILocation(line: 1065, column: 9, scope: !4354)
!4391 = !DILocation(line: 1066, column: 9, scope: !4354)
!4392 = !DILocation(line: 1066, column: 15, scope: !4354)
!4393 = !DILocation(line: 1066, column: 27, scope: !4354)
!4394 = !DILocation(line: 1069, column: 38, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !914, file: !565, line: 1069, column: 9)
!4396 = !DILocation(line: 1069, column: 45, scope: !4395)
!4397 = !DILocation(line: 1069, column: 9, scope: !4395)
!4398 = !DILocation(line: 1069, column: 52, scope: !4395)
!4399 = !DILocation(line: 1069, column: 9, scope: !914)
!4400 = !DILocation(line: 1070, column: 9, scope: !4395)
!4401 = !DILocation(line: 1072, column: 66, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !914, file: !565, line: 1072, column: 9)
!4403 = !DILocation(line: 1072, column: 30, scope: !4402)
!4404 = !DILocation(line: 1072, column: 9, scope: !4402)
!4405 = !DILocation(line: 1072, column: 9, scope: !914)
!4406 = !DILocation(line: 1073, column: 9, scope: !4402)
!4407 = !DILocation(line: 1075, column: 9, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !914, file: !565, line: 1075, column: 9)
!4409 = !DILocation(line: 1075, column: 15, scope: !4408)
!4410 = !DILocation(line: 1075, column: 22, scope: !4411)
!4411 = !DILexicalBlockFile(scope: !4408, file: !565, discriminator: 1)
!4412 = !{!4336, !1465, i64 0}
!4413 = !DILocation(line: 1075, column: 34, scope: !4408)
!4414 = !{!4336, !1465, i64 16}
!4415 = !DILocation(line: 1075, column: 28, scope: !4408)
!4416 = !DILocation(line: 1075, column: 9, scope: !914)
!4417 = !DILocation(line: 1076, column: 37, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !565, line: 1076, column: 13)
!4419 = distinct !DILexicalBlock(scope: !4408, file: !565, line: 1075, column: 45)
!4420 = !DILocation(line: 1076, column: 43, scope: !4418)
!4421 = !DILocation(line: 1076, column: 51, scope: !4418)
!4422 = !DILocation(line: 1076, column: 57, scope: !4418)
!4423 = !DILocation(line: 1077, column: 31, scope: !4418)
!4424 = !DILocation(line: 1077, column: 37, scope: !4418)
!4425 = !DILocation(line: 1076, column: 13, scope: !4418)
!4426 = !DILocation(line: 1076, column: 13, scope: !4419)
!4427 = !DILocation(line: 1079, column: 20, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4418, file: !565, line: 1077, column: 52)
!4429 = !DILocation(line: 1079, column: 26, scope: !4428)
!4430 = !DILocation(line: 1079, column: 13, scope: !4428)
!4431 = !DILocation(line: 1079, column: 35, scope: !4428)
!4432 = !DILocation(line: 1079, column: 42, scope: !4428)
!4433 = !DILocation(line: 1080, column: 33, scope: !4428)
!4434 = !DILocation(line: 1080, column: 13, scope: !4428)
!4435 = !DILocation(line: 1080, column: 19, scope: !4428)
!4436 = !DILocation(line: 1080, column: 31, scope: !4428)
!4437 = !DILocation(line: 1081, column: 13, scope: !4428)
!4438 = !DILocation(line: 1083, column: 5, scope: !4419)
!4439 = !DILocation(line: 1085, column: 13, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !914, file: !565, line: 1085, column: 9)
!4441 = !DILocation(line: 1085, column: 25, scope: !4440)
!4442 = !DILocation(line: 1085, column: 19, scope: !4440)
!4443 = !DILocation(line: 1085, column: 9, scope: !914)
!4444 = !DILocation(line: 1086, column: 73, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4446, file: !565, line: 1086, column: 13)
!4446 = distinct !DILexicalBlock(scope: !4440, file: !565, line: 1085, column: 36)
!4447 = !DILocation(line: 1086, column: 37, scope: !4445)
!4448 = !DILocation(line: 1086, column: 13, scope: !4445)
!4449 = !DILocation(line: 1086, column: 87, scope: !4445)
!4450 = !DILocation(line: 1086, column: 13, scope: !4446)
!4451 = !DILocation(line: 1087, column: 13, scope: !4445)
!4452 = !DILocation(line: 1088, column: 5, scope: !4446)
!4453 = !DILocation(line: 1090, column: 40, scope: !914)
!4454 = !DILocation(line: 1090, column: 11, scope: !914)
!4455 = !DILocation(line: 1090, column: 9, scope: !914)
!4456 = !DILocation(line: 1091, column: 9, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !914, file: !565, line: 1091, column: 9)
!4458 = !DILocation(line: 1091, column: 13, scope: !4457)
!4459 = !DILocation(line: 1091, column: 9, scope: !914)
!4460 = !DILocation(line: 1092, column: 9, scope: !4457)
!4461 = !DILocation(line: 1094, column: 5, scope: !914)
!4462 = !DILocation(line: 1095, column: 9, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !914, file: !565, line: 1095, column: 9)
!4464 = !DILocation(line: 1095, column: 18, scope: !4463)
!4465 = !DILocation(line: 1095, column: 15, scope: !4463)
!4466 = !DILocation(line: 1095, column: 9, scope: !914)
!4467 = !DILocation(line: 1096, column: 20, scope: !4463)
!4468 = !DILocation(line: 1096, column: 9, scope: !4463)
!4469 = !DILocation(line: 1097, column: 5, scope: !914)
!4470 = !DILocation(line: 1097, column: 10, scope: !4471)
!4471 = !DILexicalBlockFile(scope: !939, file: !565, discriminator: 1)
!4472 = !DILocation(line: 1097, column: 20, scope: !939)
!4473 = !DILocation(line: 1097, column: 55, scope: !939)
!4474 = !DILocation(line: 1097, column: 68, scope: !942)
!4475 = !DILocation(line: 1097, column: 84, scope: !942)
!4476 = !DILocation(line: 1097, column: 68, scope: !939)
!4477 = !DILocation(line: 1097, column: 99, scope: !4478)
!4478 = !DILexicalBlockFile(scope: !942, file: !565, discriminator: 2)
!4479 = !DILocation(line: 1097, column: 104, scope: !4480)
!4480 = !DILexicalBlockFile(scope: !941, file: !565, discriminator: 4)
!4481 = !DILocation(line: 1097, column: 114, scope: !941)
!4482 = !DILocation(line: 1097, column: 144, scope: !941)
!4483 = !DILocation(line: 1097, column: 170, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !941, file: !565, line: 1097, column: 167)
!4485 = !DILocation(line: 1097, column: 187, scope: !4484)
!4486 = !DILocation(line: 1097, column: 167, scope: !4484)
!4487 = !DILocation(line: 1097, column: 197, scope: !4484)
!4488 = !DILocation(line: 1097, column: 167, scope: !941)
!4489 = !DILocation(line: 1097, column: 167, scope: !4490)
!4490 = !DILexicalBlockFile(scope: !941, file: !565, discriminator: 5)
!4491 = !DILocation(line: 1097, column: 228, scope: !4492)
!4492 = !DILexicalBlockFile(scope: !4484, file: !565, discriminator: 6)
!4493 = !DILocation(line: 1097, column: 246, scope: !4484)
!4494 = !DILocation(line: 1097, column: 256, scope: !4484)
!4495 = !DILocation(line: 1097, column: 281, scope: !4484)
!4496 = !DILocation(line: 1097, column: 212, scope: !4484)
!4497 = !DILocation(line: 1097, column: 300, scope: !4498)
!4498 = !DILexicalBlockFile(scope: !942, file: !565, discriminator: 7)
!4499 = !DILocation(line: 1097, column: 300, scope: !941)
!4500 = !DILocation(line: 1097, column: 300, scope: !4501)
!4501 = !DILexicalBlockFile(scope: !941, file: !565, discriminator: 8)
!4502 = !DILocation(line: 1097, column: 300, scope: !4503)
!4503 = !DILexicalBlockFile(scope: !941, file: !565, discriminator: 9)
!4504 = !DILocation(line: 1097, column: 313, scope: !4505)
!4505 = !DILexicalBlockFile(scope: !4506, file: !565, discriminator: 10)
!4506 = !DILexicalBlockFile(scope: !914, file: !565, discriminator: 3)
!4507 = !DILocation(line: 1097, column: 313, scope: !939)
!4508 = !DILocation(line: 1097, column: 313, scope: !4509)
!4509 = !DILexicalBlockFile(scope: !939, file: !565, discriminator: 11)
!4510 = !DILocation(line: 1098, column: 12, scope: !914)
!4511 = !DILocation(line: 1098, column: 5, scope: !914)
!4512 = !DILocation(line: 1101, column: 5, scope: !914)
!4513 = !DILocation(line: 1102, column: 9, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !914, file: !565, line: 1102, column: 9)
!4515 = !DILocation(line: 1102, column: 15, scope: !4514)
!4516 = !DILocation(line: 1102, column: 29, scope: !4514)
!4517 = !DILocation(line: 1102, column: 32, scope: !4518)
!4518 = !DILexicalBlockFile(scope: !4514, file: !565, discriminator: 1)
!4519 = !DILocation(line: 1102, column: 41, scope: !4514)
!4520 = !DILocation(line: 1102, column: 38, scope: !4514)
!4521 = !DILocation(line: 1102, column: 9, scope: !914)
!4522 = !DILocation(line: 1103, column: 20, scope: !4514)
!4523 = !DILocation(line: 1103, column: 9, scope: !4514)
!4524 = !DILocation(line: 1104, column: 5, scope: !914)
!4525 = !DILocation(line: 1104, column: 10, scope: !4526)
!4526 = !DILexicalBlockFile(scope: !944, file: !565, discriminator: 1)
!4527 = !DILocation(line: 1104, column: 20, scope: !944)
!4528 = !DILocation(line: 1104, column: 55, scope: !944)
!4529 = !DILocation(line: 1104, column: 68, scope: !947)
!4530 = !DILocation(line: 1104, column: 84, scope: !947)
!4531 = !DILocation(line: 1104, column: 68, scope: !944)
!4532 = !DILocation(line: 1104, column: 99, scope: !4533)
!4533 = !DILexicalBlockFile(scope: !947, file: !565, discriminator: 2)
!4534 = !DILocation(line: 1104, column: 104, scope: !4535)
!4535 = !DILexicalBlockFile(scope: !946, file: !565, discriminator: 4)
!4536 = !DILocation(line: 1104, column: 114, scope: !946)
!4537 = !DILocation(line: 1104, column: 144, scope: !946)
!4538 = !DILocation(line: 1104, column: 170, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !946, file: !565, line: 1104, column: 167)
!4540 = !DILocation(line: 1104, column: 187, scope: !4539)
!4541 = !DILocation(line: 1104, column: 167, scope: !4539)
!4542 = !DILocation(line: 1104, column: 197, scope: !4539)
!4543 = !DILocation(line: 1104, column: 167, scope: !946)
!4544 = !DILocation(line: 1104, column: 167, scope: !4545)
!4545 = !DILexicalBlockFile(scope: !946, file: !565, discriminator: 5)
!4546 = !DILocation(line: 1104, column: 228, scope: !4547)
!4547 = !DILexicalBlockFile(scope: !4539, file: !565, discriminator: 6)
!4548 = !DILocation(line: 1104, column: 246, scope: !4539)
!4549 = !DILocation(line: 1104, column: 256, scope: !4539)
!4550 = !DILocation(line: 1104, column: 281, scope: !4539)
!4551 = !DILocation(line: 1104, column: 212, scope: !4539)
!4552 = !DILocation(line: 1104, column: 300, scope: !4553)
!4553 = !DILexicalBlockFile(scope: !947, file: !565, discriminator: 7)
!4554 = !DILocation(line: 1104, column: 300, scope: !946)
!4555 = !DILocation(line: 1104, column: 300, scope: !4556)
!4556 = !DILexicalBlockFile(scope: !946, file: !565, discriminator: 8)
!4557 = !DILocation(line: 1104, column: 300, scope: !4558)
!4558 = !DILexicalBlockFile(scope: !946, file: !565, discriminator: 9)
!4559 = !DILocation(line: 1104, column: 313, scope: !4505)
!4560 = !DILocation(line: 1104, column: 313, scope: !944)
!4561 = !DILocation(line: 1104, column: 313, scope: !4562)
!4562 = !DILexicalBlockFile(scope: !944, file: !565, discriminator: 11)
!4563 = !DILocation(line: 1105, column: 35, scope: !914)
!4564 = !DILocation(line: 1105, column: 5, scope: !914)
!4565 = !DILocation(line: 1106, column: 5, scope: !914)
!4566 = !DILocation(line: 1107, column: 1, scope: !914)
!4567 = !DILocation(line: 1110, column: 53, scope: !993)
!4568 = !DILocation(line: 1112, column: 9, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !993, file: !565, line: 1112, column: 9)
!4570 = !DILocation(line: 1112, column: 15, scope: !4569)
!4571 = !DILocation(line: 1112, column: 22, scope: !4569)
!4572 = !{!1706, !1465, i64 64}
!4573 = !DILocation(line: 1112, column: 31, scope: !4569)
!4574 = !DILocation(line: 1112, column: 45, scope: !4569)
!4575 = !DILocation(line: 1113, column: 9, scope: !4569)
!4576 = !DILocation(line: 1113, column: 15, scope: !4569)
!4577 = !DILocation(line: 1113, column: 22, scope: !4569)
!4578 = !DILocation(line: 1113, column: 32, scope: !4569)
!4579 = !DILocation(line: 1113, column: 38, scope: !4569)
!4580 = !DILocation(line: 1113, column: 45, scope: !4569)
!4581 = !DILocation(line: 1113, column: 51, scope: !4569)
!4582 = !DILocation(line: 1113, column: 58, scope: !4569)
!4583 = !DILocation(line: 1113, column: 66, scope: !4569)
!4584 = !DILocation(line: 1112, column: 9, scope: !993)
!4585 = !DILocation(line: 1114, column: 9, scope: !4569)
!4586 = !DILocation(line: 1115, column: 5, scope: !993)
!4587 = !DILocation(line: 1115, column: 11, scope: !993)
!4588 = !DILocation(line: 1115, column: 23, scope: !993)
!4589 = !DILocation(line: 1117, column: 58, scope: !993)
!4590 = !DILocation(line: 1117, column: 5, scope: !993)
!4591 = !DILocation(line: 1118, column: 1, scope: !993)
!4592 = !DILocation(line: 842, column: 47, scope: !948)
!4593 = !DILocation(line: 842, column: 64, scope: !948)
!4594 = !DILocation(line: 843, column: 35, scope: !948)
!4595 = !DILocation(line: 845, column: 58, scope: !948)
!4596 = !DILocation(line: 845, column: 18, scope: !948)
!4597 = !DILocation(line: 845, column: 23, scope: !948)
!4598 = !DILocation(line: 845, column: 33, scope: !948)
!4599 = !{!4336, !1465, i64 8}
!4600 = !DILocation(line: 845, column: 5, scope: !948)
!4601 = !DILocation(line: 845, column: 10, scope: !948)
!4602 = !DILocation(line: 845, column: 16, scope: !948)
!4603 = !DILocation(line: 846, column: 22, scope: !948)
!4604 = !DILocation(line: 846, column: 27, scope: !948)
!4605 = !DILocation(line: 846, column: 39, scope: !948)
!4606 = !DILocation(line: 846, column: 37, scope: !948)
!4607 = !DILocation(line: 846, column: 5, scope: !948)
!4608 = !DILocation(line: 846, column: 10, scope: !948)
!4609 = !DILocation(line: 846, column: 20, scope: !948)
!4610 = !DILocation(line: 847, column: 31, scope: !948)
!4611 = !DILocation(line: 847, column: 5, scope: !948)
!4612 = !DILocation(line: 847, column: 10, scope: !948)
!4613 = !DILocation(line: 847, column: 17, scope: !948)
!4614 = !DILocation(line: 847, column: 28, scope: !948)
!4615 = !{!4336, !1500, i64 72}
!4616 = !DILocation(line: 848, column: 5, scope: !948)
!4617 = !DILocation(line: 852, column: 54, scope: !956)
!4618 = !DILocation(line: 853, column: 44, scope: !956)
!4619 = !DILocation(line: 855, column: 5, scope: !956)
!4620 = !DILocation(line: 855, column: 12, scope: !4621)
!4621 = !DILexicalBlockFile(scope: !4622, file: !565, discriminator: 2)
!4622 = !DILexicalBlockFile(scope: !956, file: !565, discriminator: 1)
!4623 = !DILocation(line: 855, column: 17, scope: !956)
!4624 = !DILocation(line: 855, column: 25, scope: !956)
!4625 = !DILocation(line: 855, column: 30, scope: !956)
!4626 = !DILocation(line: 855, column: 23, scope: !956)
!4627 = !DILocation(line: 856, column: 9, scope: !963)
!4628 = !DILocation(line: 856, column: 20, scope: !963)
!4629 = !DILocation(line: 857, column: 9, scope: !963)
!4630 = !DILocation(line: 857, column: 20, scope: !963)
!4631 = !DILocation(line: 859, column: 31, scope: !963)
!4632 = !DILocation(line: 859, column: 36, scope: !963)
!4633 = !DILocation(line: 859, column: 48, scope: !963)
!4634 = !DILocation(line: 859, column: 53, scope: !963)
!4635 = !DILocation(line: 859, column: 46, scope: !963)
!4636 = !DILocation(line: 859, column: 16, scope: !963)
!4637 = !DILocation(line: 861, column: 13, scope: !963)
!4638 = !DILocation(line: 861, column: 18, scope: !963)
!4639 = !DILocation(line: 861, column: 25, scope: !963)
!4640 = !{!1706, !1465, i64 48}
!4641 = !DILocation(line: 861, column: 33, scope: !963)
!4642 = !DILocation(line: 861, column: 38, scope: !963)
!4643 = !DILocation(line: 861, column: 45, scope: !963)
!4644 = !DILocation(line: 861, column: 50, scope: !963)
!4645 = !DILocation(line: 861, column: 57, scope: !963)
!4646 = !DILocation(line: 862, column: 14, scope: !963)
!4647 = !DILocation(line: 862, column: 19, scope: !963)
!4648 = !DILocation(line: 862, column: 26, scope: !963)
!4649 = !DILocation(line: 862, column: 35, scope: !963)
!4650 = !DILocation(line: 862, column: 40, scope: !963)
!4651 = !DILocation(line: 861, column: 11, scope: !963)
!4652 = !DILocation(line: 863, column: 13, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !963, file: !565, line: 863, column: 13)
!4654 = !DILocation(line: 863, column: 15, scope: !4653)
!4655 = !DILocation(line: 863, column: 20, scope: !4653)
!4656 = !DILocation(line: 863, column: 23, scope: !4657)
!4657 = !DILexicalBlockFile(scope: !4653, file: !565, discriminator: 1)
!4658 = !DILocation(line: 863, column: 25, scope: !4653)
!4659 = !DILocation(line: 863, column: 13, scope: !963)
!4660 = !DILocation(line: 864, column: 13, scope: !4653)
!4661 = !DILocation(line: 865, column: 42, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4653, file: !565, line: 865, column: 18)
!4663 = !DILocation(line: 865, column: 47, scope: !4662)
!4664 = !DILocation(line: 865, column: 55, scope: !4662)
!4665 = !DILocation(line: 865, column: 60, scope: !4662)
!4666 = !DILocation(line: 866, column: 42, scope: !4662)
!4667 = !DILocation(line: 866, column: 47, scope: !4662)
!4668 = !DILocation(line: 866, column: 52, scope: !4662)
!4669 = !DILocation(line: 866, column: 60, scope: !4662)
!4670 = !DILocation(line: 865, column: 18, scope: !4662)
!4671 = !DILocation(line: 865, column: 18, scope: !4653)
!4672 = !DILocation(line: 867, column: 13, scope: !4662)
!4673 = !DILocation(line: 868, column: 5, scope: !956)
!4674 = !DILocation(line: 868, column: 5, scope: !4622)
!4675 = !DILocation(line: 869, column: 5, scope: !956)
!4676 = !DILocation(line: 870, column: 1, scope: !956)
!4677 = !DILocation(line: 363, column: 41, scope: !965)
!4678 = !DILocation(line: 364, column: 47, scope: !965)
!4679 = !DILocation(line: 365, column: 48, scope: !965)
!4680 = !DILocation(line: 366, column: 35, scope: !965)
!4681 = !DILocation(line: 366, column: 54, scope: !965)
!4682 = !DILocation(line: 368, column: 5, scope: !965)
!4683 = !DILocation(line: 368, column: 15, scope: !965)
!4684 = !DILocation(line: 368, column: 37, scope: !965)
!4685 = !DILocation(line: 369, column: 5, scope: !965)
!4686 = !DILocation(line: 369, column: 16, scope: !965)
!4687 = !DILocation(line: 370, column: 5, scope: !965)
!4688 = !DILocation(line: 370, column: 17, scope: !965)
!4689 = !DILocation(line: 371, column: 5, scope: !965)
!4690 = !DILocation(line: 371, column: 16, scope: !965)
!4691 = !DILocation(line: 371, column: 23, scope: !965)
!4692 = !DILocation(line: 371, column: 30, scope: !965)
!4693 = !DILocation(line: 373, column: 9, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !965, file: !565, line: 373, column: 9)
!4695 = !DILocation(line: 373, column: 11, scope: !4694)
!4696 = !DILocation(line: 373, column: 9, scope: !965)
!4697 = !DILocation(line: 374, column: 16, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4694, file: !565, line: 373, column: 16)
!4699 = !DILocation(line: 375, column: 17, scope: !4698)
!4700 = !DILocation(line: 375, column: 15, scope: !4698)
!4701 = !DILocation(line: 376, column: 5, scope: !4698)
!4702 = !DILocation(line: 378, column: 17, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4694, file: !565, line: 377, column: 10)
!4704 = !DILocation(line: 378, column: 9, scope: !4703)
!4705 = !DILocation(line: 380, column: 13, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4703, file: !565, line: 378, column: 20)
!4707 = !DILocation(line: 382, column: 20, scope: !4706)
!4708 = !DILocation(line: 383, column: 34, scope: !4706)
!4709 = !DILocation(line: 383, column: 39, scope: !4706)
!4710 = !DILocation(line: 383, column: 51, scope: !4706)
!4711 = !DILocation(line: 383, column: 56, scope: !4706)
!4712 = !DILocation(line: 383, column: 49, scope: !4706)
!4713 = !DILocation(line: 383, column: 19, scope: !4706)
!4714 = !DILocation(line: 384, column: 13, scope: !4706)
!4715 = !DILocation(line: 386, column: 29, scope: !4706)
!4716 = !DILocation(line: 386, column: 13, scope: !4706)
!4717 = !DILocation(line: 388, column: 13, scope: !4706)
!4718 = !DILocation(line: 390, column: 13, scope: !4706)
!4719 = !DILocation(line: 392, column: 29, scope: !4706)
!4720 = !DILocation(line: 392, column: 13, scope: !4706)
!4721 = !DILocation(line: 394, column: 13, scope: !4706)
!4722 = !DILocation(line: 398, column: 9, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !965, file: !565, line: 398, column: 9)
!4724 = !DILocation(line: 398, column: 16, scope: !4723)
!4725 = !DILocation(line: 398, column: 9, scope: !965)
!4726 = !DILocation(line: 399, column: 41, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !565, line: 399, column: 13)
!4728 = distinct !DILexicalBlock(scope: !4723, file: !565, line: 398, column: 36)
!4729 = !DILocation(line: 399, column: 46, scope: !4727)
!4730 = !DILocation(line: 399, column: 13, scope: !4727)
!4731 = !DILocation(line: 400, column: 60, scope: !4727)
!4732 = !DILocation(line: 399, column: 13, scope: !4728)
!4733 = !DILocation(line: 401, column: 13, scope: !4727)
!4734 = !DILocation(line: 402, column: 5, scope: !4728)
!4735 = !DILocation(line: 403, column: 9, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !965, file: !565, line: 403, column: 9)
!4737 = !DILocation(line: 403, column: 16, scope: !4736)
!4738 = !DILocation(line: 403, column: 35, scope: !4736)
!4739 = !DILocation(line: 403, column: 38, scope: !4740)
!4740 = !DILexicalBlockFile(scope: !4736, file: !565, discriminator: 1)
!4741 = !DILocation(line: 403, column: 45, scope: !4736)
!4742 = !DILocation(line: 403, column: 9, scope: !965)
!4743 = !DILocation(line: 404, column: 23, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4736, file: !565, line: 403, column: 65)
!4745 = !DILocation(line: 404, column: 9, scope: !4744)
!4746 = !DILocation(line: 404, column: 14, scope: !4744)
!4747 = !DILocation(line: 404, column: 20, scope: !4744)
!4748 = !DILocation(line: 405, column: 9, scope: !4744)
!4749 = !DILocation(line: 408, column: 26, scope: !965)
!4750 = !DILocation(line: 408, column: 31, scope: !965)
!4751 = !DILocation(line: 408, column: 39, scope: !965)
!4752 = !DILocation(line: 408, column: 44, scope: !965)
!4753 = !DILocation(line: 408, column: 37, scope: !965)
!4754 = !DILocation(line: 408, column: 11, scope: !965)
!4755 = !DILocation(line: 409, column: 11, scope: !965)
!4756 = !DILocation(line: 409, column: 19, scope: !965)
!4757 = !DILocation(line: 409, column: 17, scope: !965)
!4758 = !DILocation(line: 409, column: 9, scope: !965)
!4759 = !DILocation(line: 412, column: 9, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !965, file: !565, line: 412, column: 9)
!4761 = !DILocation(line: 412, column: 14, scope: !4760)
!4762 = !DILocation(line: 412, column: 21, scope: !4760)
!4763 = !DILocation(line: 412, column: 9, scope: !965)
!4764 = !DILocation(line: 413, column: 51, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4760, file: !565, line: 412, column: 36)
!4766 = !DILocation(line: 413, column: 58, scope: !4765)
!4767 = !DILocation(line: 414, column: 39, scope: !4765)
!4768 = !DILocation(line: 414, column: 44, scope: !4765)
!4769 = !DILocation(line: 415, column: 38, scope: !4765)
!4770 = !DILocation(line: 415, column: 43, scope: !4765)
!4771 = !DILocation(line: 415, column: 55, scope: !4765)
!4772 = !DILocation(line: 415, column: 60, scope: !4765)
!4773 = !DILocation(line: 415, column: 53, scope: !4765)
!4774 = !DILocation(line: 416, column: 25, scope: !4765)
!4775 = !DILocation(line: 416, column: 32, scope: !4765)
!4776 = !DILocation(line: 416, column: 37, scope: !4765)
!4777 = !DILocation(line: 413, column: 23, scope: !4765)
!4778 = !DILocation(line: 413, column: 9, scope: !4765)
!4779 = !DILocation(line: 413, column: 14, scope: !4765)
!4780 = !DILocation(line: 413, column: 21, scope: !4765)
!4781 = !DILocation(line: 417, column: 13, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4765, file: !565, line: 417, column: 13)
!4783 = !DILocation(line: 417, column: 18, scope: !4782)
!4784 = !DILocation(line: 417, column: 25, scope: !4782)
!4785 = !DILocation(line: 417, column: 13, scope: !4765)
!4786 = !DILocation(line: 418, column: 13, scope: !4782)
!4787 = !DILocation(line: 419, column: 5, scope: !4765)
!4788 = !DILocation(line: 421, column: 43, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4760, file: !565, line: 421, column: 13)
!4790 = !DILocation(line: 421, column: 48, scope: !4789)
!4791 = !DILocation(line: 421, column: 56, scope: !4789)
!4792 = !DILocation(line: 421, column: 13, scope: !4789)
!4793 = !DILocation(line: 421, column: 63, scope: !4789)
!4794 = !DILocation(line: 422, column: 41, scope: !4789)
!4795 = !DILocation(line: 422, column: 46, scope: !4789)
!4796 = !DILocation(line: 422, column: 54, scope: !4789)
!4797 = !DILocation(line: 422, column: 13, scope: !4789)
!4798 = !DILocation(line: 422, column: 59, scope: !4789)
!4799 = !DILocation(line: 423, column: 44, scope: !4789)
!4800 = !DILocation(line: 423, column: 49, scope: !4789)
!4801 = !DILocation(line: 423, column: 57, scope: !4789)
!4802 = !DILocation(line: 423, column: 13, scope: !4789)
!4803 = !DILocation(line: 421, column: 13, scope: !4760)
!4804 = !DILocation(line: 424, column: 13, scope: !4789)
!4805 = !DILocation(line: 426, column: 9, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !965, file: !565, line: 426, column: 9)
!4807 = !DILocation(line: 426, column: 16, scope: !4806)
!4808 = !DILocation(line: 426, column: 9, scope: !965)
!4809 = !DILocation(line: 427, column: 30, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4806, file: !565, line: 426, column: 36)
!4811 = !DILocation(line: 427, column: 35, scope: !4810)
!4812 = !DILocation(line: 427, column: 9, scope: !4810)
!4813 = !DILocation(line: 428, column: 9, scope: !4810)
!4814 = !DILocation(line: 431, column: 34, scope: !965)
!4815 = !DILocation(line: 431, column: 42, scope: !965)
!4816 = !DILocation(line: 431, column: 47, scope: !965)
!4817 = !DILocation(line: 431, column: 14, scope: !965)
!4818 = !DILocation(line: 431, column: 12, scope: !965)
!4819 = !DILocation(line: 432, column: 9, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !965, file: !565, line: 432, column: 9)
!4821 = !DILocation(line: 432, column: 16, scope: !4820)
!4822 = !DILocation(line: 432, column: 9, scope: !965)
!4823 = !DILocation(line: 433, column: 9, scope: !4820)
!4824 = !DILocation(line: 435, column: 27, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !965, file: !565, line: 435, column: 9)
!4826 = !DILocation(line: 435, column: 37, scope: !4825)
!4827 = !DILocation(line: 435, column: 48, scope: !4825)
!4828 = !DILocation(line: 435, column: 57, scope: !4825)
!4829 = !DILocation(line: 435, column: 74, scope: !4825)
!4830 = !DILocation(line: 435, column: 80, scope: !4825)
!4831 = !DILocation(line: 435, column: 100, scope: !4832)
!4832 = !DILexicalBlockFile(scope: !4825, file: !565, discriminator: 1)
!4833 = !DILocation(line: 435, column: 85, scope: !4825)
!4834 = !DILocation(line: 435, column: 110, scope: !4825)
!4835 = !DILocation(line: 435, column: 119, scope: !4825)
!4836 = !DILocation(line: 435, column: 124, scope: !4825)
!4837 = !DILocation(line: 436, column: 57, scope: !4825)
!4838 = !DILocation(line: 436, column: 39, scope: !4825)
!4839 = !DILocation(line: 436, column: 67, scope: !4825)
!4840 = !DILocation(line: 436, column: 38, scope: !4825)
!4841 = !DILocation(line: 436, column: 35, scope: !4825)
!4842 = !DILocation(line: 436, column: 83, scope: !4825)
!4843 = !DILocation(line: 436, column: 94, scope: !4825)
!4844 = !DILocation(line: 436, column: 103, scope: !4825)
!4845 = !DILocation(line: 436, column: 120, scope: !4825)
!4846 = !DILocation(line: 436, column: 126, scope: !4825)
!4847 = !DILocation(line: 437, column: 47, scope: !4825)
!4848 = !DILocation(line: 437, column: 29, scope: !4825)
!4849 = !DILocation(line: 437, column: 57, scope: !4825)
!4850 = !DILocation(line: 437, column: 28, scope: !4825)
!4851 = !DILocation(line: 437, column: 72, scope: !4825)
!4852 = !DILocation(line: 437, column: 83, scope: !4825)
!4853 = !DILocation(line: 437, column: 92, scope: !4825)
!4854 = !DILocation(line: 437, column: 109, scope: !4825)
!4855 = !DILocation(line: 435, column: 9, scope: !965)
!4856 = !DILocation(line: 438, column: 25, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4825, file: !565, line: 437, column: 116)
!4858 = !DILocation(line: 438, column: 9, scope: !4857)
!4859 = !DILocation(line: 441, column: 9, scope: !4857)
!4860 = !DILocation(line: 444, column: 36, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !965, file: !565, line: 444, column: 9)
!4862 = !DILocation(line: 444, column: 41, scope: !4861)
!4863 = !DILocation(line: 444, column: 49, scope: !4861)
!4864 = !DILocation(line: 444, column: 9, scope: !4861)
!4865 = !DILocation(line: 444, column: 57, scope: !4861)
!4866 = !DILocation(line: 444, column: 9, scope: !965)
!4867 = !DILocation(line: 445, column: 9, scope: !4861)
!4868 = !DILocation(line: 447, column: 51, scope: !965)
!4869 = !DILocation(line: 447, column: 33, scope: !965)
!4870 = !DILocation(line: 447, column: 61, scope: !965)
!4871 = !DILocation(line: 447, column: 32, scope: !965)
!4872 = !DILocation(line: 447, column: 14, scope: !965)
!4873 = !DILocation(line: 447, column: 12, scope: !965)
!4874 = !DILocation(line: 448, column: 9, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !965, file: !565, line: 448, column: 9)
!4876 = !DILocation(line: 448, column: 16, scope: !4875)
!4877 = !DILocation(line: 448, column: 20, scope: !4875)
!4878 = !DILocation(line: 448, column: 24, scope: !4879)
!4879 = !DILexicalBlockFile(scope: !4875, file: !565, discriminator: 1)
!4880 = !DILocation(line: 448, column: 9, scope: !965)
!4881 = !DILocation(line: 449, column: 32, scope: !4875)
!4882 = !DILocation(line: 449, column: 37, scope: !4875)
!4883 = !DILocation(line: 449, column: 49, scope: !4875)
!4884 = !DILocation(line: 449, column: 54, scope: !4875)
!4885 = !DILocation(line: 449, column: 47, scope: !4875)
!4886 = !DILocation(line: 449, column: 16, scope: !4875)
!4887 = !DILocation(line: 449, column: 9, scope: !4875)
!4888 = !DILocation(line: 450, column: 9, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !965, file: !565, line: 450, column: 9)
!4890 = !DILocation(line: 450, column: 16, scope: !4889)
!4891 = !DILocation(line: 450, column: 20, scope: !4889)
!4892 = !DILocation(line: 450, column: 23, scope: !4893)
!4893 = !DILexicalBlockFile(scope: !4889, file: !565, discriminator: 1)
!4894 = !DILocation(line: 450, column: 28, scope: !4889)
!4895 = !DILocation(line: 450, column: 40, scope: !4889)
!4896 = !DILocation(line: 450, column: 38, scope: !4889)
!4897 = !DILocation(line: 450, column: 49, scope: !4889)
!4898 = !DILocation(line: 450, column: 54, scope: !4889)
!4899 = !DILocation(line: 450, column: 47, scope: !4889)
!4900 = !DILocation(line: 450, column: 9, scope: !965)
!4901 = !DILocation(line: 451, column: 9, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4889, file: !565, line: 450, column: 65)
!4903 = !DILocation(line: 452, column: 22, scope: !4902)
!4904 = !DILocation(line: 454, column: 22, scope: !4902)
!4905 = !DILocation(line: 452, column: 9, scope: !4902)
!4906 = !DILocation(line: 455, column: 9, scope: !4902)
!4907 = !DILocation(line: 457, column: 18, scope: !965)
!4908 = !DILocation(line: 457, column: 23, scope: !965)
!4909 = !DILocation(line: 457, column: 35, scope: !965)
!4910 = !DILocation(line: 457, column: 33, scope: !965)
!4911 = !DILocation(line: 457, column: 5, scope: !965)
!4912 = !DILocation(line: 457, column: 10, scope: !965)
!4913 = !DILocation(line: 457, column: 16, scope: !965)
!4914 = !DILocation(line: 458, column: 5, scope: !965)
!4915 = !DILocation(line: 458, column: 10, scope: !4916)
!4916 = !DILexicalBlockFile(scope: !982, file: !565, discriminator: 1)
!4917 = !DILocation(line: 458, column: 20, scope: !982)
!4918 = !DILocation(line: 458, column: 50, scope: !982)
!4919 = !DILocation(line: 458, column: 67, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !982, file: !565, line: 458, column: 64)
!4921 = !DILocation(line: 458, column: 84, scope: !4920)
!4922 = !DILocation(line: 458, column: 64, scope: !4920)
!4923 = !DILocation(line: 458, column: 94, scope: !4920)
!4924 = !DILocation(line: 458, column: 64, scope: !982)
!4925 = !DILocation(line: 458, column: 64, scope: !4926)
!4926 = !DILexicalBlockFile(scope: !982, file: !565, discriminator: 2)
!4927 = !DILocation(line: 458, column: 125, scope: !4928)
!4928 = !DILexicalBlockFile(scope: !4920, file: !565, discriminator: 3)
!4929 = !DILocation(line: 458, column: 143, scope: !4920)
!4930 = !DILocation(line: 458, column: 153, scope: !4920)
!4931 = !DILocation(line: 458, column: 178, scope: !4920)
!4932 = !DILocation(line: 458, column: 109, scope: !4920)
!4933 = !DILocation(line: 458, column: 197, scope: !4934)
!4934 = !DILexicalBlockFile(scope: !965, file: !565, discriminator: 4)
!4935 = !DILocation(line: 458, column: 197, scope: !982)
!4936 = !DILocation(line: 458, column: 197, scope: !4937)
!4937 = !DILexicalBlockFile(scope: !982, file: !565, discriminator: 5)
!4938 = !DILocation(line: 459, column: 5, scope: !965)
!4939 = !DILocation(line: 462, column: 5, scope: !965)
!4940 = !DILocation(line: 462, column: 10, scope: !4941)
!4941 = !DILexicalBlockFile(scope: !984, file: !565, discriminator: 1)
!4942 = !DILocation(line: 462, column: 20, scope: !984)
!4943 = !DILocation(line: 462, column: 51, scope: !984)
!4944 = !DILocation(line: 462, column: 64, scope: !987)
!4945 = !DILocation(line: 462, column: 80, scope: !987)
!4946 = !DILocation(line: 462, column: 64, scope: !984)
!4947 = !DILocation(line: 462, column: 95, scope: !4948)
!4948 = !DILexicalBlockFile(scope: !987, file: !565, discriminator: 2)
!4949 = !DILocation(line: 462, column: 100, scope: !4950)
!4950 = !DILexicalBlockFile(scope: !986, file: !565, discriminator: 4)
!4951 = !DILocation(line: 462, column: 110, scope: !986)
!4952 = !DILocation(line: 462, column: 140, scope: !986)
!4953 = !DILocation(line: 462, column: 166, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !986, file: !565, line: 462, column: 163)
!4955 = !DILocation(line: 462, column: 183, scope: !4954)
!4956 = !DILocation(line: 462, column: 163, scope: !4954)
!4957 = !DILocation(line: 462, column: 193, scope: !4954)
!4958 = !DILocation(line: 462, column: 163, scope: !986)
!4959 = !DILocation(line: 462, column: 163, scope: !4960)
!4960 = !DILexicalBlockFile(scope: !986, file: !565, discriminator: 5)
!4961 = !DILocation(line: 462, column: 224, scope: !4962)
!4962 = !DILexicalBlockFile(scope: !4954, file: !565, discriminator: 6)
!4963 = !DILocation(line: 462, column: 242, scope: !4954)
!4964 = !DILocation(line: 462, column: 252, scope: !4954)
!4965 = !DILocation(line: 462, column: 277, scope: !4954)
!4966 = !DILocation(line: 462, column: 208, scope: !4954)
!4967 = !DILocation(line: 462, column: 296, scope: !4968)
!4968 = !DILexicalBlockFile(scope: !987, file: !565, discriminator: 7)
!4969 = !DILocation(line: 462, column: 296, scope: !986)
!4970 = !DILocation(line: 462, column: 296, scope: !4971)
!4971 = !DILexicalBlockFile(scope: !986, file: !565, discriminator: 8)
!4972 = !DILocation(line: 462, column: 296, scope: !4973)
!4973 = !DILexicalBlockFile(scope: !986, file: !565, discriminator: 9)
!4974 = !DILocation(line: 462, column: 309, scope: !4975)
!4975 = !DILexicalBlockFile(scope: !4976, file: !565, discriminator: 10)
!4976 = !DILexicalBlockFile(scope: !965, file: !565, discriminator: 3)
!4977 = !DILocation(line: 462, column: 309, scope: !984)
!4978 = !DILocation(line: 462, column: 309, scope: !4979)
!4979 = !DILexicalBlockFile(scope: !984, file: !565, discriminator: 11)
!4980 = !DILocation(line: 463, column: 5, scope: !965)
!4981 = !DILocation(line: 464, column: 1, scope: !965)
!4982 = !DILocation(line: 825, column: 57, scope: !988)
!4983 = !DILocation(line: 826, column: 47, scope: !988)
!4984 = !DILocation(line: 828, column: 5, scope: !988)
!4985 = !DILocation(line: 828, column: 16, scope: !988)
!4986 = !DILocation(line: 830, column: 30, scope: !988)
!4987 = !DILocation(line: 830, column: 35, scope: !988)
!4988 = !DILocation(line: 830, column: 47, scope: !988)
!4989 = !DILocation(line: 830, column: 52, scope: !988)
!4990 = !DILocation(line: 830, column: 45, scope: !988)
!4991 = !DILocation(line: 830, column: 15, scope: !988)
!4992 = !DILocation(line: 831, column: 9, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !988, file: !565, line: 831, column: 9)
!4994 = !DILocation(line: 831, column: 21, scope: !4993)
!4995 = !DILocation(line: 831, column: 26, scope: !4993)
!4996 = !DILocation(line: 831, column: 19, scope: !4993)
!4997 = !DILocation(line: 831, column: 38, scope: !4993)
!4998 = !DILocation(line: 831, column: 42, scope: !4993)
!4999 = !DILocation(line: 832, column: 9, scope: !4993)
!5000 = !DILocation(line: 832, column: 55, scope: !4993)
!5001 = !DILocation(line: 832, column: 60, scope: !4993)
!5002 = !DILocation(line: 832, column: 53, scope: !4993)
!5003 = !DILocation(line: 832, column: 19, scope: !4993)
!5004 = !DILocation(line: 831, column: 9, scope: !988)
!5005 = !DILocation(line: 833, column: 29, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4993, file: !565, line: 832, column: 73)
!5007 = !DILocation(line: 833, column: 13, scope: !5006)
!5008 = !DILocation(line: 834, column: 13, scope: !5006)
!5009 = !DILocation(line: 836, column: 12, scope: !988)
!5010 = !DILocation(line: 836, column: 17, scope: !988)
!5011 = !DILocation(line: 836, column: 27, scope: !988)
!5012 = !DILocation(line: 836, column: 32, scope: !988)
!5013 = !DILocation(line: 836, column: 25, scope: !988)
!5014 = !DILocation(line: 836, column: 45, scope: !988)
!5015 = !DILocation(line: 836, column: 50, scope: !988)
!5016 = !DILocation(line: 836, column: 57, scope: !988)
!5017 = !DILocation(line: 836, column: 5, scope: !988)
!5018 = !DILocation(line: 837, column: 25, scope: !988)
!5019 = !DILocation(line: 837, column: 5, scope: !988)
!5020 = !DILocation(line: 837, column: 10, scope: !988)
!5021 = !DILocation(line: 837, column: 22, scope: !988)
!5022 = !DILocation(line: 838, column: 5, scope: !988)
!5023 = !DILocation(line: 839, column: 1, scope: !988)
!5024 = !DILocation(line: 1513, column: 53, scope: !1023)
!5025 = !DILocation(line: 1515, column: 25, scope: !1023)
!5026 = !DILocation(line: 1515, column: 5, scope: !1023)
!5027 = !DILocation(line: 1516, column: 5, scope: !1023)
!5028 = !DILocation(line: 1516, column: 14, scope: !5029)
!5029 = !DILexicalBlockFile(scope: !1030, file: !565, discriminator: 1)
!5030 = !DILocation(line: 1516, column: 20, scope: !1030)
!5031 = !{!5032, !1465, i64 32}
!5032 = !{!"", !1499, i64 0, !1465, i64 16, !1466, i64 24, !1465, i64 32, !1466, i64 40, !1500, i64 48, !1465, i64 56}
!5033 = !DILocation(line: 1516, column: 27, scope: !1030)
!5034 = !DILocation(line: 1516, column: 41, scope: !1030)
!5035 = !DILocation(line: 1516, column: 46, scope: !5036)
!5036 = !DILexicalBlockFile(scope: !1030, file: !565, discriminator: 2)
!5037 = !DILocation(line: 1516, column: 52, scope: !1030)
!5038 = !DILocation(line: 1516, column: 60, scope: !1030)
!5039 = !DILocation(line: 1516, column: 78, scope: !1030)
!5040 = !DILocation(line: 1516, column: 100, scope: !5041)
!5041 = !DILexicalBlockFile(scope: !1030, file: !565, discriminator: 5)
!5042 = !DILocation(line: 1516, column: 106, scope: !1030)
!5043 = !DILocation(line: 1516, column: 97, scope: !1030)
!5044 = !DILocation(line: 1516, column: 14, scope: !1031)
!5045 = !DILocation(line: 1516, column: 116, scope: !5046)
!5046 = !DILexicalBlockFile(scope: !5047, file: !565, discriminator: 6)
!5047 = !DILexicalBlockFile(scope: !1030, file: !565, discriminator: 4)
!5048 = !DILocation(line: 1516, column: 121, scope: !5049)
!5049 = !DILexicalBlockFile(scope: !1029, file: !565, discriminator: 8)
!5050 = !DILocation(line: 1516, column: 131, scope: !1029)
!5051 = !DILocation(line: 1516, column: 161, scope: !1029)
!5052 = !DILocation(line: 1516, column: 167, scope: !1029)
!5053 = !DILocation(line: 1516, column: 184, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !1029, file: !565, line: 1516, column: 181)
!5055 = !DILocation(line: 1516, column: 201, scope: !5054)
!5056 = !DILocation(line: 1516, column: 181, scope: !5054)
!5057 = !DILocation(line: 1516, column: 211, scope: !5054)
!5058 = !DILocation(line: 1516, column: 181, scope: !1029)
!5059 = !DILocation(line: 1516, column: 181, scope: !5060)
!5060 = !DILexicalBlockFile(scope: !1029, file: !565, discriminator: 9)
!5061 = !DILocation(line: 1516, column: 242, scope: !5062)
!5062 = !DILexicalBlockFile(scope: !5054, file: !565, discriminator: 10)
!5063 = !DILocation(line: 1516, column: 260, scope: !5054)
!5064 = !DILocation(line: 1516, column: 270, scope: !5054)
!5065 = !DILocation(line: 1516, column: 295, scope: !5054)
!5066 = !DILocation(line: 1516, column: 226, scope: !5054)
!5067 = !DILocation(line: 1516, column: 314, scope: !5068)
!5068 = !DILexicalBlockFile(scope: !1030, file: !565, discriminator: 11)
!5069 = !DILocation(line: 1516, column: 314, scope: !1029)
!5070 = !DILocation(line: 1516, column: 314, scope: !5071)
!5071 = !DILexicalBlockFile(scope: !1029, file: !565, discriminator: 12)
!5072 = !DILocation(line: 1516, column: 327, scope: !5073)
!5073 = !DILexicalBlockFile(scope: !5074, file: !565, discriminator: 13)
!5074 = !DILexicalBlockFile(scope: !5075, file: !565, discriminator: 7)
!5075 = !DILexicalBlockFile(scope: !1031, file: !565, discriminator: 3)
!5076 = !DILocation(line: 1517, column: 5, scope: !1023)
!5077 = !DILocation(line: 1517, column: 10, scope: !5078)
!5078 = !DILexicalBlockFile(scope: !1033, file: !565, discriminator: 1)
!5079 = !DILocation(line: 1517, column: 20, scope: !1033)
!5080 = !DILocation(line: 1517, column: 51, scope: !1033)
!5081 = !DILocation(line: 1517, column: 57, scope: !1033)
!5082 = !{!5032, !1465, i64 56}
!5083 = !DILocation(line: 1517, column: 70, scope: !1036)
!5084 = !DILocation(line: 1517, column: 86, scope: !1036)
!5085 = !DILocation(line: 1517, column: 70, scope: !1033)
!5086 = !DILocation(line: 1517, column: 101, scope: !5087)
!5087 = !DILexicalBlockFile(scope: !1036, file: !565, discriminator: 2)
!5088 = !DILocation(line: 1517, column: 106, scope: !5089)
!5089 = !DILexicalBlockFile(scope: !1035, file: !565, discriminator: 4)
!5090 = !DILocation(line: 1517, column: 116, scope: !1035)
!5091 = !DILocation(line: 1517, column: 146, scope: !1035)
!5092 = !DILocation(line: 1517, column: 172, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !1035, file: !565, line: 1517, column: 169)
!5094 = !DILocation(line: 1517, column: 189, scope: !5093)
!5095 = !DILocation(line: 1517, column: 169, scope: !5093)
!5096 = !DILocation(line: 1517, column: 199, scope: !5093)
!5097 = !DILocation(line: 1517, column: 169, scope: !1035)
!5098 = !DILocation(line: 1517, column: 169, scope: !5099)
!5099 = !DILexicalBlockFile(scope: !1035, file: !565, discriminator: 5)
!5100 = !DILocation(line: 1517, column: 230, scope: !5101)
!5101 = !DILexicalBlockFile(scope: !5093, file: !565, discriminator: 6)
!5102 = !DILocation(line: 1517, column: 248, scope: !5093)
!5103 = !DILocation(line: 1517, column: 258, scope: !5093)
!5104 = !DILocation(line: 1517, column: 283, scope: !5093)
!5105 = !DILocation(line: 1517, column: 214, scope: !5093)
!5106 = !DILocation(line: 1517, column: 302, scope: !5107)
!5107 = !DILexicalBlockFile(scope: !1036, file: !565, discriminator: 7)
!5108 = !DILocation(line: 1517, column: 302, scope: !1035)
!5109 = !DILocation(line: 1517, column: 302, scope: !5110)
!5110 = !DILexicalBlockFile(scope: !1035, file: !565, discriminator: 8)
!5111 = !DILocation(line: 1517, column: 302, scope: !5112)
!5112 = !DILexicalBlockFile(scope: !1035, file: !565, discriminator: 9)
!5113 = !DILocation(line: 1517, column: 315, scope: !5114)
!5114 = !DILexicalBlockFile(scope: !5115, file: !565, discriminator: 10)
!5115 = !DILexicalBlockFile(scope: !1023, file: !565, discriminator: 3)
!5116 = !DILocation(line: 1517, column: 315, scope: !1033)
!5117 = !DILocation(line: 1518, column: 19, scope: !1023)
!5118 = !DILocation(line: 1518, column: 7, scope: !1023)
!5119 = !DILocation(line: 1518, column: 27, scope: !1023)
!5120 = !DILocation(line: 1518, column: 37, scope: !1023)
!5121 = !DILocation(line: 1518, column: 45, scope: !1023)
!5122 = !DILocation(line: 1518, column: 5, scope: !1023)
!5123 = !DILocation(line: 1519, column: 1, scope: !1023)
!5124 = !DILocation(line: 1503, column: 54, scope: !1037)
!5125 = !DILocation(line: 1504, column: 35, scope: !1037)
!5126 = !DILocation(line: 1504, column: 48, scope: !1037)
!5127 = !DILocation(line: 1506, column: 11, scope: !1048)
!5128 = !DILocation(line: 1506, column: 17, scope: !1048)
!5129 = !DILocation(line: 1506, column: 25, scope: !1048)
!5130 = !DILocation(line: 1506, column: 43, scope: !1048)
!5131 = !DILocation(line: 1506, column: 65, scope: !5132)
!5132 = !DILexicalBlockFile(scope: !1048, file: !565, discriminator: 1)
!5133 = !DILocation(line: 1506, column: 71, scope: !1048)
!5134 = !DILocation(line: 1506, column: 62, scope: !1048)
!5135 = !DILocation(line: 1506, column: 9, scope: !1037)
!5136 = !DILocation(line: 1507, column: 9, scope: !1048)
!5137 = !DILocation(line: 1507, column: 18, scope: !5138)
!5138 = !DILexicalBlockFile(scope: !1046, file: !565, discriminator: 1)
!5139 = !DILocation(line: 1507, column: 24, scope: !1046)
!5140 = !DILocation(line: 1507, column: 18, scope: !1046)
!5141 = !DILocation(line: 1507, column: 18, scope: !1047)
!5142 = !DILocation(line: 1507, column: 34, scope: !5143)
!5143 = !DILexicalBlockFile(scope: !1045, file: !565, discriminator: 2)
!5144 = !DILocation(line: 1507, column: 38, scope: !1045)
!5145 = !DILocation(line: 1507, column: 45, scope: !1045)
!5146 = !DILocation(line: 1507, column: 64, scope: !1045)
!5147 = !DILocation(line: 1507, column: 70, scope: !1045)
!5148 = !DILocation(line: 1507, column: 79, scope: !1045)
!5149 = !DILocation(line: 1507, column: 89, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !1045, file: !565, line: 1507, column: 89)
!5151 = !DILocation(line: 1507, column: 89, scope: !1045)
!5152 = !DILocation(line: 1507, column: 102, scope: !5153)
!5153 = !DILexicalBlockFile(scope: !5150, file: !565, discriminator: 4)
!5154 = !DILocation(line: 1507, column: 95, scope: !5150)
!5155 = !DILocation(line: 1507, column: 108, scope: !5156)
!5156 = !DILexicalBlockFile(scope: !1046, file: !565, discriminator: 5)
!5157 = !DILocation(line: 1507, column: 108, scope: !5158)
!5158 = !DILexicalBlockFile(scope: !5159, file: !565, discriminator: 7)
!5159 = !DILexicalBlockFile(scope: !1046, file: !565, discriminator: 6)
!5160 = !DILocation(line: 1507, column: 108, scope: !1045)
!5161 = !DILocation(line: 1507, column: 110, scope: !5162)
!5162 = !DILexicalBlockFile(scope: !5163, file: !565, discriminator: 8)
!5163 = !DILexicalBlockFile(scope: !1047, file: !565, discriminator: 3)
!5164 = !DILocation(line: 1507, column: 110, scope: !5165)
!5165 = !DILexicalBlockFile(scope: !1047, file: !565, discriminator: 9)
!5166 = !DILocation(line: 1508, column: 5, scope: !1037)
!5167 = !DILocation(line: 1508, column: 14, scope: !5168)
!5168 = !DILexicalBlockFile(scope: !1051, file: !565, discriminator: 1)
!5169 = !DILocation(line: 1508, column: 20, scope: !1051)
!5170 = !DILocation(line: 1508, column: 14, scope: !1051)
!5171 = !DILocation(line: 1508, column: 14, scope: !1052)
!5172 = !DILocation(line: 1508, column: 30, scope: !5173)
!5173 = !DILexicalBlockFile(scope: !1050, file: !565, discriminator: 2)
!5174 = !DILocation(line: 1508, column: 34, scope: !1050)
!5175 = !DILocation(line: 1508, column: 41, scope: !1050)
!5176 = !DILocation(line: 1508, column: 60, scope: !1050)
!5177 = !DILocation(line: 1508, column: 66, scope: !1050)
!5178 = !DILocation(line: 1508, column: 75, scope: !1050)
!5179 = !DILocation(line: 1508, column: 85, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !1050, file: !565, line: 1508, column: 85)
!5181 = !DILocation(line: 1508, column: 85, scope: !1050)
!5182 = !DILocation(line: 1508, column: 98, scope: !5183)
!5183 = !DILexicalBlockFile(scope: !5180, file: !565, discriminator: 4)
!5184 = !DILocation(line: 1508, column: 91, scope: !5180)
!5185 = !DILocation(line: 1508, column: 104, scope: !5186)
!5186 = !DILexicalBlockFile(scope: !1051, file: !565, discriminator: 5)
!5187 = !DILocation(line: 1508, column: 104, scope: !5188)
!5188 = !DILexicalBlockFile(scope: !5189, file: !565, discriminator: 7)
!5189 = !DILexicalBlockFile(scope: !1051, file: !565, discriminator: 6)
!5190 = !DILocation(line: 1508, column: 104, scope: !1050)
!5191 = !DILocation(line: 1508, column: 106, scope: !5192)
!5192 = !DILexicalBlockFile(scope: !5193, file: !565, discriminator: 8)
!5193 = !DILexicalBlockFile(scope: !1052, file: !565, discriminator: 3)
!5194 = !DILocation(line: 1509, column: 5, scope: !1037)
!5195 = !DILocation(line: 1510, column: 1, scope: !1037)
!5196 = !DILocation(line: 1497, column: 31, scope: !1125)
!5197 = !DILocation(line: 1497, column: 47, scope: !1125)
!5198 = !DILocation(line: 1497, column: 63, scope: !1125)
!5199 = !DILocation(line: 1499, column: 5, scope: !1125)
!5200 = !DILocation(line: 1454, column: 34, scope: !1130)
!5201 = !DILocation(line: 1454, column: 50, scope: !1130)
!5202 = !DILocation(line: 1454, column: 66, scope: !1130)
!5203 = !DILocation(line: 1456, column: 5, scope: !1130)
!5204 = !DILocation(line: 1456, column: 34, scope: !1130)
!5205 = !DILocation(line: 1457, column: 5, scope: !1130)
!5206 = !DILocation(line: 1457, column: 15, scope: !1130)
!5207 = !DILocation(line: 1457, column: 24, scope: !1130)
!5208 = !DILocation(line: 1458, column: 5, scope: !1130)
!5209 = !DILocation(line: 1458, column: 11, scope: !1130)
!5210 = !DILocation(line: 1460, column: 45, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !1130, file: !565, line: 1460, column: 9)
!5212 = !DILocation(line: 1460, column: 51, scope: !5211)
!5213 = !DILocation(line: 1460, column: 10, scope: !5211)
!5214 = !DILocation(line: 1460, column: 9, scope: !1130)
!5215 = !DILocation(line: 1462, column: 9, scope: !5211)
!5216 = !DILocation(line: 1464, column: 43, scope: !1130)
!5217 = !DILocation(line: 1464, column: 49, scope: !1130)
!5218 = !DILocation(line: 1464, column: 58, scope: !1130)
!5219 = !DILocation(line: 1464, column: 12, scope: !1130)
!5220 = !DILocation(line: 1464, column: 10, scope: !1130)
!5221 = !DILocation(line: 1465, column: 9, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !1130, file: !565, line: 1465, column: 9)
!5223 = !DILocation(line: 1465, column: 14, scope: !5222)
!5224 = !DILocation(line: 1465, column: 9, scope: !1130)
!5225 = !DILocation(line: 1466, column: 9, scope: !5222)
!5226 = !DILocation(line: 1468, column: 48, scope: !1130)
!5227 = !DILocation(line: 1468, column: 36, scope: !1130)
!5228 = !DILocation(line: 1468, column: 13, scope: !1130)
!5229 = !DILocation(line: 1468, column: 11, scope: !1130)
!5230 = !DILocation(line: 1469, column: 9, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !1130, file: !565, line: 1469, column: 9)
!5232 = !DILocation(line: 1469, column: 15, scope: !5231)
!5233 = !DILocation(line: 1469, column: 9, scope: !1130)
!5234 = !DILocation(line: 1470, column: 9, scope: !5231)
!5235 = !DILocation(line: 1471, column: 12, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !1130, file: !565, line: 1471, column: 9)
!5237 = !DILocation(line: 1471, column: 20, scope: !5236)
!5238 = !DILocation(line: 1471, column: 28, scope: !5236)
!5239 = !DILocation(line: 1471, column: 9, scope: !1130)
!5240 = !DILocation(line: 1472, column: 25, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5236, file: !565, line: 1471, column: 54)
!5242 = !DILocation(line: 1472, column: 9, scope: !5241)
!5243 = !DILocation(line: 1473, column: 9, scope: !5241)
!5244 = !DILocation(line: 1476, column: 44, scope: !1130)
!5245 = !DILocation(line: 1476, column: 20, scope: !1130)
!5246 = !DILocation(line: 1476, column: 52, scope: !1130)
!5247 = !DILocation(line: 1476, column: 5, scope: !1130)
!5248 = !DILocation(line: 1476, column: 11, scope: !1130)
!5249 = !DILocation(line: 1476, column: 17, scope: !1130)
!5250 = !{!5032, !1465, i64 16}
!5251 = !DILocation(line: 1477, column: 20, scope: !1130)
!5252 = !DILocation(line: 1477, column: 5, scope: !1130)
!5253 = !DILocation(line: 1477, column: 11, scope: !1130)
!5254 = !DILocation(line: 1477, column: 18, scope: !1130)
!5255 = !DILocation(line: 1478, column: 21, scope: !1130)
!5256 = !DILocation(line: 1478, column: 31, scope: !1130)
!5257 = !DILocation(line: 1478, column: 40, scope: !1130)
!5258 = !DILocation(line: 1479, column: 5, scope: !1130)
!5259 = !DILocation(line: 1479, column: 11, scope: !1130)
!5260 = !DILocation(line: 1479, column: 23, scope: !1130)
!5261 = !{!5032, !1500, i64 48}
!5262 = !DILocation(line: 1480, column: 44, scope: !1130)
!5263 = !DILocation(line: 1480, column: 20, scope: !1130)
!5264 = !DILocation(line: 1480, column: 5, scope: !1130)
!5265 = !DILocation(line: 1480, column: 11, scope: !1130)
!5266 = !DILocation(line: 1480, column: 18, scope: !1130)
!5267 = !DILocation(line: 1481, column: 9, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !1130, file: !565, line: 1481, column: 9)
!5269 = !DILocation(line: 1481, column: 15, scope: !5268)
!5270 = !DILocation(line: 1481, column: 22, scope: !5268)
!5271 = !DILocation(line: 1481, column: 9, scope: !1130)
!5272 = !DILocation(line: 1482, column: 9, scope: !5268)
!5273 = !DILocation(line: 1483, column: 9, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !1130, file: !565, line: 1483, column: 9)
!5275 = !DILocation(line: 1483, column: 15, scope: !5274)
!5276 = !DILocation(line: 1483, column: 22, scope: !5274)
!5277 = !DILocation(line: 1483, column: 30, scope: !5274)
!5278 = !DILocation(line: 1483, column: 44, scope: !5274)
!5279 = !DILocation(line: 1484, column: 9, scope: !5274)
!5280 = !DILocation(line: 1484, column: 15, scope: !5274)
!5281 = !DILocation(line: 1484, column: 22, scope: !5274)
!5282 = !DILocation(line: 1484, column: 31, scope: !5274)
!5283 = !DILocation(line: 1484, column: 37, scope: !5274)
!5284 = !DILocation(line: 1484, column: 44, scope: !5274)
!5285 = !DILocation(line: 1484, column: 50, scope: !5274)
!5286 = !DILocation(line: 1484, column: 57, scope: !5274)
!5287 = !DILocation(line: 1484, column: 65, scope: !5274)
!5288 = !DILocation(line: 1483, column: 9, scope: !1130)
!5289 = !DILocation(line: 1485, column: 9, scope: !5274)
!5290 = !DILocation(line: 1487, column: 5, scope: !1130)
!5291 = !DILocation(line: 1487, column: 10, scope: !5292)
!5292 = !DILexicalBlockFile(scope: !1140, file: !565, discriminator: 1)
!5293 = !DILocation(line: 1487, column: 20, scope: !1140)
!5294 = !DILocation(line: 1487, column: 50, scope: !1140)
!5295 = !DILocation(line: 1487, column: 66, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !1140, file: !565, line: 1487, column: 63)
!5297 = !DILocation(line: 1487, column: 83, scope: !5296)
!5298 = !DILocation(line: 1487, column: 63, scope: !5296)
!5299 = !DILocation(line: 1487, column: 93, scope: !5296)
!5300 = !DILocation(line: 1487, column: 63, scope: !1140)
!5301 = !DILocation(line: 1487, column: 63, scope: !5302)
!5302 = !DILexicalBlockFile(scope: !1140, file: !565, discriminator: 2)
!5303 = !DILocation(line: 1487, column: 124, scope: !5304)
!5304 = !DILexicalBlockFile(scope: !5296, file: !565, discriminator: 3)
!5305 = !DILocation(line: 1487, column: 142, scope: !5296)
!5306 = !DILocation(line: 1487, column: 152, scope: !5296)
!5307 = !DILocation(line: 1487, column: 177, scope: !5296)
!5308 = !DILocation(line: 1487, column: 108, scope: !5296)
!5309 = !DILocation(line: 1487, column: 196, scope: !5310)
!5310 = !DILexicalBlockFile(scope: !1130, file: !565, discriminator: 4)
!5311 = !DILocation(line: 1487, column: 196, scope: !1140)
!5312 = !DILocation(line: 1487, column: 196, scope: !5313)
!5313 = !DILexicalBlockFile(scope: !1140, file: !565, discriminator: 5)
!5314 = !DILocation(line: 1488, column: 24, scope: !1130)
!5315 = !DILocation(line: 1488, column: 12, scope: !1130)
!5316 = !DILocation(line: 1488, column: 5, scope: !1130)
!5317 = !DILocation(line: 1491, column: 5, scope: !1130)
!5318 = !DILocation(line: 1491, column: 10, scope: !5319)
!5319 = !DILexicalBlockFile(scope: !1142, file: !565, discriminator: 1)
!5320 = !DILocation(line: 1491, column: 20, scope: !1142)
!5321 = !DILocation(line: 1491, column: 51, scope: !1142)
!5322 = !DILocation(line: 1491, column: 38, scope: !1142)
!5323 = !DILocation(line: 1491, column: 62, scope: !1145)
!5324 = !DILocation(line: 1491, column: 78, scope: !1145)
!5325 = !DILocation(line: 1491, column: 62, scope: !1142)
!5326 = !DILocation(line: 1491, column: 93, scope: !5327)
!5327 = !DILexicalBlockFile(scope: !1145, file: !565, discriminator: 2)
!5328 = !DILocation(line: 1491, column: 98, scope: !5329)
!5329 = !DILexicalBlockFile(scope: !1144, file: !565, discriminator: 4)
!5330 = !DILocation(line: 1491, column: 108, scope: !1144)
!5331 = !DILocation(line: 1491, column: 138, scope: !1144)
!5332 = !DILocation(line: 1491, column: 164, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !1144, file: !565, line: 1491, column: 161)
!5334 = !DILocation(line: 1491, column: 181, scope: !5333)
!5335 = !DILocation(line: 1491, column: 161, scope: !5333)
!5336 = !DILocation(line: 1491, column: 191, scope: !5333)
!5337 = !DILocation(line: 1491, column: 161, scope: !1144)
!5338 = !DILocation(line: 1491, column: 161, scope: !5339)
!5339 = !DILexicalBlockFile(scope: !1144, file: !565, discriminator: 5)
!5340 = !DILocation(line: 1491, column: 222, scope: !5341)
!5341 = !DILexicalBlockFile(scope: !5333, file: !565, discriminator: 6)
!5342 = !DILocation(line: 1491, column: 240, scope: !5333)
!5343 = !DILocation(line: 1491, column: 250, scope: !5333)
!5344 = !DILocation(line: 1491, column: 275, scope: !5333)
!5345 = !DILocation(line: 1491, column: 206, scope: !5333)
!5346 = !DILocation(line: 1491, column: 294, scope: !5347)
!5347 = !DILexicalBlockFile(scope: !1145, file: !565, discriminator: 7)
!5348 = !DILocation(line: 1491, column: 294, scope: !1144)
!5349 = !DILocation(line: 1491, column: 294, scope: !5350)
!5350 = !DILexicalBlockFile(scope: !1144, file: !565, discriminator: 8)
!5351 = !DILocation(line: 1491, column: 294, scope: !5352)
!5352 = !DILexicalBlockFile(scope: !1144, file: !565, discriminator: 9)
!5353 = !DILocation(line: 1491, column: 307, scope: !5354)
!5354 = !DILexicalBlockFile(scope: !5355, file: !565, discriminator: 10)
!5355 = !DILexicalBlockFile(scope: !1130, file: !565, discriminator: 3)
!5356 = !DILocation(line: 1491, column: 307, scope: !1142)
!5357 = !DILocation(line: 1491, column: 307, scope: !5358)
!5358 = !DILexicalBlockFile(scope: !1142, file: !565, discriminator: 11)
!5359 = !DILocation(line: 1492, column: 5, scope: !1130)
!5360 = !DILocation(line: 1492, column: 10, scope: !5361)
!5361 = !DILexicalBlockFile(scope: !1147, file: !565, discriminator: 1)
!5362 = !DILocation(line: 1492, column: 20, scope: !1147)
!5363 = !DILocation(line: 1492, column: 51, scope: !1147)
!5364 = !DILocation(line: 1492, column: 63, scope: !1150)
!5365 = !DILocation(line: 1492, column: 79, scope: !1150)
!5366 = !DILocation(line: 1492, column: 63, scope: !1147)
!5367 = !DILocation(line: 1492, column: 94, scope: !5368)
!5368 = !DILexicalBlockFile(scope: !1150, file: !565, discriminator: 2)
!5369 = !DILocation(line: 1492, column: 99, scope: !5370)
!5370 = !DILexicalBlockFile(scope: !1149, file: !565, discriminator: 4)
!5371 = !DILocation(line: 1492, column: 109, scope: !1149)
!5372 = !DILocation(line: 1492, column: 139, scope: !1149)
!5373 = !DILocation(line: 1492, column: 165, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !1149, file: !565, line: 1492, column: 162)
!5375 = !DILocation(line: 1492, column: 182, scope: !5374)
!5376 = !DILocation(line: 1492, column: 162, scope: !5374)
!5377 = !DILocation(line: 1492, column: 192, scope: !5374)
!5378 = !DILocation(line: 1492, column: 162, scope: !1149)
!5379 = !DILocation(line: 1492, column: 162, scope: !5380)
!5380 = !DILexicalBlockFile(scope: !1149, file: !565, discriminator: 5)
!5381 = !DILocation(line: 1492, column: 223, scope: !5382)
!5382 = !DILexicalBlockFile(scope: !5374, file: !565, discriminator: 6)
!5383 = !DILocation(line: 1492, column: 241, scope: !5374)
!5384 = !DILocation(line: 1492, column: 251, scope: !5374)
!5385 = !DILocation(line: 1492, column: 276, scope: !5374)
!5386 = !DILocation(line: 1492, column: 207, scope: !5374)
!5387 = !DILocation(line: 1492, column: 295, scope: !5388)
!5388 = !DILexicalBlockFile(scope: !1150, file: !565, discriminator: 7)
!5389 = !DILocation(line: 1492, column: 295, scope: !1149)
!5390 = !DILocation(line: 1492, column: 295, scope: !5391)
!5391 = !DILexicalBlockFile(scope: !1149, file: !565, discriminator: 8)
!5392 = !DILocation(line: 1492, column: 295, scope: !5393)
!5393 = !DILexicalBlockFile(scope: !1149, file: !565, discriminator: 9)
!5394 = !DILocation(line: 1492, column: 308, scope: !5354)
!5395 = !DILocation(line: 1492, column: 308, scope: !1147)
!5396 = !DILocation(line: 1492, column: 308, scope: !5397)
!5397 = !DILexicalBlockFile(scope: !1147, file: !565, discriminator: 11)
!5398 = !DILocation(line: 1493, column: 5, scope: !1130)
!5399 = !DILocation(line: 1494, column: 1, scope: !1130)
!5400 = !DILocation(line: 1346, column: 50, scope: !1053)
!5401 = !DILocation(line: 1346, column: 66, scope: !1053)
!5402 = !DILocation(line: 1348, column: 5, scope: !1053)
!5403 = !DILocation(line: 1348, column: 15, scope: !1053)
!5404 = !DILocation(line: 1349, column: 5, scope: !1053)
!5405 = !DILocation(line: 1349, column: 16, scope: !1053)
!5406 = !DILocation(line: 1351, column: 28, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !1053, file: !565, line: 1351, column: 9)
!5408 = !DILocation(line: 1351, column: 10, scope: !5407)
!5409 = !DILocation(line: 1351, column: 9, scope: !1053)
!5410 = !DILocation(line: 1352, column: 9, scope: !5407)
!5411 = !DILocation(line: 1354, column: 9, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !1053, file: !565, line: 1354, column: 9)
!5413 = !DILocation(line: 1354, column: 17, scope: !5412)
!5414 = !DILocation(line: 1354, column: 38, scope: !5412)
!5415 = !DILocation(line: 1354, column: 41, scope: !5416)
!5416 = !DILexicalBlockFile(scope: !5412, file: !565, discriminator: 1)
!5417 = !DILocation(line: 1354, column: 49, scope: !5412)
!5418 = !DILocation(line: 1354, column: 9, scope: !1053)
!5419 = !DILocation(line: 1355, column: 14, scope: !5412)
!5420 = !DILocation(line: 1355, column: 9, scope: !5412)
!5421 = !DILocation(line: 1356, column: 31, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5412, file: !565, line: 1356, column: 14)
!5423 = !DILocation(line: 1356, column: 42, scope: !5422)
!5424 = !DILocation(line: 1356, column: 53, scope: !5422)
!5425 = !DILocation(line: 1356, column: 62, scope: !5422)
!5426 = !DILocation(line: 1356, column: 79, scope: !5422)
!5427 = !DILocation(line: 1356, column: 14, scope: !5412)
!5428 = !DILocation(line: 1357, column: 33, scope: !5422)
!5429 = !DILocation(line: 1357, column: 16, scope: !5422)
!5430 = !DILocation(line: 1357, column: 14, scope: !5422)
!5431 = !DILocation(line: 1357, column: 9, scope: !5422)
!5432 = !DILocation(line: 1359, column: 25, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5422, file: !565, line: 1358, column: 10)
!5434 = !DILocation(line: 1359, column: 9, scope: !5433)
!5435 = !DILocation(line: 1360, column: 9, scope: !5433)
!5436 = !DILocation(line: 1363, column: 9, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !1053, file: !565, line: 1363, column: 9)
!5438 = !DILocation(line: 1363, column: 14, scope: !5437)
!5439 = !DILocation(line: 1363, column: 20, scope: !5437)
!5440 = !DILocation(line: 1363, column: 23, scope: !5441)
!5441 = !DILexicalBlockFile(scope: !5437, file: !565, discriminator: 1)
!5442 = !DILocation(line: 1363, column: 9, scope: !1053)
!5443 = !DILocation(line: 1364, column: 9, scope: !5437)
!5444 = !DILocation(line: 1366, column: 33, scope: !1053)
!5445 = !DILocation(line: 1366, column: 47, scope: !1053)
!5446 = !DILocation(line: 1366, column: 12, scope: !1053)
!5447 = !DILocation(line: 1366, column: 5, scope: !1053)
!5448 = !DILocation(line: 1367, column: 1, scope: !1053)
!5449 = !DILocation(line: 1370, column: 54, scope: !1104)
!5450 = !DILocation(line: 1370, column: 70, scope: !1104)
!5451 = !DILocation(line: 1372, column: 5, scope: !1104)
!5452 = !DILocation(line: 1372, column: 15, scope: !1104)
!5453 = !DILocation(line: 1373, column: 5, scope: !1104)
!5454 = !DILocation(line: 1373, column: 16, scope: !1104)
!5455 = !DILocation(line: 1375, column: 28, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !1104, file: !565, line: 1375, column: 9)
!5457 = !DILocation(line: 1375, column: 10, scope: !5456)
!5458 = !DILocation(line: 1375, column: 9, scope: !1104)
!5459 = !DILocation(line: 1376, column: 9, scope: !5456)
!5460 = !DILocation(line: 1378, column: 9, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !1104, file: !565, line: 1378, column: 9)
!5462 = !DILocation(line: 1378, column: 17, scope: !5461)
!5463 = !DILocation(line: 1378, column: 38, scope: !5461)
!5464 = !DILocation(line: 1378, column: 41, scope: !5465)
!5465 = !DILexicalBlockFile(scope: !5461, file: !565, discriminator: 1)
!5466 = !DILocation(line: 1378, column: 49, scope: !5461)
!5467 = !DILocation(line: 1378, column: 9, scope: !1104)
!5468 = !DILocation(line: 1379, column: 14, scope: !5461)
!5469 = !DILocation(line: 1379, column: 9, scope: !5461)
!5470 = !DILocation(line: 1380, column: 31, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5461, file: !565, line: 1380, column: 14)
!5472 = !DILocation(line: 1380, column: 42, scope: !5471)
!5473 = !DILocation(line: 1380, column: 53, scope: !5471)
!5474 = !DILocation(line: 1380, column: 62, scope: !5471)
!5475 = !DILocation(line: 1380, column: 79, scope: !5471)
!5476 = !DILocation(line: 1380, column: 14, scope: !5461)
!5477 = !DILocation(line: 1381, column: 33, scope: !5471)
!5478 = !DILocation(line: 1381, column: 16, scope: !5471)
!5479 = !DILocation(line: 1381, column: 14, scope: !5471)
!5480 = !DILocation(line: 1381, column: 9, scope: !5471)
!5481 = !DILocation(line: 1383, column: 25, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5471, file: !565, line: 1382, column: 10)
!5483 = !DILocation(line: 1383, column: 9, scope: !5482)
!5484 = !DILocation(line: 1384, column: 9, scope: !5482)
!5485 = !DILocation(line: 1387, column: 9, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !1104, file: !565, line: 1387, column: 9)
!5487 = !DILocation(line: 1387, column: 14, scope: !5486)
!5488 = !DILocation(line: 1387, column: 20, scope: !5486)
!5489 = !DILocation(line: 1387, column: 23, scope: !5490)
!5490 = !DILexicalBlockFile(scope: !5486, file: !565, discriminator: 1)
!5491 = !DILocation(line: 1387, column: 9, scope: !1104)
!5492 = !DILocation(line: 1388, column: 9, scope: !5486)
!5493 = !DILocation(line: 1390, column: 33, scope: !1104)
!5494 = !DILocation(line: 1390, column: 51, scope: !1104)
!5495 = !DILocation(line: 1390, column: 12, scope: !1104)
!5496 = !DILocation(line: 1390, column: 5, scope: !1104)
!5497 = !DILocation(line: 1391, column: 1, scope: !1104)
!5498 = !DILocation(line: 1394, column: 55, scope: !1110)
!5499 = !DILocation(line: 1394, column: 71, scope: !1110)
!5500 = !DILocation(line: 1396, column: 5, scope: !1110)
!5501 = !DILocation(line: 1396, column: 15, scope: !1110)
!5502 = !DILocation(line: 1396, column: 42, scope: !1110)
!5503 = !DILocation(line: 1396, column: 46, scope: !1110)
!5504 = !DILocation(line: 1397, column: 5, scope: !1110)
!5505 = !DILocation(line: 1397, column: 16, scope: !1110)
!5506 = !DILocation(line: 1399, column: 28, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !1110, file: !565, line: 1399, column: 9)
!5508 = !DILocation(line: 1399, column: 10, scope: !5507)
!5509 = !DILocation(line: 1399, column: 9, scope: !1110)
!5510 = !DILocation(line: 1400, column: 9, scope: !5507)
!5511 = !DILocation(line: 1402, column: 9, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !1110, file: !565, line: 1402, column: 9)
!5513 = !DILocation(line: 1402, column: 21, scope: !5512)
!5514 = !DILocation(line: 1402, column: 42, scope: !5512)
!5515 = !DILocation(line: 1402, column: 45, scope: !5516)
!5516 = !DILexicalBlockFile(scope: !5512, file: !565, discriminator: 1)
!5517 = !DILocation(line: 1402, column: 57, scope: !5512)
!5518 = !DILocation(line: 1402, column: 9, scope: !1110)
!5519 = !DILocation(line: 1403, column: 18, scope: !5512)
!5520 = !DILocation(line: 1403, column: 9, scope: !5512)
!5521 = !DILocation(line: 1404, column: 31, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5512, file: !565, line: 1404, column: 14)
!5523 = !DILocation(line: 1404, column: 46, scope: !5522)
!5524 = !DILocation(line: 1404, column: 57, scope: !5522)
!5525 = !DILocation(line: 1404, column: 66, scope: !5522)
!5526 = !DILocation(line: 1404, column: 83, scope: !5522)
!5527 = !DILocation(line: 1404, column: 14, scope: !5512)
!5528 = !DILocation(line: 1405, column: 37, scope: !5522)
!5529 = !DILocation(line: 1405, column: 20, scope: !5522)
!5530 = !DILocation(line: 1405, column: 18, scope: !5522)
!5531 = !DILocation(line: 1405, column: 9, scope: !5522)
!5532 = !DILocation(line: 1407, column: 25, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5522, file: !565, line: 1406, column: 10)
!5534 = !DILocation(line: 1407, column: 9, scope: !5533)
!5535 = !DILocation(line: 1408, column: 9, scope: !5533)
!5536 = !DILocation(line: 1411, column: 9, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !1110, file: !565, line: 1411, column: 9)
!5538 = !DILocation(line: 1411, column: 18, scope: !5537)
!5539 = !DILocation(line: 1411, column: 24, scope: !5537)
!5540 = !DILocation(line: 1411, column: 27, scope: !5541)
!5541 = !DILexicalBlockFile(scope: !5537, file: !565, discriminator: 1)
!5542 = !DILocation(line: 1411, column: 9, scope: !1110)
!5543 = !DILocation(line: 1412, column: 9, scope: !5537)
!5544 = !DILocation(line: 1414, column: 30, scope: !1110)
!5545 = !DILocation(line: 1414, column: 44, scope: !1110)
!5546 = !DILocation(line: 1414, column: 9, scope: !1110)
!5547 = !DILocation(line: 1414, column: 7, scope: !1110)
!5548 = !DILocation(line: 1415, column: 9, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !1110, file: !565, line: 1415, column: 9)
!5550 = !DILocation(line: 1415, column: 11, scope: !5549)
!5551 = !DILocation(line: 1415, column: 9, scope: !1110)
!5552 = !DILocation(line: 1416, column: 9, scope: !5549)
!5553 = !DILocation(line: 1418, column: 31, scope: !1110)
!5554 = !DILocation(line: 1418, column: 10, scope: !1110)
!5555 = !DILocation(line: 1418, column: 8, scope: !1110)
!5556 = !DILocation(line: 1419, column: 5, scope: !1110)
!5557 = !DILocation(line: 1419, column: 10, scope: !5558)
!5558 = !DILexicalBlockFile(scope: !1119, file: !565, discriminator: 1)
!5559 = !DILocation(line: 1419, column: 20, scope: !1119)
!5560 = !DILocation(line: 1419, column: 50, scope: !1119)
!5561 = !DILocation(line: 1419, column: 62, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !1119, file: !565, line: 1419, column: 59)
!5563 = !DILocation(line: 1419, column: 79, scope: !5562)
!5564 = !DILocation(line: 1419, column: 59, scope: !5562)
!5565 = !DILocation(line: 1419, column: 89, scope: !5562)
!5566 = !DILocation(line: 1419, column: 59, scope: !1119)
!5567 = !DILocation(line: 1419, column: 59, scope: !5568)
!5568 = !DILexicalBlockFile(scope: !1119, file: !565, discriminator: 2)
!5569 = !DILocation(line: 1419, column: 120, scope: !5570)
!5570 = !DILexicalBlockFile(scope: !5562, file: !565, discriminator: 3)
!5571 = !DILocation(line: 1419, column: 138, scope: !5562)
!5572 = !DILocation(line: 1419, column: 148, scope: !5562)
!5573 = !DILocation(line: 1419, column: 173, scope: !5562)
!5574 = !DILocation(line: 1419, column: 104, scope: !5562)
!5575 = !DILocation(line: 1419, column: 192, scope: !5576)
!5576 = !DILexicalBlockFile(scope: !1110, file: !565, discriminator: 4)
!5577 = !DILocation(line: 1419, column: 192, scope: !1119)
!5578 = !DILocation(line: 1419, column: 192, scope: !5579)
!5579 = !DILexicalBlockFile(scope: !1119, file: !565, discriminator: 5)
!5580 = !DILocation(line: 1420, column: 12, scope: !1110)
!5581 = !DILocation(line: 1420, column: 5, scope: !1110)
!5582 = !DILocation(line: 1421, column: 1, scope: !1110)
!5583 = !DILocation(line: 1424, column: 51, scope: !1120)
!5584 = !DILocation(line: 1426, column: 9, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !1120, file: !565, line: 1426, column: 9)
!5586 = !DILocation(line: 1426, column: 15, scope: !5585)
!5587 = !DILocation(line: 1426, column: 22, scope: !5585)
!5588 = !DILocation(line: 1426, column: 31, scope: !5585)
!5589 = !DILocation(line: 1426, column: 45, scope: !5585)
!5590 = !DILocation(line: 1427, column: 9, scope: !5585)
!5591 = !DILocation(line: 1427, column: 15, scope: !5585)
!5592 = !DILocation(line: 1427, column: 22, scope: !5585)
!5593 = !DILocation(line: 1427, column: 32, scope: !5585)
!5594 = !DILocation(line: 1427, column: 38, scope: !5585)
!5595 = !DILocation(line: 1427, column: 45, scope: !5585)
!5596 = !DILocation(line: 1427, column: 51, scope: !5585)
!5597 = !DILocation(line: 1427, column: 58, scope: !5585)
!5598 = !DILocation(line: 1427, column: 66, scope: !5585)
!5599 = !DILocation(line: 1426, column: 9, scope: !1120)
!5600 = !DILocation(line: 1428, column: 9, scope: !5585)
!5601 = !DILocation(line: 1429, column: 5, scope: !1120)
!5602 = !DILocation(line: 1429, column: 11, scope: !1120)
!5603 = !DILocation(line: 1429, column: 23, scope: !1120)
!5604 = !DILocation(line: 1431, column: 58, scope: !1120)
!5605 = !DILocation(line: 1431, column: 5, scope: !1120)
!5606 = !DILocation(line: 1432, column: 1, scope: !1120)
!5607 = !DILocation(line: 1241, column: 51, scope: !1061)
!5608 = !DILocation(line: 1242, column: 34, scope: !1061)
!5609 = !DILocation(line: 1242, column: 53, scope: !1061)
!5610 = !DILocation(line: 1244, column: 5, scope: !1061)
!5611 = !DILocation(line: 1244, column: 27, scope: !1061)
!5612 = !DILocation(line: 1245, column: 5, scope: !1061)
!5613 = !DILocation(line: 1245, column: 15, scope: !1061)
!5614 = !DILocation(line: 1245, column: 22, scope: !1061)
!5615 = !DILocation(line: 1246, column: 5, scope: !1061)
!5616 = !DILocation(line: 1246, column: 16, scope: !1061)
!5617 = !DILocation(line: 1248, column: 9, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !1061, file: !565, line: 1248, column: 9)
!5619 = !DILocation(line: 1248, column: 18, scope: !5618)
!5620 = !DILocation(line: 1248, column: 9, scope: !1061)
!5621 = !DILocation(line: 1249, column: 16, scope: !5618)
!5622 = !DILocation(line: 1249, column: 9, scope: !5618)
!5623 = !DILocation(line: 1251, column: 32, scope: !1061)
!5624 = !DILocation(line: 1251, column: 5, scope: !1061)
!5625 = !DILocation(line: 1252, column: 9, scope: !1061)
!5626 = !DILocation(line: 1252, column: 16, scope: !1061)
!5627 = !DILocation(line: 1253, column: 10, scope: !1061)
!5628 = !DILocation(line: 1255, column: 5, scope: !1061)
!5629 = !DILocation(line: 1256, column: 9, scope: !1073)
!5630 = !DILocation(line: 1256, column: 13, scope: !1073)
!5631 = !DILocation(line: 1258, column: 13, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !1073, file: !565, line: 1258, column: 13)
!5633 = !DILocation(line: 1258, column: 22, scope: !5632)
!5634 = !DILocation(line: 1258, column: 13, scope: !1073)
!5635 = !DILocation(line: 1259, column: 47, scope: !5632)
!5636 = !DILocation(line: 1259, column: 53, scope: !5632)
!5637 = !DILocation(line: 1260, column: 37, scope: !5632)
!5638 = !DILocation(line: 1259, column: 20, scope: !5632)
!5639 = !DILocation(line: 1259, column: 18, scope: !5632)
!5640 = !DILocation(line: 1259, column: 13, scope: !5632)
!5641 = !DILocation(line: 1262, column: 47, scope: !5632)
!5642 = !DILocation(line: 1262, column: 53, scope: !5632)
!5643 = !DILocation(line: 1263, column: 37, scope: !5632)
!5644 = !DILocation(line: 1263, column: 50, scope: !5632)
!5645 = !DILocation(line: 1262, column: 20, scope: !5632)
!5646 = !DILocation(line: 1262, column: 18, scope: !5632)
!5647 = !DILocation(line: 1264, column: 13, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !1073, file: !565, line: 1264, column: 13)
!5649 = !DILocation(line: 1264, column: 18, scope: !5648)
!5650 = !DILocation(line: 1264, column: 13, scope: !1073)
!5651 = !DILocation(line: 1265, column: 13, scope: !5648)
!5652 = !DILocation(line: 1267, column: 31, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !1073, file: !565, line: 1267, column: 13)
!5654 = !DILocation(line: 1267, column: 39, scope: !5653)
!5655 = !DILocation(line: 1267, column: 50, scope: !5653)
!5656 = !DILocation(line: 1267, column: 59, scope: !5653)
!5657 = !DILocation(line: 1267, column: 76, scope: !5653)
!5658 = !DILocation(line: 1267, column: 13, scope: !1073)
!5659 = !DILocation(line: 1268, column: 26, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5653, file: !565, line: 1267, column: 83)
!5661 = !DILocation(line: 1271, column: 26, scope: !5660)
!5662 = !DILocation(line: 1271, column: 32, scope: !5660)
!5663 = !DILocation(line: 1271, column: 41, scope: !5660)
!5664 = !DILocation(line: 1268, column: 13, scope: !5660)
!5665 = !DILocation(line: 1272, column: 13, scope: !5660)
!5666 = !DILocation(line: 1275, column: 53, scope: !1073)
!5667 = !DILocation(line: 1275, column: 38, scope: !1073)
!5668 = !DILocation(line: 1275, column: 61, scope: !1073)
!5669 = !DILocation(line: 1275, column: 71, scope: !1073)
!5670 = !DILocation(line: 1275, column: 19, scope: !1073)
!5671 = !DILocation(line: 1277, column: 13, scope: !1078)
!5672 = !DILocation(line: 1277, column: 19, scope: !1078)
!5673 = !DILocation(line: 1277, column: 31, scope: !1078)
!5674 = !DILocation(line: 1277, column: 13, scope: !1073)
!5675 = !DILocation(line: 1278, column: 13, scope: !1077)
!5676 = !DILocation(line: 1278, column: 23, scope: !1077)
!5677 = !DILocation(line: 1279, column: 13, scope: !1077)
!5678 = !DILocation(line: 1279, column: 19, scope: !1077)
!5679 = !DILocation(line: 1281, column: 48, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !1077, file: !565, line: 1281, column: 17)
!5681 = !DILocation(line: 1281, column: 33, scope: !5680)
!5682 = !DILocation(line: 1281, column: 56, scope: !5680)
!5683 = !DILocation(line: 1281, column: 102, scope: !5680)
!5684 = !DILocation(line: 1281, column: 108, scope: !5680)
!5685 = !DILocation(line: 1281, column: 100, scope: !5680)
!5686 = !DILocation(line: 1281, column: 66, scope: !5680)
!5687 = !DILocation(line: 1281, column: 17, scope: !1077)
!5688 = !DILocation(line: 1282, column: 17, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5680, file: !565, line: 1281, column: 121)
!5690 = !DILocation(line: 1283, column: 17, scope: !5689)
!5691 = !DILocation(line: 1285, column: 52, scope: !1077)
!5692 = !DILocation(line: 1285, column: 37, scope: !1077)
!5693 = !DILocation(line: 1285, column: 60, scope: !1077)
!5694 = !DILocation(line: 1285, column: 72, scope: !1077)
!5695 = !DILocation(line: 1285, column: 78, scope: !1077)
!5696 = !DILocation(line: 1285, column: 70, scope: !1077)
!5697 = !DILocation(line: 1285, column: 19, scope: !1077)
!5698 = !DILocation(line: 1286, column: 57, scope: !1077)
!5699 = !DILocation(line: 1286, column: 19, scope: !1077)
!5700 = !DILocation(line: 1286, column: 17, scope: !1077)
!5701 = !DILocation(line: 1287, column: 17, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !1077, file: !565, line: 1287, column: 17)
!5703 = !DILocation(line: 1287, column: 21, scope: !5702)
!5704 = !DILocation(line: 1287, column: 17, scope: !1077)
!5705 = !DILocation(line: 1288, column: 17, scope: !5702)
!5706 = !DILocation(line: 1289, column: 58, scope: !1077)
!5707 = !DILocation(line: 1289, column: 40, scope: !1077)
!5708 = !DILocation(line: 1289, column: 65, scope: !1077)
!5709 = !DILocation(line: 1289, column: 38, scope: !1077)
!5710 = !DILocation(line: 1289, column: 21, scope: !1077)
!5711 = !DILocation(line: 1290, column: 20, scope: !1077)
!5712 = !DILocation(line: 1290, column: 29, scope: !1077)
!5713 = !DILocation(line: 1290, column: 35, scope: !1077)
!5714 = !DILocation(line: 1290, column: 13, scope: !1077)
!5715 = !DILocation(line: 1290, column: 44, scope: !1077)
!5716 = !DILocation(line: 1290, column: 50, scope: !1077)
!5717 = !DILocation(line: 1291, column: 20, scope: !1077)
!5718 = !DILocation(line: 1291, column: 30, scope: !1077)
!5719 = !DILocation(line: 1291, column: 36, scope: !1077)
!5720 = !DILocation(line: 1291, column: 28, scope: !1077)
!5721 = !DILocation(line: 1292, column: 56, scope: !1077)
!5722 = !DILocation(line: 1292, column: 38, scope: !1077)
!5723 = !DILocation(line: 1292, column: 64, scope: !1077)
!5724 = !DILocation(line: 1292, column: 36, scope: !1077)
!5725 = !DILocation(line: 1293, column: 52, scope: !1077)
!5726 = !DILocation(line: 1293, column: 37, scope: !1077)
!5727 = !DILocation(line: 1293, column: 60, scope: !1077)
!5728 = !DILocation(line: 1291, column: 13, scope: !1077)
!5729 = !DILocation(line: 1294, column: 13, scope: !1077)
!5730 = !DILocation(line: 1294, column: 18, scope: !5731)
!5731 = !DILexicalBlockFile(scope: !1081, file: !565, discriminator: 1)
!5732 = !DILocation(line: 1294, column: 28, scope: !1081)
!5733 = !DILocation(line: 1294, column: 58, scope: !1081)
!5734 = !DILocation(line: 1294, column: 73, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !1081, file: !565, line: 1294, column: 70)
!5736 = !DILocation(line: 1294, column: 90, scope: !5735)
!5737 = !DILocation(line: 1294, column: 70, scope: !5735)
!5738 = !DILocation(line: 1294, column: 100, scope: !5735)
!5739 = !DILocation(line: 1294, column: 70, scope: !1081)
!5740 = !DILocation(line: 1294, column: 70, scope: !5741)
!5741 = !DILexicalBlockFile(scope: !1081, file: !565, discriminator: 2)
!5742 = !DILocation(line: 1294, column: 131, scope: !5743)
!5743 = !DILexicalBlockFile(scope: !5735, file: !565, discriminator: 3)
!5744 = !DILocation(line: 1294, column: 149, scope: !5735)
!5745 = !DILocation(line: 1294, column: 159, scope: !5735)
!5746 = !DILocation(line: 1294, column: 184, scope: !5735)
!5747 = !DILocation(line: 1294, column: 115, scope: !5735)
!5748 = !DILocation(line: 1294, column: 203, scope: !5749)
!5749 = !DILexicalBlockFile(scope: !1077, file: !565, discriminator: 4)
!5750 = !DILocation(line: 1294, column: 203, scope: !1081)
!5751 = !DILocation(line: 1294, column: 203, scope: !5752)
!5752 = !DILexicalBlockFile(scope: !1081, file: !565, discriminator: 5)
!5753 = !DILocation(line: 1295, column: 20, scope: !1077)
!5754 = !DILocation(line: 1295, column: 18, scope: !1077)
!5755 = !DILocation(line: 1296, column: 13, scope: !1077)
!5756 = !DILocation(line: 1296, column: 19, scope: !1077)
!5757 = !DILocation(line: 1296, column: 31, scope: !1077)
!5758 = !DILocation(line: 1297, column: 9, scope: !1078)
!5759 = !DILocation(line: 1297, column: 9, scope: !5760)
!5760 = !DILexicalBlockFile(scope: !1078, file: !565, discriminator: 1)
!5761 = !DILocation(line: 1297, column: 9, scope: !1077)
!5762 = !DILocation(line: 1299, column: 48, scope: !1073)
!5763 = !DILocation(line: 1299, column: 33, scope: !1073)
!5764 = !DILocation(line: 1299, column: 56, scope: !1073)
!5765 = !DILocation(line: 1299, column: 15, scope: !1073)
!5766 = !DILocation(line: 1300, column: 77, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !1073, file: !565, line: 1300, column: 13)
!5768 = !DILocation(line: 1300, column: 59, scope: !5767)
!5769 = !DILocation(line: 1300, column: 85, scope: !5767)
!5770 = !DILocation(line: 1300, column: 57, scope: !5767)
!5771 = !DILocation(line: 1301, column: 36, scope: !5767)
!5772 = !DILocation(line: 1300, column: 13, scope: !5767)
!5773 = !DILocation(line: 1301, column: 43, scope: !5767)
!5774 = !DILocation(line: 1300, column: 13, scope: !1073)
!5775 = !DILocation(line: 1302, column: 13, scope: !5767)
!5776 = !DILocation(line: 1304, column: 13, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !1073, file: !565, line: 1304, column: 13)
!5778 = !DILocation(line: 1304, column: 19, scope: !5777)
!5779 = !DILocation(line: 1304, column: 23, scope: !5777)
!5780 = !DILocation(line: 1305, column: 60, scope: !5777)
!5781 = !DILocation(line: 1305, column: 25, scope: !5777)
!5782 = !DILocation(line: 1304, column: 26, scope: !5777)
!5783 = !DILocation(line: 1304, column: 13, scope: !1073)
!5784 = !DILocation(line: 1306, column: 13, scope: !5777)
!5785 = !DILocation(line: 1308, column: 13, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !1073, file: !565, line: 1308, column: 13)
!5787 = !DILocation(line: 1308, column: 23, scope: !5786)
!5788 = !DILocation(line: 1308, column: 26, scope: !5789)
!5789 = !DILexicalBlockFile(scope: !5786, file: !565, discriminator: 1)
!5790 = !DILocation(line: 1308, column: 35, scope: !5786)
!5791 = !DILocation(line: 1308, column: 13, scope: !1073)
!5792 = !DILocation(line: 1309, column: 21, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5794, file: !565, line: 1309, column: 17)
!5794 = distinct !DILexicalBlock(scope: !5786, file: !565, line: 1308, column: 40)
!5795 = !DILocation(line: 1309, column: 33, scope: !5793)
!5796 = !DILocation(line: 1309, column: 27, scope: !5793)
!5797 = !DILocation(line: 1309, column: 43, scope: !5793)
!5798 = !DILocation(line: 1310, column: 41, scope: !5793)
!5799 = !DILocation(line: 1310, column: 47, scope: !5793)
!5800 = !DILocation(line: 1310, column: 55, scope: !5793)
!5801 = !DILocation(line: 1310, column: 61, scope: !5793)
!5802 = !DILocation(line: 1311, column: 35, scope: !5793)
!5803 = !DILocation(line: 1311, column: 41, scope: !5793)
!5804 = !DILocation(line: 1310, column: 17, scope: !5793)
!5805 = !DILocation(line: 1309, column: 17, scope: !5794)
!5806 = !DILocation(line: 1312, column: 17, scope: !5793)
!5807 = !DILocation(line: 1313, column: 9, scope: !5794)
!5808 = !DILocation(line: 1315, column: 17, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !1073, file: !565, line: 1315, column: 13)
!5810 = !DILocation(line: 1315, column: 29, scope: !5809)
!5811 = !DILocation(line: 1315, column: 23, scope: !5809)
!5812 = !DILocation(line: 1315, column: 13, scope: !1073)
!5813 = !DILocation(line: 1316, column: 77, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5815, file: !565, line: 1316, column: 17)
!5815 = distinct !DILexicalBlock(scope: !5809, file: !565, line: 1315, column: 40)
!5816 = !DILocation(line: 1316, column: 41, scope: !5814)
!5817 = !DILocation(line: 1316, column: 17, scope: !5814)
!5818 = !DILocation(line: 1317, column: 46, scope: !5814)
!5819 = !DILocation(line: 1316, column: 17, scope: !5815)
!5820 = !DILocation(line: 1318, column: 17, scope: !5814)
!5821 = !DILocation(line: 1319, column: 9, scope: !5815)
!5822 = !DILocation(line: 1321, column: 9, scope: !1073)
!5823 = !DILocation(line: 1321, column: 14, scope: !5824)
!5824 = !DILexicalBlockFile(scope: !1083, file: !565, discriminator: 1)
!5825 = !DILocation(line: 1321, column: 24, scope: !1083)
!5826 = !DILocation(line: 1321, column: 54, scope: !1083)
!5827 = !DILocation(line: 1321, column: 69, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !1083, file: !565, line: 1321, column: 66)
!5829 = !DILocation(line: 1321, column: 86, scope: !5828)
!5830 = !DILocation(line: 1321, column: 66, scope: !5828)
!5831 = !DILocation(line: 1321, column: 96, scope: !5828)
!5832 = !DILocation(line: 1321, column: 66, scope: !1083)
!5833 = !DILocation(line: 1321, column: 66, scope: !5834)
!5834 = !DILexicalBlockFile(scope: !1083, file: !565, discriminator: 2)
!5835 = !DILocation(line: 1321, column: 127, scope: !5836)
!5836 = !DILexicalBlockFile(scope: !5828, file: !565, discriminator: 3)
!5837 = !DILocation(line: 1321, column: 145, scope: !5828)
!5838 = !DILocation(line: 1321, column: 155, scope: !5828)
!5839 = !DILocation(line: 1321, column: 180, scope: !5828)
!5840 = !DILocation(line: 1321, column: 111, scope: !5828)
!5841 = !DILocation(line: 1321, column: 199, scope: !5842)
!5842 = !DILexicalBlockFile(scope: !1073, file: !565, discriminator: 4)
!5843 = !DILocation(line: 1321, column: 199, scope: !1083)
!5844 = !DILocation(line: 1321, column: 199, scope: !5845)
!5845 = !DILexicalBlockFile(scope: !1083, file: !565, discriminator: 5)
!5846 = !DILocation(line: 1322, column: 14, scope: !1073)
!5847 = !DILocation(line: 1324, column: 13, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !1073, file: !565, line: 1324, column: 13)
!5849 = !DILocation(line: 1324, column: 22, scope: !5848)
!5850 = !DILocation(line: 1324, column: 26, scope: !5848)
!5851 = !DILocation(line: 1324, column: 33, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !5848, file: !565, discriminator: 1)
!5853 = !DILocation(line: 1324, column: 40, scope: !5848)
!5854 = !{!4336, !1500, i64 64}
!5855 = !DILocation(line: 1324, column: 44, scope: !5848)
!5856 = !DILocation(line: 1324, column: 49, scope: !5848)
!5857 = !DILocation(line: 1324, column: 52, scope: !5858)
!5858 = !DILexicalBlockFile(scope: !5848, file: !565, discriminator: 2)
!5859 = !DILocation(line: 1324, column: 58, scope: !5848)
!5860 = !DILocation(line: 1324, column: 13, scope: !1073)
!5861 = !DILocation(line: 1325, column: 13, scope: !5848)
!5862 = !DILocation(line: 1327, column: 18, scope: !1073)
!5863 = !DILocation(line: 1328, column: 5, scope: !1074)
!5864 = !DILocation(line: 1328, column: 5, scope: !5865)
!5865 = !DILexicalBlockFile(scope: !1074, file: !565, discriminator: 1)
!5866 = !DILocation(line: 1255, column: 5, scope: !1074)
!5867 = !DILocation(line: 1330, column: 40, scope: !1061)
!5868 = !DILocation(line: 1330, column: 11, scope: !1061)
!5869 = !DILocation(line: 1330, column: 9, scope: !1061)
!5870 = !DILocation(line: 1331, column: 9, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !1061, file: !565, line: 1331, column: 9)
!5872 = !DILocation(line: 1331, column: 13, scope: !5871)
!5873 = !DILocation(line: 1331, column: 9, scope: !1061)
!5874 = !DILocation(line: 1332, column: 9, scope: !5871)
!5875 = !DILocation(line: 1334, column: 5, scope: !1061)
!5876 = !DILocation(line: 1334, column: 10, scope: !5877)
!5877 = !DILexicalBlockFile(scope: !1085, file: !565, discriminator: 1)
!5878 = !DILocation(line: 1334, column: 20, scope: !1085)
!5879 = !DILocation(line: 1334, column: 51, scope: !1085)
!5880 = !DILocation(line: 1334, column: 62, scope: !1088)
!5881 = !DILocation(line: 1334, column: 78, scope: !1088)
!5882 = !DILocation(line: 1334, column: 62, scope: !1085)
!5883 = !DILocation(line: 1334, column: 93, scope: !5884)
!5884 = !DILexicalBlockFile(scope: !1088, file: !565, discriminator: 2)
!5885 = !DILocation(line: 1334, column: 98, scope: !5886)
!5886 = !DILexicalBlockFile(scope: !1087, file: !565, discriminator: 4)
!5887 = !DILocation(line: 1334, column: 108, scope: !1087)
!5888 = !DILocation(line: 1334, column: 138, scope: !1087)
!5889 = !DILocation(line: 1334, column: 164, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !1087, file: !565, line: 1334, column: 161)
!5891 = !DILocation(line: 1334, column: 181, scope: !5890)
!5892 = !DILocation(line: 1334, column: 161, scope: !5890)
!5893 = !DILocation(line: 1334, column: 191, scope: !5890)
!5894 = !DILocation(line: 1334, column: 161, scope: !1087)
!5895 = !DILocation(line: 1334, column: 161, scope: !5896)
!5896 = !DILexicalBlockFile(scope: !1087, file: !565, discriminator: 5)
!5897 = !DILocation(line: 1334, column: 222, scope: !5898)
!5898 = !DILexicalBlockFile(scope: !5890, file: !565, discriminator: 6)
!5899 = !DILocation(line: 1334, column: 240, scope: !5890)
!5900 = !DILocation(line: 1334, column: 250, scope: !5890)
!5901 = !DILocation(line: 1334, column: 275, scope: !5890)
!5902 = !DILocation(line: 1334, column: 206, scope: !5890)
!5903 = !DILocation(line: 1334, column: 294, scope: !5904)
!5904 = !DILexicalBlockFile(scope: !1088, file: !565, discriminator: 7)
!5905 = !DILocation(line: 1334, column: 294, scope: !1087)
!5906 = !DILocation(line: 1334, column: 294, scope: !5907)
!5907 = !DILexicalBlockFile(scope: !1087, file: !565, discriminator: 8)
!5908 = !DILocation(line: 1334, column: 294, scope: !5909)
!5909 = !DILexicalBlockFile(scope: !1087, file: !565, discriminator: 9)
!5910 = !DILocation(line: 1334, column: 307, scope: !5911)
!5911 = !DILexicalBlockFile(scope: !5912, file: !565, discriminator: 10)
!5912 = !DILexicalBlockFile(scope: !1061, file: !565, discriminator: 3)
!5913 = !DILocation(line: 1334, column: 307, scope: !1085)
!5914 = !DILocation(line: 1334, column: 307, scope: !5915)
!5915 = !DILexicalBlockFile(scope: !1085, file: !565, discriminator: 11)
!5916 = !DILocation(line: 1335, column: 5, scope: !1061)
!5917 = !DILocation(line: 1335, column: 10, scope: !5918)
!5918 = !DILexicalBlockFile(scope: !1090, file: !565, discriminator: 1)
!5919 = !DILocation(line: 1335, column: 20, scope: !1090)
!5920 = !DILocation(line: 1335, column: 55, scope: !1090)
!5921 = !DILocation(line: 1335, column: 68, scope: !1093)
!5922 = !DILocation(line: 1335, column: 84, scope: !1093)
!5923 = !DILocation(line: 1335, column: 68, scope: !1090)
!5924 = !DILocation(line: 1335, column: 99, scope: !5925)
!5925 = !DILexicalBlockFile(scope: !1093, file: !565, discriminator: 2)
!5926 = !DILocation(line: 1335, column: 104, scope: !5927)
!5927 = !DILexicalBlockFile(scope: !1092, file: !565, discriminator: 4)
!5928 = !DILocation(line: 1335, column: 114, scope: !1092)
!5929 = !DILocation(line: 1335, column: 144, scope: !1092)
!5930 = !DILocation(line: 1335, column: 170, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !1092, file: !565, line: 1335, column: 167)
!5932 = !DILocation(line: 1335, column: 187, scope: !5931)
!5933 = !DILocation(line: 1335, column: 167, scope: !5931)
!5934 = !DILocation(line: 1335, column: 197, scope: !5931)
!5935 = !DILocation(line: 1335, column: 167, scope: !1092)
!5936 = !DILocation(line: 1335, column: 167, scope: !5937)
!5937 = !DILexicalBlockFile(scope: !1092, file: !565, discriminator: 5)
!5938 = !DILocation(line: 1335, column: 228, scope: !5939)
!5939 = !DILexicalBlockFile(scope: !5931, file: !565, discriminator: 6)
!5940 = !DILocation(line: 1335, column: 246, scope: !5931)
!5941 = !DILocation(line: 1335, column: 256, scope: !5931)
!5942 = !DILocation(line: 1335, column: 281, scope: !5931)
!5943 = !DILocation(line: 1335, column: 212, scope: !5931)
!5944 = !DILocation(line: 1335, column: 300, scope: !5945)
!5945 = !DILexicalBlockFile(scope: !1093, file: !565, discriminator: 7)
!5946 = !DILocation(line: 1335, column: 300, scope: !1092)
!5947 = !DILocation(line: 1335, column: 300, scope: !5948)
!5948 = !DILexicalBlockFile(scope: !1092, file: !565, discriminator: 8)
!5949 = !DILocation(line: 1335, column: 300, scope: !5950)
!5950 = !DILexicalBlockFile(scope: !1092, file: !565, discriminator: 9)
!5951 = !DILocation(line: 1335, column: 313, scope: !5911)
!5952 = !DILocation(line: 1335, column: 313, scope: !1090)
!5953 = !DILocation(line: 1335, column: 313, scope: !5954)
!5954 = !DILexicalBlockFile(scope: !1090, file: !565, discriminator: 11)
!5955 = !DILocation(line: 1336, column: 12, scope: !1061)
!5956 = !DILocation(line: 1336, column: 5, scope: !1061)
!5957 = !DILocation(line: 1339, column: 5, scope: !1061)
!5958 = !DILocation(line: 1339, column: 10, scope: !5959)
!5959 = !DILexicalBlockFile(scope: !1095, file: !565, discriminator: 1)
!5960 = !DILocation(line: 1339, column: 20, scope: !1095)
!5961 = !DILocation(line: 1339, column: 51, scope: !1095)
!5962 = !DILocation(line: 1339, column: 62, scope: !1098)
!5963 = !DILocation(line: 1339, column: 78, scope: !1098)
!5964 = !DILocation(line: 1339, column: 62, scope: !1095)
!5965 = !DILocation(line: 1339, column: 93, scope: !5966)
!5966 = !DILexicalBlockFile(scope: !1098, file: !565, discriminator: 2)
!5967 = !DILocation(line: 1339, column: 98, scope: !5968)
!5968 = !DILexicalBlockFile(scope: !1097, file: !565, discriminator: 4)
!5969 = !DILocation(line: 1339, column: 108, scope: !1097)
!5970 = !DILocation(line: 1339, column: 138, scope: !1097)
!5971 = !DILocation(line: 1339, column: 164, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !1097, file: !565, line: 1339, column: 161)
!5973 = !DILocation(line: 1339, column: 181, scope: !5972)
!5974 = !DILocation(line: 1339, column: 161, scope: !5972)
!5975 = !DILocation(line: 1339, column: 191, scope: !5972)
!5976 = !DILocation(line: 1339, column: 161, scope: !1097)
!5977 = !DILocation(line: 1339, column: 161, scope: !5978)
!5978 = !DILexicalBlockFile(scope: !1097, file: !565, discriminator: 5)
!5979 = !DILocation(line: 1339, column: 222, scope: !5980)
!5980 = !DILexicalBlockFile(scope: !5972, file: !565, discriminator: 6)
!5981 = !DILocation(line: 1339, column: 240, scope: !5972)
!5982 = !DILocation(line: 1339, column: 250, scope: !5972)
!5983 = !DILocation(line: 1339, column: 275, scope: !5972)
!5984 = !DILocation(line: 1339, column: 206, scope: !5972)
!5985 = !DILocation(line: 1339, column: 294, scope: !5986)
!5986 = !DILexicalBlockFile(scope: !1098, file: !565, discriminator: 7)
!5987 = !DILocation(line: 1339, column: 294, scope: !1097)
!5988 = !DILocation(line: 1339, column: 294, scope: !5989)
!5989 = !DILexicalBlockFile(scope: !1097, file: !565, discriminator: 8)
!5990 = !DILocation(line: 1339, column: 294, scope: !5991)
!5991 = !DILexicalBlockFile(scope: !1097, file: !565, discriminator: 9)
!5992 = !DILocation(line: 1339, column: 307, scope: !5911)
!5993 = !DILocation(line: 1339, column: 307, scope: !1095)
!5994 = !DILocation(line: 1339, column: 307, scope: !5995)
!5995 = !DILexicalBlockFile(scope: !1095, file: !565, discriminator: 11)
!5996 = !DILocation(line: 1340, column: 5, scope: !1061)
!5997 = !DILocation(line: 1340, column: 10, scope: !5998)
!5998 = !DILexicalBlockFile(scope: !1100, file: !565, discriminator: 1)
!5999 = !DILocation(line: 1340, column: 20, scope: !1100)
!6000 = !DILocation(line: 1340, column: 55, scope: !1100)
!6001 = !DILocation(line: 1340, column: 68, scope: !1103)
!6002 = !DILocation(line: 1340, column: 84, scope: !1103)
!6003 = !DILocation(line: 1340, column: 68, scope: !1100)
!6004 = !DILocation(line: 1340, column: 99, scope: !6005)
!6005 = !DILexicalBlockFile(scope: !1103, file: !565, discriminator: 2)
!6006 = !DILocation(line: 1340, column: 104, scope: !6007)
!6007 = !DILexicalBlockFile(scope: !1102, file: !565, discriminator: 4)
!6008 = !DILocation(line: 1340, column: 114, scope: !1102)
!6009 = !DILocation(line: 1340, column: 144, scope: !1102)
!6010 = !DILocation(line: 1340, column: 170, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !1102, file: !565, line: 1340, column: 167)
!6012 = !DILocation(line: 1340, column: 187, scope: !6011)
!6013 = !DILocation(line: 1340, column: 167, scope: !6011)
!6014 = !DILocation(line: 1340, column: 197, scope: !6011)
!6015 = !DILocation(line: 1340, column: 167, scope: !1102)
!6016 = !DILocation(line: 1340, column: 167, scope: !6017)
!6017 = !DILexicalBlockFile(scope: !1102, file: !565, discriminator: 5)
!6018 = !DILocation(line: 1340, column: 228, scope: !6019)
!6019 = !DILexicalBlockFile(scope: !6011, file: !565, discriminator: 6)
!6020 = !DILocation(line: 1340, column: 246, scope: !6011)
!6021 = !DILocation(line: 1340, column: 256, scope: !6011)
!6022 = !DILocation(line: 1340, column: 281, scope: !6011)
!6023 = !DILocation(line: 1340, column: 212, scope: !6011)
!6024 = !DILocation(line: 1340, column: 300, scope: !6025)
!6025 = !DILexicalBlockFile(scope: !1103, file: !565, discriminator: 7)
!6026 = !DILocation(line: 1340, column: 300, scope: !1102)
!6027 = !DILocation(line: 1340, column: 300, scope: !6028)
!6028 = !DILexicalBlockFile(scope: !1102, file: !565, discriminator: 8)
!6029 = !DILocation(line: 1340, column: 300, scope: !6030)
!6030 = !DILexicalBlockFile(scope: !1102, file: !565, discriminator: 9)
!6031 = !DILocation(line: 1340, column: 313, scope: !5911)
!6032 = !DILocation(line: 1340, column: 313, scope: !1100)
!6033 = !DILocation(line: 1340, column: 313, scope: !6034)
!6034 = !DILexicalBlockFile(scope: !1100, file: !565, discriminator: 11)
!6035 = !DILocation(line: 1341, column: 35, scope: !1061)
!6036 = !DILocation(line: 1341, column: 5, scope: !1061)
!6037 = !DILocation(line: 1342, column: 5, scope: !1061)
!6038 = !DILocation(line: 1343, column: 1, scope: !1061)
!6039 = !DILocation(line: 1715, column: 53, scope: !1151)
!6040 = !DILocation(line: 1717, column: 25, scope: !1151)
!6041 = !DILocation(line: 1717, column: 5, scope: !1151)
!6042 = !DILocation(line: 1718, column: 5, scope: !1151)
!6043 = !DILocation(line: 1718, column: 14, scope: !6044)
!6044 = !DILexicalBlockFile(scope: !1158, file: !565, discriminator: 1)
!6045 = !DILocation(line: 1718, column: 20, scope: !1158)
!6046 = !{!6047, !1465, i64 32}
!6047 = !{!"", !1499, i64 0, !1465, i64 16, !1466, i64 24, !1465, i64 32, !1465, i64 40, !1465, i64 48}
!6048 = !DILocation(line: 1718, column: 27, scope: !1158)
!6049 = !DILocation(line: 1718, column: 41, scope: !1158)
!6050 = !DILocation(line: 1718, column: 46, scope: !6051)
!6051 = !DILexicalBlockFile(scope: !1158, file: !565, discriminator: 2)
!6052 = !DILocation(line: 1718, column: 52, scope: !1158)
!6053 = !DILocation(line: 1718, column: 60, scope: !1158)
!6054 = !DILocation(line: 1718, column: 78, scope: !1158)
!6055 = !DILocation(line: 1718, column: 100, scope: !6056)
!6056 = !DILexicalBlockFile(scope: !1158, file: !565, discriminator: 5)
!6057 = !DILocation(line: 1718, column: 106, scope: !1158)
!6058 = !DILocation(line: 1718, column: 97, scope: !1158)
!6059 = !DILocation(line: 1718, column: 14, scope: !1159)
!6060 = !DILocation(line: 1718, column: 116, scope: !6061)
!6061 = !DILexicalBlockFile(scope: !6062, file: !565, discriminator: 6)
!6062 = !DILexicalBlockFile(scope: !1158, file: !565, discriminator: 4)
!6063 = !DILocation(line: 1718, column: 121, scope: !6064)
!6064 = !DILexicalBlockFile(scope: !1157, file: !565, discriminator: 8)
!6065 = !DILocation(line: 1718, column: 131, scope: !1157)
!6066 = !DILocation(line: 1718, column: 161, scope: !1157)
!6067 = !DILocation(line: 1718, column: 167, scope: !1157)
!6068 = !DILocation(line: 1718, column: 184, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !1157, file: !565, line: 1718, column: 181)
!6070 = !DILocation(line: 1718, column: 201, scope: !6069)
!6071 = !DILocation(line: 1718, column: 181, scope: !6069)
!6072 = !DILocation(line: 1718, column: 211, scope: !6069)
!6073 = !DILocation(line: 1718, column: 181, scope: !1157)
!6074 = !DILocation(line: 1718, column: 181, scope: !6075)
!6075 = !DILexicalBlockFile(scope: !1157, file: !565, discriminator: 9)
!6076 = !DILocation(line: 1718, column: 242, scope: !6077)
!6077 = !DILexicalBlockFile(scope: !6069, file: !565, discriminator: 10)
!6078 = !DILocation(line: 1718, column: 260, scope: !6069)
!6079 = !DILocation(line: 1718, column: 270, scope: !6069)
!6080 = !DILocation(line: 1718, column: 295, scope: !6069)
!6081 = !DILocation(line: 1718, column: 226, scope: !6069)
!6082 = !DILocation(line: 1718, column: 314, scope: !6083)
!6083 = !DILexicalBlockFile(scope: !1158, file: !565, discriminator: 11)
!6084 = !DILocation(line: 1718, column: 314, scope: !1157)
!6085 = !DILocation(line: 1718, column: 314, scope: !6086)
!6086 = !DILexicalBlockFile(scope: !1157, file: !565, discriminator: 12)
!6087 = !DILocation(line: 1718, column: 327, scope: !6088)
!6088 = !DILexicalBlockFile(scope: !6089, file: !565, discriminator: 13)
!6089 = !DILexicalBlockFile(scope: !6090, file: !565, discriminator: 7)
!6090 = !DILexicalBlockFile(scope: !1159, file: !565, discriminator: 3)
!6091 = !DILocation(line: 1719, column: 5, scope: !1151)
!6092 = !DILocation(line: 1719, column: 10, scope: !6093)
!6093 = !DILexicalBlockFile(scope: !1161, file: !565, discriminator: 1)
!6094 = !DILocation(line: 1719, column: 20, scope: !1161)
!6095 = !DILocation(line: 1719, column: 51, scope: !1161)
!6096 = !DILocation(line: 1719, column: 57, scope: !1161)
!6097 = !{!6047, !1465, i64 48}
!6098 = !DILocation(line: 1719, column: 70, scope: !1164)
!6099 = !DILocation(line: 1719, column: 86, scope: !1164)
!6100 = !DILocation(line: 1719, column: 70, scope: !1161)
!6101 = !DILocation(line: 1719, column: 101, scope: !6102)
!6102 = !DILexicalBlockFile(scope: !1164, file: !565, discriminator: 2)
!6103 = !DILocation(line: 1719, column: 106, scope: !6104)
!6104 = !DILexicalBlockFile(scope: !1163, file: !565, discriminator: 4)
!6105 = !DILocation(line: 1719, column: 116, scope: !1163)
!6106 = !DILocation(line: 1719, column: 146, scope: !1163)
!6107 = !DILocation(line: 1719, column: 172, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !1163, file: !565, line: 1719, column: 169)
!6109 = !DILocation(line: 1719, column: 189, scope: !6108)
!6110 = !DILocation(line: 1719, column: 169, scope: !6108)
!6111 = !DILocation(line: 1719, column: 199, scope: !6108)
!6112 = !DILocation(line: 1719, column: 169, scope: !1163)
!6113 = !DILocation(line: 1719, column: 169, scope: !6114)
!6114 = !DILexicalBlockFile(scope: !1163, file: !565, discriminator: 5)
!6115 = !DILocation(line: 1719, column: 230, scope: !6116)
!6116 = !DILexicalBlockFile(scope: !6108, file: !565, discriminator: 6)
!6117 = !DILocation(line: 1719, column: 248, scope: !6108)
!6118 = !DILocation(line: 1719, column: 258, scope: !6108)
!6119 = !DILocation(line: 1719, column: 283, scope: !6108)
!6120 = !DILocation(line: 1719, column: 214, scope: !6108)
!6121 = !DILocation(line: 1719, column: 302, scope: !6122)
!6122 = !DILexicalBlockFile(scope: !1164, file: !565, discriminator: 7)
!6123 = !DILocation(line: 1719, column: 302, scope: !1163)
!6124 = !DILocation(line: 1719, column: 302, scope: !6125)
!6125 = !DILexicalBlockFile(scope: !1163, file: !565, discriminator: 8)
!6126 = !DILocation(line: 1719, column: 302, scope: !6127)
!6127 = !DILexicalBlockFile(scope: !1163, file: !565, discriminator: 9)
!6128 = !DILocation(line: 1719, column: 315, scope: !6129)
!6129 = !DILexicalBlockFile(scope: !6130, file: !565, discriminator: 10)
!6130 = !DILexicalBlockFile(scope: !1151, file: !565, discriminator: 3)
!6131 = !DILocation(line: 1719, column: 315, scope: !1161)
!6132 = !DILocation(line: 1720, column: 19, scope: !1151)
!6133 = !DILocation(line: 1720, column: 7, scope: !1151)
!6134 = !DILocation(line: 1720, column: 27, scope: !1151)
!6135 = !DILocation(line: 1720, column: 37, scope: !1151)
!6136 = !DILocation(line: 1720, column: 45, scope: !1151)
!6137 = !DILocation(line: 1720, column: 5, scope: !1151)
!6138 = !DILocation(line: 1721, column: 1, scope: !1151)
!6139 = !DILocation(line: 1705, column: 54, scope: !1165)
!6140 = !DILocation(line: 1706, column: 35, scope: !1165)
!6141 = !DILocation(line: 1706, column: 48, scope: !1165)
!6142 = !DILocation(line: 1708, column: 11, scope: !1176)
!6143 = !DILocation(line: 1708, column: 17, scope: !1176)
!6144 = !DILocation(line: 1708, column: 25, scope: !1176)
!6145 = !DILocation(line: 1708, column: 43, scope: !1176)
!6146 = !DILocation(line: 1708, column: 65, scope: !6147)
!6147 = !DILexicalBlockFile(scope: !1176, file: !565, discriminator: 1)
!6148 = !DILocation(line: 1708, column: 71, scope: !1176)
!6149 = !DILocation(line: 1708, column: 62, scope: !1176)
!6150 = !DILocation(line: 1708, column: 9, scope: !1165)
!6151 = !DILocation(line: 1709, column: 9, scope: !1176)
!6152 = !DILocation(line: 1709, column: 18, scope: !6153)
!6153 = !DILexicalBlockFile(scope: !1174, file: !565, discriminator: 1)
!6154 = !DILocation(line: 1709, column: 24, scope: !1174)
!6155 = !DILocation(line: 1709, column: 18, scope: !1174)
!6156 = !DILocation(line: 1709, column: 18, scope: !1175)
!6157 = !DILocation(line: 1709, column: 34, scope: !6158)
!6158 = !DILexicalBlockFile(scope: !1173, file: !565, discriminator: 2)
!6159 = !DILocation(line: 1709, column: 38, scope: !1173)
!6160 = !DILocation(line: 1709, column: 45, scope: !1173)
!6161 = !DILocation(line: 1709, column: 64, scope: !1173)
!6162 = !DILocation(line: 1709, column: 70, scope: !1173)
!6163 = !DILocation(line: 1709, column: 79, scope: !1173)
!6164 = !DILocation(line: 1709, column: 89, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !1173, file: !565, line: 1709, column: 89)
!6166 = !DILocation(line: 1709, column: 89, scope: !1173)
!6167 = !DILocation(line: 1709, column: 102, scope: !6168)
!6168 = !DILexicalBlockFile(scope: !6165, file: !565, discriminator: 4)
!6169 = !DILocation(line: 1709, column: 95, scope: !6165)
!6170 = !DILocation(line: 1709, column: 108, scope: !6171)
!6171 = !DILexicalBlockFile(scope: !1174, file: !565, discriminator: 5)
!6172 = !DILocation(line: 1709, column: 108, scope: !6173)
!6173 = !DILexicalBlockFile(scope: !6174, file: !565, discriminator: 7)
!6174 = !DILexicalBlockFile(scope: !1174, file: !565, discriminator: 6)
!6175 = !DILocation(line: 1709, column: 108, scope: !1173)
!6176 = !DILocation(line: 1709, column: 110, scope: !6177)
!6177 = !DILexicalBlockFile(scope: !6178, file: !565, discriminator: 8)
!6178 = !DILexicalBlockFile(scope: !1175, file: !565, discriminator: 3)
!6179 = !DILocation(line: 1709, column: 110, scope: !6180)
!6180 = !DILexicalBlockFile(scope: !1175, file: !565, discriminator: 9)
!6181 = !DILocation(line: 1710, column: 5, scope: !1165)
!6182 = !DILocation(line: 1710, column: 14, scope: !6183)
!6183 = !DILexicalBlockFile(scope: !1179, file: !565, discriminator: 1)
!6184 = !DILocation(line: 1710, column: 20, scope: !1179)
!6185 = !DILocation(line: 1710, column: 14, scope: !1179)
!6186 = !DILocation(line: 1710, column: 14, scope: !1180)
!6187 = !DILocation(line: 1710, column: 30, scope: !6188)
!6188 = !DILexicalBlockFile(scope: !1178, file: !565, discriminator: 2)
!6189 = !DILocation(line: 1710, column: 34, scope: !1178)
!6190 = !DILocation(line: 1710, column: 41, scope: !1178)
!6191 = !DILocation(line: 1710, column: 60, scope: !1178)
!6192 = !DILocation(line: 1710, column: 66, scope: !1178)
!6193 = !DILocation(line: 1710, column: 75, scope: !1178)
!6194 = !DILocation(line: 1710, column: 85, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !1178, file: !565, line: 1710, column: 85)
!6196 = !DILocation(line: 1710, column: 85, scope: !1178)
!6197 = !DILocation(line: 1710, column: 98, scope: !6198)
!6198 = !DILexicalBlockFile(scope: !6195, file: !565, discriminator: 4)
!6199 = !DILocation(line: 1710, column: 91, scope: !6195)
!6200 = !DILocation(line: 1710, column: 104, scope: !6201)
!6201 = !DILexicalBlockFile(scope: !1179, file: !565, discriminator: 5)
!6202 = !DILocation(line: 1710, column: 104, scope: !6203)
!6203 = !DILexicalBlockFile(scope: !6204, file: !565, discriminator: 7)
!6204 = !DILexicalBlockFile(scope: !1179, file: !565, discriminator: 6)
!6205 = !DILocation(line: 1710, column: 104, scope: !1178)
!6206 = !DILocation(line: 1710, column: 106, scope: !6207)
!6207 = !DILexicalBlockFile(scope: !6208, file: !565, discriminator: 8)
!6208 = !DILexicalBlockFile(scope: !1180, file: !565, discriminator: 3)
!6209 = !DILocation(line: 1711, column: 5, scope: !1165)
!6210 = !DILocation(line: 1712, column: 1, scope: !1165)
!6211 = !DILocation(line: 1699, column: 31, scope: !1232)
!6212 = !DILocation(line: 1699, column: 47, scope: !1232)
!6213 = !DILocation(line: 1699, column: 63, scope: !1232)
!6214 = !DILocation(line: 1701, column: 5, scope: !1232)
!6215 = !DILocation(line: 1656, column: 34, scope: !1237)
!6216 = !DILocation(line: 1656, column: 50, scope: !1237)
!6217 = !DILocation(line: 1656, column: 66, scope: !1237)
!6218 = !DILocation(line: 1658, column: 5, scope: !1237)
!6219 = !DILocation(line: 1658, column: 34, scope: !1237)
!6220 = !DILocation(line: 1659, column: 5, scope: !1237)
!6221 = !DILocation(line: 1659, column: 15, scope: !1237)
!6222 = !DILocation(line: 1659, column: 24, scope: !1237)
!6223 = !DILocation(line: 1660, column: 5, scope: !1237)
!6224 = !DILocation(line: 1660, column: 11, scope: !1237)
!6225 = !DILocation(line: 1662, column: 45, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !1237, file: !565, line: 1662, column: 9)
!6227 = !DILocation(line: 1662, column: 51, scope: !6226)
!6228 = !DILocation(line: 1662, column: 10, scope: !6226)
!6229 = !DILocation(line: 1662, column: 9, scope: !1237)
!6230 = !DILocation(line: 1664, column: 9, scope: !6226)
!6231 = !DILocation(line: 1666, column: 43, scope: !1237)
!6232 = !DILocation(line: 1666, column: 49, scope: !1237)
!6233 = !DILocation(line: 1666, column: 58, scope: !1237)
!6234 = !DILocation(line: 1666, column: 12, scope: !1237)
!6235 = !DILocation(line: 1666, column: 10, scope: !1237)
!6236 = !DILocation(line: 1667, column: 9, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !1237, file: !565, line: 1667, column: 9)
!6238 = !DILocation(line: 1667, column: 14, scope: !6237)
!6239 = !DILocation(line: 1667, column: 9, scope: !1237)
!6240 = !DILocation(line: 1668, column: 9, scope: !6237)
!6241 = !DILocation(line: 1670, column: 48, scope: !1237)
!6242 = !DILocation(line: 1670, column: 36, scope: !1237)
!6243 = !DILocation(line: 1670, column: 13, scope: !1237)
!6244 = !DILocation(line: 1670, column: 11, scope: !1237)
!6245 = !DILocation(line: 1671, column: 9, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !1237, file: !565, line: 1671, column: 9)
!6247 = !DILocation(line: 1671, column: 15, scope: !6246)
!6248 = !DILocation(line: 1671, column: 9, scope: !1237)
!6249 = !DILocation(line: 1672, column: 9, scope: !6246)
!6250 = !DILocation(line: 1673, column: 12, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !1237, file: !565, line: 1673, column: 9)
!6252 = !DILocation(line: 1673, column: 20, scope: !6251)
!6253 = !DILocation(line: 1673, column: 28, scope: !6251)
!6254 = !DILocation(line: 1673, column: 9, scope: !1237)
!6255 = !DILocation(line: 1674, column: 25, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6251, file: !565, line: 1673, column: 54)
!6257 = !DILocation(line: 1674, column: 9, scope: !6256)
!6258 = !DILocation(line: 1675, column: 9, scope: !6256)
!6259 = !DILocation(line: 1678, column: 44, scope: !1237)
!6260 = !DILocation(line: 1678, column: 20, scope: !1237)
!6261 = !DILocation(line: 1678, column: 52, scope: !1237)
!6262 = !DILocation(line: 1678, column: 5, scope: !1237)
!6263 = !DILocation(line: 1678, column: 11, scope: !1237)
!6264 = !DILocation(line: 1678, column: 17, scope: !1237)
!6265 = !{!6047, !1465, i64 16}
!6266 = !DILocation(line: 1679, column: 20, scope: !1237)
!6267 = !DILocation(line: 1679, column: 5, scope: !1237)
!6268 = !DILocation(line: 1679, column: 11, scope: !1237)
!6269 = !DILocation(line: 1679, column: 18, scope: !1237)
!6270 = !DILocation(line: 1680, column: 21, scope: !1237)
!6271 = !DILocation(line: 1680, column: 31, scope: !1237)
!6272 = !DILocation(line: 1680, column: 40, scope: !1237)
!6273 = !DILocation(line: 1681, column: 5, scope: !1237)
!6274 = !DILocation(line: 1681, column: 11, scope: !1237)
!6275 = !DILocation(line: 1681, column: 19, scope: !1237)
!6276 = !{!6047, !1465, i64 40}
!6277 = !DILocation(line: 1682, column: 44, scope: !1237)
!6278 = !DILocation(line: 1682, column: 20, scope: !1237)
!6279 = !DILocation(line: 1682, column: 5, scope: !1237)
!6280 = !DILocation(line: 1682, column: 11, scope: !1237)
!6281 = !DILocation(line: 1682, column: 18, scope: !1237)
!6282 = !DILocation(line: 1683, column: 9, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !1237, file: !565, line: 1683, column: 9)
!6284 = !DILocation(line: 1683, column: 15, scope: !6283)
!6285 = !DILocation(line: 1683, column: 22, scope: !6283)
!6286 = !DILocation(line: 1683, column: 9, scope: !1237)
!6287 = !DILocation(line: 1684, column: 9, scope: !6283)
!6288 = !DILocation(line: 1685, column: 9, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !1237, file: !565, line: 1685, column: 9)
!6290 = !DILocation(line: 1685, column: 15, scope: !6289)
!6291 = !DILocation(line: 1685, column: 22, scope: !6289)
!6292 = !DILocation(line: 1685, column: 30, scope: !6289)
!6293 = !DILocation(line: 1685, column: 44, scope: !6289)
!6294 = !DILocation(line: 1686, column: 9, scope: !6289)
!6295 = !DILocation(line: 1686, column: 15, scope: !6289)
!6296 = !DILocation(line: 1686, column: 22, scope: !6289)
!6297 = !DILocation(line: 1686, column: 31, scope: !6289)
!6298 = !DILocation(line: 1686, column: 37, scope: !6289)
!6299 = !DILocation(line: 1686, column: 44, scope: !6289)
!6300 = !DILocation(line: 1686, column: 50, scope: !6289)
!6301 = !DILocation(line: 1686, column: 57, scope: !6289)
!6302 = !DILocation(line: 1686, column: 65, scope: !6289)
!6303 = !DILocation(line: 1685, column: 9, scope: !1237)
!6304 = !DILocation(line: 1687, column: 9, scope: !6289)
!6305 = !DILocation(line: 1689, column: 5, scope: !1237)
!6306 = !DILocation(line: 1689, column: 10, scope: !6307)
!6307 = !DILexicalBlockFile(scope: !1247, file: !565, discriminator: 1)
!6308 = !DILocation(line: 1689, column: 20, scope: !1247)
!6309 = !DILocation(line: 1689, column: 50, scope: !1247)
!6310 = !DILocation(line: 1689, column: 66, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !1247, file: !565, line: 1689, column: 63)
!6312 = !DILocation(line: 1689, column: 83, scope: !6311)
!6313 = !DILocation(line: 1689, column: 63, scope: !6311)
!6314 = !DILocation(line: 1689, column: 93, scope: !6311)
!6315 = !DILocation(line: 1689, column: 63, scope: !1247)
!6316 = !DILocation(line: 1689, column: 63, scope: !6317)
!6317 = !DILexicalBlockFile(scope: !1247, file: !565, discriminator: 2)
!6318 = !DILocation(line: 1689, column: 124, scope: !6319)
!6319 = !DILexicalBlockFile(scope: !6311, file: !565, discriminator: 3)
!6320 = !DILocation(line: 1689, column: 142, scope: !6311)
!6321 = !DILocation(line: 1689, column: 152, scope: !6311)
!6322 = !DILocation(line: 1689, column: 177, scope: !6311)
!6323 = !DILocation(line: 1689, column: 108, scope: !6311)
!6324 = !DILocation(line: 1689, column: 196, scope: !6325)
!6325 = !DILexicalBlockFile(scope: !1237, file: !565, discriminator: 4)
!6326 = !DILocation(line: 1689, column: 196, scope: !1247)
!6327 = !DILocation(line: 1689, column: 196, scope: !6328)
!6328 = !DILexicalBlockFile(scope: !1247, file: !565, discriminator: 5)
!6329 = !DILocation(line: 1690, column: 24, scope: !1237)
!6330 = !DILocation(line: 1690, column: 12, scope: !1237)
!6331 = !DILocation(line: 1690, column: 5, scope: !1237)
!6332 = !DILocation(line: 1693, column: 5, scope: !1237)
!6333 = !DILocation(line: 1693, column: 10, scope: !6334)
!6334 = !DILexicalBlockFile(scope: !1249, file: !565, discriminator: 1)
!6335 = !DILocation(line: 1693, column: 20, scope: !1249)
!6336 = !DILocation(line: 1693, column: 51, scope: !1249)
!6337 = !DILocation(line: 1693, column: 38, scope: !1249)
!6338 = !DILocation(line: 1693, column: 62, scope: !1252)
!6339 = !DILocation(line: 1693, column: 78, scope: !1252)
!6340 = !DILocation(line: 1693, column: 62, scope: !1249)
!6341 = !DILocation(line: 1693, column: 93, scope: !6342)
!6342 = !DILexicalBlockFile(scope: !1252, file: !565, discriminator: 2)
!6343 = !DILocation(line: 1693, column: 98, scope: !6344)
!6344 = !DILexicalBlockFile(scope: !1251, file: !565, discriminator: 4)
!6345 = !DILocation(line: 1693, column: 108, scope: !1251)
!6346 = !DILocation(line: 1693, column: 138, scope: !1251)
!6347 = !DILocation(line: 1693, column: 164, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !1251, file: !565, line: 1693, column: 161)
!6349 = !DILocation(line: 1693, column: 181, scope: !6348)
!6350 = !DILocation(line: 1693, column: 161, scope: !6348)
!6351 = !DILocation(line: 1693, column: 191, scope: !6348)
!6352 = !DILocation(line: 1693, column: 161, scope: !1251)
!6353 = !DILocation(line: 1693, column: 161, scope: !6354)
!6354 = !DILexicalBlockFile(scope: !1251, file: !565, discriminator: 5)
!6355 = !DILocation(line: 1693, column: 222, scope: !6356)
!6356 = !DILexicalBlockFile(scope: !6348, file: !565, discriminator: 6)
!6357 = !DILocation(line: 1693, column: 240, scope: !6348)
!6358 = !DILocation(line: 1693, column: 250, scope: !6348)
!6359 = !DILocation(line: 1693, column: 275, scope: !6348)
!6360 = !DILocation(line: 1693, column: 206, scope: !6348)
!6361 = !DILocation(line: 1693, column: 294, scope: !6362)
!6362 = !DILexicalBlockFile(scope: !1252, file: !565, discriminator: 7)
!6363 = !DILocation(line: 1693, column: 294, scope: !1251)
!6364 = !DILocation(line: 1693, column: 294, scope: !6365)
!6365 = !DILexicalBlockFile(scope: !1251, file: !565, discriminator: 8)
!6366 = !DILocation(line: 1693, column: 294, scope: !6367)
!6367 = !DILexicalBlockFile(scope: !1251, file: !565, discriminator: 9)
!6368 = !DILocation(line: 1693, column: 307, scope: !6369)
!6369 = !DILexicalBlockFile(scope: !6370, file: !565, discriminator: 10)
!6370 = !DILexicalBlockFile(scope: !1237, file: !565, discriminator: 3)
!6371 = !DILocation(line: 1693, column: 307, scope: !1249)
!6372 = !DILocation(line: 1693, column: 307, scope: !6373)
!6373 = !DILexicalBlockFile(scope: !1249, file: !565, discriminator: 11)
!6374 = !DILocation(line: 1694, column: 5, scope: !1237)
!6375 = !DILocation(line: 1694, column: 10, scope: !6376)
!6376 = !DILexicalBlockFile(scope: !1254, file: !565, discriminator: 1)
!6377 = !DILocation(line: 1694, column: 20, scope: !1254)
!6378 = !DILocation(line: 1694, column: 51, scope: !1254)
!6379 = !DILocation(line: 1694, column: 63, scope: !1257)
!6380 = !DILocation(line: 1694, column: 79, scope: !1257)
!6381 = !DILocation(line: 1694, column: 63, scope: !1254)
!6382 = !DILocation(line: 1694, column: 94, scope: !6383)
!6383 = !DILexicalBlockFile(scope: !1257, file: !565, discriminator: 2)
!6384 = !DILocation(line: 1694, column: 99, scope: !6385)
!6385 = !DILexicalBlockFile(scope: !1256, file: !565, discriminator: 4)
!6386 = !DILocation(line: 1694, column: 109, scope: !1256)
!6387 = !DILocation(line: 1694, column: 139, scope: !1256)
!6388 = !DILocation(line: 1694, column: 165, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !1256, file: !565, line: 1694, column: 162)
!6390 = !DILocation(line: 1694, column: 182, scope: !6389)
!6391 = !DILocation(line: 1694, column: 162, scope: !6389)
!6392 = !DILocation(line: 1694, column: 192, scope: !6389)
!6393 = !DILocation(line: 1694, column: 162, scope: !1256)
!6394 = !DILocation(line: 1694, column: 162, scope: !6395)
!6395 = !DILexicalBlockFile(scope: !1256, file: !565, discriminator: 5)
!6396 = !DILocation(line: 1694, column: 223, scope: !6397)
!6397 = !DILexicalBlockFile(scope: !6389, file: !565, discriminator: 6)
!6398 = !DILocation(line: 1694, column: 241, scope: !6389)
!6399 = !DILocation(line: 1694, column: 251, scope: !6389)
!6400 = !DILocation(line: 1694, column: 276, scope: !6389)
!6401 = !DILocation(line: 1694, column: 207, scope: !6389)
!6402 = !DILocation(line: 1694, column: 295, scope: !6403)
!6403 = !DILexicalBlockFile(scope: !1257, file: !565, discriminator: 7)
!6404 = !DILocation(line: 1694, column: 295, scope: !1256)
!6405 = !DILocation(line: 1694, column: 295, scope: !6406)
!6406 = !DILexicalBlockFile(scope: !1256, file: !565, discriminator: 8)
!6407 = !DILocation(line: 1694, column: 295, scope: !6408)
!6408 = !DILexicalBlockFile(scope: !1256, file: !565, discriminator: 9)
!6409 = !DILocation(line: 1694, column: 308, scope: !6369)
!6410 = !DILocation(line: 1694, column: 308, scope: !1254)
!6411 = !DILocation(line: 1694, column: 308, scope: !6412)
!6412 = !DILexicalBlockFile(scope: !1254, file: !565, discriminator: 11)
!6413 = !DILocation(line: 1695, column: 5, scope: !1237)
!6414 = !DILocation(line: 1696, column: 1, scope: !1237)
!6415 = !DILocation(line: 1589, column: 51, scope: !1181)
!6416 = !DILocation(line: 1589, column: 67, scope: !1181)
!6417 = !DILocation(line: 1591, column: 31, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !1181, file: !565, line: 1591, column: 9)
!6419 = !DILocation(line: 1591, column: 37, scope: !6418)
!6420 = !DILocation(line: 1591, column: 9, scope: !6418)
!6421 = !DILocation(line: 1591, column: 9, scope: !1181)
!6422 = !DILocation(line: 1592, column: 9, scope: !6418)
!6423 = !DILocation(line: 1594, column: 62, scope: !6418)
!6424 = !DILocation(line: 1594, column: 9, scope: !6418)
!6425 = !DILocation(line: 1595, column: 1, scope: !1181)
!6426 = !DILocation(line: 1598, column: 56, scope: !1199)
!6427 = !DILocation(line: 1598, column: 72, scope: !1199)
!6428 = !DILocation(line: 1600, column: 5, scope: !1199)
!6429 = !DILocation(line: 1600, column: 15, scope: !1199)
!6430 = !DILocation(line: 1601, column: 5, scope: !1199)
!6431 = !DILocation(line: 1601, column: 9, scope: !1199)
!6432 = !DILocation(line: 1601, column: 12, scope: !1199)
!6433 = !DILocation(line: 1603, column: 27, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !1199, file: !565, line: 1603, column: 9)
!6435 = !DILocation(line: 1603, column: 10, scope: !6434)
!6436 = !DILocation(line: 1603, column: 9, scope: !1199)
!6437 = !DILocation(line: 1604, column: 25, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6434, file: !565, line: 1603, column: 35)
!6439 = !DILocation(line: 1604, column: 9, scope: !6438)
!6440 = !DILocation(line: 1606, column: 9, scope: !6438)
!6441 = !DILocation(line: 1609, column: 12, scope: !1210)
!6442 = !DILocation(line: 1609, column: 10, scope: !1210)
!6443 = !DILocation(line: 1609, column: 17, scope: !6444)
!6444 = !DILexicalBlockFile(scope: !6445, file: !565, discriminator: 2)
!6445 = !DILexicalBlockFile(scope: !1209, file: !565, discriminator: 1)
!6446 = !DILocation(line: 1609, column: 37, scope: !1209)
!6447 = !DILocation(line: 1609, column: 21, scope: !1209)
!6448 = !DILocation(line: 1609, column: 19, scope: !1209)
!6449 = !DILocation(line: 1609, column: 5, scope: !1210)
!6450 = !DILocation(line: 1611, column: 37, scope: !1208)
!6451 = !DILocation(line: 1611, column: 44, scope: !1208)
!6452 = !DILocation(line: 1611, column: 18, scope: !1208)
!6453 = !DILocation(line: 1611, column: 16, scope: !1208)
!6454 = !DILocation(line: 1612, column: 13, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !1208, file: !565, line: 1612, column: 13)
!6456 = !DILocation(line: 1612, column: 20, scope: !6455)
!6457 = !DILocation(line: 1612, column: 13, scope: !1208)
!6458 = !DILocation(line: 1613, column: 13, scope: !6455)
!6459 = !DILocation(line: 1615, column: 35, scope: !1208)
!6460 = !DILocation(line: 1615, column: 41, scope: !1208)
!6461 = !DILocation(line: 1615, column: 13, scope: !1208)
!6462 = !DILocation(line: 1615, column: 11, scope: !1208)
!6463 = !DILocation(line: 1616, column: 9, scope: !1208)
!6464 = !DILocation(line: 1616, column: 14, scope: !6465)
!6465 = !DILexicalBlockFile(scope: !1207, file: !565, discriminator: 1)
!6466 = !DILocation(line: 1616, column: 24, scope: !1207)
!6467 = !DILocation(line: 1616, column: 54, scope: !1207)
!6468 = !DILocation(line: 1616, column: 71, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !1207, file: !565, line: 1616, column: 68)
!6470 = !DILocation(line: 1616, column: 88, scope: !6469)
!6471 = !DILocation(line: 1616, column: 68, scope: !6469)
!6472 = !DILocation(line: 1616, column: 98, scope: !6469)
!6473 = !DILocation(line: 1616, column: 68, scope: !1207)
!6474 = !DILocation(line: 1616, column: 68, scope: !6475)
!6475 = !DILexicalBlockFile(scope: !1207, file: !565, discriminator: 2)
!6476 = !DILocation(line: 1616, column: 129, scope: !6477)
!6477 = !DILexicalBlockFile(scope: !6469, file: !565, discriminator: 3)
!6478 = !DILocation(line: 1616, column: 147, scope: !6469)
!6479 = !DILocation(line: 1616, column: 157, scope: !6469)
!6480 = !DILocation(line: 1616, column: 182, scope: !6469)
!6481 = !DILocation(line: 1616, column: 113, scope: !6469)
!6482 = !DILocation(line: 1616, column: 201, scope: !6483)
!6483 = !DILexicalBlockFile(scope: !1208, file: !565, discriminator: 4)
!6484 = !DILocation(line: 1616, column: 201, scope: !1207)
!6485 = !DILocation(line: 1616, column: 201, scope: !6486)
!6486 = !DILexicalBlockFile(scope: !1207, file: !565, discriminator: 5)
!6487 = !DILocation(line: 1617, column: 13, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !1208, file: !565, line: 1617, column: 13)
!6489 = !DILocation(line: 1617, column: 15, scope: !6488)
!6490 = !DILocation(line: 1617, column: 13, scope: !1208)
!6491 = !DILocation(line: 1618, column: 13, scope: !6488)
!6492 = !DILocation(line: 1619, column: 5, scope: !1208)
!6493 = !DILocation(line: 1609, column: 46, scope: !1209)
!6494 = !DILocation(line: 1609, column: 5, scope: !1209)
!6495 = !DILocation(line: 1621, column: 58, scope: !1199)
!6496 = !DILocation(line: 1621, column: 5, scope: !1199)
!6497 = !DILocation(line: 1622, column: 1, scope: !1199)
!6498 = !DILocation(line: 1625, column: 51, scope: !1211)
!6499 = !DILocation(line: 1627, column: 5, scope: !1211)
!6500 = !DILocation(line: 1627, column: 15, scope: !1211)
!6501 = !DILocation(line: 1629, column: 34, scope: !1211)
!6502 = !DILocation(line: 1629, column: 40, scope: !1211)
!6503 = !DILocation(line: 1629, column: 48, scope: !1211)
!6504 = !DILocation(line: 1629, column: 54, scope: !1211)
!6505 = !DILocation(line: 1630, column: 21, scope: !1211)
!6506 = !DILocation(line: 1630, column: 27, scope: !1211)
!6507 = !DILocation(line: 1630, column: 48, scope: !1211)
!6508 = !DILocation(line: 1630, column: 54, scope: !1211)
!6509 = !DILocation(line: 1629, column: 12, scope: !1211)
!6510 = !DILocation(line: 1629, column: 10, scope: !1211)
!6511 = !DILocation(line: 1636, column: 5, scope: !1211)
!6512 = !DILocation(line: 1636, column: 10, scope: !6513)
!6513 = !DILexicalBlockFile(scope: !1218, file: !565, discriminator: 1)
!6514 = !DILocation(line: 1636, column: 20, scope: !1218)
!6515 = !DILocation(line: 1636, column: 43, scope: !1218)
!6516 = !DILocation(line: 1636, column: 49, scope: !1218)
!6517 = !DILocation(line: 1636, column: 63, scope: !1222)
!6518 = !DILocation(line: 1636, column: 71, scope: !1222)
!6519 = !DILocation(line: 1636, column: 63, scope: !1218)
!6520 = !DILocation(line: 1636, column: 89, scope: !6521)
!6521 = !DILexicalBlockFile(scope: !1221, file: !565, discriminator: 2)
!6522 = !DILocation(line: 1636, column: 95, scope: !1221)
!6523 = !DILocation(line: 1636, column: 104, scope: !1221)
!6524 = !DILocation(line: 1636, column: 118, scope: !1221)
!6525 = !DILocation(line: 1636, column: 123, scope: !6526)
!6526 = !DILexicalBlockFile(scope: !1220, file: !565, discriminator: 4)
!6527 = !DILocation(line: 1636, column: 133, scope: !1220)
!6528 = !DILocation(line: 1636, column: 163, scope: !1220)
!6529 = !DILocation(line: 1636, column: 181, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !1220, file: !565, line: 1636, column: 178)
!6531 = !DILocation(line: 1636, column: 198, scope: !6530)
!6532 = !DILocation(line: 1636, column: 178, scope: !6530)
!6533 = !DILocation(line: 1636, column: 208, scope: !6530)
!6534 = !DILocation(line: 1636, column: 178, scope: !1220)
!6535 = !DILocation(line: 1636, column: 178, scope: !6536)
!6536 = !DILexicalBlockFile(scope: !1220, file: !565, discriminator: 5)
!6537 = !DILocation(line: 1636, column: 239, scope: !6538)
!6538 = !DILexicalBlockFile(scope: !6530, file: !565, discriminator: 6)
!6539 = !DILocation(line: 1636, column: 257, scope: !6530)
!6540 = !DILocation(line: 1636, column: 267, scope: !6530)
!6541 = !DILocation(line: 1636, column: 292, scope: !6530)
!6542 = !DILocation(line: 1636, column: 223, scope: !6530)
!6543 = !DILocation(line: 1636, column: 311, scope: !6544)
!6544 = !DILexicalBlockFile(scope: !1221, file: !565, discriminator: 7)
!6545 = !DILocation(line: 1636, column: 311, scope: !1220)
!6546 = !DILocation(line: 1636, column: 311, scope: !6547)
!6547 = !DILexicalBlockFile(scope: !1220, file: !565, discriminator: 8)
!6548 = !DILocation(line: 1636, column: 324, scope: !6549)
!6549 = !DILexicalBlockFile(scope: !1221, file: !565, discriminator: 9)
!6550 = !DILocation(line: 1636, column: 326, scope: !6551)
!6551 = !DILexicalBlockFile(scope: !6552, file: !565, discriminator: 10)
!6552 = !DILexicalBlockFile(scope: !1211, file: !565, discriminator: 3)
!6553 = !DILocation(line: 1636, column: 326, scope: !1218)
!6554 = !DILocation(line: 1636, column: 326, scope: !6555)
!6555 = !DILexicalBlockFile(scope: !1218, file: !565, discriminator: 11)
!6556 = !DILocation(line: 1637, column: 9, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !1211, file: !565, line: 1637, column: 9)
!6558 = !DILocation(line: 1637, column: 14, scope: !6557)
!6559 = !DILocation(line: 1637, column: 9, scope: !1211)
!6560 = !DILocation(line: 1638, column: 9, scope: !6557)
!6561 = !DILocation(line: 1641, column: 22, scope: !1225)
!6562 = !DILocation(line: 1641, column: 9, scope: !1225)
!6563 = !DILocation(line: 1641, column: 28, scope: !1225)
!6564 = !DILocation(line: 1641, column: 9, scope: !1211)
!6565 = !DILocation(line: 1642, column: 9, scope: !1224)
!6566 = !DILocation(line: 1642, column: 19, scope: !1224)
!6567 = !DILocation(line: 1644, column: 43, scope: !1224)
!6568 = !DILocation(line: 1644, column: 49, scope: !1224)
!6569 = !DILocation(line: 1644, column: 75, scope: !1224)
!6570 = !DILocation(line: 1644, column: 14, scope: !1224)
!6571 = !DILocation(line: 1644, column: 12, scope: !1224)
!6572 = !DILocation(line: 1645, column: 13, scope: !1229)
!6573 = !DILocation(line: 1645, column: 16, scope: !1229)
!6574 = !DILocation(line: 1645, column: 13, scope: !1224)
!6575 = !DILocation(line: 1646, column: 13, scope: !1228)
!6576 = !DILocation(line: 1646, column: 18, scope: !6577)
!6577 = !DILexicalBlockFile(scope: !1227, file: !565, discriminator: 1)
!6578 = !DILocation(line: 1646, column: 28, scope: !1227)
!6579 = !DILocation(line: 1646, column: 58, scope: !1227)
!6580 = !DILocation(line: 1646, column: 73, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !1227, file: !565, line: 1646, column: 70)
!6582 = !DILocation(line: 1646, column: 90, scope: !6581)
!6583 = !DILocation(line: 1646, column: 70, scope: !6581)
!6584 = !DILocation(line: 1646, column: 100, scope: !6581)
!6585 = !DILocation(line: 1646, column: 70, scope: !1227)
!6586 = !DILocation(line: 1646, column: 70, scope: !6587)
!6587 = !DILexicalBlockFile(scope: !1227, file: !565, discriminator: 2)
!6588 = !DILocation(line: 1646, column: 131, scope: !6589)
!6589 = !DILexicalBlockFile(scope: !6581, file: !565, discriminator: 3)
!6590 = !DILocation(line: 1646, column: 149, scope: !6581)
!6591 = !DILocation(line: 1646, column: 159, scope: !6581)
!6592 = !DILocation(line: 1646, column: 184, scope: !6581)
!6593 = !DILocation(line: 1646, column: 115, scope: !6581)
!6594 = !DILocation(line: 1646, column: 203, scope: !6595)
!6595 = !DILexicalBlockFile(scope: !1228, file: !565, discriminator: 4)
!6596 = !DILocation(line: 1646, column: 203, scope: !1227)
!6597 = !DILocation(line: 1646, column: 203, scope: !6598)
!6598 = !DILexicalBlockFile(scope: !1227, file: !565, discriminator: 5)
!6599 = !DILocation(line: 1647, column: 13, scope: !1228)
!6600 = !DILocation(line: 1649, column: 5, scope: !1225)
!6601 = !DILocation(line: 1649, column: 5, scope: !6602)
!6602 = !DILexicalBlockFile(scope: !1225, file: !565, discriminator: 1)
!6603 = !DILocation(line: 1649, column: 5, scope: !1224)
!6604 = !DILocation(line: 1650, column: 5, scope: !1211)
!6605 = !DILocation(line: 1650, column: 10, scope: !6606)
!6606 = !DILexicalBlockFile(scope: !1231, file: !565, discriminator: 1)
!6607 = !DILocation(line: 1650, column: 20, scope: !1231)
!6608 = !DILocation(line: 1650, column: 50, scope: !1231)
!6609 = !DILocation(line: 1650, column: 65, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !1231, file: !565, line: 1650, column: 62)
!6611 = !DILocation(line: 1650, column: 82, scope: !6610)
!6612 = !DILocation(line: 1650, column: 62, scope: !6610)
!6613 = !DILocation(line: 1650, column: 92, scope: !6610)
!6614 = !DILocation(line: 1650, column: 62, scope: !1231)
!6615 = !DILocation(line: 1650, column: 62, scope: !6616)
!6616 = !DILexicalBlockFile(scope: !1231, file: !565, discriminator: 2)
!6617 = !DILocation(line: 1650, column: 123, scope: !6618)
!6618 = !DILexicalBlockFile(scope: !6610, file: !565, discriminator: 3)
!6619 = !DILocation(line: 1650, column: 141, scope: !6610)
!6620 = !DILocation(line: 1650, column: 151, scope: !6610)
!6621 = !DILocation(line: 1650, column: 176, scope: !6610)
!6622 = !DILocation(line: 1650, column: 107, scope: !6610)
!6623 = !DILocation(line: 1650, column: 195, scope: !6624)
!6624 = !DILexicalBlockFile(scope: !1211, file: !565, discriminator: 4)
!6625 = !DILocation(line: 1650, column: 195, scope: !1231)
!6626 = !DILocation(line: 1650, column: 195, scope: !6627)
!6627 = !DILexicalBlockFile(scope: !1231, file: !565, discriminator: 5)
!6628 = !DILocation(line: 1652, column: 58, scope: !1211)
!6629 = !DILocation(line: 1652, column: 5, scope: !1211)
!6630 = !DILocation(line: 1653, column: 1, scope: !1211)
!6631 = !DILocation(line: 1570, column: 52, scope: !1187)
!6632 = !DILocation(line: 1571, column: 33, scope: !1187)
!6633 = !DILocation(line: 1573, column: 5, scope: !1187)
!6634 = !DILocation(line: 1573, column: 15, scope: !1187)
!6635 = !DILocation(line: 1573, column: 21, scope: !1187)
!6636 = !DILocation(line: 1575, column: 72, scope: !1187)
!6637 = !DILocation(line: 1575, column: 36, scope: !1187)
!6638 = !DILocation(line: 1575, column: 80, scope: !1187)
!6639 = !DILocation(line: 1575, column: 11, scope: !1187)
!6640 = !DILocation(line: 1575, column: 9, scope: !1187)
!6641 = !DILocation(line: 1576, column: 9, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !1187, file: !565, line: 1576, column: 9)
!6643 = !DILocation(line: 1576, column: 13, scope: !6642)
!6644 = !DILocation(line: 1576, column: 9, scope: !1187)
!6645 = !DILocation(line: 1577, column: 9, scope: !6642)
!6646 = !DILocation(line: 1579, column: 39, scope: !1187)
!6647 = !DILocation(line: 1579, column: 45, scope: !1187)
!6648 = !DILocation(line: 1579, column: 71, scope: !1187)
!6649 = !DILocation(line: 1579, column: 10, scope: !1187)
!6650 = !DILocation(line: 1579, column: 8, scope: !1187)
!6651 = !DILocation(line: 1580, column: 5, scope: !1187)
!6652 = !DILocation(line: 1580, column: 10, scope: !6653)
!6653 = !DILexicalBlockFile(scope: !1196, file: !565, discriminator: 1)
!6654 = !DILocation(line: 1580, column: 20, scope: !1196)
!6655 = !DILocation(line: 1580, column: 50, scope: !1196)
!6656 = !DILocation(line: 1580, column: 64, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !1196, file: !565, line: 1580, column: 61)
!6658 = !DILocation(line: 1580, column: 81, scope: !6657)
!6659 = !DILocation(line: 1580, column: 61, scope: !6657)
!6660 = !DILocation(line: 1580, column: 91, scope: !6657)
!6661 = !DILocation(line: 1580, column: 61, scope: !1196)
!6662 = !DILocation(line: 1580, column: 61, scope: !6663)
!6663 = !DILexicalBlockFile(scope: !1196, file: !565, discriminator: 2)
!6664 = !DILocation(line: 1580, column: 122, scope: !6665)
!6665 = !DILexicalBlockFile(scope: !6657, file: !565, discriminator: 3)
!6666 = !DILocation(line: 1580, column: 140, scope: !6657)
!6667 = !DILocation(line: 1580, column: 150, scope: !6657)
!6668 = !DILocation(line: 1580, column: 175, scope: !6657)
!6669 = !DILocation(line: 1580, column: 106, scope: !6657)
!6670 = !DILocation(line: 1580, column: 194, scope: !6671)
!6671 = !DILexicalBlockFile(scope: !1187, file: !565, discriminator: 4)
!6672 = !DILocation(line: 1580, column: 194, scope: !1196)
!6673 = !DILocation(line: 1580, column: 194, scope: !6674)
!6674 = !DILexicalBlockFile(scope: !1196, file: !565, discriminator: 5)
!6675 = !DILocation(line: 1581, column: 9, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !1187, file: !565, line: 1581, column: 9)
!6677 = !DILocation(line: 1581, column: 12, scope: !6676)
!6678 = !DILocation(line: 1581, column: 9, scope: !1187)
!6679 = !DILocation(line: 1582, column: 9, scope: !6676)
!6680 = !DILocation(line: 1584, column: 5, scope: !1187)
!6681 = !DILocation(line: 1584, column: 10, scope: !6682)
!6682 = !DILexicalBlockFile(scope: !1198, file: !565, discriminator: 1)
!6683 = !DILocation(line: 1584, column: 20, scope: !1198)
!6684 = !DILocation(line: 1584, column: 50, scope: !1198)
!6685 = !DILocation(line: 1584, column: 63, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !1198, file: !565, line: 1584, column: 60)
!6687 = !DILocation(line: 1584, column: 80, scope: !6686)
!6688 = !DILocation(line: 1584, column: 60, scope: !6686)
!6689 = !DILocation(line: 1584, column: 90, scope: !6686)
!6690 = !DILocation(line: 1584, column: 60, scope: !1198)
!6691 = !DILocation(line: 1584, column: 60, scope: !6692)
!6692 = !DILexicalBlockFile(scope: !1198, file: !565, discriminator: 2)
!6693 = !DILocation(line: 1584, column: 121, scope: !6694)
!6694 = !DILexicalBlockFile(scope: !6686, file: !565, discriminator: 3)
!6695 = !DILocation(line: 1584, column: 139, scope: !6686)
!6696 = !DILocation(line: 1584, column: 149, scope: !6686)
!6697 = !DILocation(line: 1584, column: 174, scope: !6686)
!6698 = !DILocation(line: 1584, column: 105, scope: !6686)
!6699 = !DILocation(line: 1584, column: 193, scope: !6671)
!6700 = !DILocation(line: 1584, column: 193, scope: !1198)
!6701 = !DILocation(line: 1584, column: 193, scope: !6702)
!6702 = !DILexicalBlockFile(scope: !1198, file: !565, discriminator: 5)
!6703 = !DILocation(line: 1585, column: 5, scope: !1187)
!6704 = !DILocation(line: 1586, column: 1, scope: !1187)
!6705 = !DILocation(line: 693, column: 46, scope: !1258)
!6706 = !DILocation(line: 695, column: 19, scope: !1258)
!6707 = !DILocation(line: 695, column: 5, scope: !1258)
!6708 = !DILocation(line: 696, column: 1, scope: !1258)
!6709 = !DILocation(line: 554, column: 45, scope: !1263)
!6710 = !DILocation(line: 555, column: 33, scope: !1263)
!6711 = !DILocation(line: 555, column: 49, scope: !1263)
!6712 = !DILocation(line: 557, column: 5, scope: !1263)
!6713 = !DILocation(line: 557, column: 26, scope: !1263)
!6714 = !DILocation(line: 558, column: 5, scope: !1263)
!6715 = !DILocation(line: 558, column: 15, scope: !1263)
!6716 = !DILocation(line: 558, column: 25, scope: !1263)
!6717 = !DILocation(line: 558, column: 29, scope: !1263)
!6718 = !DILocation(line: 558, column: 35, scope: !1263)
!6719 = !DILocation(line: 559, column: 5, scope: !1263)
!6720 = !DILocation(line: 559, column: 17, scope: !1263)
!6721 = !DILocation(line: 560, column: 5, scope: !1263)
!6722 = !DILocation(line: 560, column: 16, scope: !1263)
!6723 = !DILocation(line: 562, column: 45, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !1263, file: !565, line: 562, column: 9)
!6725 = !DILocation(line: 562, column: 51, scope: !6724)
!6726 = !DILocation(line: 562, column: 10, scope: !6724)
!6727 = !DILocation(line: 562, column: 9, scope: !1263)
!6728 = !DILocation(line: 564, column: 9, scope: !6724)
!6729 = !DILocation(line: 566, column: 26, scope: !1283)
!6730 = !DILocation(line: 566, column: 33, scope: !1283)
!6731 = !DILocation(line: 566, column: 44, scope: !1283)
!6732 = !DILocation(line: 566, column: 53, scope: !1283)
!6733 = !DILocation(line: 566, column: 70, scope: !1283)
!6734 = !DILocation(line: 566, column: 9, scope: !1263)
!6735 = !DILocation(line: 567, column: 14, scope: !1283)
!6736 = !DILocation(line: 567, column: 9, scope: !1283)
!6737 = !DILocation(line: 569, column: 35, scope: !1282)
!6738 = !DILocation(line: 569, column: 22, scope: !1282)
!6739 = !DILocation(line: 569, column: 20, scope: !1282)
!6740 = !DILocation(line: 569, column: 13, scope: !1282)
!6741 = !DILocation(line: 570, column: 13, scope: !1281)
!6742 = !DILocation(line: 570, column: 17, scope: !1281)
!6743 = !DILocation(line: 570, column: 13, scope: !1282)
!6744 = !DILocation(line: 571, column: 13, scope: !1281)
!6745 = !DILocation(line: 572, column: 36, scope: !1280)
!6746 = !DILocation(line: 572, column: 43, scope: !1280)
!6747 = !DILocation(line: 572, column: 54, scope: !1280)
!6748 = !DILocation(line: 572, column: 63, scope: !1280)
!6749 = !DILocation(line: 572, column: 80, scope: !1280)
!6750 = !DILocation(line: 572, column: 18, scope: !1281)
!6751 = !DILocation(line: 573, column: 29, scope: !1279)
!6752 = !DILocation(line: 573, column: 13, scope: !1279)
!6753 = !DILocation(line: 575, column: 13, scope: !1279)
!6754 = !DILocation(line: 575, column: 18, scope: !6755)
!6755 = !DILexicalBlockFile(scope: !1278, file: !565, discriminator: 1)
!6756 = !DILocation(line: 575, column: 28, scope: !1278)
!6757 = !DILocation(line: 575, column: 58, scope: !1278)
!6758 = !DILocation(line: 575, column: 73, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !1278, file: !565, line: 575, column: 70)
!6760 = !DILocation(line: 575, column: 90, scope: !6759)
!6761 = !DILocation(line: 575, column: 70, scope: !6759)
!6762 = !DILocation(line: 575, column: 100, scope: !6759)
!6763 = !DILocation(line: 575, column: 70, scope: !1278)
!6764 = !DILocation(line: 575, column: 70, scope: !6765)
!6765 = !DILexicalBlockFile(scope: !1278, file: !565, discriminator: 2)
!6766 = !DILocation(line: 575, column: 131, scope: !6767)
!6767 = !DILexicalBlockFile(scope: !6759, file: !565, discriminator: 3)
!6768 = !DILocation(line: 575, column: 149, scope: !6759)
!6769 = !DILocation(line: 575, column: 159, scope: !6759)
!6770 = !DILocation(line: 575, column: 184, scope: !6759)
!6771 = !DILocation(line: 575, column: 115, scope: !6759)
!6772 = !DILocation(line: 575, column: 203, scope: !6773)
!6773 = !DILexicalBlockFile(scope: !1279, file: !565, discriminator: 4)
!6774 = !DILocation(line: 575, column: 203, scope: !1278)
!6775 = !DILocation(line: 575, column: 203, scope: !6776)
!6776 = !DILexicalBlockFile(scope: !1278, file: !565, discriminator: 5)
!6777 = !DILocation(line: 576, column: 13, scope: !1279)
!6778 = !DILocation(line: 580, column: 43, scope: !1287)
!6779 = !DILocation(line: 580, column: 27, scope: !1287)
!6780 = !DILocation(line: 580, column: 49, scope: !1287)
!6781 = !DILocation(line: 580, column: 55, scope: !1287)
!6782 = !DILocation(line: 580, column: 25, scope: !1287)
!6783 = !DILocation(line: 580, column: 25, scope: !6784)
!6784 = !DILexicalBlockFile(scope: !1287, file: !565, discriminator: 1)
!6785 = !DILocation(line: 580, column: 98, scope: !6786)
!6786 = !DILexicalBlockFile(scope: !1287, file: !565, discriminator: 2)
!6787 = !DILocation(line: 580, column: 68, scope: !1287)
!6788 = !DILocation(line: 580, column: 106, scope: !6789)
!6789 = !DILexicalBlockFile(scope: !6790, file: !565, discriminator: 4)
!6790 = !DILexicalBlockFile(scope: !1287, file: !565, discriminator: 3)
!6791 = !DILocation(line: 580, column: 9, scope: !1263)
!6792 = !DILocation(line: 581, column: 9, scope: !1286)
!6793 = !DILocation(line: 581, column: 14, scope: !6794)
!6794 = !DILexicalBlockFile(scope: !1285, file: !565, discriminator: 1)
!6795 = !DILocation(line: 581, column: 24, scope: !1285)
!6796 = !DILocation(line: 581, column: 55, scope: !1285)
!6797 = !DILocation(line: 581, column: 66, scope: !1290)
!6798 = !DILocation(line: 581, column: 82, scope: !1290)
!6799 = !DILocation(line: 581, column: 66, scope: !1285)
!6800 = !DILocation(line: 581, column: 97, scope: !6801)
!6801 = !DILexicalBlockFile(scope: !1290, file: !565, discriminator: 2)
!6802 = !DILocation(line: 581, column: 102, scope: !6803)
!6803 = !DILexicalBlockFile(scope: !1289, file: !565, discriminator: 4)
!6804 = !DILocation(line: 581, column: 112, scope: !1289)
!6805 = !DILocation(line: 581, column: 142, scope: !1289)
!6806 = !DILocation(line: 581, column: 168, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !1289, file: !565, line: 581, column: 165)
!6808 = !DILocation(line: 581, column: 185, scope: !6807)
!6809 = !DILocation(line: 581, column: 165, scope: !6807)
!6810 = !DILocation(line: 581, column: 195, scope: !6807)
!6811 = !DILocation(line: 581, column: 165, scope: !1289)
!6812 = !DILocation(line: 581, column: 165, scope: !6813)
!6813 = !DILexicalBlockFile(scope: !1289, file: !565, discriminator: 5)
!6814 = !DILocation(line: 581, column: 226, scope: !6815)
!6815 = !DILexicalBlockFile(scope: !6807, file: !565, discriminator: 6)
!6816 = !DILocation(line: 581, column: 244, scope: !6807)
!6817 = !DILocation(line: 581, column: 254, scope: !6807)
!6818 = !DILocation(line: 581, column: 279, scope: !6807)
!6819 = !DILocation(line: 581, column: 210, scope: !6807)
!6820 = !DILocation(line: 581, column: 298, scope: !6821)
!6821 = !DILexicalBlockFile(scope: !1290, file: !565, discriminator: 7)
!6822 = !DILocation(line: 581, column: 298, scope: !1289)
!6823 = !DILocation(line: 581, column: 298, scope: !6824)
!6824 = !DILexicalBlockFile(scope: !1289, file: !565, discriminator: 8)
!6825 = !DILocation(line: 581, column: 298, scope: !6826)
!6826 = !DILexicalBlockFile(scope: !1289, file: !565, discriminator: 9)
!6827 = !DILocation(line: 581, column: 311, scope: !6828)
!6828 = !DILexicalBlockFile(scope: !6829, file: !565, discriminator: 10)
!6829 = !DILexicalBlockFile(scope: !1286, file: !565, discriminator: 3)
!6830 = !DILocation(line: 581, column: 311, scope: !1285)
!6831 = !DILocation(line: 581, column: 311, scope: !6832)
!6832 = !DILexicalBlockFile(scope: !1285, file: !565, discriminator: 11)
!6833 = !DILocation(line: 582, column: 9, scope: !1286)
!6834 = !DILocation(line: 584, column: 63, scope: !1263)
!6835 = !DILocation(line: 584, column: 45, scope: !1263)
!6836 = !DILocation(line: 584, column: 70, scope: !1263)
!6837 = !DILocation(line: 584, column: 13, scope: !1263)
!6838 = !DILocation(line: 586, column: 39, scope: !1263)
!6839 = !DILocation(line: 586, column: 15, scope: !1263)
!6840 = !DILocation(line: 586, column: 13, scope: !1263)
!6841 = !DILocation(line: 587, column: 9, scope: !1294)
!6842 = !DILocation(line: 587, column: 17, scope: !1294)
!6843 = !DILocation(line: 587, column: 9, scope: !1263)
!6844 = !DILocation(line: 588, column: 9, scope: !1293)
!6845 = !DILocation(line: 588, column: 14, scope: !6846)
!6846 = !DILexicalBlockFile(scope: !1292, file: !565, discriminator: 1)
!6847 = !DILocation(line: 588, column: 24, scope: !1292)
!6848 = !DILocation(line: 588, column: 55, scope: !1292)
!6849 = !DILocation(line: 588, column: 66, scope: !1297)
!6850 = !DILocation(line: 588, column: 82, scope: !1297)
!6851 = !DILocation(line: 588, column: 66, scope: !1292)
!6852 = !DILocation(line: 588, column: 97, scope: !6853)
!6853 = !DILexicalBlockFile(scope: !1297, file: !565, discriminator: 2)
!6854 = !DILocation(line: 588, column: 102, scope: !6855)
!6855 = !DILexicalBlockFile(scope: !1296, file: !565, discriminator: 4)
!6856 = !DILocation(line: 588, column: 112, scope: !1296)
!6857 = !DILocation(line: 588, column: 142, scope: !1296)
!6858 = !DILocation(line: 588, column: 168, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !1296, file: !565, line: 588, column: 165)
!6860 = !DILocation(line: 588, column: 185, scope: !6859)
!6861 = !DILocation(line: 588, column: 165, scope: !6859)
!6862 = !DILocation(line: 588, column: 195, scope: !6859)
!6863 = !DILocation(line: 588, column: 165, scope: !1296)
!6864 = !DILocation(line: 588, column: 165, scope: !6865)
!6865 = !DILexicalBlockFile(scope: !1296, file: !565, discriminator: 5)
!6866 = !DILocation(line: 588, column: 226, scope: !6867)
!6867 = !DILexicalBlockFile(scope: !6859, file: !565, discriminator: 6)
!6868 = !DILocation(line: 588, column: 244, scope: !6859)
!6869 = !DILocation(line: 588, column: 254, scope: !6859)
!6870 = !DILocation(line: 588, column: 279, scope: !6859)
!6871 = !DILocation(line: 588, column: 210, scope: !6859)
!6872 = !DILocation(line: 588, column: 298, scope: !6873)
!6873 = !DILexicalBlockFile(scope: !1297, file: !565, discriminator: 7)
!6874 = !DILocation(line: 588, column: 298, scope: !1296)
!6875 = !DILocation(line: 588, column: 298, scope: !6876)
!6876 = !DILexicalBlockFile(scope: !1296, file: !565, discriminator: 8)
!6877 = !DILocation(line: 588, column: 298, scope: !6878)
!6878 = !DILexicalBlockFile(scope: !1296, file: !565, discriminator: 9)
!6879 = !DILocation(line: 588, column: 311, scope: !6880)
!6880 = !DILexicalBlockFile(scope: !6881, file: !565, discriminator: 10)
!6881 = !DILexicalBlockFile(scope: !1293, file: !565, discriminator: 3)
!6882 = !DILocation(line: 588, column: 311, scope: !1292)
!6883 = !DILocation(line: 588, column: 311, scope: !6884)
!6884 = !DILexicalBlockFile(scope: !1292, file: !565, discriminator: 11)
!6885 = !DILocation(line: 589, column: 9, scope: !1293)
!6886 = !DILocation(line: 592, column: 9, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !1263, file: !565, line: 592, column: 9)
!6888 = !DILocation(line: 592, column: 15, scope: !6887)
!6889 = !DILocation(line: 592, column: 22, scope: !6887)
!6890 = !DILocation(line: 592, column: 30, scope: !6887)
!6891 = !DILocation(line: 592, column: 44, scope: !6887)
!6892 = !DILocation(line: 593, column: 9, scope: !6887)
!6893 = !DILocation(line: 593, column: 15, scope: !6887)
!6894 = !DILocation(line: 593, column: 22, scope: !6887)
!6895 = !DILocation(line: 593, column: 38, scope: !6887)
!6896 = !DILocation(line: 593, column: 44, scope: !6887)
!6897 = !DILocation(line: 593, column: 51, scope: !6887)
!6898 = !DILocation(line: 593, column: 59, scope: !6887)
!6899 = !DILocation(line: 592, column: 9, scope: !1263)
!6900 = !DILocation(line: 594, column: 9, scope: !6887)
!6901 = !DILocation(line: 595, column: 31, scope: !1263)
!6902 = !DILocation(line: 595, column: 37, scope: !1263)
!6903 = !DILocation(line: 596, column: 21, scope: !1263)
!6904 = !DILocation(line: 596, column: 38, scope: !1263)
!6905 = !DILocation(line: 595, column: 9, scope: !1263)
!6906 = !DILocation(line: 595, column: 7, scope: !1263)
!6907 = !DILocation(line: 598, column: 9, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !1263, file: !565, line: 598, column: 9)
!6909 = !DILocation(line: 598, column: 11, scope: !6908)
!6910 = !DILocation(line: 598, column: 9, scope: !1263)
!6911 = !DILocation(line: 599, column: 9, scope: !6908)
!6912 = !DILocation(line: 601, column: 5, scope: !1263)
!6913 = !DILocation(line: 601, column: 14, scope: !6914)
!6914 = !DILexicalBlockFile(scope: !1300, file: !565, discriminator: 1)
!6915 = !DILocation(line: 601, column: 22, scope: !1300)
!6916 = !DILocation(line: 601, column: 36, scope: !1300)
!6917 = !DILocation(line: 601, column: 41, scope: !6918)
!6918 = !DILexicalBlockFile(scope: !1300, file: !565, discriminator: 2)
!6919 = !DILocation(line: 601, column: 50, scope: !1300)
!6920 = !DILocation(line: 601, column: 68, scope: !1300)
!6921 = !DILocation(line: 601, column: 90, scope: !6922)
!6922 = !DILexicalBlockFile(scope: !1300, file: !565, discriminator: 5)
!6923 = !DILocation(line: 601, column: 87, scope: !1300)
!6924 = !DILocation(line: 601, column: 14, scope: !1301)
!6925 = !DILocation(line: 601, column: 101, scope: !6926)
!6926 = !DILexicalBlockFile(scope: !6927, file: !565, discriminator: 6)
!6927 = !DILexicalBlockFile(scope: !1300, file: !565, discriminator: 4)
!6928 = !DILocation(line: 601, column: 106, scope: !6929)
!6929 = !DILexicalBlockFile(scope: !1299, file: !565, discriminator: 8)
!6930 = !DILocation(line: 601, column: 116, scope: !1299)
!6931 = !DILocation(line: 601, column: 146, scope: !1299)
!6932 = !DILocation(line: 601, column: 164, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !1299, file: !565, line: 601, column: 161)
!6934 = !DILocation(line: 601, column: 181, scope: !6933)
!6935 = !DILocation(line: 601, column: 161, scope: !6933)
!6936 = !DILocation(line: 601, column: 191, scope: !6933)
!6937 = !DILocation(line: 601, column: 161, scope: !1299)
!6938 = !DILocation(line: 601, column: 161, scope: !6939)
!6939 = !DILexicalBlockFile(scope: !1299, file: !565, discriminator: 9)
!6940 = !DILocation(line: 601, column: 222, scope: !6941)
!6941 = !DILexicalBlockFile(scope: !6933, file: !565, discriminator: 10)
!6942 = !DILocation(line: 601, column: 240, scope: !6933)
!6943 = !DILocation(line: 601, column: 250, scope: !6933)
!6944 = !DILocation(line: 601, column: 275, scope: !6933)
!6945 = !DILocation(line: 601, column: 206, scope: !6933)
!6946 = !DILocation(line: 601, column: 294, scope: !6947)
!6947 = !DILexicalBlockFile(scope: !1300, file: !565, discriminator: 11)
!6948 = !DILocation(line: 601, column: 294, scope: !1299)
!6949 = !DILocation(line: 601, column: 294, scope: !6950)
!6950 = !DILexicalBlockFile(scope: !1299, file: !565, discriminator: 12)
!6951 = !DILocation(line: 601, column: 294, scope: !6952)
!6952 = !DILexicalBlockFile(scope: !1299, file: !565, discriminator: 13)
!6953 = !DILocation(line: 601, column: 307, scope: !6954)
!6954 = !DILexicalBlockFile(scope: !6955, file: !565, discriminator: 14)
!6955 = !DILexicalBlockFile(scope: !6956, file: !565, discriminator: 7)
!6956 = !DILexicalBlockFile(scope: !1301, file: !565, discriminator: 3)
!6957 = !DILocation(line: 601, column: 307, scope: !6958)
!6958 = !DILexicalBlockFile(scope: !1301, file: !565, discriminator: 15)
!6959 = !DILocation(line: 602, column: 5, scope: !1263)
!6960 = !DILocation(line: 602, column: 10, scope: !6961)
!6961 = !DILexicalBlockFile(scope: !1303, file: !565, discriminator: 1)
!6962 = !DILocation(line: 602, column: 20, scope: !1303)
!6963 = !DILocation(line: 602, column: 51, scope: !1303)
!6964 = !DILocation(line: 602, column: 62, scope: !1306)
!6965 = !DILocation(line: 602, column: 78, scope: !1306)
!6966 = !DILocation(line: 602, column: 62, scope: !1303)
!6967 = !DILocation(line: 602, column: 93, scope: !6968)
!6968 = !DILexicalBlockFile(scope: !1306, file: !565, discriminator: 2)
!6969 = !DILocation(line: 602, column: 98, scope: !6970)
!6970 = !DILexicalBlockFile(scope: !1305, file: !565, discriminator: 4)
!6971 = !DILocation(line: 602, column: 108, scope: !1305)
!6972 = !DILocation(line: 602, column: 138, scope: !1305)
!6973 = !DILocation(line: 602, column: 164, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !1305, file: !565, line: 602, column: 161)
!6975 = !DILocation(line: 602, column: 181, scope: !6974)
!6976 = !DILocation(line: 602, column: 161, scope: !6974)
!6977 = !DILocation(line: 602, column: 191, scope: !6974)
!6978 = !DILocation(line: 602, column: 161, scope: !1305)
!6979 = !DILocation(line: 602, column: 161, scope: !6980)
!6980 = !DILexicalBlockFile(scope: !1305, file: !565, discriminator: 5)
!6981 = !DILocation(line: 602, column: 222, scope: !6982)
!6982 = !DILexicalBlockFile(scope: !6974, file: !565, discriminator: 6)
!6983 = !DILocation(line: 602, column: 240, scope: !6974)
!6984 = !DILocation(line: 602, column: 250, scope: !6974)
!6985 = !DILocation(line: 602, column: 275, scope: !6974)
!6986 = !DILocation(line: 602, column: 206, scope: !6974)
!6987 = !DILocation(line: 602, column: 294, scope: !6988)
!6988 = !DILexicalBlockFile(scope: !1306, file: !565, discriminator: 7)
!6989 = !DILocation(line: 602, column: 294, scope: !1305)
!6990 = !DILocation(line: 602, column: 294, scope: !6991)
!6991 = !DILexicalBlockFile(scope: !1305, file: !565, discriminator: 8)
!6992 = !DILocation(line: 602, column: 294, scope: !6993)
!6993 = !DILexicalBlockFile(scope: !1305, file: !565, discriminator: 9)
!6994 = !DILocation(line: 602, column: 307, scope: !6995)
!6995 = !DILexicalBlockFile(scope: !6996, file: !565, discriminator: 10)
!6996 = !DILexicalBlockFile(scope: !1263, file: !565, discriminator: 3)
!6997 = !DILocation(line: 602, column: 307, scope: !1303)
!6998 = !DILocation(line: 602, column: 307, scope: !6999)
!6999 = !DILexicalBlockFile(scope: !1303, file: !565, discriminator: 11)
!7000 = !DILocation(line: 603, column: 23, scope: !1263)
!7001 = !DILocation(line: 603, column: 26, scope: !1263)
!7002 = !DILocation(line: 603, column: 12, scope: !1263)
!7003 = !DILocation(line: 603, column: 5, scope: !1263)
!7004 = !DILocation(line: 606, column: 5, scope: !1263)
!7005 = !DILocation(line: 606, column: 14, scope: !7006)
!7006 = !DILexicalBlockFile(scope: !1309, file: !565, discriminator: 1)
!7007 = !DILocation(line: 606, column: 22, scope: !1309)
!7008 = !DILocation(line: 606, column: 36, scope: !1309)
!7009 = !DILocation(line: 606, column: 41, scope: !7010)
!7010 = !DILexicalBlockFile(scope: !1309, file: !565, discriminator: 2)
!7011 = !DILocation(line: 606, column: 50, scope: !1309)
!7012 = !DILocation(line: 606, column: 68, scope: !1309)
!7013 = !DILocation(line: 606, column: 90, scope: !7014)
!7014 = !DILexicalBlockFile(scope: !1309, file: !565, discriminator: 5)
!7015 = !DILocation(line: 606, column: 87, scope: !1309)
!7016 = !DILocation(line: 606, column: 14, scope: !1310)
!7017 = !DILocation(line: 606, column: 101, scope: !7018)
!7018 = !DILexicalBlockFile(scope: !7019, file: !565, discriminator: 6)
!7019 = !DILexicalBlockFile(scope: !1309, file: !565, discriminator: 4)
!7020 = !DILocation(line: 606, column: 106, scope: !7021)
!7021 = !DILexicalBlockFile(scope: !1308, file: !565, discriminator: 8)
!7022 = !DILocation(line: 606, column: 116, scope: !1308)
!7023 = !DILocation(line: 606, column: 146, scope: !1308)
!7024 = !DILocation(line: 606, column: 164, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !1308, file: !565, line: 606, column: 161)
!7026 = !DILocation(line: 606, column: 181, scope: !7025)
!7027 = !DILocation(line: 606, column: 161, scope: !7025)
!7028 = !DILocation(line: 606, column: 191, scope: !7025)
!7029 = !DILocation(line: 606, column: 161, scope: !1308)
!7030 = !DILocation(line: 606, column: 161, scope: !7031)
!7031 = !DILexicalBlockFile(scope: !1308, file: !565, discriminator: 9)
!7032 = !DILocation(line: 606, column: 222, scope: !7033)
!7033 = !DILexicalBlockFile(scope: !7025, file: !565, discriminator: 10)
!7034 = !DILocation(line: 606, column: 240, scope: !7025)
!7035 = !DILocation(line: 606, column: 250, scope: !7025)
!7036 = !DILocation(line: 606, column: 275, scope: !7025)
!7037 = !DILocation(line: 606, column: 206, scope: !7025)
!7038 = !DILocation(line: 606, column: 294, scope: !7039)
!7039 = !DILexicalBlockFile(scope: !1309, file: !565, discriminator: 11)
!7040 = !DILocation(line: 606, column: 294, scope: !1308)
!7041 = !DILocation(line: 606, column: 294, scope: !7042)
!7042 = !DILexicalBlockFile(scope: !1308, file: !565, discriminator: 12)
!7043 = !DILocation(line: 606, column: 294, scope: !7044)
!7044 = !DILexicalBlockFile(scope: !1308, file: !565, discriminator: 13)
!7045 = !DILocation(line: 606, column: 307, scope: !7046)
!7046 = !DILexicalBlockFile(scope: !7047, file: !565, discriminator: 14)
!7047 = !DILexicalBlockFile(scope: !7048, file: !565, discriminator: 7)
!7048 = !DILexicalBlockFile(scope: !1310, file: !565, discriminator: 3)
!7049 = !DILocation(line: 606, column: 307, scope: !7050)
!7050 = !DILexicalBlockFile(scope: !1310, file: !565, discriminator: 15)
!7051 = !DILocation(line: 607, column: 5, scope: !1263)
!7052 = !DILocation(line: 607, column: 10, scope: !7053)
!7053 = !DILexicalBlockFile(scope: !1312, file: !565, discriminator: 1)
!7054 = !DILocation(line: 607, column: 20, scope: !1312)
!7055 = !DILocation(line: 607, column: 51, scope: !1312)
!7056 = !DILocation(line: 607, column: 62, scope: !1315)
!7057 = !DILocation(line: 607, column: 78, scope: !1315)
!7058 = !DILocation(line: 607, column: 62, scope: !1312)
!7059 = !DILocation(line: 607, column: 93, scope: !7060)
!7060 = !DILexicalBlockFile(scope: !1315, file: !565, discriminator: 2)
!7061 = !DILocation(line: 607, column: 98, scope: !7062)
!7062 = !DILexicalBlockFile(scope: !1314, file: !565, discriminator: 4)
!7063 = !DILocation(line: 607, column: 108, scope: !1314)
!7064 = !DILocation(line: 607, column: 138, scope: !1314)
!7065 = !DILocation(line: 607, column: 164, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !1314, file: !565, line: 607, column: 161)
!7067 = !DILocation(line: 607, column: 181, scope: !7066)
!7068 = !DILocation(line: 607, column: 161, scope: !7066)
!7069 = !DILocation(line: 607, column: 191, scope: !7066)
!7070 = !DILocation(line: 607, column: 161, scope: !1314)
!7071 = !DILocation(line: 607, column: 161, scope: !7072)
!7072 = !DILexicalBlockFile(scope: !1314, file: !565, discriminator: 5)
!7073 = !DILocation(line: 607, column: 222, scope: !7074)
!7074 = !DILexicalBlockFile(scope: !7066, file: !565, discriminator: 6)
!7075 = !DILocation(line: 607, column: 240, scope: !7066)
!7076 = !DILocation(line: 607, column: 250, scope: !7066)
!7077 = !DILocation(line: 607, column: 275, scope: !7066)
!7078 = !DILocation(line: 607, column: 206, scope: !7066)
!7079 = !DILocation(line: 607, column: 294, scope: !7080)
!7080 = !DILexicalBlockFile(scope: !1315, file: !565, discriminator: 7)
!7081 = !DILocation(line: 607, column: 294, scope: !1314)
!7082 = !DILocation(line: 607, column: 294, scope: !7083)
!7083 = !DILexicalBlockFile(scope: !1314, file: !565, discriminator: 8)
!7084 = !DILocation(line: 607, column: 294, scope: !7085)
!7085 = !DILexicalBlockFile(scope: !1314, file: !565, discriminator: 9)
!7086 = !DILocation(line: 607, column: 307, scope: !6995)
!7087 = !DILocation(line: 607, column: 307, scope: !1312)
!7088 = !DILocation(line: 607, column: 307, scope: !7089)
!7089 = !DILexicalBlockFile(scope: !1312, file: !565, discriminator: 11)
!7090 = !DILocation(line: 608, column: 5, scope: !1263)
!7091 = !DILocation(line: 609, column: 1, scope: !1263)
!7092 = !DILocation(line: 612, column: 45, scope: !1330)
!7093 = !DILocation(line: 613, column: 33, scope: !1330)
!7094 = !DILocation(line: 613, column: 49, scope: !1330)
!7095 = !DILocation(line: 615, column: 5, scope: !1330)
!7096 = !DILocation(line: 615, column: 26, scope: !1330)
!7097 = !DILocation(line: 616, column: 5, scope: !1330)
!7098 = !DILocation(line: 616, column: 27, scope: !1330)
!7099 = !DILocation(line: 617, column: 5, scope: !1330)
!7100 = !DILocation(line: 617, column: 15, scope: !1330)
!7101 = !DILocation(line: 617, column: 25, scope: !1330)
!7102 = !DILocation(line: 618, column: 5, scope: !1330)
!7103 = !DILocation(line: 618, column: 15, scope: !1330)
!7104 = !DILocation(line: 619, column: 5, scope: !1330)
!7105 = !DILocation(line: 619, column: 17, scope: !1330)
!7106 = !DILocation(line: 619, column: 24, scope: !1330)
!7107 = !DILocation(line: 620, column: 5, scope: !1330)
!7108 = !DILocation(line: 620, column: 16, scope: !1330)
!7109 = !DILocation(line: 622, column: 45, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !1330, file: !565, line: 622, column: 9)
!7111 = !DILocation(line: 622, column: 51, scope: !7110)
!7112 = !DILocation(line: 622, column: 10, scope: !7110)
!7113 = !DILocation(line: 622, column: 9, scope: !1330)
!7114 = !DILocation(line: 624, column: 9, scope: !7110)
!7115 = !DILocation(line: 625, column: 18, scope: !1330)
!7116 = !DILocation(line: 625, column: 10, scope: !1330)
!7117 = !DILocation(line: 626, column: 21, scope: !1330)
!7118 = !DILocation(line: 626, column: 13, scope: !1330)
!7119 = !DILocation(line: 628, column: 39, scope: !1330)
!7120 = !DILocation(line: 628, column: 15, scope: !1330)
!7121 = !DILocation(line: 628, column: 13, scope: !1330)
!7122 = !DILocation(line: 629, column: 9, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !1330, file: !565, line: 629, column: 9)
!7124 = !DILocation(line: 629, column: 17, scope: !7123)
!7125 = !DILocation(line: 629, column: 9, scope: !1330)
!7126 = !DILocation(line: 630, column: 9, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7123, file: !565, line: 629, column: 32)
!7128 = !DILocation(line: 631, column: 9, scope: !7127)
!7129 = !DILocation(line: 634, column: 9, scope: !1348)
!7130 = !DILocation(line: 634, column: 17, scope: !1348)
!7131 = !DILocation(line: 634, column: 9, scope: !1330)
!7132 = !DILocation(line: 635, column: 9, scope: !1347)
!7133 = !DILocation(line: 636, column: 9, scope: !1347)
!7134 = !DILocation(line: 636, column: 18, scope: !7135)
!7135 = !DILexicalBlockFile(scope: !1345, file: !565, discriminator: 1)
!7136 = !DILocation(line: 636, column: 26, scope: !1345)
!7137 = !DILocation(line: 636, column: 40, scope: !1345)
!7138 = !DILocation(line: 636, column: 45, scope: !7139)
!7139 = !DILexicalBlockFile(scope: !1345, file: !565, discriminator: 2)
!7140 = !DILocation(line: 636, column: 54, scope: !1345)
!7141 = !DILocation(line: 636, column: 72, scope: !1345)
!7142 = !DILocation(line: 636, column: 94, scope: !7143)
!7143 = !DILexicalBlockFile(scope: !1345, file: !565, discriminator: 5)
!7144 = !DILocation(line: 636, column: 91, scope: !1345)
!7145 = !DILocation(line: 636, column: 18, scope: !1346)
!7146 = !DILocation(line: 636, column: 105, scope: !7147)
!7147 = !DILexicalBlockFile(scope: !7148, file: !565, discriminator: 6)
!7148 = !DILexicalBlockFile(scope: !1345, file: !565, discriminator: 4)
!7149 = !DILocation(line: 636, column: 110, scope: !7150)
!7150 = !DILexicalBlockFile(scope: !1344, file: !565, discriminator: 8)
!7151 = !DILocation(line: 636, column: 120, scope: !1344)
!7152 = !DILocation(line: 636, column: 150, scope: !1344)
!7153 = !DILocation(line: 636, column: 168, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !1344, file: !565, line: 636, column: 165)
!7155 = !DILocation(line: 636, column: 185, scope: !7154)
!7156 = !DILocation(line: 636, column: 165, scope: !7154)
!7157 = !DILocation(line: 636, column: 195, scope: !7154)
!7158 = !DILocation(line: 636, column: 165, scope: !1344)
!7159 = !DILocation(line: 636, column: 165, scope: !7160)
!7160 = !DILexicalBlockFile(scope: !1344, file: !565, discriminator: 9)
!7161 = !DILocation(line: 636, column: 226, scope: !7162)
!7162 = !DILexicalBlockFile(scope: !7154, file: !565, discriminator: 10)
!7163 = !DILocation(line: 636, column: 244, scope: !7154)
!7164 = !DILocation(line: 636, column: 254, scope: !7154)
!7165 = !DILocation(line: 636, column: 279, scope: !7154)
!7166 = !DILocation(line: 636, column: 210, scope: !7154)
!7167 = !DILocation(line: 636, column: 298, scope: !7168)
!7168 = !DILexicalBlockFile(scope: !1345, file: !565, discriminator: 11)
!7169 = !DILocation(line: 636, column: 298, scope: !1344)
!7170 = !DILocation(line: 636, column: 298, scope: !7171)
!7171 = !DILexicalBlockFile(scope: !1344, file: !565, discriminator: 12)
!7172 = !DILocation(line: 636, column: 298, scope: !7173)
!7173 = !DILexicalBlockFile(scope: !1344, file: !565, discriminator: 13)
!7174 = !DILocation(line: 636, column: 311, scope: !7175)
!7175 = !DILexicalBlockFile(scope: !7176, file: !565, discriminator: 14)
!7176 = !DILexicalBlockFile(scope: !7177, file: !565, discriminator: 7)
!7177 = !DILexicalBlockFile(scope: !1346, file: !565, discriminator: 3)
!7178 = !DILocation(line: 636, column: 311, scope: !7179)
!7179 = !DILexicalBlockFile(scope: !1346, file: !565, discriminator: 15)
!7180 = !DILocation(line: 637, column: 27, scope: !1347)
!7181 = !DILocation(line: 637, column: 16, scope: !1347)
!7182 = !DILocation(line: 637, column: 9, scope: !1347)
!7183 = !DILocation(line: 640, column: 32, scope: !1330)
!7184 = !DILocation(line: 640, column: 5, scope: !1330)
!7185 = !DILocation(line: 641, column: 29, scope: !1330)
!7186 = !DILocation(line: 641, column: 9, scope: !1330)
!7187 = !DILocation(line: 641, column: 16, scope: !1330)
!7188 = !DILocation(line: 641, column: 27, scope: !1330)
!7189 = !DILocation(line: 642, column: 9, scope: !1330)
!7190 = !DILocation(line: 642, column: 16, scope: !1330)
!7191 = !DILocation(line: 643, column: 50, scope: !1330)
!7192 = !DILocation(line: 643, column: 21, scope: !1330)
!7193 = !DILocation(line: 643, column: 31, scope: !1330)
!7194 = !DILocation(line: 643, column: 9, scope: !1330)
!7195 = !DILocation(line: 643, column: 15, scope: !1330)
!7196 = !DILocation(line: 644, column: 25, scope: !1330)
!7197 = !DILocation(line: 644, column: 37, scope: !1330)
!7198 = !DILocation(line: 644, column: 35, scope: !1330)
!7199 = !DILocation(line: 644, column: 9, scope: !1330)
!7200 = !DILocation(line: 644, column: 19, scope: !1330)
!7201 = !DILocation(line: 646, column: 9, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !1330, file: !565, line: 646, column: 9)
!7203 = !DILocation(line: 646, column: 15, scope: !7202)
!7204 = !DILocation(line: 646, column: 22, scope: !7202)
!7205 = !DILocation(line: 646, column: 30, scope: !7202)
!7206 = !DILocation(line: 646, column: 44, scope: !7202)
!7207 = !DILocation(line: 647, column: 9, scope: !7202)
!7208 = !DILocation(line: 647, column: 15, scope: !7202)
!7209 = !DILocation(line: 647, column: 22, scope: !7202)
!7210 = !DILocation(line: 647, column: 38, scope: !7202)
!7211 = !DILocation(line: 647, column: 44, scope: !7202)
!7212 = !DILocation(line: 647, column: 51, scope: !7202)
!7213 = !DILocation(line: 647, column: 59, scope: !7202)
!7214 = !DILocation(line: 646, column: 9, scope: !1330)
!7215 = !DILocation(line: 648, column: 9, scope: !7202)
!7216 = !DILocation(line: 650, column: 5, scope: !1330)
!7217 = !DILocation(line: 650, column: 16, scope: !7218)
!7218 = !DILexicalBlockFile(scope: !7219, file: !565, discriminator: 2)
!7219 = !DILexicalBlockFile(scope: !1330, file: !565, discriminator: 1)
!7220 = !DILocation(line: 650, column: 28, scope: !1330)
!7221 = !DILocation(line: 650, column: 22, scope: !1330)
!7222 = !DILocation(line: 651, column: 9, scope: !1350)
!7223 = !DILocation(line: 651, column: 20, scope: !1350)
!7224 = !DILocation(line: 651, column: 28, scope: !1350)
!7225 = !DILocation(line: 653, column: 35, scope: !1350)
!7226 = !DILocation(line: 653, column: 51, scope: !1350)
!7227 = !DILocation(line: 653, column: 45, scope: !1350)
!7228 = !DILocation(line: 653, column: 16, scope: !1350)
!7229 = !DILocation(line: 655, column: 13, scope: !1350)
!7230 = !DILocation(line: 655, column: 19, scope: !1350)
!7231 = !DILocation(line: 655, column: 26, scope: !1350)
!7232 = !DILocation(line: 655, column: 41, scope: !1350)
!7233 = !DILocation(line: 655, column: 47, scope: !1350)
!7234 = !DILocation(line: 655, column: 54, scope: !1350)
!7235 = !DILocation(line: 656, column: 30, scope: !1350)
!7236 = !DILocation(line: 656, column: 37, scope: !1350)
!7237 = !DILocation(line: 656, column: 50, scope: !1350)
!7238 = !DILocation(line: 655, column: 11, scope: !1350)
!7239 = !DILocation(line: 657, column: 13, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !1350, file: !565, line: 657, column: 13)
!7241 = !DILocation(line: 657, column: 15, scope: !7240)
!7242 = !DILocation(line: 657, column: 13, scope: !1350)
!7243 = !DILocation(line: 658, column: 13, scope: !7240)
!7244 = !DILocation(line: 659, column: 42, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7240, file: !565, line: 659, column: 18)
!7246 = !DILocation(line: 659, column: 48, scope: !7245)
!7247 = !DILocation(line: 660, column: 48, scope: !7245)
!7248 = !DILocation(line: 660, column: 57, scope: !7245)
!7249 = !DILocation(line: 659, column: 18, scope: !7245)
!7250 = !DILocation(line: 659, column: 18, scope: !7240)
!7251 = !DILocation(line: 661, column: 13, scope: !7245)
!7252 = !DILocation(line: 662, column: 5, scope: !1330)
!7253 = !DILocation(line: 662, column: 5, scope: !7219)
!7254 = !DILocation(line: 664, column: 40, scope: !1330)
!7255 = !DILocation(line: 664, column: 11, scope: !1330)
!7256 = !DILocation(line: 664, column: 9, scope: !1330)
!7257 = !DILocation(line: 665, column: 9, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !1330, file: !565, line: 665, column: 9)
!7259 = !DILocation(line: 665, column: 13, scope: !7258)
!7260 = !DILocation(line: 665, column: 9, scope: !1330)
!7261 = !DILocation(line: 666, column: 9, scope: !7258)
!7262 = !DILocation(line: 668, column: 5, scope: !1330)
!7263 = !DILocation(line: 669, column: 5, scope: !1330)
!7264 = !DILocation(line: 669, column: 10, scope: !7265)
!7265 = !DILexicalBlockFile(scope: !1353, file: !565, discriminator: 1)
!7266 = !DILocation(line: 669, column: 20, scope: !1353)
!7267 = !DILocation(line: 669, column: 55, scope: !1353)
!7268 = !DILocation(line: 669, column: 68, scope: !1356)
!7269 = !DILocation(line: 669, column: 84, scope: !1356)
!7270 = !DILocation(line: 669, column: 68, scope: !1353)
!7271 = !DILocation(line: 669, column: 99, scope: !7272)
!7272 = !DILexicalBlockFile(scope: !1356, file: !565, discriminator: 2)
!7273 = !DILocation(line: 669, column: 104, scope: !7274)
!7274 = !DILexicalBlockFile(scope: !1355, file: !565, discriminator: 4)
!7275 = !DILocation(line: 669, column: 114, scope: !1355)
!7276 = !DILocation(line: 669, column: 144, scope: !1355)
!7277 = !DILocation(line: 669, column: 170, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !1355, file: !565, line: 669, column: 167)
!7279 = !DILocation(line: 669, column: 187, scope: !7278)
!7280 = !DILocation(line: 669, column: 167, scope: !7278)
!7281 = !DILocation(line: 669, column: 197, scope: !7278)
!7282 = !DILocation(line: 669, column: 167, scope: !1355)
!7283 = !DILocation(line: 669, column: 167, scope: !7284)
!7284 = !DILexicalBlockFile(scope: !1355, file: !565, discriminator: 5)
!7285 = !DILocation(line: 669, column: 228, scope: !7286)
!7286 = !DILexicalBlockFile(scope: !7278, file: !565, discriminator: 6)
!7287 = !DILocation(line: 669, column: 246, scope: !7278)
!7288 = !DILocation(line: 669, column: 256, scope: !7278)
!7289 = !DILocation(line: 669, column: 281, scope: !7278)
!7290 = !DILocation(line: 669, column: 212, scope: !7278)
!7291 = !DILocation(line: 669, column: 300, scope: !7292)
!7292 = !DILexicalBlockFile(scope: !1356, file: !565, discriminator: 7)
!7293 = !DILocation(line: 669, column: 300, scope: !1355)
!7294 = !DILocation(line: 669, column: 300, scope: !7295)
!7295 = !DILexicalBlockFile(scope: !1355, file: !565, discriminator: 8)
!7296 = !DILocation(line: 669, column: 300, scope: !7297)
!7297 = !DILexicalBlockFile(scope: !1355, file: !565, discriminator: 9)
!7298 = !DILocation(line: 669, column: 313, scope: !7299)
!7299 = !DILexicalBlockFile(scope: !7300, file: !565, discriminator: 10)
!7300 = !DILexicalBlockFile(scope: !1330, file: !565, discriminator: 3)
!7301 = !DILocation(line: 669, column: 313, scope: !1353)
!7302 = !DILocation(line: 669, column: 313, scope: !7303)
!7303 = !DILexicalBlockFile(scope: !1353, file: !565, discriminator: 11)
!7304 = !DILocation(line: 670, column: 5, scope: !1330)
!7305 = !DILocation(line: 670, column: 14, scope: !7306)
!7306 = !DILexicalBlockFile(scope: !1359, file: !565, discriminator: 1)
!7307 = !DILocation(line: 670, column: 22, scope: !1359)
!7308 = !DILocation(line: 670, column: 36, scope: !1359)
!7309 = !DILocation(line: 670, column: 41, scope: !7310)
!7310 = !DILexicalBlockFile(scope: !1359, file: !565, discriminator: 2)
!7311 = !DILocation(line: 670, column: 50, scope: !1359)
!7312 = !DILocation(line: 670, column: 68, scope: !1359)
!7313 = !DILocation(line: 670, column: 90, scope: !7314)
!7314 = !DILexicalBlockFile(scope: !1359, file: !565, discriminator: 5)
!7315 = !DILocation(line: 670, column: 87, scope: !1359)
!7316 = !DILocation(line: 670, column: 14, scope: !1360)
!7317 = !DILocation(line: 670, column: 101, scope: !7318)
!7318 = !DILexicalBlockFile(scope: !7319, file: !565, discriminator: 6)
!7319 = !DILexicalBlockFile(scope: !1359, file: !565, discriminator: 4)
!7320 = !DILocation(line: 670, column: 106, scope: !7321)
!7321 = !DILexicalBlockFile(scope: !1358, file: !565, discriminator: 8)
!7322 = !DILocation(line: 670, column: 116, scope: !1358)
!7323 = !DILocation(line: 670, column: 146, scope: !1358)
!7324 = !DILocation(line: 670, column: 164, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !1358, file: !565, line: 670, column: 161)
!7326 = !DILocation(line: 670, column: 181, scope: !7325)
!7327 = !DILocation(line: 670, column: 161, scope: !7325)
!7328 = !DILocation(line: 670, column: 191, scope: !7325)
!7329 = !DILocation(line: 670, column: 161, scope: !1358)
!7330 = !DILocation(line: 670, column: 161, scope: !7331)
!7331 = !DILexicalBlockFile(scope: !1358, file: !565, discriminator: 9)
!7332 = !DILocation(line: 670, column: 222, scope: !7333)
!7333 = !DILexicalBlockFile(scope: !7325, file: !565, discriminator: 10)
!7334 = !DILocation(line: 670, column: 240, scope: !7325)
!7335 = !DILocation(line: 670, column: 250, scope: !7325)
!7336 = !DILocation(line: 670, column: 275, scope: !7325)
!7337 = !DILocation(line: 670, column: 206, scope: !7325)
!7338 = !DILocation(line: 670, column: 294, scope: !7339)
!7339 = !DILexicalBlockFile(scope: !1359, file: !565, discriminator: 11)
!7340 = !DILocation(line: 670, column: 294, scope: !1358)
!7341 = !DILocation(line: 670, column: 294, scope: !7342)
!7342 = !DILexicalBlockFile(scope: !1358, file: !565, discriminator: 12)
!7343 = !DILocation(line: 670, column: 294, scope: !7344)
!7344 = !DILexicalBlockFile(scope: !1358, file: !565, discriminator: 13)
!7345 = !DILocation(line: 670, column: 307, scope: !7346)
!7346 = !DILexicalBlockFile(scope: !7347, file: !565, discriminator: 14)
!7347 = !DILexicalBlockFile(scope: !7348, file: !565, discriminator: 7)
!7348 = !DILexicalBlockFile(scope: !1360, file: !565, discriminator: 3)
!7349 = !DILocation(line: 670, column: 307, scope: !7350)
!7350 = !DILexicalBlockFile(scope: !1360, file: !565, discriminator: 15)
!7351 = !DILocation(line: 671, column: 23, scope: !1330)
!7352 = !DILocation(line: 671, column: 28, scope: !1330)
!7353 = !DILocation(line: 671, column: 12, scope: !1330)
!7354 = !DILocation(line: 671, column: 5, scope: !1330)
!7355 = !DILocation(line: 674, column: 5, scope: !1330)
!7356 = !DILocation(line: 675, column: 5, scope: !1330)
!7357 = !DILocation(line: 675, column: 14, scope: !7358)
!7358 = !DILexicalBlockFile(scope: !1363, file: !565, discriminator: 1)
!7359 = !DILocation(line: 675, column: 22, scope: !1363)
!7360 = !DILocation(line: 675, column: 36, scope: !1363)
!7361 = !DILocation(line: 675, column: 41, scope: !7362)
!7362 = !DILexicalBlockFile(scope: !1363, file: !565, discriminator: 2)
!7363 = !DILocation(line: 675, column: 50, scope: !1363)
!7364 = !DILocation(line: 675, column: 68, scope: !1363)
!7365 = !DILocation(line: 675, column: 90, scope: !7366)
!7366 = !DILexicalBlockFile(scope: !1363, file: !565, discriminator: 5)
!7367 = !DILocation(line: 675, column: 87, scope: !1363)
!7368 = !DILocation(line: 675, column: 14, scope: !1364)
!7369 = !DILocation(line: 675, column: 101, scope: !7370)
!7370 = !DILexicalBlockFile(scope: !7371, file: !565, discriminator: 6)
!7371 = !DILexicalBlockFile(scope: !1363, file: !565, discriminator: 4)
!7372 = !DILocation(line: 675, column: 106, scope: !7373)
!7373 = !DILexicalBlockFile(scope: !1362, file: !565, discriminator: 8)
!7374 = !DILocation(line: 675, column: 116, scope: !1362)
!7375 = !DILocation(line: 675, column: 146, scope: !1362)
!7376 = !DILocation(line: 675, column: 164, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !1362, file: !565, line: 675, column: 161)
!7378 = !DILocation(line: 675, column: 181, scope: !7377)
!7379 = !DILocation(line: 675, column: 161, scope: !7377)
!7380 = !DILocation(line: 675, column: 191, scope: !7377)
!7381 = !DILocation(line: 675, column: 161, scope: !1362)
!7382 = !DILocation(line: 675, column: 161, scope: !7383)
!7383 = !DILexicalBlockFile(scope: !1362, file: !565, discriminator: 9)
!7384 = !DILocation(line: 675, column: 222, scope: !7385)
!7385 = !DILexicalBlockFile(scope: !7377, file: !565, discriminator: 10)
!7386 = !DILocation(line: 675, column: 240, scope: !7377)
!7387 = !DILocation(line: 675, column: 250, scope: !7377)
!7388 = !DILocation(line: 675, column: 275, scope: !7377)
!7389 = !DILocation(line: 675, column: 206, scope: !7377)
!7390 = !DILocation(line: 675, column: 294, scope: !7391)
!7391 = !DILexicalBlockFile(scope: !1363, file: !565, discriminator: 11)
!7392 = !DILocation(line: 675, column: 294, scope: !1362)
!7393 = !DILocation(line: 675, column: 294, scope: !7394)
!7394 = !DILexicalBlockFile(scope: !1362, file: !565, discriminator: 12)
!7395 = !DILocation(line: 675, column: 294, scope: !7396)
!7396 = !DILexicalBlockFile(scope: !1362, file: !565, discriminator: 13)
!7397 = !DILocation(line: 675, column: 307, scope: !7398)
!7398 = !DILexicalBlockFile(scope: !7399, file: !565, discriminator: 14)
!7399 = !DILexicalBlockFile(scope: !7400, file: !565, discriminator: 7)
!7400 = !DILexicalBlockFile(scope: !1364, file: !565, discriminator: 3)
!7401 = !DILocation(line: 675, column: 307, scope: !7402)
!7402 = !DILexicalBlockFile(scope: !1364, file: !565, discriminator: 15)
!7403 = !DILocation(line: 676, column: 5, scope: !1330)
!7404 = !DILocation(line: 676, column: 10, scope: !7405)
!7405 = !DILexicalBlockFile(scope: !1366, file: !565, discriminator: 1)
!7406 = !DILocation(line: 676, column: 20, scope: !1366)
!7407 = !DILocation(line: 676, column: 55, scope: !1366)
!7408 = !DILocation(line: 676, column: 68, scope: !1369)
!7409 = !DILocation(line: 676, column: 84, scope: !1369)
!7410 = !DILocation(line: 676, column: 68, scope: !1366)
!7411 = !DILocation(line: 676, column: 99, scope: !7412)
!7412 = !DILexicalBlockFile(scope: !1369, file: !565, discriminator: 2)
!7413 = !DILocation(line: 676, column: 104, scope: !7414)
!7414 = !DILexicalBlockFile(scope: !1368, file: !565, discriminator: 4)
!7415 = !DILocation(line: 676, column: 114, scope: !1368)
!7416 = !DILocation(line: 676, column: 144, scope: !1368)
!7417 = !DILocation(line: 676, column: 170, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !1368, file: !565, line: 676, column: 167)
!7419 = !DILocation(line: 676, column: 187, scope: !7418)
!7420 = !DILocation(line: 676, column: 167, scope: !7418)
!7421 = !DILocation(line: 676, column: 197, scope: !7418)
!7422 = !DILocation(line: 676, column: 167, scope: !1368)
!7423 = !DILocation(line: 676, column: 167, scope: !7424)
!7424 = !DILexicalBlockFile(scope: !1368, file: !565, discriminator: 5)
!7425 = !DILocation(line: 676, column: 228, scope: !7426)
!7426 = !DILexicalBlockFile(scope: !7418, file: !565, discriminator: 6)
!7427 = !DILocation(line: 676, column: 246, scope: !7418)
!7428 = !DILocation(line: 676, column: 256, scope: !7418)
!7429 = !DILocation(line: 676, column: 281, scope: !7418)
!7430 = !DILocation(line: 676, column: 212, scope: !7418)
!7431 = !DILocation(line: 676, column: 300, scope: !7432)
!7432 = !DILexicalBlockFile(scope: !1369, file: !565, discriminator: 7)
!7433 = !DILocation(line: 676, column: 300, scope: !1368)
!7434 = !DILocation(line: 676, column: 300, scope: !7435)
!7435 = !DILexicalBlockFile(scope: !1368, file: !565, discriminator: 8)
!7436 = !DILocation(line: 676, column: 300, scope: !7437)
!7437 = !DILexicalBlockFile(scope: !1368, file: !565, discriminator: 9)
!7438 = !DILocation(line: 676, column: 313, scope: !7299)
!7439 = !DILocation(line: 676, column: 313, scope: !1366)
!7440 = !DILocation(line: 676, column: 313, scope: !7441)
!7441 = !DILexicalBlockFile(scope: !1366, file: !565, discriminator: 11)
!7442 = !DILocation(line: 677, column: 35, scope: !1330)
!7443 = !DILocation(line: 677, column: 5, scope: !1330)
!7444 = !DILocation(line: 679, column: 5, scope: !1330)
!7445 = !DILocation(line: 680, column: 1, scope: !1330)
!7446 = !DILocation(line: 57, column: 22, scope: !1316)
!7447 = !DILocation(line: 57, column: 41, scope: !1316)
!7448 = !DILocation(line: 59, column: 5, scope: !1316)
!7449 = !DILocation(line: 59, column: 15, scope: !1316)
!7450 = !DILocation(line: 59, column: 19, scope: !1316)
!7451 = !DILocation(line: 61, column: 9, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !1316, file: !565, line: 61, column: 9)
!7453 = !DILocation(line: 61, column: 16, scope: !7452)
!7454 = !DILocation(line: 61, column: 9, scope: !1316)
!7455 = !DILocation(line: 62, column: 9, scope: !7452)
!7456 = !DILocation(line: 64, column: 9, scope: !1316)
!7457 = !DILocation(line: 64, column: 7, scope: !1316)
!7458 = !DILocation(line: 65, column: 9, scope: !1325)
!7459 = !DILocation(line: 65, column: 11, scope: !1325)
!7460 = !DILocation(line: 65, column: 9, scope: !1316)
!7461 = !DILocation(line: 66, column: 9, scope: !1324)
!7462 = !DILocation(line: 66, column: 14, scope: !7463)
!7463 = !DILexicalBlockFile(scope: !1323, file: !565, discriminator: 1)
!7464 = !DILocation(line: 66, column: 24, scope: !1323)
!7465 = !DILocation(line: 66, column: 54, scope: !1323)
!7466 = !DILocation(line: 66, column: 71, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !1323, file: !565, line: 66, column: 68)
!7468 = !DILocation(line: 66, column: 88, scope: !7467)
!7469 = !DILocation(line: 66, column: 68, scope: !7467)
!7470 = !DILocation(line: 66, column: 98, scope: !7467)
!7471 = !DILocation(line: 66, column: 68, scope: !1323)
!7472 = !DILocation(line: 66, column: 68, scope: !7473)
!7473 = !DILexicalBlockFile(scope: !1323, file: !565, discriminator: 2)
!7474 = !DILocation(line: 66, column: 129, scope: !7475)
!7475 = !DILexicalBlockFile(scope: !7467, file: !565, discriminator: 3)
!7476 = !DILocation(line: 66, column: 147, scope: !7467)
!7477 = !DILocation(line: 66, column: 157, scope: !7467)
!7478 = !DILocation(line: 66, column: 182, scope: !7467)
!7479 = !DILocation(line: 66, column: 113, scope: !7467)
!7480 = !DILocation(line: 66, column: 201, scope: !7481)
!7481 = !DILexicalBlockFile(scope: !1324, file: !565, discriminator: 4)
!7482 = !DILocation(line: 66, column: 201, scope: !1323)
!7483 = !DILocation(line: 66, column: 201, scope: !7484)
!7484 = !DILexicalBlockFile(scope: !1323, file: !565, discriminator: 5)
!7485 = !DILocation(line: 67, column: 9, scope: !1324)
!7486 = !DILocation(line: 69, column: 43, scope: !1316)
!7487 = !DILocation(line: 69, column: 25, scope: !1316)
!7488 = !DILocation(line: 69, column: 7, scope: !1316)
!7489 = !DILocation(line: 69, column: 30, scope: !1316)
!7490 = !DILocation(line: 69, column: 6, scope: !1316)
!7491 = !DILocation(line: 69, column: 41, scope: !1316)
!7492 = !DILocation(line: 71, column: 28, scope: !1316)
!7493 = !DILocation(line: 71, column: 9, scope: !1316)
!7494 = !DILocation(line: 71, column: 7, scope: !1316)
!7495 = !DILocation(line: 72, column: 9, scope: !1329)
!7496 = !DILocation(line: 72, column: 11, scope: !1329)
!7497 = !DILocation(line: 72, column: 9, scope: !1316)
!7498 = !DILocation(line: 73, column: 9, scope: !1328)
!7499 = !DILocation(line: 73, column: 14, scope: !7500)
!7500 = !DILexicalBlockFile(scope: !1327, file: !565, discriminator: 1)
!7501 = !DILocation(line: 73, column: 24, scope: !1327)
!7502 = !DILocation(line: 73, column: 54, scope: !1327)
!7503 = !DILocation(line: 73, column: 66, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !1327, file: !565, line: 73, column: 63)
!7505 = !DILocation(line: 73, column: 83, scope: !7504)
!7506 = !DILocation(line: 73, column: 63, scope: !7504)
!7507 = !DILocation(line: 73, column: 93, scope: !7504)
!7508 = !DILocation(line: 73, column: 63, scope: !1327)
!7509 = !DILocation(line: 73, column: 63, scope: !7510)
!7510 = !DILexicalBlockFile(scope: !1327, file: !565, discriminator: 2)
!7511 = !DILocation(line: 73, column: 124, scope: !7512)
!7512 = !DILexicalBlockFile(scope: !7504, file: !565, discriminator: 3)
!7513 = !DILocation(line: 73, column: 142, scope: !7504)
!7514 = !DILocation(line: 73, column: 152, scope: !7504)
!7515 = !DILocation(line: 73, column: 177, scope: !7504)
!7516 = !DILocation(line: 73, column: 108, scope: !7504)
!7517 = !DILocation(line: 73, column: 196, scope: !7518)
!7518 = !DILexicalBlockFile(scope: !1328, file: !565, discriminator: 4)
!7519 = !DILocation(line: 73, column: 196, scope: !1327)
!7520 = !DILocation(line: 73, column: 196, scope: !7521)
!7521 = !DILexicalBlockFile(scope: !1327, file: !565, discriminator: 5)
!7522 = !DILocation(line: 74, column: 9, scope: !1328)
!7523 = !DILocation(line: 76, column: 43, scope: !1316)
!7524 = !DILocation(line: 76, column: 25, scope: !1316)
!7525 = !DILocation(line: 76, column: 7, scope: !1316)
!7526 = !DILocation(line: 76, column: 30, scope: !1316)
!7527 = !DILocation(line: 76, column: 6, scope: !1316)
!7528 = !DILocation(line: 76, column: 41, scope: !1316)
!7529 = !DILocation(line: 78, column: 12, scope: !1316)
!7530 = !DILocation(line: 78, column: 5, scope: !1316)
!7531 = !DILocation(line: 79, column: 1, scope: !1316)
!7532 = !DILocation(line: 1789, column: 26, scope: !1370)
!7533 = !DILocation(line: 1789, column: 44, scope: !1370)
!7534 = !DILocation(line: 1791, column: 5, scope: !1370)
!7535 = !DILocation(line: 1791, column: 27, scope: !1370)
!7536 = !DILocation(line: 1792, column: 5, scope: !1370)
!7537 = !DILocation(line: 1792, column: 21, scope: !1370)
!7538 = !DILocation(line: 1794, column: 28, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !1370, file: !565, line: 1794, column: 9)
!7540 = !DILocation(line: 1794, column: 10, scope: !7539)
!7541 = !DILocation(line: 1794, column: 9, scope: !1370)
!7542 = !DILocation(line: 1795, column: 25, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7539, file: !565, line: 1794, column: 60)
!7544 = !DILocation(line: 1795, column: 9, scope: !7543)
!7545 = !DILocation(line: 1796, column: 9, scope: !7543)
!7546 = !DILocation(line: 1799, column: 34, scope: !1370)
!7547 = !DILocation(line: 1799, column: 13, scope: !1370)
!7548 = !DILocation(line: 1799, column: 11, scope: !1370)
!7549 = !DILocation(line: 1800, column: 9, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !1370, file: !565, line: 1800, column: 9)
!7551 = !DILocation(line: 1800, column: 16, scope: !7550)
!7552 = !{!1706, !1465, i64 16}
!7553 = !DILocation(line: 1800, column: 26, scope: !7550)
!7554 = !DILocation(line: 1800, column: 40, scope: !7550)
!7555 = !DILocation(line: 1800, column: 43, scope: !7556)
!7556 = !DILexicalBlockFile(scope: !7550, file: !565, discriminator: 1)
!7557 = !DILocation(line: 1800, column: 50, scope: !7550)
!7558 = !DILocation(line: 1800, column: 60, scope: !7550)
!7559 = !DILocation(line: 1800, column: 67, scope: !7550)
!7560 = !DILocation(line: 1800, column: 43, scope: !7550)
!7561 = !DILocation(line: 1800, column: 75, scope: !7550)
!7562 = !DILocation(line: 1800, column: 9, scope: !1370)
!7563 = !DILocation(line: 1801, column: 9, scope: !7550)
!7564 = !DILocation(line: 1803, column: 39, scope: !1370)
!7565 = !DILocation(line: 1803, column: 14, scope: !1370)
!7566 = !DILocation(line: 1803, column: 10, scope: !1370)
!7567 = !DILocation(line: 1804, column: 9, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !1370, file: !565, line: 1804, column: 9)
!7569 = !DILocation(line: 1804, column: 14, scope: !7568)
!7570 = !DILocation(line: 1804, column: 9, scope: !1370)
!7571 = !DILocation(line: 1805, column: 9, scope: !7568)
!7572 = !DILocation(line: 1806, column: 19, scope: !1370)
!7573 = !DILocation(line: 1806, column: 5, scope: !1370)
!7574 = !DILocation(line: 1806, column: 11, scope: !1370)
!7575 = !DILocation(line: 1806, column: 17, scope: !1370)
!7576 = !DILocation(line: 1808, column: 24, scope: !1370)
!7577 = !DILocation(line: 1808, column: 12, scope: !1370)
!7578 = !DILocation(line: 1808, column: 5, scope: !1370)
!7579 = !DILocation(line: 1809, column: 1, scope: !1370)
